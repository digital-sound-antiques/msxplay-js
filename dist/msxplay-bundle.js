var MSXPlayUI =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./entry.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../node_modules/asn1.js/lib/asn1.js":
/*!*******************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var asn1 = exports;\n\nasn1.bignum = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\");\n\nasn1.define = __webpack_require__(/*! ./asn1/api */ \"../node_modules/asn1.js/lib/asn1/api.js\").define;\nasn1.base = __webpack_require__(/*! ./asn1/base */ \"../node_modules/asn1.js/lib/asn1/base/index.js\");\nasn1.constants = __webpack_require__(/*! ./asn1/constants */ \"../node_modules/asn1.js/lib/asn1/constants/index.js\");\nasn1.decoders = __webpack_require__(/*! ./asn1/decoders */ \"../node_modules/asn1.js/lib/asn1/decoders/index.js\");\nasn1.encoders = __webpack_require__(/*! ./asn1/encoders */ \"../node_modules/asn1.js/lib/asn1/encoders/index.js\");\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/asn1.js/lib/asn1.js?");

/***/ }),

/***/ "../node_modules/asn1.js/lib/asn1/api.js":
/*!***********************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/api.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var asn1 = __webpack_require__(/*! ../asn1 */ \"../node_modules/asn1.js/lib/asn1.js\");\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\n\nvar api = exports;\n\napi.define = function define(name, body) {\n  return new Entity(name, body);\n};\n\nfunction Entity(name, body) {\n  this.name = name;\n  this.body = body;\n\n  this.decoders = {};\n  this.encoders = {};\n};\n\nEntity.prototype._createNamed = function createNamed(base) {\n  var named;\n  try {\n    named = __webpack_require__(/*! vm */ \"../node_modules/vm-browserify/index.js\").runInThisContext(\n      '(function ' + this.name + '(entity) {\\n' +\n      '  this._initNamed(entity);\\n' +\n      '})'\n    );\n  } catch (e) {\n    named = function (entity) {\n      this._initNamed(entity);\n    };\n  }\n  inherits(named, base);\n  named.prototype._initNamed = function initnamed(entity) {\n    base.call(this, entity);\n  };\n\n  return new named(this);\n};\n\nEntity.prototype._getDecoder = function _getDecoder(enc) {\n  enc = enc || 'der';\n  // Lazily create decoder\n  if (!this.decoders.hasOwnProperty(enc))\n    this.decoders[enc] = this._createNamed(asn1.decoders[enc]);\n  return this.decoders[enc];\n};\n\nEntity.prototype.decode = function decode(data, enc, options) {\n  return this._getDecoder(enc).decode(data, options);\n};\n\nEntity.prototype._getEncoder = function _getEncoder(enc) {\n  enc = enc || 'der';\n  // Lazily create encoder\n  if (!this.encoders.hasOwnProperty(enc))\n    this.encoders[enc] = this._createNamed(asn1.encoders[enc]);\n  return this.encoders[enc];\n};\n\nEntity.prototype.encode = function encode(data, enc, /* internal */ reporter) {\n  return this._getEncoder(enc).encode(data, reporter);\n};\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/asn1.js/lib/asn1/api.js?");

/***/ }),

/***/ "../node_modules/asn1.js/lib/asn1/base/buffer.js":
/*!*******************************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/base/buffer.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\nvar Reporter = __webpack_require__(/*! ../base */ \"../node_modules/asn1.js/lib/asn1/base/index.js\").Reporter;\nvar Buffer = __webpack_require__(/*! buffer */ \"../node_modules/buffer/index.js\").Buffer;\n\nfunction DecoderBuffer(base, options) {\n  Reporter.call(this, options);\n  if (!Buffer.isBuffer(base)) {\n    this.error('Input not Buffer');\n    return;\n  }\n\n  this.base = base;\n  this.offset = 0;\n  this.length = base.length;\n}\ninherits(DecoderBuffer, Reporter);\nexports.DecoderBuffer = DecoderBuffer;\n\nDecoderBuffer.prototype.save = function save() {\n  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };\n};\n\nDecoderBuffer.prototype.restore = function restore(save) {\n  // Return skipped data\n  var res = new DecoderBuffer(this.base);\n  res.offset = save.offset;\n  res.length = this.offset;\n\n  this.offset = save.offset;\n  Reporter.prototype.restore.call(this, save.reporter);\n\n  return res;\n};\n\nDecoderBuffer.prototype.isEmpty = function isEmpty() {\n  return this.offset === this.length;\n};\n\nDecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {\n  if (this.offset + 1 <= this.length)\n    return this.base.readUInt8(this.offset++, true);\n  else\n    return this.error(fail || 'DecoderBuffer overrun');\n}\n\nDecoderBuffer.prototype.skip = function skip(bytes, fail) {\n  if (!(this.offset + bytes <= this.length))\n    return this.error(fail || 'DecoderBuffer overrun');\n\n  var res = new DecoderBuffer(this.base);\n\n  // Share reporter state\n  res._reporterState = this._reporterState;\n\n  res.offset = this.offset;\n  res.length = this.offset + bytes;\n  this.offset += bytes;\n  return res;\n}\n\nDecoderBuffer.prototype.raw = function raw(save) {\n  return this.base.slice(save ? save.offset : this.offset, this.length);\n}\n\nfunction EncoderBuffer(value, reporter) {\n  if (Array.isArray(value)) {\n    this.length = 0;\n    this.value = value.map(function(item) {\n      if (!(item instanceof EncoderBuffer))\n        item = new EncoderBuffer(item, reporter);\n      this.length += item.length;\n      return item;\n    }, this);\n  } else if (typeof value === 'number') {\n    if (!(0 <= value && value <= 0xff))\n      return reporter.error('non-byte EncoderBuffer value');\n    this.value = value;\n    this.length = 1;\n  } else if (typeof value === 'string') {\n    this.value = value;\n    this.length = Buffer.byteLength(value);\n  } else if (Buffer.isBuffer(value)) {\n    this.value = value;\n    this.length = value.length;\n  } else {\n    return reporter.error('Unsupported type: ' + typeof value);\n  }\n}\nexports.EncoderBuffer = EncoderBuffer;\n\nEncoderBuffer.prototype.join = function join(out, offset) {\n  if (!out)\n    out = new Buffer(this.length);\n  if (!offset)\n    offset = 0;\n\n  if (this.length === 0)\n    return out;\n\n  if (Array.isArray(this.value)) {\n    this.value.forEach(function(item) {\n      item.join(out, offset);\n      offset += item.length;\n    });\n  } else {\n    if (typeof this.value === 'number')\n      out[offset] = this.value;\n    else if (typeof this.value === 'string')\n      out.write(this.value, offset);\n    else if (Buffer.isBuffer(this.value))\n      this.value.copy(out, offset);\n    offset += this.length;\n  }\n\n  return out;\n};\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/asn1.js/lib/asn1/base/buffer.js?");

/***/ }),

/***/ "../node_modules/asn1.js/lib/asn1/base/index.js":
/*!******************************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/base/index.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var base = exports;\n\nbase.Reporter = __webpack_require__(/*! ./reporter */ \"../node_modules/asn1.js/lib/asn1/base/reporter.js\").Reporter;\nbase.DecoderBuffer = __webpack_require__(/*! ./buffer */ \"../node_modules/asn1.js/lib/asn1/base/buffer.js\").DecoderBuffer;\nbase.EncoderBuffer = __webpack_require__(/*! ./buffer */ \"../node_modules/asn1.js/lib/asn1/base/buffer.js\").EncoderBuffer;\nbase.Node = __webpack_require__(/*! ./node */ \"../node_modules/asn1.js/lib/asn1/base/node.js\");\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/asn1.js/lib/asn1/base/index.js?");

/***/ }),

/***/ "../node_modules/asn1.js/lib/asn1/base/node.js":
/*!*****************************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/base/node.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Reporter = __webpack_require__(/*! ../base */ \"../node_modules/asn1.js/lib/asn1/base/index.js\").Reporter;\nvar EncoderBuffer = __webpack_require__(/*! ../base */ \"../node_modules/asn1.js/lib/asn1/base/index.js\").EncoderBuffer;\nvar DecoderBuffer = __webpack_require__(/*! ../base */ \"../node_modules/asn1.js/lib/asn1/base/index.js\").DecoderBuffer;\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"../node_modules/minimalistic-assert/index.js\");\n\n// Supported tags\nvar tags = [\n  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',\n  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',\n  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',\n  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'\n];\n\n// Public methods list\nvar methods = [\n  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',\n  'any', 'contains'\n].concat(tags);\n\n// Overrided methods list\nvar overrided = [\n  '_peekTag', '_decodeTag', '_use',\n  '_decodeStr', '_decodeObjid', '_decodeTime',\n  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',\n\n  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',\n  '_encodeNull', '_encodeInt', '_encodeBool'\n];\n\nfunction Node(enc, parent) {\n  var state = {};\n  this._baseState = state;\n\n  state.enc = enc;\n\n  state.parent = parent || null;\n  state.children = null;\n\n  // State\n  state.tag = null;\n  state.args = null;\n  state.reverseArgs = null;\n  state.choice = null;\n  state.optional = false;\n  state.any = false;\n  state.obj = false;\n  state.use = null;\n  state.useDecoder = null;\n  state.key = null;\n  state['default'] = null;\n  state.explicit = null;\n  state.implicit = null;\n  state.contains = null;\n\n  // Should create new instance on each method\n  if (!state.parent) {\n    state.children = [];\n    this._wrap();\n  }\n}\nmodule.exports = Node;\n\nvar stateProps = [\n  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',\n  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',\n  'implicit', 'contains'\n];\n\nNode.prototype.clone = function clone() {\n  var state = this._baseState;\n  var cstate = {};\n  stateProps.forEach(function(prop) {\n    cstate[prop] = state[prop];\n  });\n  var res = new this.constructor(cstate.parent);\n  res._baseState = cstate;\n  return res;\n};\n\nNode.prototype._wrap = function wrap() {\n  var state = this._baseState;\n  methods.forEach(function(method) {\n    this[method] = function _wrappedMethod() {\n      var clone = new this.constructor(this);\n      state.children.push(clone);\n      return clone[method].apply(clone, arguments);\n    };\n  }, this);\n};\n\nNode.prototype._init = function init(body) {\n  var state = this._baseState;\n\n  assert(state.parent === null);\n  body.call(this);\n\n  // Filter children\n  state.children = state.children.filter(function(child) {\n    return child._baseState.parent === this;\n  }, this);\n  assert.equal(state.children.length, 1, 'Root node can have only one child');\n};\n\nNode.prototype._useArgs = function useArgs(args) {\n  var state = this._baseState;\n\n  // Filter children and args\n  var children = args.filter(function(arg) {\n    return arg instanceof this.constructor;\n  }, this);\n  args = args.filter(function(arg) {\n    return !(arg instanceof this.constructor);\n  }, this);\n\n  if (children.length !== 0) {\n    assert(state.children === null);\n    state.children = children;\n\n    // Replace parent to maintain backward link\n    children.forEach(function(child) {\n      child._baseState.parent = this;\n    }, this);\n  }\n  if (args.length !== 0) {\n    assert(state.args === null);\n    state.args = args;\n    state.reverseArgs = args.map(function(arg) {\n      if (typeof arg !== 'object' || arg.constructor !== Object)\n        return arg;\n\n      var res = {};\n      Object.keys(arg).forEach(function(key) {\n        if (key == (key | 0))\n          key |= 0;\n        var value = arg[key];\n        res[value] = key;\n      });\n      return res;\n    });\n  }\n};\n\n//\n// Overrided methods\n//\n\noverrided.forEach(function(method) {\n  Node.prototype[method] = function _overrided() {\n    var state = this._baseState;\n    throw new Error(method + ' not implemented for encoding: ' + state.enc);\n  };\n});\n\n//\n// Public methods\n//\n\ntags.forEach(function(tag) {\n  Node.prototype[tag] = function _tagMethod() {\n    var state = this._baseState;\n    var args = Array.prototype.slice.call(arguments);\n\n    assert(state.tag === null);\n    state.tag = tag;\n\n    this._useArgs(args);\n\n    return this;\n  };\n});\n\nNode.prototype.use = function use(item) {\n  assert(item);\n  var state = this._baseState;\n\n  assert(state.use === null);\n  state.use = item;\n\n  return this;\n};\n\nNode.prototype.optional = function optional() {\n  var state = this._baseState;\n\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.def = function def(val) {\n  var state = this._baseState;\n\n  assert(state['default'] === null);\n  state['default'] = val;\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.explicit = function explicit(num) {\n  var state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.explicit = num;\n\n  return this;\n};\n\nNode.prototype.implicit = function implicit(num) {\n  var state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.implicit = num;\n\n  return this;\n};\n\nNode.prototype.obj = function obj() {\n  var state = this._baseState;\n  var args = Array.prototype.slice.call(arguments);\n\n  state.obj = true;\n\n  if (args.length !== 0)\n    this._useArgs(args);\n\n  return this;\n};\n\nNode.prototype.key = function key(newKey) {\n  var state = this._baseState;\n\n  assert(state.key === null);\n  state.key = newKey;\n\n  return this;\n};\n\nNode.prototype.any = function any() {\n  var state = this._baseState;\n\n  state.any = true;\n\n  return this;\n};\n\nNode.prototype.choice = function choice(obj) {\n  var state = this._baseState;\n\n  assert(state.choice === null);\n  state.choice = obj;\n  this._useArgs(Object.keys(obj).map(function(key) {\n    return obj[key];\n  }));\n\n  return this;\n};\n\nNode.prototype.contains = function contains(item) {\n  var state = this._baseState;\n\n  assert(state.use === null);\n  state.contains = item;\n\n  return this;\n};\n\n//\n// Decoding\n//\n\nNode.prototype._decode = function decode(input, options) {\n  var state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return input.wrapResult(state.children[0]._decode(input, options));\n\n  var result = state['default'];\n  var present = true;\n\n  var prevKey = null;\n  if (state.key !== null)\n    prevKey = input.enterKey(state.key);\n\n  // Check if tag is there\n  if (state.optional) {\n    var tag = null;\n    if (state.explicit !== null)\n      tag = state.explicit;\n    else if (state.implicit !== null)\n      tag = state.implicit;\n    else if (state.tag !== null)\n      tag = state.tag;\n\n    if (tag === null && !state.any) {\n      // Trial and Error\n      var save = input.save();\n      try {\n        if (state.choice === null)\n          this._decodeGeneric(state.tag, input, options);\n        else\n          this._decodeChoice(input, options);\n        present = true;\n      } catch (e) {\n        present = false;\n      }\n      input.restore(save);\n    } else {\n      present = this._peekTag(input, tag, state.any);\n\n      if (input.isError(present))\n        return present;\n    }\n  }\n\n  // Push object on stack\n  var prevObj;\n  if (state.obj && present)\n    prevObj = input.enterObject();\n\n  if (present) {\n    // Unwrap explicit values\n    if (state.explicit !== null) {\n      var explicit = this._decodeTag(input, state.explicit);\n      if (input.isError(explicit))\n        return explicit;\n      input = explicit;\n    }\n\n    var start = input.offset;\n\n    // Unwrap implicit and normal values\n    if (state.use === null && state.choice === null) {\n      if (state.any)\n        var save = input.save();\n      var body = this._decodeTag(\n        input,\n        state.implicit !== null ? state.implicit : state.tag,\n        state.any\n      );\n      if (input.isError(body))\n        return body;\n\n      if (state.any)\n        result = input.raw(save);\n      else\n        input = body;\n    }\n\n    if (options && options.track && state.tag !== null)\n      options.track(input.path(), start, input.length, 'tagged');\n\n    if (options && options.track && state.tag !== null)\n      options.track(input.path(), input.offset, input.length, 'content');\n\n    // Select proper method for tag\n    if (state.any)\n      result = result;\n    else if (state.choice === null)\n      result = this._decodeGeneric(state.tag, input, options);\n    else\n      result = this._decodeChoice(input, options);\n\n    if (input.isError(result))\n      return result;\n\n    // Decode children\n    if (!state.any && state.choice === null && state.children !== null) {\n      state.children.forEach(function decodeChildren(child) {\n        // NOTE: We are ignoring errors here, to let parser continue with other\n        // parts of encoded data\n        child._decode(input, options);\n      });\n    }\n\n    // Decode contained/encoded by schema, only in bit or octet strings\n    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {\n      var data = new DecoderBuffer(result);\n      result = this._getUse(state.contains, input._reporterState.obj)\n          ._decode(data, options);\n    }\n  }\n\n  // Pop object\n  if (state.obj && present)\n    result = input.leaveObject(prevObj);\n\n  // Set key\n  if (state.key !== null && (result !== null || present === true))\n    input.leaveKey(prevKey, state.key, result);\n  else if (prevKey !== null)\n    input.exitKey(prevKey);\n\n  return result;\n};\n\nNode.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {\n  var state = this._baseState;\n\n  if (tag === 'seq' || tag === 'set')\n    return null;\n  if (tag === 'seqof' || tag === 'setof')\n    return this._decodeList(input, tag, state.args[0], options);\n  else if (/str$/.test(tag))\n    return this._decodeStr(input, tag, options);\n  else if (tag === 'objid' && state.args)\n    return this._decodeObjid(input, state.args[0], state.args[1], options);\n  else if (tag === 'objid')\n    return this._decodeObjid(input, null, null, options);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._decodeTime(input, tag, options);\n  else if (tag === 'null_')\n    return this._decodeNull(input, options);\n  else if (tag === 'bool')\n    return this._decodeBool(input, options);\n  else if (tag === 'objDesc')\n    return this._decodeStr(input, tag, options);\n  else if (tag === 'int' || tag === 'enum')\n    return this._decodeInt(input, state.args && state.args[0], options);\n\n  if (state.use !== null) {\n    return this._getUse(state.use, input._reporterState.obj)\n        ._decode(input, options);\n  } else {\n    return input.error('unknown tag: ' + tag);\n  }\n};\n\nNode.prototype._getUse = function _getUse(entity, obj) {\n\n  var state = this._baseState;\n  // Create altered use decoder if implicit is set\n  state.useDecoder = this._use(entity, obj);\n  assert(state.useDecoder._baseState.parent === null);\n  state.useDecoder = state.useDecoder._baseState.children[0];\n  if (state.implicit !== state.useDecoder._baseState.implicit) {\n    state.useDecoder = state.useDecoder.clone();\n    state.useDecoder._baseState.implicit = state.implicit;\n  }\n  return state.useDecoder;\n};\n\nNode.prototype._decodeChoice = function decodeChoice(input, options) {\n  var state = this._baseState;\n  var result = null;\n  var match = false;\n\n  Object.keys(state.choice).some(function(key) {\n    var save = input.save();\n    var node = state.choice[key];\n    try {\n      var value = node._decode(input, options);\n      if (input.isError(value))\n        return false;\n\n      result = { type: key, value: value };\n      match = true;\n    } catch (e) {\n      input.restore(save);\n      return false;\n    }\n    return true;\n  }, this);\n\n  if (!match)\n    return input.error('Choice not matched');\n\n  return result;\n};\n\n//\n// Encoding\n//\n\nNode.prototype._createEncoderBuffer = function createEncoderBuffer(data) {\n  return new EncoderBuffer(data, this.reporter);\n};\n\nNode.prototype._encode = function encode(data, reporter, parent) {\n  var state = this._baseState;\n  if (state['default'] !== null && state['default'] === data)\n    return;\n\n  var result = this._encodeValue(data, reporter, parent);\n  if (result === undefined)\n    return;\n\n  if (this._skipDefault(result, reporter, parent))\n    return;\n\n  return result;\n};\n\nNode.prototype._encodeValue = function encode(data, reporter, parent) {\n  var state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return state.children[0]._encode(data, reporter || new Reporter());\n\n  var result = null;\n\n  // Set reporter to share it with a child class\n  this.reporter = reporter;\n\n  // Check if data is there\n  if (state.optional && data === undefined) {\n    if (state['default'] !== null)\n      data = state['default']\n    else\n      return;\n  }\n\n  // Encode children first\n  var content = null;\n  var primitive = false;\n  if (state.any) {\n    // Anything that was given is translated to buffer\n    result = this._createEncoderBuffer(data);\n  } else if (state.choice) {\n    result = this._encodeChoice(data, reporter);\n  } else if (state.contains) {\n    content = this._getUse(state.contains, parent)._encode(data, reporter);\n    primitive = true;\n  } else if (state.children) {\n    content = state.children.map(function(child) {\n      if (child._baseState.tag === 'null_')\n        return child._encode(null, reporter, data);\n\n      if (child._baseState.key === null)\n        return reporter.error('Child should have a key');\n      var prevKey = reporter.enterKey(child._baseState.key);\n\n      if (typeof data !== 'object')\n        return reporter.error('Child expected, but input is not object');\n\n      var res = child._encode(data[child._baseState.key], reporter, data);\n      reporter.leaveKey(prevKey);\n\n      return res;\n    }, this).filter(function(child) {\n      return child;\n    });\n    content = this._createEncoderBuffer(content);\n  } else {\n    if (state.tag === 'seqof' || state.tag === 'setof') {\n      // TODO(indutny): this should be thrown on DSL level\n      if (!(state.args && state.args.length === 1))\n        return reporter.error('Too many args for : ' + state.tag);\n\n      if (!Array.isArray(data))\n        return reporter.error('seqof/setof, but data is not Array');\n\n      var child = this.clone();\n      child._baseState.implicit = null;\n      content = this._createEncoderBuffer(data.map(function(item) {\n        var state = this._baseState;\n\n        return this._getUse(state.args[0], data)._encode(item, reporter);\n      }, child));\n    } else if (state.use !== null) {\n      result = this._getUse(state.use, parent)._encode(data, reporter);\n    } else {\n      content = this._encodePrimitive(state.tag, data);\n      primitive = true;\n    }\n  }\n\n  // Encode data itself\n  var result;\n  if (!state.any && state.choice === null) {\n    var tag = state.implicit !== null ? state.implicit : state.tag;\n    var cls = state.implicit === null ? 'universal' : 'context';\n\n    if (tag === null) {\n      if (state.use === null)\n        reporter.error('Tag could be omitted only for .use()');\n    } else {\n      if (state.use === null)\n        result = this._encodeComposite(tag, primitive, cls, content);\n    }\n  }\n\n  // Wrap in explicit\n  if (state.explicit !== null)\n    result = this._encodeComposite(state.explicit, false, 'context', result);\n\n  return result;\n};\n\nNode.prototype._encodeChoice = function encodeChoice(data, reporter) {\n  var state = this._baseState;\n\n  var node = state.choice[data.type];\n  if (!node) {\n    assert(\n        false,\n        data.type + ' not found in ' +\n            JSON.stringify(Object.keys(state.choice)));\n  }\n  return node._encode(data.value, reporter);\n};\n\nNode.prototype._encodePrimitive = function encodePrimitive(tag, data) {\n  var state = this._baseState;\n\n  if (/str$/.test(tag))\n    return this._encodeStr(data, tag);\n  else if (tag === 'objid' && state.args)\n    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);\n  else if (tag === 'objid')\n    return this._encodeObjid(data, null, null);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._encodeTime(data, tag);\n  else if (tag === 'null_')\n    return this._encodeNull();\n  else if (tag === 'int' || tag === 'enum')\n    return this._encodeInt(data, state.args && state.reverseArgs[0]);\n  else if (tag === 'bool')\n    return this._encodeBool(data);\n  else if (tag === 'objDesc')\n    return this._encodeStr(data, tag);\n  else\n    throw new Error('Unsupported tag: ' + tag);\n};\n\nNode.prototype._isNumstr = function isNumstr(str) {\n  return /^[0-9 ]*$/.test(str);\n};\n\nNode.prototype._isPrintstr = function isPrintstr(str) {\n  return /^[A-Za-z0-9 '\\(\\)\\+,\\-\\.\\/:=\\?]*$/.test(str);\n};\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/asn1.js/lib/asn1/base/node.js?");

/***/ }),

/***/ "../node_modules/asn1.js/lib/asn1/base/reporter.js":
/*!*********************************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/base/reporter.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\n\nfunction Reporter(options) {\n  this._reporterState = {\n    obj: null,\n    path: [],\n    options: options || {},\n    errors: []\n  };\n}\nexports.Reporter = Reporter;\n\nReporter.prototype.isError = function isError(obj) {\n  return obj instanceof ReporterError;\n};\n\nReporter.prototype.save = function save() {\n  var state = this._reporterState;\n\n  return { obj: state.obj, pathLen: state.path.length };\n};\n\nReporter.prototype.restore = function restore(data) {\n  var state = this._reporterState;\n\n  state.obj = data.obj;\n  state.path = state.path.slice(0, data.pathLen);\n};\n\nReporter.prototype.enterKey = function enterKey(key) {\n  return this._reporterState.path.push(key);\n};\n\nReporter.prototype.exitKey = function exitKey(index) {\n  var state = this._reporterState;\n\n  state.path = state.path.slice(0, index - 1);\n};\n\nReporter.prototype.leaveKey = function leaveKey(index, key, value) {\n  var state = this._reporterState;\n\n  this.exitKey(index);\n  if (state.obj !== null)\n    state.obj[key] = value;\n};\n\nReporter.prototype.path = function path() {\n  return this._reporterState.path.join('/');\n};\n\nReporter.prototype.enterObject = function enterObject() {\n  var state = this._reporterState;\n\n  var prev = state.obj;\n  state.obj = {};\n  return prev;\n};\n\nReporter.prototype.leaveObject = function leaveObject(prev) {\n  var state = this._reporterState;\n\n  var now = state.obj;\n  state.obj = prev;\n  return now;\n};\n\nReporter.prototype.error = function error(msg) {\n  var err;\n  var state = this._reporterState;\n\n  var inherited = msg instanceof ReporterError;\n  if (inherited) {\n    err = msg;\n  } else {\n    err = new ReporterError(state.path.map(function(elem) {\n      return '[' + JSON.stringify(elem) + ']';\n    }).join(''), msg.message || msg, msg.stack);\n  }\n\n  if (!state.options.partial)\n    throw err;\n\n  if (!inherited)\n    state.errors.push(err);\n\n  return err;\n};\n\nReporter.prototype.wrapResult = function wrapResult(result) {\n  var state = this._reporterState;\n  if (!state.options.partial)\n    return result;\n\n  return {\n    result: this.isError(result) ? null : result,\n    errors: state.errors\n  };\n};\n\nfunction ReporterError(path, msg) {\n  this.path = path;\n  this.rethrow(msg);\n};\ninherits(ReporterError, Error);\n\nReporterError.prototype.rethrow = function rethrow(msg) {\n  this.message = msg + ' at: ' + (this.path || '(shallow)');\n  if (Error.captureStackTrace)\n    Error.captureStackTrace(this, ReporterError);\n\n  if (!this.stack) {\n    try {\n      // IE only adds stack when thrown\n      throw new Error(this.message);\n    } catch (e) {\n      this.stack = e.stack;\n    }\n  }\n  return this;\n};\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/asn1.js/lib/asn1/base/reporter.js?");

/***/ }),

/***/ "../node_modules/asn1.js/lib/asn1/constants/der.js":
/*!*********************************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/constants/der.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var constants = __webpack_require__(/*! ../constants */ \"../node_modules/asn1.js/lib/asn1/constants/index.js\");\n\nexports.tagClass = {\n  0: 'universal',\n  1: 'application',\n  2: 'context',\n  3: 'private'\n};\nexports.tagClassByName = constants._reverse(exports.tagClass);\n\nexports.tag = {\n  0x00: 'end',\n  0x01: 'bool',\n  0x02: 'int',\n  0x03: 'bitstr',\n  0x04: 'octstr',\n  0x05: 'null_',\n  0x06: 'objid',\n  0x07: 'objDesc',\n  0x08: 'external',\n  0x09: 'real',\n  0x0a: 'enum',\n  0x0b: 'embed',\n  0x0c: 'utf8str',\n  0x0d: 'relativeOid',\n  0x10: 'seq',\n  0x11: 'set',\n  0x12: 'numstr',\n  0x13: 'printstr',\n  0x14: 't61str',\n  0x15: 'videostr',\n  0x16: 'ia5str',\n  0x17: 'utctime',\n  0x18: 'gentime',\n  0x19: 'graphstr',\n  0x1a: 'iso646str',\n  0x1b: 'genstr',\n  0x1c: 'unistr',\n  0x1d: 'charstr',\n  0x1e: 'bmpstr'\n};\nexports.tagByName = constants._reverse(exports.tag);\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/asn1.js/lib/asn1/constants/der.js?");

/***/ }),

/***/ "../node_modules/asn1.js/lib/asn1/constants/index.js":
/*!***********************************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/constants/index.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var constants = exports;\n\n// Helper\nconstants._reverse = function reverse(map) {\n  var res = {};\n\n  Object.keys(map).forEach(function(key) {\n    // Convert key to integer if it is stringified\n    if ((key | 0) == key)\n      key = key | 0;\n\n    var value = map[key];\n    res[value] = key;\n  });\n\n  return res;\n};\n\nconstants.der = __webpack_require__(/*! ./der */ \"../node_modules/asn1.js/lib/asn1/constants/der.js\");\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/asn1.js/lib/asn1/constants/index.js?");

/***/ }),

/***/ "../node_modules/asn1.js/lib/asn1/decoders/der.js":
/*!********************************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/decoders/der.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\n\nvar asn1 = __webpack_require__(/*! ../../asn1 */ \"../node_modules/asn1.js/lib/asn1.js\");\nvar base = asn1.base;\nvar bignum = asn1.bignum;\n\n// Import DER constants\nvar der = asn1.constants.der;\n\nfunction DERDecoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n};\nmodule.exports = DERDecoder;\n\nDERDecoder.prototype.decode = function decode(data, options) {\n  if (!(data instanceof base.DecoderBuffer))\n    data = new base.DecoderBuffer(data, options);\n\n  return this.tree._decode(data, options);\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  base.Node.call(this, 'der', parent);\n}\ninherits(DERNode, base.Node);\n\nDERNode.prototype._peekTag = function peekTag(buffer, tag, any) {\n  if (buffer.isEmpty())\n    return false;\n\n  var state = buffer.save();\n  var decodedTag = derDecodeTag(buffer, 'Failed to peek tag: \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  buffer.restore(state);\n\n  return decodedTag.tag === tag || decodedTag.tagStr === tag ||\n    (decodedTag.tagStr + 'of') === tag || any;\n};\n\nDERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {\n  var decodedTag = derDecodeTag(buffer,\n                                'Failed to decode tag of \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  var len = derDecodeLen(buffer,\n                         decodedTag.primitive,\n                         'Failed to get length of \"' + tag + '\"');\n\n  // Failure\n  if (buffer.isError(len))\n    return len;\n\n  if (!any &&\n      decodedTag.tag !== tag &&\n      decodedTag.tagStr !== tag &&\n      decodedTag.tagStr + 'of' !== tag) {\n    return buffer.error('Failed to match tag: \"' + tag + '\"');\n  }\n\n  if (decodedTag.primitive || len !== null)\n    return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n\n  // Indefinite length... find END tag\n  var state = buffer.save();\n  var res = this._skipUntilEnd(\n      buffer,\n      'Failed to skip indefinite length body: \"' + this.tag + '\"');\n  if (buffer.isError(res))\n    return res;\n\n  len = buffer.offset - state.offset;\n  buffer.restore(state);\n  return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n};\n\nDERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {\n  while (true) {\n    var tag = derDecodeTag(buffer, fail);\n    if (buffer.isError(tag))\n      return tag;\n    var len = derDecodeLen(buffer, tag.primitive, fail);\n    if (buffer.isError(len))\n      return len;\n\n    var res;\n    if (tag.primitive || len !== null)\n      res = buffer.skip(len)\n    else\n      res = this._skipUntilEnd(buffer, fail);\n\n    // Failure\n    if (buffer.isError(res))\n      return res;\n\n    if (tag.tagStr === 'end')\n      break;\n  }\n};\n\nDERNode.prototype._decodeList = function decodeList(buffer, tag, decoder,\n                                                    options) {\n  var result = [];\n  while (!buffer.isEmpty()) {\n    var possibleEnd = this._peekTag(buffer, 'end');\n    if (buffer.isError(possibleEnd))\n      return possibleEnd;\n\n    var res = decoder.decode(buffer, 'der', options);\n    if (buffer.isError(res) && possibleEnd)\n      break;\n    result.push(res);\n  }\n  return result;\n};\n\nDERNode.prototype._decodeStr = function decodeStr(buffer, tag) {\n  if (tag === 'bitstr') {\n    var unused = buffer.readUInt8();\n    if (buffer.isError(unused))\n      return unused;\n    return { unused: unused, data: buffer.raw() };\n  } else if (tag === 'bmpstr') {\n    var raw = buffer.raw();\n    if (raw.length % 2 === 1)\n      return buffer.error('Decoding of string type: bmpstr length mismatch');\n\n    var str = '';\n    for (var i = 0; i < raw.length / 2; i++) {\n      str += String.fromCharCode(raw.readUInt16BE(i * 2));\n    }\n    return str;\n  } else if (tag === 'numstr') {\n    var numstr = buffer.raw().toString('ascii');\n    if (!this._isNumstr(numstr)) {\n      return buffer.error('Decoding of string type: ' +\n                          'numstr unsupported characters');\n    }\n    return numstr;\n  } else if (tag === 'octstr') {\n    return buffer.raw();\n  } else if (tag === 'objDesc') {\n    return buffer.raw();\n  } else if (tag === 'printstr') {\n    var printstr = buffer.raw().toString('ascii');\n    if (!this._isPrintstr(printstr)) {\n      return buffer.error('Decoding of string type: ' +\n                          'printstr unsupported characters');\n    }\n    return printstr;\n  } else if (/str$/.test(tag)) {\n    return buffer.raw().toString();\n  } else {\n    return buffer.error('Decoding of string type: ' + tag + ' unsupported');\n  }\n};\n\nDERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {\n  var result;\n  var identifiers = [];\n  var ident = 0;\n  while (!buffer.isEmpty()) {\n    var subident = buffer.readUInt8();\n    ident <<= 7;\n    ident |= subident & 0x7f;\n    if ((subident & 0x80) === 0) {\n      identifiers.push(ident);\n      ident = 0;\n    }\n  }\n  if (subident & 0x80)\n    identifiers.push(ident);\n\n  var first = (identifiers[0] / 40) | 0;\n  var second = identifiers[0] % 40;\n\n  if (relative)\n    result = identifiers;\n  else\n    result = [first, second].concat(identifiers.slice(1));\n\n  if (values) {\n    var tmp = values[result.join(' ')];\n    if (tmp === undefined)\n      tmp = values[result.join('.')];\n    if (tmp !== undefined)\n      result = tmp;\n  }\n\n  return result;\n};\n\nDERNode.prototype._decodeTime = function decodeTime(buffer, tag) {\n  var str = buffer.raw().toString();\n  if (tag === 'gentime') {\n    var year = str.slice(0, 4) | 0;\n    var mon = str.slice(4, 6) | 0;\n    var day = str.slice(6, 8) | 0;\n    var hour = str.slice(8, 10) | 0;\n    var min = str.slice(10, 12) | 0;\n    var sec = str.slice(12, 14) | 0;\n  } else if (tag === 'utctime') {\n    var year = str.slice(0, 2) | 0;\n    var mon = str.slice(2, 4) | 0;\n    var day = str.slice(4, 6) | 0;\n    var hour = str.slice(6, 8) | 0;\n    var min = str.slice(8, 10) | 0;\n    var sec = str.slice(10, 12) | 0;\n    if (year < 70)\n      year = 2000 + year;\n    else\n      year = 1900 + year;\n  } else {\n    return buffer.error('Decoding ' + tag + ' time is not supported yet');\n  }\n\n  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);\n};\n\nDERNode.prototype._decodeNull = function decodeNull(buffer) {\n  return null;\n};\n\nDERNode.prototype._decodeBool = function decodeBool(buffer) {\n  var res = buffer.readUInt8();\n  if (buffer.isError(res))\n    return res;\n  else\n    return res !== 0;\n};\n\nDERNode.prototype._decodeInt = function decodeInt(buffer, values) {\n  // Bigint, return as it is (assume big endian)\n  var raw = buffer.raw();\n  var res = new bignum(raw);\n\n  if (values)\n    res = values[res.toString(10)] || res;\n\n  return res;\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getDecoder('der').tree;\n};\n\n// Utility methods\n\nfunction derDecodeTag(buf, fail) {\n  var tag = buf.readUInt8(fail);\n  if (buf.isError(tag))\n    return tag;\n\n  var cls = der.tagClass[tag >> 6];\n  var primitive = (tag & 0x20) === 0;\n\n  // Multi-octet tag - load\n  if ((tag & 0x1f) === 0x1f) {\n    var oct = tag;\n    tag = 0;\n    while ((oct & 0x80) === 0x80) {\n      oct = buf.readUInt8(fail);\n      if (buf.isError(oct))\n        return oct;\n\n      tag <<= 7;\n      tag |= oct & 0x7f;\n    }\n  } else {\n    tag &= 0x1f;\n  }\n  var tagStr = der.tag[tag];\n\n  return {\n    cls: cls,\n    primitive: primitive,\n    tag: tag,\n    tagStr: tagStr\n  };\n}\n\nfunction derDecodeLen(buf, primitive, fail) {\n  var len = buf.readUInt8(fail);\n  if (buf.isError(len))\n    return len;\n\n  // Indefinite form\n  if (!primitive && len === 0x80)\n    return null;\n\n  // Definite form\n  if ((len & 0x80) === 0) {\n    // Short form\n    return len;\n  }\n\n  // Long form\n  var num = len & 0x7f;\n  if (num > 4)\n    return buf.error('length octect is too long');\n\n  len = 0;\n  for (var i = 0; i < num; i++) {\n    len <<= 8;\n    var j = buf.readUInt8(fail);\n    if (buf.isError(j))\n      return j;\n    len |= j;\n  }\n\n  return len;\n}\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/asn1.js/lib/asn1/decoders/der.js?");

/***/ }),

/***/ "../node_modules/asn1.js/lib/asn1/decoders/index.js":
/*!**********************************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/decoders/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var decoders = exports;\n\ndecoders.der = __webpack_require__(/*! ./der */ \"../node_modules/asn1.js/lib/asn1/decoders/der.js\");\ndecoders.pem = __webpack_require__(/*! ./pem */ \"../node_modules/asn1.js/lib/asn1/decoders/pem.js\");\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/asn1.js/lib/asn1/decoders/index.js?");

/***/ }),

/***/ "../node_modules/asn1.js/lib/asn1/decoders/pem.js":
/*!********************************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/decoders/pem.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\nvar Buffer = __webpack_require__(/*! buffer */ \"../node_modules/buffer/index.js\").Buffer;\n\nvar DERDecoder = __webpack_require__(/*! ./der */ \"../node_modules/asn1.js/lib/asn1/decoders/der.js\");\n\nfunction PEMDecoder(entity) {\n  DERDecoder.call(this, entity);\n  this.enc = 'pem';\n};\ninherits(PEMDecoder, DERDecoder);\nmodule.exports = PEMDecoder;\n\nPEMDecoder.prototype.decode = function decode(data, options) {\n  var lines = data.toString().split(/[\\r\\n]+/g);\n\n  var label = options.label.toUpperCase();\n\n  var re = /^-----(BEGIN|END) ([^-]+)-----$/;\n  var start = -1;\n  var end = -1;\n  for (var i = 0; i < lines.length; i++) {\n    var match = lines[i].match(re);\n    if (match === null)\n      continue;\n\n    if (match[2] !== label)\n      continue;\n\n    if (start === -1) {\n      if (match[1] !== 'BEGIN')\n        break;\n      start = i;\n    } else {\n      if (match[1] !== 'END')\n        break;\n      end = i;\n      break;\n    }\n  }\n  if (start === -1 || end === -1)\n    throw new Error('PEM section not found for: ' + label);\n\n  var base64 = lines.slice(start + 1, end).join('');\n  // Remove excessive symbols\n  base64.replace(/[^a-z0-9\\+\\/=]+/gi, '');\n\n  var input = new Buffer(base64, 'base64');\n  return DERDecoder.prototype.decode.call(this, input, options);\n};\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/asn1.js/lib/asn1/decoders/pem.js?");

/***/ }),

/***/ "../node_modules/asn1.js/lib/asn1/encoders/der.js":
/*!********************************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/encoders/der.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\nvar Buffer = __webpack_require__(/*! buffer */ \"../node_modules/buffer/index.js\").Buffer;\n\nvar asn1 = __webpack_require__(/*! ../../asn1 */ \"../node_modules/asn1.js/lib/asn1.js\");\nvar base = asn1.base;\n\n// Import DER constants\nvar der = asn1.constants.der;\n\nfunction DEREncoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n};\nmodule.exports = DEREncoder;\n\nDEREncoder.prototype.encode = function encode(data, reporter) {\n  return this.tree._encode(data, reporter).join();\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  base.Node.call(this, 'der', parent);\n}\ninherits(DERNode, base.Node);\n\nDERNode.prototype._encodeComposite = function encodeComposite(tag,\n                                                              primitive,\n                                                              cls,\n                                                              content) {\n  var encodedTag = encodeTag(tag, primitive, cls, this.reporter);\n\n  // Short form\n  if (content.length < 0x80) {\n    var header = new Buffer(2);\n    header[0] = encodedTag;\n    header[1] = content.length;\n    return this._createEncoderBuffer([ header, content ]);\n  }\n\n  // Long form\n  // Count octets required to store length\n  var lenOctets = 1;\n  for (var i = content.length; i >= 0x100; i >>= 8)\n    lenOctets++;\n\n  var header = new Buffer(1 + 1 + lenOctets);\n  header[0] = encodedTag;\n  header[1] = 0x80 | lenOctets;\n\n  for (var i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)\n    header[i] = j & 0xff;\n\n  return this._createEncoderBuffer([ header, content ]);\n};\n\nDERNode.prototype._encodeStr = function encodeStr(str, tag) {\n  if (tag === 'bitstr') {\n    return this._createEncoderBuffer([ str.unused | 0, str.data ]);\n  } else if (tag === 'bmpstr') {\n    var buf = new Buffer(str.length * 2);\n    for (var i = 0; i < str.length; i++) {\n      buf.writeUInt16BE(str.charCodeAt(i), i * 2);\n    }\n    return this._createEncoderBuffer(buf);\n  } else if (tag === 'numstr') {\n    if (!this._isNumstr(str)) {\n      return this.reporter.error('Encoding of string type: numstr supports ' +\n                                 'only digits and space');\n    }\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'printstr') {\n    if (!this._isPrintstr(str)) {\n      return this.reporter.error('Encoding of string type: printstr supports ' +\n                                 'only latin upper and lower case letters, ' +\n                                 'digits, space, apostrophe, left and rigth ' +\n                                 'parenthesis, plus sign, comma, hyphen, ' +\n                                 'dot, slash, colon, equal sign, ' +\n                                 'question mark');\n    }\n    return this._createEncoderBuffer(str);\n  } else if (/str$/.test(tag)) {\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'objDesc') {\n    return this._createEncoderBuffer(str);\n  } else {\n    return this.reporter.error('Encoding of string type: ' + tag +\n                               ' unsupported');\n  }\n};\n\nDERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {\n  if (typeof id === 'string') {\n    if (!values)\n      return this.reporter.error('string objid given, but no values map found');\n    if (!values.hasOwnProperty(id))\n      return this.reporter.error('objid not found in values map');\n    id = values[id].split(/[\\s\\.]+/g);\n    for (var i = 0; i < id.length; i++)\n      id[i] |= 0;\n  } else if (Array.isArray(id)) {\n    id = id.slice();\n    for (var i = 0; i < id.length; i++)\n      id[i] |= 0;\n  }\n\n  if (!Array.isArray(id)) {\n    return this.reporter.error('objid() should be either array or string, ' +\n                               'got: ' + JSON.stringify(id));\n  }\n\n  if (!relative) {\n    if (id[1] >= 40)\n      return this.reporter.error('Second objid identifier OOB');\n    id.splice(0, 2, id[0] * 40 + id[1]);\n  }\n\n  // Count number of octets\n  var size = 0;\n  for (var i = 0; i < id.length; i++) {\n    var ident = id[i];\n    for (size++; ident >= 0x80; ident >>= 7)\n      size++;\n  }\n\n  var objid = new Buffer(size);\n  var offset = objid.length - 1;\n  for (var i = id.length - 1; i >= 0; i--) {\n    var ident = id[i];\n    objid[offset--] = ident & 0x7f;\n    while ((ident >>= 7) > 0)\n      objid[offset--] = 0x80 | (ident & 0x7f);\n  }\n\n  return this._createEncoderBuffer(objid);\n};\n\nfunction two(num) {\n  if (num < 10)\n    return '0' + num;\n  else\n    return num;\n}\n\nDERNode.prototype._encodeTime = function encodeTime(time, tag) {\n  var str;\n  var date = new Date(time);\n\n  if (tag === 'gentime') {\n    str = [\n      two(date.getFullYear()),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else if (tag === 'utctime') {\n    str = [\n      two(date.getFullYear() % 100),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else {\n    this.reporter.error('Encoding ' + tag + ' time is not supported yet');\n  }\n\n  return this._encodeStr(str, 'octstr');\n};\n\nDERNode.prototype._encodeNull = function encodeNull() {\n  return this._createEncoderBuffer('');\n};\n\nDERNode.prototype._encodeInt = function encodeInt(num, values) {\n  if (typeof num === 'string') {\n    if (!values)\n      return this.reporter.error('String int or enum given, but no values map');\n    if (!values.hasOwnProperty(num)) {\n      return this.reporter.error('Values map doesn\\'t contain: ' +\n                                 JSON.stringify(num));\n    }\n    num = values[num];\n  }\n\n  // Bignum, assume big endian\n  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {\n    var numArray = num.toArray();\n    if (!num.sign && numArray[0] & 0x80) {\n      numArray.unshift(0);\n    }\n    num = new Buffer(numArray);\n  }\n\n  if (Buffer.isBuffer(num)) {\n    var size = num.length;\n    if (num.length === 0)\n      size++;\n\n    var out = new Buffer(size);\n    num.copy(out);\n    if (num.length === 0)\n      out[0] = 0\n    return this._createEncoderBuffer(out);\n  }\n\n  if (num < 0x80)\n    return this._createEncoderBuffer(num);\n\n  if (num < 0x100)\n    return this._createEncoderBuffer([0, num]);\n\n  var size = 1;\n  for (var i = num; i >= 0x100; i >>= 8)\n    size++;\n\n  var out = new Array(size);\n  for (var i = out.length - 1; i >= 0; i--) {\n    out[i] = num & 0xff;\n    num >>= 8;\n  }\n  if(out[0] & 0x80) {\n    out.unshift(0);\n  }\n\n  return this._createEncoderBuffer(new Buffer(out));\n};\n\nDERNode.prototype._encodeBool = function encodeBool(value) {\n  return this._createEncoderBuffer(value ? 0xff : 0);\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getEncoder('der').tree;\n};\n\nDERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {\n  var state = this._baseState;\n  var i;\n  if (state['default'] === null)\n    return false;\n\n  var data = dataBuffer.join();\n  if (state.defaultBuffer === undefined)\n    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();\n\n  if (data.length !== state.defaultBuffer.length)\n    return false;\n\n  for (i=0; i < data.length; i++)\n    if (data[i] !== state.defaultBuffer[i])\n      return false;\n\n  return true;\n};\n\n// Utility methods\n\nfunction encodeTag(tag, primitive, cls, reporter) {\n  var res;\n\n  if (tag === 'seqof')\n    tag = 'seq';\n  else if (tag === 'setof')\n    tag = 'set';\n\n  if (der.tagByName.hasOwnProperty(tag))\n    res = der.tagByName[tag];\n  else if (typeof tag === 'number' && (tag | 0) === tag)\n    res = tag;\n  else\n    return reporter.error('Unknown tag: ' + tag);\n\n  if (res >= 0x1f)\n    return reporter.error('Multi-octet tag encoding unsupported');\n\n  if (!primitive)\n    res |= 0x20;\n\n  res |= (der.tagClassByName[cls || 'universal'] << 6);\n\n  return res;\n}\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/asn1.js/lib/asn1/encoders/der.js?");

/***/ }),

/***/ "../node_modules/asn1.js/lib/asn1/encoders/index.js":
/*!**********************************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/encoders/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var encoders = exports;\n\nencoders.der = __webpack_require__(/*! ./der */ \"../node_modules/asn1.js/lib/asn1/encoders/der.js\");\nencoders.pem = __webpack_require__(/*! ./pem */ \"../node_modules/asn1.js/lib/asn1/encoders/pem.js\");\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/asn1.js/lib/asn1/encoders/index.js?");

/***/ }),

/***/ "../node_modules/asn1.js/lib/asn1/encoders/pem.js":
/*!********************************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/encoders/pem.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\n\nvar DEREncoder = __webpack_require__(/*! ./der */ \"../node_modules/asn1.js/lib/asn1/encoders/der.js\");\n\nfunction PEMEncoder(entity) {\n  DEREncoder.call(this, entity);\n  this.enc = 'pem';\n};\ninherits(PEMEncoder, DEREncoder);\nmodule.exports = PEMEncoder;\n\nPEMEncoder.prototype.encode = function encode(data, options) {\n  var buf = DEREncoder.prototype.encode.call(this, data);\n\n  var p = buf.toString('base64');\n  var out = [ '-----BEGIN ' + options.label + '-----' ];\n  for (var i = 0; i < p.length; i += 64)\n    out.push(p.slice(i, i + 64));\n  out.push('-----END ' + options.label + '-----');\n  return out.join('\\n');\n};\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/asn1.js/lib/asn1/encoders/pem.js?");

/***/ }),

/***/ "../node_modules/base64-js/index.js":
/*!******************************************!*\
  !*** ../node_modules/base64-js/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/base64-js/index.js?");

/***/ }),

/***/ "../node_modules/bn.js/lib/bn.js":
/*!***************************************!*\
  !*** ../node_modules/bn.js/lib/bn.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module) {(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = __webpack_require__(/*! buffer */ 2).Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})( false || module, this);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/module.js */ \"../node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/bn.js/lib/bn.js?");

/***/ }),

/***/ "../node_modules/brorand/index.js":
/*!****************************************!*\
  !*** ../node_modules/brorand/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = __webpack_require__(/*! crypto */ 3);\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/brorand/index.js?");

/***/ }),

/***/ "../node_modules/browserify-aes/aes.js":
/*!*********************************************!*\
  !*** ../node_modules/browserify-aes/aes.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// based on the aes implimentation in triple sec\n// https://github.com/keybase/triplesec\n// which is in turn based on the one from crypto-js\n// https://code.google.com/p/crypto-js/\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\n\nfunction asUInt32Array (buf) {\n  if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n\n  var len = (buf.length / 4) | 0\n  var out = new Array(len)\n\n  for (var i = 0; i < len; i++) {\n    out[i] = buf.readUInt32BE(i * 4)\n  }\n\n  return out\n}\n\nfunction scrubVec (v) {\n  for (var i = 0; i < v.length; v++) {\n    v[i] = 0\n  }\n}\n\nfunction cryptBlock (M, keySchedule, SUB_MIX, SBOX, nRounds) {\n  var SUB_MIX0 = SUB_MIX[0]\n  var SUB_MIX1 = SUB_MIX[1]\n  var SUB_MIX2 = SUB_MIX[2]\n  var SUB_MIX3 = SUB_MIX[3]\n\n  var s0 = M[0] ^ keySchedule[0]\n  var s1 = M[1] ^ keySchedule[1]\n  var s2 = M[2] ^ keySchedule[2]\n  var s3 = M[3] ^ keySchedule[3]\n  var t0, t1, t2, t3\n  var ksRow = 4\n\n  for (var round = 1; round < nRounds; round++) {\n    t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[(s1 >>> 16) & 0xff] ^ SUB_MIX2[(s2 >>> 8) & 0xff] ^ SUB_MIX3[s3 & 0xff] ^ keySchedule[ksRow++]\n    t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[(s2 >>> 16) & 0xff] ^ SUB_MIX2[(s3 >>> 8) & 0xff] ^ SUB_MIX3[s0 & 0xff] ^ keySchedule[ksRow++]\n    t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[(s3 >>> 16) & 0xff] ^ SUB_MIX2[(s0 >>> 8) & 0xff] ^ SUB_MIX3[s1 & 0xff] ^ keySchedule[ksRow++]\n    t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[(s0 >>> 16) & 0xff] ^ SUB_MIX2[(s1 >>> 8) & 0xff] ^ SUB_MIX3[s2 & 0xff] ^ keySchedule[ksRow++]\n    s0 = t0\n    s1 = t1\n    s2 = t2\n    s3 = t3\n  }\n\n  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]\n  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]\n  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]\n  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]\n  t0 = t0 >>> 0\n  t1 = t1 >>> 0\n  t2 = t2 >>> 0\n  t3 = t3 >>> 0\n\n  return [t0, t1, t2, t3]\n}\n\n// AES constants\nvar RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]\nvar G = (function () {\n  // Compute double table\n  var d = new Array(256)\n  for (var j = 0; j < 256; j++) {\n    if (j < 128) {\n      d[j] = j << 1\n    } else {\n      d[j] = (j << 1) ^ 0x11b\n    }\n  }\n\n  var SBOX = []\n  var INV_SBOX = []\n  var SUB_MIX = [[], [], [], []]\n  var INV_SUB_MIX = [[], [], [], []]\n\n  // Walk GF(2^8)\n  var x = 0\n  var xi = 0\n  for (var i = 0; i < 256; ++i) {\n    // Compute sbox\n    var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)\n    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63\n    SBOX[x] = sx\n    INV_SBOX[sx] = x\n\n    // Compute multiplication\n    var x2 = d[x]\n    var x4 = d[x2]\n    var x8 = d[x4]\n\n    // Compute sub bytes, mix columns tables\n    var t = (d[sx] * 0x101) ^ (sx * 0x1010100)\n    SUB_MIX[0][x] = (t << 24) | (t >>> 8)\n    SUB_MIX[1][x] = (t << 16) | (t >>> 16)\n    SUB_MIX[2][x] = (t << 8) | (t >>> 24)\n    SUB_MIX[3][x] = t\n\n    // Compute inv sub bytes, inv mix columns tables\n    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)\n    INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)\n    INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)\n    INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)\n    INV_SUB_MIX[3][sx] = t\n\n    if (x === 0) {\n      x = xi = 1\n    } else {\n      x = x2 ^ d[d[d[x8 ^ x2]]]\n      xi ^= d[d[xi]]\n    }\n  }\n\n  return {\n    SBOX: SBOX,\n    INV_SBOX: INV_SBOX,\n    SUB_MIX: SUB_MIX,\n    INV_SUB_MIX: INV_SUB_MIX\n  }\n})()\n\nfunction AES (key) {\n  this._key = asUInt32Array(key)\n  this._reset()\n}\n\nAES.blockSize = 4 * 4\nAES.keySize = 256 / 8\nAES.prototype.blockSize = AES.blockSize\nAES.prototype.keySize = AES.keySize\nAES.prototype._reset = function () {\n  var keyWords = this._key\n  var keySize = keyWords.length\n  var nRounds = keySize + 6\n  var ksRows = (nRounds + 1) * 4\n\n  var keySchedule = []\n  for (var k = 0; k < keySize; k++) {\n    keySchedule[k] = keyWords[k]\n  }\n\n  for (k = keySize; k < ksRows; k++) {\n    var t = keySchedule[k - 1]\n\n    if (k % keySize === 0) {\n      t = (t << 8) | (t >>> 24)\n      t =\n        (G.SBOX[t >>> 24] << 24) |\n        (G.SBOX[(t >>> 16) & 0xff] << 16) |\n        (G.SBOX[(t >>> 8) & 0xff] << 8) |\n        (G.SBOX[t & 0xff])\n\n      t ^= RCON[(k / keySize) | 0] << 24\n    } else if (keySize > 6 && k % keySize === 4) {\n      t =\n        (G.SBOX[t >>> 24] << 24) |\n        (G.SBOX[(t >>> 16) & 0xff] << 16) |\n        (G.SBOX[(t >>> 8) & 0xff] << 8) |\n        (G.SBOX[t & 0xff])\n    }\n\n    keySchedule[k] = keySchedule[k - keySize] ^ t\n  }\n\n  var invKeySchedule = []\n  for (var ik = 0; ik < ksRows; ik++) {\n    var ksR = ksRows - ik\n    var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)]\n\n    if (ik < 4 || ksR <= 4) {\n      invKeySchedule[ik] = tt\n    } else {\n      invKeySchedule[ik] =\n        G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^\n        G.INV_SUB_MIX[1][G.SBOX[(tt >>> 16) & 0xff]] ^\n        G.INV_SUB_MIX[2][G.SBOX[(tt >>> 8) & 0xff]] ^\n        G.INV_SUB_MIX[3][G.SBOX[tt & 0xff]]\n    }\n  }\n\n  this._nRounds = nRounds\n  this._keySchedule = keySchedule\n  this._invKeySchedule = invKeySchedule\n}\n\nAES.prototype.encryptBlockRaw = function (M) {\n  M = asUInt32Array(M)\n  return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds)\n}\n\nAES.prototype.encryptBlock = function (M) {\n  var out = this.encryptBlockRaw(M)\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[1], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[3], 12)\n  return buf\n}\n\nAES.prototype.decryptBlock = function (M) {\n  M = asUInt32Array(M)\n\n  // swap\n  var m1 = M[1]\n  M[1] = M[3]\n  M[3] = m1\n\n  var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds)\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[3], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[1], 12)\n  return buf\n}\n\nAES.prototype.scrub = function () {\n  scrubVec(this._keySchedule)\n  scrubVec(this._invKeySchedule)\n  scrubVec(this._key)\n}\n\nmodule.exports.AES = AES\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/browserify-aes/aes.js?");

/***/ }),

/***/ "../node_modules/browserify-aes/authCipher.js":
/*!****************************************************!*\
  !*** ../node_modules/browserify-aes/authCipher.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var aes = __webpack_require__(/*! ./aes */ \"../node_modules/browserify-aes/aes.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\nvar Transform = __webpack_require__(/*! cipher-base */ \"../node_modules/cipher-base/index.js\")\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\nvar GHASH = __webpack_require__(/*! ./ghash */ \"../node_modules/browserify-aes/ghash.js\")\nvar xor = __webpack_require__(/*! buffer-xor */ \"../node_modules/buffer-xor/index.js\")\nvar incr32 = __webpack_require__(/*! ./incr32 */ \"../node_modules/browserify-aes/incr32.js\")\n\nfunction xorTest (a, b) {\n  var out = 0\n  if (a.length !== b.length) out++\n\n  var len = Math.min(a.length, b.length)\n  for (var i = 0; i < len; ++i) {\n    out += (a[i] ^ b[i])\n  }\n\n  return out\n}\n\nfunction calcIv (self, iv, ck) {\n  if (iv.length === 12) {\n    self._finID = Buffer.concat([iv, Buffer.from([0, 0, 0, 1])])\n    return Buffer.concat([iv, Buffer.from([0, 0, 0, 2])])\n  }\n  var ghash = new GHASH(ck)\n  var len = iv.length\n  var toPad = len % 16\n  ghash.update(iv)\n  if (toPad) {\n    toPad = 16 - toPad\n    ghash.update(Buffer.alloc(toPad, 0))\n  }\n  ghash.update(Buffer.alloc(8, 0))\n  var ivBits = len * 8\n  var tail = Buffer.alloc(8)\n  tail.writeUIntBE(ivBits, 0, 8)\n  ghash.update(tail)\n  self._finID = ghash.state\n  var out = Buffer.from(self._finID)\n  incr32(out)\n  return out\n}\nfunction StreamCipher (mode, key, iv, decrypt) {\n  Transform.call(this)\n\n  var h = Buffer.alloc(4, 0)\n\n  this._cipher = new aes.AES(key)\n  var ck = this._cipher.encryptBlock(h)\n  this._ghash = new GHASH(ck)\n  iv = calcIv(this, iv, ck)\n\n  this._prev = Buffer.from(iv)\n  this._cache = Buffer.allocUnsafe(0)\n  this._secCache = Buffer.allocUnsafe(0)\n  this._decrypt = decrypt\n  this._alen = 0\n  this._len = 0\n  this._mode = mode\n\n  this._authTag = null\n  this._called = false\n}\n\ninherits(StreamCipher, Transform)\n\nStreamCipher.prototype._update = function (chunk) {\n  if (!this._called && this._alen) {\n    var rump = 16 - (this._alen % 16)\n    if (rump < 16) {\n      rump = Buffer.alloc(rump, 0)\n      this._ghash.update(rump)\n    }\n  }\n\n  this._called = true\n  var out = this._mode.encrypt(this, chunk)\n  if (this._decrypt) {\n    this._ghash.update(chunk)\n  } else {\n    this._ghash.update(out)\n  }\n  this._len += chunk.length\n  return out\n}\n\nStreamCipher.prototype._final = function () {\n  if (this._decrypt && !this._authTag) throw new Error('Unsupported state or unable to authenticate data')\n\n  var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID))\n  if (this._decrypt && xorTest(tag, this._authTag)) throw new Error('Unsupported state or unable to authenticate data')\n\n  this._authTag = tag\n  this._cipher.scrub()\n}\n\nStreamCipher.prototype.getAuthTag = function getAuthTag () {\n  if (this._decrypt || !Buffer.isBuffer(this._authTag)) throw new Error('Attempting to get auth tag in unsupported state')\n\n  return this._authTag\n}\n\nStreamCipher.prototype.setAuthTag = function setAuthTag (tag) {\n  if (!this._decrypt) throw new Error('Attempting to set auth tag in unsupported state')\n\n  this._authTag = tag\n}\n\nStreamCipher.prototype.setAAD = function setAAD (buf) {\n  if (this._called) throw new Error('Attempting to set AAD in unsupported state')\n\n  this._ghash.update(buf)\n  this._alen += buf.length\n}\n\nmodule.exports = StreamCipher\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/browserify-aes/authCipher.js?");

/***/ }),

/***/ "../node_modules/browserify-aes/browser.js":
/*!*************************************************!*\
  !*** ../node_modules/browserify-aes/browser.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var ciphers = __webpack_require__(/*! ./encrypter */ \"../node_modules/browserify-aes/encrypter.js\")\nvar deciphers = __webpack_require__(/*! ./decrypter */ \"../node_modules/browserify-aes/decrypter.js\")\nvar modes = __webpack_require__(/*! ./modes/list.json */ \"../node_modules/browserify-aes/modes/list.json\")\n\nfunction getCiphers () {\n  return Object.keys(modes)\n}\n\nexports.createCipher = exports.Cipher = ciphers.createCipher\nexports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv\nexports.createDecipher = exports.Decipher = deciphers.createDecipher\nexports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv\nexports.listCiphers = exports.getCiphers = getCiphers\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/browserify-aes/browser.js?");

/***/ }),

/***/ "../node_modules/browserify-aes/decrypter.js":
/*!***************************************************!*\
  !*** ../node_modules/browserify-aes/decrypter.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var AuthCipher = __webpack_require__(/*! ./authCipher */ \"../node_modules/browserify-aes/authCipher.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\nvar MODES = __webpack_require__(/*! ./modes */ \"../node_modules/browserify-aes/modes/index.js\")\nvar StreamCipher = __webpack_require__(/*! ./streamCipher */ \"../node_modules/browserify-aes/streamCipher.js\")\nvar Transform = __webpack_require__(/*! cipher-base */ \"../node_modules/cipher-base/index.js\")\nvar aes = __webpack_require__(/*! ./aes */ \"../node_modules/browserify-aes/aes.js\")\nvar ebtk = __webpack_require__(/*! evp_bytestokey */ \"../node_modules/evp_bytestokey/index.js\")\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\n\nfunction Decipher (mode, key, iv) {\n  Transform.call(this)\n\n  this._cache = new Splitter()\n  this._last = void 0\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._mode = mode\n  this._autopadding = true\n}\n\ninherits(Decipher, Transform)\n\nDecipher.prototype._update = function (data) {\n  this._cache.add(data)\n  var chunk\n  var thing\n  var out = []\n  while ((chunk = this._cache.get(this._autopadding))) {\n    thing = this._mode.decrypt(this, chunk)\n    out.push(thing)\n  }\n  return Buffer.concat(out)\n}\n\nDecipher.prototype._final = function () {\n  var chunk = this._cache.flush()\n  if (this._autopadding) {\n    return unpad(this._mode.decrypt(this, chunk))\n  } else if (chunk) {\n    throw new Error('data not multiple of block length')\n  }\n}\n\nDecipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo\n  return this\n}\n\nfunction Splitter () {\n  this.cache = Buffer.allocUnsafe(0)\n}\n\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data])\n}\n\nSplitter.prototype.get = function (autoPadding) {\n  var out\n  if (autoPadding) {\n    if (this.cache.length > 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  } else {\n    if (this.cache.length >= 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  }\n\n  return null\n}\n\nSplitter.prototype.flush = function () {\n  if (this.cache.length) return this.cache\n}\n\nfunction unpad (last) {\n  var padded = last[15]\n  if (padded < 1 || padded > 16) {\n    throw new Error('unable to decrypt data')\n  }\n  var i = -1\n  while (++i < padded) {\n    if (last[(i + (16 - padded))] !== padded) {\n      throw new Error('unable to decrypt data')\n    }\n  }\n  if (padded === 16) return\n\n  return last.slice(0, 16 - padded)\n}\n\nfunction createDecipheriv (suite, password, iv) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  if (typeof iv === 'string') iv = Buffer.from(iv)\n  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)\n\n  if (typeof password === 'string') password = Buffer.from(password)\n  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)\n\n  if (config.type === 'stream') {\n    return new StreamCipher(config.module, password, iv, true)\n  } else if (config.type === 'auth') {\n    return new AuthCipher(config.module, password, iv, true)\n  }\n\n  return new Decipher(config.module, password, iv)\n}\n\nfunction createDecipher (suite, password) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  var keys = ebtk(password, false, config.key, config.iv)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nexports.createDecipher = createDecipher\nexports.createDecipheriv = createDecipheriv\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/browserify-aes/decrypter.js?");

/***/ }),

/***/ "../node_modules/browserify-aes/encrypter.js":
/*!***************************************************!*\
  !*** ../node_modules/browserify-aes/encrypter.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var MODES = __webpack_require__(/*! ./modes */ \"../node_modules/browserify-aes/modes/index.js\")\nvar AuthCipher = __webpack_require__(/*! ./authCipher */ \"../node_modules/browserify-aes/authCipher.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\nvar StreamCipher = __webpack_require__(/*! ./streamCipher */ \"../node_modules/browserify-aes/streamCipher.js\")\nvar Transform = __webpack_require__(/*! cipher-base */ \"../node_modules/cipher-base/index.js\")\nvar aes = __webpack_require__(/*! ./aes */ \"../node_modules/browserify-aes/aes.js\")\nvar ebtk = __webpack_require__(/*! evp_bytestokey */ \"../node_modules/evp_bytestokey/index.js\")\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\n\nfunction Cipher (mode, key, iv) {\n  Transform.call(this)\n\n  this._cache = new Splitter()\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._mode = mode\n  this._autopadding = true\n}\n\ninherits(Cipher, Transform)\n\nCipher.prototype._update = function (data) {\n  this._cache.add(data)\n  var chunk\n  var thing\n  var out = []\n\n  while ((chunk = this._cache.get())) {\n    thing = this._mode.encrypt(this, chunk)\n    out.push(thing)\n  }\n\n  return Buffer.concat(out)\n}\n\nvar PADDING = Buffer.alloc(16, 0x10)\n\nCipher.prototype._final = function () {\n  var chunk = this._cache.flush()\n  if (this._autopadding) {\n    chunk = this._mode.encrypt(this, chunk)\n    this._cipher.scrub()\n    return chunk\n  }\n\n  if (!chunk.equals(PADDING)) {\n    this._cipher.scrub()\n    throw new Error('data not multiple of block length')\n  }\n}\n\nCipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo\n  return this\n}\n\nfunction Splitter () {\n  this.cache = Buffer.allocUnsafe(0)\n}\n\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data])\n}\n\nSplitter.prototype.get = function () {\n  if (this.cache.length > 15) {\n    var out = this.cache.slice(0, 16)\n    this.cache = this.cache.slice(16)\n    return out\n  }\n  return null\n}\n\nSplitter.prototype.flush = function () {\n  var len = 16 - this.cache.length\n  var padBuff = Buffer.allocUnsafe(len)\n\n  var i = -1\n  while (++i < len) {\n    padBuff.writeUInt8(len, i)\n  }\n\n  return Buffer.concat([this.cache, padBuff])\n}\n\nfunction createCipheriv (suite, password, iv) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  if (typeof password === 'string') password = Buffer.from(password)\n  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)\n\n  if (typeof iv === 'string') iv = Buffer.from(iv)\n  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)\n\n  if (config.type === 'stream') {\n    return new StreamCipher(config.module, password, iv)\n  } else if (config.type === 'auth') {\n    return new AuthCipher(config.module, password, iv)\n  }\n\n  return new Cipher(config.module, password, iv)\n}\n\nfunction createCipher (suite, password) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  var keys = ebtk(password, false, config.key, config.iv)\n  return createCipheriv(suite, keys.key, keys.iv)\n}\n\nexports.createCipheriv = createCipheriv\nexports.createCipher = createCipher\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/browserify-aes/encrypter.js?");

/***/ }),

/***/ "../node_modules/browserify-aes/ghash.js":
/*!***********************************************!*\
  !*** ../node_modules/browserify-aes/ghash.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\nvar ZEROES = Buffer.alloc(16, 0)\n\nfunction toArray (buf) {\n  return [\n    buf.readUInt32BE(0),\n    buf.readUInt32BE(4),\n    buf.readUInt32BE(8),\n    buf.readUInt32BE(12)\n  ]\n}\n\nfunction fromArray (out) {\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0] >>> 0, 0)\n  buf.writeUInt32BE(out[1] >>> 0, 4)\n  buf.writeUInt32BE(out[2] >>> 0, 8)\n  buf.writeUInt32BE(out[3] >>> 0, 12)\n  return buf\n}\n\nfunction GHASH (key) {\n  this.h = key\n  this.state = Buffer.alloc(16, 0)\n  this.cache = Buffer.allocUnsafe(0)\n}\n\n// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html\n// by Juho Vähä-Herttua\nGHASH.prototype.ghash = function (block) {\n  var i = -1\n  while (++i < block.length) {\n    this.state[i] ^= block[i]\n  }\n  this._multiply()\n}\n\nGHASH.prototype._multiply = function () {\n  var Vi = toArray(this.h)\n  var Zi = [0, 0, 0, 0]\n  var j, xi, lsbVi\n  var i = -1\n  while (++i < 128) {\n    xi = (this.state[~~(i / 8)] & (1 << (7 - (i % 8)))) !== 0\n    if (xi) {\n      // Z_i+1 = Z_i ^ V_i\n      Zi[0] ^= Vi[0]\n      Zi[1] ^= Vi[1]\n      Zi[2] ^= Vi[2]\n      Zi[3] ^= Vi[3]\n    }\n\n    // Store the value of LSB(V_i)\n    lsbVi = (Vi[3] & 1) !== 0\n\n    // V_i+1 = V_i >> 1\n    for (j = 3; j > 0; j--) {\n      Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)\n    }\n    Vi[0] = Vi[0] >>> 1\n\n    // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R\n    if (lsbVi) {\n      Vi[0] = Vi[0] ^ (0xe1 << 24)\n    }\n  }\n  this.state = fromArray(Zi)\n}\n\nGHASH.prototype.update = function (buf) {\n  this.cache = Buffer.concat([this.cache, buf])\n  var chunk\n  while (this.cache.length >= 16) {\n    chunk = this.cache.slice(0, 16)\n    this.cache = this.cache.slice(16)\n    this.ghash(chunk)\n  }\n}\n\nGHASH.prototype.final = function (abl, bl) {\n  if (this.cache.length) {\n    this.ghash(Buffer.concat([this.cache, ZEROES], 16))\n  }\n\n  this.ghash(fromArray([0, abl, 0, bl]))\n  return this.state\n}\n\nmodule.exports = GHASH\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/browserify-aes/ghash.js?");

/***/ }),

/***/ "../node_modules/browserify-aes/incr32.js":
/*!************************************************!*\
  !*** ../node_modules/browserify-aes/incr32.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function incr32 (iv) {\n  var len = iv.length\n  var item\n  while (len--) {\n    item = iv.readUInt8(len)\n    if (item === 255) {\n      iv.writeUInt8(0, len)\n    } else {\n      item++\n      iv.writeUInt8(item, len)\n      break\n    }\n  }\n}\nmodule.exports = incr32\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/browserify-aes/incr32.js?");

/***/ }),

/***/ "../node_modules/browserify-aes/modes/cbc.js":
/*!***************************************************!*\
  !*** ../node_modules/browserify-aes/modes/cbc.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var xor = __webpack_require__(/*! buffer-xor */ \"../node_modules/buffer-xor/index.js\")\n\nexports.encrypt = function (self, block) {\n  var data = xor(block, self._prev)\n\n  self._prev = self._cipher.encryptBlock(data)\n  return self._prev\n}\n\nexports.decrypt = function (self, block) {\n  var pad = self._prev\n\n  self._prev = block\n  var out = self._cipher.decryptBlock(block)\n\n  return xor(out, pad)\n}\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/browserify-aes/modes/cbc.js?");

/***/ }),

/***/ "../node_modules/browserify-aes/modes/cfb.js":
/*!***************************************************!*\
  !*** ../node_modules/browserify-aes/modes/cfb.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\nvar xor = __webpack_require__(/*! buffer-xor */ \"../node_modules/buffer-xor/index.js\")\n\nfunction encryptStart (self, data, decrypt) {\n  var len = data.length\n  var out = xor(data, self._cache)\n  self._cache = self._cache.slice(len)\n  self._prev = Buffer.concat([self._prev, decrypt ? data : out])\n  return out\n}\n\nexports.encrypt = function (self, data, decrypt) {\n  var out = Buffer.allocUnsafe(0)\n  var len\n\n  while (data.length) {\n    if (self._cache.length === 0) {\n      self._cache = self._cipher.encryptBlock(self._prev)\n      self._prev = Buffer.allocUnsafe(0)\n    }\n\n    if (self._cache.length <= data.length) {\n      len = self._cache.length\n      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])\n      data = data.slice(len)\n    } else {\n      out = Buffer.concat([out, encryptStart(self, data, decrypt)])\n      break\n    }\n  }\n\n  return out\n}\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/browserify-aes/modes/cfb.js?");

/***/ }),

/***/ "../node_modules/browserify-aes/modes/cfb1.js":
/*!****************************************************!*\
  !*** ../node_modules/browserify-aes/modes/cfb1.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\n\nfunction encryptByte (self, byteParam, decrypt) {\n  var pad\n  var i = -1\n  var len = 8\n  var out = 0\n  var bit, value\n  while (++i < len) {\n    pad = self._cipher.encryptBlock(self._prev)\n    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0\n    value = pad[0] ^ bit\n    out += ((value & 0x80) >> (i % 8))\n    self._prev = shiftIn(self._prev, decrypt ? bit : value)\n  }\n  return out\n}\n\nfunction shiftIn (buffer, value) {\n  var len = buffer.length\n  var i = -1\n  var out = Buffer.allocUnsafe(buffer.length)\n  buffer = Buffer.concat([buffer, Buffer.from([value])])\n\n  while (++i < len) {\n    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)\n  }\n\n  return out\n}\n\nexports.encrypt = function (self, chunk, decrypt) {\n  var len = chunk.length\n  var out = Buffer.allocUnsafe(len)\n  var i = -1\n\n  while (++i < len) {\n    out[i] = encryptByte(self, chunk[i], decrypt)\n  }\n\n  return out\n}\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/browserify-aes/modes/cfb1.js?");

/***/ }),

/***/ "../node_modules/browserify-aes/modes/cfb8.js":
/*!****************************************************!*\
  !*** ../node_modules/browserify-aes/modes/cfb8.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\n\nfunction encryptByte (self, byteParam, decrypt) {\n  var pad = self._cipher.encryptBlock(self._prev)\n  var out = pad[0] ^ byteParam\n\n  self._prev = Buffer.concat([\n    self._prev.slice(1),\n    Buffer.from([decrypt ? byteParam : out])\n  ])\n\n  return out\n}\n\nexports.encrypt = function (self, chunk, decrypt) {\n  var len = chunk.length\n  var out = Buffer.allocUnsafe(len)\n  var i = -1\n\n  while (++i < len) {\n    out[i] = encryptByte(self, chunk[i], decrypt)\n  }\n\n  return out\n}\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/browserify-aes/modes/cfb8.js?");

/***/ }),

/***/ "../node_modules/browserify-aes/modes/ctr.js":
/*!***************************************************!*\
  !*** ../node_modules/browserify-aes/modes/ctr.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var xor = __webpack_require__(/*! buffer-xor */ \"../node_modules/buffer-xor/index.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\nvar incr32 = __webpack_require__(/*! ../incr32 */ \"../node_modules/browserify-aes/incr32.js\")\n\nfunction getBlock (self) {\n  var out = self._cipher.encryptBlockRaw(self._prev)\n  incr32(self._prev)\n  return out\n}\n\nvar blockSize = 16\nexports.encrypt = function (self, chunk) {\n  var chunkNum = Math.ceil(chunk.length / blockSize)\n  var start = self._cache.length\n  self._cache = Buffer.concat([\n    self._cache,\n    Buffer.allocUnsafe(chunkNum * blockSize)\n  ])\n  for (var i = 0; i < chunkNum; i++) {\n    var out = getBlock(self)\n    var offset = start + i * blockSize\n    self._cache.writeUInt32BE(out[0], offset + 0)\n    self._cache.writeUInt32BE(out[1], offset + 4)\n    self._cache.writeUInt32BE(out[2], offset + 8)\n    self._cache.writeUInt32BE(out[3], offset + 12)\n  }\n  var pad = self._cache.slice(0, chunk.length)\n  self._cache = self._cache.slice(chunk.length)\n  return xor(chunk, pad)\n}\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/browserify-aes/modes/ctr.js?");

/***/ }),

/***/ "../node_modules/browserify-aes/modes/ecb.js":
/*!***************************************************!*\
  !*** ../node_modules/browserify-aes/modes/ecb.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("exports.encrypt = function (self, block) {\n  return self._cipher.encryptBlock(block)\n}\n\nexports.decrypt = function (self, block) {\n  return self._cipher.decryptBlock(block)\n}\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/browserify-aes/modes/ecb.js?");

/***/ }),

/***/ "../node_modules/browserify-aes/modes/index.js":
/*!*****************************************************!*\
  !*** ../node_modules/browserify-aes/modes/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var modeModules = {\n  ECB: __webpack_require__(/*! ./ecb */ \"../node_modules/browserify-aes/modes/ecb.js\"),\n  CBC: __webpack_require__(/*! ./cbc */ \"../node_modules/browserify-aes/modes/cbc.js\"),\n  CFB: __webpack_require__(/*! ./cfb */ \"../node_modules/browserify-aes/modes/cfb.js\"),\n  CFB8: __webpack_require__(/*! ./cfb8 */ \"../node_modules/browserify-aes/modes/cfb8.js\"),\n  CFB1: __webpack_require__(/*! ./cfb1 */ \"../node_modules/browserify-aes/modes/cfb1.js\"),\n  OFB: __webpack_require__(/*! ./ofb */ \"../node_modules/browserify-aes/modes/ofb.js\"),\n  CTR: __webpack_require__(/*! ./ctr */ \"../node_modules/browserify-aes/modes/ctr.js\"),\n  GCM: __webpack_require__(/*! ./ctr */ \"../node_modules/browserify-aes/modes/ctr.js\")\n}\n\nvar modes = __webpack_require__(/*! ./list.json */ \"../node_modules/browserify-aes/modes/list.json\")\n\nfor (var key in modes) {\n  modes[key].module = modeModules[modes[key].mode]\n}\n\nmodule.exports = modes\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/browserify-aes/modes/index.js?");

/***/ }),

/***/ "../node_modules/browserify-aes/modes/list.json":
/*!******************************************************!*\
  !*** ../node_modules/browserify-aes/modes/list.json ***!
  \******************************************************/
/*! exports provided: aes-128-ecb, aes-192-ecb, aes-256-ecb, aes-128-cbc, aes-192-cbc, aes-256-cbc, aes128, aes192, aes256, aes-128-cfb, aes-192-cfb, aes-256-cfb, aes-128-cfb8, aes-192-cfb8, aes-256-cfb8, aes-128-cfb1, aes-192-cfb1, aes-256-cfb1, aes-128-ofb, aes-192-ofb, aes-256-ofb, aes-128-ctr, aes-192-ctr, aes-256-ctr, aes-128-gcm, aes-192-gcm, aes-256-gcm, default */
/***/ (function(module) {

eval("module.exports = JSON.parse(\"{\\\"aes-128-ecb\\\":{\\\"cipher\\\":\\\"AES\\\",\\\"key\\\":128,\\\"iv\\\":0,\\\"mode\\\":\\\"ECB\\\",\\\"type\\\":\\\"block\\\"},\\\"aes-192-ecb\\\":{\\\"cipher\\\":\\\"AES\\\",\\\"key\\\":192,\\\"iv\\\":0,\\\"mode\\\":\\\"ECB\\\",\\\"type\\\":\\\"block\\\"},\\\"aes-256-ecb\\\":{\\\"cipher\\\":\\\"AES\\\",\\\"key\\\":256,\\\"iv\\\":0,\\\"mode\\\":\\\"ECB\\\",\\\"type\\\":\\\"block\\\"},\\\"aes-128-cbc\\\":{\\\"cipher\\\":\\\"AES\\\",\\\"key\\\":128,\\\"iv\\\":16,\\\"mode\\\":\\\"CBC\\\",\\\"type\\\":\\\"block\\\"},\\\"aes-192-cbc\\\":{\\\"cipher\\\":\\\"AES\\\",\\\"key\\\":192,\\\"iv\\\":16,\\\"mode\\\":\\\"CBC\\\",\\\"type\\\":\\\"block\\\"},\\\"aes-256-cbc\\\":{\\\"cipher\\\":\\\"AES\\\",\\\"key\\\":256,\\\"iv\\\":16,\\\"mode\\\":\\\"CBC\\\",\\\"type\\\":\\\"block\\\"},\\\"aes128\\\":{\\\"cipher\\\":\\\"AES\\\",\\\"key\\\":128,\\\"iv\\\":16,\\\"mode\\\":\\\"CBC\\\",\\\"type\\\":\\\"block\\\"},\\\"aes192\\\":{\\\"cipher\\\":\\\"AES\\\",\\\"key\\\":192,\\\"iv\\\":16,\\\"mode\\\":\\\"CBC\\\",\\\"type\\\":\\\"block\\\"},\\\"aes256\\\":{\\\"cipher\\\":\\\"AES\\\",\\\"key\\\":256,\\\"iv\\\":16,\\\"mode\\\":\\\"CBC\\\",\\\"type\\\":\\\"block\\\"},\\\"aes-128-cfb\\\":{\\\"cipher\\\":\\\"AES\\\",\\\"key\\\":128,\\\"iv\\\":16,\\\"mode\\\":\\\"CFB\\\",\\\"type\\\":\\\"stream\\\"},\\\"aes-192-cfb\\\":{\\\"cipher\\\":\\\"AES\\\",\\\"key\\\":192,\\\"iv\\\":16,\\\"mode\\\":\\\"CFB\\\",\\\"type\\\":\\\"stream\\\"},\\\"aes-256-cfb\\\":{\\\"cipher\\\":\\\"AES\\\",\\\"key\\\":256,\\\"iv\\\":16,\\\"mode\\\":\\\"CFB\\\",\\\"type\\\":\\\"stream\\\"},\\\"aes-128-cfb8\\\":{\\\"cipher\\\":\\\"AES\\\",\\\"key\\\":128,\\\"iv\\\":16,\\\"mode\\\":\\\"CFB8\\\",\\\"type\\\":\\\"stream\\\"},\\\"aes-192-cfb8\\\":{\\\"cipher\\\":\\\"AES\\\",\\\"key\\\":192,\\\"iv\\\":16,\\\"mode\\\":\\\"CFB8\\\",\\\"type\\\":\\\"stream\\\"},\\\"aes-256-cfb8\\\":{\\\"cipher\\\":\\\"AES\\\",\\\"key\\\":256,\\\"iv\\\":16,\\\"mode\\\":\\\"CFB8\\\",\\\"type\\\":\\\"stream\\\"},\\\"aes-128-cfb1\\\":{\\\"cipher\\\":\\\"AES\\\",\\\"key\\\":128,\\\"iv\\\":16,\\\"mode\\\":\\\"CFB1\\\",\\\"type\\\":\\\"stream\\\"},\\\"aes-192-cfb1\\\":{\\\"cipher\\\":\\\"AES\\\",\\\"key\\\":192,\\\"iv\\\":16,\\\"mode\\\":\\\"CFB1\\\",\\\"type\\\":\\\"stream\\\"},\\\"aes-256-cfb1\\\":{\\\"cipher\\\":\\\"AES\\\",\\\"key\\\":256,\\\"iv\\\":16,\\\"mode\\\":\\\"CFB1\\\",\\\"type\\\":\\\"stream\\\"},\\\"aes-128-ofb\\\":{\\\"cipher\\\":\\\"AES\\\",\\\"key\\\":128,\\\"iv\\\":16,\\\"mode\\\":\\\"OFB\\\",\\\"type\\\":\\\"stream\\\"},\\\"aes-192-ofb\\\":{\\\"cipher\\\":\\\"AES\\\",\\\"key\\\":192,\\\"iv\\\":16,\\\"mode\\\":\\\"OFB\\\",\\\"type\\\":\\\"stream\\\"},\\\"aes-256-ofb\\\":{\\\"cipher\\\":\\\"AES\\\",\\\"key\\\":256,\\\"iv\\\":16,\\\"mode\\\":\\\"OFB\\\",\\\"type\\\":\\\"stream\\\"},\\\"aes-128-ctr\\\":{\\\"cipher\\\":\\\"AES\\\",\\\"key\\\":128,\\\"iv\\\":16,\\\"mode\\\":\\\"CTR\\\",\\\"type\\\":\\\"stream\\\"},\\\"aes-192-ctr\\\":{\\\"cipher\\\":\\\"AES\\\",\\\"key\\\":192,\\\"iv\\\":16,\\\"mode\\\":\\\"CTR\\\",\\\"type\\\":\\\"stream\\\"},\\\"aes-256-ctr\\\":{\\\"cipher\\\":\\\"AES\\\",\\\"key\\\":256,\\\"iv\\\":16,\\\"mode\\\":\\\"CTR\\\",\\\"type\\\":\\\"stream\\\"},\\\"aes-128-gcm\\\":{\\\"cipher\\\":\\\"AES\\\",\\\"key\\\":128,\\\"iv\\\":12,\\\"mode\\\":\\\"GCM\\\",\\\"type\\\":\\\"auth\\\"},\\\"aes-192-gcm\\\":{\\\"cipher\\\":\\\"AES\\\",\\\"key\\\":192,\\\"iv\\\":12,\\\"mode\\\":\\\"GCM\\\",\\\"type\\\":\\\"auth\\\"},\\\"aes-256-gcm\\\":{\\\"cipher\\\":\\\"AES\\\",\\\"key\\\":256,\\\"iv\\\":12,\\\"mode\\\":\\\"GCM\\\",\\\"type\\\":\\\"auth\\\"}}\");\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/browserify-aes/modes/list.json?");

/***/ }),

/***/ "../node_modules/browserify-aes/modes/ofb.js":
/*!***************************************************!*\
  !*** ../node_modules/browserify-aes/modes/ofb.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {var xor = __webpack_require__(/*! buffer-xor */ \"../node_modules/buffer-xor/index.js\")\n\nfunction getBlock (self) {\n  self._prev = self._cipher.encryptBlock(self._prev)\n  return self._prev\n}\n\nexports.encrypt = function (self, chunk) {\n  while (self._cache.length < chunk.length) {\n    self._cache = Buffer.concat([self._cache, getBlock(self)])\n  }\n\n  var pad = self._cache.slice(0, chunk.length)\n  self._cache = self._cache.slice(chunk.length)\n  return xor(chunk, pad)\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../buffer/index.js */ \"../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/browserify-aes/modes/ofb.js?");

/***/ }),

/***/ "../node_modules/browserify-aes/streamCipher.js":
/*!******************************************************!*\
  !*** ../node_modules/browserify-aes/streamCipher.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var aes = __webpack_require__(/*! ./aes */ \"../node_modules/browserify-aes/aes.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\nvar Transform = __webpack_require__(/*! cipher-base */ \"../node_modules/cipher-base/index.js\")\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\n\nfunction StreamCipher (mode, key, iv, decrypt) {\n  Transform.call(this)\n\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._cache = Buffer.allocUnsafe(0)\n  this._secCache = Buffer.allocUnsafe(0)\n  this._decrypt = decrypt\n  this._mode = mode\n}\n\ninherits(StreamCipher, Transform)\n\nStreamCipher.prototype._update = function (chunk) {\n  return this._mode.encrypt(this, chunk, this._decrypt)\n}\n\nStreamCipher.prototype._final = function () {\n  this._cipher.scrub()\n}\n\nmodule.exports = StreamCipher\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/browserify-aes/streamCipher.js?");

/***/ }),

/***/ "../node_modules/browserify-cipher/browser.js":
/*!****************************************************!*\
  !*** ../node_modules/browserify-cipher/browser.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var DES = __webpack_require__(/*! browserify-des */ \"../node_modules/browserify-des/index.js\")\nvar aes = __webpack_require__(/*! browserify-aes/browser */ \"../node_modules/browserify-aes/browser.js\")\nvar aesModes = __webpack_require__(/*! browserify-aes/modes */ \"../node_modules/browserify-aes/modes/index.js\")\nvar desModes = __webpack_require__(/*! browserify-des/modes */ \"../node_modules/browserify-des/modes.js\")\nvar ebtk = __webpack_require__(/*! evp_bytestokey */ \"../node_modules/evp_bytestokey/index.js\")\n\nfunction createCipher (suite, password) {\n  suite = suite.toLowerCase()\n\n  var keyLen, ivLen\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createCipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createDecipher (suite, password) {\n  suite = suite.toLowerCase()\n\n  var keyLen, ivLen\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createCipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) return aes.createCipheriv(suite, key, iv)\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite })\n\n  throw new TypeError('invalid suite type')\n}\n\nfunction createDecipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv)\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite, decrypt: true })\n\n  throw new TypeError('invalid suite type')\n}\n\nfunction getCiphers () {\n  return Object.keys(desModes).concat(aes.getCiphers())\n}\n\nexports.createCipher = exports.Cipher = createCipher\nexports.createCipheriv = exports.Cipheriv = createCipheriv\nexports.createDecipher = exports.Decipher = createDecipher\nexports.createDecipheriv = exports.Decipheriv = createDecipheriv\nexports.listCiphers = exports.getCiphers = getCiphers\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/browserify-cipher/browser.js?");

/***/ }),

/***/ "../node_modules/browserify-des/index.js":
/*!***********************************************!*\
  !*** ../node_modules/browserify-des/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var CipherBase = __webpack_require__(/*! cipher-base */ \"../node_modules/cipher-base/index.js\")\nvar des = __webpack_require__(/*! des.js */ \"../node_modules/des.js/lib/des.js\")\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\n\nvar modes = {\n  'des-ede3-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede3': des.EDE,\n  'des-ede-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede': des.EDE,\n  'des-cbc': des.CBC.instantiate(des.DES),\n  'des-ecb': des.DES\n}\nmodes.des = modes['des-cbc']\nmodes.des3 = modes['des-ede3-cbc']\nmodule.exports = DES\ninherits(DES, CipherBase)\nfunction DES (opts) {\n  CipherBase.call(this)\n  var modeName = opts.mode.toLowerCase()\n  var mode = modes[modeName]\n  var type\n  if (opts.decrypt) {\n    type = 'decrypt'\n  } else {\n    type = 'encrypt'\n  }\n  var key = opts.key\n  if (!Buffer.isBuffer(key)) {\n    key = Buffer.from(key)\n  }\n  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {\n    key = Buffer.concat([key, key.slice(0, 8)])\n  }\n  var iv = opts.iv\n  if (!Buffer.isBuffer(iv)) {\n    iv = Buffer.from(iv)\n  }\n  this._des = mode.create({\n    key: key,\n    iv: iv,\n    type: type\n  })\n}\nDES.prototype._update = function (data) {\n  return Buffer.from(this._des.update(data))\n}\nDES.prototype._final = function () {\n  return Buffer.from(this._des.final())\n}\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/browserify-des/index.js?");

/***/ }),

/***/ "../node_modules/browserify-des/modes.js":
/*!***********************************************!*\
  !*** ../node_modules/browserify-des/modes.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("exports['des-ecb'] = {\n  key: 8,\n  iv: 0\n}\nexports['des-cbc'] = exports.des = {\n  key: 8,\n  iv: 8\n}\nexports['des-ede3-cbc'] = exports.des3 = {\n  key: 24,\n  iv: 8\n}\nexports['des-ede3'] = {\n  key: 24,\n  iv: 0\n}\nexports['des-ede-cbc'] = {\n  key: 16,\n  iv: 8\n}\nexports['des-ede'] = {\n  key: 16,\n  iv: 0\n}\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/browserify-des/modes.js?");

/***/ }),

/***/ "../node_modules/browserify-rsa/index.js":
/*!***********************************************!*\
  !*** ../node_modules/browserify-rsa/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {var bn = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\");\nvar randomBytes = __webpack_require__(/*! randombytes */ \"../node_modules/randombytes/browser.js\");\nmodule.exports = crt;\nfunction blind(priv) {\n  var r = getr(priv);\n  var blinder = r.toRed(bn.mont(priv.modulus))\n  .redPow(new bn(priv.publicExponent)).fromRed();\n  return {\n    blinder: blinder,\n    unblinder:r.invm(priv.modulus)\n  };\n}\nfunction crt(msg, priv) {\n  var blinds = blind(priv);\n  var len = priv.modulus.byteLength();\n  var mod = bn.mont(priv.modulus);\n  var blinded = new bn(msg).mul(blinds.blinder).umod(priv.modulus);\n  var c1 = blinded.toRed(bn.mont(priv.prime1));\n  var c2 = blinded.toRed(bn.mont(priv.prime2));\n  var qinv = priv.coefficient;\n  var p = priv.prime1;\n  var q = priv.prime2;\n  var m1 = c1.redPow(priv.exponent1);\n  var m2 = c2.redPow(priv.exponent2);\n  m1 = m1.fromRed();\n  m2 = m2.fromRed();\n  var h = m1.isub(m2).imul(qinv).umod(p);\n  h.imul(q);\n  m2.iadd(h);\n  return new Buffer(m2.imul(blinds.unblinder).umod(priv.modulus).toArray(false, len));\n}\ncrt.getr = getr;\nfunction getr(priv) {\n  var len = priv.modulus.byteLength();\n  var r = new bn(randomBytes(len));\n  while (r.cmp(priv.modulus) >=  0 || !r.umod(priv.prime1) || !r.umod(priv.prime2)) {\n    r = new bn(randomBytes(len));\n  }\n  return r;\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ \"../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/browserify-rsa/index.js?");

/***/ }),

/***/ "../node_modules/browserify-sign/algos.js":
/*!************************************************!*\
  !*** ../node_modules/browserify-sign/algos.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./browser/algorithms.json */ \"../node_modules/browserify-sign/browser/algorithms.json\")\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/browserify-sign/algos.js?");

/***/ }),

/***/ "../node_modules/browserify-sign/browser/algorithms.json":
/*!***************************************************************!*\
  !*** ../node_modules/browserify-sign/browser/algorithms.json ***!
  \***************************************************************/
/*! exports provided: sha224WithRSAEncryption, RSA-SHA224, sha256WithRSAEncryption, RSA-SHA256, sha384WithRSAEncryption, RSA-SHA384, sha512WithRSAEncryption, RSA-SHA512, RSA-SHA1, ecdsa-with-SHA1, sha256, sha224, sha384, sha512, DSA-SHA, DSA-SHA1, DSA, DSA-WITH-SHA224, DSA-SHA224, DSA-WITH-SHA256, DSA-SHA256, DSA-WITH-SHA384, DSA-SHA384, DSA-WITH-SHA512, DSA-SHA512, DSA-RIPEMD160, ripemd160WithRSA, RSA-RIPEMD160, md5WithRSAEncryption, RSA-MD5, default */
/***/ (function(module) {

eval("module.exports = JSON.parse(\"{\\\"sha224WithRSAEncryption\\\":{\\\"sign\\\":\\\"rsa\\\",\\\"hash\\\":\\\"sha224\\\",\\\"id\\\":\\\"302d300d06096086480165030402040500041c\\\"},\\\"RSA-SHA224\\\":{\\\"sign\\\":\\\"ecdsa/rsa\\\",\\\"hash\\\":\\\"sha224\\\",\\\"id\\\":\\\"302d300d06096086480165030402040500041c\\\"},\\\"sha256WithRSAEncryption\\\":{\\\"sign\\\":\\\"rsa\\\",\\\"hash\\\":\\\"sha256\\\",\\\"id\\\":\\\"3031300d060960864801650304020105000420\\\"},\\\"RSA-SHA256\\\":{\\\"sign\\\":\\\"ecdsa/rsa\\\",\\\"hash\\\":\\\"sha256\\\",\\\"id\\\":\\\"3031300d060960864801650304020105000420\\\"},\\\"sha384WithRSAEncryption\\\":{\\\"sign\\\":\\\"rsa\\\",\\\"hash\\\":\\\"sha384\\\",\\\"id\\\":\\\"3041300d060960864801650304020205000430\\\"},\\\"RSA-SHA384\\\":{\\\"sign\\\":\\\"ecdsa/rsa\\\",\\\"hash\\\":\\\"sha384\\\",\\\"id\\\":\\\"3041300d060960864801650304020205000430\\\"},\\\"sha512WithRSAEncryption\\\":{\\\"sign\\\":\\\"rsa\\\",\\\"hash\\\":\\\"sha512\\\",\\\"id\\\":\\\"3051300d060960864801650304020305000440\\\"},\\\"RSA-SHA512\\\":{\\\"sign\\\":\\\"ecdsa/rsa\\\",\\\"hash\\\":\\\"sha512\\\",\\\"id\\\":\\\"3051300d060960864801650304020305000440\\\"},\\\"RSA-SHA1\\\":{\\\"sign\\\":\\\"rsa\\\",\\\"hash\\\":\\\"sha1\\\",\\\"id\\\":\\\"3021300906052b0e03021a05000414\\\"},\\\"ecdsa-with-SHA1\\\":{\\\"sign\\\":\\\"ecdsa\\\",\\\"hash\\\":\\\"sha1\\\",\\\"id\\\":\\\"\\\"},\\\"sha256\\\":{\\\"sign\\\":\\\"ecdsa\\\",\\\"hash\\\":\\\"sha256\\\",\\\"id\\\":\\\"\\\"},\\\"sha224\\\":{\\\"sign\\\":\\\"ecdsa\\\",\\\"hash\\\":\\\"sha224\\\",\\\"id\\\":\\\"\\\"},\\\"sha384\\\":{\\\"sign\\\":\\\"ecdsa\\\",\\\"hash\\\":\\\"sha384\\\",\\\"id\\\":\\\"\\\"},\\\"sha512\\\":{\\\"sign\\\":\\\"ecdsa\\\",\\\"hash\\\":\\\"sha512\\\",\\\"id\\\":\\\"\\\"},\\\"DSA-SHA\\\":{\\\"sign\\\":\\\"dsa\\\",\\\"hash\\\":\\\"sha1\\\",\\\"id\\\":\\\"\\\"},\\\"DSA-SHA1\\\":{\\\"sign\\\":\\\"dsa\\\",\\\"hash\\\":\\\"sha1\\\",\\\"id\\\":\\\"\\\"},\\\"DSA\\\":{\\\"sign\\\":\\\"dsa\\\",\\\"hash\\\":\\\"sha1\\\",\\\"id\\\":\\\"\\\"},\\\"DSA-WITH-SHA224\\\":{\\\"sign\\\":\\\"dsa\\\",\\\"hash\\\":\\\"sha224\\\",\\\"id\\\":\\\"\\\"},\\\"DSA-SHA224\\\":{\\\"sign\\\":\\\"dsa\\\",\\\"hash\\\":\\\"sha224\\\",\\\"id\\\":\\\"\\\"},\\\"DSA-WITH-SHA256\\\":{\\\"sign\\\":\\\"dsa\\\",\\\"hash\\\":\\\"sha256\\\",\\\"id\\\":\\\"\\\"},\\\"DSA-SHA256\\\":{\\\"sign\\\":\\\"dsa\\\",\\\"hash\\\":\\\"sha256\\\",\\\"id\\\":\\\"\\\"},\\\"DSA-WITH-SHA384\\\":{\\\"sign\\\":\\\"dsa\\\",\\\"hash\\\":\\\"sha384\\\",\\\"id\\\":\\\"\\\"},\\\"DSA-SHA384\\\":{\\\"sign\\\":\\\"dsa\\\",\\\"hash\\\":\\\"sha384\\\",\\\"id\\\":\\\"\\\"},\\\"DSA-WITH-SHA512\\\":{\\\"sign\\\":\\\"dsa\\\",\\\"hash\\\":\\\"sha512\\\",\\\"id\\\":\\\"\\\"},\\\"DSA-SHA512\\\":{\\\"sign\\\":\\\"dsa\\\",\\\"hash\\\":\\\"sha512\\\",\\\"id\\\":\\\"\\\"},\\\"DSA-RIPEMD160\\\":{\\\"sign\\\":\\\"dsa\\\",\\\"hash\\\":\\\"rmd160\\\",\\\"id\\\":\\\"\\\"},\\\"ripemd160WithRSA\\\":{\\\"sign\\\":\\\"rsa\\\",\\\"hash\\\":\\\"rmd160\\\",\\\"id\\\":\\\"3021300906052b2403020105000414\\\"},\\\"RSA-RIPEMD160\\\":{\\\"sign\\\":\\\"rsa\\\",\\\"hash\\\":\\\"rmd160\\\",\\\"id\\\":\\\"3021300906052b2403020105000414\\\"},\\\"md5WithRSAEncryption\\\":{\\\"sign\\\":\\\"rsa\\\",\\\"hash\\\":\\\"md5\\\",\\\"id\\\":\\\"3020300c06082a864886f70d020505000410\\\"},\\\"RSA-MD5\\\":{\\\"sign\\\":\\\"rsa\\\",\\\"hash\\\":\\\"md5\\\",\\\"id\\\":\\\"3020300c06082a864886f70d020505000410\\\"}}\");\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/browserify-sign/browser/algorithms.json?");

/***/ }),

/***/ "../node_modules/browserify-sign/browser/curves.json":
/*!***********************************************************!*\
  !*** ../node_modules/browserify-sign/browser/curves.json ***!
  \***********************************************************/
/*! exports provided: 1.3.132.0.10, 1.3.132.0.33, 1.2.840.10045.3.1.1, 1.2.840.10045.3.1.7, 1.3.132.0.34, 1.3.132.0.35, default */
/***/ (function(module) {

eval("module.exports = JSON.parse(\"{\\\"1.3.132.0.10\\\":\\\"secp256k1\\\",\\\"1.3.132.0.33\\\":\\\"p224\\\",\\\"1.2.840.10045.3.1.1\\\":\\\"p192\\\",\\\"1.2.840.10045.3.1.7\\\":\\\"p256\\\",\\\"1.3.132.0.34\\\":\\\"p384\\\",\\\"1.3.132.0.35\\\":\\\"p521\\\"}\");\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/browserify-sign/browser/curves.json?");

/***/ }),

/***/ "../node_modules/browserify-sign/browser/index.js":
/*!********************************************************!*\
  !*** ../node_modules/browserify-sign/browser/index.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {var createHash = __webpack_require__(/*! create-hash */ \"../node_modules/create-hash/browser.js\")\nvar stream = __webpack_require__(/*! stream */ \"../node_modules/stream-browserify/index.js\")\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\nvar sign = __webpack_require__(/*! ./sign */ \"../node_modules/browserify-sign/browser/sign.js\")\nvar verify = __webpack_require__(/*! ./verify */ \"../node_modules/browserify-sign/browser/verify.js\")\n\nvar algorithms = __webpack_require__(/*! ./algorithms.json */ \"../node_modules/browserify-sign/browser/algorithms.json\")\nObject.keys(algorithms).forEach(function (key) {\n  algorithms[key].id = new Buffer(algorithms[key].id, 'hex')\n  algorithms[key.toLowerCase()] = algorithms[key]\n})\n\nfunction Sign (algorithm) {\n  stream.Writable.call(this)\n\n  var data = algorithms[algorithm]\n  if (!data) throw new Error('Unknown message digest')\n\n  this._hashType = data.hash\n  this._hash = createHash(data.hash)\n  this._tag = data.id\n  this._signType = data.sign\n}\ninherits(Sign, stream.Writable)\n\nSign.prototype._write = function _write (data, _, done) {\n  this._hash.update(data)\n  done()\n}\n\nSign.prototype.update = function update (data, enc) {\n  if (typeof data === 'string') data = new Buffer(data, enc)\n\n  this._hash.update(data)\n  return this\n}\n\nSign.prototype.sign = function signMethod (key, enc) {\n  this.end()\n  var hash = this._hash.digest()\n  var sig = sign(hash, key, this._hashType, this._signType, this._tag)\n\n  return enc ? sig.toString(enc) : sig\n}\n\nfunction Verify (algorithm) {\n  stream.Writable.call(this)\n\n  var data = algorithms[algorithm]\n  if (!data) throw new Error('Unknown message digest')\n\n  this._hash = createHash(data.hash)\n  this._tag = data.id\n  this._signType = data.sign\n}\ninherits(Verify, stream.Writable)\n\nVerify.prototype._write = function _write (data, _, done) {\n  this._hash.update(data)\n  done()\n}\n\nVerify.prototype.update = function update (data, enc) {\n  if (typeof data === 'string') data = new Buffer(data, enc)\n\n  this._hash.update(data)\n  return this\n}\n\nVerify.prototype.verify = function verifyMethod (key, sig, enc) {\n  if (typeof sig === 'string') sig = new Buffer(sig, enc)\n\n  this.end()\n  var hash = this._hash.digest()\n  return verify(sig, hash, key, this._signType, this._tag)\n}\n\nfunction createSign (algorithm) {\n  return new Sign(algorithm)\n}\n\nfunction createVerify (algorithm) {\n  return new Verify(algorithm)\n}\n\nmodule.exports = {\n  Sign: createSign,\n  Verify: createVerify,\n  createSign: createSign,\n  createVerify: createVerify\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../buffer/index.js */ \"../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/browserify-sign/browser/index.js?");

/***/ }),

/***/ "../node_modules/browserify-sign/browser/sign.js":
/*!*******************************************************!*\
  !*** ../node_modules/browserify-sign/browser/sign.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar createHmac = __webpack_require__(/*! create-hmac */ \"../node_modules/create-hmac/browser.js\")\nvar crt = __webpack_require__(/*! browserify-rsa */ \"../node_modules/browserify-rsa/index.js\")\nvar EC = __webpack_require__(/*! elliptic */ \"../node_modules/elliptic/lib/elliptic.js\").ec\nvar BN = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\")\nvar parseKeys = __webpack_require__(/*! parse-asn1 */ \"../node_modules/parse-asn1/index.js\")\nvar curves = __webpack_require__(/*! ./curves.json */ \"../node_modules/browserify-sign/browser/curves.json\")\n\nfunction sign (hash, key, hashType, signType, tag) {\n  var priv = parseKeys(key)\n  if (priv.curve) {\n    // rsa keys can be interpreted as ecdsa ones in openssl\n    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')\n    return ecSign(hash, priv)\n  } else if (priv.type === 'dsa') {\n    if (signType !== 'dsa') throw new Error('wrong private key type')\n    return dsaSign(hash, priv, hashType)\n  } else {\n    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')\n  }\n  hash = Buffer.concat([tag, hash])\n  var len = priv.modulus.byteLength()\n  var pad = [ 0, 1 ]\n  while (hash.length + pad.length + 1 < len) pad.push(0xff)\n  pad.push(0x00)\n  var i = -1\n  while (++i < hash.length) pad.push(hash[i])\n\n  var out = crt(pad, priv)\n  return out\n}\n\nfunction ecSign (hash, priv) {\n  var curveId = curves[priv.curve.join('.')]\n  if (!curveId) throw new Error('unknown curve ' + priv.curve.join('.'))\n\n  var curve = new EC(curveId)\n  var key = curve.keyFromPrivate(priv.privateKey)\n  var out = key.sign(hash)\n\n  return new Buffer(out.toDER())\n}\n\nfunction dsaSign (hash, priv, algo) {\n  var x = priv.params.priv_key\n  var p = priv.params.p\n  var q = priv.params.q\n  var g = priv.params.g\n  var r = new BN(0)\n  var k\n  var H = bits2int(hash, q).mod(q)\n  var s = false\n  var kv = getKey(x, q, hash, algo)\n  while (s === false) {\n    k = makeKey(q, kv, algo)\n    r = makeR(g, k, p, q)\n    s = k.invm(q).imul(H.add(x.mul(r))).mod(q)\n    if (s.cmpn(0) === 0) {\n      s = false\n      r = new BN(0)\n    }\n  }\n  return toDER(r, s)\n}\n\nfunction toDER (r, s) {\n  r = r.toArray()\n  s = s.toArray()\n\n  // Pad values\n  if (r[0] & 0x80) r = [ 0 ].concat(r)\n  if (s[0] & 0x80) s = [ 0 ].concat(s)\n\n  var total = r.length + s.length + 4\n  var res = [ 0x30, total, 0x02, r.length ]\n  res = res.concat(r, [ 0x02, s.length ], s)\n  return new Buffer(res)\n}\n\nfunction getKey (x, q, hash, algo) {\n  x = new Buffer(x.toArray())\n  if (x.length < q.byteLength()) {\n    var zeros = new Buffer(q.byteLength() - x.length)\n    zeros.fill(0)\n    x = Buffer.concat([ zeros, x ])\n  }\n  var hlen = hash.length\n  var hbits = bits2octets(hash, q)\n  var v = new Buffer(hlen)\n  v.fill(1)\n  var k = new Buffer(hlen)\n  k.fill(0)\n  k = createHmac(algo, k).update(v).update(new Buffer([ 0 ])).update(x).update(hbits).digest()\n  v = createHmac(algo, k).update(v).digest()\n  k = createHmac(algo, k).update(v).update(new Buffer([ 1 ])).update(x).update(hbits).digest()\n  v = createHmac(algo, k).update(v).digest()\n  return { k: k, v: v }\n}\n\nfunction bits2int (obits, q) {\n  var bits = new BN(obits)\n  var shift = (obits.length << 3) - q.bitLength()\n  if (shift > 0) bits.ishrn(shift)\n  return bits\n}\n\nfunction bits2octets (bits, q) {\n  bits = bits2int(bits, q)\n  bits = bits.mod(q)\n  var out = new Buffer(bits.toArray())\n  if (out.length < q.byteLength()) {\n    var zeros = new Buffer(q.byteLength() - out.length)\n    zeros.fill(0)\n    out = Buffer.concat([ zeros, out ])\n  }\n  return out\n}\n\nfunction makeKey (q, kv, algo) {\n  var t\n  var k\n\n  do {\n    t = new Buffer(0)\n\n    while (t.length * 8 < q.bitLength()) {\n      kv.v = createHmac(algo, kv.k).update(kv.v).digest()\n      t = Buffer.concat([ t, kv.v ])\n    }\n\n    k = bits2int(t, q)\n    kv.k = createHmac(algo, kv.k).update(kv.v).update(new Buffer([ 0 ])).digest()\n    kv.v = createHmac(algo, kv.k).update(kv.v).digest()\n  } while (k.cmp(q) !== -1)\n\n  return k\n}\n\nfunction makeR (g, k, p, q) {\n  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q)\n}\n\nmodule.exports = sign\nmodule.exports.getKey = getKey\nmodule.exports.makeKey = makeKey\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../buffer/index.js */ \"../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/browserify-sign/browser/sign.js?");

/***/ }),

/***/ "../node_modules/browserify-sign/browser/verify.js":
/*!*********************************************************!*\
  !*** ../node_modules/browserify-sign/browser/verify.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar BN = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\")\nvar EC = __webpack_require__(/*! elliptic */ \"../node_modules/elliptic/lib/elliptic.js\").ec\nvar parseKeys = __webpack_require__(/*! parse-asn1 */ \"../node_modules/parse-asn1/index.js\")\nvar curves = __webpack_require__(/*! ./curves.json */ \"../node_modules/browserify-sign/browser/curves.json\")\n\nfunction verify (sig, hash, key, signType, tag) {\n  var pub = parseKeys(key)\n  if (pub.type === 'ec') {\n    // rsa keys can be interpreted as ecdsa ones in openssl\n    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')\n    return ecVerify(sig, hash, pub)\n  } else if (pub.type === 'dsa') {\n    if (signType !== 'dsa') throw new Error('wrong public key type')\n    return dsaVerify(sig, hash, pub)\n  } else {\n    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')\n  }\n  hash = Buffer.concat([tag, hash])\n  var len = pub.modulus.byteLength()\n  var pad = [ 1 ]\n  var padNum = 0\n  while (hash.length + pad.length + 2 < len) {\n    pad.push(0xff)\n    padNum++\n  }\n  pad.push(0x00)\n  var i = -1\n  while (++i < hash.length) {\n    pad.push(hash[i])\n  }\n  pad = new Buffer(pad)\n  var red = BN.mont(pub.modulus)\n  sig = new BN(sig).toRed(red)\n\n  sig = sig.redPow(new BN(pub.publicExponent))\n  sig = new Buffer(sig.fromRed().toArray())\n  var out = padNum < 8 ? 1 : 0\n  len = Math.min(sig.length, pad.length)\n  if (sig.length !== pad.length) out = 1\n\n  i = -1\n  while (++i < len) out |= sig[i] ^ pad[i]\n  return out === 0\n}\n\nfunction ecVerify (sig, hash, pub) {\n  var curveId = curves[pub.data.algorithm.curve.join('.')]\n  if (!curveId) throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.'))\n\n  var curve = new EC(curveId)\n  var pubkey = pub.data.subjectPrivateKey.data\n\n  return curve.verify(hash, sig, pubkey)\n}\n\nfunction dsaVerify (sig, hash, pub) {\n  var p = pub.data.p\n  var q = pub.data.q\n  var g = pub.data.g\n  var y = pub.data.pub_key\n  var unpacked = parseKeys.signature.decode(sig, 'der')\n  var s = unpacked.s\n  var r = unpacked.r\n  checkValue(s, q)\n  checkValue(r, q)\n  var montp = BN.mont(p)\n  var w = s.invm(q)\n  var v = g.toRed(montp)\n    .redPow(new BN(hash).mul(w).mod(q))\n    .fromRed()\n    .mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed())\n    .mod(p)\n    .mod(q)\n  return v.cmp(r) === 0\n}\n\nfunction checkValue (b, q) {\n  if (b.cmpn(0) <= 0) throw new Error('invalid sig')\n  if (b.cmp(q) >= q) throw new Error('invalid sig')\n}\n\nmodule.exports = verify\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../buffer/index.js */ \"../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/browserify-sign/browser/verify.js?");

/***/ }),

/***/ "../node_modules/buffer-xor/index.js":
/*!*******************************************!*\
  !*** ../node_modules/buffer-xor/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {module.exports = function xor (a, b) {\n  var length = Math.min(a.length, b.length)\n  var buffer = new Buffer(length)\n\n  for (var i = 0; i < length; ++i) {\n    buffer[i] = a[i] ^ b[i]\n  }\n\n  return buffer\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ \"../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/buffer-xor/index.js?");

/***/ }),

/***/ "../node_modules/buffer/index.js":
/*!***************************************!*\
  !*** ../node_modules/buffer/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(/*! base64-js */ \"../node_modules/base64-js/index.js\")\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"../node_modules/ieee754/index.js\")\nvar isArray = __webpack_require__(/*! isarray */ \"../node_modules/isarray/index.js\")\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"../node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/buffer/index.js?");

/***/ }),

/***/ "../node_modules/cipher-base/index.js":
/*!********************************************!*\
  !*** ../node_modules/cipher-base/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\nvar Transform = __webpack_require__(/*! stream */ \"../node_modules/stream-browserify/index.js\").Transform\nvar StringDecoder = __webpack_require__(/*! string_decoder */ \"../node_modules/string_decoder/lib/string_decoder.js\").StringDecoder\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\n\nfunction CipherBase (hashMode) {\n  Transform.call(this)\n  this.hashMode = typeof hashMode === 'string'\n  if (this.hashMode) {\n    this[hashMode] = this._finalOrDigest\n  } else {\n    this.final = this._finalOrDigest\n  }\n  if (this._final) {\n    this.__final = this._final\n    this._final = null\n  }\n  this._decoder = null\n  this._encoding = null\n}\ninherits(CipherBase, Transform)\n\nCipherBase.prototype.update = function (data, inputEnc, outputEnc) {\n  if (typeof data === 'string') {\n    data = Buffer.from(data, inputEnc)\n  }\n\n  var outData = this._update(data)\n  if (this.hashMode) return this\n\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc)\n  }\n\n  return outData\n}\n\nCipherBase.prototype.setAutoPadding = function () {}\nCipherBase.prototype.getAuthTag = function () {\n  throw new Error('trying to get auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAuthTag = function () {\n  throw new Error('trying to set auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAAD = function () {\n  throw new Error('trying to set aad in unsupported state')\n}\n\nCipherBase.prototype._transform = function (data, _, next) {\n  var err\n  try {\n    if (this.hashMode) {\n      this._update(data)\n    } else {\n      this.push(this._update(data))\n    }\n  } catch (e) {\n    err = e\n  } finally {\n    next(err)\n  }\n}\nCipherBase.prototype._flush = function (done) {\n  var err\n  try {\n    this.push(this.__final())\n  } catch (e) {\n    err = e\n  }\n\n  done(err)\n}\nCipherBase.prototype._finalOrDigest = function (outputEnc) {\n  var outData = this.__final() || Buffer.alloc(0)\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc, true)\n  }\n  return outData\n}\n\nCipherBase.prototype._toString = function (value, enc, fin) {\n  if (!this._decoder) {\n    this._decoder = new StringDecoder(enc)\n    this._encoding = enc\n  }\n\n  if (this._encoding !== enc) throw new Error('can\\'t switch encodings')\n\n  var out = this._decoder.write(value)\n  if (fin) {\n    out += this._decoder.end()\n  }\n\n  return out\n}\n\nmodule.exports = CipherBase\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/cipher-base/index.js?");

/***/ }),

/***/ "../node_modules/core-util-is/lib/util.js":
/*!************************************************!*\
  !*** ../node_modules/core-util-is/lib/util.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../buffer/index.js */ \"../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/core-util-is/lib/util.js?");

/***/ }),

/***/ "../node_modules/create-ecdh/browser.js":
/*!**********************************************!*\
  !*** ../node_modules/create-ecdh/browser.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {var elliptic = __webpack_require__(/*! elliptic */ \"../node_modules/elliptic/lib/elliptic.js\")\nvar BN = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\")\n\nmodule.exports = function createECDH (curve) {\n  return new ECDH(curve)\n}\n\nvar aliases = {\n  secp256k1: {\n    name: 'secp256k1',\n    byteLength: 32\n  },\n  secp224r1: {\n    name: 'p224',\n    byteLength: 28\n  },\n  prime256v1: {\n    name: 'p256',\n    byteLength: 32\n  },\n  prime192v1: {\n    name: 'p192',\n    byteLength: 24\n  },\n  ed25519: {\n    name: 'ed25519',\n    byteLength: 32\n  },\n  secp384r1: {\n    name: 'p384',\n    byteLength: 48\n  },\n  secp521r1: {\n    name: 'p521',\n    byteLength: 66\n  }\n}\n\naliases.p224 = aliases.secp224r1\naliases.p256 = aliases.secp256r1 = aliases.prime256v1\naliases.p192 = aliases.secp192r1 = aliases.prime192v1\naliases.p384 = aliases.secp384r1\naliases.p521 = aliases.secp521r1\n\nfunction ECDH (curve) {\n  this.curveType = aliases[curve]\n  if (!this.curveType) {\n    this.curveType = {\n      name: curve\n    }\n  }\n  this.curve = new elliptic.ec(this.curveType.name) // eslint-disable-line new-cap\n  this.keys = void 0\n}\n\nECDH.prototype.generateKeys = function (enc, format) {\n  this.keys = this.curve.genKeyPair()\n  return this.getPublicKey(enc, format)\n}\n\nECDH.prototype.computeSecret = function (other, inenc, enc) {\n  inenc = inenc || 'utf8'\n  if (!Buffer.isBuffer(other)) {\n    other = new Buffer(other, inenc)\n  }\n  var otherPub = this.curve.keyFromPublic(other).getPublic()\n  var out = otherPub.mul(this.keys.getPrivate()).getX()\n  return formatReturnValue(out, enc, this.curveType.byteLength)\n}\n\nECDH.prototype.getPublicKey = function (enc, format) {\n  var key = this.keys.getPublic(format === 'compressed', true)\n  if (format === 'hybrid') {\n    if (key[key.length - 1] % 2) {\n      key[0] = 7\n    } else {\n      key[0] = 6\n    }\n  }\n  return formatReturnValue(key, enc)\n}\n\nECDH.prototype.getPrivateKey = function (enc) {\n  return formatReturnValue(this.keys.getPrivate(), enc)\n}\n\nECDH.prototype.setPublicKey = function (pub, enc) {\n  enc = enc || 'utf8'\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc)\n  }\n  this.keys._importPublic(pub)\n  return this\n}\n\nECDH.prototype.setPrivateKey = function (priv, enc) {\n  enc = enc || 'utf8'\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc)\n  }\n\n  var _priv = new BN(priv)\n  _priv = _priv.toString(16)\n  this.keys = this.curve.genKeyPair()\n  this.keys._importPrivate(_priv)\n  return this\n}\n\nfunction formatReturnValue (bn, enc, len) {\n  if (!Array.isArray(bn)) {\n    bn = bn.toArray()\n  }\n  var buf = new Buffer(bn)\n  if (len && buf.length < len) {\n    var zeros = new Buffer(len - buf.length)\n    zeros.fill(0)\n    buf = Buffer.concat([zeros, buf])\n  }\n  if (!enc) {\n    return buf\n  } else {\n    return buf.toString(enc)\n  }\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ \"../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/create-ecdh/browser.js?");

/***/ }),

/***/ "../node_modules/create-hash/browser.js":
/*!**********************************************!*\
  !*** ../node_modules/create-hash/browser.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\nvar MD5 = __webpack_require__(/*! md5.js */ \"../node_modules/md5.js/index.js\")\nvar RIPEMD160 = __webpack_require__(/*! ripemd160 */ \"../node_modules/ripemd160/index.js\")\nvar sha = __webpack_require__(/*! sha.js */ \"../node_modules/sha.js/index.js\")\nvar Base = __webpack_require__(/*! cipher-base */ \"../node_modules/cipher-base/index.js\")\n\nfunction Hash (hash) {\n  Base.call(this, 'digest')\n\n  this._hash = hash\n}\n\ninherits(Hash, Base)\n\nHash.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHash.prototype._final = function () {\n  return this._hash.digest()\n}\n\nmodule.exports = function createHash (alg) {\n  alg = alg.toLowerCase()\n  if (alg === 'md5') return new MD5()\n  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()\n\n  return new Hash(sha(alg))\n}\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/create-hash/browser.js?");

/***/ }),

/***/ "../node_modules/create-hash/md5.js":
/*!******************************************!*\
  !*** ../node_modules/create-hash/md5.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var MD5 = __webpack_require__(/*! md5.js */ \"../node_modules/md5.js/index.js\")\n\nmodule.exports = function (buffer) {\n  return new MD5().update(buffer).digest()\n}\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/create-hash/md5.js?");

/***/ }),

/***/ "../node_modules/create-hmac/browser.js":
/*!**********************************************!*\
  !*** ../node_modules/create-hmac/browser.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\nvar Legacy = __webpack_require__(/*! ./legacy */ \"../node_modules/create-hmac/legacy.js\")\nvar Base = __webpack_require__(/*! cipher-base */ \"../node_modules/cipher-base/index.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\nvar md5 = __webpack_require__(/*! create-hash/md5 */ \"../node_modules/create-hash/md5.js\")\nvar RIPEMD160 = __webpack_require__(/*! ripemd160 */ \"../node_modules/ripemd160/index.js\")\n\nvar sha = __webpack_require__(/*! sha.js */ \"../node_modules/sha.js/index.js\")\n\nvar ZEROS = Buffer.alloc(128)\n\nfunction Hmac (alg, key) {\n  Base.call(this, 'digest')\n  if (typeof key === 'string') {\n    key = Buffer.from(key)\n  }\n\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  this._alg = alg\n  this._key = key\n  if (key.length > blocksize) {\n    var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)\n    key = hash.update(key).digest()\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)\n  var opad = this._opad = Buffer.allocUnsafe(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n  this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)\n  this._hash.update(ipad)\n}\n\ninherits(Hmac, Base)\n\nHmac.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHmac.prototype._final = function () {\n  var h = this._hash.digest()\n  var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg)\n  return hash.update(this._opad).update(h).digest()\n}\n\nmodule.exports = function createHmac (alg, key) {\n  alg = alg.toLowerCase()\n  if (alg === 'rmd160' || alg === 'ripemd160') {\n    return new Hmac('rmd160', key)\n  }\n  if (alg === 'md5') {\n    return new Legacy(md5, key)\n  }\n  return new Hmac(alg, key)\n}\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/create-hmac/browser.js?");

/***/ }),

/***/ "../node_modules/create-hmac/legacy.js":
/*!*********************************************!*\
  !*** ../node_modules/create-hmac/legacy.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\n\nvar Base = __webpack_require__(/*! cipher-base */ \"../node_modules/cipher-base/index.js\")\n\nvar ZEROS = Buffer.alloc(128)\nvar blocksize = 64\n\nfunction Hmac (alg, key) {\n  Base.call(this, 'digest')\n  if (typeof key === 'string') {\n    key = Buffer.from(key)\n  }\n\n  this._alg = alg\n  this._key = key\n\n  if (key.length > blocksize) {\n    key = alg(key)\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)\n  var opad = this._opad = Buffer.allocUnsafe(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  this._hash = [ipad]\n}\n\ninherits(Hmac, Base)\n\nHmac.prototype._update = function (data) {\n  this._hash.push(data)\n}\n\nHmac.prototype._final = function () {\n  var h = this._alg(Buffer.concat(this._hash))\n  return this._alg(Buffer.concat([this._opad, h]))\n}\nmodule.exports = Hmac\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/create-hmac/legacy.js?");

/***/ }),

/***/ "../node_modules/crypto-browserify/index.js":
/*!**************************************************!*\
  !*** ../node_modules/crypto-browserify/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = __webpack_require__(/*! randombytes */ \"../node_modules/randombytes/browser.js\")\nexports.createHash = exports.Hash = __webpack_require__(/*! create-hash */ \"../node_modules/create-hash/browser.js\")\nexports.createHmac = exports.Hmac = __webpack_require__(/*! create-hmac */ \"../node_modules/create-hmac/browser.js\")\n\nvar algos = __webpack_require__(/*! browserify-sign/algos */ \"../node_modules/browserify-sign/algos.js\")\nvar algoKeys = Object.keys(algos)\nvar hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(algoKeys)\nexports.getHashes = function () {\n  return hashes\n}\n\nvar p = __webpack_require__(/*! pbkdf2 */ \"../node_modules/pbkdf2/browser.js\")\nexports.pbkdf2 = p.pbkdf2\nexports.pbkdf2Sync = p.pbkdf2Sync\n\nvar aes = __webpack_require__(/*! browserify-cipher */ \"../node_modules/browserify-cipher/browser.js\")\n\nexports.Cipher = aes.Cipher\nexports.createCipher = aes.createCipher\nexports.Cipheriv = aes.Cipheriv\nexports.createCipheriv = aes.createCipheriv\nexports.Decipher = aes.Decipher\nexports.createDecipher = aes.createDecipher\nexports.Decipheriv = aes.Decipheriv\nexports.createDecipheriv = aes.createDecipheriv\nexports.getCiphers = aes.getCiphers\nexports.listCiphers = aes.listCiphers\n\nvar dh = __webpack_require__(/*! diffie-hellman */ \"../node_modules/diffie-hellman/browser.js\")\n\nexports.DiffieHellmanGroup = dh.DiffieHellmanGroup\nexports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup\nexports.getDiffieHellman = dh.getDiffieHellman\nexports.createDiffieHellman = dh.createDiffieHellman\nexports.DiffieHellman = dh.DiffieHellman\n\nvar sign = __webpack_require__(/*! browserify-sign */ \"../node_modules/browserify-sign/browser/index.js\")\n\nexports.createSign = sign.createSign\nexports.Sign = sign.Sign\nexports.createVerify = sign.createVerify\nexports.Verify = sign.Verify\n\nexports.createECDH = __webpack_require__(/*! create-ecdh */ \"../node_modules/create-ecdh/browser.js\")\n\nvar publicEncrypt = __webpack_require__(/*! public-encrypt */ \"../node_modules/public-encrypt/browser.js\")\n\nexports.publicEncrypt = publicEncrypt.publicEncrypt\nexports.privateEncrypt = publicEncrypt.privateEncrypt\nexports.publicDecrypt = publicEncrypt.publicDecrypt\nexports.privateDecrypt = publicEncrypt.privateDecrypt\n\n// the least I can do is make error messages for the rest of the node.js/crypto api.\n// ;[\n//   'createCredentials'\n// ].forEach(function (name) {\n//   exports[name] = function () {\n//     throw new Error([\n//       'sorry, ' + name + ' is not implemented yet',\n//       'we accept pull requests',\n//       'https://github.com/crypto-browserify/crypto-browserify'\n//     ].join('\\n'))\n//   }\n// })\n\nvar rf = __webpack_require__(/*! randomfill */ \"../node_modules/randomfill/browser.js\")\n\nexports.randomFill = rf.randomFill\nexports.randomFillSync = rf.randomFillSync\n\nexports.createCredentials = function () {\n  throw new Error([\n    'sorry, createCredentials is not implemented yet',\n    'we accept pull requests',\n    'https://github.com/crypto-browserify/crypto-browserify'\n  ].join('\\n'))\n}\n\nexports.constants = {\n  'DH_CHECK_P_NOT_SAFE_PRIME': 2,\n  'DH_CHECK_P_NOT_PRIME': 1,\n  'DH_UNABLE_TO_CHECK_GENERATOR': 4,\n  'DH_NOT_SUITABLE_GENERATOR': 8,\n  'NPN_ENABLED': 1,\n  'ALPN_ENABLED': 1,\n  'RSA_PKCS1_PADDING': 1,\n  'RSA_SSLV23_PADDING': 2,\n  'RSA_NO_PADDING': 3,\n  'RSA_PKCS1_OAEP_PADDING': 4,\n  'RSA_X931_PADDING': 5,\n  'RSA_PKCS1_PSS_PADDING': 6,\n  'POINT_CONVERSION_COMPRESSED': 2,\n  'POINT_CONVERSION_UNCOMPRESSED': 4,\n  'POINT_CONVERSION_HYBRID': 6\n}\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/crypto-browserify/index.js?");

/***/ }),

/***/ "../node_modules/des.js/lib/des.js":
/*!*****************************************!*\
  !*** ../node_modules/des.js/lib/des.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.utils = __webpack_require__(/*! ./des/utils */ \"../node_modules/des.js/lib/des/utils.js\");\nexports.Cipher = __webpack_require__(/*! ./des/cipher */ \"../node_modules/des.js/lib/des/cipher.js\");\nexports.DES = __webpack_require__(/*! ./des/des */ \"../node_modules/des.js/lib/des/des.js\");\nexports.CBC = __webpack_require__(/*! ./des/cbc */ \"../node_modules/des.js/lib/des/cbc.js\");\nexports.EDE = __webpack_require__(/*! ./des/ede */ \"../node_modules/des.js/lib/des/ede.js\");\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/des.js/lib/des.js?");

/***/ }),

/***/ "../node_modules/des.js/lib/des/cbc.js":
/*!*********************************************!*\
  !*** ../node_modules/des.js/lib/des/cbc.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"../node_modules/minimalistic-assert/index.js\");\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\n\nvar proto = {};\n\nfunction CBCState(iv) {\n  assert.equal(iv.length, 8, 'Invalid IV length');\n\n  this.iv = new Array(8);\n  for (var i = 0; i < this.iv.length; i++)\n    this.iv[i] = iv[i];\n}\n\nfunction instantiate(Base) {\n  function CBC(options) {\n    Base.call(this, options);\n    this._cbcInit();\n  }\n  inherits(CBC, Base);\n\n  var keys = Object.keys(proto);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    CBC.prototype[key] = proto[key];\n  }\n\n  CBC.create = function create(options) {\n    return new CBC(options);\n  };\n\n  return CBC;\n}\n\nexports.instantiate = instantiate;\n\nproto._cbcInit = function _cbcInit() {\n  var state = new CBCState(this.options.iv);\n  this._cbcState = state;\n};\n\nproto._update = function _update(inp, inOff, out, outOff) {\n  var state = this._cbcState;\n  var superProto = this.constructor.super_.prototype;\n\n  var iv = state.iv;\n  if (this.type === 'encrypt') {\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] ^= inp[inOff + i];\n\n    superProto._update.call(this, iv, 0, out, outOff);\n\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] = out[outOff + i];\n  } else {\n    superProto._update.call(this, inp, inOff, out, outOff);\n\n    for (var i = 0; i < this.blockSize; i++)\n      out[outOff + i] ^= iv[i];\n\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] = inp[inOff + i];\n  }\n};\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/des.js/lib/des/cbc.js?");

/***/ }),

/***/ "../node_modules/des.js/lib/des/cipher.js":
/*!************************************************!*\
  !*** ../node_modules/des.js/lib/des/cipher.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"../node_modules/minimalistic-assert/index.js\");\n\nfunction Cipher(options) {\n  this.options = options;\n\n  this.type = this.options.type;\n  this.blockSize = 8;\n  this._init();\n\n  this.buffer = new Array(this.blockSize);\n  this.bufferOff = 0;\n}\nmodule.exports = Cipher;\n\nCipher.prototype._init = function _init() {\n  // Might be overrided\n};\n\nCipher.prototype.update = function update(data) {\n  if (data.length === 0)\n    return [];\n\n  if (this.type === 'decrypt')\n    return this._updateDecrypt(data);\n  else\n    return this._updateEncrypt(data);\n};\n\nCipher.prototype._buffer = function _buffer(data, off) {\n  // Append data to buffer\n  var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);\n  for (var i = 0; i < min; i++)\n    this.buffer[this.bufferOff + i] = data[off + i];\n  this.bufferOff += min;\n\n  // Shift next\n  return min;\n};\n\nCipher.prototype._flushBuffer = function _flushBuffer(out, off) {\n  this._update(this.buffer, 0, out, off);\n  this.bufferOff = 0;\n  return this.blockSize;\n};\n\nCipher.prototype._updateEncrypt = function _updateEncrypt(data) {\n  var inputOff = 0;\n  var outputOff = 0;\n\n  var count = ((this.bufferOff + data.length) / this.blockSize) | 0;\n  var out = new Array(count * this.blockSize);\n\n  if (this.bufferOff !== 0) {\n    inputOff += this._buffer(data, inputOff);\n\n    if (this.bufferOff === this.buffer.length)\n      outputOff += this._flushBuffer(out, outputOff);\n  }\n\n  // Write blocks\n  var max = data.length - ((data.length - inputOff) % this.blockSize);\n  for (; inputOff < max; inputOff += this.blockSize) {\n    this._update(data, inputOff, out, outputOff);\n    outputOff += this.blockSize;\n  }\n\n  // Queue rest\n  for (; inputOff < data.length; inputOff++, this.bufferOff++)\n    this.buffer[this.bufferOff] = data[inputOff];\n\n  return out;\n};\n\nCipher.prototype._updateDecrypt = function _updateDecrypt(data) {\n  var inputOff = 0;\n  var outputOff = 0;\n\n  var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;\n  var out = new Array(count * this.blockSize);\n\n  // TODO(indutny): optimize it, this is far from optimal\n  for (; count > 0; count--) {\n    inputOff += this._buffer(data, inputOff);\n    outputOff += this._flushBuffer(out, outputOff);\n  }\n\n  // Buffer rest of the input\n  inputOff += this._buffer(data, inputOff);\n\n  return out;\n};\n\nCipher.prototype.final = function final(buffer) {\n  var first;\n  if (buffer)\n    first = this.update(buffer);\n\n  var last;\n  if (this.type === 'encrypt')\n    last = this._finalEncrypt();\n  else\n    last = this._finalDecrypt();\n\n  if (first)\n    return first.concat(last);\n  else\n    return last;\n};\n\nCipher.prototype._pad = function _pad(buffer, off) {\n  if (off === 0)\n    return false;\n\n  while (off < buffer.length)\n    buffer[off++] = 0;\n\n  return true;\n};\n\nCipher.prototype._finalEncrypt = function _finalEncrypt() {\n  if (!this._pad(this.buffer, this.bufferOff))\n    return [];\n\n  var out = new Array(this.blockSize);\n  this._update(this.buffer, 0, out, 0);\n  return out;\n};\n\nCipher.prototype._unpad = function _unpad(buffer) {\n  return buffer;\n};\n\nCipher.prototype._finalDecrypt = function _finalDecrypt() {\n  assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');\n  var out = new Array(this.blockSize);\n  this._flushBuffer(out, 0);\n\n  return this._unpad(out);\n};\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/des.js/lib/des/cipher.js?");

/***/ }),

/***/ "../node_modules/des.js/lib/des/des.js":
/*!*********************************************!*\
  !*** ../node_modules/des.js/lib/des/des.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"../node_modules/minimalistic-assert/index.js\");\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\n\nvar des = __webpack_require__(/*! ../des */ \"../node_modules/des.js/lib/des.js\");\nvar utils = des.utils;\nvar Cipher = des.Cipher;\n\nfunction DESState() {\n  this.tmp = new Array(2);\n  this.keys = null;\n}\n\nfunction DES(options) {\n  Cipher.call(this, options);\n\n  var state = new DESState();\n  this._desState = state;\n\n  this.deriveKeys(state, options.key);\n}\ninherits(DES, Cipher);\nmodule.exports = DES;\n\nDES.create = function create(options) {\n  return new DES(options);\n};\n\nvar shiftTable = [\n  1, 1, 2, 2, 2, 2, 2, 2,\n  1, 2, 2, 2, 2, 2, 2, 1\n];\n\nDES.prototype.deriveKeys = function deriveKeys(state, key) {\n  state.keys = new Array(16 * 2);\n\n  assert.equal(key.length, this.blockSize, 'Invalid key length');\n\n  var kL = utils.readUInt32BE(key, 0);\n  var kR = utils.readUInt32BE(key, 4);\n\n  utils.pc1(kL, kR, state.tmp, 0);\n  kL = state.tmp[0];\n  kR = state.tmp[1];\n  for (var i = 0; i < state.keys.length; i += 2) {\n    var shift = shiftTable[i >>> 1];\n    kL = utils.r28shl(kL, shift);\n    kR = utils.r28shl(kR, shift);\n    utils.pc2(kL, kR, state.keys, i);\n  }\n};\n\nDES.prototype._update = function _update(inp, inOff, out, outOff) {\n  var state = this._desState;\n\n  var l = utils.readUInt32BE(inp, inOff);\n  var r = utils.readUInt32BE(inp, inOff + 4);\n\n  // Initial Permutation\n  utils.ip(l, r, state.tmp, 0);\n  l = state.tmp[0];\n  r = state.tmp[1];\n\n  if (this.type === 'encrypt')\n    this._encrypt(state, l, r, state.tmp, 0);\n  else\n    this._decrypt(state, l, r, state.tmp, 0);\n\n  l = state.tmp[0];\n  r = state.tmp[1];\n\n  utils.writeUInt32BE(out, l, outOff);\n  utils.writeUInt32BE(out, r, outOff + 4);\n};\n\nDES.prototype._pad = function _pad(buffer, off) {\n  var value = buffer.length - off;\n  for (var i = off; i < buffer.length; i++)\n    buffer[i] = value;\n\n  return true;\n};\n\nDES.prototype._unpad = function _unpad(buffer) {\n  var pad = buffer[buffer.length - 1];\n  for (var i = buffer.length - pad; i < buffer.length; i++)\n    assert.equal(buffer[i], pad);\n\n  return buffer.slice(0, buffer.length - pad);\n};\n\nDES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {\n  var l = lStart;\n  var r = rStart;\n\n  // Apply f() x16 times\n  for (var i = 0; i < state.keys.length; i += 2) {\n    var keyL = state.keys[i];\n    var keyR = state.keys[i + 1];\n\n    // f(r, k)\n    utils.expand(r, state.tmp, 0);\n\n    keyL ^= state.tmp[0];\n    keyR ^= state.tmp[1];\n    var s = utils.substitute(keyL, keyR);\n    var f = utils.permute(s);\n\n    var t = r;\n    r = (l ^ f) >>> 0;\n    l = t;\n  }\n\n  // Reverse Initial Permutation\n  utils.rip(r, l, out, off);\n};\n\nDES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {\n  var l = rStart;\n  var r = lStart;\n\n  // Apply f() x16 times\n  for (var i = state.keys.length - 2; i >= 0; i -= 2) {\n    var keyL = state.keys[i];\n    var keyR = state.keys[i + 1];\n\n    // f(r, k)\n    utils.expand(l, state.tmp, 0);\n\n    keyL ^= state.tmp[0];\n    keyR ^= state.tmp[1];\n    var s = utils.substitute(keyL, keyR);\n    var f = utils.permute(s);\n\n    var t = l;\n    l = (r ^ f) >>> 0;\n    r = t;\n  }\n\n  // Reverse Initial Permutation\n  utils.rip(l, r, out, off);\n};\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/des.js/lib/des/des.js?");

/***/ }),

/***/ "../node_modules/des.js/lib/des/ede.js":
/*!*********************************************!*\
  !*** ../node_modules/des.js/lib/des/ede.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"../node_modules/minimalistic-assert/index.js\");\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\n\nvar des = __webpack_require__(/*! ../des */ \"../node_modules/des.js/lib/des.js\");\nvar Cipher = des.Cipher;\nvar DES = des.DES;\n\nfunction EDEState(type, key) {\n  assert.equal(key.length, 24, 'Invalid key length');\n\n  var k1 = key.slice(0, 8);\n  var k2 = key.slice(8, 16);\n  var k3 = key.slice(16, 24);\n\n  if (type === 'encrypt') {\n    this.ciphers = [\n      DES.create({ type: 'encrypt', key: k1 }),\n      DES.create({ type: 'decrypt', key: k2 }),\n      DES.create({ type: 'encrypt', key: k3 })\n    ];\n  } else {\n    this.ciphers = [\n      DES.create({ type: 'decrypt', key: k3 }),\n      DES.create({ type: 'encrypt', key: k2 }),\n      DES.create({ type: 'decrypt', key: k1 })\n    ];\n  }\n}\n\nfunction EDE(options) {\n  Cipher.call(this, options);\n\n  var state = new EDEState(this.type, this.options.key);\n  this._edeState = state;\n}\ninherits(EDE, Cipher);\n\nmodule.exports = EDE;\n\nEDE.create = function create(options) {\n  return new EDE(options);\n};\n\nEDE.prototype._update = function _update(inp, inOff, out, outOff) {\n  var state = this._edeState;\n\n  state.ciphers[0]._update(inp, inOff, out, outOff);\n  state.ciphers[1]._update(out, outOff, out, outOff);\n  state.ciphers[2]._update(out, outOff, out, outOff);\n};\n\nEDE.prototype._pad = DES.prototype._pad;\nEDE.prototype._unpad = DES.prototype._unpad;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/des.js/lib/des/ede.js?");

/***/ }),

/***/ "../node_modules/des.js/lib/des/utils.js":
/*!***********************************************!*\
  !*** ../node_modules/des.js/lib/des/utils.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.readUInt32BE = function readUInt32BE(bytes, off) {\n  var res =  (bytes[0 + off] << 24) |\n             (bytes[1 + off] << 16) |\n             (bytes[2 + off] << 8) |\n             bytes[3 + off];\n  return res >>> 0;\n};\n\nexports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {\n  bytes[0 + off] = value >>> 24;\n  bytes[1 + off] = (value >>> 16) & 0xff;\n  bytes[2 + off] = (value >>> 8) & 0xff;\n  bytes[3 + off] = value & 0xff;\n};\n\nexports.ip = function ip(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  for (var i = 6; i >= 0; i -= 2) {\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inR >>> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  for (var i = 6; i >= 0; i -= 2) {\n    for (var j = 1; j <= 25; j += 8) {\n      outR <<= 1;\n      outR |= (inR >>> (j + i)) & 1;\n    }\n    for (var j = 1; j <= 25; j += 8) {\n      outR <<= 1;\n      outR |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.rip = function rip(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  for (var i = 0; i < 4; i++) {\n    for (var j = 24; j >= 0; j -= 8) {\n      outL <<= 1;\n      outL |= (inR >>> (j + i)) & 1;\n      outL <<= 1;\n      outL |= (inL >>> (j + i)) & 1;\n    }\n  }\n  for (var i = 4; i < 8; i++) {\n    for (var j = 24; j >= 0; j -= 8) {\n      outR <<= 1;\n      outR |= (inR >>> (j + i)) & 1;\n      outR <<= 1;\n      outR |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.pc1 = function pc1(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  // 7, 15, 23, 31, 39, 47, 55, 63\n  // 6, 14, 22, 30, 39, 47, 55, 63\n  // 5, 13, 21, 29, 39, 47, 55, 63\n  // 4, 12, 20, 28\n  for (var i = 7; i >= 5; i--) {\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inR >> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inL >> (j + i)) & 1;\n    }\n  }\n  for (var j = 0; j <= 24; j += 8) {\n    outL <<= 1;\n    outL |= (inR >> (j + i)) & 1;\n  }\n\n  // 1, 9, 17, 25, 33, 41, 49, 57\n  // 2, 10, 18, 26, 34, 42, 50, 58\n  // 3, 11, 19, 27, 35, 43, 51, 59\n  // 36, 44, 52, 60\n  for (var i = 1; i <= 3; i++) {\n    for (var j = 0; j <= 24; j += 8) {\n      outR <<= 1;\n      outR |= (inR >> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outR <<= 1;\n      outR |= (inL >> (j + i)) & 1;\n    }\n  }\n  for (var j = 0; j <= 24; j += 8) {\n    outR <<= 1;\n    outR |= (inL >> (j + i)) & 1;\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.r28shl = function r28shl(num, shift) {\n  return ((num << shift) & 0xfffffff) | (num >>> (28 - shift));\n};\n\nvar pc2table = [\n  // inL => outL\n  14, 11, 17, 4, 27, 23, 25, 0,\n  13, 22, 7, 18, 5, 9, 16, 24,\n  2, 20, 12, 21, 1, 8, 15, 26,\n\n  // inR => outR\n  15, 4, 25, 19, 9, 1, 26, 16,\n  5, 11, 23, 8, 12, 7, 17, 0,\n  22, 3, 10, 14, 6, 20, 27, 24\n];\n\nexports.pc2 = function pc2(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  var len = pc2table.length >>> 1;\n  for (var i = 0; i < len; i++) {\n    outL <<= 1;\n    outL |= (inL >>> pc2table[i]) & 0x1;\n  }\n  for (var i = len; i < pc2table.length; i++) {\n    outR <<= 1;\n    outR |= (inR >>> pc2table[i]) & 0x1;\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.expand = function expand(r, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  outL = ((r & 1) << 5) | (r >>> 27);\n  for (var i = 23; i >= 15; i -= 4) {\n    outL <<= 6;\n    outL |= (r >>> i) & 0x3f;\n  }\n  for (var i = 11; i >= 3; i -= 4) {\n    outR |= (r >>> i) & 0x3f;\n    outR <<= 6;\n  }\n  outR |= ((r & 0x1f) << 1) | (r >>> 31);\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nvar sTable = [\n  14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1,\n  3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8,\n  4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7,\n  15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13,\n\n  15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14,\n  9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5,\n  0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2,\n  5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9,\n\n  10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10,\n  1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1,\n  13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7,\n  11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12,\n\n  7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3,\n  1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9,\n  10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8,\n  15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14,\n\n  2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1,\n  8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6,\n  4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13,\n  15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3,\n\n  12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5,\n  0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8,\n  9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10,\n  7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13,\n\n  4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10,\n  3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6,\n  1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7,\n  10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12,\n\n  13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4,\n  10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2,\n  7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13,\n  0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11\n];\n\nexports.substitute = function substitute(inL, inR) {\n  var out = 0;\n  for (var i = 0; i < 4; i++) {\n    var b = (inL >>> (18 - i * 6)) & 0x3f;\n    var sb = sTable[i * 0x40 + b];\n\n    out <<= 4;\n    out |= sb;\n  }\n  for (var i = 0; i < 4; i++) {\n    var b = (inR >>> (18 - i * 6)) & 0x3f;\n    var sb = sTable[4 * 0x40 + i * 0x40 + b];\n\n    out <<= 4;\n    out |= sb;\n  }\n  return out >>> 0;\n};\n\nvar permuteTable = [\n  16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22,\n  30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7\n];\n\nexports.permute = function permute(num) {\n  var out = 0;\n  for (var i = 0; i < permuteTable.length; i++) {\n    out <<= 1;\n    out |= (num >>> permuteTable[i]) & 0x1;\n  }\n  return out >>> 0;\n};\n\nexports.padSplit = function padSplit(num, size, group) {\n  var str = num.toString(2);\n  while (str.length < size)\n    str = '0' + str;\n\n  var out = [];\n  for (var i = 0; i < size; i += group)\n    out.push(str.slice(i, i + group));\n  return out.join(' ');\n};\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/des.js/lib/des/utils.js?");

/***/ }),

/***/ "../node_modules/diffie-hellman/browser.js":
/*!*************************************************!*\
  !*** ../node_modules/diffie-hellman/browser.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {var generatePrime = __webpack_require__(/*! ./lib/generatePrime */ \"../node_modules/diffie-hellman/lib/generatePrime.js\")\nvar primes = __webpack_require__(/*! ./lib/primes.json */ \"../node_modules/diffie-hellman/lib/primes.json\")\n\nvar DH = __webpack_require__(/*! ./lib/dh */ \"../node_modules/diffie-hellman/lib/dh.js\")\n\nfunction getDiffieHellman (mod) {\n  var prime = new Buffer(primes[mod].prime, 'hex')\n  var gen = new Buffer(primes[mod].gen, 'hex')\n\n  return new DH(prime, gen)\n}\n\nvar ENCODINGS = {\n  'binary': true, 'hex': true, 'base64': true\n}\n\nfunction createDiffieHellman (prime, enc, generator, genc) {\n  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {\n    return createDiffieHellman(prime, 'binary', enc, generator)\n  }\n\n  enc = enc || 'binary'\n  genc = genc || 'binary'\n  generator = generator || new Buffer([2])\n\n  if (!Buffer.isBuffer(generator)) {\n    generator = new Buffer(generator, genc)\n  }\n\n  if (typeof prime === 'number') {\n    return new DH(generatePrime(prime, generator), generator, true)\n  }\n\n  if (!Buffer.isBuffer(prime)) {\n    prime = new Buffer(prime, enc)\n  }\n\n  return new DH(prime, generator, true)\n}\n\nexports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman\nexports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ \"../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/diffie-hellman/browser.js?");

/***/ }),

/***/ "../node_modules/diffie-hellman/lib/dh.js":
/*!************************************************!*\
  !*** ../node_modules/diffie-hellman/lib/dh.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {var BN = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\");\nvar MillerRabin = __webpack_require__(/*! miller-rabin */ \"../node_modules/miller-rabin/lib/mr.js\");\nvar millerRabin = new MillerRabin();\nvar TWENTYFOUR = new BN(24);\nvar ELEVEN = new BN(11);\nvar TEN = new BN(10);\nvar THREE = new BN(3);\nvar SEVEN = new BN(7);\nvar primes = __webpack_require__(/*! ./generatePrime */ \"../node_modules/diffie-hellman/lib/generatePrime.js\");\nvar randomBytes = __webpack_require__(/*! randombytes */ \"../node_modules/randombytes/browser.js\");\nmodule.exports = DH;\n\nfunction setPublicKey(pub, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc);\n  }\n  this._pub = new BN(pub);\n  return this;\n}\n\nfunction setPrivateKey(priv, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc);\n  }\n  this._priv = new BN(priv);\n  return this;\n}\n\nvar primeCache = {};\nfunction checkPrime(prime, generator) {\n  var gen = generator.toString('hex');\n  var hex = [gen, prime.toString(16)].join('_');\n  if (hex in primeCache) {\n    return primeCache[hex];\n  }\n  var error = 0;\n\n  if (prime.isEven() ||\n    !primes.simpleSieve ||\n    !primes.fermatTest(prime) ||\n    !millerRabin.test(prime)) {\n    //not a prime so +1\n    error += 1;\n\n    if (gen === '02' || gen === '05') {\n      // we'd be able to check the generator\n      // it would fail so +8\n      error += 8;\n    } else {\n      //we wouldn't be able to test the generator\n      // so +4\n      error += 4;\n    }\n    primeCache[hex] = error;\n    return error;\n  }\n  if (!millerRabin.test(prime.shrn(1))) {\n    //not a safe prime\n    error += 2;\n  }\n  var rem;\n  switch (gen) {\n    case '02':\n      if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {\n        // unsuidable generator\n        error += 8;\n      }\n      break;\n    case '05':\n      rem = prime.mod(TEN);\n      if (rem.cmp(THREE) && rem.cmp(SEVEN)) {\n        // prime mod 10 needs to equal 3 or 7\n        error += 8;\n      }\n      break;\n    default:\n      error += 4;\n  }\n  primeCache[hex] = error;\n  return error;\n}\n\nfunction DH(prime, generator, malleable) {\n  this.setGenerator(generator);\n  this.__prime = new BN(prime);\n  this._prime = BN.mont(this.__prime);\n  this._primeLen = prime.length;\n  this._pub = undefined;\n  this._priv = undefined;\n  this._primeCode = undefined;\n  if (malleable) {\n    this.setPublicKey = setPublicKey;\n    this.setPrivateKey = setPrivateKey;\n  } else {\n    this._primeCode = 8;\n  }\n}\nObject.defineProperty(DH.prototype, 'verifyError', {\n  enumerable: true,\n  get: function () {\n    if (typeof this._primeCode !== 'number') {\n      this._primeCode = checkPrime(this.__prime, this.__gen);\n    }\n    return this._primeCode;\n  }\n});\nDH.prototype.generateKeys = function () {\n  if (!this._priv) {\n    this._priv = new BN(randomBytes(this._primeLen));\n  }\n  this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();\n  return this.getPublicKey();\n};\n\nDH.prototype.computeSecret = function (other) {\n  other = new BN(other);\n  other = other.toRed(this._prime);\n  var secret = other.redPow(this._priv).fromRed();\n  var out = new Buffer(secret.toArray());\n  var prime = this.getPrime();\n  if (out.length < prime.length) {\n    var front = new Buffer(prime.length - out.length);\n    front.fill(0);\n    out = Buffer.concat([front, out]);\n  }\n  return out;\n};\n\nDH.prototype.getPublicKey = function getPublicKey(enc) {\n  return formatReturnValue(this._pub, enc);\n};\n\nDH.prototype.getPrivateKey = function getPrivateKey(enc) {\n  return formatReturnValue(this._priv, enc);\n};\n\nDH.prototype.getPrime = function (enc) {\n  return formatReturnValue(this.__prime, enc);\n};\n\nDH.prototype.getGenerator = function (enc) {\n  return formatReturnValue(this._gen, enc);\n};\n\nDH.prototype.setGenerator = function (gen, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(gen)) {\n    gen = new Buffer(gen, enc);\n  }\n  this.__gen = gen;\n  this._gen = new BN(gen);\n  return this;\n};\n\nfunction formatReturnValue(bn, enc) {\n  var buf = new Buffer(bn.toArray());\n  if (!enc) {\n    return buf;\n  } else {\n    return buf.toString(enc);\n  }\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../buffer/index.js */ \"../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/diffie-hellman/lib/dh.js?");

/***/ }),

/***/ "../node_modules/diffie-hellman/lib/generatePrime.js":
/*!***********************************************************!*\
  !*** ../node_modules/diffie-hellman/lib/generatePrime.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var randomBytes = __webpack_require__(/*! randombytes */ \"../node_modules/randombytes/browser.js\");\nmodule.exports = findPrime;\nfindPrime.simpleSieve = simpleSieve;\nfindPrime.fermatTest = fermatTest;\nvar BN = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\");\nvar TWENTYFOUR = new BN(24);\nvar MillerRabin = __webpack_require__(/*! miller-rabin */ \"../node_modules/miller-rabin/lib/mr.js\");\nvar millerRabin = new MillerRabin();\nvar ONE = new BN(1);\nvar TWO = new BN(2);\nvar FIVE = new BN(5);\nvar SIXTEEN = new BN(16);\nvar EIGHT = new BN(8);\nvar TEN = new BN(10);\nvar THREE = new BN(3);\nvar SEVEN = new BN(7);\nvar ELEVEN = new BN(11);\nvar FOUR = new BN(4);\nvar TWELVE = new BN(12);\nvar primes = null;\n\nfunction _getPrimes() {\n  if (primes !== null)\n    return primes;\n\n  var limit = 0x100000;\n  var res = [];\n  res[0] = 2;\n  for (var i = 1, k = 3; k < limit; k += 2) {\n    var sqrt = Math.ceil(Math.sqrt(k));\n    for (var j = 0; j < i && res[j] <= sqrt; j++)\n      if (k % res[j] === 0)\n        break;\n\n    if (i !== j && res[j] <= sqrt)\n      continue;\n\n    res[i++] = k;\n  }\n  primes = res;\n  return res;\n}\n\nfunction simpleSieve(p) {\n  var primes = _getPrimes();\n\n  for (var i = 0; i < primes.length; i++)\n    if (p.modn(primes[i]) === 0) {\n      if (p.cmpn(primes[i]) === 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n  return true;\n}\n\nfunction fermatTest(p) {\n  var red = BN.mont(p);\n  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;\n}\n\nfunction findPrime(bits, gen) {\n  if (bits < 16) {\n    // this is what openssl does\n    if (gen === 2 || gen === 5) {\n      return new BN([0x8c, 0x7b]);\n    } else {\n      return new BN([0x8c, 0x27]);\n    }\n  }\n  gen = new BN(gen);\n\n  var num, n2;\n\n  while (true) {\n    num = new BN(randomBytes(Math.ceil(bits / 8)));\n    while (num.bitLength() > bits) {\n      num.ishrn(1);\n    }\n    if (num.isEven()) {\n      num.iadd(ONE);\n    }\n    if (!num.testn(1)) {\n      num.iadd(TWO);\n    }\n    if (!gen.cmp(TWO)) {\n      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {\n        num.iadd(FOUR);\n      }\n    } else if (!gen.cmp(FIVE)) {\n      while (num.mod(TEN).cmp(THREE)) {\n        num.iadd(FOUR);\n      }\n    }\n    n2 = num.shrn(1);\n    if (simpleSieve(n2) && simpleSieve(num) &&\n      fermatTest(n2) && fermatTest(num) &&\n      millerRabin.test(n2) && millerRabin.test(num)) {\n      return num;\n    }\n  }\n\n}\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/diffie-hellman/lib/generatePrime.js?");

/***/ }),

/***/ "../node_modules/diffie-hellman/lib/primes.json":
/*!******************************************************!*\
  !*** ../node_modules/diffie-hellman/lib/primes.json ***!
  \******************************************************/
/*! exports provided: modp1, modp2, modp5, modp14, modp15, modp16, modp17, modp18, default */
/***/ (function(module) {

eval("module.exports = JSON.parse(\"{\\\"modp1\\\":{\\\"gen\\\":\\\"02\\\",\\\"prime\\\":\\\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff\\\"},\\\"modp2\\\":{\\\"gen\\\":\\\"02\\\",\\\"prime\\\":\\\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff\\\"},\\\"modp5\\\":{\\\"gen\\\":\\\"02\\\",\\\"prime\\\":\\\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff\\\"},\\\"modp14\\\":{\\\"gen\\\":\\\"02\\\",\\\"prime\\\":\\\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff\\\"},\\\"modp15\\\":{\\\"gen\\\":\\\"02\\\",\\\"prime\\\":\\\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff\\\"},\\\"modp16\\\":{\\\"gen\\\":\\\"02\\\",\\\"prime\\\":\\\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff\\\"},\\\"modp17\\\":{\\\"gen\\\":\\\"02\\\",\\\"prime\\\":\\\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff\\\"},\\\"modp18\\\":{\\\"gen\\\":\\\"02\\\",\\\"prime\\\":\\\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff\\\"}}\");\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/diffie-hellman/lib/primes.json?");

/***/ }),

/***/ "../node_modules/elliptic/lib/elliptic.js":
/*!************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar elliptic = exports;\n\nelliptic.version = __webpack_require__(/*! ../package.json */ \"../node_modules/elliptic/package.json\").version;\nelliptic.utils = __webpack_require__(/*! ./elliptic/utils */ \"../node_modules/elliptic/lib/elliptic/utils.js\");\nelliptic.rand = __webpack_require__(/*! brorand */ \"../node_modules/brorand/index.js\");\nelliptic.curve = __webpack_require__(/*! ./elliptic/curve */ \"../node_modules/elliptic/lib/elliptic/curve/index.js\");\nelliptic.curves = __webpack_require__(/*! ./elliptic/curves */ \"../node_modules/elliptic/lib/elliptic/curves.js\");\n\n// Protocols\nelliptic.ec = __webpack_require__(/*! ./elliptic/ec */ \"../node_modules/elliptic/lib/elliptic/ec/index.js\");\nelliptic.eddsa = __webpack_require__(/*! ./elliptic/eddsa */ \"../node_modules/elliptic/lib/elliptic/eddsa/index.js\");\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/elliptic/lib/elliptic.js?");

/***/ }),

/***/ "../node_modules/elliptic/lib/elliptic/curve/base.js":
/*!***********************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/curve/base.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar BN = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\");\nvar utils = __webpack_require__(/*! ../utils */ \"../node_modules/elliptic/lib/elliptic/utils.js\");\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  for (var j = 0; j < naf.length; j += doubles.step) {\n    var nafW = 0;\n    for (var k = j + doubles.step - 1; k >= j; k--)\n      nafW = (nafW << 1) + naf[k];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (var j = 0; j < repr.length; j++) {\n      var nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var k = 0; i >= 0 && naf[i] === 0; i--)\n      k++;\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n                                                       points,\n                                                       coeffs,\n                                                       len,\n                                                       jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  for (var i = 0; i < len; i++) {\n    var p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (var i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a]);\n      naf[b] = getNAF(coeffs[b], wndWidth[b]);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b] /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (var j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (var i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (var j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (var j = 0; j < len; j++) {\n      var z = tmp[j];\n      var p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (var i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n                          bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/elliptic/lib/elliptic/curve/base.js?");

/***/ }),

/***/ "../node_modules/elliptic/lib/elliptic/curve/edwards.js":
/*!**************************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/curve/edwards.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"../node_modules/elliptic/lib/elliptic/utils.js\");\nvar BN = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\");\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\nvar Base = __webpack_require__(/*! ./base */ \"../node_modules/elliptic/lib/elliptic/curve/base.js\");\n\nvar assert = utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // E = a * C\n    var e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      var h = this.z.redSqr();\n      // J = F - 2 * H\n      var j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    var e = c.redAdd(d);\n    // H = (c * Z1)^2\n    var h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    var j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n                          this.y,\n                          this.z,\n                          this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/elliptic/lib/elliptic/curve/edwards.js?");

/***/ }),

/***/ "../node_modules/elliptic/lib/elliptic/curve/index.js":
/*!************************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/curve/index.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar curve = exports;\n\ncurve.base = __webpack_require__(/*! ./base */ \"../node_modules/elliptic/lib/elliptic/curve/base.js\");\ncurve.short = __webpack_require__(/*! ./short */ \"../node_modules/elliptic/lib/elliptic/curve/short.js\");\ncurve.mont = __webpack_require__(/*! ./mont */ \"../node_modules/elliptic/lib/elliptic/curve/mont.js\");\ncurve.edwards = __webpack_require__(/*! ./edwards */ \"../node_modules/elliptic/lib/elliptic/curve/edwards.js\");\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/elliptic/lib/elliptic/curve/index.js?");

/***/ }),

/***/ "../node_modules/elliptic/lib/elliptic/curve/mont.js":
/*!***********************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/curve/mont.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar BN = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\");\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\nvar Base = __webpack_require__(/*! ./base */ \"../node_modules/elliptic/lib/elliptic/curve/base.js\");\n\nvar utils = __webpack_require__(/*! ../utils */ \"../node_modules/elliptic/lib/elliptic/utils.js\");\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/elliptic/lib/elliptic/curve/mont.js?");

/***/ }),

/***/ "../node_modules/elliptic/lib/elliptic/curve/short.js":
/*!************************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/curve/short.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"../node_modules/elliptic/lib/elliptic/utils.js\");\nvar BN = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\");\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\nvar Base = __webpack_require__(/*! ./base */ \"../node_modules/elliptic/lib/elliptic/curve/base.js\");\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16)\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 }\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n  var npoints = this._endoWnafT1;\n  var ncoeffs = this._endoWnafT2;\n  for (var i = 0; i < points.length; i++) {\n    var split = this._endoSplit(coeffs[i]);\n    var p = points[i];\n    var beta = p._getBeta();\n\n    if (split.k1.negative) {\n      split.k1.ineg();\n      p = p.neg(true);\n    }\n    if (split.k2.negative) {\n      split.k2.ineg();\n      beta = beta.neg(true);\n    }\n\n    npoints[i * 2] = p;\n    npoints[i * 2 + 1] = beta;\n    ncoeffs[i * 2] = split.k1;\n    ncoeffs[i * 2 + 1] = split.k2;\n  }\n  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n  // Clean-up references to points and coefficients\n  for (var j = 0; j < i * 2; j++) {\n    npoints[j] = null;\n    ncoeffs[j] = null;\n  }\n  return res;\n};\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul)\n      }\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point))\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point))\n    }\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate)\n      }\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (var i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (var i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/elliptic/lib/elliptic/curve/short.js?");

/***/ }),

/***/ "../node_modules/elliptic/lib/elliptic/curves.js":
/*!*******************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/curves.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar curves = exports;\n\nvar hash = __webpack_require__(/*! hash.js */ \"../node_modules/hash.js/lib/hash.js\");\nvar curve = __webpack_require__(/*! ./curve */ \"../node_modules/elliptic/lib/elliptic/curve/index.js\");\nvar utils = __webpack_require__(/*! ./utils */ \"../node_modules/elliptic/lib/elliptic/utils.js\");\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve\n      });\n      return curve;\n    }\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'\n  ]\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'\n  ]\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'\n  ]\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'\n  ]\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650'\n  ]\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9'\n  ]\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658'\n  ]\n});\n\nvar pre;\ntry {\n  pre = __webpack_require__(/*! ./precomputed/secp256k1 */ \"../node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js\");\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3'\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15'\n    }\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre\n  ]\n});\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/elliptic/lib/elliptic/curves.js?");

/***/ }),

/***/ "../node_modules/elliptic/lib/elliptic/ec/index.js":
/*!*********************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/ec/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar BN = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\");\nvar HmacDRBG = __webpack_require__(/*! hmac-drbg */ \"../node_modules/hmac-drbg/lib/hmac-drbg.js\");\nvar utils = __webpack_require__(/*! ../utils */ \"../node_modules/elliptic/lib/elliptic/utils.js\");\nvar curves = __webpack_require__(/*! ../curves */ \"../node_modules/elliptic/lib/elliptic/curves.js\");\nvar rand = __webpack_require__(/*! brorand */ \"../node_modules/brorand/index.js\");\nvar assert = utils.assert;\n\nvar KeyPair = __webpack_require__(/*! ./key */ \"../node_modules/elliptic/lib/elliptic/ec/key.js\");\nvar Signature = __webpack_require__(/*! ./signature */ \"../node_modules/elliptic/lib/elliptic/ec/signature.js\");\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(curves.hasOwnProperty(options), 'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray()\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  do {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  } while (true);\n};\n\nEC.prototype._truncateToN = function truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8'\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; true; iter++) {\n    var k = options.k ?\n        options.k(iter) :\n        new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n\n  if (!this.curve._maxwellTrick) {\n    var p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  var p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/elliptic/lib/elliptic/ec/index.js?");

/***/ }),

/***/ "../node_modules/elliptic/lib/elliptic/ec/key.js":
/*!*******************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/ec/key.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar BN = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\");\nvar utils = __webpack_require__(/*! ../utils */ \"../node_modules/elliptic/lib/elliptic/utils.js\");\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/elliptic/lib/elliptic/ec/key.js?");

/***/ }),

/***/ "../node_modules/elliptic/lib/elliptic/ec/signature.js":
/*!*************************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/ec/signature.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar BN = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\");\n\nvar utils = __webpack_require__(/*! ../utils */ \"../node_modules/elliptic/lib/elliptic/utils.js\");\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n  }\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0 && (r[1] & 0x80)) {\n    r = r.slice(1);\n  }\n  if (s[0] === 0 && (s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/elliptic/lib/elliptic/ec/signature.js?");

/***/ }),

/***/ "../node_modules/elliptic/lib/elliptic/eddsa/index.js":
/*!************************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/eddsa/index.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar hash = __webpack_require__(/*! hash.js */ \"../node_modules/hash.js/lib/hash.js\");\nvar curves = __webpack_require__(/*! ../curves */ \"../node_modules/elliptic/lib/elliptic/curves.js\");\nvar utils = __webpack_require__(/*! ../utils */ \"../node_modules/elliptic/lib/elliptic/utils.js\");\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = __webpack_require__(/*! ./key */ \"../node_modules/elliptic/lib/elliptic/eddsa/key.js\");\nvar Signature = __webpack_require__(/*! ./signature */ \"../node_modules/elliptic/lib/elliptic/eddsa/signature.js\");\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  var curve = curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n               .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/elliptic/lib/elliptic/eddsa/index.js?");

/***/ }),

/***/ "../node_modules/elliptic/lib/elliptic/eddsa/key.js":
/*!**********************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/eddsa/key.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"../node_modules/elliptic/lib/elliptic/utils.js\");\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/elliptic/lib/elliptic/eddsa/key.js?");

/***/ }),

/***/ "../node_modules/elliptic/lib/elliptic/eddsa/signature.js":
/*!****************************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/eddsa/signature.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar BN = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\");\nvar utils = __webpack_require__(/*! ../utils */ \"../node_modules/elliptic/lib/elliptic/utils.js\");\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength)\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/elliptic/lib/elliptic/eddsa/signature.js?");

/***/ }),

/***/ "../node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js":
/*!**********************************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'\n      ]\n    ]\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'\n      ]\n    ]\n  }\n};\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js?");

/***/ }),

/***/ "../node_modules/elliptic/lib/elliptic/utils.js":
/*!******************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/utils.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = exports;\nvar BN = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\");\nvar minAssert = __webpack_require__(/*! minimalistic-assert */ \"../node_modules/minimalistic-assert/index.js\");\nvar minUtils = __webpack_require__(/*! minimalistic-crypto-utils */ \"../node_modules/minimalistic-crypto-utils/lib/utils.js\");\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w) {\n  var naf = [];\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n  while (k.cmpn(1) >= 0) {\n    var z;\n    if (k.isOdd()) {\n      var mod = k.andln(ws - 1);\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n    naf.push(z);\n\n    // Optimization, shift by word if possible\n    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;\n    for (var i = 1; i < shift; i++)\n      naf.push(0);\n    k.iushrn(shift);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    []\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      var m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      var m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n           this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n                                     bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/elliptic/lib/elliptic/utils.js?");

/***/ }),

/***/ "../node_modules/elliptic/package.json":
/*!*********************************************!*\
  !*** ../node_modules/elliptic/package.json ***!
  \*********************************************/
/*! exports provided: name, version, description, main, files, scripts, repository, keywords, author, license, bugs, homepage, devDependencies, dependencies, _resolved, _integrity, _from, default */
/***/ (function(module) {

eval("module.exports = JSON.parse(\"{\\\"name\\\":\\\"elliptic\\\",\\\"version\\\":\\\"6.5.1\\\",\\\"description\\\":\\\"EC cryptography\\\",\\\"main\\\":\\\"lib/elliptic.js\\\",\\\"files\\\":[\\\"lib\\\"],\\\"scripts\\\":{\\\"jscs\\\":\\\"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js\\\",\\\"jshint\\\":\\\"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js\\\",\\\"lint\\\":\\\"npm run jscs && npm run jshint\\\",\\\"unit\\\":\\\"istanbul test _mocha --reporter=spec test/index.js\\\",\\\"test\\\":\\\"npm run lint && npm run unit\\\",\\\"version\\\":\\\"grunt dist && git add dist/\\\"},\\\"repository\\\":{\\\"type\\\":\\\"git\\\",\\\"url\\\":\\\"git@github.com:indutny/elliptic\\\"},\\\"keywords\\\":[\\\"EC\\\",\\\"Elliptic\\\",\\\"curve\\\",\\\"Cryptography\\\"],\\\"author\\\":\\\"Fedor Indutny <fedor@indutny.com>\\\",\\\"license\\\":\\\"MIT\\\",\\\"bugs\\\":{\\\"url\\\":\\\"https://github.com/indutny/elliptic/issues\\\"},\\\"homepage\\\":\\\"https://github.com/indutny/elliptic\\\",\\\"devDependencies\\\":{\\\"brfs\\\":\\\"^1.4.3\\\",\\\"coveralls\\\":\\\"^3.0.4\\\",\\\"grunt\\\":\\\"^1.0.4\\\",\\\"grunt-browserify\\\":\\\"^5.0.0\\\",\\\"grunt-cli\\\":\\\"^1.2.0\\\",\\\"grunt-contrib-connect\\\":\\\"^1.0.0\\\",\\\"grunt-contrib-copy\\\":\\\"^1.0.0\\\",\\\"grunt-contrib-uglify\\\":\\\"^1.0.1\\\",\\\"grunt-mocha-istanbul\\\":\\\"^3.0.1\\\",\\\"grunt-saucelabs\\\":\\\"^9.0.1\\\",\\\"istanbul\\\":\\\"^0.4.2\\\",\\\"jscs\\\":\\\"^3.0.7\\\",\\\"jshint\\\":\\\"^2.6.0\\\",\\\"mocha\\\":\\\"^6.1.4\\\"},\\\"dependencies\\\":{\\\"bn.js\\\":\\\"^4.4.0\\\",\\\"brorand\\\":\\\"^1.0.1\\\",\\\"hash.js\\\":\\\"^1.0.0\\\",\\\"hmac-drbg\\\":\\\"^1.0.0\\\",\\\"inherits\\\":\\\"^2.0.1\\\",\\\"minimalistic-assert\\\":\\\"^1.0.0\\\",\\\"minimalistic-crypto-utils\\\":\\\"^1.0.0\\\"},\\\"_resolved\\\":\\\"https://registry.npmjs.org/elliptic/-/elliptic-6.5.1.tgz\\\",\\\"_integrity\\\":\\\"sha512-xvJINNLbTeWQjrl6X+7eQCrIy/YPv5XCpKW6kB5mKvtnGILoLDcySuwomfdzt0BMdLNVnuRNTuzKNHj0bva1Cg==\\\",\\\"_from\\\":\\\"elliptic@6.5.1\\\"}\");\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/elliptic/package.json?");

/***/ }),

/***/ "../node_modules/encoding-japanese/src/config.js":
/*!*******************************************************!*\
  !*** ../node_modules/encoding-japanese/src/config.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var util = __webpack_require__(/*! ./util */ \"../node_modules/encoding-japanese/src/util.js\");\nvar EncodingTable = __webpack_require__(/*! ./encoding-table */ \"../node_modules/encoding-japanese/src/encoding-table.js\");\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n// Alternate character when can't detect\nexports.UNKNOWN_CHARACTER = 63; // '?'\n\nvar HAS_TYPED = exports.HAS_TYPED = typeof Uint8Array !== 'undefined' && typeof Uint16Array !== 'undefined';\n\n// Test for String.fromCharCode.apply\nvar CAN_CHARCODE_APPLY = false;\nvar CAN_CHARCODE_APPLY_TYPED = false;\n\ntry {\n  if (String.fromCharCode.apply(null, [0x61]) === 'a') {\n    CAN_CHARCODE_APPLY = true;\n  }\n} catch (e) {}\n\nif (HAS_TYPED) {\n  try {\n    if (String.fromCharCode.apply(null, new Uint8Array([0x61])) === 'a') {\n      CAN_CHARCODE_APPLY_TYPED = true;\n    }\n  } catch (e) {}\n}\n\nexports.CAN_CHARCODE_APPLY = CAN_CHARCODE_APPLY;\nexports.CAN_CHARCODE_APPLY_TYPED = CAN_CHARCODE_APPLY_TYPED;\n\n// Function.prototype.apply stack max range\nexports.APPLY_BUFFER_SIZE = 65533;\nexports.APPLY_BUFFER_SIZE_OK = null;\n\n\nvar EncodingNames = exports.EncodingNames = {\n  UTF32: {\n    order: 0\n  },\n  UTF32BE: {\n    alias: ['UCS4']\n  },\n  UTF32LE: null,\n  UTF16: {\n    order: 1\n  },\n  UTF16BE: {\n    alias: ['UCS2']\n  },\n  UTF16LE: null,\n  BINARY: {\n    order: 2\n  },\n  ASCII: {\n    order: 3,\n    alias: ['ISO646', 'CP367']\n  },\n  JIS: {\n    order: 4,\n    alias: ['ISO2022JP']\n  },\n  UTF8: {\n    order: 5\n  },\n  EUCJP: {\n    order: 6\n  },\n  SJIS: {\n    order: 7,\n    alias: ['CP932', 'MSKANJI', 'WINDOWS31J']\n  },\n  UNICODE: {\n    order: 8\n  }\n};\n\nvar EncodingAliases = {};\n\nexports.EncodingOrders = (function() {\n  var aliases = EncodingAliases;\n\n  var names = util.getKeys(EncodingNames);\n  var orders = [];\n  var name, encoding, j, l;\n\n  for (var i = 0, len = names.length; i < len; i++) {\n    name = names[i];\n    aliases[name] = name;\n\n    encoding = EncodingNames[name];\n    if (encoding != null) {\n      if (typeof encoding.order !== 'undefined') {\n        orders[orders.length] = name;\n      }\n\n      if (encoding.alias) {\n        // Create encoding aliases\n        for (j = 0, l = encoding.alias.length; j < l; j++) {\n          aliases[encoding.alias[j]] = name;\n        }\n      }\n    }\n  }\n\n  orders.sort(function(a, b) {\n    return EncodingNames[a].order - EncodingNames[b].order;\n  });\n\n  return orders;\n}());\n\n\nfunction init_JIS_TO_UTF8_TABLE() {\n  if (EncodingTable.JIS_TO_UTF8_TABLE === null) {\n    EncodingTable.JIS_TO_UTF8_TABLE = {};\n\n    var keys = util.getKeys(EncodingTable.UTF8_TO_JIS_TABLE);\n    var i = 0;\n    var len = keys.length;\n    var key, value;\n\n    for (; i < len; i++) {\n      key = keys[i];\n      value = EncodingTable.UTF8_TO_JIS_TABLE[key];\n      if (value > 0x5F) {\n        EncodingTable.JIS_TO_UTF8_TABLE[value] = key | 0;\n      }\n    }\n\n    EncodingTable.JISX0212_TO_UTF8_TABLE = {};\n    keys = util.getKeys(EncodingTable.UTF8_TO_JISX0212_TABLE);\n    len = keys.length;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      value = EncodingTable.UTF8_TO_JISX0212_TABLE[key];\n      EncodingTable.JISX0212_TO_UTF8_TABLE[value] = key | 0;\n    }\n  }\n}\nexports.init_JIS_TO_UTF8_TABLE = init_JIS_TO_UTF8_TABLE;\n\n/**\n * Assign the internal encoding name from the argument encoding name\n */\nfunction assignEncodingName(target) {\n  var name = '';\n  var expect = ('' + target).toUpperCase().replace(/[^A-Z0-9]+/g, '');\n  var aliasNames = util.getKeys(EncodingAliases);\n  var len = aliasNames.length;\n  var hit = 0;\n  var encoding, encodingLen, j;\n\n  for (var i = 0; i < len; i++) {\n    encoding = aliasNames[i];\n    if (encoding === expect) {\n      name = encoding;\n      break;\n    }\n\n    encodingLen = encoding.length;\n    for (j = hit; j < encodingLen; j++) {\n      if (encoding.slice(0, j) === expect.slice(0, j) ||\n          encoding.slice(-j) === expect.slice(-j)) {\n        name = encoding;\n        hit = j;\n      }\n    }\n  }\n\n  if (hasOwnProperty.call(EncodingAliases, name)) {\n    return EncodingAliases[name];\n  }\n\n  return name;\n}\nexports.assignEncodingName = assignEncodingName;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/encoding-japanese/src/config.js?");

/***/ }),

/***/ "../node_modules/encoding-japanese/src/encoding-convert.js":
/*!*****************************************************************!*\
  !*** ../node_modules/encoding-japanese/src/encoding-convert.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var config = __webpack_require__(/*! ./config */ \"../node_modules/encoding-japanese/src/config.js\");\nvar util = __webpack_require__(/*! ./util */ \"../node_modules/encoding-japanese/src/util.js\");\nvar EncodingDetect = __webpack_require__(/*! ./encoding-detect */ \"../node_modules/encoding-japanese/src/encoding-detect.js\");\nvar EncodingTable = __webpack_require__(/*! ./encoding-table */ \"../node_modules/encoding-japanese/src/encoding-table.js\");\n\n/**\n * JIS to SJIS\n */\nfunction JISToSJIS(data) {\n  var results = [];\n  var index = 0;\n  var i = 0;\n  var len = data && data.length;\n  var b1, b2;\n\n  for (; i < len; i++) {\n    // escape sequence\n    while (data[i] === 0x1B) {\n      if ((data[i + 1] === 0x24 && data[i + 2] === 0x42) ||\n          (data[i + 1] === 0x24 && data[i + 2] === 0x40)) {\n        index = 1;\n      } else if ((data[i + 1] === 0x28 && data[i + 2] === 0x49)) {\n        index = 2;\n      } else if (data[i + 1] === 0x24 && data[i + 2] === 0x28 &&\n                 data[i + 3] === 0x44) {\n        index = 3;\n        i++;\n      } else {\n        index = 0;\n      }\n\n      i += 3;\n      if (data[i] === void 0) {\n        return results;\n      }\n    }\n\n    if (index === 1) {\n      b1 = data[i];\n      b2 = data[++i];\n      if (b1 & 0x01) {\n        b1 >>= 1;\n        if (b1 < 0x2F) {\n          b1 += 0x71;\n        } else {\n          b1 -= 0x4F;\n        }\n        if (b2 > 0x5F) {\n          b2 += 0x20;\n        } else {\n          b2 += 0x1F;\n        }\n      } else {\n        b1 >>= 1;\n        if (b1 <= 0x2F) {\n          b1 += 0x70;\n        } else {\n          b1 -= 0x50;\n        }\n        b2 += 0x7E;\n      }\n      results[results.length] = b1 & 0xFF;\n      results[results.length] = b2 & 0xFF;\n    } else if (index === 2) {\n      results[results.length] = data[i] + 0x80 & 0xFF;\n    } else if (index === 3) {\n      // Shift_JIS cannot convert JIS X 0212:1990.\n      results[results.length] = config.UNKNOWN_CHARACTER;\n    } else {\n      results[results.length] = data[i] & 0xFF;\n    }\n  }\n\n  return results;\n}\nexports.JISToSJIS = JISToSJIS;\n\n/**\n * JIS to EUCJP\n */\nfunction JISToEUCJP(data) {\n  var results = [];\n  var index = 0;\n  var len = data && data.length;\n  var i = 0;\n\n  for (; i < len; i++) {\n\n    // escape sequence\n    while (data[i] === 0x1B) {\n      if ((data[i + 1] === 0x24 && data[i + 2] === 0x42) ||\n          (data[i + 1] === 0x24 && data[i + 2] === 0x40)) {\n        index = 1;\n      } else if ((data[i + 1] === 0x28 && data[i + 2] === 0x49)) {\n        index = 2;\n      } else if (data[i + 1] === 0x24 && data[i + 2] === 0x28 &&\n                 data[i + 3] === 0x44) {\n        index = 3;\n        i++;\n      } else {\n        index = 0;\n      }\n\n      i += 3;\n      if (data[i] === void 0) {\n        return results;\n      }\n    }\n\n    if (index === 1) {\n      results[results.length] = data[i] + 0x80 & 0xFF;\n      results[results.length] = data[++i] + 0x80 & 0xFF;\n    } else if (index === 2) {\n      results[results.length] = 0x8E;\n      results[results.length] = data[i] + 0x80 & 0xFF;\n    } else if (index === 3) {\n      results[results.length] = 0x8F;\n      results[results.length] = data[i] + 0x80 & 0xFF;\n      results[results.length] = data[++i] + 0x80 & 0xFF;\n    } else {\n      results[results.length] = data[i] & 0xFF;\n    }\n  }\n\n  return results;\n}\nexports.JISToEUCJP = JISToEUCJP;\n\n/**\n * SJIS to JIS\n */\nfunction SJISToJIS(data) {\n  var results = [];\n  var index = 0;\n  var len = data && data.length;\n  var i = 0;\n  var b1, b2;\n\n  var esc = [\n    0x1B, 0x28, 0x42,\n    0x1B, 0x24, 0x42,\n    0x1B, 0x28, 0x49\n  ];\n\n  for (; i < len; i++) {\n    b1 = data[i];\n    if (b1 >= 0xA1 && b1 <= 0xDF) {\n      if (index !== 2) {\n        index = 2;\n        results[results.length] = esc[6];\n        results[results.length] = esc[7];\n        results[results.length] = esc[8];\n      }\n      results[results.length] = b1 - 0x80 & 0xFF;\n    } else if (b1 >= 0x80) {\n      if (index !== 1) {\n        index = 1;\n        results[results.length] = esc[3];\n        results[results.length] = esc[4];\n        results[results.length] = esc[5];\n      }\n\n      b1 <<= 1;\n      b2 = data[++i];\n      if (b2 < 0x9F) {\n        if (b1 < 0x13F) {\n          b1 -= 0xE1;\n        } else {\n          b1 -= 0x61;\n        }\n        if (b2 > 0x7E) {\n          b2 -= 0x20;\n        } else {\n          b2 -= 0x1F;\n        }\n      } else {\n        if (b1 < 0x13F) {\n          b1 -= 0xE0;\n        } else {\n          b1 -= 0x60;\n        }\n        b2 -= 0x7E;\n      }\n      results[results.length] = b1 & 0xFF;\n      results[results.length] = b2 & 0xFF;\n    } else {\n      if (index !== 0) {\n        index = 0;\n        results[results.length] = esc[0];\n        results[results.length] = esc[1];\n        results[results.length] = esc[2];\n      }\n      results[results.length] = b1 & 0xFF;\n    }\n  }\n\n  if (index !== 0) {\n    results[results.length] = esc[0];\n    results[results.length] = esc[1];\n    results[results.length] = esc[2];\n  }\n\n  return results;\n}\nexports.SJISToJIS = SJISToJIS;\n\n/**\n * SJIS to EUCJP\n */\nfunction SJISToEUCJP(data) {\n  var results = [];\n  var len = data && data.length;\n  var i = 0;\n  var b1, b2;\n\n  for (; i < len; i++) {\n    b1 = data[i];\n    if (b1 >= 0xA1 && b1 <= 0xDF) {\n      results[results.length] = 0x8E;\n      results[results.length] = b1;\n    } else if (b1 >= 0x81) {\n      b2 = data[++i];\n      b1 <<= 1;\n      if (b2 < 0x9F) {\n        if (b1 < 0x13F) {\n          b1 -= 0x61;\n        } else {\n          b1 -= 0xE1;\n        }\n\n        if (b2 > 0x7E) {\n          b2 += 0x60;\n        } else {\n          b2 += 0x61;\n        }\n      } else {\n        if (b1 < 0x13F) {\n          b1 -= 0x60;\n        } else {\n          b1 -= 0xE0;\n        }\n        b2 += 0x02;\n      }\n      results[results.length] = b1 & 0xFF;\n      results[results.length] = b2 & 0xFF;\n    } else {\n      results[results.length] = b1 & 0xFF;\n    }\n  }\n\n  return results;\n}\nexports.SJISToEUCJP = SJISToEUCJP;\n\n/**\n * EUCJP to JIS\n */\nfunction EUCJPToJIS(data) {\n  var results = [];\n  var index = 0;\n  var len = data && data.length;\n  var i = 0;\n  var b;\n\n  // escape sequence\n  var esc = [\n    0x1B, 0x28, 0x42,\n    0x1B, 0x24, 0x42,\n    0x1B, 0x28, 0x49,\n    0x1B, 0x24, 0x28, 0x44\n  ];\n\n  for (; i < len; i++) {\n    b = data[i];\n    if (b === 0x8E) {\n      if (index !== 2) {\n        index = 2;\n        results[results.length] = esc[6];\n        results[results.length] = esc[7];\n        results[results.length] = esc[8];\n      }\n      results[results.length] = data[++i] - 0x80 & 0xFF;\n    } else if (b === 0x8F) {\n      if (index !== 3) {\n        index = 3;\n        results[results.length] = esc[9];\n        results[results.length] = esc[10];\n        results[results.length] = esc[11];\n        results[results.length] = esc[12];\n      }\n      results[results.length] = data[++i] - 0x80 & 0xFF;\n      results[results.length] = data[++i] - 0x80 & 0xFF;\n    } else if (b > 0x8E) {\n      if (index !== 1) {\n        index = 1;\n        results[results.length] = esc[3];\n        results[results.length] = esc[4];\n        results[results.length] = esc[5];\n      }\n      results[results.length] = b - 0x80 & 0xFF;\n      results[results.length] = data[++i] - 0x80 & 0xFF;\n    } else {\n      if (index !== 0) {\n        index = 0;\n        results[results.length] = esc[0];\n        results[results.length] = esc[1];\n        results[results.length] = esc[2];\n      }\n      results[results.length] = b & 0xFF;\n    }\n  }\n\n  if (index !== 0) {\n    results[results.length] = esc[0];\n    results[results.length] = esc[1];\n    results[results.length] = esc[2];\n  }\n\n  return results;\n}\nexports.EUCJPToJIS = EUCJPToJIS;\n\n/**\n * EUCJP to SJIS\n */\nfunction EUCJPToSJIS(data) {\n  var results = [];\n  var len = data && data.length;\n  var i = 0;\n  var b1, b2;\n\n  for (; i < len; i++) {\n    b1 = data[i];\n    if (b1 === 0x8F) {\n      results[results.length] = config.UNKNOWN_CHARACTER;\n      i += 2;\n    } else if (b1 > 0x8E) {\n      b2 = data[++i];\n      if (b1 & 0x01) {\n        b1 >>= 1;\n        if (b1 < 0x6F) {\n          b1 += 0x31;\n        } else {\n          b1 += 0x71;\n        }\n\n        if (b2 > 0xDF) {\n          b2 -= 0x60;\n        } else {\n          b2 -= 0x61;\n        }\n      } else {\n        b1 >>= 1;\n        if (b1 <= 0x6F) {\n          b1 += 0x30;\n        } else {\n          b1 += 0x70;\n        }\n        b2 -= 0x02;\n      }\n      results[results.length] = b1 & 0xFF;\n      results[results.length] = b2 & 0xFF;\n    } else if (b1 === 0x8E) {\n      results[results.length] = data[++i] & 0xFF;\n    } else {\n      results[results.length] = b1 & 0xFF;\n    }\n  }\n\n  return results;\n}\nexports.EUCJPToSJIS = EUCJPToSJIS;\n\n/**\n * SJIS To UTF-8\n */\nfunction SJISToUTF8(data) {\n  config.init_JIS_TO_UTF8_TABLE();\n\n  var results = [];\n  var i = 0;\n  var len = data && data.length;\n  var b, b1, b2, u2, u3, jis, utf8;\n\n  for (; i < len; i++) {\n    b = data[i];\n    if (b >= 0xA1 && b <= 0xDF) {\n      b2 = b - 0x40;\n      u2 = 0xBC | ((b2 >> 6) & 0x03);\n      u3 = 0x80 | (b2 & 0x3F);\n\n      results[results.length] = 0xEF;\n      results[results.length] = u2 & 0xFF;\n      results[results.length] = u3 & 0xFF;\n    } else if (b >= 0x80) {\n      b1 = b << 1;\n      b2 = data[++i];\n\n      if (b2 < 0x9F) {\n        if (b1 < 0x13F) {\n          b1 -= 0xE1;\n        } else {\n          b1 -= 0x61;\n        }\n\n        if (b2 > 0x7E) {\n          b2 -= 0x20;\n        } else {\n          b2 -= 0x1F;\n        }\n      } else {\n        if (b1 < 0x13F) {\n          b1 -= 0xE0;\n        } else {\n          b1 -= 0x60;\n        }\n        b2 -= 0x7E;\n      }\n\n      b1 &= 0xFF;\n      jis = (b1 << 8) + b2;\n\n      utf8 = EncodingTable.JIS_TO_UTF8_TABLE[jis];\n      if (utf8 === void 0) {\n        results[results.length] = config.UNKNOWN_CHARACTER;\n      } else {\n        if (utf8 < 0xFFFF) {\n          results[results.length] = utf8 >> 8 & 0xFF;\n          results[results.length] = utf8 & 0xFF;\n        } else {\n          results[results.length] = utf8 >> 16 & 0xFF;\n          results[results.length] = utf8 >> 8 & 0xFF;\n          results[results.length] = utf8 & 0xFF;\n        }\n      }\n    } else {\n      results[results.length] = data[i] & 0xFF;\n    }\n  }\n\n  return results;\n}\nexports.SJISToUTF8 = SJISToUTF8;\n\n/**\n * EUC-JP to UTF-8\n */\nfunction EUCJPToUTF8(data) {\n  config.init_JIS_TO_UTF8_TABLE();\n\n  var results = [];\n  var i = 0;\n  var len = data && data.length;\n  var b, b2, u2, u3, j2, j3, jis, utf8;\n\n  for (; i < len; i++) {\n    b = data[i];\n    if (b === 0x8E) {\n      b2 = data[++i] - 0x40;\n      u2 = 0xBC | ((b2 >> 6) & 0x03);\n      u3 = 0x80 | (b2 & 0x3F);\n\n      results[results.length] = 0xEF;\n      results[results.length] = u2 & 0xFF;\n      results[results.length] = u3 & 0xFF;\n    } else if (b === 0x8F) {\n      j2 = data[++i] - 0x80;\n      j3 = data[++i] - 0x80;\n      jis = (j2 << 8) + j3;\n\n      utf8 = EncodingTable.JISX0212_TO_UTF8_TABLE[jis];\n      if (utf8 === void 0) {\n        results[results.length] = config.UNKNOWN_CHARACTER;\n      } else {\n        if (utf8 < 0xFFFF) {\n          results[results.length] = utf8 >> 8 & 0xFF;\n          results[results.length] = utf8 & 0xFF;\n        } else {\n          results[results.length] = utf8 >> 16 & 0xFF;\n          results[results.length] = utf8 >>  8 & 0xFF;\n          results[results.length] = utf8 & 0xFF;\n        }\n      }\n    } else if (b >= 0x80) {\n      jis = ((b - 0x80) << 8) + (data[++i] - 0x80);\n\n      utf8 = EncodingTable.JIS_TO_UTF8_TABLE[jis];\n      if (utf8 === void 0) {\n        results[results.length] = config.UNKNOWN_CHARACTER;\n      } else {\n        if (utf8 < 0xFFFF) {\n          results[results.length] = utf8 >> 8 & 0xFF;\n          results[results.length] = utf8 & 0xFF;\n        } else {\n          results[results.length] = utf8 >> 16 & 0xFF;\n          results[results.length] = utf8 >>  8 & 0xFF;\n          results[results.length] = utf8 & 0xFF;\n        }\n      }\n    } else {\n      results[results.length] = data[i] & 0xFF;\n    }\n  }\n\n  return results;\n}\nexports.EUCJPToUTF8 = EUCJPToUTF8;\n\n/**\n * JIS to UTF-8\n */\nfunction JISToUTF8(data) {\n  config.init_JIS_TO_UTF8_TABLE();\n\n  var results = [];\n  var index = 0;\n  var i = 0;\n  var len = data && data.length;\n  var b2, u2, u3, jis, utf8;\n\n  for (; i < len; i++) {\n    while (data[i] === 0x1B) {\n      if ((data[i + 1] === 0x24 && data[i + 2] === 0x42) ||\n          (data[i + 1] === 0x24 && data[i + 2] === 0x40)) {\n        index = 1;\n      } else if (data[i + 1] === 0x28 && data[i + 2] === 0x49) {\n        index = 2;\n      } else if (data[i + 1] === 0x24 && data[i + 2] === 0x28 &&\n                 data[i + 3] === 0x44) {\n        index = 3;\n        i++;\n      } else {\n        index = 0;\n      }\n\n      i += 3;\n      if (data[i] === void 0) {\n        return results;\n      }\n    }\n\n    if (index === 1) {\n      jis = (data[i] << 8) + data[++i];\n\n      utf8 = EncodingTable.JIS_TO_UTF8_TABLE[jis];\n      if (utf8 === void 0) {\n        results[results.length] = config.UNKNOWN_CHARACTER;\n      } else {\n        if (utf8 < 0xFFFF) {\n          results[results.length] = utf8 >> 8 & 0xFF;\n          results[results.length] = utf8 & 0xFF;\n        } else {\n          results[results.length] = utf8 >> 16 & 0xFF;\n          results[results.length] = utf8 >>  8 & 0xFF;\n          results[results.length] = utf8 & 0xFF;\n        }\n      }\n    } else if (index === 2) {\n      b2 = data[i] + 0x40;\n      u2 = 0xBC | ((b2 >> 6) & 0x03);\n      u3 = 0x80 | (b2 & 0x3F);\n\n      results[results.length] = 0xEF;\n      results[results.length] = u2 & 0xFF;\n      results[results.length] = u3 & 0xFF;\n    } else if (index === 3) {\n      jis = (data[i] << 8) + data[++i];\n\n      utf8 = EncodingTable.JISX0212_TO_UTF8_TABLE[jis];\n      if (utf8 === void 0) {\n        results[results.length] = config.UNKNOWN_CHARACTER;\n      } else {\n        if (utf8 < 0xFFFF) {\n          results[results.length] = utf8 >> 8 & 0xFF;\n          results[results.length] = utf8 & 0xFF;\n        } else {\n          results[results.length] = utf8 >> 16 & 0xFF;\n          results[results.length] = utf8 >>  8 & 0xFF;\n          results[results.length] = utf8 & 0xFF;\n        }\n      }\n    } else {\n      results[results.length] = data[i] & 0xFF;\n    }\n  }\n\n  return results;\n}\nexports.JISToUTF8 = JISToUTF8;\n\n/**\n * UTF-8 to SJIS\n */\nfunction UTF8ToSJIS(data) {\n  var results = [];\n  var i = 0;\n  var len = data && data.length;\n  var b, b1, b2, utf8, jis;\n\n  for (; i < len; i++) {\n    b = data[i];\n    if (b >= 0x80) {\n      if (b <= 0xDF) {\n        // 2 bytes\n        utf8 = (b << 8) + data[++i];\n      } else {\n        // 3 bytes\n        utf8 = (b << 16) +\n               (data[++i] << 8) +\n               (data[++i] & 0xFF);\n      }\n\n      jis = EncodingTable.UTF8_TO_JIS_TABLE[utf8];\n      if (jis === void 0) {\n        results[results.length] = config.UNKNOWN_CHARACTER;\n      } else {\n        if (jis < 0xFF) {\n          results[results.length] = jis + 0x80;\n        } else {\n          if (jis > 0x10000) {\n            jis -= 0x10000;\n          }\n\n          b1 = jis >> 8;\n          b2 = jis & 0xFF;\n          if (b1 & 0x01) {\n            b1 >>= 1;\n            if (b1 < 0x2F) {\n              b1 += 0x71;\n            } else {\n              b1 -= 0x4F;\n            }\n\n            if (b2 > 0x5F) {\n              b2 += 0x20;\n            } else {\n              b2 += 0x1F;\n            }\n          } else {\n            b1 >>= 1;\n            if (b1 <= 0x2F) {\n              b1 += 0x70;\n            } else {\n              b1 -= 0x50;\n            }\n            b2 += 0x7E;\n          }\n          results[results.length] = b1 & 0xFF;\n          results[results.length] = b2 & 0xFF;\n        }\n      }\n    } else {\n      results[results.length] = data[i] & 0xFF;\n    }\n  }\n\n  return results;\n}\nexports.UTF8ToSJIS = UTF8ToSJIS;\n\n/**\n * UTF-8 to EUC-JP\n */\nfunction UTF8ToEUCJP(data) {\n  var results = [];\n  var i = 0;\n  var len = data && data.length;\n  var b, utf8, jis;\n\n  for (; i < len; i++) {\n    b = data[i];\n    if (b >= 0x80) {\n      if (b <= 0xDF) {\n        utf8 = (data[i++] << 8) + data[i];\n      } else {\n        utf8 = (data[i++] << 16) +\n               (data[i++] << 8) +\n               (data[i] & 0xFF);\n      }\n\n      jis = EncodingTable.UTF8_TO_JIS_TABLE[utf8];\n      if (jis === void 0) {\n        jis = EncodingTable.UTF8_TO_JISX0212_TABLE[utf8];\n        if (jis === void 0) {\n          results[results.length] = config.UNKNOWN_CHARACTER;\n        } else {\n          results[results.length] = 0x8F;\n          results[results.length] = (jis >> 8) - 0x80 & 0xFF;\n          results[results.length] = (jis & 0xFF) - 0x80 & 0xFF;\n        }\n      } else {\n        if (jis > 0x10000) {\n          jis -= 0x10000;\n        }\n        if (jis < 0xFF) {\n          results[results.length] = 0x8E;\n          results[results.length] = jis - 0x80 & 0xFF;\n        } else {\n          results[results.length] = (jis >> 8) - 0x80 & 0xFF;\n          results[results.length] = (jis & 0xFF) - 0x80 & 0xFF;\n        }\n      }\n    } else {\n      results[results.length] = data[i] & 0xFF;\n    }\n  }\n\n  return results;\n}\nexports.UTF8ToEUCJP = UTF8ToEUCJP;\n\n/**\n * UTF-8 to JIS\n */\nfunction UTF8ToJIS(data) {\n  var results = [];\n  var index = 0;\n  var len = data && data.length;\n  var i = 0;\n  var b, utf8, jis;\n  var esc = [\n    0x1B, 0x28, 0x42,\n    0x1B, 0x24, 0x42,\n    0x1B, 0x28, 0x49,\n    0x1B, 0x24, 0x28, 0x44\n  ];\n\n  for (; i < len; i++) {\n    b = data[i];\n    if (b < 0x80) {\n      if (index !== 0) {\n        index = 0;\n        results[results.length] = esc[0];\n        results[results.length] = esc[1];\n        results[results.length] = esc[2];\n      }\n      results[results.length] = b & 0xFF;\n    } else {\n      if (b <= 0xDF) {\n        utf8 = (data[i] << 8) + data[++i];\n      } else {\n        utf8 = (data[i] << 16) + (data[++i] << 8) + data[++i];\n      }\n\n      jis = EncodingTable.UTF8_TO_JIS_TABLE[utf8];\n      if (jis === void 0) {\n        jis = EncodingTable.UTF8_TO_JISX0212_TABLE[utf8];\n        if (jis === void 0) {\n          if (index !== 0) {\n            index = 0;\n            results[results.length] = esc[0];\n            results[results.length] = esc[1];\n            results[results.length] = esc[2];\n          }\n          results[results.length] = config.UNKNOWN_CHARACTER;\n        } else {\n          // JIS X 0212:1990\n          if (index !== 3) {\n            index = 3;\n            results[results.length] = esc[9];\n            results[results.length] = esc[10];\n            results[results.length] = esc[11];\n            results[results.length] = esc[12];\n          }\n          results[results.length] = jis >> 8 & 0xFF;\n          results[results.length] = jis & 0xFF;\n        }\n      } else {\n        if (jis > 0x10000) {\n          jis -= 0x10000;\n        }\n        if (jis < 0xFF) {\n          // Halfwidth Katakana\n          if (index !== 2) {\n            index = 2;\n            results[results.length] = esc[6];\n            results[results.length] = esc[7];\n            results[results.length] = esc[8];\n          }\n          results[results.length] = jis & 0xFF;\n        } else {\n          if (index !== 1) {\n            index = 1;\n            results[results.length] = esc[3];\n            results[results.length] = esc[4];\n            results[results.length] = esc[5];\n          }\n          results[results.length] = jis >> 8 & 0xFF;\n          results[results.length] = jis & 0xFF;\n        }\n      }\n    }\n  }\n\n  if (index !== 0) {\n    results[results.length] = esc[0];\n    results[results.length] = esc[1];\n    results[results.length] = esc[2];\n  }\n\n  return results;\n}\nexports.UTF8ToJIS = UTF8ToJIS;\n\n/**\n * UTF-16 (JavaScript Unicode array) to UTF-8\n */\nfunction UNICODEToUTF8(data) {\n  var results = [];\n  var i = 0;\n  var len = data && data.length;\n  var c, second;\n\n  for (; i < len; i++) {\n    c = data[i];\n\n    // high surrogate\n    if (c >= 0xD800 && c <= 0xDBFF && i + 1 < len) {\n      second = data[i + 1];\n      // low surrogate\n      if (second >= 0xDC00 && second <= 0xDFFF) {\n        c = (c - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        i++;\n      }\n    }\n\n    if (c < 0x80) {\n      results[results.length] = c;\n    } else if (c < 0x800) {\n      results[results.length] = 0xC0 | ((c >> 6) & 0x1F);\n      results[results.length] = 0x80 | (c & 0x3F);\n    } else if (c < 0x10000) {\n      results[results.length] = 0xE0 | ((c >> 12) & 0xF);\n      results[results.length] = 0x80 | ((c >> 6) & 0x3F);\n      results[results.length] = 0x80 | (c & 0x3F);\n    } else if (c < 0x200000) {\n      results[results.length] = 0xF0 | ((c >> 18) & 0xF);\n      results[results.length] = 0x80 | ((c >> 12) & 0x3F);\n      results[results.length] = 0x80 | ((c >> 6) & 0x3F);\n      results[results.length] = 0x80 | (c & 0x3F);\n    }\n  }\n\n  return results;\n}\nexports.UNICODEToUTF8 = UNICODEToUTF8;\n\n/**\n * UTF-8 to UTF-16 (JavaScript Unicode array)\n */\nfunction UTF8ToUNICODE(data) {\n  var results = [];\n  var i = 0;\n  var len = data && data.length;\n  var n, c, c2, c3, c4, code;\n\n  while (i < len) {\n    c = data[i++];\n    n = c >> 4;\n    if (n >= 0 && n <= 7) {\n      // 0xxx xxxx\n      code = c;\n    } else if (n === 12 || n === 13) {\n      // 110x xxxx\n      // 10xx xxxx\n      c2 = data[i++];\n      code = ((c & 0x1F) << 6) | (c2 & 0x3F);\n    } else if (n === 14) {\n      // 1110 xxxx\n      // 10xx xxxx\n      // 10xx xxxx\n      c2 = data[i++];\n      c3 = data[i++];\n      code = ((c & 0x0F) << 12) |\n             ((c2 & 0x3F) << 6) |\n              (c3 & 0x3F);\n    } else if (n === 15) {\n      // 1111 0xxx\n      // 10xx xxxx\n      // 10xx xxxx\n      // 10xx xxxx\n      c2 = data[i++];\n      c3 = data[i++];\n      c4 = data[i++];\n      code = ((c & 0x7) << 18)   |\n             ((c2 & 0x3F) << 12) |\n             ((c3 & 0x3F) << 6)  |\n              (c4 & 0x3F);\n    }\n\n    if (code <= 0xFFFF) {\n      results[results.length] = code;\n    } else {\n      // Split in surrogate halves\n      code -= 0x10000;\n      results[results.length] = (code >> 10) + 0xD800; // High surrogate\n      results[results.length] = (code % 0x400) + 0xDC00; // Low surrogate\n    }\n  }\n\n  return results;\n}\nexports.UTF8ToUNICODE = UTF8ToUNICODE;\n\n/**\n * UTF-16 (JavaScript Unicode array) to UTF-16\n *\n * UTF-16BE (big-endian)\n * Note: this function does not prepend the BOM by default.\n *\n * RFC 2781 4.3 Interpreting text labelled as UTF-16\n *   If the first two octets of the text is not 0xFE followed by\n *   0xFF, and is not 0xFF followed by 0xFE, then the text SHOULD be\n *   interpreted as being big-endian.\n *\n * @link https://www.ietf.org/rfc/rfc2781.txt\n * UTF-16, an encoding of ISO 10646\n */\nfunction UNICODEToUTF16(data, options) {\n  var results;\n\n  if (options && options.bom) {\n    var optBom = options.bom;\n    if (!util.isString(optBom)) {\n      optBom = 'BE';\n    }\n\n    var bom, utf16;\n    if (optBom.charAt(0).toUpperCase() === 'B') {\n      // Big-endian\n      bom = [0xFE, 0xFF];\n      utf16 = UNICODEToUTF16BE(data);\n    } else {\n      // Little-endian\n      bom = [0xFF, 0xFE];\n      utf16 = UNICODEToUTF16LE(data);\n    }\n\n    results = [];\n    results[0] = bom[0];\n    results[1] = bom[1];\n\n    for (var i = 0, len = utf16.length; i < len; i++) {\n      results[results.length] = utf16[i];\n    }\n  } else {\n    // Without BOM: Convert as BE (SHOULD).\n    results = UNICODEToUTF16BE(data);\n  }\n\n  return results;\n}\nexports.UNICODEToUTF16 = UNICODEToUTF16;\n\n/**\n * UTF-16 (JavaScript Unicode array) to UTF-16BE\n *\n * @link https://www.ietf.org/rfc/rfc2781.txt\n * UTF-16, an encoding of ISO 10646\n */\nfunction UNICODEToUTF16BE(data) {\n  var results = [];\n  var i = 0;\n  var len = data && data.length;\n  var c;\n\n  while (i < len) {\n    c = data[i++];\n    if (c <= 0xFF) {\n      results[results.length] = 0;\n      results[results.length] = c;\n    } else if (c <= 0xFFFF) {\n      results[results.length] = c >> 8 & 0xFF;\n      results[results.length] = c & 0xFF;\n    }\n  }\n\n  return results;\n}\nexports.UNICODEToUTF16BE = UNICODEToUTF16BE;\n\n/**\n * UTF-16 (JavaScript Unicode array) to UTF-16LE\n *\n * @link https://www.ietf.org/rfc/rfc2781.txt\n * UTF-16, an encoding of ISO 10646\n */\nfunction UNICODEToUTF16LE(data) {\n  var results = [];\n  var i = 0;\n  var len = data && data.length;\n  var c;\n\n  while (i < len) {\n    c = data[i++];\n    if (c <= 0xFF) {\n      results[results.length] = c;\n      results[results.length] = 0;\n    } else if (c <= 0xFFFF) {\n      results[results.length] = c & 0xFF;\n      results[results.length] = c >> 8 & 0xFF;\n    }\n  }\n\n  return results;\n}\nexports.UNICODEToUTF16LE = UNICODEToUTF16LE;\n\n/**\n * UTF-16BE to UTF-16 (JavaScript Unicode array)\n *\n * @link https://www.ietf.org/rfc/rfc2781.txt\n * UTF-16, an encoding of ISO 10646\n */\nfunction UTF16BEToUNICODE(data) {\n  var results = [];\n  var i = 0;\n  var len = data && data.length;\n  var c1, c2;\n\n  if (len >= 2 &&\n      ((data[0] === 0xFE && data[1] === 0xFF) ||\n       (data[0] === 0xFF && data[1] === 0xFE))\n  ) {\n    i = 2;\n  }\n\n  while (i < len) {\n    c1 = data[i++];\n    c2 = data[i++];\n    if (c1 === 0) {\n      results[results.length] = c2;\n    } else {\n      results[results.length] = ((c1 & 0xFF) << 8) | (c2 & 0xFF);\n    }\n  }\n\n  return results;\n}\nexports.UTF16BEToUNICODE = UTF16BEToUNICODE;\n\n/**\n * UTF-16LE to UTF-16 (JavaScript Unicode array)\n *\n * @link https://www.ietf.org/rfc/rfc2781.txt\n * UTF-16, an encoding of ISO 10646\n */\nfunction UTF16LEToUNICODE(data) {\n  var results = [];\n  var i = 0;\n  var len = data && data.length;\n  var c1, c2;\n\n  if (len >= 2 &&\n      ((data[0] === 0xFE && data[1] === 0xFF) ||\n       (data[0] === 0xFF && data[1] === 0xFE))\n  ) {\n    i = 2;\n  }\n\n  while (i < len) {\n    c1 = data[i++];\n    c2 = data[i++];\n    if (c2 === 0) {\n      results[results.length] = c1;\n    } else {\n      results[results.length] = ((c2 & 0xFF) << 8) | (c1 & 0xFF);\n    }\n  }\n\n  return results;\n}\nexports.UTF16LEToUNICODE = UTF16LEToUNICODE;\n\n/**\n * UTF-16 to UTF-16 (JavaScript Unicode array)\n *\n * @link https://www.ietf.org/rfc/rfc2781.txt\n * UTF-16, an encoding of ISO 10646\n */\nfunction UTF16ToUNICODE(data) {\n  var results = [];\n  var i = 0;\n  var len = data && data.length;\n  var isLE = false;\n  var first = true;\n  var c1, c2;\n\n  while (i < len) {\n    c1 = data[i++];\n    c2 = data[i++];\n\n    if (first && i === 2) {\n      first = false;\n      if (c1 === 0xFE && c2 === 0xFF) {\n        isLE = false;\n      } else if (c1 === 0xFF && c2 === 0xFE) {\n        // Little-endian\n        isLE = true;\n      } else {\n        isLE = EncodingDetect.isUTF16LE(data);\n        i = 0;\n      }\n      continue;\n    }\n\n    if (isLE) {\n      if (c2 === 0) {\n        results[results.length] = c1;\n      } else {\n        results[results.length] = ((c2 & 0xFF) << 8) | (c1 & 0xFF);\n      }\n    } else {\n      if (c1 === 0) {\n        results[results.length] = c2;\n      } else {\n        results[results.length] = ((c1 & 0xFF) << 8) | (c2 & 0xFF);\n      }\n    }\n  }\n\n  return results;\n}\nexports.UTF16ToUNICODE = UTF16ToUNICODE;\n\n/**\n * UTF-16 to UTF-16BE\n */\nfunction UTF16ToUTF16BE(data) {\n  var results = [];\n  var i = 0;\n  var len = data && data.length;\n  var isLE = false;\n  var first = true;\n  var c1, c2;\n\n  while (i < len) {\n    c1 = data[i++];\n    c2 = data[i++];\n\n    if (first && i === 2) {\n      first = false;\n      if (c1 === 0xFE && c2 === 0xFF) {\n        isLE = false;\n      } else if (c1 === 0xFF && c2 === 0xFE) {\n        // Little-endian\n        isLE = true;\n      } else {\n        isLE = EncodingDetect.isUTF16LE(data);\n        i = 0;\n      }\n      continue;\n    }\n\n    if (isLE) {\n      results[results.length] = c2;\n      results[results.length] = c1;\n    } else {\n      results[results.length] = c1;\n      results[results.length] = c2;\n    }\n  }\n\n  return results;\n}\nexports.UTF16ToUTF16BE = UTF16ToUTF16BE;\n\n/**\n * UTF-16BE to UTF-16\n */\nfunction UTF16BEToUTF16(data, options) {\n  var isLE = false;\n  var bom;\n\n  if (options && options.bom) {\n    var optBom = options.bom;\n    if (!util.isString(optBom)) {\n      optBom = 'BE';\n    }\n\n    if (optBom.charAt(0).toUpperCase() === 'B') {\n      // Big-endian\n      bom = [0xFE, 0xFF];\n    } else {\n      // Little-endian\n      bom = [0xFF, 0xFE];\n      isLE = true;\n    }\n  }\n\n  var results = [];\n  var len = data && data.length;\n  var i = 0;\n\n  if (len >= 2 &&\n      ((data[0] === 0xFE && data[1] === 0xFF) ||\n       (data[0] === 0xFF && data[1] === 0xFE))\n  ) {\n    i = 2;\n  }\n\n  if (bom) {\n    results[0] = bom[0];\n    results[1] = bom[1];\n  }\n\n  var c1, c2;\n  while (i < len) {\n    c1 = data[i++];\n    c2 = data[i++];\n\n    if (isLE) {\n      results[results.length] = c2;\n      results[results.length] = c1;\n    } else {\n      results[results.length] = c1;\n      results[results.length] = c2;\n    }\n  }\n\n  return results;\n}\nexports.UTF16BEToUTF16 = UTF16BEToUTF16;\n\n/**\n * UTF-16 to UTF-16LE\n */\nfunction UTF16ToUTF16LE(data) {\n  var results = [];\n  var i = 0;\n  var len = data && data.length;\n  var isLE = false;\n  var first = true;\n  var c1, c2;\n\n  while (i < len) {\n    c1 = data[i++];\n    c2 = data[i++];\n\n    if (first && i === 2) {\n      first = false;\n      if (c1 === 0xFE && c2 === 0xFF) {\n        isLE = false;\n      } else if (c1 === 0xFF && c2 === 0xFE) {\n        // Little-endian\n        isLE = true;\n      } else {\n        isLE = EncodingDetect.isUTF16LE(data);\n        i = 0;\n      }\n      continue;\n    }\n\n    if (isLE) {\n      results[results.length] = c1;\n      results[results.length] = c2;\n    } else {\n      results[results.length] = c2;\n      results[results.length] = c1;\n    }\n  }\n\n  return results;\n}\nexports.UTF16ToUTF16LE = UTF16ToUTF16LE;\n\n/**\n * UTF-16LE to UTF-16\n */\nfunction UTF16LEToUTF16(data, options) {\n  var isLE = false;\n  var bom;\n\n  if (options && options.bom) {\n    var optBom = options.bom;\n    if (!util.isString(optBom)) {\n      optBom = 'BE';\n    }\n\n    if (optBom.charAt(0).toUpperCase() === 'B') {\n      // Big-endian\n      bom = [0xFE, 0xFF];\n    } else {\n      // Little-endian\n      bom = [0xFF, 0xFE];\n      isLE = true;\n    }\n  }\n\n  var results = [];\n  var len = data && data.length;\n  var i = 0;\n\n  if (len >= 2 &&\n      ((data[0] === 0xFE && data[1] === 0xFF) ||\n       (data[0] === 0xFF && data[1] === 0xFE))\n  ) {\n    i = 2;\n  }\n\n  if (bom) {\n    results[0] = bom[0];\n    results[1] = bom[1];\n  }\n\n  var c1, c2;\n  while (i < len) {\n    c1 = data[i++];\n    c2 = data[i++];\n\n    if (isLE) {\n      results[results.length] = c1;\n      results[results.length] = c2;\n    } else {\n      results[results.length] = c2;\n      results[results.length] = c1;\n    }\n  }\n\n  return results;\n}\nexports.UTF16LEToUTF16 = UTF16LEToUTF16;\n\n/**\n * UTF-16BE to UTF-16LE\n */\nfunction UTF16BEToUTF16LE(data) {\n  var results = [];\n  var i = 0;\n  var len = data && data.length;\n  var c1, c2;\n\n  if (len >= 2 &&\n      ((data[0] === 0xFE && data[1] === 0xFF) ||\n       (data[0] === 0xFF && data[1] === 0xFE))\n  ) {\n    i = 2;\n  }\n\n  while (i < len) {\n    c1 = data[i++];\n    c2 = data[i++];\n    results[results.length] = c2;\n    results[results.length] = c1;\n  }\n\n  return results;\n}\nexports.UTF16BEToUTF16LE = UTF16BEToUTF16LE;\n\n/**\n * UTF-16LE to UTF-16BE\n */\nfunction UTF16LEToUTF16BE(data) {\n  return UTF16BEToUTF16LE(data);\n}\nexports.UTF16LEToUTF16BE = UTF16LEToUTF16BE;\n\n/**\n * UTF-16 (JavaScript Unicode array) to JIS\n */\nfunction UNICODEToJIS(data) {\n  return UTF8ToJIS(UNICODEToUTF8(data));\n}\nexports.UNICODEToJIS = UNICODEToJIS;\n\n/**\n * JIS to UTF-16 (JavaScript Unicode array)\n */\nfunction JISToUNICODE(data) {\n  return UTF8ToUNICODE(JISToUTF8(data));\n}\nexports.JISToUNICODE = JISToUNICODE;\n\n/**\n * UTF-16 (JavaScript Unicode array) to EUCJP\n */\nfunction UNICODEToEUCJP(data) {\n  return UTF8ToEUCJP(UNICODEToUTF8(data));\n}\nexports.UNICODEToEUCJP = UNICODEToEUCJP;\n\n/**\n * EUCJP to UTF-16 (JavaScript Unicode array)\n */\nfunction EUCJPToUNICODE(data) {\n  return UTF8ToUNICODE(EUCJPToUTF8(data));\n}\nexports.EUCJPToUNICODE = EUCJPToUNICODE;\n\n/**\n * UTF-16 (JavaScript Unicode array) to SJIS\n */\nfunction UNICODEToSJIS(data) {\n  return UTF8ToSJIS(UNICODEToUTF8(data));\n}\nexports.UNICODEToSJIS = UNICODEToSJIS;\n\n/**\n * SJIS to UTF-16 (JavaScript Unicode array)\n */\nfunction SJISToUNICODE(data) {\n  return UTF8ToUNICODE(SJISToUTF8(data));\n}\nexports.SJISToUNICODE = SJISToUNICODE;\n\n/**\n * UTF-8 to UTF-16\n */\nfunction UTF8ToUTF16(data, options) {\n  return UNICODEToUTF16(UTF8ToUNICODE(data), options);\n}\nexports.UTF8ToUTF16 = UTF8ToUTF16;\n\n/**\n * UTF-16 to UTF-8\n */\nfunction UTF16ToUTF8(data) {\n  return UNICODEToUTF8(UTF16ToUNICODE(data));\n}\nexports.UTF16ToUTF8 = UTF16ToUTF8;\n\n/**\n * UTF-8 to UTF-16BE\n */\nfunction UTF8ToUTF16BE(data) {\n  return UNICODEToUTF16BE(UTF8ToUNICODE(data));\n}\nexports.UTF8ToUTF16BE = UTF8ToUTF16BE;\n\n/**\n * UTF-16BE to UTF-8\n */\nfunction UTF16BEToUTF8(data) {\n  return UNICODEToUTF8(UTF16BEToUNICODE(data));\n}\nexports.UTF16BEToUTF8 = UTF16BEToUTF8;\n\n/**\n * UTF-8 to UTF-16LE\n */\nfunction UTF8ToUTF16LE(data) {\n  return UNICODEToUTF16LE(UTF8ToUNICODE(data));\n}\nexports.UTF8ToUTF16LE = UTF8ToUTF16LE;\n\n/**\n * UTF-16LE to UTF-8\n */\nfunction UTF16LEToUTF8(data) {\n  return UNICODEToUTF8(UTF16LEToUNICODE(data));\n}\nexports.UTF16LEToUTF8 = UTF16LEToUTF8;\n\n/**\n * JIS to UTF-16\n */\nfunction JISToUTF16(data, options) {\n  return UTF8ToUTF16(JISToUTF8(data), options);\n}\nexports.JISToUTF16 = JISToUTF16;\n\n/**\n * UTF-16 to JIS\n */\nfunction UTF16ToJIS(data) {\n  return UTF8ToJIS(UTF16ToUTF8(data));\n}\nexports.UTF16ToJIS = UTF16ToJIS;\n\n/**\n * JIS to UTF-16BE\n */\nfunction JISToUTF16BE(data) {\n  return UTF8ToUTF16BE(JISToUTF8(data));\n}\nexports.JISToUTF16BE = JISToUTF16BE;\n\n/**\n * UTF-16BE to JIS\n */\nfunction UTF16BEToJIS(data) {\n  return UTF8ToJIS(UTF16BEToUTF8(data));\n}\nexports.UTF16BEToJIS = UTF16BEToJIS;\n\n/**\n * JIS to UTF-16LE\n */\nfunction JISToUTF16LE(data) {\n  return UTF8ToUTF16LE(JISToUTF8(data));\n}\nexports.JISToUTF16LE = JISToUTF16LE;\n\n/**\n * UTF-16LE to JIS\n */\nfunction UTF16LEToJIS(data) {\n  return UTF8ToJIS(UTF16LEToUTF8(data));\n}\nexports.UTF16LEToJIS = UTF16LEToJIS;\n\n/**\n * EUC-JP to UTF-16\n */\nfunction EUCJPToUTF16(data, options) {\n  return UTF8ToUTF16(EUCJPToUTF8(data), options);\n}\nexports.EUCJPToUTF16 = EUCJPToUTF16;\n\n/**\n * UTF-16 to EUC-JP\n */\nfunction UTF16ToEUCJP(data) {\n  return UTF8ToEUCJP(UTF16ToUTF8(data));\n}\nexports.UTF16ToEUCJP = UTF16ToEUCJP;\n\n/**\n * EUC-JP to UTF-16BE\n */\nfunction EUCJPToUTF16BE(data) {\n  return UTF8ToUTF16BE(EUCJPToUTF8(data));\n}\nexports.EUCJPToUTF16BE = EUCJPToUTF16BE;\n\n/**\n * UTF-16BE to EUC-JP\n */\nfunction UTF16BEToEUCJP(data) {\n  return UTF8ToEUCJP(UTF16BEToUTF8(data));\n}\nexports.UTF16BEToEUCJP = UTF16BEToEUCJP;\n\n/**\n * EUC-JP to UTF-16LE\n */\nfunction EUCJPToUTF16LE(data) {\n  return UTF8ToUTF16LE(EUCJPToUTF8(data));\n}\nexports.EUCJPToUTF16LE = EUCJPToUTF16LE;\n\n/**\n * UTF-16LE to EUC-JP\n */\nfunction UTF16LEToEUCJP(data) {\n  return UTF8ToEUCJP(UTF16LEToUTF8(data));\n}\nexports.UTF16LEToEUCJP = UTF16LEToEUCJP;\n\n/**\n * SJIS to UTF-16\n */\nfunction SJISToUTF16(data, options) {\n  return UTF8ToUTF16(SJISToUTF8(data), options);\n}\nexports.SJISToUTF16 = SJISToUTF16;\n\n/**\n * UTF-16 to SJIS\n */\nfunction UTF16ToSJIS(data) {\n  return UTF8ToSJIS(UTF16ToUTF8(data));\n}\nexports.UTF16ToSJIS = UTF16ToSJIS;\n\n/**\n * SJIS to UTF-16BE\n */\nfunction SJISToUTF16BE(data) {\n  return UTF8ToUTF16BE(SJISToUTF8(data));\n}\nexports.SJISToUTF16BE = SJISToUTF16BE;\n\n/**\n * UTF-16BE to SJIS\n */\nfunction UTF16BEToSJIS(data) {\n  return UTF8ToSJIS(UTF16BEToUTF8(data));\n}\nexports.UTF16BEToSJIS = UTF16BEToSJIS;\n\n/**\n * SJIS to UTF-16LE\n */\nfunction SJISToUTF16LE(data) {\n  return UTF8ToUTF16LE(SJISToUTF8(data));\n}\nexports.SJISToUTF16LE = SJISToUTF16LE;\n\n/**\n * UTF-16LE to SJIS\n */\nfunction UTF16LEToSJIS(data) {\n  return UTF8ToSJIS(UTF16LEToUTF8(data));\n}\nexports.UTF16LEToSJIS = UTF16LEToSJIS;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/encoding-japanese/src/encoding-convert.js?");

/***/ }),

/***/ "../node_modules/encoding-japanese/src/encoding-detect.js":
/*!****************************************************************!*\
  !*** ../node_modules/encoding-japanese/src/encoding-detect.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Binary (exe, images and so, etc.)\n *\n * Note:\n *   This function is not considered for Unicode\n */\nfunction isBINARY(data) {\n  var i = 0;\n  var len = data && data.length;\n  var c;\n\n  for (; i < len; i++) {\n    c = data[i];\n    if (c > 0xFF) {\n      return false;\n    }\n\n    if ((c >= 0x00 && c <= 0x07) || c === 0xFF) {\n      return true;\n    }\n  }\n\n  return false;\n}\nexports.isBINARY = isBINARY;\n\n/**\n * ASCII (ISO-646)\n */\nfunction isASCII(data) {\n  var i = 0;\n  var len = data && data.length;\n  var b;\n\n  for (; i < len; i++) {\n    b = data[i];\n    if (b > 0xFF ||\n        (b >= 0x80 && b <= 0xFF) ||\n        b === 0x1B) {\n      return false;\n    }\n  }\n\n  return true;\n}\nexports.isASCII = isASCII;\n\n/**\n * ISO-2022-JP (JIS)\n *\n * RFC1468 Japanese Character Encoding for Internet Messages\n * RFC1554 ISO-2022-JP-2: Multilingual Extension of ISO-2022-JP\n * RFC2237 Japanese Character Encoding for Internet Messages\n */\nfunction isJIS(data) {\n  var i = 0;\n  var len = data && data.length;\n  var b, esc1, esc2;\n\n  for (; i < len; i++) {\n    b = data[i];\n    if (b > 0xFF || (b >= 0x80 && b <= 0xFF)) {\n      return false;\n    }\n\n    if (b === 0x1B) {\n      if (i + 2 >= len) {\n        return false;\n      }\n\n      esc1 = data[i + 1];\n      esc2 = data[i + 2];\n      if (esc1 === 0x24) {\n        if (esc2 === 0x28 ||  // JIS X 0208-1990/2000/2004\n            esc2 === 0x40 ||  // JIS X 0208-1978\n            esc2 === 0x42) {  // JIS X 0208-1983\n          return true;\n        }\n      } else if (esc1 === 0x26 && // JIS X 0208-1990\n                 esc2 === 0x40) {\n        return true;\n      } else if (esc1 === 0x28) {\n        if (esc2 === 0x42 || // ASCII\n            esc2 === 0x49 || // JIS X 0201 Halfwidth Katakana\n            esc2 === 0x4A) { // JIS X 0201-1976 Roman set\n          return true;\n        }\n      }\n    }\n  }\n\n  return false;\n}\nexports.isJIS = isJIS;\n\n/**\n * EUC-JP\n */\nfunction isEUCJP(data) {\n  var i = 0;\n  var len = data && data.length;\n  var b;\n\n  for (; i < len; i++) {\n    b = data[i];\n    if (b < 0x80) {\n      continue;\n    }\n\n    if (b > 0xFF || b < 0x8E) {\n      return false;\n    }\n\n    if (b === 0x8E) {\n      if (i + 1 >= len) {\n        return false;\n      }\n\n      b = data[++i];\n      if (b < 0xA1 || 0xDF < b) {\n        return false;\n      }\n    } else if (b === 0x8F) {\n      if (i + 2 >= len) {\n        return false;\n      }\n\n      b = data[++i];\n      if (b < 0xA2 || 0xED < b) {\n        return false;\n      }\n\n      b = data[++i];\n      if (b < 0xA1 || 0xFE < b) {\n        return false;\n      }\n    } else if (0xA1 <= b && b <= 0xFE) {\n      if (i + 1 >= len) {\n        return false;\n      }\n\n      b = data[++i];\n      if (b < 0xA1 || 0xFE < b) {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\nexports.isEUCJP = isEUCJP;\n\n/**\n * Shift-JIS (SJIS)\n */\nfunction isSJIS(data) {\n  var i = 0;\n  var len = data && data.length;\n  var b;\n\n  while (i < len && data[i] > 0x80) {\n    if (data[i++] > 0xFF) {\n      return false;\n    }\n  }\n\n  for (; i < len; i++) {\n    b = data[i];\n    if (b <= 0x80 ||\n        (0xA1 <= b && b <= 0xDF)) {\n      continue;\n    }\n\n    if (b === 0xA0 || b > 0xEF || i + 1 >= len) {\n      return false;\n    }\n\n    b = data[++i];\n    if (b < 0x40 || b === 0x7F || b > 0xFC) {\n      return false;\n    }\n  }\n\n  return true;\n}\nexports.isSJIS = isSJIS;\n\n/**\n * UTF-8\n */\nfunction isUTF8(data) {\n  var i = 0;\n  var len = data && data.length;\n  var b;\n\n  for (; i < len; i++) {\n    b = data[i];\n    if (b > 0xFF) {\n      return false;\n    }\n\n    if (b === 0x09 || b === 0x0A || b === 0x0D ||\n        (b >= 0x20 && b <= 0x7E)) {\n      continue;\n    }\n\n    if (b >= 0xC2 && b <= 0xDF) {\n      if (i + 1 >= len || data[i + 1] < 0x80 || data[i + 1] > 0xBF) {\n        return false;\n      }\n      i++;\n    } else if (b === 0xE0) {\n      if (i + 2 >= len ||\n          data[i + 1] < 0xA0 || data[i + 1] > 0xBF ||\n          data[i + 2] < 0x80 || data[i + 2] > 0xBF) {\n        return false;\n      }\n      i += 2;\n    } else if ((b >= 0xE1 && b <= 0xEC) ||\n                b === 0xEE || b === 0xEF) {\n      if (i + 2 >= len ||\n          data[i + 1] < 0x80 || data[i + 1] > 0xBF ||\n          data[i + 2] < 0x80 || data[i + 2] > 0xBF) {\n        return false;\n      }\n      i += 2;\n    } else if (b === 0xED) {\n      if (i + 2 >= len ||\n          data[i + 1] < 0x80 || data[i + 1] > 0x9F ||\n          data[i + 2] < 0x80 || data[i + 2] > 0xBF) {\n        return false;\n      }\n      i += 2;\n    } else if (b === 0xF0) {\n      if (i + 3 >= len ||\n          data[i + 1] < 0x90 || data[i + 1] > 0xBF ||\n          data[i + 2] < 0x80 || data[i + 2] > 0xBF ||\n          data[i + 3] < 0x80 || data[i + 3] > 0xBF) {\n        return false;\n      }\n      i += 3;\n    } else if (b >= 0xF1 && b <= 0xF3) {\n      if (i + 3 >= len ||\n          data[i + 1] < 0x80 || data[i + 1] > 0xBF ||\n          data[i + 2] < 0x80 || data[i + 2] > 0xBF ||\n          data[i + 3] < 0x80 || data[i + 3] > 0xBF) {\n        return false;\n      }\n      i += 3;\n    } else if (b === 0xF4) {\n      if (i + 3 >= len ||\n          data[i + 1] < 0x80 || data[i + 1] > 0x8F ||\n          data[i + 2] < 0x80 || data[i + 2] > 0xBF ||\n          data[i + 3] < 0x80 || data[i + 3] > 0xBF) {\n        return false;\n      }\n      i += 3;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\nexports.isUTF8 = isUTF8;\n\n/**\n * UTF-16 (LE or BE)\n *\n * RFC2781: UTF-16, an encoding of ISO 10646\n *\n * @link http://www.ietf.org/rfc/rfc2781.txt\n */\nfunction isUTF16(data) {\n  var i = 0;\n  var len = data && data.length;\n  var pos = null;\n  var b1, b2, next, prev;\n\n  if (len < 2) {\n    if (data[0] > 0xFF) {\n      return false;\n    }\n  } else {\n    b1 = data[0];\n    b2 = data[1];\n    if (b1 === 0xFF && // BOM (little-endian)\n        b2 === 0xFE) {\n      return true;\n    }\n    if (b1 === 0xFE && // BOM (big-endian)\n        b2 === 0xFF) {\n      return true;\n    }\n\n    for (; i < len; i++) {\n      if (data[i] === 0x00) {\n        pos = i;\n        break;\n      } else if (data[i] > 0xFF) {\n        return false;\n      }\n    }\n\n    if (pos === null) {\n      return false; // Non ASCII\n    }\n\n    next = data[pos + 1]; // BE\n    if (next !== void 0 && next > 0x00 && next < 0x80) {\n      return true;\n    }\n\n    prev = data[pos - 1]; // LE\n    if (prev !== void 0 && prev > 0x00 && prev < 0x80) {\n      return true;\n    }\n  }\n\n  return false;\n}\nexports.isUTF16 = isUTF16;\n\n/**\n * UTF-16BE (big-endian)\n *\n * RFC 2781 4.3 Interpreting text labelled as UTF-16\n * Text labelled \"UTF-16BE\" can always be interpreted as being big-endian\n *  when BOM does not founds (SHOULD)\n *\n * @link http://www.ietf.org/rfc/rfc2781.txt\n */\nfunction isUTF16BE(data) {\n  var i = 0;\n  var len = data && data.length;\n  var pos = null;\n  var b1, b2;\n\n  if (len < 2) {\n    if (data[0] > 0xFF) {\n      return false;\n    }\n  } else {\n    b1 = data[0];\n    b2 = data[1];\n    if (b1 === 0xFE && // BOM\n        b2 === 0xFF) {\n      return true;\n    }\n\n    for (; i < len; i++) {\n      if (data[i] === 0x00) {\n        pos = i;\n        break;\n      } else if (data[i] > 0xFF) {\n        return false;\n      }\n    }\n\n    if (pos === null) {\n      return false; // Non ASCII\n    }\n\n    if (pos % 2 === 0) {\n      return true;\n    }\n  }\n\n  return false;\n}\nexports.isUTF16BE = isUTF16BE;\n\n/**\n * UTF-16LE (little-endian)\n */\nfunction isUTF16LE(data) {\n  var i = 0;\n  var len = data && data.length;\n  var pos = null;\n  var b1, b2;\n\n  if (len < 2) {\n    if (data[0] > 0xFF) {\n      return false;\n    }\n  } else {\n    b1 = data[0];\n    b2 = data[1];\n    if (b1 === 0xFF && // BOM\n        b2 === 0xFE) {\n      return true;\n    }\n\n    for (; i < len; i++) {\n      if (data[i] === 0x00) {\n        pos = i;\n        break;\n      } else if (data[i] > 0xFF) {\n        return false;\n      }\n    }\n\n    if (pos === null) {\n      return false; // Non ASCII\n    }\n\n    if (pos % 2 !== 0) {\n      return true;\n    }\n  }\n\n  return false;\n}\nexports.isUTF16LE = isUTF16LE;\n\n/**\n * UTF-32\n *\n * Unicode 3.2.0: Unicode Standard Annex #19\n *\n * @link http://www.iana.org/assignments/charset-reg/UTF-32\n * @link http://www.unicode.org/reports/tr19/tr19-9.html\n */\nfunction isUTF32(data) {\n  var i = 0;\n  var len = data && data.length;\n  var pos = null;\n  var b1, b2, b3, b4;\n  var next, prev;\n\n  if (len < 4) {\n    for (; i < len; i++) {\n      if (data[i] > 0xFF) {\n        return false;\n      }\n    }\n  } else {\n    b1 = data[0];\n    b2 = data[1];\n    b3 = data[2];\n    b4 = data[3];\n    if (b1 === 0x00 && b2 === 0x00 && // BOM (big-endian)\n        b3 === 0xFE && b4 === 0xFF) {\n      return true;\n    }\n\n    if (b1 === 0xFF && b2 === 0xFE && // BOM (little-endian)\n        b3 === 0x00 && b4 === 0x00) {\n      return true;\n    }\n\n    for (; i < len; i++) {\n      if (data[i] === 0x00 && data[i + 1] === 0x00 && data[i + 2] === 0x00) {\n        pos = i;\n        break;\n      } else if (data[i] > 0xFF) {\n        return false;\n      }\n    }\n\n    if (pos === null) {\n      return false;\n    }\n\n    // The byte order should be the big-endian when BOM is not detected.\n    next = data[pos + 3];\n    if (next !== void 0 && next > 0x00 && next <= 0x7F) {\n      // big-endian\n      return data[pos + 2] === 0x00 && data[pos + 1] === 0x00;\n    }\n\n    prev = data[pos - 1];\n    if (prev !== void 0 && prev > 0x00 && prev <= 0x7F) {\n      // little-endian\n      return data[pos + 1] === 0x00 && data[pos + 2] === 0x00;\n    }\n  }\n\n  return false;\n}\nexports.isUTF32 = isUTF32;\n\n/**\n * JavaScript Unicode array\n */\nfunction isUNICODE(data) {\n  var i = 0;\n  var len = data && data.length;\n  var c;\n\n  for (; i < len; i++) {\n    c = data[i];\n    if (c < 0 || c > 0x10FFFF) {\n      return false;\n    }\n  }\n\n  return true;\n}\nexports.isUNICODE = isUNICODE;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/encoding-japanese/src/encoding-detect.js?");

/***/ }),

/***/ "../node_modules/encoding-japanese/src/encoding-table.js":
/*!***************************************************************!*\
  !*** ../node_modules/encoding-japanese/src/encoding-table.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports.UTF8_TO_JIS_TABLE = __webpack_require__(/*! ./utf8-to-jis-table */ \"../node_modules/encoding-japanese/src/utf8-to-jis-table.js\");\nexports.UTF8_TO_JISX0212_TABLE = __webpack_require__(/*! ./utf8-to-jisx0212-table */ \"../node_modules/encoding-japanese/src/utf8-to-jisx0212-table.js\");\nexports.JIS_TO_UTF8_TABLE = __webpack_require__(/*! ./jis-to-utf8-table */ \"../node_modules/encoding-japanese/src/jis-to-utf8-table.js\");\nexports.JISX0212_TO_UTF8_TABLE = __webpack_require__(/*! ./jisx0212-to-utf8-table */ \"../node_modules/encoding-japanese/src/jisx0212-to-utf8-table.js\");\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/encoding-japanese/src/encoding-table.js?");

/***/ }),

/***/ "../node_modules/encoding-japanese/src/index.js":
/*!******************************************************!*\
  !*** ../node_modules/encoding-japanese/src/index.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var config = __webpack_require__(/*! ./config */ \"../node_modules/encoding-japanese/src/config.js\");\nvar util = __webpack_require__(/*! ./util */ \"../node_modules/encoding-japanese/src/util.js\");\nvar EncodingDetect = __webpack_require__(/*! ./encoding-detect */ \"../node_modules/encoding-japanese/src/encoding-detect.js\");\nvar EncodingConvert = __webpack_require__(/*! ./encoding-convert */ \"../node_modules/encoding-japanese/src/encoding-convert.js\");\nvar KanaCaseTable = __webpack_require__(/*! ./kana-case-table */ \"../node_modules/encoding-japanese/src/kana-case-table.js\");\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar Encoding = {\n\n  /**\n   * Encoding orders\n   */\n  orders: config.EncodingOrders,\n\n  /**\n   * Detects character encoding\n   *\n   * If encodings is \"AUTO\", or the encoding-list as an array, or\n   *   comma separated list string it will be detected automatically\n   *\n   * @param {Array.<number>|TypedArray|string} data The data being detected\n   * @param {(Object|string|Array.<string>)=} [encodings] The encoding-list of\n   *   character encoding\n   * @return {string|boolean} The detected character encoding, or false\n   */\n  detect: function(data, encodings) {\n    if (data == null || data.length === 0) {\n      return false;\n    }\n\n    if (util.isObject(encodings) && !util.isArray(encodings)) {\n      encodings = encodings.encoding;\n    }\n\n    if (util.isString(data)) {\n      data = util.stringToBuffer(data);\n    }\n\n    if (encodings == null) {\n      encodings = Encoding.orders;\n    } else {\n      if (util.isString(encodings)) {\n        encodings = encodings.toUpperCase();\n        if (encodings === 'AUTO') {\n          encodings = Encoding.orders;\n        } else if (~encodings.indexOf(',')) {\n          encodings = encodings.split(/\\s*,\\s*/);\n        } else {\n          encodings = [encodings];\n        }\n      }\n    }\n\n    var len = encodings.length;\n    var e, encoding, method;\n    for (var i = 0; i < len; i++) {\n      e = encodings[i];\n      encoding = config.assignEncodingName(e);\n      if (!encoding) {\n        continue;\n      }\n\n      method = 'is' + encoding;\n      if (!hasOwnProperty.call(EncodingDetect, method)) {\n        throw new Error('Undefined encoding: ' + e);\n      }\n\n      if (EncodingDetect[method](data)) {\n        return encoding;\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * Convert character encoding\n   *\n   * If `from` is \"AUTO\", or the encoding-list as an array, or\n   *   comma separated list string it will be detected automatically\n   *\n   * @param {Array.<number>|TypedArray|string} data The data being converted\n   * @param {(string|Object)} to The name of encoding to\n   * @param {(string|Array.<string>)=} [from] The encoding-list of\n   *   character encoding\n   * @return {Array|TypedArray|string} The converted data\n   */\n  convert: function(data, to, from) {\n    var result;\n    var type;\n    var options = {};\n\n    if (util.isObject(to)) {\n      options = to;\n      from = options.from;\n      to = options.to;\n      if (options.type) {\n        type = options.type;\n      }\n    }\n\n    if (util.isString(data)) {\n      type = type || 'string';\n      data = util.stringToBuffer(data);\n    } else if (data == null || data.length === 0) {\n      data = [];\n    }\n\n    var encodingFrom;\n    if (from != null && util.isString(from) &&\n        from.toUpperCase() !== 'AUTO' && !~from.indexOf(',')) {\n      encodingFrom = config.assignEncodingName(from);\n    } else {\n      encodingFrom = Encoding.detect(data);\n    }\n\n    var encodingTo = config.assignEncodingName(to);\n    var method = encodingFrom + 'To' + encodingTo;\n\n    if (hasOwnProperty.call(EncodingConvert, method)) {\n      result = EncodingConvert[method](data, options);\n    } else {\n      // Returns the raw data if the method is undefined.\n      result = data;\n    }\n\n    switch (('' + type).toLowerCase()) {\n      case 'string':\n        return util.codeToString_fast(result);\n      case 'arraybuffer':\n        return util.codeToBuffer(result);\n      case 'array':\n        /* falls through */\n      default:\n        return util.bufferToCode(result);\n    }\n  },\n\n  /**\n   * Encode a character code array to URL string like encodeURIComponent\n   *\n   * @param {Array.<number>|TypedArray} data The data being encoded\n   * @return {string} The percent encoded string\n   */\n  urlEncode: function(data) {\n    if (util.isString(data)) {\n      data = util.stringToBuffer(data);\n    }\n\n    var alpha = util.stringToCode('0123456789ABCDEF');\n    var results = [];\n    var i = 0;\n    var len = data && data.length;\n    var b;\n\n    for (; i < len; i++) {\n      b = data[i];\n\n      //FIXME: JavaScript UTF-16 encoding\n      if (b > 0xFF) {\n        return encodeURIComponent(util.codeToString_fast(data));\n      }\n\n      if ((b >= 0x61 /*a*/ && b <= 0x7A /*z*/) ||\n          (b >= 0x41 /*A*/ && b <= 0x5A /*Z*/) ||\n          (b >= 0x30 /*0*/ && b <= 0x39 /*9*/) ||\n          b === 0x21 /*!*/ ||\n          (b >= 0x27 /*'*/ && b <= 0x2A /***/) ||\n          b === 0x2D /*-*/ || b === 0x2E /*.*/ ||\n          b === 0x5F /*_*/ || b === 0x7E /*~*/\n      ) {\n        results[results.length] = b;\n      } else {\n        results[results.length] = 0x25; /*%*/\n        if (b < 0x10) {\n          results[results.length] = 0x30; /*0*/\n          results[results.length] = alpha[b];\n        } else {\n          results[results.length] = alpha[b >> 4 & 0xF];\n          results[results.length] = alpha[b & 0xF];\n        }\n      }\n    }\n\n    return util.codeToString_fast(results);\n  },\n\n  /**\n   * Decode a percent encoded string to\n   *  character code array like decodeURIComponent\n   *\n   * @param {string} string The data being decoded\n   * @return {Array.<number>} The decoded array\n   */\n  urlDecode: function(string) {\n    var results = [];\n    var i = 0;\n    var len = string && string.length;\n    var c;\n\n    while (i < len) {\n      c = string.charCodeAt(i++);\n      if (c === 0x25 /*%*/) {\n        results[results.length] = parseInt(\n          string.charAt(i++) + string.charAt(i++), 16);\n      } else {\n        results[results.length] = c;\n      }\n    }\n\n    return results;\n  },\n\n  /**\n   * Encode a character code array to Base64 encoded string\n   *\n   * @param {Array.<number>|TypedArray} data The data being encoded\n   * @return {string} The Base64 encoded string\n   */\n  base64Encode: function(data) {\n    if (util.isString(data)) {\n      data = util.stringToBuffer(data);\n    }\n    return util.base64encode(data);\n  },\n\n  /**\n   * Decode a Base64 encoded string to character code array\n   *\n   * @param {string} string The data being decoded\n   * @return {Array.<number>} The decoded array\n   */\n  base64Decode: function(string) {\n    return util.base64decode(string);\n  },\n\n  /**\n   * Joins a character code array to string\n   *\n   * @param {Array.<number>|TypedArray} data The data being joined\n   * @return {String} The joined string\n   */\n  codeToString: util.codeToString_fast,\n\n  /**\n   * Splits string to an array of character codes\n   *\n   * @param {string} string The input string\n   * @return {Array.<number>} The character code array\n   */\n  stringToCode: util.stringToCode,\n\n  /**\n   * 全角英数記号文字を半角英数記号文字に変換\n   *\n   * Convert the ascii symbols and alphanumeric characters to\n   *   the zenkaku symbols and alphanumeric characters\n   *\n   * @example\n   *   console.log(Encoding.toHankakuCase('Ｈｅｌｌｏ Ｗｏｒｌｄ！ １２３４５'));\n   *   // 'Hello World! 12345'\n   *\n   * @param {Array.<number>|TypedArray|string} data The input unicode data\n   * @return {Array.<number>|string} The conveted data\n   */\n  toHankakuCase: function(data) {\n    var asString = false;\n    if (util.isString(data)) {\n      asString = true;\n      data = util.stringToBuffer(data);\n    }\n\n    var results = [];\n    var len = data && data.length;\n    var i = 0;\n    var c;\n\n    while (i < len) {\n      c = data[i++];\n      if (c >= 0xFF01 && c <= 0xFF5E) {\n        c -= 0xFEE0;\n      }\n      results[results.length] = c;\n    }\n\n    return asString ? util.codeToString_fast(results) : results;\n  },\n\n  /**\n   * 半角英数記号文字を全角英数記号文字に変換\n   *\n   * Convert to the zenkaku symbols and alphanumeric characters\n   *  from the ascii symbols and alphanumeric characters\n   *\n   * @example\n   *   console.log(Encoding.toZenkakuCase('Hello World! 12345'));\n   *   // 'Ｈｅｌｌｏ Ｗｏｒｌｄ！ １２３４５'\n   *\n   * @param {Array.<number>|TypedArray|string} data The input unicode data\n   * @return {Array.<number>|string} The conveted data\n   */\n  toZenkakuCase: function(data) {\n    var asString = false;\n    if (util.isString(data)) {\n      asString = true;\n      data = util.stringToBuffer(data);\n    }\n\n    var results = [];\n    var len = data && data.length;\n    var i = 0;\n    var c;\n\n    while (i < len) {\n      c = data[i++];\n      if (c >= 0x21 && c <= 0x7E) {\n        c += 0xFEE0;\n      }\n      results[results.length] = c;\n    }\n\n    return asString ? util.codeToString_fast(results) : results;\n  },\n\n  /**\n   * 全角カタカナを全角ひらがなに変換\n   *\n   * Convert to the zenkaku hiragana from the zenkaku katakana\n   *\n   * @example\n   *   console.log(Encoding.toHiraganaCase('ボポヴァアィイゥウェエォオ'));\n   *   // 'ぼぽう゛ぁあぃいぅうぇえぉお'\n   *\n   * @param {Array.<number>|TypedArray|string} data The input unicode data\n   * @return {Array.<number>|string} The conveted data\n   */\n  toHiraganaCase: function(data) {\n    var asString = false;\n    if (util.isString(data)) {\n      asString = true;\n      data = util.stringToBuffer(data);\n    }\n\n    var results = [];\n    var len = data && data.length;\n    var i = 0;\n    var c;\n\n    while (i < len) {\n      c = data[i++];\n      if (c >= 0x30A1 && c <= 0x30F6) {\n        c -= 0x0060;\n      // 「ワ゛」 => 「わ」 + 「゛」\n      } else if (c === 0x30F7) {\n        results[results.length] = 0x308F;\n        c = 0x309B;\n      // 「ヲ゛」 => 「を」 + 「゛」\n      } else if (c === 0x30FA) {\n        results[results.length] = 0x3092;\n        c = 0x309B;\n      }\n      results[results.length] = c;\n    }\n\n    return asString ? util.codeToString_fast(results) : results;\n  },\n\n  /**\n   * 全角ひらがなを全角カタカナに変換\n   *\n   * Convert to the zenkaku katakana from the zenkaku hiragana\n   *\n   * @example\n   *   console.log(Encoding.toKatakanaCase('ぼぽう゛ぁあぃいぅうぇえぉお'));\n   *   // 'ボポヴァアィイゥウェエォオ'\n   *\n   * @param {Array.<number>|TypedArray|string} data The input unicode data\n   * @return {Array.<number>|string} The conveted data\n   */\n  toKatakanaCase: function(data) {\n    var asString = false;\n    if (util.isString(data)) {\n      asString = true;\n      data = util.stringToBuffer(data);\n    }\n\n    var results = [];\n    var len = data && data.length;\n    var i = 0;\n    var c;\n\n    while (i < len) {\n      c = data[i++];\n      if (c >= 0x3041 && c <= 0x3096) {\n        if ((c === 0x308F || // 「わ」 + 「゛」 => 「ワ゛」\n             c === 0x3092) && // 「を」 + 「゛」 => 「ヲ゛」\n            i < len && data[i] === 0x309B) {\n          c = c === 0x308F ? 0x30F7 : 0x30FA;\n          i++;\n        } else {\n          c += 0x0060;\n        }\n      }\n      results[results.length] = c;\n    }\n\n    return asString ? util.codeToString_fast(results) : results;\n  },\n\n  /**\n   * 全角カタカナを半角ｶﾀｶﾅに変換\n   *\n   * Convert to the hankaku katakana from the zenkaku katakana\n   *\n   * @example\n   *   console.log(Encoding.toHankanaCase('ボポヴァアィイゥウェエォオ'));\n   *   // 'ﾎﾞﾎﾟｳﾞｧｱｨｲｩｳｪｴｫｵ'\n   *\n   * @param {Array.<number>|TypedArray|string} data The input unicode data\n   * @return {Array.<number>|string} The conveted data\n   */\n  toHankanaCase: function(data) {\n    var asString = false;\n    if (util.isString(data)) {\n      asString = true;\n      data = util.stringToBuffer(data);\n    }\n\n    var results = [];\n    var len = data && data.length;\n    var i = 0;\n    var c, d, t;\n\n    while (i < len) {\n      c = data[i++];\n\n      if (c >= 0x3001 && c <= 0x30FC) {\n        t = KanaCaseTable.HANKANA_TABLE[c];\n        if (t !== void 0) {\n          results[results.length] = t;\n          continue;\n        }\n      }\n\n      // 「ヴ」, 「ワ」+「゛」, 「ヲ」+「゛」\n      if (c === 0x30F4 || c === 0x30F7 || c === 0x30FA) {\n        results[results.length] = KanaCaseTable.HANKANA_SONANTS[c];\n        results[results.length] = 0xFF9E;\n        // 「カ」 - 「ド」\n      } else if (c >= 0x30AB && c <= 0x30C9) {\n        results[results.length] = KanaCaseTable.HANKANA_TABLE[c - 1];\n        results[results.length] = 0xFF9E;\n        // 「ハ」 - 「ポ」\n      } else if (c >= 0x30CF && c <= 0x30DD) {\n        d = c % 3;\n        results[results.length] = KanaCaseTable.HANKANA_TABLE[c - d];\n        results[results.length] = KanaCaseTable.HANKANA_MARKS[d - 1];\n      } else {\n        results[results.length] = c;\n      }\n    }\n\n    return asString ? util.codeToString_fast(results) : results;\n  },\n\n  /**\n   * 半角ｶﾀｶﾅを全角カタカナに変換 (濁音含む)\n   *\n   * Convert to the zenkaku katakana from the hankaku katakana\n   *\n   * @example\n   *   console.log(Encoding.toZenkanaCase('ﾎﾞﾎﾟｳﾞｧｱｨｲｩｳｪｴｫｵ'));\n   *   // 'ボポヴァアィイゥウェエォオ'\n   *\n   * @param {Array.<number>|TypedArray|string} data The input unicode data\n   * @return {Array.<number>|string} The conveted data\n   */\n  toZenkanaCase: function(data) {\n    var asString = false;\n    if (util.isString(data)) {\n      asString = true;\n      data = util.stringToBuffer(data);\n    }\n\n    var results = [];\n    var len = data && data.length;\n    var i = 0;\n    var c, code, next;\n\n    for (i = 0; i < len; i++) {\n      c = data[i];\n      // Hankaku katakana\n      if (c > 0xFF60 && c < 0xFFA0) {\n        code = KanaCaseTable.ZENKANA_TABLE[c - 0xFF61];\n        if (i + 1 < len) {\n          next = data[i + 1];\n          // 「ﾞ」 + 「ヴ」\n          if (next === 0xFF9E && c === 0xFF73) {\n            code = 0x30F4;\n            i++;\n          // 「ﾞ」 + 「ワ゛」\n          } else if (next === 0xFF9E && c === 0xFF9C) {\n            code = 0x30F7;\n            i++;\n          // 「ﾞ」 + 「ｦ゛」\n          } else if (next === 0xFF9E && c === 0xFF66) {\n            code = 0x30FA;\n            i++;\n            // 「ﾞ」 + 「カ」 - 「コ」 or 「ハ」 - 「ホ」\n          } else if (next === 0xFF9E &&\n                     ((c > 0xFF75 && c < 0xFF85) ||\n                      (c > 0xFF89 && c < 0xFF8F))) {\n            code++;\n            i++;\n            // 「ﾟ」 + 「ハ」 - 「ホ」\n          } else if (next === 0xFF9F &&\n                     (c > 0xFF89 && c < 0xFF8F)) {\n            code += 2;\n            i++;\n          }\n        }\n        c = code;\n      }\n      results[results.length] = c;\n    }\n\n    return asString ? util.codeToString_fast(results) : results;\n  },\n\n  /**\n   * 全角スペースを半角スペースに変換\n   *\n   * Convert the em space(U+3000) to the single space(U+0020)\n   *\n   * @param {Array.<number>|TypedArray|string} data The input unicode data\n   * @return {Array.<number>|string} The conveted data\n   */\n  toHankakuSpace: function(data) {\n    if (util.isString(data)) {\n      return data.replace(/\\u3000/g, ' ');\n    }\n\n    var results = [];\n    var len = data && data.length;\n    var i = 0;\n    var c;\n\n    while (i < len) {\n      c = data[i++];\n      if (c === 0x3000) {\n        c = 0x20;\n      }\n      results[results.length] = c;\n    }\n\n    return results;\n  },\n\n  /**\n   * 半角スペースを全角スペースに変換\n   *\n   * Convert the single space(U+0020) to the em space(U+3000)\n   *\n   * @param {Array.<number>|TypedArray|string} data The input unicode data\n   * @return {Array.<number>|string} The conveted data\n   */\n  toZenkakuSpace: function(data) {\n    if (util.isString(data)) {\n      return data.replace(/\\u0020/g, '\\u3000');\n    }\n\n    var results = [];\n    var len = data && data.length;\n    var i = 0;\n    var c;\n\n    while (i < len) {\n      c = data[i++];\n      if (c === 0x20) {\n        c = 0x3000;\n      }\n      results[results.length] = c;\n    }\n\n    return results;\n  }\n};\n\nmodule.exports = Encoding;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/encoding-japanese/src/index.js?");

/***/ }),

/***/ "../node_modules/encoding-japanese/src/jis-to-utf8-table.js":
/*!******************************************************************!*\
  !*** ../node_modules/encoding-japanese/src/jis-to-utf8-table.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Encoding conversion table for JIS to UTF-8\n */\nvar JIS_TO_UTF8_TABLE = null;\nmodule.exports = JIS_TO_UTF8_TABLE;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/encoding-japanese/src/jis-to-utf8-table.js?");

/***/ }),

/***/ "../node_modules/encoding-japanese/src/jisx0212-to-utf8-table.js":
/*!***********************************************************************!*\
  !*** ../node_modules/encoding-japanese/src/jisx0212-to-utf8-table.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Encoding conversion table for JIS X 0212:1990 (Hojo-Kanji) to UTF-8\n */\nvar JISX0212_TO_UTF8_TABLE = null;\nmodule.exports = JISX0212_TO_UTF8_TABLE;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/encoding-japanese/src/jisx0212-to-utf8-table.js?");

/***/ }),

/***/ "../node_modules/encoding-japanese/src/kana-case-table.js":
/*!****************************************************************!*\
  !*** ../node_modules/encoding-japanese/src/kana-case-table.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Katakana table\n */\nexports.HANKANA_TABLE = {\n  0x3001:0xFF64,0x3002:0xFF61,0x300C:0xFF62,0x300D:0xFF63,0x309B:0xFF9E,\n  0x309C:0xFF9F,0x30A1:0xFF67,0x30A2:0xFF71,0x30A3:0xFF68,0x30A4:0xFF72,\n  0x30A5:0xFF69,0x30A6:0xFF73,0x30A7:0xFF6A,0x30A8:0xFF74,0x30A9:0xFF6B,\n  0x30AA:0xFF75,0x30AB:0xFF76,0x30AD:0xFF77,0x30AF:0xFF78,0x30B1:0xFF79,\n  0x30B3:0xFF7A,0x30B5:0xFF7B,0x30B7:0xFF7C,0x30B9:0xFF7D,0x30BB:0xFF7E,\n  0x30BD:0xFF7F,0x30BF:0xFF80,0x30C1:0xFF81,0x30C3:0xFF6F,0x30C4:0xFF82,\n  0x30C6:0xFF83,0x30C8:0xFF84,0x30CA:0xFF85,0x30CB:0xFF86,0x30CC:0xFF87,\n  0x30CD:0xFF88,0x30CE:0xFF89,0x30CF:0xFF8A,0x30D2:0xFF8B,0x30D5:0xFF8C,\n  0x30D8:0xFF8D,0x30DB:0xFF8E,0x30DE:0xFF8F,0x30DF:0xFF90,0x30E0:0xFF91,\n  0x30E1:0xFF92,0x30E2:0xFF93,0x30E3:0xFF6C,0x30E4:0xFF94,0x30E5:0xFF6D,\n  0x30E6:0xFF95,0x30E7:0xFF6E,0x30E8:0xFF96,0x30E9:0xFF97,0x30EA:0xFF98,\n  0x30EB:0xFF99,0x30EC:0xFF9A,0x30ED:0xFF9B,0x30EF:0xFF9C,0x30F2:0xFF66,\n  0x30F3:0xFF9D,0x30FB:0xFF65,0x30FC:0xFF70\n};\n\nexports.HANKANA_SONANTS = {\n  0x30F4:0xFF73,\n  0x30F7:0xFF9C,\n  0x30FA:0xFF66\n};\n\nexports.HANKANA_MARKS = [0xFF9E, 0xFF9F];\n\n/**\n * Zenkaku table [U+FF61] - [U+FF9F]\n */\nexports.ZENKANA_TABLE = [\n  0x3002, 0x300C, 0x300D, 0x3001, 0x30FB, 0x30F2, 0x30A1, 0x30A3,\n  0x30A5, 0x30A7, 0x30A9, 0x30E3, 0x30E5, 0x30E7, 0x30C3, 0x30FC,\n  0x30A2, 0x30A4, 0x30A6, 0x30A8, 0x30AA, 0x30AB, 0x30AD, 0x30AF,\n  0x30B1, 0x30B3, 0x30B5, 0x30B7, 0x30B9, 0x30BB, 0x30BD, 0x30BF,\n  0x30C1, 0x30C4, 0x30C6, 0x30C8, 0x30CA, 0x30CB, 0x30CC, 0x30CD,\n  0x30CE, 0x30CF, 0x30D2, 0x30D5, 0x30D8, 0x30DB, 0x30DE, 0x30DF,\n  0x30E0, 0x30E1, 0x30E2, 0x30E4, 0x30E6, 0x30E8, 0x30E9, 0x30EA,\n  0x30EB, 0x30EC, 0x30ED, 0x30EF, 0x30F3, 0x309B, 0x309C\n];\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/encoding-japanese/src/kana-case-table.js?");

/***/ }),

/***/ "../node_modules/encoding-japanese/src/utf8-to-jis-table.js":
/*!******************************************************************!*\
  !*** ../node_modules/encoding-japanese/src/utf8-to-jis-table.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Encoding conversion table for UTF-8 to JIS\n */\nmodule.exports = {\n0xEFBDA1:0x21,0xEFBDA2:0x22,0xEFBDA3:0x23,0xEFBDA4:0x24,0xEFBDA5:0x25,\n0xEFBDA6:0x26,0xEFBDA7:0x27,0xEFBDA8:0x28,0xEFBDA9:0x29,0xEFBDAA:0x2A,\n0xEFBDAB:0x2B,0xEFBDAC:0x2C,0xEFBDAD:0x2D,0xEFBDAE:0x2E,0xEFBDAF:0x2F,\n0xEFBDB0:0x30,0xEFBDB1:0x31,0xEFBDB2:0x32,0xEFBDB3:0x33,0xEFBDB4:0x34,\n0xEFBDB5:0x35,0xEFBDB6:0x36,0xEFBDB7:0x37,0xEFBDB8:0x38,0xEFBDB9:0x39,\n0xEFBDBA:0x3A,0xEFBDBB:0x3B,0xEFBDBC:0x3C,0xEFBDBD:0x3D,0xEFBDBE:0x3E,\n0xEFBDBF:0x3F,0xEFBE80:0x40,0xEFBE81:0x41,0xEFBE82:0x42,0xEFBE83:0x43,\n0xEFBE84:0x44,0xEFBE85:0x45,0xEFBE86:0x46,0xEFBE87:0x47,0xEFBE88:0x48,\n0xEFBE89:0x49,0xEFBE8A:0x4A,0xEFBE8B:0x4B,0xEFBE8C:0x4C,0xEFBE8D:0x4D,\n0xEFBE8E:0x4E,0xEFBE8F:0x4F,0xEFBE90:0x50,0xEFBE91:0x51,0xEFBE92:0x52,\n0xEFBE93:0x53,0xEFBE94:0x54,0xEFBE95:0x55,0xEFBE96:0x56,0xEFBE97:0x57,\n0xEFBE98:0x58,0xEFBE99:0x59,0xEFBE9A:0x5A,0xEFBE9B:0x5B,0xEFBE9C:0x5C,\n0xEFBE9D:0x5D,0xEFBE9E:0x5E,0xEFBE9F:0x5F,\n\n0xE291A0:0x2D21,0xE291A1:0x2D22,0xE291A2:0x2D23,0xE291A3:0x2D24,0xE291A4:0x2D25,\n0xE291A5:0x2D26,0xE291A6:0x2D27,0xE291A7:0x2D28,0xE291A8:0x2D29,0xE291A9:0x2D2A,\n0xE291AA:0x2D2B,0xE291AB:0x2D2C,0xE291AC:0x2D2D,0xE291AD:0x2D2E,0xE291AE:0x2D2F,\n0xE291AF:0x2D30,0xE291B0:0x2D31,0xE291B1:0x2D32,0xE291B2:0x2D33,0xE291B3:0x2D34,\n0xE285A0:0x2D35,0xE285A1:0x2D36,0xE285A2:0x2D37,0xE285A3:0x2D38,0xE285A4:0x2D39,\n0xE285A5:0x2D3A,0xE285A6:0x2D3B,0xE285A7:0x2D3C,0xE285A8:0x2D3D,0xE285A9:0x2D3E,\n0xE38D89:0x2D40,0xE38C94:0x2D41,0xE38CA2:0x2D42,0xE38D8D:0x2D43,0xE38C98:0x2D44,\n0xE38CA7:0x2D45,0xE38C83:0x2D46,0xE38CB6:0x2D47,0xE38D91:0x2D48,0xE38D97:0x2D49,\n0xE38C8D:0x2D4A,0xE38CA6:0x2D4B,0xE38CA3:0x2D4C,0xE38CAB:0x2D4D,0xE38D8A:0x2D4E,\n0xE38CBB:0x2D4F,0xE38E9C:0x2D50,0xE38E9D:0x2D51,0xE38E9E:0x2D52,0xE38E8E:0x2D53,\n0xE38E8F:0x2D54,0xE38F84:0x2D55,0xE38EA1:0x2D56,0xE38DBB:0x2D5F,0xE3809D:0x2D60,\n0xE3809F:0x2D61,0xE28496:0x2D62,0xE38F8D:0x2D63,0xE284A1:0x2D64,0xE38AA4:0x2D65,\n0xE38AA5:0x2D66,0xE38AA6:0x2D67,0xE38AA7:0x2D68,0xE38AA8:0x2D69,0xE388B1:0x2D6A,\n0xE388B2:0x2D6B,0xE388B9:0x2D6C,0xE38DBE:0x2D6D,0xE38DBD:0x2D6E,0xE38DBC:0x2D6F,\n0xE288AE:0x2D73,0xE28891:0x2D74,0xE2889F:0x2D78,0xE28ABF:0x2D79,\n\n0xE38080:0x2121,0xE38081:0x2122,0xE38082:0x2123,0xEFBC8C:0x2124,0xEFBC8E:0x2125,\n0xE383BB:0x2126,0xEFBC9A:0x2127,0xEFBC9B:0x2128,0xEFBC9F:0x2129,0xEFBC81:0x212A,\n0xE3829B:0x212B,0xE3829C:0x212C,0xC2B4:0x212D,0xEFBD80:0x212E,0xC2A8:0x212F,\n0xEFBCBE:0x2130,0xEFBFA3:0x2131,0xEFBCBF:0x2132,0xE383BD:0x2133,0xE383BE:0x2134,\n0xE3829D:0x2135,0xE3829E:0x2136,0xE38083:0x2137,0xE4BB9D:0x2138,0xE38085:0x2139,\n0xE38086:0x213A,0xE38087:0x213B,0xE383BC:0x213C,0xE28095:0x213D,0xE28090:0x213E,\n0xEFBC8F:0x213F,0xEFBCBC:0x2140,0xEFBD9E:0x2141,0xE28096:0x2142,0xEFBD9C:0x2143,\n0xE280A6:0x2144,0xE280A5:0x2145,0xE28098:0x2146,0xE28099:0x2147,0xE2809C:0x2148,\n0xE2809D:0x2149,0xEFBC88:0x214A,0xEFBC89:0x214B,0xE38094:0x214C,0xE38095:0x214D,\n0xEFBCBB:0x214E,0xEFBCBD:0x214F,0xEFBD9B:0x2150,0xEFBD9D:0x2151,0xE38088:0x2152,\n0xE38089:0x2153,0xE3808A:0x2154,0xE3808B:0x2155,0xE3808C:0x2156,0xE3808D:0x2157,\n0xE3808E:0x2158,0xE3808F:0x2159,0xE38090:0x215A,0xE38091:0x215B,0xEFBC8B:0x215C,\n0xEFBC8D:0x215D,0xC2B1:0x215E,0xC397:0x215F,0xC3B7:0x2160,0xEFBC9D:0x2161,\n0xE289A0:0x2162,0xEFBC9C:0x2163,0xEFBC9E:0x2164,0xE289A6:0x2165,0xE289A7:0x2166,\n0xE2889E:0x2167,0xE288B4:0x2168,0xE29982:0x2169,0xE29980:0x216A,0xC2B0:0x216B,\n0xE280B2:0x216C,0xE280B3:0x216D,0xE28483:0x216E,0xEFBFA5:0x216F,0xEFBC84:0x2170,\n0xEFBFA0:0x2171,0xEFBFA1:0x2172,0xEFBC85:0x2173,0xEFBC83:0x2174,0xEFBC86:0x2175,\n0xEFBC8A:0x2176,0xEFBCA0:0x2177,0xC2A7:0x2178,0xE29886:0x2179,0xE29885:0x217A,\n0xE2978B:0x217B,0xE2978F:0x217C,0xE2978E:0x217D,0xE29787:0x217E,0xE29786:0x2221,\n0xE296A1:0x2222,0xE296A0:0x2223,0xE296B3:0x2224,0xE296B2:0x2225,0xE296BD:0x2226,\n0xE296BC:0x2227,0xE280BB:0x2228,0xE38092:0x2229,0xE28692:0x222A,0xE28690:0x222B,\n0xE28691:0x222C,0xE28693:0x222D,0xE38093:0x222E,0xE28888:0x223A,0xE2888B:0x223B,\n0xE28A86:0x223C,0xE28A87:0x223D,0xE28A82:0x223E,0xE28A83:0x223F,0xE288AA:0x2240,\n0xE288A9:0x2241,0xE288A7:0x224A,0xE288A8:0x224B,0xC2AC:0x224C,0xE28792:0x224D,\n0xE28794:0x224E,0xE28880:0x224F,0xE28883:0x2250,0xE288A0:0x225C,0xE28AA5:0x225D,\n0xE28C92:0x225E,0xE28882:0x225F,0xE28887:0x2260,0xE289A1:0x2261,0xE28992:0x2262,\n0xE289AA:0x2263,0xE289AB:0x2264,0xE2889A:0x2265,0xE288BD:0x2266,0xE2889D:0x2267,\n0xE288B5:0x2268,0xE288AB:0x2269,0xE288AC:0x226A,0xE284AB:0x2272,0xE280B0:0x2273,\n0xE299AF:0x2274,0xE299AD:0x2275,0xE299AA:0x2276,0xE280A0:0x2277,0xE280A1:0x2278,\n0xC2B6:0x2279,0xE297AF:0x227E,0xEFBC90:0x2330,0xEFBC91:0x2331,0xEFBC92:0x2332,\n0xEFBC93:0x2333,0xEFBC94:0x2334,0xEFBC95:0x2335,0xEFBC96:0x2336,0xEFBC97:0x2337,\n0xEFBC98:0x2338,0xEFBC99:0x2339,0xEFBCA1:0x2341,0xEFBCA2:0x2342,0xEFBCA3:0x2343,\n0xEFBCA4:0x2344,0xEFBCA5:0x2345,0xEFBCA6:0x2346,0xEFBCA7:0x2347,0xEFBCA8:0x2348,\n0xEFBCA9:0x2349,0xEFBCAA:0x234A,0xEFBCAB:0x234B,0xEFBCAC:0x234C,0xEFBCAD:0x234D,\n0xEFBCAE:0x234E,0xEFBCAF:0x234F,0xEFBCB0:0x2350,0xEFBCB1:0x2351,0xEFBCB2:0x2352,\n0xEFBCB3:0x2353,0xEFBCB4:0x2354,0xEFBCB5:0x2355,0xEFBCB6:0x2356,0xEFBCB7:0x2357,\n0xEFBCB8:0x2358,0xEFBCB9:0x2359,0xEFBCBA:0x235A,0xEFBD81:0x2361,0xEFBD82:0x2362,\n0xEFBD83:0x2363,0xEFBD84:0x2364,0xEFBD85:0x2365,0xEFBD86:0x2366,0xEFBD87:0x2367,\n0xEFBD88:0x2368,0xEFBD89:0x2369,0xEFBD8A:0x236A,0xEFBD8B:0x236B,0xEFBD8C:0x236C,\n0xEFBD8D:0x236D,0xEFBD8E:0x236E,0xEFBD8F:0x236F,0xEFBD90:0x2370,0xEFBD91:0x2371,\n0xEFBD92:0x2372,0xEFBD93:0x2373,0xEFBD94:0x2374,0xEFBD95:0x2375,0xEFBD96:0x2376,\n0xEFBD97:0x2377,0xEFBD98:0x2378,0xEFBD99:0x2379,0xEFBD9A:0x237A,0xE38181:0x2421,\n0xE38182:0x2422,0xE38183:0x2423,0xE38184:0x2424,0xE38185:0x2425,0xE38186:0x2426,\n0xE38187:0x2427,0xE38188:0x2428,0xE38189:0x2429,0xE3818A:0x242A,0xE3818B:0x242B,\n0xE3818C:0x242C,0xE3818D:0x242D,0xE3818E:0x242E,0xE3818F:0x242F,0xE38190:0x2430,\n0xE38191:0x2431,0xE38192:0x2432,0xE38193:0x2433,0xE38194:0x2434,0xE38195:0x2435,\n0xE38196:0x2436,0xE38197:0x2437,0xE38198:0x2438,0xE38199:0x2439,0xE3819A:0x243A,\n0xE3819B:0x243B,0xE3819C:0x243C,0xE3819D:0x243D,0xE3819E:0x243E,0xE3819F:0x243F,\n0xE381A0:0x2440,0xE381A1:0x2441,0xE381A2:0x2442,0xE381A3:0x2443,0xE381A4:0x2444,\n0xE381A5:0x2445,0xE381A6:0x2446,0xE381A7:0x2447,0xE381A8:0x2448,0xE381A9:0x2449,\n0xE381AA:0x244A,0xE381AB:0x244B,0xE381AC:0x244C,0xE381AD:0x244D,0xE381AE:0x244E,\n0xE381AF:0x244F,0xE381B0:0x2450,0xE381B1:0x2451,0xE381B2:0x2452,0xE381B3:0x2453,\n0xE381B4:0x2454,0xE381B5:0x2455,0xE381B6:0x2456,0xE381B7:0x2457,0xE381B8:0x2458,\n0xE381B9:0x2459,0xE381BA:0x245A,0xE381BB:0x245B,0xE381BC:0x245C,0xE381BD:0x245D,\n0xE381BE:0x245E,0xE381BF:0x245F,0xE38280:0x2460,0xE38281:0x2461,0xE38282:0x2462,\n0xE38283:0x2463,0xE38284:0x2464,0xE38285:0x2465,0xE38286:0x2466,0xE38287:0x2467,\n0xE38288:0x2468,0xE38289:0x2469,0xE3828A:0x246A,0xE3828B:0x246B,0xE3828C:0x246C,\n0xE3828D:0x246D,0xE3828E:0x246E,0xE3828F:0x246F,0xE38290:0x2470,0xE38291:0x2471,\n0xE38292:0x2472,0xE38293:0x2473,0xE382A1:0x2521,0xE382A2:0x2522,0xE382A3:0x2523,\n0xE382A4:0x2524,0xE382A5:0x2525,0xE382A6:0x2526,0xE382A7:0x2527,0xE382A8:0x2528,\n0xE382A9:0x2529,0xE382AA:0x252A,0xE382AB:0x252B,0xE382AC:0x252C,0xE382AD:0x252D,\n0xE382AE:0x252E,0xE382AF:0x252F,0xE382B0:0x2530,0xE382B1:0x2531,0xE382B2:0x2532,\n0xE382B3:0x2533,0xE382B4:0x2534,0xE382B5:0x2535,0xE382B6:0x2536,0xE382B7:0x2537,\n0xE382B8:0x2538,0xE382B9:0x2539,0xE382BA:0x253A,0xE382BB:0x253B,0xE382BC:0x253C,\n0xE382BD:0x253D,0xE382BE:0x253E,0xE382BF:0x253F,0xE38380:0x2540,0xE38381:0x2541,\n0xE38382:0x2542,0xE38383:0x2543,0xE38384:0x2544,0xE38385:0x2545,0xE38386:0x2546,\n0xE38387:0x2547,0xE38388:0x2548,0xE38389:0x2549,0xE3838A:0x254A,0xE3838B:0x254B,\n0xE3838C:0x254C,0xE3838D:0x254D,0xE3838E:0x254E,0xE3838F:0x254F,0xE38390:0x2550,\n0xE38391:0x2551,0xE38392:0x2552,0xE38393:0x2553,0xE38394:0x2554,0xE38395:0x2555,\n0xE38396:0x2556,0xE38397:0x2557,0xE38398:0x2558,0xE38399:0x2559,0xE3839A:0x255A,\n0xE3839B:0x255B,0xE3839C:0x255C,0xE3839D:0x255D,0xE3839E:0x255E,0xE3839F:0x255F,\n0xE383A0:0x2560,0xE383A1:0x2561,0xE383A2:0x2562,0xE383A3:0x2563,0xE383A4:0x2564,\n0xE383A5:0x2565,0xE383A6:0x2566,0xE383A7:0x2567,0xE383A8:0x2568,0xE383A9:0x2569,\n0xE383AA:0x256A,0xE383AB:0x256B,0xE383AC:0x256C,0xE383AD:0x256D,0xE383AE:0x256E,\n0xE383AF:0x256F,0xE383B0:0x2570,0xE383B1:0x2571,0xE383B2:0x2572,0xE383B3:0x2573,\n0xE383B4:0x2574,0xE383B5:0x2575,0xE383B6:0x2576,0xCE91:0x2621,0xCE92:0x2622,\n0xCE93:0x2623,0xCE94:0x2624,0xCE95:0x2625,0xCE96:0x2626,0xCE97:0x2627,\n0xCE98:0x2628,0xCE99:0x2629,0xCE9A:0x262A,0xCE9B:0x262B,0xCE9C:0x262C,\n0xCE9D:0x262D,0xCE9E:0x262E,0xCE9F:0x262F,0xCEA0:0x2630,0xCEA1:0x2631,\n0xCEA3:0x2632,0xCEA4:0x2633,0xCEA5:0x2634,0xCEA6:0x2635,0xCEA7:0x2636,\n0xCEA8:0x2637,0xCEA9:0x2638,0xCEB1:0x2641,0xCEB2:0x2642,0xCEB3:0x2643,\n0xCEB4:0x2644,0xCEB5:0x2645,0xCEB6:0x2646,0xCEB7:0x2647,0xCEB8:0x2648,\n0xCEB9:0x2649,0xCEBA:0x264A,0xCEBB:0x264B,0xCEBC:0x264C,0xCEBD:0x264D,\n0xCEBE:0x264E,0xCEBF:0x264F,0xCF80:0x2650,0xCF81:0x2651,0xCF83:0x2652,\n0xCF84:0x2653,0xCF85:0x2654,0xCF86:0x2655,0xCF87:0x2656,0xCF88:0x2657,\n0xCF89:0x2658,0xD090:0x2721,0xD091:0x2722,0xD092:0x2723,0xD093:0x2724,\n0xD094:0x2725,0xD095:0x2726,0xD081:0x2727,0xD096:0x2728,0xD097:0x2729,\n0xD098:0x272A,0xD099:0x272B,0xD09A:0x272C,0xD09B:0x272D,0xD09C:0x272E,\n0xD09D:0x272F,0xD09E:0x2730,0xD09F:0x2731,0xD0A0:0x2732,0xD0A1:0x2733,\n0xD0A2:0x2734,0xD0A3:0x2735,0xD0A4:0x2736,0xD0A5:0x2737,0xD0A6:0x2738,\n0xD0A7:0x2739,0xD0A8:0x273A,0xD0A9:0x273B,0xD0AA:0x273C,0xD0AB:0x273D,\n0xD0AC:0x273E,0xD0AD:0x273F,0xD0AE:0x2740,0xD0AF:0x2741,0xD0B0:0x2751,\n0xD0B1:0x2752,0xD0B2:0x2753,0xD0B3:0x2754,0xD0B4:0x2755,0xD0B5:0x2756,\n0xD191:0x2757,0xD0B6:0x2758,0xD0B7:0x2759,0xD0B8:0x275A,0xD0B9:0x275B,\n0xD0BA:0x275C,0xD0BB:0x275D,0xD0BC:0x275E,0xD0BD:0x275F,0xD0BE:0x2760,\n0xD0BF:0x2761,0xD180:0x2762,0xD181:0x2763,0xD182:0x2764,0xD183:0x2765,\n0xD184:0x2766,0xD185:0x2767,0xD186:0x2768,0xD187:0x2769,0xD188:0x276A,\n0xD189:0x276B,0xD18A:0x276C,0xD18B:0x276D,0xD18C:0x276E,0xD18D:0x276F,\n0xD18E:0x2770,0xD18F:0x2771,0xE29480:0x2821,0xE29482:0x2822,0xE2948C:0x2823,\n0xE29490:0x2824,0xE29498:0x2825,0xE29494:0x2826,0xE2949C:0x2827,0xE294AC:0x2828,\n0xE294A4:0x2829,0xE294B4:0x282A,0xE294BC:0x282B,0xE29481:0x282C,0xE29483:0x282D,\n0xE2948F:0x282E,0xE29493:0x282F,0xE2949B:0x2830,0xE29497:0x2831,0xE294A3:0x2832,\n0xE294B3:0x2833,0xE294AB:0x2834,0xE294BB:0x2835,0xE2958B:0x2836,0xE294A0:0x2837,\n0xE294AF:0x2838,0xE294A8:0x2839,0xE294B7:0x283A,0xE294BF:0x283B,0xE2949D:0x283C,\n0xE294B0:0x283D,0xE294A5:0x283E,0xE294B8:0x283F,0xE29582:0x2840,0xE4BA9C:0x3021,\n0xE59496:0x3022,0xE5A883:0x3023,0xE998BF:0x3024,0xE59380:0x3025,0xE6849B:0x3026,\n0xE68CA8:0x3027,0xE5A7B6:0x3028,0xE980A2:0x3029,0xE891B5:0x302A,0xE88C9C:0x302B,\n0xE7A990:0x302C,0xE682AA:0x302D,0xE68FA1:0x302E,0xE6B8A5:0x302F,0xE697AD:0x3030,\n0xE891A6:0x3031,0xE88AA6:0x3032,0xE9AFB5:0x3033,0xE6A293:0x3034,0xE59CA7:0x3035,\n0xE696A1:0x3036,0xE689B1:0x3037,0xE5AE9B:0x3038,0xE5A790:0x3039,0xE899BB:0x303A,\n0xE9A3B4:0x303B,0xE7B5A2:0x303C,0xE7B6BE:0x303D,0xE9AE8E:0x303E,0xE68896:0x303F,\n0xE7B29F:0x3040,0xE8A2B7:0x3041,0xE5AE89:0x3042,0xE5BAB5:0x3043,0xE68C89:0x3044,\n0xE69A97:0x3045,0xE6A188:0x3046,0xE99787:0x3047,0xE99E8D:0x3048,0xE69D8F:0x3049,\n0xE4BBA5:0x304A,0xE4BC8A:0x304B,0xE4BD8D:0x304C,0xE4BE9D:0x304D,0xE58189:0x304E,\n0xE59BB2:0x304F,0xE5A4B7:0x3050,0xE5A794:0x3051,0xE5A881:0x3052,0xE5B089:0x3053,\n0xE6839F:0x3054,0xE6848F:0x3055,0xE685B0:0x3056,0xE69893:0x3057,0xE6A485:0x3058,\n0xE782BA:0x3059,0xE7958F:0x305A,0xE795B0:0x305B,0xE7A7BB:0x305C,0xE7B6AD:0x305D,\n0xE7B7AF:0x305E,0xE88383:0x305F,0xE8908E:0x3060,0xE8A1A3:0x3061,0xE8AC82:0x3062,\n0xE98195:0x3063,0xE981BA:0x3064,0xE58CBB:0x3065,0xE4BA95:0x3066,0xE4BAA5:0x3067,\n0xE59F9F:0x3068,0xE882B2:0x3069,0xE98381:0x306A,0xE7A3AF:0x306B,0xE4B880:0x306C,\n0xE5A3B1:0x306D,0xE6BAA2:0x306E,0xE980B8:0x306F,0xE7A8B2:0x3070,0xE88CA8:0x3071,\n0xE88A8B:0x3072,0xE9B0AF:0x3073,0xE58581:0x3074,0xE58DB0:0x3075,0xE592BD:0x3076,\n0xE593A1:0x3077,0xE59BA0:0x3078,0xE5A7BB:0x3079,0xE5BC95:0x307A,0xE9A3B2:0x307B,\n0xE6B7AB:0x307C,0xE883A4:0x307D,0xE894AD:0x307E,0xE999A2:0x3121,0xE999B0:0x3122,\n0xE99AA0:0x3123,0xE99FBB:0x3124,0xE5908B:0x3125,0xE58FB3:0x3126,0xE5AE87:0x3127,\n0xE7838F:0x3128,0xE7BEBD:0x3129,0xE8BF82:0x312A,0xE99BA8:0x312B,0xE58DAF:0x312C,\n0xE9B59C:0x312D,0xE7AABA:0x312E,0xE4B891:0x312F,0xE7A293:0x3130,0xE887BC:0x3131,\n0xE6B8A6:0x3132,0xE59898:0x3133,0xE59484:0x3134,0xE6AC9D:0x3135,0xE8949A:0x3136,\n0xE9B0BB:0x3137,0xE5A7A5:0x3138,0xE58EA9:0x3139,0xE6B5A6:0x313A,0xE7939C:0x313B,\n0xE9968F:0x313C,0xE59982:0x313D,0xE4BA91:0x313E,0xE9818B:0x313F,0xE99BB2:0x3140,\n0xE88D8F:0x3141,0xE9A48C:0x3142,0xE58FA1:0x3143,0xE596B6:0x3144,0xE5ACB0:0x3145,\n0xE5BDB1:0x3146,0xE698A0:0x3147,0xE69BB3:0x3148,0xE6A084:0x3149,0xE6B0B8:0x314A,\n0xE6B3B3:0x314B,0xE6B4A9:0x314C,0xE7919B:0x314D,0xE79B88:0x314E,0xE7A98E:0x314F,\n0xE9A0B4:0x3150,0xE88BB1:0x3151,0xE8A19B:0x3152,0xE8A9A0:0x3153,0xE98BAD:0x3154,\n0xE6B6B2:0x3155,0xE796AB:0x3156,0xE79B8A:0x3157,0xE9A785:0x3158,0xE682A6:0x3159,\n0xE8AC81:0x315A,0xE8B68A:0x315B,0xE996B2:0x315C,0xE6A68E:0x315D,0xE58EAD:0x315E,\n0xE58686:0x315F,0xE59C92:0x3160,0xE5A0B0:0x3161,0xE5A584:0x3162,0xE5AEB4:0x3163,\n0xE5BBB6:0x3164,0xE680A8:0x3165,0xE68EA9:0x3166,0xE68FB4:0x3167,0xE6B2BF:0x3168,\n0xE6BC94:0x3169,0xE7828E:0x316A,0xE78494:0x316B,0xE78599:0x316C,0xE78795:0x316D,\n0xE78CBF:0x316E,0xE7B881:0x316F,0xE889B6:0x3170,0xE88B91:0x3171,0xE89697:0x3172,\n0xE981A0:0x3173,0xE9899B:0x3174,0xE9B49B:0x3175,0xE5A1A9:0x3176,0xE696BC:0x3177,\n0xE6B19A:0x3178,0xE794A5:0x3179,0xE587B9:0x317A,0xE5A4AE:0x317B,0xE5A5A5:0x317C,\n0xE5BE80:0x317D,0xE5BF9C:0x317E,0xE68ABC:0x3221,0xE697BA:0x3222,0xE6A8AA:0x3223,\n0xE6ACA7:0x3224,0xE6AEB4:0x3225,0xE78E8B:0x3226,0xE7BF81:0x3227,0xE8A596:0x3228,\n0xE9B4AC:0x3229,0xE9B48E:0x322A,0xE9BB84:0x322B,0xE5B2A1:0x322C,0xE6B296:0x322D,\n0xE88DBB:0x322E,0xE58484:0x322F,0xE5B18B:0x3230,0xE686B6:0x3231,0xE88786:0x3232,\n0xE6A1B6:0x3233,0xE789A1:0x3234,0xE4B999:0x3235,0xE4BFBA:0x3236,0xE58DB8:0x3237,\n0xE681A9:0x3238,0xE6B8A9:0x3239,0xE7A98F:0x323A,0xE99FB3:0x323B,0xE4B88B:0x323C,\n0xE58C96:0x323D,0xE4BBAE:0x323E,0xE4BD95:0x323F,0xE4BCBD:0x3240,0xE4BEA1:0x3241,\n0xE4BDB3:0x3242,0xE58AA0:0x3243,0xE58FAF:0x3244,0xE59889:0x3245,0xE5A48F:0x3246,\n0xE5AB81:0x3247,0xE5AEB6:0x3248,0xE5AFA1:0x3249,0xE7A791:0x324A,0xE69A87:0x324B,\n0xE69E9C:0x324C,0xE69EB6:0x324D,0xE6AD8C:0x324E,0xE6B2B3:0x324F,0xE781AB:0x3250,\n0xE78F82:0x3251,0xE7A68D:0x3252,0xE7A6BE:0x3253,0xE7A8BC:0x3254,0xE7AE87:0x3255,\n0xE88AB1:0x3256,0xE88B9B:0x3257,0xE88C84:0x3258,0xE88DB7:0x3259,0xE88FAF:0x325A,\n0xE88F93:0x325B,0xE89DA6:0x325C,0xE8AAB2:0x325D,0xE598A9:0x325E,0xE8B2A8:0x325F,\n0xE8BFA6:0x3260,0xE9818E:0x3261,0xE99C9E:0x3262,0xE89A8A:0x3263,0xE4BF84:0x3264,\n0xE5B3A8:0x3265,0xE68891:0x3266,0xE78999:0x3267,0xE794BB:0x3268,0xE887A5:0x3269,\n0xE88ABD:0x326A,0xE89BBE:0x326B,0xE8B380:0x326C,0xE99B85:0x326D,0xE9A493:0x326E,\n0xE9A795:0x326F,0xE4BB8B:0x3270,0xE4BC9A:0x3271,0xE8A7A3:0x3272,0xE59B9E:0x3273,\n0xE5A18A:0x3274,0xE5A38A:0x3275,0xE5BBBB:0x3276,0xE5BFAB:0x3277,0xE680AA:0x3278,\n0xE68294:0x3279,0xE681A2:0x327A,0xE68790:0x327B,0xE68892:0x327C,0xE68B90:0x327D,\n0xE694B9:0x327E,0xE9AD81:0x3321,0xE699A6:0x3322,0xE6A2B0:0x3323,0xE6B5B7:0x3324,\n0xE781B0:0x3325,0xE7958C:0x3326,0xE79A86:0x3327,0xE7B5B5:0x3328,0xE88AA5:0x3329,\n0xE89FB9:0x332A,0xE9968B:0x332B,0xE99A8E:0x332C,0xE8B29D:0x332D,0xE587B1:0x332E,\n0xE58ABE:0x332F,0xE5A496:0x3330,0xE592B3:0x3331,0xE5AEB3:0x3332,0xE5B496:0x3333,\n0xE685A8:0x3334,0xE6A682:0x3335,0xE6B6AF:0x3336,0xE7A28D:0x3337,0xE8938B:0x3338,\n0xE8A197:0x3339,0xE8A9B2:0x333A,0xE98EA7:0x333B,0xE9AAB8:0x333C,0xE6B5AC:0x333D,\n0xE9A6A8:0x333E,0xE89B99:0x333F,0xE59EA3:0x3340,0xE69FBF:0x3341,0xE89B8E:0x3342,\n0xE9888E:0x3343,0xE58A83:0x3344,0xE59A87:0x3345,0xE59084:0x3346,0xE5BB93:0x3347,\n0xE68BA1:0x3348,0xE692B9:0x3349,0xE6A0BC:0x334A,0xE6A0B8:0x334B,0xE6AEBB:0x334C,\n0xE78DB2:0x334D,0xE7A2BA:0x334E,0xE7A9AB:0x334F,0xE8A69A:0x3350,0xE8A792:0x3351,\n0xE8B5AB:0x3352,0xE8BC83:0x3353,0xE983AD:0x3354,0xE996A3:0x3355,0xE99A94:0x3356,\n0xE99DA9:0x3357,0xE5ADA6:0x3358,0xE5B2B3:0x3359,0xE6A5BD:0x335A,0xE9A18D:0x335B,\n0xE9A18E:0x335C,0xE68E9B:0x335D,0xE7ACA0:0x335E,0xE6A8AB:0x335F,0xE6A9BF:0x3360,\n0xE6A2B6:0x3361,0xE9B08D:0x3362,0xE6BD9F:0x3363,0xE589B2:0x3364,0xE5969D:0x3365,\n0xE681B0:0x3366,0xE68BAC:0x3367,0xE6B4BB:0x3368,0xE6B887:0x3369,0xE6BB91:0x336A,\n0xE8919B:0x336B,0xE8A490:0x336C,0xE8BD84:0x336D,0xE4B894:0x336E,0xE9B0B9:0x336F,\n0xE58FB6:0x3370,0xE6A49B:0x3371,0xE6A8BA:0x3372,0xE99E84:0x3373,0xE6A0AA:0x3374,\n0xE5859C:0x3375,0xE7AB83:0x3376,0xE892B2:0x3377,0xE9879C:0x3378,0xE98E8C:0x3379,\n0xE5999B:0x337A,0xE9B4A8:0x337B,0xE6A0A2:0x337C,0xE88C85:0x337D,0xE890B1:0x337E,\n0xE7B2A5:0x3421,0xE58888:0x3422,0xE88B85:0x3423,0xE793A6:0x3424,0xE4B9BE:0x3425,\n0xE4BE83:0x3426,0xE586A0:0x3427,0xE5AF92:0x3428,0xE5888A:0x3429,0xE58B98:0x342A,\n0xE58BA7:0x342B,0xE5B7BB:0x342C,0xE5969A:0x342D,0xE5A0AA:0x342E,0xE5A7A6:0x342F,\n0xE5AE8C:0x3430,0xE5AE98:0x3431,0xE5AF9B:0x3432,0xE5B9B2:0x3433,0xE5B9B9:0x3434,\n0xE682A3:0x3435,0xE6849F:0x3436,0xE685A3:0x3437,0xE686BE:0x3438,0xE68F9B:0x3439,\n0xE695A2:0x343A,0xE69F91:0x343B,0xE6A193:0x343C,0xE6A3BA:0x343D,0xE6ACBE:0x343E,\n0xE6AD93:0x343F,0xE6B197:0x3440,0xE6BCA2:0x3441,0xE6BE97:0x3442,0xE6BD85:0x3443,\n0xE792B0:0x3444,0xE79498:0x3445,0xE79BA3:0x3446,0xE79C8B:0x3447,0xE7ABBF:0x3448,\n0xE7AEA1:0x3449,0xE7B0A1:0x344A,0xE7B7A9:0x344B,0xE7BCB6:0x344C,0xE7BFB0:0x344D,\n0xE8829D:0x344E,0xE889A6:0x344F,0xE88E9E:0x3450,0xE8A6B3:0x3451,0xE8AB8C:0x3452,\n0xE8B2AB:0x3453,0xE98284:0x3454,0xE99191:0x3455,0xE99693:0x3456,0xE99691:0x3457,\n0xE996A2:0x3458,0xE999A5:0x3459,0xE99F93:0x345A,0xE9A4A8:0x345B,0xE88898:0x345C,\n0xE4B8B8:0x345D,0xE590AB:0x345E,0xE5B2B8:0x345F,0xE5B78C:0x3460,0xE78EA9:0x3461,\n0xE7998C:0x3462,0xE79CBC:0x3463,0xE5B2A9:0x3464,0xE7BFAB:0x3465,0xE8B48B:0x3466,\n0xE99B81:0x3467,0xE9A091:0x3468,0xE9A194:0x3469,0xE9A198:0x346A,0xE4BC81:0x346B,\n0xE4BC8E:0x346C,0xE58DB1:0x346D,0xE5969C:0x346E,0xE599A8:0x346F,0xE59FBA:0x3470,\n0xE5A587:0x3471,0xE5AC89:0x3472,0xE5AF84:0x3473,0xE5B290:0x3474,0xE5B88C:0x3475,\n0xE5B9BE:0x3476,0xE5BF8C:0x3477,0xE68FAE:0x3478,0xE69CBA:0x3479,0xE69797:0x347A,\n0xE697A2:0x347B,0xE69C9F:0x347C,0xE6A38B:0x347D,0xE6A384:0x347E,0xE6A99F:0x3521,\n0xE5B8B0:0x3522,0xE6AF85:0x3523,0xE6B097:0x3524,0xE6B1BD:0x3525,0xE795BF:0x3526,\n0xE7A588:0x3527,0xE5ADA3:0x3528,0xE7A880:0x3529,0xE7B480:0x352A,0xE5BEBD:0x352B,\n0xE8A68F:0x352C,0xE8A898:0x352D,0xE8B2B4:0x352E,0xE8B5B7:0x352F,0xE8BB8C:0x3530,\n0xE8BC9D:0x3531,0xE9A3A2:0x3532,0xE9A88E:0x3533,0xE9ACBC:0x3534,0xE4BA80:0x3535,\n0xE581BD:0x3536,0xE58480:0x3537,0xE5A693:0x3538,0xE5AE9C:0x3539,0xE688AF:0x353A,\n0xE68A80:0x353B,0xE693AC:0x353C,0xE6ACBA:0x353D,0xE78AA0:0x353E,0xE79691:0x353F,\n0xE7A587:0x3540,0xE7BEA9:0x3541,0xE89FBB:0x3542,0xE8AABC:0x3543,0xE8ADB0:0x3544,\n0xE68EAC:0x3545,0xE88F8A:0x3546,0xE99EA0:0x3547,0xE59089:0x3548,0xE59083:0x3549,\n0xE596AB:0x354A,0xE6A194:0x354B,0xE6A998:0x354C,0xE8A9B0:0x354D,0xE7A0A7:0x354E,\n0xE69DB5:0x354F,0xE9BB8D:0x3550,0xE58DB4:0x3551,0xE5AEA2:0x3552,0xE8849A:0x3553,\n0xE89990:0x3554,0xE98086:0x3555,0xE4B898:0x3556,0xE4B985:0x3557,0xE4BB87:0x3558,\n0xE4BC91:0x3559,0xE58F8A:0x355A,0xE590B8:0x355B,0xE5AEAE:0x355C,0xE5BC93:0x355D,\n0xE680A5:0x355E,0xE69591:0x355F,0xE69CBD:0x3560,0xE6B182:0x3561,0xE6B1B2:0x3562,\n0xE6B3A3:0x3563,0xE781B8:0x3564,0xE79083:0x3565,0xE7A9B6:0x3566,0xE7AAAE:0x3567,\n0xE7AC88:0x3568,0xE7B49A:0x3569,0xE7B3BE:0x356A,0xE7B5A6:0x356B,0xE697A7:0x356C,\n0xE7899B:0x356D,0xE58EBB:0x356E,0xE5B185:0x356F,0xE5B7A8:0x3570,0xE68B92:0x3571,\n0xE68BA0:0x3572,0xE68C99:0x3573,0xE6B8A0:0x3574,0xE8999A:0x3575,0xE8A8B1:0x3576,\n0xE8B79D:0x3577,0xE98BB8:0x3578,0xE6BC81:0x3579,0xE7A6A6:0x357A,0xE9AD9A:0x357B,\n0xE4BAA8:0x357C,0xE4BAAB:0x357D,0xE4BAAC:0x357E,0xE4BE9B:0x3621,0xE4BEA0:0x3622,\n0xE58391:0x3623,0xE58587:0x3624,0xE7ABB6:0x3625,0xE585B1:0x3626,0xE587B6:0x3627,\n0xE58D94:0x3628,0xE58CA1:0x3629,0xE58DBF:0x362A,0xE58FAB:0x362B,0xE596AC:0x362C,\n0xE5A283:0x362D,0xE5B3A1:0x362E,0xE5BCB7:0x362F,0xE5BD8A:0x3630,0xE680AF:0x3631,\n0xE68190:0x3632,0xE681AD:0x3633,0xE68C9F:0x3634,0xE69599:0x3635,0xE6A98B:0x3636,\n0xE6B381:0x3637,0xE78B82:0x3638,0xE78BAD:0x3639,0xE79FAF:0x363A,0xE883B8:0x363B,\n0xE88485:0x363C,0xE88888:0x363D,0xE8958E:0x363E,0xE983B7:0x363F,0xE98FA1:0x3640,\n0xE99FBF:0x3641,0xE9A597:0x3642,0xE9A99A:0x3643,0xE4BBB0:0x3644,0xE5879D:0x3645,\n0xE5B0AD:0x3646,0xE69A81:0x3647,0xE6A5AD:0x3648,0xE5B180:0x3649,0xE69BB2:0x364A,\n0xE6A5B5:0x364B,0xE78E89:0x364C,0xE6A190:0x364D,0xE7B281:0x364E,0xE58385:0x364F,\n0xE58BA4:0x3650,0xE59D87:0x3651,0xE5B7BE:0x3652,0xE98CA6:0x3653,0xE696A4:0x3654,\n0xE6ACA3:0x3655,0xE6ACBD:0x3656,0xE790B4:0x3657,0xE7A681:0x3658,0xE7A6BD:0x3659,\n0xE7AD8B:0x365A,0xE7B78A:0x365B,0xE88AB9:0x365C,0xE88F8C:0x365D,0xE8A1BF:0x365E,\n0xE8A59F:0x365F,0xE8ACB9:0x3660,0xE8BF91:0x3661,0xE98791:0x3662,0xE5909F:0x3663,\n0xE98A80:0x3664,0xE4B99D:0x3665,0xE580B6:0x3666,0xE58FA5:0x3667,0xE58CBA:0x3668,\n0xE78B97:0x3669,0xE78E96:0x366A,0xE79FA9:0x366B,0xE88BA6:0x366C,0xE8BAAF:0x366D,\n0xE9A786:0x366E,0xE9A788:0x366F,0xE9A792:0x3670,0xE585B7:0x3671,0xE6849A:0x3672,\n0xE8999E:0x3673,0xE596B0:0x3674,0xE7A9BA:0x3675,0xE581B6:0x3676,0xE5AF93:0x3677,\n0xE98187:0x3678,0xE99A85:0x3679,0xE4B8B2:0x367A,0xE6AB9B:0x367B,0xE987A7:0x367C,\n0xE5B191:0x367D,0xE5B188:0x367E,0xE68E98:0x3721,0xE7AA9F:0x3722,0xE6B293:0x3723,\n0xE99DB4:0x3724,0xE8BDA1:0x3725,0xE7AAAA:0x3726,0xE7868A:0x3727,0xE99A88:0x3728,\n0xE7B282:0x3729,0xE6A097:0x372A,0xE7B9B0:0x372B,0xE6A191:0x372C,0xE98DAC:0x372D,\n0xE58BB2:0x372E,0xE5909B:0x372F,0xE896AB:0x3730,0xE8A893:0x3731,0xE7BEA4:0x3732,\n0xE8BB8D:0x3733,0xE983A1:0x3734,0xE58DA6:0x3735,0xE8A288:0x3736,0xE7A581:0x3737,\n0xE4BF82:0x3738,0xE582BE:0x3739,0xE58891:0x373A,0xE58584:0x373B,0xE59593:0x373C,\n0xE59CAD:0x373D,0xE78FAA:0x373E,0xE59E8B:0x373F,0xE5A591:0x3740,0xE5BDA2:0x3741,\n0xE5BE84:0x3742,0xE681B5:0x3743,0xE685B6:0x3744,0xE685A7:0x3745,0xE686A9:0x3746,\n0xE68EB2:0x3747,0xE690BA:0x3748,0xE695AC:0x3749,0xE699AF:0x374A,0xE6A182:0x374B,\n0xE6B893:0x374C,0xE795A6:0x374D,0xE7A8BD:0x374E,0xE7B3BB:0x374F,0xE7B58C:0x3750,\n0xE7B699:0x3751,0xE7B98B:0x3752,0xE7BDAB:0x3753,0xE88C8E:0x3754,0xE88D8A:0x3755,\n0xE89B8D:0x3756,0xE8A888:0x3757,0xE8A9A3:0x3758,0xE8ADA6:0x3759,0xE8BBBD:0x375A,\n0xE9A09A:0x375B,0xE9B68F:0x375C,0xE88AB8:0x375D,0xE8BF8E:0x375E,0xE9AFA8:0x375F,\n0xE58A87:0x3760,0xE6889F:0x3761,0xE69283:0x3762,0xE6BF80:0x3763,0xE99A99:0x3764,\n0xE6A181:0x3765,0xE58291:0x3766,0xE6ACA0:0x3767,0xE6B1BA:0x3768,0xE6BD94:0x3769,\n0xE7A9B4:0x376A,0xE7B590:0x376B,0xE8A180:0x376C,0xE8A8A3:0x376D,0xE69C88:0x376E,\n0xE4BBB6:0x376F,0xE580B9:0x3770,0xE580A6:0x3771,0xE581A5:0x3772,0xE585BC:0x3773,\n0xE588B8:0x3774,0xE589A3:0x3775,0xE596A7:0x3776,0xE59C8F:0x3777,0xE5A085:0x3778,\n0xE5AB8C:0x3779,0xE5BBBA:0x377A,0xE686B2:0x377B,0xE687B8:0x377C,0xE68BB3:0x377D,\n0xE68DB2:0x377E,0xE6A49C:0x3821,0xE6A8A9:0x3822,0xE789BD:0x3823,0xE78AAC:0x3824,\n0xE78CAE:0x3825,0xE7A094:0x3826,0xE7A1AF:0x3827,0xE7B5B9:0x3828,0xE79C8C:0x3829,\n0xE882A9:0x382A,0xE8A68B:0x382B,0xE8AC99:0x382C,0xE8B3A2:0x382D,0xE8BB92:0x382E,\n0xE981A3:0x382F,0xE98DB5:0x3830,0xE999BA:0x3831,0xE9A195:0x3832,0xE9A893:0x3833,\n0xE9B9B8:0x3834,0xE58583:0x3835,0xE58E9F:0x3836,0xE58EB3:0x3837,0xE5B9BB:0x3838,\n0xE5BCA6:0x3839,0xE6B89B:0x383A,0xE6BA90:0x383B,0xE78E84:0x383C,0xE78FBE:0x383D,\n0xE7B583:0x383E,0xE888B7:0x383F,0xE8A880:0x3840,0xE8ABBA:0x3841,0xE99990:0x3842,\n0xE4B98E:0x3843,0xE5808B:0x3844,0xE58FA4:0x3845,0xE591BC:0x3846,0xE59BBA:0x3847,\n0xE5A791:0x3848,0xE5ADA4:0x3849,0xE5B7B1:0x384A,0xE5BAAB:0x384B,0xE5BCA7:0x384C,\n0xE688B8:0x384D,0xE69585:0x384E,0xE69EAF:0x384F,0xE6B996:0x3850,0xE78B90:0x3851,\n0xE7B38A:0x3852,0xE8A2B4:0x3853,0xE882A1:0x3854,0xE883A1:0x3855,0xE88FB0:0x3856,\n0xE8998E:0x3857,0xE8AA87:0x3858,0xE8B7A8:0x3859,0xE988B7:0x385A,0xE99B87:0x385B,\n0xE9A1A7:0x385C,0xE9BC93:0x385D,0xE4BA94:0x385E,0xE4BA92:0x385F,0xE4BC8D:0x3860,\n0xE58D88:0x3861,0xE59189:0x3862,0xE590BE:0x3863,0xE5A8AF:0x3864,0xE5BE8C:0x3865,\n0xE5BEA1:0x3866,0xE6829F:0x3867,0xE6A2A7:0x3868,0xE6AA8E:0x3869,0xE7919A:0x386A,\n0xE7A281:0x386B,0xE8AA9E:0x386C,0xE8AAA4:0x386D,0xE8ADB7:0x386E,0xE98690:0x386F,\n0xE4B99E:0x3870,0xE9AF89:0x3871,0xE4BAA4:0x3872,0xE4BDBC:0x3873,0xE4BEAF:0x3874,\n0xE58099:0x3875,0xE58096:0x3876,0xE58589:0x3877,0xE585AC:0x3878,0xE58A9F:0x3879,\n0xE58AB9:0x387A,0xE58BBE:0x387B,0xE58E9A:0x387C,0xE58FA3:0x387D,0xE59091:0x387E,\n0xE5908E:0x3921,0xE59689:0x3922,0xE59D91:0x3923,0xE59EA2:0x3924,0xE5A5BD:0x3925,\n0xE5AD94:0x3926,0xE5AD9D:0x3927,0xE5AE8F:0x3928,0xE5B7A5:0x3929,0xE5B7A7:0x392A,\n0xE5B7B7:0x392B,0xE5B9B8:0x392C,0xE5BA83:0x392D,0xE5BA9A:0x392E,0xE5BAB7:0x392F,\n0xE5BC98:0x3930,0xE68192:0x3931,0xE6858C:0x3932,0xE68A97:0x3933,0xE68B98:0x3934,\n0xE68EA7:0x3935,0xE694BB:0x3936,0xE69882:0x3937,0xE69983:0x3938,0xE69BB4:0x3939,\n0xE69DAD:0x393A,0xE6A0A1:0x393B,0xE6A297:0x393C,0xE6A78B:0x393D,0xE6B19F:0x393E,\n0xE6B4AA:0x393F,0xE6B5A9:0x3940,0xE6B8AF:0x3941,0xE6BA9D:0x3942,0xE794B2:0x3943,\n0xE79A87:0x3944,0xE7A1AC:0x3945,0xE7A8BF:0x3946,0xE7B3A0:0x3947,0xE7B485:0x3948,\n0xE7B498:0x3949,0xE7B59E:0x394A,0xE7B6B1:0x394B,0xE88095:0x394C,0xE88083:0x394D,\n0xE882AF:0x394E,0xE882B1:0x394F,0xE88594:0x3950,0xE8868F:0x3951,0xE888AA:0x3952,\n0xE88D92:0x3953,0xE8A18C:0x3954,0xE8A1A1:0x3955,0xE8AC9B:0x3956,0xE8B2A2:0x3957,\n0xE8B3BC:0x3958,0xE9838A:0x3959,0xE985B5:0x395A,0xE989B1:0x395B,0xE7A0BF:0x395C,\n0xE98BBC:0x395D,0xE996A4:0x395E,0xE9998D:0x395F,0xE9A085:0x3960,0xE9A699:0x3961,\n0xE9AB98:0x3962,0xE9B4BB:0x3963,0xE5899B:0x3964,0xE58AAB:0x3965,0xE58FB7:0x3966,\n0xE59088:0x3967,0xE5A395:0x3968,0xE68BB7:0x3969,0xE6BFA0:0x396A,0xE8B1AA:0x396B,\n0xE8BD9F:0x396C,0xE9BAB9:0x396D,0xE5858B:0x396E,0xE588BB:0x396F,0xE5918A:0x3970,\n0xE59BBD:0x3971,0xE7A980:0x3972,0xE985B7:0x3973,0xE9B5A0:0x3974,0xE9BB92:0x3975,\n0xE78D84:0x3976,0xE6BC89:0x3977,0xE885B0:0x3978,0xE79491:0x3979,0xE5BFBD:0x397A,\n0xE6839A:0x397B,0xE9AAA8:0x397C,0xE78B9B:0x397D,0xE8BEBC:0x397E,0xE6ADA4:0x3A21,\n0xE9A083:0x3A22,0xE4BB8A:0x3A23,0xE59BB0:0x3A24,0xE59DA4:0x3A25,0xE5A2BE:0x3A26,\n0xE5A99A:0x3A27,0xE681A8:0x3A28,0xE68787:0x3A29,0xE6988F:0x3A2A,0xE69886:0x3A2B,\n0xE6A0B9:0x3A2C,0xE6A2B1:0x3A2D,0xE6B7B7:0x3A2E,0xE79795:0x3A2F,0xE7B4BA:0x3A30,\n0xE889AE:0x3A31,0xE9AD82:0x3A32,0xE4BA9B:0x3A33,0xE4BD90:0x3A34,0xE58F89:0x3A35,\n0xE59486:0x3A36,0xE5B5AF:0x3A37,0xE5B7A6:0x3A38,0xE5B7AE:0x3A39,0xE69FBB:0x3A3A,\n0xE6B299:0x3A3B,0xE791B3:0x3A3C,0xE7A082:0x3A3D,0xE8A990:0x3A3E,0xE98E96:0x3A3F,\n0xE8A39F:0x3A40,0xE59D90:0x3A41,0xE5BAA7:0x3A42,0xE68CAB:0x3A43,0xE582B5:0x3A44,\n0xE582AC:0x3A45,0xE5868D:0x3A46,0xE69C80:0x3A47,0xE59389:0x3A48,0xE5A19E:0x3A49,\n0xE5A6BB:0x3A4A,0xE5AEB0:0x3A4B,0xE5BDA9:0x3A4C,0xE6898D:0x3A4D,0xE68EA1:0x3A4E,\n0xE6A0BD:0x3A4F,0xE6ADB3:0x3A50,0xE6B888:0x3A51,0xE781BD:0x3A52,0xE98787:0x3A53,\n0xE78A80:0x3A54,0xE7A095:0x3A55,0xE7A0A6:0x3A56,0xE7A5AD:0x3A57,0xE6968E:0x3A58,\n0xE7B4B0:0x3A59,0xE88F9C:0x3A5A,0xE8A381:0x3A5B,0xE8BC89:0x3A5C,0xE99A9B:0x3A5D,\n0xE589A4:0x3A5E,0xE59CA8:0x3A5F,0xE69D90:0x3A60,0xE7BDAA:0x3A61,0xE8B2A1:0x3A62,\n0xE586B4:0x3A63,0xE59D82:0x3A64,0xE998AA:0x3A65,0xE5A0BA:0x3A66,0xE6A68A:0x3A67,\n0xE882B4:0x3A68,0xE592B2:0x3A69,0xE5B48E:0x3A6A,0xE59FBC:0x3A6B,0xE7A295:0x3A6C,\n0xE9B7BA:0x3A6D,0xE4BD9C:0x3A6E,0xE5898A:0x3A6F,0xE5928B:0x3A70,0xE690BE:0x3A71,\n0xE698A8:0x3A72,0xE69C94:0x3A73,0xE69FB5:0x3A74,0xE7AA84:0x3A75,0xE7AD96:0x3A76,\n0xE7B4A2:0x3A77,0xE98CAF:0x3A78,0xE6A19C:0x3A79,0xE9AEAD:0x3A7A,0xE7ACB9:0x3A7B,\n0xE58C99:0x3A7C,0xE5868A:0x3A7D,0xE588B7:0x3A7E,0xE5AF9F:0x3B21,0xE68BB6:0x3B22,\n0xE692AE:0x3B23,0xE693A6:0x3B24,0xE69CAD:0x3B25,0xE6AEBA:0x3B26,0xE896A9:0x3B27,\n0xE99B91:0x3B28,0xE79A90:0x3B29,0xE9AF96:0x3B2A,0xE68D8C:0x3B2B,0xE98C86:0x3B2C,\n0xE9AEAB:0x3B2D,0xE79ABF:0x3B2E,0xE69992:0x3B2F,0xE4B889:0x3B30,0xE58298:0x3B31,\n0xE58F82:0x3B32,0xE5B1B1:0x3B33,0xE683A8:0x3B34,0xE69292:0x3B35,0xE695A3:0x3B36,\n0xE6A19F:0x3B37,0xE787A6:0x3B38,0xE78F8A:0x3B39,0xE794A3:0x3B3A,0xE7AE97:0x3B3B,\n0xE7BA82:0x3B3C,0xE89A95:0x3B3D,0xE8AE83:0x3B3E,0xE8B39B:0x3B3F,0xE985B8:0x3B40,\n0xE9A490:0x3B41,0xE696AC:0x3B42,0xE69AAB:0x3B43,0xE6AE8B:0x3B44,0xE4BB95:0x3B45,\n0xE4BB94:0x3B46,0xE4BCBA:0x3B47,0xE4BDBF:0x3B48,0xE588BA:0x3B49,0xE58FB8:0x3B4A,\n0xE58FB2:0x3B4B,0xE597A3:0x3B4C,0xE59B9B:0x3B4D,0xE5A3AB:0x3B4E,0xE5A78B:0x3B4F,\n0xE5A789:0x3B50,0xE5A7BF:0x3B51,0xE5AD90:0x3B52,0xE5B18D:0x3B53,0xE5B882:0x3B54,\n0xE5B8AB:0x3B55,0xE5BF97:0x3B56,0xE6809D:0x3B57,0xE68C87:0x3B58,0xE694AF:0x3B59,\n0xE5AD9C:0x3B5A,0xE696AF:0x3B5B,0xE696BD:0x3B5C,0xE697A8:0x3B5D,0xE69E9D:0x3B5E,\n0xE6ADA2:0x3B5F,0xE6ADBB:0x3B60,0xE6B08F:0x3B61,0xE78D85:0x3B62,0xE7A589:0x3B63,\n0xE7A781:0x3B64,0xE7B3B8:0x3B65,0xE7B499:0x3B66,0xE7B4AB:0x3B67,0xE882A2:0x3B68,\n0xE88482:0x3B69,0xE887B3:0x3B6A,0xE8A696:0x3B6B,0xE8A99E:0x3B6C,0xE8A9A9:0x3B6D,\n0xE8A9A6:0x3B6E,0xE8AA8C:0x3B6F,0xE8ABAE:0x3B70,0xE8B387:0x3B71,0xE8B39C:0x3B72,\n0xE99B8C:0x3B73,0xE9A3BC:0x3B74,0xE6ADAF:0x3B75,0xE4BA8B:0x3B76,0xE4BCBC:0x3B77,\n0xE4BE8D:0x3B78,0xE58590:0x3B79,0xE5AD97:0x3B7A,0xE5AFBA:0x3B7B,0xE68588:0x3B7C,\n0xE68C81:0x3B7D,0xE69982:0x3B7E,0xE6ACA1:0x3C21,0xE6BB8B:0x3C22,0xE6B2BB:0x3C23,\n0xE788BE:0x3C24,0xE792BD:0x3C25,0xE79794:0x3C26,0xE7A381:0x3C27,0xE7A4BA:0x3C28,\n0xE8808C:0x3C29,0xE880B3:0x3C2A,0xE887AA:0x3C2B,0xE89294:0x3C2C,0xE8BE9E:0x3C2D,\n0xE6B190:0x3C2E,0xE9B9BF:0x3C2F,0xE5BC8F:0x3C30,0xE8AD98:0x3C31,0xE9B4AB:0x3C32,\n0xE7ABBA:0x3C33,0xE8BBB8:0x3C34,0xE5AE8D:0x3C35,0xE99BAB:0x3C36,0xE4B883:0x3C37,\n0xE58FB1:0x3C38,0xE59FB7:0x3C39,0xE5A4B1:0x3C3A,0xE5AB89:0x3C3B,0xE5AEA4:0x3C3C,\n0xE68289:0x3C3D,0xE6B9BF:0x3C3E,0xE6BC86:0x3C3F,0xE796BE:0x3C40,0xE8B3AA:0x3C41,\n0xE5AE9F:0x3C42,0xE89480:0x3C43,0xE7AFA0:0x3C44,0xE581B2:0x3C45,0xE69FB4:0x3C46,\n0xE88A9D:0x3C47,0xE5B1A1:0x3C48,0xE8958A:0x3C49,0xE7B89E:0x3C4A,0xE8888E:0x3C4B,\n0xE58699:0x3C4C,0xE5B084:0x3C4D,0xE68DA8:0x3C4E,0xE8B5A6:0x3C4F,0xE6969C:0x3C50,\n0xE785AE:0x3C51,0xE7A4BE:0x3C52,0xE7B497:0x3C53,0xE88085:0x3C54,0xE8AC9D:0x3C55,\n0xE8BB8A:0x3C56,0xE981AE:0x3C57,0xE89B87:0x3C58,0xE982AA:0x3C59,0xE5809F:0x3C5A,\n0xE58BBA:0x3C5B,0xE5B0BA:0x3C5C,0xE69D93:0x3C5D,0xE781BC:0x3C5E,0xE788B5:0x3C5F,\n0xE9858C:0x3C60,0xE98788:0x3C61,0xE98CAB:0x3C62,0xE88BA5:0x3C63,0xE5AF82:0x3C64,\n0xE5BCB1:0x3C65,0xE683B9:0x3C66,0xE4B8BB:0x3C67,0xE58F96:0x3C68,0xE5AE88:0x3C69,\n0xE6898B:0x3C6A,0xE69CB1:0x3C6B,0xE6AE8A:0x3C6C,0xE78BA9:0x3C6D,0xE78FA0:0x3C6E,\n0xE7A8AE:0x3C6F,0xE885AB:0x3C70,0xE8B6A3:0x3C71,0xE98592:0x3C72,0xE9A696:0x3C73,\n0xE58492:0x3C74,0xE58F97:0x3C75,0xE591AA:0x3C76,0xE5AFBF:0x3C77,0xE68E88:0x3C78,\n0xE6A8B9:0x3C79,0xE7B6AC:0x3C7A,0xE99C80:0x3C7B,0xE59B9A:0x3C7C,0xE58F8E:0x3C7D,\n0xE591A8:0x3C7E,0xE5AE97:0x3D21,0xE5B0B1:0x3D22,0xE5B79E:0x3D23,0xE4BFAE:0x3D24,\n0xE68481:0x3D25,0xE68BBE:0x3D26,0xE6B4B2:0x3D27,0xE7A780:0x3D28,0xE7A78B:0x3D29,\n0xE7B582:0x3D2A,0xE7B98D:0x3D2B,0xE7BF92:0x3D2C,0xE887AD:0x3D2D,0xE8889F:0x3D2E,\n0xE89290:0x3D2F,0xE8A186:0x3D30,0xE8A5B2:0x3D31,0xE8AE90:0x3D32,0xE8B9B4:0x3D33,\n0xE8BCAF:0x3D34,0xE980B1:0x3D35,0xE9858B:0x3D36,0xE985AC:0x3D37,0xE99B86:0x3D38,\n0xE9869C:0x3D39,0xE4BB80:0x3D3A,0xE4BD8F:0x3D3B,0xE58585:0x3D3C,0xE58D81:0x3D3D,\n0xE5BE93:0x3D3E,0xE6888E:0x3D3F,0xE69F94:0x3D40,0xE6B181:0x3D41,0xE6B88B:0x3D42,\n0xE78DA3:0x3D43,0xE7B8A6:0x3D44,0xE9878D:0x3D45,0xE98A83:0x3D46,0xE58F94:0x3D47,\n0xE5A499:0x3D48,0xE5AEBF:0x3D49,0xE6B791:0x3D4A,0xE7A59D:0x3D4B,0xE7B8AE:0x3D4C,\n0xE7B29B:0x3D4D,0xE5A1BE:0x3D4E,0xE7869F:0x3D4F,0xE587BA:0x3D50,0xE8A193:0x3D51,\n0xE8BFB0:0x3D52,0xE4BF8A:0x3D53,0xE5B3BB:0x3D54,0xE698A5:0x3D55,0xE79EAC:0x3D56,\n0xE7ABA3:0x3D57,0xE8889C:0x3D58,0xE9A7BF:0x3D59,0xE58786:0x3D5A,0xE5BEAA:0x3D5B,\n0xE697AC:0x3D5C,0xE6A5AF:0x3D5D,0xE6AE89:0x3D5E,0xE6B7B3:0x3D5F,0xE6BA96:0x3D60,\n0xE6BDA4:0x3D61,0xE79BBE:0x3D62,0xE7B494:0x3D63,0xE5B7A1:0x3D64,0xE981B5:0x3D65,\n0xE98687:0x3D66,0xE9A086:0x3D67,0xE587A6:0x3D68,0xE5889D:0x3D69,0xE68980:0x3D6A,\n0xE69A91:0x3D6B,0xE69B99:0x3D6C,0xE6B89A:0x3D6D,0xE5BAB6:0x3D6E,0xE7B792:0x3D6F,\n0xE7BDB2:0x3D70,0xE69BB8:0x3D71,0xE896AF:0x3D72,0xE897B7:0x3D73,0xE8ABB8:0x3D74,\n0xE58AA9:0x3D75,0xE58F99:0x3D76,0xE5A5B3:0x3D77,0xE5BA8F:0x3D78,0xE5BE90:0x3D79,\n0xE68195:0x3D7A,0xE98BA4:0x3D7B,0xE999A4:0x3D7C,0xE582B7:0x3D7D,0xE5849F:0x3D7E,\n0xE58B9D:0x3E21,0xE58CA0:0x3E22,0xE58D87:0x3E23,0xE58FAC:0x3E24,0xE593A8:0x3E25,\n0xE59586:0x3E26,0xE594B1:0x3E27,0xE59897:0x3E28,0xE5A5A8:0x3E29,0xE5A6BE:0x3E2A,\n0xE5A8BC:0x3E2B,0xE5AEB5:0x3E2C,0xE5B086:0x3E2D,0xE5B08F:0x3E2E,0xE5B091:0x3E2F,\n0xE5B09A:0x3E30,0xE5BA84:0x3E31,0xE5BA8A:0x3E32,0xE5BBA0:0x3E33,0xE5BDB0:0x3E34,\n0xE689BF:0x3E35,0xE68A84:0x3E36,0xE68B9B:0x3E37,0xE68E8C:0x3E38,0xE68DB7:0x3E39,\n0xE69887:0x3E3A,0xE6988C:0x3E3B,0xE698AD:0x3E3C,0xE699B6:0x3E3D,0xE69DBE:0x3E3E,\n0xE6A2A2:0x3E3F,0xE6A89F:0x3E40,0xE6A8B5:0x3E41,0xE6B2BC:0x3E42,0xE6B688:0x3E43,\n0xE6B889:0x3E44,0xE6B998:0x3E45,0xE784BC:0x3E46,0xE784A6:0x3E47,0xE785A7:0x3E48,\n0xE79787:0x3E49,0xE79C81:0x3E4A,0xE7A19D:0x3E4B,0xE7A481:0x3E4C,0xE7A5A5:0x3E4D,\n0xE7A7B0:0x3E4E,0xE7ABA0:0x3E4F,0xE7AC91:0x3E50,0xE7B2A7:0x3E51,0xE7B4B9:0x3E52,\n0xE88296:0x3E53,0xE88F96:0x3E54,0xE8928B:0x3E55,0xE89589:0x3E56,0xE8A19D:0x3E57,\n0xE8A3B3:0x3E58,0xE8A89F:0x3E59,0xE8A8BC:0x3E5A,0xE8A994:0x3E5B,0xE8A9B3:0x3E5C,\n0xE8B1A1:0x3E5D,0xE8B39E:0x3E5E,0xE986A4:0x3E5F,0xE989A6:0x3E60,0xE98DBE:0x3E61,\n0xE99098:0x3E62,0xE99A9C:0x3E63,0xE99E98:0x3E64,0xE4B88A:0x3E65,0xE4B888:0x3E66,\n0xE4B89E:0x3E67,0xE4B997:0x3E68,0xE58697:0x3E69,0xE589B0:0x3E6A,0xE59F8E:0x3E6B,\n0xE5A0B4:0x3E6C,0xE5A38C:0x3E6D,0xE5ACA2:0x3E6E,0xE5B8B8:0x3E6F,0xE68385:0x3E70,\n0xE693BE:0x3E71,0xE69DA1:0x3E72,0xE69D96:0x3E73,0xE6B584:0x3E74,0xE78AB6:0x3E75,\n0xE795B3:0x3E76,0xE7A9A3:0x3E77,0xE892B8:0x3E78,0xE8ADB2:0x3E79,0xE986B8:0x3E7A,\n0xE98CA0:0x3E7B,0xE598B1:0x3E7C,0xE59FB4:0x3E7D,0xE9A3BE:0x3E7E,0xE68BAD:0x3F21,\n0xE6A48D:0x3F22,0xE6AE96:0x3F23,0xE787AD:0x3F24,0xE7B994:0x3F25,0xE881B7:0x3F26,\n0xE889B2:0x3F27,0xE8A7A6:0x3F28,0xE9A39F:0x3F29,0xE89D95:0x3F2A,0xE8BEB1:0x3F2B,\n0xE5B0BB:0x3F2C,0xE4BCB8:0x3F2D,0xE4BFA1:0x3F2E,0xE4BEB5:0x3F2F,0xE59487:0x3F30,\n0xE5A8A0:0x3F31,0xE5AF9D:0x3F32,0xE5AFA9:0x3F33,0xE5BF83:0x3F34,0xE6858E:0x3F35,\n0xE68CAF:0x3F36,0xE696B0:0x3F37,0xE6998B:0x3F38,0xE6A3AE:0x3F39,0xE6A69B:0x3F3A,\n0xE6B5B8:0x3F3B,0xE6B7B1:0x3F3C,0xE794B3:0x3F3D,0xE796B9:0x3F3E,0xE79C9F:0x3F3F,\n0xE7A59E:0x3F40,0xE7A7A6:0x3F41,0xE7B4B3:0x3F42,0xE887A3:0x3F43,0xE88AAF:0x3F44,\n0xE896AA:0x3F45,0xE8A6AA:0x3F46,0xE8A8BA:0x3F47,0xE8BAAB:0x3F48,0xE8BE9B:0x3F49,\n0xE980B2:0x3F4A,0xE9879D:0x3F4B,0xE99C87:0x3F4C,0xE4BABA:0x3F4D,0xE4BB81:0x3F4E,\n0xE58883:0x3F4F,0xE5A1B5:0x3F50,0xE5A3AC:0x3F51,0xE5B08B:0x3F52,0xE7949A:0x3F53,\n0xE5B0BD:0x3F54,0xE8858E:0x3F55,0xE8A88A:0x3F56,0xE8BF85:0x3F57,0xE999A3:0x3F58,\n0xE99DAD:0x3F59,0xE7ACA5:0x3F5A,0xE8AB8F:0x3F5B,0xE9A088:0x3F5C,0xE985A2:0x3F5D,\n0xE59BB3:0x3F5E,0xE58EA8:0x3F5F,0xE98097:0x3F60,0xE590B9:0x3F61,0xE59E82:0x3F62,\n0xE5B8A5:0x3F63,0xE68EA8:0x3F64,0xE6B0B4:0x3F65,0xE7828A:0x3F66,0xE79DA1:0x3F67,\n0xE7B28B:0x3F68,0xE7BFA0:0x3F69,0xE8A1B0:0x3F6A,0xE98182:0x3F6B,0xE98594:0x3F6C,\n0xE98C90:0x3F6D,0xE98C98:0x3F6E,0xE99A8F:0x3F6F,0xE7919E:0x3F70,0xE9AB84:0x3F71,\n0xE5B487:0x3F72,0xE5B5A9:0x3F73,0xE695B0:0x3F74,0xE69EA2:0x3F75,0xE8B6A8:0x3F76,\n0xE99B9B:0x3F77,0xE68DAE:0x3F78,0xE69D89:0x3F79,0xE6A499:0x3F7A,0xE88F85:0x3F7B,\n0xE9A097:0x3F7C,0xE99B80:0x3F7D,0xE8A3BE:0x3F7E,0xE6BE84:0x4021,0xE691BA:0x4022,\n0xE5AFB8:0x4023,0xE4B896:0x4024,0xE780AC:0x4025,0xE7959D:0x4026,0xE698AF:0x4027,\n0xE58784:0x4028,0xE588B6:0x4029,0xE58BA2:0x402A,0xE5A793:0x402B,0xE5BE81:0x402C,\n0xE680A7:0x402D,0xE68890:0x402E,0xE694BF:0x402F,0xE695B4:0x4030,0xE6989F:0x4031,\n0xE699B4:0x4032,0xE6A3B2:0x4033,0xE6A096:0x4034,0xE6ADA3:0x4035,0xE6B885:0x4036,\n0xE789B2:0x4037,0xE7949F:0x4038,0xE79B9B:0x4039,0xE7B2BE:0x403A,0xE88196:0x403B,\n0xE5A3B0:0x403C,0xE8A3BD:0x403D,0xE8A5BF:0x403E,0xE8AAA0:0x403F,0xE8AA93:0x4040,\n0xE8AB8B:0x4041,0xE9809D:0x4042,0xE98692:0x4043,0xE99D92:0x4044,0xE99D99:0x4045,\n0xE69689:0x4046,0xE7A88E:0x4047,0xE88486:0x4048,0xE99ABB:0x4049,0xE5B8AD:0x404A,\n0xE6839C:0x404B,0xE6889A:0x404C,0xE696A5:0x404D,0xE69894:0x404E,0xE69E90:0x404F,\n0xE79FB3:0x4050,0xE7A98D:0x4051,0xE7B18D:0x4052,0xE7B8BE:0x4053,0xE8848A:0x4054,\n0xE8B2AC:0x4055,0xE8B5A4:0x4056,0xE8B7A1:0x4057,0xE8B99F:0x4058,0xE7A2A9:0x4059,\n0xE58887:0x405A,0xE68B99:0x405B,0xE68EA5:0x405C,0xE69182:0x405D,0xE68A98:0x405E,\n0xE8A8AD:0x405F,0xE7AA83:0x4060,0xE7AF80:0x4061,0xE8AAAC:0x4062,0xE99BAA:0x4063,\n0xE7B5B6:0x4064,0xE8888C:0x4065,0xE89D89:0x4066,0xE4BB99:0x4067,0xE58588:0x4068,\n0xE58D83:0x4069,0xE58DA0:0x406A,0xE5AEA3:0x406B,0xE5B082:0x406C,0xE5B096:0x406D,\n0xE5B79D:0x406E,0xE688A6:0x406F,0xE68987:0x4070,0xE692B0:0x4071,0xE6A093:0x4072,\n0xE6A0B4:0x4073,0xE6B389:0x4074,0xE6B585:0x4075,0xE6B497:0x4076,0xE69F93:0x4077,\n0xE6BD9C:0x4078,0xE7858E:0x4079,0xE785BD:0x407A,0xE6978B:0x407B,0xE7A9BF:0x407C,\n0xE7AEAD:0x407D,0xE7B79A:0x407E,0xE7B98A:0x4121,0xE7BEA8:0x4122,0xE885BA:0x4123,\n0xE8889B:0x4124,0xE888B9:0x4125,0xE896A6:0x4126,0xE8A9AE:0x4127,0xE8B38E:0x4128,\n0xE8B7B5:0x4129,0xE981B8:0x412A,0xE981B7:0x412B,0xE98AAD:0x412C,0xE98A91:0x412D,\n0xE99683:0x412E,0xE9AEAE:0x412F,0xE5898D:0x4130,0xE59684:0x4131,0xE6BCB8:0x4132,\n0xE784B6:0x4133,0xE585A8:0x4134,0xE7A685:0x4135,0xE7B995:0x4136,0xE886B3:0x4137,\n0xE7B38E:0x4138,0xE5998C:0x4139,0xE5A191:0x413A,0xE5B2A8:0x413B,0xE68EAA:0x413C,\n0xE69BBE:0x413D,0xE69BBD:0x413E,0xE6A59A:0x413F,0xE78B99:0x4140,0xE7968F:0x4141,\n0xE7968E:0x4142,0xE7A48E:0x4143,0xE7A596:0x4144,0xE7A79F:0x4145,0xE7B297:0x4146,\n0xE7B4A0:0x4147,0xE7B584:0x4148,0xE89887:0x4149,0xE8A8B4:0x414A,0xE998BB:0x414B,\n0xE981A1:0x414C,0xE9BCA0:0x414D,0xE583A7:0x414E,0xE589B5:0x414F,0xE58F8C:0x4150,\n0xE58FA2:0x4151,0xE58089:0x4152,0xE596AA:0x4153,0xE5A3AE:0x4154,0xE5A58F:0x4155,\n0xE788BD:0x4156,0xE5AE8B:0x4157,0xE5B1A4:0x4158,0xE58C9D:0x4159,0xE683A3:0x415A,\n0xE683B3:0x415B,0xE68D9C:0x415C,0xE68E83:0x415D,0xE68CBF:0x415E,0xE68EBB:0x415F,\n0xE6938D:0x4160,0xE697A9:0x4161,0xE69BB9:0x4162,0xE5B7A3:0x4163,0xE6A78D:0x4164,\n0xE6A7BD:0x4165,0xE6BC95:0x4166,0xE787A5:0x4167,0xE4BA89:0x4168,0xE797A9:0x4169,\n0xE79BB8:0x416A,0xE7AA93:0x416B,0xE7B39F:0x416C,0xE7B78F:0x416D,0xE7B69C:0x416E,\n0xE881A1:0x416F,0xE88D89:0x4170,0xE88D98:0x4171,0xE891AC:0x4172,0xE892BC:0x4173,\n0xE897BB:0x4174,0xE8A385:0x4175,0xE8B5B0:0x4176,0xE98081:0x4177,0xE981AD:0x4178,\n0xE98E97:0x4179,0xE99C9C:0x417A,0xE9A892:0x417B,0xE5838F:0x417C,0xE5A297:0x417D,\n0xE6868E:0x417E,0xE88793:0x4221,0xE894B5:0x4222,0xE8B488:0x4223,0xE980A0:0x4224,\n0xE4BF83:0x4225,0xE581B4:0x4226,0xE58987:0x4227,0xE58DB3:0x4228,0xE681AF:0x4229,\n0xE68D89:0x422A,0xE69D9F:0x422B,0xE6B8AC:0x422C,0xE8B6B3:0x422D,0xE9809F:0x422E,\n0xE4BF97:0x422F,0xE5B19E:0x4230,0xE8B38A:0x4231,0xE6978F:0x4232,0xE7B69A:0x4233,\n0xE58D92:0x4234,0xE8A296:0x4235,0xE585B6:0x4236,0xE68F83:0x4237,0xE5AD98:0x4238,\n0xE5ADAB:0x4239,0xE5B08A:0x423A,0xE6908D:0x423B,0xE69D91:0x423C,0xE9819C:0x423D,\n0xE4BB96:0x423E,0xE5A49A:0x423F,0xE5A4AA:0x4240,0xE6B1B0:0x4241,0xE8A991:0x4242,\n0xE594BE:0x4243,0xE5A095:0x4244,0xE5A6A5:0x4245,0xE683B0:0x4246,0xE68993:0x4247,\n0xE69F81:0x4248,0xE888B5:0x4249,0xE6A595:0x424A,0xE99980:0x424B,0xE9A784:0x424C,\n0xE9A8A8:0x424D,0xE4BD93:0x424E,0xE5A086:0x424F,0xE5AFBE:0x4250,0xE88090:0x4251,\n0xE5B2B1:0x4252,0xE5B8AF:0x4253,0xE5BE85:0x4254,0xE680A0:0x4255,0xE6858B:0x4256,\n0xE688B4:0x4257,0xE69BBF:0x4258,0xE6B3B0:0x4259,0xE6BB9E:0x425A,0xE8838E:0x425B,\n0xE885BF:0x425C,0xE88B94:0x425D,0xE8A28B:0x425E,0xE8B2B8:0x425F,0xE98080:0x4260,\n0xE980AE:0x4261,0xE99A8A:0x4262,0xE9BB9B:0x4263,0xE9AF9B:0x4264,0xE4BBA3:0x4265,\n0xE58FB0:0x4266,0xE5A4A7:0x4267,0xE7ACAC:0x4268,0xE9868D:0x4269,0xE9A18C:0x426A,\n0xE9B7B9:0x426B,0xE6BB9D:0x426C,0xE780A7:0x426D,0xE58D93:0x426E,0xE59584:0x426F,\n0xE5AE85:0x4270,0xE68998:0x4271,0xE68A9E:0x4272,0xE68B93:0x4273,0xE6B2A2:0x4274,\n0xE6BFAF:0x4275,0xE790A2:0x4276,0xE8A897:0x4277,0xE990B8:0x4278,0xE6BF81:0x4279,\n0xE8ABBE:0x427A,0xE88CB8:0x427B,0xE587A7:0x427C,0xE89BB8:0x427D,0xE58FAA:0x427E,\n0xE58FA9:0x4321,0xE4BD86:0x4322,0xE98194:0x4323,0xE8BEB0:0x4324,0xE5A5AA:0x4325,\n0xE884B1:0x4326,0xE5B7BD:0x4327,0xE7ABAA:0x4328,0xE8BEBF:0x4329,0xE6A39A:0x432A,\n0xE8B0B7:0x432B,0xE78BB8:0x432C,0xE9B188:0x432D,0xE6A8BD:0x432E,0xE8AAB0:0x432F,\n0xE4B8B9:0x4330,0xE58D98:0x4331,0xE59886:0x4332,0xE59DA6:0x4333,0xE68B85:0x4334,\n0xE68EA2:0x4335,0xE697A6:0x4336,0xE6AD8E:0x4337,0xE6B7A1:0x4338,0xE6B99B:0x4339,\n0xE782AD:0x433A,0xE79FAD:0x433B,0xE7ABAF:0x433C,0xE7AEAA:0x433D,0xE7B6BB:0x433E,\n0xE880BD:0x433F,0xE88386:0x4340,0xE89B8B:0x4341,0xE8AA95:0x4342,0xE98D9B:0x4343,\n0xE59BA3:0x4344,0xE5A387:0x4345,0xE5BCBE:0x4346,0xE696AD:0x4347,0xE69A96:0x4348,\n0xE6AA80:0x4349,0xE6AEB5:0x434A,0xE794B7:0x434B,0xE8AB87:0x434C,0xE580A4:0x434D,\n0xE79FA5:0x434E,0xE59CB0:0x434F,0xE5BC9B:0x4350,0xE681A5:0x4351,0xE699BA:0x4352,\n0xE6B1A0:0x4353,0xE797B4:0x4354,0xE7A89A:0x4355,0xE7BDAE:0x4356,0xE887B4:0x4357,\n0xE89C98:0x4358,0xE98185:0x4359,0xE9A6B3:0x435A,0xE7AF89:0x435B,0xE7959C:0x435C,\n0xE7ABB9:0x435D,0xE7AD91:0x435E,0xE89384:0x435F,0xE98090:0x4360,0xE7A7A9:0x4361,\n0xE7AA92:0x4362,0xE88CB6:0x4363,0xE5ABA1:0x4364,0xE79D80:0x4365,0xE4B8AD:0x4366,\n0xE4BBB2:0x4367,0xE5AE99:0x4368,0xE5BFA0:0x4369,0xE68ABD:0x436A,0xE698BC:0x436B,\n0xE69FB1:0x436C,0xE6B3A8:0x436D,0xE899AB:0x436E,0xE8A1B7:0x436F,0xE8A8BB:0x4370,\n0xE9858E:0x4371,0xE98BB3:0x4372,0xE9A790:0x4373,0xE6A897:0x4374,0xE780A6:0x4375,\n0xE78CAA:0x4376,0xE88BA7:0x4377,0xE89197:0x4378,0xE8B2AF:0x4379,0xE4B881:0x437A,\n0xE58586:0x437B,0xE5878B:0x437C,0xE5968B:0x437D,0xE5AFB5:0x437E,0xE5B896:0x4421,\n0xE5B8B3:0x4422,0xE5BA81:0x4423,0xE5BC94:0x4424,0xE5BCB5:0x4425,0xE5BDAB:0x4426,\n0xE5BEB4:0x4427,0xE687B2:0x4428,0xE68C91:0x4429,0xE69AA2:0x442A,0xE69C9D:0x442B,\n0xE6BDAE:0x442C,0xE78992:0x442D,0xE794BA:0x442E,0xE79CBA:0x442F,0xE881B4:0x4430,\n0xE884B9:0x4431,0xE885B8:0x4432,0xE89DB6:0x4433,0xE8AABF:0x4434,0xE8AB9C:0x4435,\n0xE8B685:0x4436,0xE8B7B3:0x4437,0xE98A9A:0x4438,0xE995B7:0x4439,0xE9A082:0x443A,\n0xE9B3A5:0x443B,0xE58B85:0x443C,0xE68D97:0x443D,0xE79BB4:0x443E,0xE69C95:0x443F,\n0xE6B288:0x4440,0xE78F8D:0x4441,0xE8B383:0x4442,0xE98EAE:0x4443,0xE999B3:0x4444,\n0xE6B4A5:0x4445,0xE5A29C:0x4446,0xE6A48E:0x4447,0xE6A78C:0x4448,0xE8BFBD:0x4449,\n0xE98E9A:0x444A,0xE7979B:0x444B,0xE9809A:0x444C,0xE5A19A:0x444D,0xE6A082:0x444E,\n0xE68EB4:0x444F,0xE6A7BB:0x4450,0xE4BD83:0x4451,0xE6BCAC:0x4452,0xE69F98:0x4453,\n0xE8BEBB:0x4454,0xE894A6:0x4455,0xE7B6B4:0x4456,0xE98D94:0x4457,0xE6A4BF:0x4458,\n0xE6BDB0:0x4459,0xE59DAA:0x445A,0xE5A3B7:0x445B,0xE5ACAC:0x445C,0xE7B4AC:0x445D,\n0xE788AA:0x445E,0xE5908A:0x445F,0xE987A3:0x4460,0xE9B6B4:0x4461,0xE4BAAD:0x4462,\n0xE4BD8E:0x4463,0xE5819C:0x4464,0xE581B5:0x4465,0xE58983:0x4466,0xE8B29E:0x4467,\n0xE59188:0x4468,0xE5A0A4:0x4469,0xE5AE9A:0x446A,0xE5B89D:0x446B,0xE5BA95:0x446C,\n0xE5BAAD:0x446D,0xE5BBB7:0x446E,0xE5BC9F:0x446F,0xE6828C:0x4470,0xE68AB5:0x4471,\n0xE68CBA:0x4472,0xE68F90:0x4473,0xE6A2AF:0x4474,0xE6B180:0x4475,0xE7A287:0x4476,\n0xE7A68E:0x4477,0xE7A88B:0x4478,0xE7B7A0:0x4479,0xE88987:0x447A,0xE8A882:0x447B,\n0xE8ABA6:0x447C,0xE8B984:0x447D,0xE98093:0x447E,0xE982B8:0x4521,0xE984AD:0x4522,\n0xE98798:0x4523,0xE9BC8E:0x4524,0xE6B3A5:0x4525,0xE69198:0x4526,0xE693A2:0x4527,\n0xE695B5:0x4528,0xE6BBB4:0x4529,0xE79A84:0x452A,0xE7AC9B:0x452B,0xE981A9:0x452C,\n0xE98F91:0x452D,0xE6BABA:0x452E,0xE593B2:0x452F,0xE5BEB9:0x4530,0xE692A4:0x4531,\n0xE8BD8D:0x4532,0xE8BFAD:0x4533,0xE98984:0x4534,0xE585B8:0x4535,0xE5A1AB:0x4536,\n0xE5A4A9:0x4537,0xE5B195:0x4538,0xE5BA97:0x4539,0xE6B7BB:0x453A,0xE7BA8F:0x453B,\n0xE7949C:0x453C,0xE8B2BC:0x453D,0xE8BBA2:0x453E,0xE9A19B:0x453F,0xE782B9:0x4540,\n0xE4BC9D:0x4541,0xE6AEBF:0x4542,0xE6BEB1:0x4543,0xE794B0:0x4544,0xE99BBB:0x4545,\n0xE5858E:0x4546,0xE59090:0x4547,0xE5A0B5:0x4548,0xE5A197:0x4549,0xE5A6AC:0x454A,\n0xE5B1A0:0x454B,0xE5BE92:0x454C,0xE69697:0x454D,0xE69D9C:0x454E,0xE6B8A1:0x454F,\n0xE799BB:0x4550,0xE88F9F:0x4551,0xE8B3AD:0x4552,0xE98094:0x4553,0xE983BD:0x4554,\n0xE98D8D:0x4555,0xE7A0A5:0x4556,0xE7A0BA:0x4557,0xE58AAA:0x4558,0xE5BAA6:0x4559,\n0xE59C9F:0x455A,0xE5A5B4:0x455B,0xE68092:0x455C,0xE58092:0x455D,0xE5859A:0x455E,\n0xE586AC:0x455F,0xE5878D:0x4560,0xE58880:0x4561,0xE59490:0x4562,0xE5A194:0x4563,\n0xE5A198:0x4564,0xE5A597:0x4565,0xE5AE95:0x4566,0xE5B3B6:0x4567,0xE5B68B:0x4568,\n0xE682BC:0x4569,0xE68A95:0x456A,0xE690AD:0x456B,0xE69DB1:0x456C,0xE6A183:0x456D,\n0xE6A2BC:0x456E,0xE6A39F:0x456F,0xE79B97:0x4570,0xE6B798:0x4571,0xE6B9AF:0x4572,\n0xE6B69B:0x4573,0xE781AF:0x4574,0xE78788:0x4575,0xE5BD93:0x4576,0xE79798:0x4577,\n0xE7A5B7:0x4578,0xE7AD89:0x4579,0xE7AD94:0x457A,0xE7AD92:0x457B,0xE7B396:0x457C,\n0xE7B5B1:0x457D,0xE588B0:0x457E,0xE891A3:0x4621,0xE895A9:0x4622,0xE897A4:0x4623,\n0xE8A88E:0x4624,0xE8AC84:0x4625,0xE8B186:0x4626,0xE8B88F:0x4627,0xE98083:0x4628,\n0xE9808F:0x4629,0xE99099:0x462A,0xE999B6:0x462B,0xE9A0AD:0x462C,0xE9A8B0:0x462D,\n0xE99798:0x462E,0xE5838D:0x462F,0xE58B95:0x4630,0xE5908C:0x4631,0xE5A082:0x4632,\n0xE5B08E:0x4633,0xE686A7:0x4634,0xE6929E:0x4635,0xE6B49E:0x4636,0xE79EB3:0x4637,\n0xE7ABA5:0x4638,0xE883B4:0x4639,0xE89084:0x463A,0xE98193:0x463B,0xE98A85:0x463C,\n0xE5B3A0:0x463D,0xE9B487:0x463E,0xE58CBF:0x463F,0xE5BE97:0x4640,0xE5BEB3:0x4641,\n0xE6B69C:0x4642,0xE789B9:0x4643,0xE79DA3:0x4644,0xE7A6BF:0x4645,0xE7AFA4:0x4646,\n0xE6AF92:0x4647,0xE78BAC:0x4648,0xE8AAAD:0x4649,0xE6A083:0x464A,0xE6A9A1:0x464B,\n0xE587B8:0x464C,0xE7AA81:0x464D,0xE6A4B4:0x464E,0xE5B18A:0x464F,0xE9B3B6:0x4650,\n0xE88BAB:0x4651,0xE5AF85:0x4652,0xE98589:0x4653,0xE7809E:0x4654,0xE599B8:0x4655,\n0xE5B1AF:0x4656,0xE68387:0x4657,0xE695A6:0x4658,0xE6B28C:0x4659,0xE8B19A:0x465A,\n0xE98181:0x465B,0xE9A093:0x465C,0xE59191:0x465D,0xE69B87:0x465E,0xE9888D:0x465F,\n0xE5A588:0x4660,0xE982A3:0x4661,0xE58685:0x4662,0xE4B98D:0x4663,0xE587AA:0x4664,\n0xE89699:0x4665,0xE8AC8E:0x4666,0xE78198:0x4667,0xE68DBA:0x4668,0xE98D8B:0x4669,\n0xE6A5A2:0x466A,0xE9A6B4:0x466B,0xE7B884:0x466C,0xE795B7:0x466D,0xE58D97:0x466E,\n0xE6A5A0:0x466F,0xE8BB9F:0x4670,0xE99BA3:0x4671,0xE6B19D:0x4672,0xE4BA8C:0x4673,\n0xE5B0BC:0x4674,0xE5BC90:0x4675,0xE8BFA9:0x4676,0xE58C82:0x4677,0xE8B391:0x4678,\n0xE88289:0x4679,0xE899B9:0x467A,0xE5BBBF:0x467B,0xE697A5:0x467C,0xE4B9B3:0x467D,\n0xE585A5:0x467E,0xE5A682:0x4721,0xE5B0BF:0x4722,0xE99FAE:0x4723,0xE4BBBB:0x4724,\n0xE5A68A:0x4725,0xE5BF8D:0x4726,0xE8AA8D:0x4727,0xE6BFA1:0x4728,0xE7A6B0:0x4729,\n0xE7A5A2:0x472A,0xE5AFA7:0x472B,0xE891B1:0x472C,0xE78CAB:0x472D,0xE786B1:0x472E,\n0xE5B9B4:0x472F,0xE5BFB5:0x4730,0xE68DBB:0x4731,0xE6929A:0x4732,0xE78783:0x4733,\n0xE7B298:0x4734,0xE4B983:0x4735,0xE5BBBC:0x4736,0xE4B98B:0x4737,0xE59F9C:0x4738,\n0xE59AA2:0x4739,0xE682A9:0x473A,0xE6BF83:0x473B,0xE7B48D:0x473C,0xE883BD:0x473D,\n0xE884B3:0x473E,0xE886BF:0x473F,0xE8BEB2:0x4740,0xE8A697:0x4741,0xE89AA4:0x4742,\n0xE5B7B4:0x4743,0xE68A8A:0x4744,0xE692AD:0x4745,0xE8A687:0x4746,0xE69DB7:0x4747,\n0xE6B3A2:0x4748,0xE6B4BE:0x4749,0xE790B6:0x474A,0xE7A0B4:0x474B,0xE5A986:0x474C,\n0xE7BDB5:0x474D,0xE88AAD:0x474E,0xE9A6AC:0x474F,0xE4BFB3:0x4750,0xE5BB83:0x4751,\n0xE68B9D:0x4752,0xE68E92:0x4753,0xE69597:0x4754,0xE69DAF:0x4755,0xE79B83:0x4756,\n0xE7898C:0x4757,0xE8838C:0x4758,0xE882BA:0x4759,0xE8BCA9:0x475A,0xE9858D:0x475B,\n0xE5808D:0x475C,0xE59FB9:0x475D,0xE5AA92:0x475E,0xE6A285:0x475F,0xE6A5B3:0x4760,\n0xE785A4:0x4761,0xE78BBD:0x4762,0xE8B2B7:0x4763,0xE5A3B2:0x4764,0xE8B3A0:0x4765,\n0xE999AA:0x4766,0xE98099:0x4767,0xE89DBF:0x4768,0xE7A7A4:0x4769,0xE79FA7:0x476A,\n0xE890A9:0x476B,0xE4BCAF:0x476C,0xE589A5:0x476D,0xE58D9A:0x476E,0xE68B8D:0x476F,\n0xE69F8F:0x4770,0xE6B38A:0x4771,0xE799BD:0x4772,0xE7AE94:0x4773,0xE7B295:0x4774,\n0xE888B6:0x4775,0xE89684:0x4776,0xE8BFAB:0x4777,0xE69B9D:0x4778,0xE6BCA0:0x4779,\n0xE78886:0x477A,0xE7B89B:0x477B,0xE88EAB:0x477C,0xE9A781:0x477D,0xE9BAA6:0x477E,\n0xE587BD:0x4821,0xE7AEB1:0x4822,0xE7A1B2:0x4823,0xE7AEB8:0x4824,0xE88287:0x4825,\n0xE7AD88:0x4826,0xE6ABA8:0x4827,0xE5B9A1:0x4828,0xE8828C:0x4829,0xE79591:0x482A,\n0xE795A0:0x482B,0xE585AB:0x482C,0xE989A2:0x482D,0xE6BA8C:0x482E,0xE799BA:0x482F,\n0xE98697:0x4830,0xE9ABAA:0x4831,0xE4BC90:0x4832,0xE7BDB0:0x4833,0xE68A9C:0x4834,\n0xE7AD8F:0x4835,0xE996A5:0x4836,0xE9B3A9:0x4837,0xE599BA:0x4838,0xE5A199:0x4839,\n0xE89BA4:0x483A,0xE99ABC:0x483B,0xE4BCB4:0x483C,0xE588A4:0x483D,0xE58D8A:0x483E,\n0xE58F8D:0x483F,0xE58F9B:0x4840,0xE5B886:0x4841,0xE690AC:0x4842,0xE69691:0x4843,\n0xE69DBF:0x4844,0xE6B0BE:0x4845,0xE6B18E:0x4846,0xE78988:0x4847,0xE78AAF:0x4848,\n0xE78FAD:0x4849,0xE79594:0x484A,0xE7B981:0x484B,0xE888AC:0x484C,0xE897A9:0x484D,\n0xE8B2A9:0x484E,0xE7AF84:0x484F,0xE98786:0x4850,0xE785A9:0x4851,0xE9A092:0x4852,\n0xE9A3AF:0x4853,0xE68CBD:0x4854,0xE699A9:0x4855,0xE795AA:0x4856,0xE79BA4:0x4857,\n0xE7A390:0x4858,0xE89583:0x4859,0xE89BAE:0x485A,0xE58CAA:0x485B,0xE58D91:0x485C,\n0xE590A6:0x485D,0xE5A683:0x485E,0xE5BA87:0x485F,0xE5BDBC:0x4860,0xE682B2:0x4861,\n0xE68989:0x4862,0xE689B9:0x4863,0xE68AAB:0x4864,0xE69690:0x4865,0xE6AF94:0x4866,\n0xE6B38C:0x4867,0xE796B2:0x4868,0xE79AAE:0x4869,0xE7A291:0x486A,0xE7A798:0x486B,\n0xE7B78B:0x486C,0xE7BDB7:0x486D,0xE882A5:0x486E,0xE8A2AB:0x486F,0xE8AAB9:0x4870,\n0xE8B2BB:0x4871,0xE981BF:0x4872,0xE99D9E:0x4873,0xE9A39B:0x4874,0xE6A88B:0x4875,\n0xE7B0B8:0x4876,0xE58299:0x4877,0xE5B0BE:0x4878,0xE5BEAE:0x4879,0xE69E87:0x487A,\n0xE6AF98:0x487B,0xE790B5:0x487C,0xE79C89:0x487D,0xE7BE8E:0x487E,0xE9BCBB:0x4921,\n0xE69F8A:0x4922,0xE7A897:0x4923,0xE58CB9:0x4924,0xE7968B:0x4925,0xE9ABAD:0x4926,\n0xE5BDA6:0x4927,0xE8869D:0x4928,0xE88FB1:0x4929,0xE88298:0x492A,0xE5BCBC:0x492B,\n0xE5BF85:0x492C,0xE795A2:0x492D,0xE7AD86:0x492E,0xE980BC:0x492F,0xE6A1A7:0x4930,\n0xE5A7AB:0x4931,0xE5AA9B:0x4932,0xE7B490:0x4933,0xE799BE:0x4934,0xE8ACAC:0x4935,\n0xE4BFB5:0x4936,0xE5BDAA:0x4937,0xE6A899:0x4938,0xE6B0B7:0x4939,0xE6BC82:0x493A,\n0xE793A2:0x493B,0xE7A5A8:0x493C,0xE8A1A8:0x493D,0xE8A995:0x493E,0xE8B1B9:0x493F,\n0xE5BB9F:0x4940,0xE68F8F:0x4941,0xE79785:0x4942,0xE7A792:0x4943,0xE88B97:0x4944,\n0xE98CA8:0x4945,0xE98BB2:0x4946,0xE8929C:0x4947,0xE89BAD:0x4948,0xE9B0AD:0x4949,\n0xE59381:0x494A,0xE5BDAC:0x494B,0xE6968C:0x494C,0xE6B59C:0x494D,0xE78095:0x494E,\n0xE8B2A7:0x494F,0xE8B393:0x4950,0xE9A0BB:0x4951,0xE6958F:0x4952,0xE793B6:0x4953,\n0xE4B88D:0x4954,0xE4BB98:0x4955,0xE59FA0:0x4956,0xE5A4AB:0x4957,0xE5A9A6:0x4958,\n0xE5AF8C:0x4959,0xE586A8:0x495A,0xE5B883:0x495B,0xE5BA9C:0x495C,0xE68096:0x495D,\n0xE689B6:0x495E,0xE695B7:0x495F,0xE696A7:0x4960,0xE699AE:0x4961,0xE6B5AE:0x4962,\n0xE788B6:0x4963,0xE7ACA6:0x4964,0xE88590:0x4965,0xE8869A:0x4966,0xE88A99:0x4967,\n0xE8AD9C:0x4968,0xE8B2A0:0x4969,0xE8B3A6:0x496A,0xE8B5B4:0x496B,0xE9989C:0x496C,\n0xE99984:0x496D,0xE4BEAE:0x496E,0xE692AB:0x496F,0xE6ADA6:0x4970,0xE8889E:0x4971,\n0xE891A1:0x4972,0xE895AA:0x4973,0xE983A8:0x4974,0xE5B081:0x4975,0xE6A593:0x4976,\n0xE9A2A8:0x4977,0xE891BA:0x4978,0xE89597:0x4979,0xE4BC8F:0x497A,0xE589AF:0x497B,\n0xE5BEA9:0x497C,0xE5B985:0x497D,0xE69C8D:0x497E,0xE7A68F:0x4A21,0xE885B9:0x4A22,\n0xE8A487:0x4A23,0xE8A686:0x4A24,0xE6B7B5:0x4A25,0xE5BC97:0x4A26,0xE68995:0x4A27,\n0xE6B2B8:0x4A28,0xE4BB8F:0x4A29,0xE789A9:0x4A2A,0xE9AE92:0x4A2B,0xE58886:0x4A2C,\n0xE590BB:0x4A2D,0xE599B4:0x4A2E,0xE5A2B3:0x4A2F,0xE686A4:0x4A30,0xE689AE:0x4A31,\n0xE7849A:0x4A32,0xE5A5AE:0x4A33,0xE7B289:0x4A34,0xE7B39E:0x4A35,0xE7B49B:0x4A36,\n0xE99BB0:0x4A37,0xE69687:0x4A38,0xE8819E:0x4A39,0xE4B899:0x4A3A,0xE4BDB5:0x4A3B,\n0xE585B5:0x4A3C,0xE5A180:0x4A3D,0xE5B9A3:0x4A3E,0xE5B9B3:0x4A3F,0xE5BC8A:0x4A40,\n0xE69F84:0x4A41,0xE4B8A6:0x4A42,0xE894BD:0x4A43,0xE99689:0x4A44,0xE9999B:0x4A45,\n0xE7B1B3:0x4A46,0xE9A081:0x4A47,0xE583BB:0x4A48,0xE5A381:0x4A49,0xE79996:0x4A4A,\n0xE7A2A7:0x4A4B,0xE588A5:0x4A4C,0xE79EA5:0x4A4D,0xE89491:0x4A4E,0xE7AE86:0x4A4F,\n0xE5818F:0x4A50,0xE5A489:0x4A51,0xE78987:0x4A52,0xE7AF87:0x4A53,0xE7B7A8:0x4A54,\n0xE8BEBA:0x4A55,0xE8BF94:0x4A56,0xE9818D:0x4A57,0xE4BEBF:0x4A58,0xE58B89:0x4A59,\n0xE5A8A9:0x4A5A,0xE5BC81:0x4A5B,0xE99EAD:0x4A5C,0xE4BF9D:0x4A5D,0xE88897:0x4A5E,\n0xE98BAA:0x4A5F,0xE59C83:0x4A60,0xE68D95:0x4A61,0xE6ADA9:0x4A62,0xE794AB:0x4A63,\n0xE8A39C:0x4A64,0xE8BC94:0x4A65,0xE7A982:0x4A66,0xE58B9F:0x4A67,0xE5A293:0x4A68,\n0xE68595:0x4A69,0xE6888A:0x4A6A,0xE69AAE:0x4A6B,0xE6AF8D:0x4A6C,0xE7B0BF:0x4A6D,\n0xE88FA9:0x4A6E,0xE580A3:0x4A6F,0xE4BFB8:0x4A70,0xE58C85:0x4A71,0xE59186:0x4A72,\n0xE5A0B1:0x4A73,0xE5A589:0x4A74,0xE5AE9D:0x4A75,0xE5B3B0:0x4A76,0xE5B3AF:0x4A77,\n0xE5B4A9:0x4A78,0xE5BA96:0x4A79,0xE68AB1:0x4A7A,0xE68DA7:0x4A7B,0xE694BE:0x4A7C,\n0xE696B9:0x4A7D,0xE69C8B:0x4A7E,0xE6B395:0x4B21,0xE6B3A1:0x4B22,0xE783B9:0x4B23,\n0xE7A0B2:0x4B24,0xE7B8AB:0x4B25,0xE8839E:0x4B26,0xE88AB3:0x4B27,0xE8908C:0x4B28,\n0xE893AC:0x4B29,0xE89C82:0x4B2A,0xE8A492:0x4B2B,0xE8A8AA:0x4B2C,0xE8B18A:0x4B2D,\n0xE982A6:0x4B2E,0xE98B92:0x4B2F,0xE9A3BD:0x4B30,0xE9B3B3:0x4B31,0xE9B5AC:0x4B32,\n0xE4B98F:0x4B33,0xE4BAA1:0x4B34,0xE5828D:0x4B35,0xE58996:0x4B36,0xE59D8A:0x4B37,\n0xE5A6A8:0x4B38,0xE5B8BD:0x4B39,0xE5BF98:0x4B3A,0xE5BF99:0x4B3B,0xE688BF:0x4B3C,\n0xE69AB4:0x4B3D,0xE69C9B:0x4B3E,0xE69F90:0x4B3F,0xE6A392:0x4B40,0xE58692:0x4B41,\n0xE7B4A1:0x4B42,0xE882AA:0x4B43,0xE886A8:0x4B44,0xE8AC80:0x4B45,0xE8B28C:0x4B46,\n0xE8B2BF:0x4B47,0xE989BE:0x4B48,0xE998B2:0x4B49,0xE590A0:0x4B4A,0xE9A0AC:0x4B4B,\n0xE58C97:0x4B4C,0xE58395:0x4B4D,0xE58D9C:0x4B4E,0xE5A2A8:0x4B4F,0xE692B2:0x4B50,\n0xE69CB4:0x4B51,0xE789A7:0x4B52,0xE79DA6:0x4B53,0xE7A986:0x4B54,0xE987A6:0x4B55,\n0xE58B83:0x4B56,0xE6B2A1:0x4B57,0xE6AE86:0x4B58,0xE5A080:0x4B59,0xE5B98C:0x4B5A,\n0xE5A594:0x4B5B,0xE69CAC:0x4B5C,0xE7BFBB:0x4B5D,0xE587A1:0x4B5E,0xE79B86:0x4B5F,\n0xE691A9:0x4B60,0xE7A3A8:0x4B61,0xE9AD94:0x4B62,0xE9BABB:0x4B63,0xE59F8B:0x4B64,\n0xE5A6B9:0x4B65,0xE698A7:0x4B66,0xE69E9A:0x4B67,0xE6AF8E:0x4B68,0xE593A9:0x4B69,\n0xE6A799:0x4B6A,0xE5B995:0x4B6B,0xE8869C:0x4B6C,0xE69E95:0x4B6D,0xE9AEAA:0x4B6E,\n0xE69FBE:0x4B6F,0xE9B192:0x4B70,0xE6A19D:0x4B71,0xE4BAA6:0x4B72,0xE4BFA3:0x4B73,\n0xE58F88:0x4B74,0xE68AB9:0x4B75,0xE69CAB:0x4B76,0xE6B2AB:0x4B77,0xE8BF84:0x4B78,\n0xE4BEAD:0x4B79,0xE7B9AD:0x4B7A,0xE9BABF:0x4B7B,0xE4B887:0x4B7C,0xE685A2:0x4B7D,\n0xE6BA80:0x4B7E,0xE6BCAB:0x4C21,0xE89493:0x4C22,0xE591B3:0x4C23,0xE69CAA:0x4C24,\n0xE9AD85:0x4C25,0xE5B7B3:0x4C26,0xE7AE95:0x4C27,0xE5B2AC:0x4C28,0xE5AF86:0x4C29,\n0xE89C9C:0x4C2A,0xE6B98A:0x4C2B,0xE89391:0x4C2C,0xE7A894:0x4C2D,0xE88488:0x4C2E,\n0xE5A699:0x4C2F,0xE7B28D:0x4C30,0xE6B091:0x4C31,0xE79CA0:0x4C32,0xE58B99:0x4C33,\n0xE5A4A2:0x4C34,0xE784A1:0x4C35,0xE7899F:0x4C36,0xE79F9B:0x4C37,0xE99CA7:0x4C38,\n0xE9B5A1:0x4C39,0xE6A48B:0x4C3A,0xE5A9BF:0x4C3B,0xE5A898:0x4C3C,0xE586A5:0x4C3D,\n0xE5908D:0x4C3E,0xE591BD:0x4C3F,0xE6988E:0x4C40,0xE79B9F:0x4C41,0xE8BFB7:0x4C42,\n0xE98A98:0x4C43,0xE9B3B4:0x4C44,0xE5A7AA:0x4C45,0xE7899D:0x4C46,0xE6BB85:0x4C47,\n0xE5858D:0x4C48,0xE6A389:0x4C49,0xE7B6BF:0x4C4A,0xE7B7AC:0x4C4B,0xE99DA2:0x4C4C,\n0xE9BABA:0x4C4D,0xE691B8:0x4C4E,0xE6A8A1:0x4C4F,0xE88C82:0x4C50,0xE5A684:0x4C51,\n0xE5AD9F:0x4C52,0xE6AF9B:0x4C53,0xE78C9B:0x4C54,0xE79BB2:0x4C55,0xE7B6B2:0x4C56,\n0xE88097:0x4C57,0xE89299:0x4C58,0xE584B2:0x4C59,0xE69CA8:0x4C5A,0xE9BB99:0x4C5B,\n0xE79BAE:0x4C5C,0xE69DA2:0x4C5D,0xE58BBF:0x4C5E,0xE9A485:0x4C5F,0xE5B0A4:0x4C60,\n0xE688BB:0x4C61,0xE7B1BE:0x4C62,0xE8B2B0:0x4C63,0xE5958F:0x4C64,0xE682B6:0x4C65,\n0xE7B48B:0x4C66,0xE99680:0x4C67,0xE58C81:0x4C68,0xE4B99F:0x4C69,0xE586B6:0x4C6A,\n0xE5A49C:0x4C6B,0xE788BA:0x4C6C,0xE880B6:0x4C6D,0xE9878E:0x4C6E,0xE5BCA5:0x4C6F,\n0xE79FA2:0x4C70,0xE58E84:0x4C71,0xE5BDB9:0x4C72,0xE7B484:0x4C73,0xE896AC:0x4C74,\n0xE8A8B3:0x4C75,0xE8BA8D:0x4C76,0xE99D96:0x4C77,0xE69FB3:0x4C78,0xE896AE:0x4C79,\n0xE99193:0x4C7A,0xE68489:0x4C7B,0xE68488:0x4C7C,0xE6B2B9:0x4C7D,0xE79992:0x4C7E,\n0xE8ABAD:0x4D21,0xE8BCB8:0x4D22,0xE594AF:0x4D23,0xE4BD91:0x4D24,0xE584AA:0x4D25,\n0xE58B87:0x4D26,0xE58F8B:0x4D27,0xE5AEA5:0x4D28,0xE5B9BD:0x4D29,0xE682A0:0x4D2A,\n0xE68682:0x4D2B,0xE68F96:0x4D2C,0xE69C89:0x4D2D,0xE69F9A:0x4D2E,0xE6B9A7:0x4D2F,\n0xE6B68C:0x4D30,0xE78CB6:0x4D31,0xE78CB7:0x4D32,0xE794B1:0x4D33,0xE7A590:0x4D34,\n0xE8A395:0x4D35,0xE8AA98:0x4D36,0xE9818A:0x4D37,0xE98291:0x4D38,0xE983B5:0x4D39,\n0xE99B84:0x4D3A,0xE89E8D:0x4D3B,0xE5A495:0x4D3C,0xE4BA88:0x4D3D,0xE4BD99:0x4D3E,\n0xE4B88E:0x4D3F,0xE8AA89:0x4D40,0xE8BCBF:0x4D41,0xE9A090:0x4D42,0xE582AD:0x4D43,\n0xE5B9BC:0x4D44,0xE5A696:0x4D45,0xE5AEB9:0x4D46,0xE5BAB8:0x4D47,0xE68F9A:0x4D48,\n0xE68FBA:0x4D49,0xE69381:0x4D4A,0xE69B9C:0x4D4B,0xE6A58A:0x4D4C,0xE6A798:0x4D4D,\n0xE6B48B:0x4D4E,0xE6BAB6:0x4D4F,0xE78694:0x4D50,0xE794A8:0x4D51,0xE7AAAF:0x4D52,\n0xE7BE8A:0x4D53,0xE88080:0x4D54,0xE89189:0x4D55,0xE89389:0x4D56,0xE8A681:0x4D57,\n0xE8ACA1:0x4D58,0xE8B88A:0x4D59,0xE981A5:0x4D5A,0xE999BD:0x4D5B,0xE9A48A:0x4D5C,\n0xE685BE:0x4D5D,0xE68A91:0x4D5E,0xE6ACB2:0x4D5F,0xE6B283:0x4D60,0xE6B5B4:0x4D61,\n0xE7BF8C:0x4D62,0xE7BFBC:0x4D63,0xE6B780:0x4D64,0xE7BE85:0x4D65,0xE89EBA:0x4D66,\n0xE8A3B8:0x4D67,0xE69DA5:0x4D68,0xE88EB1:0x4D69,0xE9A0BC:0x4D6A,0xE99BB7:0x4D6B,\n0xE6B49B:0x4D6C,0xE7B5A1:0x4D6D,0xE890BD:0x4D6E,0xE985AA:0x4D6F,0xE4B9B1:0x4D70,\n0xE58DB5:0x4D71,0xE5B590:0x4D72,0xE6AC84:0x4D73,0xE6BFAB:0x4D74,0xE8978D:0x4D75,\n0xE898AD:0x4D76,0xE8A6A7:0x4D77,0xE588A9:0x4D78,0xE5908F:0x4D79,0xE5B1A5:0x4D7A,\n0xE69D8E:0x4D7B,0xE6A2A8:0x4D7C,0xE79086:0x4D7D,0xE79283:0x4D7E,0xE797A2:0x4E21,\n0xE8A38F:0x4E22,0xE8A3A1:0x4E23,0xE9878C:0x4E24,0xE99BA2:0x4E25,0xE999B8:0x4E26,\n0xE5BE8B:0x4E27,0xE78E87:0x4E28,0xE7AB8B:0x4E29,0xE8918E:0x4E2A,0xE68EA0:0x4E2B,\n0xE795A5:0x4E2C,0xE58A89:0x4E2D,0xE6B581:0x4E2E,0xE6BA9C:0x4E2F,0xE79089:0x4E30,\n0xE79599:0x4E31,0xE7A1AB:0x4E32,0xE7B292:0x4E33,0xE99A86:0x4E34,0xE7AB9C:0x4E35,\n0xE9BE8D:0x4E36,0xE4BEB6:0x4E37,0xE685AE:0x4E38,0xE69785:0x4E39,0xE8999C:0x4E3A,\n0xE4BA86:0x4E3B,0xE4BAAE:0x4E3C,0xE5839A:0x4E3D,0xE4B8A1:0x4E3E,0xE5878C:0x4E3F,\n0xE5AFAE:0x4E40,0xE69699:0x4E41,0xE6A281:0x4E42,0xE6B6BC:0x4E43,0xE78C9F:0x4E44,\n0xE79982:0x4E45,0xE79EAD:0x4E46,0xE7A89C:0x4E47,0xE7B3A7:0x4E48,0xE889AF:0x4E49,\n0xE8AB92:0x4E4A,0xE981BC:0x4E4B,0xE9878F:0x4E4C,0xE999B5:0x4E4D,0xE9A098:0x4E4E,\n0xE58A9B:0x4E4F,0xE7B791:0x4E50,0xE580AB:0x4E51,0xE58E98:0x4E52,0xE69E97:0x4E53,\n0xE6B78B:0x4E54,0xE78790:0x4E55,0xE790B3:0x4E56,0xE887A8:0x4E57,0xE8BCAA:0x4E58,\n0xE99AA3:0x4E59,0xE9B197:0x4E5A,0xE9BA9F:0x4E5B,0xE791A0:0x4E5C,0xE5A181:0x4E5D,\n0xE6B699:0x4E5E,0xE7B4AF:0x4E5F,0xE9A19E:0x4E60,0xE4BBA4:0x4E61,0xE4BCB6:0x4E62,\n0xE4BE8B:0x4E63,0xE586B7:0x4E64,0xE58AB1:0x4E65,0xE5B6BA:0x4E66,0xE6809C:0x4E67,\n0xE78EB2:0x4E68,0xE7A4BC:0x4E69,0xE88B93:0x4E6A,0xE988B4:0x4E6B,0xE99AB7:0x4E6C,\n0xE99BB6:0x4E6D,0xE99C8A:0x4E6E,0xE9BA97:0x4E6F,0xE9BDA2:0x4E70,0xE69AA6:0x4E71,\n0xE6ADB4:0x4E72,0xE58897:0x4E73,0xE58AA3:0x4E74,0xE78388:0x4E75,0xE8A382:0x4E76,\n0xE5BB89:0x4E77,0xE6818B:0x4E78,0xE68690:0x4E79,0xE6BCA3:0x4E7A,0xE78589:0x4E7B,\n0xE7B0BE:0x4E7C,0xE7B7B4:0x4E7D,0xE881AF:0x4E7E,0xE893AE:0x4F21,0xE980A3:0x4F22,\n0xE98CAC:0x4F23,0xE59182:0x4F24,0xE9ADAF:0x4F25,0xE6AB93:0x4F26,0xE78289:0x4F27,\n0xE8B382:0x4F28,0xE8B7AF:0x4F29,0xE99CB2:0x4F2A,0xE58AB4:0x4F2B,0xE5A981:0x4F2C,\n0xE5BB8A:0x4F2D,0xE5BC84:0x4F2E,0xE69C97:0x4F2F,0xE6A5BC:0x4F30,0xE6A694:0x4F31,\n0xE6B5AA:0x4F32,0xE6BC8F:0x4F33,0xE789A2:0x4F34,0xE78BBC:0x4F35,0xE7AFAD:0x4F36,\n0xE88081:0x4F37,0xE881BE:0x4F38,0xE89D8B:0x4F39,0xE9838E:0x4F3A,0xE585AD:0x4F3B,\n0xE9BA93:0x4F3C,0xE7A684:0x4F3D,0xE8828B:0x4F3E,0xE98CB2:0x4F3F,0xE8AB96:0x4F40,\n0xE580AD:0x4F41,0xE5928C:0x4F42,0xE8A9B1:0x4F43,0xE6ADAA:0x4F44,0xE8B384:0x4F45,\n0xE88487:0x4F46,0xE68391:0x4F47,0xE69EA0:0x4F48,0xE9B7B2:0x4F49,0xE4BA99:0x4F4A,\n0xE4BA98:0x4F4B,0xE9B090:0x4F4C,0xE8A9AB:0x4F4D,0xE89781:0x4F4E,0xE895A8:0x4F4F,\n0xE6A480:0x4F50,0xE6B9BE:0x4F51,0xE7A297:0x4F52,0xE88595:0x4F53,0xE5BC8C:0x5021,\n0xE4B890:0x5022,0xE4B895:0x5023,0xE4B8AA:0x5024,0xE4B8B1:0x5025,0xE4B8B6:0x5026,\n0xE4B8BC:0x5027,0xE4B8BF:0x5028,0xE4B982:0x5029,0xE4B996:0x502A,0xE4B998:0x502B,\n0xE4BA82:0x502C,0xE4BA85:0x502D,0xE8B1AB:0x502E,0xE4BA8A:0x502F,0xE88892:0x5030,\n0xE5BC8D:0x5031,0xE4BA8E:0x5032,0xE4BA9E:0x5033,0xE4BA9F:0x5034,0xE4BAA0:0x5035,\n0xE4BAA2:0x5036,0xE4BAB0:0x5037,0xE4BAB3:0x5038,0xE4BAB6:0x5039,0xE4BB8E:0x503A,\n0xE4BB8D:0x503B,0xE4BB84:0x503C,0xE4BB86:0x503D,0xE4BB82:0x503E,0xE4BB97:0x503F,\n0xE4BB9E:0x5040,0xE4BBAD:0x5041,0xE4BB9F:0x5042,0xE4BBB7:0x5043,0xE4BC89:0x5044,\n0xE4BD9A:0x5045,0xE4BCB0:0x5046,0xE4BD9B:0x5047,0xE4BD9D:0x5048,0xE4BD97:0x5049,\n0xE4BD87:0x504A,0xE4BDB6:0x504B,0xE4BE88:0x504C,0xE4BE8F:0x504D,0xE4BE98:0x504E,\n0xE4BDBB:0x504F,0xE4BDA9:0x5050,0xE4BDB0:0x5051,0xE4BE91:0x5052,0xE4BDAF:0x5053,\n0xE4BE86:0x5054,0xE4BE96:0x5055,0xE58498:0x5056,0xE4BF94:0x5057,0xE4BF9F:0x5058,\n0xE4BF8E:0x5059,0xE4BF98:0x505A,0xE4BF9B:0x505B,0xE4BF91:0x505C,0xE4BF9A:0x505D,\n0xE4BF90:0x505E,0xE4BFA4:0x505F,0xE4BFA5:0x5060,0xE5809A:0x5061,0xE580A8:0x5062,\n0xE58094:0x5063,0xE580AA:0x5064,0xE580A5:0x5065,0xE58085:0x5066,0xE4BC9C:0x5067,\n0xE4BFB6:0x5068,0xE580A1:0x5069,0xE580A9:0x506A,0xE580AC:0x506B,0xE4BFBE:0x506C,\n0xE4BFAF:0x506D,0xE58091:0x506E,0xE58086:0x506F,0xE58183:0x5070,0xE58187:0x5071,\n0xE69C83:0x5072,0xE58195:0x5073,0xE58190:0x5074,0xE58188:0x5075,0xE5819A:0x5076,\n0xE58196:0x5077,0xE581AC:0x5078,0xE581B8:0x5079,0xE58280:0x507A,0xE5829A:0x507B,\n0xE58285:0x507C,0xE582B4:0x507D,0xE582B2:0x507E,0xE58389:0x5121,0xE5838A:0x5122,\n0xE582B3:0x5123,0xE58382:0x5124,0xE58396:0x5125,0xE5839E:0x5126,0xE583A5:0x5127,\n0xE583AD:0x5128,0xE583A3:0x5129,0xE583AE:0x512A,0xE583B9:0x512B,0xE583B5:0x512C,\n0xE58489:0x512D,0xE58481:0x512E,0xE58482:0x512F,0xE58496:0x5130,0xE58495:0x5131,\n0xE58494:0x5132,0xE5849A:0x5133,0xE584A1:0x5134,0xE584BA:0x5135,0xE584B7:0x5136,\n0xE584BC:0x5137,0xE584BB:0x5138,0xE584BF:0x5139,0xE58580:0x513A,0xE58592:0x513B,\n0xE5858C:0x513C,0xE58594:0x513D,0xE585A2:0x513E,0xE7ABB8:0x513F,0xE585A9:0x5140,\n0xE585AA:0x5141,0xE585AE:0x5142,0xE58680:0x5143,0xE58682:0x5144,0xE59B98:0x5145,\n0xE5868C:0x5146,0xE58689:0x5147,0xE5868F:0x5148,0xE58691:0x5149,0xE58693:0x514A,\n0xE58695:0x514B,0xE58696:0x514C,0xE586A4:0x514D,0xE586A6:0x514E,0xE586A2:0x514F,\n0xE586A9:0x5150,0xE586AA:0x5151,0xE586AB:0x5152,0xE586B3:0x5153,0xE586B1:0x5154,\n0xE586B2:0x5155,0xE586B0:0x5156,0xE586B5:0x5157,0xE586BD:0x5158,0xE58785:0x5159,\n0xE58789:0x515A,0xE5879B:0x515B,0xE587A0:0x515C,0xE89995:0x515D,0xE587A9:0x515E,\n0xE587AD:0x515F,0xE587B0:0x5160,0xE587B5:0x5161,0xE587BE:0x5162,0xE58884:0x5163,\n0xE5888B:0x5164,0xE58894:0x5165,0xE5888E:0x5166,0xE588A7:0x5167,0xE588AA:0x5168,\n0xE588AE:0x5169,0xE588B3:0x516A,0xE588B9:0x516B,0xE5898F:0x516C,0xE58984:0x516D,\n0xE5898B:0x516E,0xE5898C:0x516F,0xE5899E:0x5170,0xE58994:0x5171,0xE589AA:0x5172,\n0xE589B4:0x5173,0xE589A9:0x5174,0xE589B3:0x5175,0xE589BF:0x5176,0xE589BD:0x5177,\n0xE58A8D:0x5178,0xE58A94:0x5179,0xE58A92:0x517A,0xE589B1:0x517B,0xE58A88:0x517C,\n0xE58A91:0x517D,0xE8BEA8:0x517E,0xE8BEA7:0x5221,0xE58AAC:0x5222,0xE58AAD:0x5223,\n0xE58ABC:0x5224,0xE58AB5:0x5225,0xE58B81:0x5226,0xE58B8D:0x5227,0xE58B97:0x5228,\n0xE58B9E:0x5229,0xE58BA3:0x522A,0xE58BA6:0x522B,0xE9A3AD:0x522C,0xE58BA0:0x522D,\n0xE58BB3:0x522E,0xE58BB5:0x522F,0xE58BB8:0x5230,0xE58BB9:0x5231,0xE58C86:0x5232,\n0xE58C88:0x5233,0xE794B8:0x5234,0xE58C8D:0x5235,0xE58C90:0x5236,0xE58C8F:0x5237,\n0xE58C95:0x5238,0xE58C9A:0x5239,0xE58CA3:0x523A,0xE58CAF:0x523B,0xE58CB1:0x523C,\n0xE58CB3:0x523D,0xE58CB8:0x523E,0xE58D80:0x523F,0xE58D86:0x5240,0xE58D85:0x5241,\n0xE4B897:0x5242,0xE58D89:0x5243,0xE58D8D:0x5244,0xE58796:0x5245,0xE58D9E:0x5246,\n0xE58DA9:0x5247,0xE58DAE:0x5248,0xE5A498:0x5249,0xE58DBB:0x524A,0xE58DB7:0x524B,\n0xE58E82:0x524C,0xE58E96:0x524D,0xE58EA0:0x524E,0xE58EA6:0x524F,0xE58EA5:0x5250,\n0xE58EAE:0x5251,0xE58EB0:0x5252,0xE58EB6:0x5253,0xE58F83:0x5254,0xE7B092:0x5255,\n0xE99B99:0x5256,0xE58F9F:0x5257,0xE69BBC:0x5258,0xE787AE:0x5259,0xE58FAE:0x525A,\n0xE58FA8:0x525B,0xE58FAD:0x525C,0xE58FBA:0x525D,0xE59081:0x525E,0xE590BD:0x525F,\n0xE59180:0x5260,0xE590AC:0x5261,0xE590AD:0x5262,0xE590BC:0x5263,0xE590AE:0x5264,\n0xE590B6:0x5265,0xE590A9:0x5266,0xE5909D:0x5267,0xE5918E:0x5268,0xE5928F:0x5269,\n0xE591B5:0x526A,0xE5928E:0x526B,0xE5919F:0x526C,0xE591B1:0x526D,0xE591B7:0x526E,\n0xE591B0:0x526F,0xE59292:0x5270,0xE591BB:0x5271,0xE59280:0x5272,0xE591B6:0x5273,\n0xE59284:0x5274,0xE59290:0x5275,0xE59286:0x5276,0xE59387:0x5277,0xE592A2:0x5278,\n0xE592B8:0x5279,0xE592A5:0x527A,0xE592AC:0x527B,0xE59384:0x527C,0xE59388:0x527D,\n0xE592A8:0x527E,0xE592AB:0x5321,0xE59382:0x5322,0xE592A4:0x5323,0xE592BE:0x5324,\n0xE592BC:0x5325,0xE59398:0x5326,0xE593A5:0x5327,0xE593A6:0x5328,0xE5948F:0x5329,\n0xE59494:0x532A,0xE593BD:0x532B,0xE593AE:0x532C,0xE593AD:0x532D,0xE593BA:0x532E,\n0xE593A2:0x532F,0xE594B9:0x5330,0xE59580:0x5331,0xE595A3:0x5332,0xE5958C:0x5333,\n0xE594AE:0x5334,0xE5959C:0x5335,0xE59585:0x5336,0xE59596:0x5337,0xE59597:0x5338,\n0xE594B8:0x5339,0xE594B3:0x533A,0xE5959D:0x533B,0xE59699:0x533C,0xE59680:0x533D,\n0xE592AF:0x533E,0xE5968A:0x533F,0xE5969F:0x5340,0xE595BB:0x5341,0xE595BE:0x5342,\n0xE59698:0x5343,0xE5969E:0x5344,0xE596AE:0x5345,0xE595BC:0x5346,0xE59683:0x5347,\n0xE596A9:0x5348,0xE59687:0x5349,0xE596A8:0x534A,0xE5979A:0x534B,0xE59785:0x534C,\n0xE5979F:0x534D,0xE59784:0x534E,0xE5979C:0x534F,0xE597A4:0x5350,0xE59794:0x5351,\n0xE59894:0x5352,0xE597B7:0x5353,0xE59896:0x5354,0xE597BE:0x5355,0xE597BD:0x5356,\n0xE5989B:0x5357,0xE597B9:0x5358,0xE5998E:0x5359,0xE59990:0x535A,0xE7879F:0x535B,\n0xE598B4:0x535C,0xE598B6:0x535D,0xE598B2:0x535E,0xE598B8:0x535F,0xE599AB:0x5360,\n0xE599A4:0x5361,0xE598AF:0x5362,0xE599AC:0x5363,0xE599AA:0x5364,0xE59A86:0x5365,\n0xE59A80:0x5366,0xE59A8A:0x5367,0xE59AA0:0x5368,0xE59A94:0x5369,0xE59A8F:0x536A,\n0xE59AA5:0x536B,0xE59AAE:0x536C,0xE59AB6:0x536D,0xE59AB4:0x536E,0xE59B82:0x536F,\n0xE59ABC:0x5370,0xE59B81:0x5371,0xE59B83:0x5372,0xE59B80:0x5373,0xE59B88:0x5374,\n0xE59B8E:0x5375,0xE59B91:0x5376,0xE59B93:0x5377,0xE59B97:0x5378,0xE59BAE:0x5379,\n0xE59BB9:0x537A,0xE59C80:0x537B,0xE59BBF:0x537C,0xE59C84:0x537D,0xE59C89:0x537E,\n0xE59C88:0x5421,0xE59C8B:0x5422,0xE59C8D:0x5423,0xE59C93:0x5424,0xE59C98:0x5425,\n0xE59C96:0x5426,0xE59787:0x5427,0xE59C9C:0x5428,0xE59CA6:0x5429,0xE59CB7:0x542A,\n0xE59CB8:0x542B,0xE59D8E:0x542C,0xE59CBB:0x542D,0xE59D80:0x542E,0xE59D8F:0x542F,\n0xE59DA9:0x5430,0xE59F80:0x5431,0xE59E88:0x5432,0xE59DA1:0x5433,0xE59DBF:0x5434,\n0xE59E89:0x5435,0xE59E93:0x5436,0xE59EA0:0x5437,0xE59EB3:0x5438,0xE59EA4:0x5439,\n0xE59EAA:0x543A,0xE59EB0:0x543B,0xE59F83:0x543C,0xE59F86:0x543D,0xE59F94:0x543E,\n0xE59F92:0x543F,0xE59F93:0x5440,0xE5A08A:0x5441,0xE59F96:0x5442,0xE59FA3:0x5443,\n0xE5A08B:0x5444,0xE5A099:0x5445,0xE5A09D:0x5446,0xE5A1B2:0x5447,0xE5A0A1:0x5448,\n0xE5A1A2:0x5449,0xE5A18B:0x544A,0xE5A1B0:0x544B,0xE6AF80:0x544C,0xE5A192:0x544D,\n0xE5A0BD:0x544E,0xE5A1B9:0x544F,0xE5A285:0x5450,0xE5A2B9:0x5451,0xE5A29F:0x5452,\n0xE5A2AB:0x5453,0xE5A2BA:0x5454,0xE5A39E:0x5455,0xE5A2BB:0x5456,0xE5A2B8:0x5457,\n0xE5A2AE:0x5458,0xE5A385:0x5459,0xE5A393:0x545A,0xE5A391:0x545B,0xE5A397:0x545C,\n0xE5A399:0x545D,0xE5A398:0x545E,0xE5A3A5:0x545F,0xE5A39C:0x5460,0xE5A3A4:0x5461,\n0xE5A39F:0x5462,0xE5A3AF:0x5463,0xE5A3BA:0x5464,0xE5A3B9:0x5465,0xE5A3BB:0x5466,\n0xE5A3BC:0x5467,0xE5A3BD:0x5468,0xE5A482:0x5469,0xE5A48A:0x546A,0xE5A490:0x546B,\n0xE5A49B:0x546C,0xE6A2A6:0x546D,0xE5A4A5:0x546E,0xE5A4AC:0x546F,0xE5A4AD:0x5470,\n0xE5A4B2:0x5471,0xE5A4B8:0x5472,0xE5A4BE:0x5473,0xE7AB92:0x5474,0xE5A595:0x5475,\n0xE5A590:0x5476,0xE5A58E:0x5477,0xE5A59A:0x5478,0xE5A598:0x5479,0xE5A5A2:0x547A,\n0xE5A5A0:0x547B,0xE5A5A7:0x547C,0xE5A5AC:0x547D,0xE5A5A9:0x547E,0xE5A5B8:0x5521,\n0xE5A681:0x5522,0xE5A69D:0x5523,0xE4BD9E:0x5524,0xE4BEAB:0x5525,0xE5A6A3:0x5526,\n0xE5A6B2:0x5527,0xE5A786:0x5528,0xE5A7A8:0x5529,0xE5A79C:0x552A,0xE5A68D:0x552B,\n0xE5A799:0x552C,0xE5A79A:0x552D,0xE5A8A5:0x552E,0xE5A89F:0x552F,0xE5A891:0x5530,\n0xE5A89C:0x5531,0xE5A889:0x5532,0xE5A89A:0x5533,0xE5A980:0x5534,0xE5A9AC:0x5535,\n0xE5A989:0x5536,0xE5A8B5:0x5537,0xE5A8B6:0x5538,0xE5A9A2:0x5539,0xE5A9AA:0x553A,\n0xE5AA9A:0x553B,0xE5AABC:0x553C,0xE5AABE:0x553D,0xE5AB8B:0x553E,0xE5AB82:0x553F,\n0xE5AABD:0x5540,0xE5ABA3:0x5541,0xE5AB97:0x5542,0xE5ABA6:0x5543,0xE5ABA9:0x5544,\n0xE5AB96:0x5545,0xE5ABBA:0x5546,0xE5ABBB:0x5547,0xE5AC8C:0x5548,0xE5AC8B:0x5549,\n0xE5AC96:0x554A,0xE5ACB2:0x554B,0xE5AB90:0x554C,0xE5ACAA:0x554D,0xE5ACB6:0x554E,\n0xE5ACBE:0x554F,0xE5AD83:0x5550,0xE5AD85:0x5551,0xE5AD80:0x5552,0xE5AD91:0x5553,\n0xE5AD95:0x5554,0xE5AD9A:0x5555,0xE5AD9B:0x5556,0xE5ADA5:0x5557,0xE5ADA9:0x5558,\n0xE5ADB0:0x5559,0xE5ADB3:0x555A,0xE5ADB5:0x555B,0xE5ADB8:0x555C,0xE69688:0x555D,\n0xE5ADBA:0x555E,0xE5AE80:0x555F,0xE5AE83:0x5560,0xE5AEA6:0x5561,0xE5AEB8:0x5562,\n0xE5AF83:0x5563,0xE5AF87:0x5564,0xE5AF89:0x5565,0xE5AF94:0x5566,0xE5AF90:0x5567,\n0xE5AFA4:0x5568,0xE5AFA6:0x5569,0xE5AFA2:0x556A,0xE5AF9E:0x556B,0xE5AFA5:0x556C,\n0xE5AFAB:0x556D,0xE5AFB0:0x556E,0xE5AFB6:0x556F,0xE5AFB3:0x5570,0xE5B085:0x5571,\n0xE5B087:0x5572,0xE5B088:0x5573,0xE5B08D:0x5574,0xE5B093:0x5575,0xE5B0A0:0x5576,\n0xE5B0A2:0x5577,0xE5B0A8:0x5578,0xE5B0B8:0x5579,0xE5B0B9:0x557A,0xE5B181:0x557B,\n0xE5B186:0x557C,0xE5B18E:0x557D,0xE5B193:0x557E,0xE5B190:0x5621,0xE5B18F:0x5622,\n0xE5ADB1:0x5623,0xE5B1AC:0x5624,0xE5B1AE:0x5625,0xE4B9A2:0x5626,0xE5B1B6:0x5627,\n0xE5B1B9:0x5628,0xE5B28C:0x5629,0xE5B291:0x562A,0xE5B294:0x562B,0xE5A69B:0x562C,\n0xE5B2AB:0x562D,0xE5B2BB:0x562E,0xE5B2B6:0x562F,0xE5B2BC:0x5630,0xE5B2B7:0x5631,\n0xE5B385:0x5632,0xE5B2BE:0x5633,0xE5B387:0x5634,0xE5B399:0x5635,0xE5B3A9:0x5636,\n0xE5B3BD:0x5637,0xE5B3BA:0x5638,0xE5B3AD:0x5639,0xE5B68C:0x563A,0xE5B3AA:0x563B,\n0xE5B48B:0x563C,0xE5B495:0x563D,0xE5B497:0x563E,0xE5B59C:0x563F,0xE5B49F:0x5640,\n0xE5B49B:0x5641,0xE5B491:0x5642,0xE5B494:0x5643,0xE5B4A2:0x5644,0xE5B49A:0x5645,\n0xE5B499:0x5646,0xE5B498:0x5647,0xE5B58C:0x5648,0xE5B592:0x5649,0xE5B58E:0x564A,\n0xE5B58B:0x564B,0xE5B5AC:0x564C,0xE5B5B3:0x564D,0xE5B5B6:0x564E,0xE5B687:0x564F,\n0xE5B684:0x5650,0xE5B682:0x5651,0xE5B6A2:0x5652,0xE5B69D:0x5653,0xE5B6AC:0x5654,\n0xE5B6AE:0x5655,0xE5B6BD:0x5656,0xE5B690:0x5657,0xE5B6B7:0x5658,0xE5B6BC:0x5659,\n0xE5B789:0x565A,0xE5B78D:0x565B,0xE5B793:0x565C,0xE5B792:0x565D,0xE5B796:0x565E,\n0xE5B79B:0x565F,0xE5B7AB:0x5660,0xE5B7B2:0x5661,0xE5B7B5:0x5662,0xE5B88B:0x5663,\n0xE5B89A:0x5664,0xE5B899:0x5665,0xE5B891:0x5666,0xE5B89B:0x5667,0xE5B8B6:0x5668,\n0xE5B8B7:0x5669,0xE5B984:0x566A,0xE5B983:0x566B,0xE5B980:0x566C,0xE5B98E:0x566D,\n0xE5B997:0x566E,0xE5B994:0x566F,0xE5B99F:0x5670,0xE5B9A2:0x5671,0xE5B9A4:0x5672,\n0xE5B987:0x5673,0xE5B9B5:0x5674,0xE5B9B6:0x5675,0xE5B9BA:0x5676,0xE9BABC:0x5677,\n0xE5B9BF:0x5678,0xE5BAA0:0x5679,0xE5BB81:0x567A,0xE5BB82:0x567B,0xE5BB88:0x567C,\n0xE5BB90:0x567D,0xE5BB8F:0x567E,0xE5BB96:0x5721,0xE5BBA3:0x5722,0xE5BB9D:0x5723,\n0xE5BB9A:0x5724,0xE5BB9B:0x5725,0xE5BBA2:0x5726,0xE5BBA1:0x5727,0xE5BBA8:0x5728,\n0xE5BBA9:0x5729,0xE5BBAC:0x572A,0xE5BBB1:0x572B,0xE5BBB3:0x572C,0xE5BBB0:0x572D,\n0xE5BBB4:0x572E,0xE5BBB8:0x572F,0xE5BBBE:0x5730,0xE5BC83:0x5731,0xE5BC89:0x5732,\n0xE5BD9D:0x5733,0xE5BD9C:0x5734,0xE5BC8B:0x5735,0xE5BC91:0x5736,0xE5BC96:0x5737,\n0xE5BCA9:0x5738,0xE5BCAD:0x5739,0xE5BCB8:0x573A,0xE5BD81:0x573B,0xE5BD88:0x573C,\n0xE5BD8C:0x573D,0xE5BD8E:0x573E,0xE5BCAF:0x573F,0xE5BD91:0x5740,0xE5BD96:0x5741,\n0xE5BD97:0x5742,0xE5BD99:0x5743,0xE5BDA1:0x5744,0xE5BDAD:0x5745,0xE5BDB3:0x5746,\n0xE5BDB7:0x5747,0xE5BE83:0x5748,0xE5BE82:0x5749,0xE5BDBF:0x574A,0xE5BE8A:0x574B,\n0xE5BE88:0x574C,0xE5BE91:0x574D,0xE5BE87:0x574E,0xE5BE9E:0x574F,0xE5BE99:0x5750,\n0xE5BE98:0x5751,0xE5BEA0:0x5752,0xE5BEA8:0x5753,0xE5BEAD:0x5754,0xE5BEBC:0x5755,\n0xE5BF96:0x5756,0xE5BFBB:0x5757,0xE5BFA4:0x5758,0xE5BFB8:0x5759,0xE5BFB1:0x575A,\n0xE5BF9D:0x575B,0xE682B3:0x575C,0xE5BFBF:0x575D,0xE680A1:0x575E,0xE681A0:0x575F,\n0xE68099:0x5760,0xE68090:0x5761,0xE680A9:0x5762,0xE6808E:0x5763,0xE680B1:0x5764,\n0xE6809B:0x5765,0xE68095:0x5766,0xE680AB:0x5767,0xE680A6:0x5768,0xE6808F:0x5769,\n0xE680BA:0x576A,0xE6819A:0x576B,0xE68181:0x576C,0xE681AA:0x576D,0xE681B7:0x576E,\n0xE6819F:0x576F,0xE6818A:0x5770,0xE68186:0x5771,0xE6818D:0x5772,0xE681A3:0x5773,\n0xE68183:0x5774,0xE681A4:0x5775,0xE68182:0x5776,0xE681AC:0x5777,0xE681AB:0x5778,\n0xE68199:0x5779,0xE68281:0x577A,0xE6828D:0x577B,0xE683A7:0x577C,0xE68283:0x577D,\n0xE6829A:0x577E,0xE68284:0x5821,0xE6829B:0x5822,0xE68296:0x5823,0xE68297:0x5824,\n0xE68292:0x5825,0xE682A7:0x5826,0xE6828B:0x5827,0xE683A1:0x5828,0xE682B8:0x5829,\n0xE683A0:0x582A,0xE68393:0x582B,0xE682B4:0x582C,0xE5BFB0:0x582D,0xE682BD:0x582E,\n0xE68386:0x582F,0xE682B5:0x5830,0xE68398:0x5831,0xE6858D:0x5832,0xE68495:0x5833,\n0xE68486:0x5834,0xE683B6:0x5835,0xE683B7:0x5836,0xE68480:0x5837,0xE683B4:0x5838,\n0xE683BA:0x5839,0xE68483:0x583A,0xE684A1:0x583B,0xE683BB:0x583C,0xE683B1:0x583D,\n0xE6848D:0x583E,0xE6848E:0x583F,0xE68587:0x5840,0xE684BE:0x5841,0xE684A8:0x5842,\n0xE684A7:0x5843,0xE6858A:0x5844,0xE684BF:0x5845,0xE684BC:0x5846,0xE684AC:0x5847,\n0xE684B4:0x5848,0xE684BD:0x5849,0xE68582:0x584A,0xE68584:0x584B,0xE685B3:0x584C,\n0xE685B7:0x584D,0xE68598:0x584E,0xE68599:0x584F,0xE6859A:0x5850,0xE685AB:0x5851,\n0xE685B4:0x5852,0xE685AF:0x5853,0xE685A5:0x5854,0xE685B1:0x5855,0xE6859F:0x5856,\n0xE6859D:0x5857,0xE68593:0x5858,0xE685B5:0x5859,0xE68699:0x585A,0xE68696:0x585B,\n0xE68687:0x585C,0xE686AC:0x585D,0xE68694:0x585E,0xE6869A:0x585F,0xE6868A:0x5860,\n0xE68691:0x5861,0xE686AB:0x5862,0xE686AE:0x5863,0xE6878C:0x5864,0xE6878A:0x5865,\n0xE68789:0x5866,0xE687B7:0x5867,0xE68788:0x5868,0xE68783:0x5869,0xE68786:0x586A,\n0xE686BA:0x586B,0xE6878B:0x586C,0xE7BDB9:0x586D,0xE6878D:0x586E,0xE687A6:0x586F,\n0xE687A3:0x5870,0xE687B6:0x5871,0xE687BA:0x5872,0xE687B4:0x5873,0xE687BF:0x5874,\n0xE687BD:0x5875,0xE687BC:0x5876,0xE687BE:0x5877,0xE68880:0x5878,0xE68888:0x5879,\n0xE68889:0x587A,0xE6888D:0x587B,0xE6888C:0x587C,0xE68894:0x587D,0xE6889B:0x587E,\n0xE6889E:0x5921,0xE688A1:0x5922,0xE688AA:0x5923,0xE688AE:0x5924,0xE688B0:0x5925,\n0xE688B2:0x5926,0xE688B3:0x5927,0xE68981:0x5928,0xE6898E:0x5929,0xE6899E:0x592A,\n0xE689A3:0x592B,0xE6899B:0x592C,0xE689A0:0x592D,0xE689A8:0x592E,0xE689BC:0x592F,\n0xE68A82:0x5930,0xE68A89:0x5931,0xE689BE:0x5932,0xE68A92:0x5933,0xE68A93:0x5934,\n0xE68A96:0x5935,0xE68B94:0x5936,0xE68A83:0x5937,0xE68A94:0x5938,0xE68B97:0x5939,\n0xE68B91:0x593A,0xE68ABB:0x593B,0xE68B8F:0x593C,0xE68BBF:0x593D,0xE68B86:0x593E,\n0xE69394:0x593F,0xE68B88:0x5940,0xE68B9C:0x5941,0xE68B8C:0x5942,0xE68B8A:0x5943,\n0xE68B82:0x5944,0xE68B87:0x5945,0xE68A9B:0x5946,0xE68B89:0x5947,0xE68C8C:0x5948,\n0xE68BAE:0x5949,0xE68BB1:0x594A,0xE68CA7:0x594B,0xE68C82:0x594C,0xE68C88:0x594D,\n0xE68BAF:0x594E,0xE68BB5:0x594F,0xE68D90:0x5950,0xE68CBE:0x5951,0xE68D8D:0x5952,\n0xE6909C:0x5953,0xE68D8F:0x5954,0xE68E96:0x5955,0xE68E8E:0x5956,0xE68E80:0x5957,\n0xE68EAB:0x5958,0xE68DB6:0x5959,0xE68EA3:0x595A,0xE68E8F:0x595B,0xE68E89:0x595C,\n0xE68E9F:0x595D,0xE68EB5:0x595E,0xE68DAB:0x595F,0xE68DA9:0x5960,0xE68EBE:0x5961,\n0xE68FA9:0x5962,0xE68F80:0x5963,0xE68F86:0x5964,0xE68FA3:0x5965,0xE68F89:0x5966,\n0xE68F92:0x5967,0xE68FB6:0x5968,0xE68F84:0x5969,0xE69096:0x596A,0xE690B4:0x596B,\n0xE69086:0x596C,0xE69093:0x596D,0xE690A6:0x596E,0xE690B6:0x596F,0xE6949D:0x5970,\n0xE69097:0x5971,0xE690A8:0x5972,0xE6908F:0x5973,0xE691A7:0x5974,0xE691AF:0x5975,\n0xE691B6:0x5976,0xE6918E:0x5977,0xE694AA:0x5978,0xE69295:0x5979,0xE69293:0x597A,\n0xE692A5:0x597B,0xE692A9:0x597C,0xE69288:0x597D,0xE692BC:0x597E,0xE6939A:0x5A21,\n0xE69392:0x5A22,0xE69385:0x5A23,0xE69387:0x5A24,0xE692BB:0x5A25,0xE69398:0x5A26,\n0xE69382:0x5A27,0xE693B1:0x5A28,0xE693A7:0x5A29,0xE88889:0x5A2A,0xE693A0:0x5A2B,\n0xE693A1:0x5A2C,0xE68AAC:0x5A2D,0xE693A3:0x5A2E,0xE693AF:0x5A2F,0xE694AC:0x5A30,\n0xE693B6:0x5A31,0xE693B4:0x5A32,0xE693B2:0x5A33,0xE693BA:0x5A34,0xE69480:0x5A35,\n0xE693BD:0x5A36,0xE69498:0x5A37,0xE6949C:0x5A38,0xE69485:0x5A39,0xE694A4:0x5A3A,\n0xE694A3:0x5A3B,0xE694AB:0x5A3C,0xE694B4:0x5A3D,0xE694B5:0x5A3E,0xE694B7:0x5A3F,\n0xE694B6:0x5A40,0xE694B8:0x5A41,0xE7958B:0x5A42,0xE69588:0x5A43,0xE69596:0x5A44,\n0xE69595:0x5A45,0xE6958D:0x5A46,0xE69598:0x5A47,0xE6959E:0x5A48,0xE6959D:0x5A49,\n0xE695B2:0x5A4A,0xE695B8:0x5A4B,0xE69682:0x5A4C,0xE69683:0x5A4D,0xE8AE8A:0x5A4E,\n0xE6969B:0x5A4F,0xE6969F:0x5A50,0xE696AB:0x5A51,0xE696B7:0x5A52,0xE69783:0x5A53,\n0xE69786:0x5A54,0xE69781:0x5A55,0xE69784:0x5A56,0xE6978C:0x5A57,0xE69792:0x5A58,\n0xE6979B:0x5A59,0xE69799:0x5A5A,0xE697A0:0x5A5B,0xE697A1:0x5A5C,0xE697B1:0x5A5D,\n0xE69DB2:0x5A5E,0xE6988A:0x5A5F,0xE69883:0x5A60,0xE697BB:0x5A61,0xE69DB3:0x5A62,\n0xE698B5:0x5A63,0xE698B6:0x5A64,0xE698B4:0x5A65,0xE6989C:0x5A66,0xE6998F:0x5A67,\n0xE69984:0x5A68,0xE69989:0x5A69,0xE69981:0x5A6A,0xE6999E:0x5A6B,0xE6999D:0x5A6C,\n0xE699A4:0x5A6D,0xE699A7:0x5A6E,0xE699A8:0x5A6F,0xE6999F:0x5A70,0xE699A2:0x5A71,\n0xE699B0:0x5A72,0xE69A83:0x5A73,0xE69A88:0x5A74,0xE69A8E:0x5A75,0xE69A89:0x5A76,\n0xE69A84:0x5A77,0xE69A98:0x5A78,0xE69A9D:0x5A79,0xE69B81:0x5A7A,0xE69AB9:0x5A7B,\n0xE69B89:0x5A7C,0xE69ABE:0x5A7D,0xE69ABC:0x5A7E,0xE69B84:0x5B21,0xE69AB8:0x5B22,\n0xE69B96:0x5B23,0xE69B9A:0x5B24,0xE69BA0:0x5B25,0xE698BF:0x5B26,0xE69BA6:0x5B27,\n0xE69BA9:0x5B28,0xE69BB0:0x5B29,0xE69BB5:0x5B2A,0xE69BB7:0x5B2B,0xE69C8F:0x5B2C,\n0xE69C96:0x5B2D,0xE69C9E:0x5B2E,0xE69CA6:0x5B2F,0xE69CA7:0x5B30,0xE99CB8:0x5B31,\n0xE69CAE:0x5B32,0xE69CBF:0x5B33,0xE69CB6:0x5B34,0xE69D81:0x5B35,0xE69CB8:0x5B36,\n0xE69CB7:0x5B37,0xE69D86:0x5B38,0xE69D9E:0x5B39,0xE69DA0:0x5B3A,0xE69D99:0x5B3B,\n0xE69DA3:0x5B3C,0xE69DA4:0x5B3D,0xE69E89:0x5B3E,0xE69DB0:0x5B3F,0xE69EA9:0x5B40,\n0xE69DBC:0x5B41,0xE69DAA:0x5B42,0xE69E8C:0x5B43,0xE69E8B:0x5B44,0xE69EA6:0x5B45,\n0xE69EA1:0x5B46,0xE69E85:0x5B47,0xE69EB7:0x5B48,0xE69FAF:0x5B49,0xE69EB4:0x5B4A,\n0xE69FAC:0x5B4B,0xE69EB3:0x5B4C,0xE69FA9:0x5B4D,0xE69EB8:0x5B4E,0xE69FA4:0x5B4F,\n0xE69F9E:0x5B50,0xE69F9D:0x5B51,0xE69FA2:0x5B52,0xE69FAE:0x5B53,0xE69EB9:0x5B54,\n0xE69F8E:0x5B55,0xE69F86:0x5B56,0xE69FA7:0x5B57,0xE6AA9C:0x5B58,0xE6A09E:0x5B59,\n0xE6A186:0x5B5A,0xE6A0A9:0x5B5B,0xE6A180:0x5B5C,0xE6A18D:0x5B5D,0xE6A0B2:0x5B5E,\n0xE6A18E:0x5B5F,0xE6A2B3:0x5B60,0xE6A0AB:0x5B61,0xE6A199:0x5B62,0xE6A1A3:0x5B63,\n0xE6A1B7:0x5B64,0xE6A1BF:0x5B65,0xE6A29F:0x5B66,0xE6A28F:0x5B67,0xE6A2AD:0x5B68,\n0xE6A294:0x5B69,0xE6A29D:0x5B6A,0xE6A29B:0x5B6B,0xE6A283:0x5B6C,0xE6AAAE:0x5B6D,\n0xE6A2B9:0x5B6E,0xE6A1B4:0x5B6F,0xE6A2B5:0x5B70,0xE6A2A0:0x5B71,0xE6A2BA:0x5B72,\n0xE6A48F:0x5B73,0xE6A28D:0x5B74,0xE6A1BE:0x5B75,0xE6A481:0x5B76,0xE6A38A:0x5B77,\n0xE6A488:0x5B78,0xE6A398:0x5B79,0xE6A4A2:0x5B7A,0xE6A4A6:0x5B7B,0xE6A3A1:0x5B7C,\n0xE6A48C:0x5B7D,0xE6A38D:0x5B7E,0xE6A394:0x5C21,0xE6A3A7:0x5C22,0xE6A395:0x5C23,\n0xE6A4B6:0x5C24,0xE6A492:0x5C25,0xE6A484:0x5C26,0xE6A397:0x5C27,0xE6A3A3:0x5C28,\n0xE6A4A5:0x5C29,0xE6A3B9:0x5C2A,0xE6A3A0:0x5C2B,0xE6A3AF:0x5C2C,0xE6A4A8:0x5C2D,\n0xE6A4AA:0x5C2E,0xE6A49A:0x5C2F,0xE6A4A3:0x5C30,0xE6A4A1:0x5C31,0xE6A386:0x5C32,\n0xE6A5B9:0x5C33,0xE6A5B7:0x5C34,0xE6A59C:0x5C35,0xE6A5B8:0x5C36,0xE6A5AB:0x5C37,\n0xE6A594:0x5C38,0xE6A5BE:0x5C39,0xE6A5AE:0x5C3A,0xE6A4B9:0x5C3B,0xE6A5B4:0x5C3C,\n0xE6A4BD:0x5C3D,0xE6A599:0x5C3E,0xE6A4B0:0x5C3F,0xE6A5A1:0x5C40,0xE6A59E:0x5C41,\n0xE6A59D:0x5C42,0xE6A681:0x5C43,0xE6A5AA:0x5C44,0xE6A6B2:0x5C45,0xE6A6AE:0x5C46,\n0xE6A790:0x5C47,0xE6A6BF:0x5C48,0xE6A781:0x5C49,0xE6A793:0x5C4A,0xE6A6BE:0x5C4B,\n0xE6A78E:0x5C4C,0xE5AFA8:0x5C4D,0xE6A78A:0x5C4E,0xE6A79D:0x5C4F,0xE6A6BB:0x5C50,\n0xE6A783:0x5C51,0xE6A6A7:0x5C52,0xE6A8AE:0x5C53,0xE6A691:0x5C54,0xE6A6A0:0x5C55,\n0xE6A69C:0x5C56,0xE6A695:0x5C57,0xE6A6B4:0x5C58,0xE6A79E:0x5C59,0xE6A7A8:0x5C5A,\n0xE6A882:0x5C5B,0xE6A89B:0x5C5C,0xE6A7BF:0x5C5D,0xE6AC8A:0x5C5E,0xE6A7B9:0x5C5F,\n0xE6A7B2:0x5C60,0xE6A7A7:0x5C61,0xE6A885:0x5C62,0xE6A6B1:0x5C63,0xE6A89E:0x5C64,\n0xE6A7AD:0x5C65,0xE6A894:0x5C66,0xE6A7AB:0x5C67,0xE6A88A:0x5C68,0xE6A892:0x5C69,\n0xE6AB81:0x5C6A,0xE6A8A3:0x5C6B,0xE6A893:0x5C6C,0xE6A984:0x5C6D,0xE6A88C:0x5C6E,\n0xE6A9B2:0x5C6F,0xE6A8B6:0x5C70,0xE6A9B8:0x5C71,0xE6A987:0x5C72,0xE6A9A2:0x5C73,\n0xE6A999:0x5C74,0xE6A9A6:0x5C75,0xE6A988:0x5C76,0xE6A8B8:0x5C77,0xE6A8A2:0x5C78,\n0xE6AA90:0x5C79,0xE6AA8D:0x5C7A,0xE6AAA0:0x5C7B,0xE6AA84:0x5C7C,0xE6AAA2:0x5C7D,\n0xE6AAA3:0x5C7E,0xE6AA97:0x5D21,0xE89897:0x5D22,0xE6AABB:0x5D23,0xE6AB83:0x5D24,\n0xE6AB82:0x5D25,0xE6AAB8:0x5D26,0xE6AAB3:0x5D27,0xE6AAAC:0x5D28,0xE6AB9E:0x5D29,\n0xE6AB91:0x5D2A,0xE6AB9F:0x5D2B,0xE6AAAA:0x5D2C,0xE6AB9A:0x5D2D,0xE6ABAA:0x5D2E,\n0xE6ABBB:0x5D2F,0xE6AC85:0x5D30,0xE89896:0x5D31,0xE6ABBA:0x5D32,0xE6AC92:0x5D33,\n0xE6AC96:0x5D34,0xE9ACB1:0x5D35,0xE6AC9F:0x5D36,0xE6ACB8:0x5D37,0xE6ACB7:0x5D38,\n0xE79B9C:0x5D39,0xE6ACB9:0x5D3A,0xE9A3AE:0x5D3B,0xE6AD87:0x5D3C,0xE6AD83:0x5D3D,\n0xE6AD89:0x5D3E,0xE6AD90:0x5D3F,0xE6AD99:0x5D40,0xE6AD94:0x5D41,0xE6AD9B:0x5D42,\n0xE6AD9F:0x5D43,0xE6ADA1:0x5D44,0xE6ADB8:0x5D45,0xE6ADB9:0x5D46,0xE6ADBF:0x5D47,\n0xE6AE80:0x5D48,0xE6AE84:0x5D49,0xE6AE83:0x5D4A,0xE6AE8D:0x5D4B,0xE6AE98:0x5D4C,\n0xE6AE95:0x5D4D,0xE6AE9E:0x5D4E,0xE6AEA4:0x5D4F,0xE6AEAA:0x5D50,0xE6AEAB:0x5D51,\n0xE6AEAF:0x5D52,0xE6AEB2:0x5D53,0xE6AEB1:0x5D54,0xE6AEB3:0x5D55,0xE6AEB7:0x5D56,\n0xE6AEBC:0x5D57,0xE6AF86:0x5D58,0xE6AF8B:0x5D59,0xE6AF93:0x5D5A,0xE6AF9F:0x5D5B,\n0xE6AFAC:0x5D5C,0xE6AFAB:0x5D5D,0xE6AFB3:0x5D5E,0xE6AFAF:0x5D5F,0xE9BABE:0x5D60,\n0xE6B088:0x5D61,0xE6B093:0x5D62,0xE6B094:0x5D63,0xE6B09B:0x5D64,0xE6B0A4:0x5D65,\n0xE6B0A3:0x5D66,0xE6B19E:0x5D67,0xE6B195:0x5D68,0xE6B1A2:0x5D69,0xE6B1AA:0x5D6A,\n0xE6B282:0x5D6B,0xE6B28D:0x5D6C,0xE6B29A:0x5D6D,0xE6B281:0x5D6E,0xE6B29B:0x5D6F,\n0xE6B1BE:0x5D70,0xE6B1A8:0x5D71,0xE6B1B3:0x5D72,0xE6B292:0x5D73,0xE6B290:0x5D74,\n0xE6B384:0x5D75,0xE6B3B1:0x5D76,0xE6B393:0x5D77,0xE6B2BD:0x5D78,0xE6B397:0x5D79,\n0xE6B385:0x5D7A,0xE6B39D:0x5D7B,0xE6B2AE:0x5D7C,0xE6B2B1:0x5D7D,0xE6B2BE:0x5D7E,\n0xE6B2BA:0x5E21,0xE6B39B:0x5E22,0xE6B3AF:0x5E23,0xE6B399:0x5E24,0xE6B3AA:0x5E25,\n0xE6B49F:0x5E26,0xE8A18D:0x5E27,0xE6B4B6:0x5E28,0xE6B4AB:0x5E29,0xE6B4BD:0x5E2A,\n0xE6B4B8:0x5E2B,0xE6B499:0x5E2C,0xE6B4B5:0x5E2D,0xE6B4B3:0x5E2E,0xE6B492:0x5E2F,\n0xE6B48C:0x5E30,0xE6B5A3:0x5E31,0xE6B693:0x5E32,0xE6B5A4:0x5E33,0xE6B59A:0x5E34,\n0xE6B5B9:0x5E35,0xE6B599:0x5E36,0xE6B68E:0x5E37,0xE6B695:0x5E38,0xE6BFA4:0x5E39,\n0xE6B685:0x5E3A,0xE6B7B9:0x5E3B,0xE6B895:0x5E3C,0xE6B88A:0x5E3D,0xE6B6B5:0x5E3E,\n0xE6B787:0x5E3F,0xE6B7A6:0x5E40,0xE6B6B8:0x5E41,0xE6B786:0x5E42,0xE6B7AC:0x5E43,\n0xE6B79E:0x5E44,0xE6B78C:0x5E45,0xE6B7A8:0x5E46,0xE6B792:0x5E47,0xE6B785:0x5E48,\n0xE6B7BA:0x5E49,0xE6B799:0x5E4A,0xE6B7A4:0x5E4B,0xE6B795:0x5E4C,0xE6B7AA:0x5E4D,\n0xE6B7AE:0x5E4E,0xE6B8AD:0x5E4F,0xE6B9AE:0x5E50,0xE6B8AE:0x5E51,0xE6B899:0x5E52,\n0xE6B9B2:0x5E53,0xE6B99F:0x5E54,0xE6B8BE:0x5E55,0xE6B8A3:0x5E56,0xE6B9AB:0x5E57,\n0xE6B8AB:0x5E58,0xE6B9B6:0x5E59,0xE6B98D:0x5E5A,0xE6B89F:0x5E5B,0xE6B983:0x5E5C,\n0xE6B8BA:0x5E5D,0xE6B98E:0x5E5E,0xE6B8A4:0x5E5F,0xE6BBBF:0x5E60,0xE6B89D:0x5E61,\n0xE6B8B8:0x5E62,0xE6BA82:0x5E63,0xE6BAAA:0x5E64,0xE6BA98:0x5E65,0xE6BB89:0x5E66,\n0xE6BAB7:0x5E67,0xE6BB93:0x5E68,0xE6BABD:0x5E69,0xE6BAAF:0x5E6A,0xE6BB84:0x5E6B,\n0xE6BAB2:0x5E6C,0xE6BB94:0x5E6D,0xE6BB95:0x5E6E,0xE6BA8F:0x5E6F,0xE6BAA5:0x5E70,\n0xE6BB82:0x5E71,0xE6BA9F:0x5E72,0xE6BD81:0x5E73,0xE6BC91:0x5E74,0xE7818C:0x5E75,\n0xE6BBAC:0x5E76,0xE6BBB8:0x5E77,0xE6BBBE:0x5E78,0xE6BCBF:0x5E79,0xE6BBB2:0x5E7A,\n0xE6BCB1:0x5E7B,0xE6BBAF:0x5E7C,0xE6BCB2:0x5E7D,0xE6BB8C:0x5E7E,0xE6BCBE:0x5F21,\n0xE6BC93:0x5F22,0xE6BBB7:0x5F23,0xE6BE86:0x5F24,0xE6BDBA:0x5F25,0xE6BDB8:0x5F26,\n0xE6BE81:0x5F27,0xE6BE80:0x5F28,0xE6BDAF:0x5F29,0xE6BD9B:0x5F2A,0xE6BFB3:0x5F2B,\n0xE6BDAD:0x5F2C,0xE6BE82:0x5F2D,0xE6BDBC:0x5F2E,0xE6BD98:0x5F2F,0xE6BE8E:0x5F30,\n0xE6BE91:0x5F31,0xE6BF82:0x5F32,0xE6BDA6:0x5F33,0xE6BEB3:0x5F34,0xE6BEA3:0x5F35,\n0xE6BEA1:0x5F36,0xE6BEA4:0x5F37,0xE6BEB9:0x5F38,0xE6BF86:0x5F39,0xE6BEAA:0x5F3A,\n0xE6BF9F:0x5F3B,0xE6BF95:0x5F3C,0xE6BFAC:0x5F3D,0xE6BF94:0x5F3E,0xE6BF98:0x5F3F,\n0xE6BFB1:0x5F40,0xE6BFAE:0x5F41,0xE6BF9B:0x5F42,0xE78089:0x5F43,0xE7808B:0x5F44,\n0xE6BFBA:0x5F45,0xE78091:0x5F46,0xE78081:0x5F47,0xE7808F:0x5F48,0xE6BFBE:0x5F49,\n0xE7809B:0x5F4A,0xE7809A:0x5F4B,0xE6BDB4:0x5F4C,0xE7809D:0x5F4D,0xE78098:0x5F4E,\n0xE7809F:0x5F4F,0xE780B0:0x5F50,0xE780BE:0x5F51,0xE780B2:0x5F52,0xE78191:0x5F53,\n0xE781A3:0x5F54,0xE78299:0x5F55,0xE78292:0x5F56,0xE782AF:0x5F57,0xE783B1:0x5F58,\n0xE782AC:0x5F59,0xE782B8:0x5F5A,0xE782B3:0x5F5B,0xE782AE:0x5F5C,0xE7839F:0x5F5D,\n0xE7838B:0x5F5E,0xE7839D:0x5F5F,0xE78399:0x5F60,0xE78489:0x5F61,0xE783BD:0x5F62,\n0xE7849C:0x5F63,0xE78499:0x5F64,0xE785A5:0x5F65,0xE78595:0x5F66,0xE78688:0x5F67,\n0xE785A6:0x5F68,0xE785A2:0x5F69,0xE7858C:0x5F6A,0xE78596:0x5F6B,0xE785AC:0x5F6C,\n0xE7868F:0x5F6D,0xE787BB:0x5F6E,0xE78684:0x5F6F,0xE78695:0x5F70,0xE786A8:0x5F71,\n0xE786AC:0x5F72,0xE78797:0x5F73,0xE786B9:0x5F74,0xE786BE:0x5F75,0xE78792:0x5F76,\n0xE78789:0x5F77,0xE78794:0x5F78,0xE7878E:0x5F79,0xE787A0:0x5F7A,0xE787AC:0x5F7B,\n0xE787A7:0x5F7C,0xE787B5:0x5F7D,0xE787BC:0x5F7E,0xE787B9:0x6021,0xE787BF:0x6022,\n0xE7888D:0x6023,0xE78890:0x6024,0xE7889B:0x6025,0xE788A8:0x6026,0xE788AD:0x6027,\n0xE788AC:0x6028,0xE788B0:0x6029,0xE788B2:0x602A,0xE788BB:0x602B,0xE788BC:0x602C,\n0xE788BF:0x602D,0xE78980:0x602E,0xE78986:0x602F,0xE7898B:0x6030,0xE78998:0x6031,\n0xE789B4:0x6032,0xE789BE:0x6033,0xE78A82:0x6034,0xE78A81:0x6035,0xE78A87:0x6036,\n0xE78A92:0x6037,0xE78A96:0x6038,0xE78AA2:0x6039,0xE78AA7:0x603A,0xE78AB9:0x603B,\n0xE78AB2:0x603C,0xE78B83:0x603D,0xE78B86:0x603E,0xE78B84:0x603F,0xE78B8E:0x6040,\n0xE78B92:0x6041,0xE78BA2:0x6042,0xE78BA0:0x6043,0xE78BA1:0x6044,0xE78BB9:0x6045,\n0xE78BB7:0x6046,0xE5808F:0x6047,0xE78C97:0x6048,0xE78C8A:0x6049,0xE78C9C:0x604A,\n0xE78C96:0x604B,0xE78C9D:0x604C,0xE78CB4:0x604D,0xE78CAF:0x604E,0xE78CA9:0x604F,\n0xE78CA5:0x6050,0xE78CBE:0x6051,0xE78D8E:0x6052,0xE78D8F:0x6053,0xE9BB98:0x6054,\n0xE78D97:0x6055,0xE78DAA:0x6056,0xE78DA8:0x6057,0xE78DB0:0x6058,0xE78DB8:0x6059,\n0xE78DB5:0x605A,0xE78DBB:0x605B,0xE78DBA:0x605C,0xE78F88:0x605D,0xE78EB3:0x605E,\n0xE78F8E:0x605F,0xE78EBB:0x6060,0xE78F80:0x6061,0xE78FA5:0x6062,0xE78FAE:0x6063,\n0xE78F9E:0x6064,0xE792A2:0x6065,0xE79085:0x6066,0xE791AF:0x6067,0xE790A5:0x6068,\n0xE78FB8:0x6069,0xE790B2:0x606A,0xE790BA:0x606B,0xE79195:0x606C,0xE790BF:0x606D,\n0xE7919F:0x606E,0xE79199:0x606F,0xE79181:0x6070,0xE7919C:0x6071,0xE791A9:0x6072,\n0xE791B0:0x6073,0xE791A3:0x6074,0xE791AA:0x6075,0xE791B6:0x6076,0xE791BE:0x6077,\n0xE7928B:0x6078,0xE7929E:0x6079,0xE792A7:0x607A,0xE7938A:0x607B,0xE7938F:0x607C,\n0xE79394:0x607D,0xE78FB1:0x607E,0xE793A0:0x6121,0xE793A3:0x6122,0xE793A7:0x6123,\n0xE793A9:0x6124,0xE793AE:0x6125,0xE793B2:0x6126,0xE793B0:0x6127,0xE793B1:0x6128,\n0xE793B8:0x6129,0xE793B7:0x612A,0xE79484:0x612B,0xE79483:0x612C,0xE79485:0x612D,\n0xE7948C:0x612E,0xE7948E:0x612F,0xE7948D:0x6130,0xE79495:0x6131,0xE79493:0x6132,\n0xE7949E:0x6133,0xE794A6:0x6134,0xE794AC:0x6135,0xE794BC:0x6136,0xE79584:0x6137,\n0xE7958D:0x6138,0xE7958A:0x6139,0xE79589:0x613A,0xE7959B:0x613B,0xE79586:0x613C,\n0xE7959A:0x613D,0xE795A9:0x613E,0xE795A4:0x613F,0xE795A7:0x6140,0xE795AB:0x6141,\n0xE795AD:0x6142,0xE795B8:0x6143,0xE795B6:0x6144,0xE79686:0x6145,0xE79687:0x6146,\n0xE795B4:0x6147,0xE7968A:0x6148,0xE79689:0x6149,0xE79682:0x614A,0xE79694:0x614B,\n0xE7969A:0x614C,0xE7969D:0x614D,0xE796A5:0x614E,0xE796A3:0x614F,0xE79782:0x6150,\n0xE796B3:0x6151,0xE79783:0x6152,0xE796B5:0x6153,0xE796BD:0x6154,0xE796B8:0x6155,\n0xE796BC:0x6156,0xE796B1:0x6157,0xE7978D:0x6158,0xE7978A:0x6159,0xE79792:0x615A,\n0xE79799:0x615B,0xE797A3:0x615C,0xE7979E:0x615D,0xE797BE:0x615E,0xE797BF:0x615F,\n0xE797BC:0x6160,0xE79881:0x6161,0xE797B0:0x6162,0xE797BA:0x6163,0xE797B2:0x6164,\n0xE797B3:0x6165,0xE7988B:0x6166,0xE7988D:0x6167,0xE79889:0x6168,0xE7989F:0x6169,\n0xE798A7:0x616A,0xE798A0:0x616B,0xE798A1:0x616C,0xE798A2:0x616D,0xE798A4:0x616E,\n0xE798B4:0x616F,0xE798B0:0x6170,0xE798BB:0x6171,0xE79987:0x6172,0xE79988:0x6173,\n0xE79986:0x6174,0xE7999C:0x6175,0xE79998:0x6176,0xE799A1:0x6177,0xE799A2:0x6178,\n0xE799A8:0x6179,0xE799A9:0x617A,0xE799AA:0x617B,0xE799A7:0x617C,0xE799AC:0x617D,\n0xE799B0:0x617E,0xE799B2:0x6221,0xE799B6:0x6222,0xE799B8:0x6223,0xE799BC:0x6224,\n0xE79A80:0x6225,0xE79A83:0x6226,0xE79A88:0x6227,0xE79A8B:0x6228,0xE79A8E:0x6229,\n0xE79A96:0x622A,0xE79A93:0x622B,0xE79A99:0x622C,0xE79A9A:0x622D,0xE79AB0:0x622E,\n0xE79AB4:0x622F,0xE79AB8:0x6230,0xE79AB9:0x6231,0xE79ABA:0x6232,0xE79B82:0x6233,\n0xE79B8D:0x6234,0xE79B96:0x6235,0xE79B92:0x6236,0xE79B9E:0x6237,0xE79BA1:0x6238,\n0xE79BA5:0x6239,0xE79BA7:0x623A,0xE79BAA:0x623B,0xE898AF:0x623C,0xE79BBB:0x623D,\n0xE79C88:0x623E,0xE79C87:0x623F,0xE79C84:0x6240,0xE79CA9:0x6241,0xE79CA4:0x6242,\n0xE79C9E:0x6243,0xE79CA5:0x6244,0xE79CA6:0x6245,0xE79C9B:0x6246,0xE79CB7:0x6247,\n0xE79CB8:0x6248,0xE79D87:0x6249,0xE79D9A:0x624A,0xE79DA8:0x624B,0xE79DAB:0x624C,\n0xE79D9B:0x624D,0xE79DA5:0x624E,0xE79DBF:0x624F,0xE79DBE:0x6250,0xE79DB9:0x6251,\n0xE79E8E:0x6252,0xE79E8B:0x6253,0xE79E91:0x6254,0xE79EA0:0x6255,0xE79E9E:0x6256,\n0xE79EB0:0x6257,0xE79EB6:0x6258,0xE79EB9:0x6259,0xE79EBF:0x625A,0xE79EBC:0x625B,\n0xE79EBD:0x625C,0xE79EBB:0x625D,0xE79F87:0x625E,0xE79F8D:0x625F,0xE79F97:0x6260,\n0xE79F9A:0x6261,0xE79F9C:0x6262,0xE79FA3:0x6263,0xE79FAE:0x6264,0xE79FBC:0x6265,\n0xE7A08C:0x6266,0xE7A092:0x6267,0xE7A4A6:0x6268,0xE7A0A0:0x6269,0xE7A4AA:0x626A,\n0xE7A185:0x626B,0xE7A28E:0x626C,0xE7A1B4:0x626D,0xE7A286:0x626E,0xE7A1BC:0x626F,\n0xE7A29A:0x6270,0xE7A28C:0x6271,0xE7A2A3:0x6272,0xE7A2B5:0x6273,0xE7A2AA:0x6274,\n0xE7A2AF:0x6275,0xE7A391:0x6276,0xE7A386:0x6277,0xE7A38B:0x6278,0xE7A394:0x6279,\n0xE7A2BE:0x627A,0xE7A2BC:0x627B,0xE7A385:0x627C,0xE7A38A:0x627D,0xE7A3AC:0x627E,\n0xE7A3A7:0x6321,0xE7A39A:0x6322,0xE7A3BD:0x6323,0xE7A3B4:0x6324,0xE7A487:0x6325,\n0xE7A492:0x6326,0xE7A491:0x6327,0xE7A499:0x6328,0xE7A4AC:0x6329,0xE7A4AB:0x632A,\n0xE7A580:0x632B,0xE7A5A0:0x632C,0xE7A597:0x632D,0xE7A59F:0x632E,0xE7A59A:0x632F,\n0xE7A595:0x6330,0xE7A593:0x6331,0xE7A5BA:0x6332,0xE7A5BF:0x6333,0xE7A68A:0x6334,\n0xE7A69D:0x6335,0xE7A6A7:0x6336,0xE9BD8B:0x6337,0xE7A6AA:0x6338,0xE7A6AE:0x6339,\n0xE7A6B3:0x633A,0xE7A6B9:0x633B,0xE7A6BA:0x633C,0xE7A789:0x633D,0xE7A795:0x633E,\n0xE7A7A7:0x633F,0xE7A7AC:0x6340,0xE7A7A1:0x6341,0xE7A7A3:0x6342,0xE7A888:0x6343,\n0xE7A88D:0x6344,0xE7A898:0x6345,0xE7A899:0x6346,0xE7A8A0:0x6347,0xE7A89F:0x6348,\n0xE7A680:0x6349,0xE7A8B1:0x634A,0xE7A8BB:0x634B,0xE7A8BE:0x634C,0xE7A8B7:0x634D,\n0xE7A983:0x634E,0xE7A997:0x634F,0xE7A989:0x6350,0xE7A9A1:0x6351,0xE7A9A2:0x6352,\n0xE7A9A9:0x6353,0xE9BE9D:0x6354,0xE7A9B0:0x6355,0xE7A9B9:0x6356,0xE7A9BD:0x6357,\n0xE7AA88:0x6358,0xE7AA97:0x6359,0xE7AA95:0x635A,0xE7AA98:0x635B,0xE7AA96:0x635C,\n0xE7AAA9:0x635D,0xE7AB88:0x635E,0xE7AAB0:0x635F,0xE7AAB6:0x6360,0xE7AB85:0x6361,\n0xE7AB84:0x6362,0xE7AABF:0x6363,0xE98283:0x6364,0xE7AB87:0x6365,0xE7AB8A:0x6366,\n0xE7AB8D:0x6367,0xE7AB8F:0x6368,0xE7AB95:0x6369,0xE7AB93:0x636A,0xE7AB99:0x636B,\n0xE7AB9A:0x636C,0xE7AB9D:0x636D,0xE7ABA1:0x636E,0xE7ABA2:0x636F,0xE7ABA6:0x6370,\n0xE7ABAD:0x6371,0xE7ABB0:0x6372,0xE7AC82:0x6373,0xE7AC8F:0x6374,0xE7AC8A:0x6375,\n0xE7AC86:0x6376,0xE7ACB3:0x6377,0xE7AC98:0x6378,0xE7AC99:0x6379,0xE7AC9E:0x637A,\n0xE7ACB5:0x637B,0xE7ACA8:0x637C,0xE7ACB6:0x637D,0xE7AD90:0x637E,0xE7ADBA:0x6421,\n0xE7AC84:0x6422,0xE7AD8D:0x6423,0xE7AC8B:0x6424,0xE7AD8C:0x6425,0xE7AD85:0x6426,\n0xE7ADB5:0x6427,0xE7ADA5:0x6428,0xE7ADB4:0x6429,0xE7ADA7:0x642A,0xE7ADB0:0x642B,\n0xE7ADB1:0x642C,0xE7ADAC:0x642D,0xE7ADAE:0x642E,0xE7AE9D:0x642F,0xE7AE98:0x6430,\n0xE7AE9F:0x6431,0xE7AE8D:0x6432,0xE7AE9C:0x6433,0xE7AE9A:0x6434,0xE7AE8B:0x6435,\n0xE7AE92:0x6436,0xE7AE8F:0x6437,0xE7AD9D:0x6438,0xE7AE99:0x6439,0xE7AF8B:0x643A,\n0xE7AF81:0x643B,0xE7AF8C:0x643C,0xE7AF8F:0x643D,0xE7AEB4:0x643E,0xE7AF86:0x643F,\n0xE7AF9D:0x6440,0xE7AFA9:0x6441,0xE7B091:0x6442,0xE7B094:0x6443,0xE7AFA6:0x6444,\n0xE7AFA5:0x6445,0xE7B1A0:0x6446,0xE7B080:0x6447,0xE7B087:0x6448,0xE7B093:0x6449,\n0xE7AFB3:0x644A,0xE7AFB7:0x644B,0xE7B097:0x644C,0xE7B08D:0x644D,0xE7AFB6:0x644E,\n0xE7B0A3:0x644F,0xE7B0A7:0x6450,0xE7B0AA:0x6451,0xE7B09F:0x6452,0xE7B0B7:0x6453,\n0xE7B0AB:0x6454,0xE7B0BD:0x6455,0xE7B18C:0x6456,0xE7B183:0x6457,0xE7B194:0x6458,\n0xE7B18F:0x6459,0xE7B180:0x645A,0xE7B190:0x645B,0xE7B198:0x645C,0xE7B19F:0x645D,\n0xE7B1A4:0x645E,0xE7B196:0x645F,0xE7B1A5:0x6460,0xE7B1AC:0x6461,0xE7B1B5:0x6462,\n0xE7B283:0x6463,0xE7B290:0x6464,0xE7B2A4:0x6465,0xE7B2AD:0x6466,0xE7B2A2:0x6467,\n0xE7B2AB:0x6468,0xE7B2A1:0x6469,0xE7B2A8:0x646A,0xE7B2B3:0x646B,0xE7B2B2:0x646C,\n0xE7B2B1:0x646D,0xE7B2AE:0x646E,0xE7B2B9:0x646F,0xE7B2BD:0x6470,0xE7B380:0x6471,\n0xE7B385:0x6472,0xE7B382:0x6473,0xE7B398:0x6474,0xE7B392:0x6475,0xE7B39C:0x6476,\n0xE7B3A2:0x6477,0xE9ACBB:0x6478,0xE7B3AF:0x6479,0xE7B3B2:0x647A,0xE7B3B4:0x647B,\n0xE7B3B6:0x647C,0xE7B3BA:0x647D,0xE7B486:0x647E,0xE7B482:0x6521,0xE7B49C:0x6522,\n0xE7B495:0x6523,0xE7B48A:0x6524,0xE7B585:0x6525,0xE7B58B:0x6526,0xE7B4AE:0x6527,\n0xE7B4B2:0x6528,0xE7B4BF:0x6529,0xE7B4B5:0x652A,0xE7B586:0x652B,0xE7B5B3:0x652C,\n0xE7B596:0x652D,0xE7B58E:0x652E,0xE7B5B2:0x652F,0xE7B5A8:0x6530,0xE7B5AE:0x6531,\n0xE7B58F:0x6532,0xE7B5A3:0x6533,0xE7B693:0x6534,0xE7B689:0x6535,0xE7B59B:0x6536,\n0xE7B68F:0x6537,0xE7B5BD:0x6538,0xE7B69B:0x6539,0xE7B6BA:0x653A,0xE7B6AE:0x653B,\n0xE7B6A3:0x653C,0xE7B6B5:0x653D,0xE7B787:0x653E,0xE7B6BD:0x653F,0xE7B6AB:0x6540,\n0xE7B8BD:0x6541,0xE7B6A2:0x6542,0xE7B6AF:0x6543,0xE7B79C:0x6544,0xE7B6B8:0x6545,\n0xE7B69F:0x6546,0xE7B6B0:0x6547,0xE7B798:0x6548,0xE7B79D:0x6549,0xE7B7A4:0x654A,\n0xE7B79E:0x654B,0xE7B7BB:0x654C,0xE7B7B2:0x654D,0xE7B7A1:0x654E,0xE7B885:0x654F,\n0xE7B88A:0x6550,0xE7B8A3:0x6551,0xE7B8A1:0x6552,0xE7B892:0x6553,0xE7B8B1:0x6554,\n0xE7B89F:0x6555,0xE7B889:0x6556,0xE7B88B:0x6557,0xE7B8A2:0x6558,0xE7B986:0x6559,\n0xE7B9A6:0x655A,0xE7B8BB:0x655B,0xE7B8B5:0x655C,0xE7B8B9:0x655D,0xE7B983:0x655E,\n0xE7B8B7:0x655F,0xE7B8B2:0x6560,0xE7B8BA:0x6561,0xE7B9A7:0x6562,0xE7B99D:0x6563,\n0xE7B996:0x6564,0xE7B99E:0x6565,0xE7B999:0x6566,0xE7B99A:0x6567,0xE7B9B9:0x6568,\n0xE7B9AA:0x6569,0xE7B9A9:0x656A,0xE7B9BC:0x656B,0xE7B9BB:0x656C,0xE7BA83:0x656D,\n0xE7B795:0x656E,0xE7B9BD:0x656F,0xE8BEAE:0x6570,0xE7B9BF:0x6571,0xE7BA88:0x6572,\n0xE7BA89:0x6573,0xE7BA8C:0x6574,0xE7BA92:0x6575,0xE7BA90:0x6576,0xE7BA93:0x6577,\n0xE7BA94:0x6578,0xE7BA96:0x6579,0xE7BA8E:0x657A,0xE7BA9B:0x657B,0xE7BA9C:0x657C,\n0xE7BCB8:0x657D,0xE7BCBA:0x657E,0xE7BD85:0x6621,0xE7BD8C:0x6622,0xE7BD8D:0x6623,\n0xE7BD8E:0x6624,0xE7BD90:0x6625,0xE7BD91:0x6626,0xE7BD95:0x6627,0xE7BD94:0x6628,\n0xE7BD98:0x6629,0xE7BD9F:0x662A,0xE7BDA0:0x662B,0xE7BDA8:0x662C,0xE7BDA9:0x662D,\n0xE7BDA7:0x662E,0xE7BDB8:0x662F,0xE7BE82:0x6630,0xE7BE86:0x6631,0xE7BE83:0x6632,\n0xE7BE88:0x6633,0xE7BE87:0x6634,0xE7BE8C:0x6635,0xE7BE94:0x6636,0xE7BE9E:0x6637,\n0xE7BE9D:0x6638,0xE7BE9A:0x6639,0xE7BEA3:0x663A,0xE7BEAF:0x663B,0xE7BEB2:0x663C,\n0xE7BEB9:0x663D,0xE7BEAE:0x663E,0xE7BEB6:0x663F,0xE7BEB8:0x6640,0xE8ADB1:0x6641,\n0xE7BF85:0x6642,0xE7BF86:0x6643,0xE7BF8A:0x6644,0xE7BF95:0x6645,0xE7BF94:0x6646,\n0xE7BFA1:0x6647,0xE7BFA6:0x6648,0xE7BFA9:0x6649,0xE7BFB3:0x664A,0xE7BFB9:0x664B,\n0xE9A39C:0x664C,0xE88086:0x664D,0xE88084:0x664E,0xE8808B:0x664F,0xE88092:0x6650,\n0xE88098:0x6651,0xE88099:0x6652,0xE8809C:0x6653,0xE880A1:0x6654,0xE880A8:0x6655,\n0xE880BF:0x6656,0xE880BB:0x6657,0xE8818A:0x6658,0xE88186:0x6659,0xE88192:0x665A,\n0xE88198:0x665B,0xE8819A:0x665C,0xE8819F:0x665D,0xE881A2:0x665E,0xE881A8:0x665F,\n0xE881B3:0x6660,0xE881B2:0x6661,0xE881B0:0x6662,0xE881B6:0x6663,0xE881B9:0x6664,\n0xE881BD:0x6665,0xE881BF:0x6666,0xE88284:0x6667,0xE88286:0x6668,0xE88285:0x6669,\n0xE8829B:0x666A,0xE88293:0x666B,0xE8829A:0x666C,0xE882AD:0x666D,0xE58690:0x666E,\n0xE882AC:0x666F,0xE8839B:0x6670,0xE883A5:0x6671,0xE88399:0x6672,0xE8839D:0x6673,\n0xE88384:0x6674,0xE8839A:0x6675,0xE88396:0x6676,0xE88489:0x6677,0xE883AF:0x6678,\n0xE883B1:0x6679,0xE8849B:0x667A,0xE884A9:0x667B,0xE884A3:0x667C,0xE884AF:0x667D,\n0xE8858B:0x667E,0xE99A8B:0x6721,0xE88586:0x6722,0xE884BE:0x6723,0xE88593:0x6724,\n0xE88591:0x6725,0xE883BC:0x6726,0xE885B1:0x6727,0xE885AE:0x6728,0xE885A5:0x6729,\n0xE885A6:0x672A,0xE885B4:0x672B,0xE88683:0x672C,0xE88688:0x672D,0xE8868A:0x672E,\n0xE88680:0x672F,0xE88682:0x6730,0xE886A0:0x6731,0xE88695:0x6732,0xE886A4:0x6733,\n0xE886A3:0x6734,0xE8859F:0x6735,0xE88693:0x6736,0xE886A9:0x6737,0xE886B0:0x6738,\n0xE886B5:0x6739,0xE886BE:0x673A,0xE886B8:0x673B,0xE886BD:0x673C,0xE88780:0x673D,\n0xE88782:0x673E,0xE886BA:0x673F,0xE88789:0x6740,0xE8878D:0x6741,0xE88791:0x6742,\n0xE88799:0x6743,0xE88798:0x6744,0xE88788:0x6745,0xE8879A:0x6746,0xE8879F:0x6747,\n0xE887A0:0x6748,0xE887A7:0x6749,0xE887BA:0x674A,0xE887BB:0x674B,0xE887BE:0x674C,\n0xE88881:0x674D,0xE88882:0x674E,0xE88885:0x674F,0xE88887:0x6750,0xE8888A:0x6751,\n0xE8888D:0x6752,0xE88890:0x6753,0xE88896:0x6754,0xE888A9:0x6755,0xE888AB:0x6756,\n0xE888B8:0x6757,0xE888B3:0x6758,0xE88980:0x6759,0xE88999:0x675A,0xE88998:0x675B,\n0xE8899D:0x675C,0xE8899A:0x675D,0xE8899F:0x675E,0xE889A4:0x675F,0xE889A2:0x6760,\n0xE889A8:0x6761,0xE889AA:0x6762,0xE889AB:0x6763,0xE888AE:0x6764,0xE889B1:0x6765,\n0xE889B7:0x6766,0xE889B8:0x6767,0xE889BE:0x6768,0xE88A8D:0x6769,0xE88A92:0x676A,\n0xE88AAB:0x676B,0xE88A9F:0x676C,0xE88ABB:0x676D,0xE88AAC:0x676E,0xE88BA1:0x676F,\n0xE88BA3:0x6770,0xE88B9F:0x6771,0xE88B92:0x6772,0xE88BB4:0x6773,0xE88BB3:0x6774,\n0xE88BBA:0x6775,0xE88E93:0x6776,0xE88C83:0x6777,0xE88BBB:0x6778,0xE88BB9:0x6779,\n0xE88B9E:0x677A,0xE88C86:0x677B,0xE88B9C:0x677C,0xE88C89:0x677D,0xE88B99:0x677E,\n0xE88CB5:0x6821,0xE88CB4:0x6822,0xE88C96:0x6823,0xE88CB2:0x6824,0xE88CB1:0x6825,\n0xE88D80:0x6826,0xE88CB9:0x6827,0xE88D90:0x6828,0xE88D85:0x6829,0xE88CAF:0x682A,\n0xE88CAB:0x682B,0xE88C97:0x682C,0xE88C98:0x682D,0xE88E85:0x682E,0xE88E9A:0x682F,\n0xE88EAA:0x6830,0xE88E9F:0x6831,0xE88EA2:0x6832,0xE88E96:0x6833,0xE88CA3:0x6834,\n0xE88E8E:0x6835,0xE88E87:0x6836,0xE88E8A:0x6837,0xE88DBC:0x6838,0xE88EB5:0x6839,\n0xE88DB3:0x683A,0xE88DB5:0x683B,0xE88EA0:0x683C,0xE88E89:0x683D,0xE88EA8:0x683E,\n0xE88FB4:0x683F,0xE89093:0x6840,0xE88FAB:0x6841,0xE88F8E:0x6842,0xE88FBD:0x6843,\n0xE89083:0x6844,0xE88F98:0x6845,0xE8908B:0x6846,0xE88F81:0x6847,0xE88FB7:0x6848,\n0xE89087:0x6849,0xE88FA0:0x684A,0xE88FB2:0x684B,0xE8908D:0x684C,0xE890A2:0x684D,\n0xE890A0:0x684E,0xE88EBD:0x684F,0xE890B8:0x6850,0xE89486:0x6851,0xE88FBB:0x6852,\n0xE891AD:0x6853,0xE890AA:0x6854,0xE890BC:0x6855,0xE8959A:0x6856,0xE89284:0x6857,\n0xE891B7:0x6858,0xE891AB:0x6859,0xE892AD:0x685A,0xE891AE:0x685B,0xE89282:0x685C,\n0xE891A9:0x685D,0xE89186:0x685E,0xE890AC:0x685F,0xE891AF:0x6860,0xE891B9:0x6861,\n0xE890B5:0x6862,0xE8938A:0x6863,0xE891A2:0x6864,0xE892B9:0x6865,0xE892BF:0x6866,\n0xE8929F:0x6867,0xE89399:0x6868,0xE8938D:0x6869,0xE892BB:0x686A,0xE8939A:0x686B,\n0xE89390:0x686C,0xE89381:0x686D,0xE89386:0x686E,0xE89396:0x686F,0xE892A1:0x6870,\n0xE894A1:0x6871,0xE893BF:0x6872,0xE893B4:0x6873,0xE89497:0x6874,0xE89498:0x6875,\n0xE894AC:0x6876,0xE8949F:0x6877,0xE89495:0x6878,0xE89494:0x6879,0xE893BC:0x687A,\n0xE89580:0x687B,0xE895A3:0x687C,0xE89598:0x687D,0xE89588:0x687E,0xE89581:0x6921,\n0xE89882:0x6922,0xE8958B:0x6923,0xE89595:0x6924,0xE89680:0x6925,0xE896A4:0x6926,\n0xE89688:0x6927,0xE89691:0x6928,0xE8968A:0x6929,0xE896A8:0x692A,0xE895AD:0x692B,\n0xE89694:0x692C,0xE8969B:0x692D,0xE897AA:0x692E,0xE89687:0x692F,0xE8969C:0x6930,\n0xE895B7:0x6931,0xE895BE:0x6932,0xE89690:0x6933,0xE89789:0x6934,0xE896BA:0x6935,\n0xE8978F:0x6936,0xE896B9:0x6937,0xE89790:0x6938,0xE89795:0x6939,0xE8979D:0x693A,\n0xE897A5:0x693B,0xE8979C:0x693C,0xE897B9:0x693D,0xE8988A:0x693E,0xE89893:0x693F,\n0xE8988B:0x6940,0xE897BE:0x6941,0xE897BA:0x6942,0xE89886:0x6943,0xE898A2:0x6944,\n0xE8989A:0x6945,0xE898B0:0x6946,0xE898BF:0x6947,0xE8998D:0x6948,0xE4B995:0x6949,\n0xE89994:0x694A,0xE8999F:0x694B,0xE899A7:0x694C,0xE899B1:0x694D,0xE89A93:0x694E,\n0xE89AA3:0x694F,0xE89AA9:0x6950,0xE89AAA:0x6951,0xE89A8B:0x6952,0xE89A8C:0x6953,\n0xE89AB6:0x6954,0xE89AAF:0x6955,0xE89B84:0x6956,0xE89B86:0x6957,0xE89AB0:0x6958,\n0xE89B89:0x6959,0xE8A0A3:0x695A,0xE89AAB:0x695B,0xE89B94:0x695C,0xE89B9E:0x695D,\n0xE89BA9:0x695E,0xE89BAC:0x695F,0xE89B9F:0x6960,0xE89B9B:0x6961,0xE89BAF:0x6962,\n0xE89C92:0x6963,0xE89C86:0x6964,0xE89C88:0x6965,0xE89C80:0x6966,0xE89C83:0x6967,\n0xE89BBB:0x6968,0xE89C91:0x6969,0xE89C89:0x696A,0xE89C8D:0x696B,0xE89BB9:0x696C,\n0xE89C8A:0x696D,0xE89CB4:0x696E,0xE89CBF:0x696F,0xE89CB7:0x6970,0xE89CBB:0x6971,\n0xE89CA5:0x6972,0xE89CA9:0x6973,0xE89C9A:0x6974,0xE89DA0:0x6975,0xE89D9F:0x6976,\n0xE89DB8:0x6977,0xE89D8C:0x6978,0xE89D8E:0x6979,0xE89DB4:0x697A,0xE89D97:0x697B,\n0xE89DA8:0x697C,0xE89DAE:0x697D,0xE89D99:0x697E,0xE89D93:0x6A21,0xE89DA3:0x6A22,\n0xE89DAA:0x6A23,0xE8A085:0x6A24,0xE89EA2:0x6A25,0xE89E9F:0x6A26,0xE89E82:0x6A27,\n0xE89EAF:0x6A28,0xE89F8B:0x6A29,0xE89EBD:0x6A2A,0xE89F80:0x6A2B,0xE89F90:0x6A2C,\n0xE99B96:0x6A2D,0xE89EAB:0x6A2E,0xE89F84:0x6A2F,0xE89EB3:0x6A30,0xE89F87:0x6A31,\n0xE89F86:0x6A32,0xE89EBB:0x6A33,0xE89FAF:0x6A34,0xE89FB2:0x6A35,0xE89FA0:0x6A36,\n0xE8A08F:0x6A37,0xE8A08D:0x6A38,0xE89FBE:0x6A39,0xE89FB6:0x6A3A,0xE89FB7:0x6A3B,\n0xE8A08E:0x6A3C,0xE89F92:0x6A3D,0xE8A091:0x6A3E,0xE8A096:0x6A3F,0xE8A095:0x6A40,\n0xE8A0A2:0x6A41,0xE8A0A1:0x6A42,0xE8A0B1:0x6A43,0xE8A0B6:0x6A44,0xE8A0B9:0x6A45,\n0xE8A0A7:0x6A46,0xE8A0BB:0x6A47,0xE8A184:0x6A48,0xE8A182:0x6A49,0xE8A192:0x6A4A,\n0xE8A199:0x6A4B,0xE8A19E:0x6A4C,0xE8A1A2:0x6A4D,0xE8A1AB:0x6A4E,0xE8A281:0x6A4F,\n0xE8A1BE:0x6A50,0xE8A29E:0x6A51,0xE8A1B5:0x6A52,0xE8A1BD:0x6A53,0xE8A2B5:0x6A54,\n0xE8A1B2:0x6A55,0xE8A282:0x6A56,0xE8A297:0x6A57,0xE8A292:0x6A58,0xE8A2AE:0x6A59,\n0xE8A299:0x6A5A,0xE8A2A2:0x6A5B,0xE8A28D:0x6A5C,0xE8A2A4:0x6A5D,0xE8A2B0:0x6A5E,\n0xE8A2BF:0x6A5F,0xE8A2B1:0x6A60,0xE8A383:0x6A61,0xE8A384:0x6A62,0xE8A394:0x6A63,\n0xE8A398:0x6A64,0xE8A399:0x6A65,0xE8A39D:0x6A66,0xE8A3B9:0x6A67,0xE8A482:0x6A68,\n0xE8A3BC:0x6A69,0xE8A3B4:0x6A6A,0xE8A3A8:0x6A6B,0xE8A3B2:0x6A6C,0xE8A484:0x6A6D,\n0xE8A48C:0x6A6E,0xE8A48A:0x6A6F,0xE8A493:0x6A70,0xE8A583:0x6A71,0xE8A49E:0x6A72,\n0xE8A4A5:0x6A73,0xE8A4AA:0x6A74,0xE8A4AB:0x6A75,0xE8A581:0x6A76,0xE8A584:0x6A77,\n0xE8A4BB:0x6A78,0xE8A4B6:0x6A79,0xE8A4B8:0x6A7A,0xE8A58C:0x6A7B,0xE8A49D:0x6A7C,\n0xE8A5A0:0x6A7D,0xE8A59E:0x6A7E,0xE8A5A6:0x6B21,0xE8A5A4:0x6B22,0xE8A5AD:0x6B23,\n0xE8A5AA:0x6B24,0xE8A5AF:0x6B25,0xE8A5B4:0x6B26,0xE8A5B7:0x6B27,0xE8A5BE:0x6B28,\n0xE8A683:0x6B29,0xE8A688:0x6B2A,0xE8A68A:0x6B2B,0xE8A693:0x6B2C,0xE8A698:0x6B2D,\n0xE8A6A1:0x6B2E,0xE8A6A9:0x6B2F,0xE8A6A6:0x6B30,0xE8A6AC:0x6B31,0xE8A6AF:0x6B32,\n0xE8A6B2:0x6B33,0xE8A6BA:0x6B34,0xE8A6BD:0x6B35,0xE8A6BF:0x6B36,0xE8A780:0x6B37,\n0xE8A79A:0x6B38,0xE8A79C:0x6B39,0xE8A79D:0x6B3A,0xE8A7A7:0x6B3B,0xE8A7B4:0x6B3C,\n0xE8A7B8:0x6B3D,0xE8A883:0x6B3E,0xE8A896:0x6B3F,0xE8A890:0x6B40,0xE8A88C:0x6B41,\n0xE8A89B:0x6B42,0xE8A89D:0x6B43,0xE8A8A5:0x6B44,0xE8A8B6:0x6B45,0xE8A981:0x6B46,\n0xE8A99B:0x6B47,0xE8A992:0x6B48,0xE8A986:0x6B49,0xE8A988:0x6B4A,0xE8A9BC:0x6B4B,\n0xE8A9AD:0x6B4C,0xE8A9AC:0x6B4D,0xE8A9A2:0x6B4E,0xE8AA85:0x6B4F,0xE8AA82:0x6B50,\n0xE8AA84:0x6B51,0xE8AAA8:0x6B52,0xE8AAA1:0x6B53,0xE8AA91:0x6B54,0xE8AAA5:0x6B55,\n0xE8AAA6:0x6B56,0xE8AA9A:0x6B57,0xE8AAA3:0x6B58,0xE8AB84:0x6B59,0xE8AB8D:0x6B5A,\n0xE8AB82:0x6B5B,0xE8AB9A:0x6B5C,0xE8ABAB:0x6B5D,0xE8ABB3:0x6B5E,0xE8ABA7:0x6B5F,\n0xE8ABA4:0x6B60,0xE8ABB1:0x6B61,0xE8AC94:0x6B62,0xE8ABA0:0x6B63,0xE8ABA2:0x6B64,\n0xE8ABB7:0x6B65,0xE8AB9E:0x6B66,0xE8AB9B:0x6B67,0xE8AC8C:0x6B68,0xE8AC87:0x6B69,\n0xE8AC9A:0x6B6A,0xE8ABA1:0x6B6B,0xE8AC96:0x6B6C,0xE8AC90:0x6B6D,0xE8AC97:0x6B6E,\n0xE8ACA0:0x6B6F,0xE8ACB3:0x6B70,0xE99EAB:0x6B71,0xE8ACA6:0x6B72,0xE8ACAB:0x6B73,\n0xE8ACBE:0x6B74,0xE8ACA8:0x6B75,0xE8AD81:0x6B76,0xE8AD8C:0x6B77,0xE8AD8F:0x6B78,\n0xE8AD8E:0x6B79,0xE8AD89:0x6B7A,0xE8AD96:0x6B7B,0xE8AD9B:0x6B7C,0xE8AD9A:0x6B7D,\n0xE8ADAB:0x6B7E,0xE8AD9F:0x6C21,0xE8ADAC:0x6C22,0xE8ADAF:0x6C23,0xE8ADB4:0x6C24,\n0xE8ADBD:0x6C25,0xE8AE80:0x6C26,0xE8AE8C:0x6C27,0xE8AE8E:0x6C28,0xE8AE92:0x6C29,\n0xE8AE93:0x6C2A,0xE8AE96:0x6C2B,0xE8AE99:0x6C2C,0xE8AE9A:0x6C2D,0xE8B0BA:0x6C2E,\n0xE8B181:0x6C2F,0xE8B0BF:0x6C30,0xE8B188:0x6C31,0xE8B18C:0x6C32,0xE8B18E:0x6C33,\n0xE8B190:0x6C34,0xE8B195:0x6C35,0xE8B1A2:0x6C36,0xE8B1AC:0x6C37,0xE8B1B8:0x6C38,\n0xE8B1BA:0x6C39,0xE8B282:0x6C3A,0xE8B289:0x6C3B,0xE8B285:0x6C3C,0xE8B28A:0x6C3D,\n0xE8B28D:0x6C3E,0xE8B28E:0x6C3F,0xE8B294:0x6C40,0xE8B1BC:0x6C41,0xE8B298:0x6C42,\n0xE6889D:0x6C43,0xE8B2AD:0x6C44,0xE8B2AA:0x6C45,0xE8B2BD:0x6C46,0xE8B2B2:0x6C47,\n0xE8B2B3:0x6C48,0xE8B2AE:0x6C49,0xE8B2B6:0x6C4A,0xE8B388:0x6C4B,0xE8B381:0x6C4C,\n0xE8B3A4:0x6C4D,0xE8B3A3:0x6C4E,0xE8B39A:0x6C4F,0xE8B3BD:0x6C50,0xE8B3BA:0x6C51,\n0xE8B3BB:0x6C52,0xE8B484:0x6C53,0xE8B485:0x6C54,0xE8B48A:0x6C55,0xE8B487:0x6C56,\n0xE8B48F:0x6C57,0xE8B48D:0x6C58,0xE8B490:0x6C59,0xE9BD8E:0x6C5A,0xE8B493:0x6C5B,\n0xE8B38D:0x6C5C,0xE8B494:0x6C5D,0xE8B496:0x6C5E,0xE8B5A7:0x6C5F,0xE8B5AD:0x6C60,\n0xE8B5B1:0x6C61,0xE8B5B3:0x6C62,0xE8B681:0x6C63,0xE8B699:0x6C64,0xE8B782:0x6C65,\n0xE8B6BE:0x6C66,0xE8B6BA:0x6C67,0xE8B78F:0x6C68,0xE8B79A:0x6C69,0xE8B796:0x6C6A,\n0xE8B78C:0x6C6B,0xE8B79B:0x6C6C,0xE8B78B:0x6C6D,0xE8B7AA:0x6C6E,0xE8B7AB:0x6C6F,\n0xE8B79F:0x6C70,0xE8B7A3:0x6C71,0xE8B7BC:0x6C72,0xE8B888:0x6C73,0xE8B889:0x6C74,\n0xE8B7BF:0x6C75,0xE8B89D:0x6C76,0xE8B89E:0x6C77,0xE8B890:0x6C78,0xE8B89F:0x6C79,\n0xE8B982:0x6C7A,0xE8B8B5:0x6C7B,0xE8B8B0:0x6C7C,0xE8B8B4:0x6C7D,0xE8B98A:0x6C7E,\n0xE8B987:0x6D21,0xE8B989:0x6D22,0xE8B98C:0x6D23,0xE8B990:0x6D24,0xE8B988:0x6D25,\n0xE8B999:0x6D26,0xE8B9A4:0x6D27,0xE8B9A0:0x6D28,0xE8B8AA:0x6D29,0xE8B9A3:0x6D2A,\n0xE8B995:0x6D2B,0xE8B9B6:0x6D2C,0xE8B9B2:0x6D2D,0xE8B9BC:0x6D2E,0xE8BA81:0x6D2F,\n0xE8BA87:0x6D30,0xE8BA85:0x6D31,0xE8BA84:0x6D32,0xE8BA8B:0x6D33,0xE8BA8A:0x6D34,\n0xE8BA93:0x6D35,0xE8BA91:0x6D36,0xE8BA94:0x6D37,0xE8BA99:0x6D38,0xE8BAAA:0x6D39,\n0xE8BAA1:0x6D3A,0xE8BAAC:0x6D3B,0xE8BAB0:0x6D3C,0xE8BB86:0x6D3D,0xE8BAB1:0x6D3E,\n0xE8BABE:0x6D3F,0xE8BB85:0x6D40,0xE8BB88:0x6D41,0xE8BB8B:0x6D42,0xE8BB9B:0x6D43,\n0xE8BBA3:0x6D44,0xE8BBBC:0x6D45,0xE8BBBB:0x6D46,0xE8BBAB:0x6D47,0xE8BBBE:0x6D48,\n0xE8BC8A:0x6D49,0xE8BC85:0x6D4A,0xE8BC95:0x6D4B,0xE8BC92:0x6D4C,0xE8BC99:0x6D4D,\n0xE8BC93:0x6D4E,0xE8BC9C:0x6D4F,0xE8BC9F:0x6D50,0xE8BC9B:0x6D51,0xE8BC8C:0x6D52,\n0xE8BCA6:0x6D53,0xE8BCB3:0x6D54,0xE8BCBB:0x6D55,0xE8BCB9:0x6D56,0xE8BD85:0x6D57,\n0xE8BD82:0x6D58,0xE8BCBE:0x6D59,0xE8BD8C:0x6D5A,0xE8BD89:0x6D5B,0xE8BD86:0x6D5C,\n0xE8BD8E:0x6D5D,0xE8BD97:0x6D5E,0xE8BD9C:0x6D5F,0xE8BDA2:0x6D60,0xE8BDA3:0x6D61,\n0xE8BDA4:0x6D62,0xE8BE9C:0x6D63,0xE8BE9F:0x6D64,0xE8BEA3:0x6D65,0xE8BEAD:0x6D66,\n0xE8BEAF:0x6D67,0xE8BEB7:0x6D68,0xE8BF9A:0x6D69,0xE8BFA5:0x6D6A,0xE8BFA2:0x6D6B,\n0xE8BFAA:0x6D6C,0xE8BFAF:0x6D6D,0xE98287:0x6D6E,0xE8BFB4:0x6D6F,0xE98085:0x6D70,\n0xE8BFB9:0x6D71,0xE8BFBA:0x6D72,0xE98091:0x6D73,0xE98095:0x6D74,0xE980A1:0x6D75,\n0xE9808D:0x6D76,0xE9809E:0x6D77,0xE98096:0x6D78,0xE9808B:0x6D79,0xE980A7:0x6D7A,\n0xE980B6:0x6D7B,0xE980B5:0x6D7C,0xE980B9:0x6D7D,0xE8BFB8:0x6D7E,0xE9818F:0x6E21,\n0xE98190:0x6E22,0xE98191:0x6E23,0xE98192:0x6E24,0xE9808E:0x6E25,0xE98189:0x6E26,\n0xE980BE:0x6E27,0xE98196:0x6E28,0xE98198:0x6E29,0xE9819E:0x6E2A,0xE981A8:0x6E2B,\n0xE981AF:0x6E2C,0xE981B6:0x6E2D,0xE99AA8:0x6E2E,0xE981B2:0x6E2F,0xE98282:0x6E30,\n0xE981BD:0x6E31,0xE98281:0x6E32,0xE98280:0x6E33,0xE9828A:0x6E34,0xE98289:0x6E35,\n0xE9828F:0x6E36,0xE982A8:0x6E37,0xE982AF:0x6E38,0xE982B1:0x6E39,0xE982B5:0x6E3A,\n0xE983A2:0x6E3B,0xE983A4:0x6E3C,0xE68988:0x6E3D,0xE9839B:0x6E3E,0xE98482:0x6E3F,\n0xE98492:0x6E40,0xE98499:0x6E41,0xE984B2:0x6E42,0xE984B0:0x6E43,0xE9858A:0x6E44,\n0xE98596:0x6E45,0xE98598:0x6E46,0xE985A3:0x6E47,0xE985A5:0x6E48,0xE985A9:0x6E49,\n0xE985B3:0x6E4A,0xE985B2:0x6E4B,0xE9868B:0x6E4C,0xE98689:0x6E4D,0xE98682:0x6E4E,\n0xE986A2:0x6E4F,0xE986AB:0x6E50,0xE986AF:0x6E51,0xE986AA:0x6E52,0xE986B5:0x6E53,\n0xE986B4:0x6E54,0xE986BA:0x6E55,0xE98780:0x6E56,0xE98781:0x6E57,0xE98789:0x6E58,\n0xE9878B:0x6E59,0xE98790:0x6E5A,0xE98796:0x6E5B,0xE9879F:0x6E5C,0xE987A1:0x6E5D,\n0xE9879B:0x6E5E,0xE987BC:0x6E5F,0xE987B5:0x6E60,0xE987B6:0x6E61,0xE9889E:0x6E62,\n0xE987BF:0x6E63,0xE98894:0x6E64,0xE988AC:0x6E65,0xE98895:0x6E66,0xE98891:0x6E67,\n0xE9899E:0x6E68,0xE98997:0x6E69,0xE98985:0x6E6A,0xE98989:0x6E6B,0xE989A4:0x6E6C,\n0xE98988:0x6E6D,0xE98A95:0x6E6E,0xE988BF:0x6E6F,0xE9898B:0x6E70,0xE98990:0x6E71,\n0xE98A9C:0x6E72,0xE98A96:0x6E73,0xE98A93:0x6E74,0xE98A9B:0x6E75,0xE9899A:0x6E76,\n0xE98B8F:0x6E77,0xE98AB9:0x6E78,0xE98AB7:0x6E79,0xE98BA9:0x6E7A,0xE98C8F:0x6E7B,\n0xE98BBA:0x6E7C,0xE98D84:0x6E7D,0xE98CAE:0x6E7E,0xE98C99:0x6F21,0xE98CA2:0x6F22,\n0xE98C9A:0x6F23,0xE98CA3:0x6F24,0xE98CBA:0x6F25,0xE98CB5:0x6F26,0xE98CBB:0x6F27,\n0xE98D9C:0x6F28,0xE98DA0:0x6F29,0xE98DBC:0x6F2A,0xE98DAE:0x6F2B,0xE98D96:0x6F2C,\n0xE98EB0:0x6F2D,0xE98EAC:0x6F2E,0xE98EAD:0x6F2F,0xE98E94:0x6F30,0xE98EB9:0x6F31,\n0xE98F96:0x6F32,0xE98F97:0x6F33,0xE98FA8:0x6F34,0xE98FA5:0x6F35,0xE98F98:0x6F36,\n0xE98F83:0x6F37,0xE98F9D:0x6F38,0xE98F90:0x6F39,0xE98F88:0x6F3A,0xE98FA4:0x6F3B,\n0xE9909A:0x6F3C,0xE99094:0x6F3D,0xE99093:0x6F3E,0xE99083:0x6F3F,0xE99087:0x6F40,\n0xE99090:0x6F41,0xE990B6:0x6F42,0xE990AB:0x6F43,0xE990B5:0x6F44,0xE990A1:0x6F45,\n0xE990BA:0x6F46,0xE99181:0x6F47,0xE99192:0x6F48,0xE99184:0x6F49,0xE9919B:0x6F4A,\n0xE991A0:0x6F4B,0xE991A2:0x6F4C,0xE9919E:0x6F4D,0xE991AA:0x6F4E,0xE988A9:0x6F4F,\n0xE991B0:0x6F50,0xE991B5:0x6F51,0xE991B7:0x6F52,0xE991BD:0x6F53,0xE9919A:0x6F54,\n0xE991BC:0x6F55,0xE991BE:0x6F56,0xE99281:0x6F57,0xE991BF:0x6F58,0xE99682:0x6F59,\n0xE99687:0x6F5A,0xE9968A:0x6F5B,0xE99694:0x6F5C,0xE99696:0x6F5D,0xE99698:0x6F5E,\n0xE99699:0x6F5F,0xE996A0:0x6F60,0xE996A8:0x6F61,0xE996A7:0x6F62,0xE996AD:0x6F63,\n0xE996BC:0x6F64,0xE996BB:0x6F65,0xE996B9:0x6F66,0xE996BE:0x6F67,0xE9978A:0x6F68,\n0xE6BFB6:0x6F69,0xE99783:0x6F6A,0xE9978D:0x6F6B,0xE9978C:0x6F6C,0xE99795:0x6F6D,\n0xE99794:0x6F6E,0xE99796:0x6F6F,0xE9979C:0x6F70,0xE997A1:0x6F71,0xE997A5:0x6F72,\n0xE997A2:0x6F73,0xE998A1:0x6F74,0xE998A8:0x6F75,0xE998AE:0x6F76,0xE998AF:0x6F77,\n0xE99982:0x6F78,0xE9998C:0x6F79,0xE9998F:0x6F7A,0xE9998B:0x6F7B,0xE999B7:0x6F7C,\n0xE9999C:0x6F7D,0xE9999E:0x6F7E,0xE9999D:0x7021,0xE9999F:0x7022,0xE999A6:0x7023,\n0xE999B2:0x7024,0xE999AC:0x7025,0xE99A8D:0x7026,0xE99A98:0x7027,0xE99A95:0x7028,\n0xE99A97:0x7029,0xE99AAA:0x702A,0xE99AA7:0x702B,0xE99AB1:0x702C,0xE99AB2:0x702D,\n0xE99AB0:0x702E,0xE99AB4:0x702F,0xE99AB6:0x7030,0xE99AB8:0x7031,0xE99AB9:0x7032,\n0xE99B8E:0x7033,0xE99B8B:0x7034,0xE99B89:0x7035,0xE99B8D:0x7036,0xE8A58D:0x7037,\n0xE99B9C:0x7038,0xE99C8D:0x7039,0xE99B95:0x703A,0xE99BB9:0x703B,0xE99C84:0x703C,\n0xE99C86:0x703D,0xE99C88:0x703E,0xE99C93:0x703F,0xE99C8E:0x7040,0xE99C91:0x7041,\n0xE99C8F:0x7042,0xE99C96:0x7043,0xE99C99:0x7044,0xE99CA4:0x7045,0xE99CAA:0x7046,\n0xE99CB0:0x7047,0xE99CB9:0x7048,0xE99CBD:0x7049,0xE99CBE:0x704A,0xE99D84:0x704B,\n0xE99D86:0x704C,0xE99D88:0x704D,0xE99D82:0x704E,0xE99D89:0x704F,0xE99D9C:0x7050,\n0xE99DA0:0x7051,0xE99DA4:0x7052,0xE99DA6:0x7053,0xE99DA8:0x7054,0xE58B92:0x7055,\n0xE99DAB:0x7056,0xE99DB1:0x7057,0xE99DB9:0x7058,0xE99E85:0x7059,0xE99DBC:0x705A,\n0xE99E81:0x705B,0xE99DBA:0x705C,0xE99E86:0x705D,0xE99E8B:0x705E,0xE99E8F:0x705F,\n0xE99E90:0x7060,0xE99E9C:0x7061,0xE99EA8:0x7062,0xE99EA6:0x7063,0xE99EA3:0x7064,\n0xE99EB3:0x7065,0xE99EB4:0x7066,0xE99F83:0x7067,0xE99F86:0x7068,0xE99F88:0x7069,\n0xE99F8B:0x706A,0xE99F9C:0x706B,0xE99FAD:0x706C,0xE9BD8F:0x706D,0xE99FB2:0x706E,\n0xE7AB9F:0x706F,0xE99FB6:0x7070,0xE99FB5:0x7071,0xE9A08F:0x7072,0xE9A08C:0x7073,\n0xE9A0B8:0x7074,0xE9A0A4:0x7075,0xE9A0A1:0x7076,0xE9A0B7:0x7077,0xE9A0BD:0x7078,\n0xE9A186:0x7079,0xE9A18F:0x707A,0xE9A18B:0x707B,0xE9A1AB:0x707C,0xE9A1AF:0x707D,\n0xE9A1B0:0x707E,0xE9A1B1:0x7121,0xE9A1B4:0x7122,0xE9A1B3:0x7123,0xE9A2AA:0x7124,\n0xE9A2AF:0x7125,0xE9A2B1:0x7126,0xE9A2B6:0x7127,0xE9A384:0x7128,0xE9A383:0x7129,\n0xE9A386:0x712A,0xE9A3A9:0x712B,0xE9A3AB:0x712C,0xE9A483:0x712D,0xE9A489:0x712E,\n0xE9A492:0x712F,0xE9A494:0x7130,0xE9A498:0x7131,0xE9A4A1:0x7132,0xE9A49D:0x7133,\n0xE9A49E:0x7134,0xE9A4A4:0x7135,0xE9A4A0:0x7136,0xE9A4AC:0x7137,0xE9A4AE:0x7138,\n0xE9A4BD:0x7139,0xE9A4BE:0x713A,0xE9A582:0x713B,0xE9A589:0x713C,0xE9A585:0x713D,\n0xE9A590:0x713E,0xE9A58B:0x713F,0xE9A591:0x7140,0xE9A592:0x7141,0xE9A58C:0x7142,\n0xE9A595:0x7143,0xE9A697:0x7144,0xE9A698:0x7145,0xE9A6A5:0x7146,0xE9A6AD:0x7147,\n0xE9A6AE:0x7148,0xE9A6BC:0x7149,0xE9A79F:0x714A,0xE9A79B:0x714B,0xE9A79D:0x714C,\n0xE9A798:0x714D,0xE9A791:0x714E,0xE9A7AD:0x714F,0xE9A7AE:0x7150,0xE9A7B1:0x7151,\n0xE9A7B2:0x7152,0xE9A7BB:0x7153,0xE9A7B8:0x7154,0xE9A881:0x7155,0xE9A88F:0x7156,\n0xE9A885:0x7157,0xE9A7A2:0x7158,0xE9A899:0x7159,0xE9A8AB:0x715A,0xE9A8B7:0x715B,\n0xE9A985:0x715C,0xE9A982:0x715D,0xE9A980:0x715E,0xE9A983:0x715F,0xE9A8BE:0x7160,\n0xE9A995:0x7161,0xE9A98D:0x7162,0xE9A99B:0x7163,0xE9A997:0x7164,0xE9A99F:0x7165,\n0xE9A9A2:0x7166,0xE9A9A5:0x7167,0xE9A9A4:0x7168,0xE9A9A9:0x7169,0xE9A9AB:0x716A,\n0xE9A9AA:0x716B,0xE9AAAD:0x716C,0xE9AAB0:0x716D,0xE9AABC:0x716E,0xE9AB80:0x716F,\n0xE9AB8F:0x7170,0xE9AB91:0x7171,0xE9AB93:0x7172,0xE9AB94:0x7173,0xE9AB9E:0x7174,\n0xE9AB9F:0x7175,0xE9ABA2:0x7176,0xE9ABA3:0x7177,0xE9ABA6:0x7178,0xE9ABAF:0x7179,\n0xE9ABAB:0x717A,0xE9ABAE:0x717B,0xE9ABB4:0x717C,0xE9ABB1:0x717D,0xE9ABB7:0x717E,\n0xE9ABBB:0x7221,0xE9AC86:0x7222,0xE9AC98:0x7223,0xE9AC9A:0x7224,0xE9AC9F:0x7225,\n0xE9ACA2:0x7226,0xE9ACA3:0x7227,0xE9ACA5:0x7228,0xE9ACA7:0x7229,0xE9ACA8:0x722A,\n0xE9ACA9:0x722B,0xE9ACAA:0x722C,0xE9ACAE:0x722D,0xE9ACAF:0x722E,0xE9ACB2:0x722F,\n0xE9AD84:0x7230,0xE9AD83:0x7231,0xE9AD8F:0x7232,0xE9AD8D:0x7233,0xE9AD8E:0x7234,\n0xE9AD91:0x7235,0xE9AD98:0x7236,0xE9ADB4:0x7237,0xE9AE93:0x7238,0xE9AE83:0x7239,\n0xE9AE91:0x723A,0xE9AE96:0x723B,0xE9AE97:0x723C,0xE9AE9F:0x723D,0xE9AEA0:0x723E,\n0xE9AEA8:0x723F,0xE9AEB4:0x7240,0xE9AF80:0x7241,0xE9AF8A:0x7242,0xE9AEB9:0x7243,\n0xE9AF86:0x7244,0xE9AF8F:0x7245,0xE9AF91:0x7246,0xE9AF92:0x7247,0xE9AFA3:0x7248,\n0xE9AFA2:0x7249,0xE9AFA4:0x724A,0xE9AF94:0x724B,0xE9AFA1:0x724C,0xE9B0BA:0x724D,\n0xE9AFB2:0x724E,0xE9AFB1:0x724F,0xE9AFB0:0x7250,0xE9B095:0x7251,0xE9B094:0x7252,\n0xE9B089:0x7253,0xE9B093:0x7254,0xE9B08C:0x7255,0xE9B086:0x7256,0xE9B088:0x7257,\n0xE9B092:0x7258,0xE9B08A:0x7259,0xE9B084:0x725A,0xE9B0AE:0x725B,0xE9B09B:0x725C,\n0xE9B0A5:0x725D,0xE9B0A4:0x725E,0xE9B0A1:0x725F,0xE9B0B0:0x7260,0xE9B187:0x7261,\n0xE9B0B2:0x7262,0xE9B186:0x7263,0xE9B0BE:0x7264,0xE9B19A:0x7265,0xE9B1A0:0x7266,\n0xE9B1A7:0x7267,0xE9B1B6:0x7268,0xE9B1B8:0x7269,0xE9B3A7:0x726A,0xE9B3AC:0x726B,\n0xE9B3B0:0x726C,0xE9B489:0x726D,0xE9B488:0x726E,0xE9B3AB:0x726F,0xE9B483:0x7270,\n0xE9B486:0x7271,0xE9B4AA:0x7272,0xE9B4A6:0x7273,0xE9B6AF:0x7274,0xE9B4A3:0x7275,\n0xE9B49F:0x7276,0xE9B584:0x7277,0xE9B495:0x7278,0xE9B492:0x7279,0xE9B581:0x727A,\n0xE9B4BF:0x727B,0xE9B4BE:0x727C,0xE9B586:0x727D,0xE9B588:0x727E,0xE9B59D:0x7321,\n0xE9B59E:0x7322,0xE9B5A4:0x7323,0xE9B591:0x7324,0xE9B590:0x7325,0xE9B599:0x7326,\n0xE9B5B2:0x7327,0xE9B689:0x7328,0xE9B687:0x7329,0xE9B6AB:0x732A,0xE9B5AF:0x732B,\n0xE9B5BA:0x732C,0xE9B69A:0x732D,0xE9B6A4:0x732E,0xE9B6A9:0x732F,0xE9B6B2:0x7330,\n0xE9B784:0x7331,0xE9B781:0x7332,0xE9B6BB:0x7333,0xE9B6B8:0x7334,0xE9B6BA:0x7335,\n0xE9B786:0x7336,0xE9B78F:0x7337,0xE9B782:0x7338,0xE9B799:0x7339,0xE9B793:0x733A,\n0xE9B7B8:0x733B,0xE9B7A6:0x733C,0xE9B7AD:0x733D,0xE9B7AF:0x733E,0xE9B7BD:0x733F,\n0xE9B89A:0x7340,0xE9B89B:0x7341,0xE9B89E:0x7342,0xE9B9B5:0x7343,0xE9B9B9:0x7344,\n0xE9B9BD:0x7345,0xE9BA81:0x7346,0xE9BA88:0x7347,0xE9BA8B:0x7348,0xE9BA8C:0x7349,\n0xE9BA92:0x734A,0xE9BA95:0x734B,0xE9BA91:0x734C,0xE9BA9D:0x734D,0xE9BAA5:0x734E,\n0xE9BAA9:0x734F,0xE9BAB8:0x7350,0xE9BAAA:0x7351,0xE9BAAD:0x7352,0xE99DA1:0x7353,\n0xE9BB8C:0x7354,0xE9BB8E:0x7355,0xE9BB8F:0x7356,0xE9BB90:0x7357,0xE9BB94:0x7358,\n0xE9BB9C:0x7359,0xE9BB9E:0x735A,0xE9BB9D:0x735B,0xE9BBA0:0x735C,0xE9BBA5:0x735D,\n0xE9BBA8:0x735E,0xE9BBAF:0x735F,0xE9BBB4:0x7360,0xE9BBB6:0x7361,0xE9BBB7:0x7362,\n0xE9BBB9:0x7363,0xE9BBBB:0x7364,0xE9BBBC:0x7365,0xE9BBBD:0x7366,0xE9BC87:0x7367,\n0xE9BC88:0x7368,0xE79AB7:0x7369,0xE9BC95:0x736A,0xE9BCA1:0x736B,0xE9BCAC:0x736C,\n0xE9BCBE:0x736D,0xE9BD8A:0x736E,0xE9BD92:0x736F,0xE9BD94:0x7370,0xE9BDA3:0x7371,\n0xE9BD9F:0x7372,0xE9BDA0:0x7373,0xE9BDA1:0x7374,0xE9BDA6:0x7375,0xE9BDA7:0x7376,\n0xE9BDAC:0x7377,0xE9BDAA:0x7378,0xE9BDB7:0x7379,0xE9BDB2:0x737A,0xE9BDB6:0x737B,\n0xE9BE95:0x737C,0xE9BE9C:0x737D,0xE9BEA0:0x737E,0xE5A0AF:0x7421,0xE6A787:0x7422,\n0xE98199:0x7423,0xE791A4:0x7424,0xE5879C:0x7425,0xE78699:0x7426,\n\n0xE7BA8A:0x7921,0xE8A49C:0x7922,0xE98D88:0x7923,0xE98A88:0x7924,0xE8939C:0x7925,\n0xE4BF89:0x7926,0xE782BB:0x7927,0xE698B1:0x7928,0xE6A388:0x7929,0xE98BB9:0x792A,\n0xE69BBB:0x792B,0xE5BD85:0x792C,0xE4B8A8:0x792D,0xE4BBA1:0x792E,0xE4BBBC:0x792F,\n0xE4BC80:0x7930,0xE4BC83:0x7931,0xE4BCB9:0x7932,0xE4BD96:0x7933,0xE4BE92:0x7934,\n0xE4BE8A:0x7935,0xE4BE9A:0x7936,0xE4BE94:0x7937,0xE4BF8D:0x7938,0xE58180:0x7939,\n0xE580A2:0x793A,0xE4BFBF:0x793B,0xE5809E:0x793C,0xE58186:0x793D,0xE581B0:0x793E,\n0xE58182:0x793F,0xE58294:0x7940,0xE583B4:0x7941,0xE58398:0x7942,0xE5858A:0x7943,\n0xE585A4:0x7944,0xE5869D:0x7945,0xE586BE:0x7946,0xE587AC:0x7947,0xE58895:0x7948,\n0xE58A9C:0x7949,0xE58AA6:0x794A,0xE58B80:0x794B,0xE58B9B:0x794C,0xE58C80:0x794D,\n0xE58C87:0x794E,0xE58CA4:0x794F,0xE58DB2:0x7950,0xE58E93:0x7951,0xE58EB2:0x7952,\n0xE58F9D:0x7953,0xEFA88E:0x7954,0xE5929C:0x7955,0xE5928A:0x7956,0xE592A9:0x7957,\n0xE593BF:0x7958,0xE59686:0x7959,0xE59D99:0x795A,0xE59DA5:0x795B,0xE59EAC:0x795C,\n0xE59F88:0x795D,0xE59F87:0x795E,0xEFA88F:0x795F,0xEFA890:0x7960,0xE5A29E:0x7961,\n0xE5A2B2:0x7962,0xE5A48B:0x7963,0xE5A593:0x7964,0xE5A59B:0x7965,0xE5A59D:0x7966,\n0xE5A5A3:0x7967,0xE5A6A4:0x7968,0xE5A6BA:0x7969,0xE5AD96:0x796A,0xE5AF80:0x796B,\n0xE794AF:0x796C,0xE5AF98:0x796D,0xE5AFAC:0x796E,0xE5B09E:0x796F,0xE5B2A6:0x7970,\n0xE5B2BA:0x7971,0xE5B3B5:0x7972,0xE5B4A7:0x7973,0xE5B593:0x7974,0xEFA891:0x7975,\n0xE5B582:0x7976,0xE5B5AD:0x7977,0xE5B6B8:0x7978,0xE5B6B9:0x7979,0xE5B790:0x797A,\n0xE5BCA1:0x797B,0xE5BCB4:0x797C,0xE5BDA7:0x797D,0xE5BEB7:0x797E,0xE5BF9E:0x7A21,\n0xE6819D:0x7A22,0xE68285:0x7A23,0xE6828A:0x7A24,0xE6839E:0x7A25,0xE68395:0x7A26,\n0xE684A0:0x7A27,0xE683B2:0x7A28,0xE68491:0x7A29,0xE684B7:0x7A2A,0xE684B0:0x7A2B,\n0xE68698:0x7A2C,0xE68893:0x7A2D,0xE68AA6:0x7A2E,0xE68FB5:0x7A2F,0xE691A0:0x7A30,\n0xE6929D:0x7A31,0xE6938E:0x7A32,0xE6958E:0x7A33,0xE69880:0x7A34,0xE69895:0x7A35,\n0xE698BB:0x7A36,0xE69889:0x7A37,0xE698AE:0x7A38,0xE6989E:0x7A39,0xE698A4:0x7A3A,\n0xE699A5:0x7A3B,0xE69997:0x7A3C,0xE69999:0x7A3D,0xEFA892:0x7A3E,0xE699B3:0x7A3F,\n0xE69A99:0x7A40,0xE69AA0:0x7A41,0xE69AB2:0x7A42,0xE69ABF:0x7A43,0xE69BBA:0x7A44,\n0xE69C8E:0x7A45,0xEFA4A9:0x7A46,0xE69DA6:0x7A47,0xE69EBB:0x7A48,0xE6A192:0x7A49,\n0xE69F80:0x7A4A,0xE6A081:0x7A4B,0xE6A184:0x7A4C,0xE6A38F:0x7A4D,0xEFA893:0x7A4E,\n0xE6A5A8:0x7A4F,0xEFA894:0x7A50,0xE6A698:0x7A51,0xE6A7A2:0x7A52,0xE6A8B0:0x7A53,\n0xE6A9AB:0x7A54,0xE6A986:0x7A55,0xE6A9B3:0x7A56,0xE6A9BE:0x7A57,0xE6ABA2:0x7A58,\n0xE6ABA4:0x7A59,0xE6AF96:0x7A5A,0xE6B0BF:0x7A5B,0xE6B19C:0x7A5C,0xE6B286:0x7A5D,\n0xE6B1AF:0x7A5E,0xE6B39A:0x7A5F,0xE6B484:0x7A60,0xE6B687:0x7A61,0xE6B5AF:0x7A62,\n0xE6B696:0x7A63,0xE6B6AC:0x7A64,0xE6B78F:0x7A65,0xE6B7B8:0x7A66,0xE6B7B2:0x7A67,\n0xE6B7BC:0x7A68,0xE6B8B9:0x7A69,0xE6B99C:0x7A6A,0xE6B8A7:0x7A6B,0xE6B8BC:0x7A6C,\n0xE6BABF:0x7A6D,0xE6BE88:0x7A6E,0xE6BEB5:0x7A6F,0xE6BFB5:0x7A70,0xE78085:0x7A71,\n0xE78087:0x7A72,0xE780A8:0x7A73,0xE78285:0x7A74,0xE782AB:0x7A75,0xE7848F:0x7A76,\n0xE78484:0x7A77,0xE7859C:0x7A78,0xE78586:0x7A79,0xE78587:0x7A7A,0xEFA895:0x7A7B,\n0xE78781:0x7A7C,0xE787BE:0x7A7D,0xE78AB1:0x7A7E,0xE78ABE:0x7B21,0xE78CA4:0x7B22,\n0xEFA896:0x7B23,0xE78DB7:0x7B24,0xE78EBD:0x7B25,0xE78F89:0x7B26,0xE78F96:0x7B27,\n0xE78FA3:0x7B28,0xE78F92:0x7B29,0xE79087:0x7B2A,0xE78FB5:0x7B2B,0xE790A6:0x7B2C,\n0xE790AA:0x7B2D,0xE790A9:0x7B2E,0xE790AE:0x7B2F,0xE791A2:0x7B30,0xE79289:0x7B31,\n0xE7929F:0x7B32,0xE79481:0x7B33,0xE795AF:0x7B34,0xE79A82:0x7B35,0xE79A9C:0x7B36,\n0xE79A9E:0x7B37,0xE79A9B:0x7B38,0xE79AA6:0x7B39,0xEFA897:0x7B3A,0xE79D86:0x7B3B,\n0xE58AAF:0x7B3C,0xE7A0A1:0x7B3D,0xE7A18E:0x7B3E,0xE7A1A4:0x7B3F,0xE7A1BA:0x7B40,\n0xE7A4B0:0x7B41,0xEFA898:0x7B42,0xEFA899:0x7B43,0xEFA89A:0x7B44,0xE7A694:0x7B45,\n0xEFA89B:0x7B46,0xE7A69B:0x7B47,0xE7AB91:0x7B48,0xE7ABA7:0x7B49,0xEFA89C:0x7B4A,\n0xE7ABAB:0x7B4B,0xE7AE9E:0x7B4C,0xEFA89D:0x7B4D,0xE7B588:0x7B4E,0xE7B59C:0x7B4F,\n0xE7B6B7:0x7B50,0xE7B6A0:0x7B51,0xE7B796:0x7B52,0xE7B992:0x7B53,0xE7BD87:0x7B54,\n0xE7BEA1:0x7B55,0xEFA89E:0x7B56,0xE88C81:0x7B57,0xE88DA2:0x7B58,0xE88DBF:0x7B59,\n0xE88F87:0x7B5A,0xE88FB6:0x7B5B,0xE89188:0x7B5C,0xE892B4:0x7B5D,0xE89593:0x7B5E,\n0xE89599:0x7B5F,0xE895AB:0x7B60,0xEFA89F:0x7B61,0xE896B0:0x7B62,0xEFA8A0:0x7B63,\n0xEFA8A1:0x7B64,0xE8A087:0x7B65,0xE8A3B5:0x7B66,0xE8A892:0x7B67,0xE8A8B7:0x7B68,\n0xE8A9B9:0x7B69,0xE8AAA7:0x7B6A,0xE8AABE:0x7B6B,0xE8AB9F:0x7B6C,0xEFA8A2:0x7B6D,\n0xE8ABB6:0x7B6E,0xE8AD93:0x7B6F,0xE8ADBF:0x7B70,0xE8B3B0:0x7B71,0xE8B3B4:0x7B72,\n0xE8B492:0x7B73,0xE8B5B6:0x7B74,0xEFA8A3:0x7B75,0xE8BB8F:0x7B76,0xEFA8A4:0x7B77,\n0xEFA8A5:0x7B78,0xE981A7:0x7B79,0xE9839E:0x7B7A,0xEFA8A6:0x7B7B,0xE98495:0x7B7C,\n0xE984A7:0x7B7D,0xE9879A:0x7B7E,0xE98797:0x7C21,0xE9879E:0x7C22,0xE987AD:0x7C23,\n0xE987AE:0x7C24,0xE987A4:0x7C25,0xE987A5:0x7C26,0xE98886:0x7C27,0xE98890:0x7C28,\n0xE9888A:0x7C29,0xE988BA:0x7C2A,0xE98980:0x7C2B,0xE988BC:0x7C2C,0xE9898E:0x7C2D,\n0xE98999:0x7C2E,0xE98991:0x7C2F,0xE988B9:0x7C30,0xE989A7:0x7C31,0xE98AA7:0x7C32,\n0xE989B7:0x7C33,0xE989B8:0x7C34,0xE98BA7:0x7C35,0xE98B97:0x7C36,0xE98B99:0x7C37,\n0xE98B90:0x7C38,0xEFA8A7:0x7C39,0xE98B95:0x7C3A,0xE98BA0:0x7C3B,0xE98B93:0x7C3C,\n0xE98CA5:0x7C3D,0xE98CA1:0x7C3E,0xE98BBB:0x7C3F,0xEFA8A8:0x7C40,0xE98C9E:0x7C41,\n0xE98BBF:0x7C42,0xE98C9D:0x7C43,0xE98C82:0x7C44,0xE98DB0:0x7C45,0xE98D97:0x7C46,\n0xE98EA4:0x7C47,0xE98F86:0x7C48,0xE98F9E:0x7C49,0xE98FB8:0x7C4A,0xE990B1:0x7C4B,\n0xE99185:0x7C4C,0xE99188:0x7C4D,0xE99692:0x7C4E,0xEFA79C:0x7C4F,0xEFA8A9:0x7C50,\n0xE99A9D:0x7C51,0xE99AAF:0x7C52,0xE99CB3:0x7C53,0xE99CBB:0x7C54,0xE99D83:0x7C55,\n0xE99D8D:0x7C56,0xE99D8F:0x7C57,0xE99D91:0x7C58,0xE99D95:0x7C59,0xE9A197:0x7C5A,\n0xE9A1A5:0x7C5B,0xEFA8AA:0x7C5C,0xEFA8AB:0x7C5D,0xE9A4A7:0x7C5E,0xEFA8AC:0x7C5F,\n0xE9A69E:0x7C60,0xE9A98E:0x7C61,0xE9AB99:0x7C62,0xE9AB9C:0x7C63,0xE9ADB5:0x7C64,\n0xE9ADB2:0x7C65,0xE9AE8F:0x7C66,0xE9AEB1:0x7C67,0xE9AEBB:0x7C68,0xE9B080:0x7C69,\n0xE9B5B0:0x7C6A,0xE9B5AB:0x7C6B,0xEFA8AD:0x7C6C,0xE9B899:0x7C6D,0xE9BB91:0x7C6E,\n0xE285B0:0x7C71,0xE285B1:0x7C72,0xE285B2:0x7C73,0xE285B3:0x7C74,0xE285B4:0x7C75,\n0xE285B5:0x7C76,0xE285B6:0x7C77,0xE285B7:0x7C78,0xE285B8:0x7C79,0xE285B9:0x7C7A,\n0xEFBFA4:0x7C7C,0xEFBC87:0x7C7D,0xEFBC82:0x7C7E,\n\n//FIXME: mojibake\n0xE288A5:0x2142,\n0xEFBFA2:0x224C,\n0xE28892:0x1215D\n};\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/encoding-japanese/src/utf8-to-jis-table.js?");

/***/ }),

/***/ "../node_modules/encoding-japanese/src/utf8-to-jisx0212-table.js":
/*!***********************************************************************!*\
  !*** ../node_modules/encoding-japanese/src/utf8-to-jisx0212-table.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Encoding conversion table for UTF-8 to JIS X 0212:1990 (Hojo-Kanji)\n */\nmodule.exports = {\n0xCB98:0x222F,0xCB87:0x2230,0xC2B8:0x2231,0xCB99:0x2232,0xCB9D:0x2233,\n0xC2AF:0x2234,0xCB9B:0x2235,0xCB9A:0x2236,0x7E:0x2237,0xCE84:0x2238,\n0xCE85:0x2239,0xC2A1:0x2242,0xC2A6:0x2243,0xC2BF:0x2244,0xC2BA:0x226B,\n0xC2AA:0x226C,0xC2A9:0x226D,0xC2AE:0x226E,0xE284A2:0x226F,0xC2A4:0x2270,\n0xE28496:0x2271,0xCE86:0x2661,0xCE88:0x2662,0xCE89:0x2663,0xCE8A:0x2664,\n0xCEAA:0x2665,0xCE8C:0x2667,0xCE8E:0x2669,0xCEAB:0x266A,0xCE8F:0x266C,\n0xCEAC:0x2671,0xCEAD:0x2672,0xCEAE:0x2673,0xCEAF:0x2674,0xCF8A:0x2675,\n0xCE90:0x2676,0xCF8C:0x2677,0xCF82:0x2678,0xCF8D:0x2679,0xCF8B:0x267A,\n0xCEB0:0x267B,0xCF8E:0x267C,0xD082:0x2742,0xD083:0x2743,0xD084:0x2744,\n0xD085:0x2745,0xD086:0x2746,0xD087:0x2747,0xD088:0x2748,0xD089:0x2749,\n0xD08A:0x274A,0xD08B:0x274B,0xD08C:0x274C,0xD08E:0x274D,0xD08F:0x274E,\n0xD192:0x2772,0xD193:0x2773,0xD194:0x2774,0xD195:0x2775,0xD196:0x2776,\n0xD197:0x2777,0xD198:0x2778,0xD199:0x2779,0xD19A:0x277A,0xD19B:0x277B,\n0xD19C:0x277C,0xD19E:0x277D,0xD19F:0x277E,0xC386:0x2921,0xC490:0x2922,\n0xC4A6:0x2924,0xC4B2:0x2926,0xC581:0x2928,0xC4BF:0x2929,0xC58A:0x292B,\n0xC398:0x292C,0xC592:0x292D,0xC5A6:0x292F,0xC39E:0x2930,0xC3A6:0x2941,\n0xC491:0x2942,0xC3B0:0x2943,0xC4A7:0x2944,0xC4B1:0x2945,0xC4B3:0x2946,\n0xC4B8:0x2947,0xC582:0x2948,0xC580:0x2949,0xC589:0x294A,0xC58B:0x294B,\n0xC3B8:0x294C,0xC593:0x294D,0xC39F:0x294E,0xC5A7:0x294F,0xC3BE:0x2950,\n0xC381:0x2A21,0xC380:0x2A22,0xC384:0x2A23,0xC382:0x2A24,0xC482:0x2A25,\n0xC78D:0x2A26,0xC480:0x2A27,0xC484:0x2A28,0xC385:0x2A29,0xC383:0x2A2A,\n0xC486:0x2A2B,0xC488:0x2A2C,0xC48C:0x2A2D,0xC387:0x2A2E,0xC48A:0x2A2F,\n0xC48E:0x2A30,0xC389:0x2A31,0xC388:0x2A32,0xC38B:0x2A33,0xC38A:0x2A34,\n0xC49A:0x2A35,0xC496:0x2A36,0xC492:0x2A37,0xC498:0x2A38,0xC49C:0x2A3A,\n0xC49E:0x2A3B,0xC4A2:0x2A3C,0xC4A0:0x2A3D,0xC4A4:0x2A3E,0xC38D:0x2A3F,\n0xC38C:0x2A40,0xC38F:0x2A41,0xC38E:0x2A42,0xC78F:0x2A43,0xC4B0:0x2A44,\n0xC4AA:0x2A45,0xC4AE:0x2A46,0xC4A8:0x2A47,0xC4B4:0x2A48,0xC4B6:0x2A49,\n0xC4B9:0x2A4A,0xC4BD:0x2A4B,0xC4BB:0x2A4C,0xC583:0x2A4D,0xC587:0x2A4E,\n0xC585:0x2A4F,0xC391:0x2A50,0xC393:0x2A51,0xC392:0x2A52,0xC396:0x2A53,\n0xC394:0x2A54,0xC791:0x2A55,0xC590:0x2A56,0xC58C:0x2A57,0xC395:0x2A58,\n0xC594:0x2A59,0xC598:0x2A5A,0xC596:0x2A5B,0xC59A:0x2A5C,0xC59C:0x2A5D,\n0xC5A0:0x2A5E,0xC59E:0x2A5F,0xC5A4:0x2A60,0xC5A2:0x2A61,0xC39A:0x2A62,\n0xC399:0x2A63,0xC39C:0x2A64,0xC39B:0x2A65,0xC5AC:0x2A66,0xC793:0x2A67,\n0xC5B0:0x2A68,0xC5AA:0x2A69,0xC5B2:0x2A6A,0xC5AE:0x2A6B,0xC5A8:0x2A6C,\n0xC797:0x2A6D,0xC79B:0x2A6E,0xC799:0x2A6F,0xC795:0x2A70,0xC5B4:0x2A71,\n0xC39D:0x2A72,0xC5B8:0x2A73,0xC5B6:0x2A74,0xC5B9:0x2A75,0xC5BD:0x2A76,\n0xC5BB:0x2A77,0xC3A1:0x2B21,0xC3A0:0x2B22,0xC3A4:0x2B23,0xC3A2:0x2B24,\n0xC483:0x2B25,0xC78E:0x2B26,0xC481:0x2B27,0xC485:0x2B28,0xC3A5:0x2B29,\n0xC3A3:0x2B2A,0xC487:0x2B2B,0xC489:0x2B2C,0xC48D:0x2B2D,0xC3A7:0x2B2E,\n0xC48B:0x2B2F,0xC48F:0x2B30,0xC3A9:0x2B31,0xC3A8:0x2B32,0xC3AB:0x2B33,\n0xC3AA:0x2B34,0xC49B:0x2B35,0xC497:0x2B36,0xC493:0x2B37,0xC499:0x2B38,\n0xC7B5:0x2B39,0xC49D:0x2B3A,0xC49F:0x2B3B,0xC4A1:0x2B3D,0xC4A5:0x2B3E,\n0xC3AD:0x2B3F,0xC3AC:0x2B40,0xC3AF:0x2B41,0xC3AE:0x2B42,0xC790:0x2B43,\n0xC4AB:0x2B45,0xC4AF:0x2B46,0xC4A9:0x2B47,0xC4B5:0x2B48,0xC4B7:0x2B49,\n0xC4BA:0x2B4A,0xC4BE:0x2B4B,0xC4BC:0x2B4C,0xC584:0x2B4D,0xC588:0x2B4E,\n0xC586:0x2B4F,0xC3B1:0x2B50,0xC3B3:0x2B51,0xC3B2:0x2B52,0xC3B6:0x2B53,\n0xC3B4:0x2B54,0xC792:0x2B55,0xC591:0x2B56,0xC58D:0x2B57,0xC3B5:0x2B58,\n0xC595:0x2B59,0xC599:0x2B5A,0xC597:0x2B5B,0xC59B:0x2B5C,0xC59D:0x2B5D,\n0xC5A1:0x2B5E,0xC59F:0x2B5F,0xC5A5:0x2B60,0xC5A3:0x2B61,0xC3BA:0x2B62,\n0xC3B9:0x2B63,0xC3BC:0x2B64,0xC3BB:0x2B65,0xC5AD:0x2B66,0xC794:0x2B67,\n0xC5B1:0x2B68,0xC5AB:0x2B69,0xC5B3:0x2B6A,0xC5AF:0x2B6B,0xC5A9:0x2B6C,\n0xC798:0x2B6D,0xC79C:0x2B6E,0xC79A:0x2B6F,0xC796:0x2B70,0xC5B5:0x2B71,\n0xC3BD:0x2B72,0xC3BF:0x2B73,0xC5B7:0x2B74,0xC5BA:0x2B75,0xC5BE:0x2B76,\n0xC5BC:0x2B77,\n0xE4B882:0x3021,0xE4B884:0x3022,0xE4B885:0x3023,0xE4B88C:0x3024,\n0xE4B892:0x3025,0xE4B89F:0x3026,0xE4B8A3:0x3027,0xE4B8A4:0x3028,0xE4B8A8:0x3029,\n0xE4B8AB:0x302A,0xE4B8AE:0x302B,0xE4B8AF:0x302C,0xE4B8B0:0x302D,0xE4B8B5:0x302E,\n0xE4B980:0x302F,0xE4B981:0x3030,0xE4B984:0x3031,0xE4B987:0x3032,0xE4B991:0x3033,\n0xE4B99A:0x3034,0xE4B99C:0x3035,0xE4B9A3:0x3036,0xE4B9A8:0x3037,0xE4B9A9:0x3038,\n0xE4B9B4:0x3039,0xE4B9B5:0x303A,0xE4B9B9:0x303B,0xE4B9BF:0x303C,0xE4BA8D:0x303D,\n0xE4BA96:0x303E,0xE4BA97:0x303F,0xE4BA9D:0x3040,0xE4BAAF:0x3041,0xE4BAB9:0x3042,\n0xE4BB83:0x3043,0xE4BB90:0x3044,0xE4BB9A:0x3045,0xE4BB9B:0x3046,0xE4BBA0:0x3047,\n0xE4BBA1:0x3048,0xE4BBA2:0x3049,0xE4BBA8:0x304A,0xE4BBAF:0x304B,0xE4BBB1:0x304C,\n0xE4BBB3:0x304D,0xE4BBB5:0x304E,0xE4BBBD:0x304F,0xE4BBBE:0x3050,0xE4BBBF:0x3051,\n0xE4BC80:0x3052,0xE4BC82:0x3053,0xE4BC83:0x3054,0xE4BC88:0x3055,0xE4BC8B:0x3056,\n0xE4BC8C:0x3057,0xE4BC92:0x3058,0xE4BC95:0x3059,0xE4BC96:0x305A,0xE4BC97:0x305B,\n0xE4BC99:0x305C,0xE4BCAE:0x305D,0xE4BCB1:0x305E,0xE4BDA0:0x305F,0xE4BCB3:0x3060,\n0xE4BCB5:0x3061,0xE4BCB7:0x3062,0xE4BCB9:0x3063,0xE4BCBB:0x3064,0xE4BCBE:0x3065,\n0xE4BD80:0x3066,0xE4BD82:0x3067,0xE4BD88:0x3068,0xE4BD89:0x3069,0xE4BD8B:0x306A,\n0xE4BD8C:0x306B,0xE4BD92:0x306C,0xE4BD94:0x306D,0xE4BD96:0x306E,0xE4BD98:0x306F,\n0xE4BD9F:0x3070,0xE4BDA3:0x3071,0xE4BDAA:0x3072,0xE4BDAC:0x3073,0xE4BDAE:0x3074,\n0xE4BDB1:0x3075,0xE4BDB7:0x3076,0xE4BDB8:0x3077,0xE4BDB9:0x3078,0xE4BDBA:0x3079,\n0xE4BDBD:0x307A,0xE4BDBE:0x307B,0xE4BE81:0x307C,0xE4BE82:0x307D,0xE4BE84:0x307E,\n0xE4BE85:0x3121,0xE4BE89:0x3122,0xE4BE8A:0x3123,0xE4BE8C:0x3124,0xE4BE8E:0x3125,\n0xE4BE90:0x3126,0xE4BE92:0x3127,0xE4BE93:0x3128,0xE4BE94:0x3129,0xE4BE97:0x312A,\n0xE4BE99:0x312B,0xE4BE9A:0x312C,0xE4BE9E:0x312D,0xE4BE9F:0x312E,0xE4BEB2:0x312F,\n0xE4BEB7:0x3130,0xE4BEB9:0x3131,0xE4BEBB:0x3132,0xE4BEBC:0x3133,0xE4BEBD:0x3134,\n0xE4BEBE:0x3135,0xE4BF80:0x3136,0xE4BF81:0x3137,0xE4BF85:0x3138,0xE4BF86:0x3139,\n0xE4BF88:0x313A,0xE4BF89:0x313B,0xE4BF8B:0x313C,0xE4BF8C:0x313D,0xE4BF8D:0x313E,\n0xE4BF8F:0x313F,0xE4BF92:0x3140,0xE4BF9C:0x3141,0xE4BFA0:0x3142,0xE4BFA2:0x3143,\n0xE4BFB0:0x3144,0xE4BFB2:0x3145,0xE4BFBC:0x3146,0xE4BFBD:0x3147,0xE4BFBF:0x3148,\n0xE58080:0x3149,0xE58081:0x314A,0xE58084:0x314B,0xE58087:0x314C,0xE5808A:0x314D,\n0xE5808C:0x314E,0xE5808E:0x314F,0xE58090:0x3150,0xE58093:0x3151,0xE58097:0x3152,\n0xE58098:0x3153,0xE5809B:0x3154,0xE5809C:0x3155,0xE5809D:0x3156,0xE5809E:0x3157,\n0xE580A2:0x3158,0xE580A7:0x3159,0xE580AE:0x315A,0xE580B0:0x315B,0xE580B2:0x315C,\n0xE580B3:0x315D,0xE580B5:0x315E,0xE58180:0x315F,0xE58181:0x3160,0xE58182:0x3161,\n0xE58185:0x3162,0xE58186:0x3163,0xE5818A:0x3164,0xE5818C:0x3165,0xE5818E:0x3166,\n0xE58191:0x3167,0xE58192:0x3168,0xE58193:0x3169,0xE58197:0x316A,0xE58199:0x316B,\n0xE5819F:0x316C,0xE581A0:0x316D,0xE581A2:0x316E,0xE581A3:0x316F,0xE581A6:0x3170,\n0xE581A7:0x3171,0xE581AA:0x3172,0xE581AD:0x3173,0xE581B0:0x3174,0xE581B1:0x3175,\n0xE580BB:0x3176,0xE58281:0x3177,0xE58283:0x3178,0xE58284:0x3179,0xE58286:0x317A,\n0xE5828A:0x317B,0xE5828E:0x317C,0xE5828F:0x317D,0xE58290:0x317E,0xE58292:0x3221,\n0xE58293:0x3222,0xE58294:0x3223,0xE58296:0x3224,0xE5829B:0x3225,0xE5829C:0x3226,\n0xE5829E:0x3227,0xE5829F:0x3228,0xE582A0:0x3229,0xE582A1:0x322A,0xE582A2:0x322B,\n0xE582AA:0x322C,0xE582AF:0x322D,0xE582B0:0x322E,0xE582B9:0x322F,0xE582BA:0x3230,\n0xE582BD:0x3231,0xE58380:0x3232,0xE58383:0x3233,0xE58384:0x3234,0xE58387:0x3235,\n0xE5838C:0x3236,0xE5838E:0x3237,0xE58390:0x3238,0xE58393:0x3239,0xE58394:0x323A,\n0xE58398:0x323B,0xE5839C:0x323C,0xE5839D:0x323D,0xE5839F:0x323E,0xE583A2:0x323F,\n0xE583A4:0x3240,0xE583A6:0x3241,0xE583A8:0x3242,0xE583A9:0x3243,0xE583AF:0x3244,\n0xE583B1:0x3245,0xE583B6:0x3246,0xE583BA:0x3247,0xE583BE:0x3248,0xE58483:0x3249,\n0xE58486:0x324A,0xE58487:0x324B,0xE58488:0x324C,0xE5848B:0x324D,0xE5848C:0x324E,\n0xE5848D:0x324F,0xE5848E:0x3250,0xE583B2:0x3251,0xE58490:0x3252,0xE58497:0x3253,\n0xE58499:0x3254,0xE5849B:0x3255,0xE5849C:0x3256,0xE5849D:0x3257,0xE5849E:0x3258,\n0xE584A3:0x3259,0xE584A7:0x325A,0xE584A8:0x325B,0xE584AC:0x325C,0xE584AD:0x325D,\n0xE584AF:0x325E,0xE584B1:0x325F,0xE584B3:0x3260,0xE584B4:0x3261,0xE584B5:0x3262,\n0xE584B8:0x3263,0xE584B9:0x3264,0xE58582:0x3265,0xE5858A:0x3266,0xE5858F:0x3267,\n0xE58593:0x3268,0xE58595:0x3269,0xE58597:0x326A,0xE58598:0x326B,0xE5859F:0x326C,\n0xE585A4:0x326D,0xE585A6:0x326E,0xE585BE:0x326F,0xE58683:0x3270,0xE58684:0x3271,\n0xE5868B:0x3272,0xE5868E:0x3273,0xE58698:0x3274,0xE5869D:0x3275,0xE586A1:0x3276,\n0xE586A3:0x3277,0xE586AD:0x3278,0xE586B8:0x3279,0xE586BA:0x327A,0xE586BC:0x327B,\n0xE586BE:0x327C,0xE586BF:0x327D,0xE58782:0x327E,0xE58788:0x3321,0xE5878F:0x3322,\n0xE58791:0x3323,0xE58792:0x3324,0xE58793:0x3325,0xE58795:0x3326,0xE58798:0x3327,\n0xE5879E:0x3328,0xE587A2:0x3329,0xE587A5:0x332A,0xE587AE:0x332B,0xE587B2:0x332C,\n0xE587B3:0x332D,0xE587B4:0x332E,0xE587B7:0x332F,0xE58881:0x3330,0xE58882:0x3331,\n0xE58885:0x3332,0xE58892:0x3333,0xE58893:0x3334,0xE58895:0x3335,0xE58896:0x3336,\n0xE58898:0x3337,0xE588A2:0x3338,0xE588A8:0x3339,0xE588B1:0x333A,0xE588B2:0x333B,\n0xE588B5:0x333C,0xE588BC:0x333D,0xE58985:0x333E,0xE58989:0x333F,0xE58995:0x3340,\n0xE58997:0x3341,0xE58998:0x3342,0xE5899A:0x3343,0xE5899C:0x3344,0xE5899F:0x3345,\n0xE589A0:0x3346,0xE589A1:0x3347,0xE589A6:0x3348,0xE589AE:0x3349,0xE589B7:0x334A,\n0xE589B8:0x334B,0xE589B9:0x334C,0xE58A80:0x334D,0xE58A82:0x334E,0xE58A85:0x334F,\n0xE58A8A:0x3350,0xE58A8C:0x3351,0xE58A93:0x3352,0xE58A95:0x3353,0xE58A96:0x3354,\n0xE58A97:0x3355,0xE58A98:0x3356,0xE58A9A:0x3357,0xE58A9C:0x3358,0xE58AA4:0x3359,\n0xE58AA5:0x335A,0xE58AA6:0x335B,0xE58AA7:0x335C,0xE58AAF:0x335D,0xE58AB0:0x335E,\n0xE58AB6:0x335F,0xE58AB7:0x3360,0xE58AB8:0x3361,0xE58ABA:0x3362,0xE58ABB:0x3363,\n0xE58ABD:0x3364,0xE58B80:0x3365,0xE58B84:0x3366,0xE58B86:0x3367,0xE58B88:0x3368,\n0xE58B8C:0x3369,0xE58B8F:0x336A,0xE58B91:0x336B,0xE58B94:0x336C,0xE58B96:0x336D,\n0xE58B9B:0x336E,0xE58B9C:0x336F,0xE58BA1:0x3370,0xE58BA5:0x3371,0xE58BA8:0x3372,\n0xE58BA9:0x3373,0xE58BAA:0x3374,0xE58BAC:0x3375,0xE58BB0:0x3376,0xE58BB1:0x3377,\n0xE58BB4:0x3378,0xE58BB6:0x3379,0xE58BB7:0x337A,0xE58C80:0x337B,0xE58C83:0x337C,\n0xE58C8A:0x337D,0xE58C8B:0x337E,0xE58C8C:0x3421,0xE58C91:0x3422,0xE58C93:0x3423,\n0xE58C98:0x3424,0xE58C9B:0x3425,0xE58C9C:0x3426,0xE58C9E:0x3427,0xE58C9F:0x3428,\n0xE58CA5:0x3429,0xE58CA7:0x342A,0xE58CA8:0x342B,0xE58CA9:0x342C,0xE58CAB:0x342D,\n0xE58CAC:0x342E,0xE58CAD:0x342F,0xE58CB0:0x3430,0xE58CB2:0x3431,0xE58CB5:0x3432,\n0xE58CBC:0x3433,0xE58CBD:0x3434,0xE58CBE:0x3435,0xE58D82:0x3436,0xE58D8C:0x3437,\n0xE58D8B:0x3438,0xE58D99:0x3439,0xE58D9B:0x343A,0xE58DA1:0x343B,0xE58DA3:0x343C,\n0xE58DA5:0x343D,0xE58DAC:0x343E,0xE58DAD:0x343F,0xE58DB2:0x3440,0xE58DB9:0x3441,\n0xE58DBE:0x3442,0xE58E83:0x3443,0xE58E87:0x3444,0xE58E88:0x3445,0xE58E8E:0x3446,\n0xE58E93:0x3447,0xE58E94:0x3448,0xE58E99:0x3449,0xE58E9D:0x344A,0xE58EA1:0x344B,\n0xE58EA4:0x344C,0xE58EAA:0x344D,0xE58EAB:0x344E,0xE58EAF:0x344F,0xE58EB2:0x3450,\n0xE58EB4:0x3451,0xE58EB5:0x3452,0xE58EB7:0x3453,0xE58EB8:0x3454,0xE58EBA:0x3455,\n0xE58EBD:0x3456,0xE58F80:0x3457,0xE58F85:0x3458,0xE58F8F:0x3459,0xE58F92:0x345A,\n0xE58F93:0x345B,0xE58F95:0x345C,0xE58F9A:0x345D,0xE58F9D:0x345E,0xE58F9E:0x345F,\n0xE58FA0:0x3460,0xE58FA6:0x3461,0xE58FA7:0x3462,0xE58FB5:0x3463,0xE59082:0x3464,\n0xE59093:0x3465,0xE5909A:0x3466,0xE590A1:0x3467,0xE590A7:0x3468,0xE590A8:0x3469,\n0xE590AA:0x346A,0xE590AF:0x346B,0xE590B1:0x346C,0xE590B4:0x346D,0xE590B5:0x346E,\n0xE59183:0x346F,0xE59184:0x3470,0xE59187:0x3471,0xE5918D:0x3472,0xE5918F:0x3473,\n0xE5919E:0x3474,0xE591A2:0x3475,0xE591A4:0x3476,0xE591A6:0x3477,0xE591A7:0x3478,\n0xE591A9:0x3479,0xE591AB:0x347A,0xE591AD:0x347B,0xE591AE:0x347C,0xE591B4:0x347D,\n0xE591BF:0x347E,0xE59281:0x3521,0xE59283:0x3522,0xE59285:0x3523,0xE59288:0x3524,\n0xE59289:0x3525,0xE5928D:0x3526,0xE59291:0x3527,0xE59295:0x3528,0xE59296:0x3529,\n0xE5929C:0x352A,0xE5929F:0x352B,0xE592A1:0x352C,0xE592A6:0x352D,0xE592A7:0x352E,\n0xE592A9:0x352F,0xE592AA:0x3530,0xE592AD:0x3531,0xE592AE:0x3532,0xE592B1:0x3533,\n0xE592B7:0x3534,0xE592B9:0x3535,0xE592BA:0x3536,0xE592BB:0x3537,0xE592BF:0x3538,\n0xE59386:0x3539,0xE5938A:0x353A,0xE5938D:0x353B,0xE5938E:0x353C,0xE593A0:0x353D,\n0xE593AA:0x353E,0xE593AC:0x353F,0xE593AF:0x3540,0xE593B6:0x3541,0xE593BC:0x3542,\n0xE593BE:0x3543,0xE593BF:0x3544,0xE59480:0x3545,0xE59481:0x3546,0xE59485:0x3547,\n0xE59488:0x3548,0xE59489:0x3549,0xE5948C:0x354A,0xE5948D:0x354B,0xE5948E:0x354C,\n0xE59495:0x354D,0xE594AA:0x354E,0xE594AB:0x354F,0xE594B2:0x3550,0xE594B5:0x3551,\n0xE594B6:0x3552,0xE594BB:0x3553,0xE594BC:0x3554,0xE594BD:0x3555,0xE59581:0x3556,\n0xE59587:0x3557,0xE59589:0x3558,0xE5958A:0x3559,0xE5958D:0x355A,0xE59590:0x355B,\n0xE59591:0x355C,0xE59598:0x355D,0xE5959A:0x355E,0xE5959B:0x355F,0xE5959E:0x3560,\n0xE595A0:0x3561,0xE595A1:0x3562,0xE595A4:0x3563,0xE595A6:0x3564,0xE595BF:0x3565,\n0xE59681:0x3566,0xE59682:0x3567,0xE59686:0x3568,0xE59688:0x3569,0xE5968E:0x356A,\n0xE5968F:0x356B,0xE59691:0x356C,0xE59692:0x356D,0xE59693:0x356E,0xE59694:0x356F,\n0xE59697:0x3570,0xE596A3:0x3571,0xE596A4:0x3572,0xE596AD:0x3573,0xE596B2:0x3574,\n0xE596BF:0x3575,0xE59781:0x3576,0xE59783:0x3577,0xE59786:0x3578,0xE59789:0x3579,\n0xE5978B:0x357A,0xE5978C:0x357B,0xE5978E:0x357C,0xE59791:0x357D,0xE59792:0x357E,\n0xE59793:0x3621,0xE59797:0x3622,0xE59798:0x3623,0xE5979B:0x3624,0xE5979E:0x3625,\n0xE597A2:0x3626,0xE597A9:0x3627,0xE597B6:0x3628,0xE597BF:0x3629,0xE59885:0x362A,\n0xE59888:0x362B,0xE5988A:0x362C,0xE5988D:0x362D,0xE5988E:0x362E,0xE5988F:0x362F,\n0xE59890:0x3630,0xE59891:0x3631,0xE59892:0x3632,0xE59899:0x3633,0xE598AC:0x3634,\n0xE598B0:0x3635,0xE598B3:0x3636,0xE598B5:0x3637,0xE598B7:0x3638,0xE598B9:0x3639,\n0xE598BB:0x363A,0xE598BC:0x363B,0xE598BD:0x363C,0xE598BF:0x363D,0xE59980:0x363E,\n0xE59981:0x363F,0xE59983:0x3640,0xE59984:0x3641,0xE59986:0x3642,0xE59989:0x3643,\n0xE5998B:0x3644,0xE5998D:0x3645,0xE5998F:0x3646,0xE59994:0x3647,0xE5999E:0x3648,\n0xE599A0:0x3649,0xE599A1:0x364A,0xE599A2:0x364B,0xE599A3:0x364C,0xE599A6:0x364D,\n0xE599A9:0x364E,0xE599AD:0x364F,0xE599AF:0x3650,0xE599B1:0x3651,0xE599B2:0x3652,\n0xE599B5:0x3653,0xE59A84:0x3654,0xE59A85:0x3655,0xE59A88:0x3656,0xE59A8B:0x3657,\n0xE59A8C:0x3658,0xE59A95:0x3659,0xE59A99:0x365A,0xE59A9A:0x365B,0xE59A9D:0x365C,\n0xE59A9E:0x365D,0xE59A9F:0x365E,0xE59AA6:0x365F,0xE59AA7:0x3660,0xE59AA8:0x3661,\n0xE59AA9:0x3662,0xE59AAB:0x3663,0xE59AAC:0x3664,0xE59AAD:0x3665,0xE59AB1:0x3666,\n0xE59AB3:0x3667,0xE59AB7:0x3668,0xE59ABE:0x3669,0xE59B85:0x366A,0xE59B89:0x366B,\n0xE59B8A:0x366C,0xE59B8B:0x366D,0xE59B8F:0x366E,0xE59B90:0x366F,0xE59B8C:0x3670,\n0xE59B8D:0x3671,0xE59B99:0x3672,0xE59B9C:0x3673,0xE59B9D:0x3674,0xE59B9F:0x3675,\n0xE59BA1:0x3676,0xE59BA4:0x3677,0xE59BA5:0x3678,0xE59BA6:0x3679,0xE59BA7:0x367A,\n0xE59BA8:0x367B,0xE59BB1:0x367C,0xE59BAB:0x367D,0xE59BAD:0x367E,0xE59BB6:0x3721,\n0xE59BB7:0x3722,0xE59C81:0x3723,0xE59C82:0x3724,0xE59C87:0x3725,0xE59C8A:0x3726,\n0xE59C8C:0x3727,0xE59C91:0x3728,0xE59C95:0x3729,0xE59C9A:0x372A,0xE59C9B:0x372B,\n0xE59C9D:0x372C,0xE59CA0:0x372D,0xE59CA2:0x372E,0xE59CA3:0x372F,0xE59CA4:0x3730,\n0xE59CA5:0x3731,0xE59CA9:0x3732,0xE59CAA:0x3733,0xE59CAC:0x3734,0xE59CAE:0x3735,\n0xE59CAF:0x3736,0xE59CB3:0x3737,0xE59CB4:0x3738,0xE59CBD:0x3739,0xE59CBE:0x373A,\n0xE59CBF:0x373B,0xE59D85:0x373C,0xE59D86:0x373D,0xE59D8C:0x373E,0xE59D8D:0x373F,\n0xE59D92:0x3740,0xE59DA2:0x3741,0xE59DA5:0x3742,0xE59DA7:0x3743,0xE59DA8:0x3744,\n0xE59DAB:0x3745,0xE59DAD:0x3746,0xE59DAE:0x3747,0xE59DAF:0x3748,0xE59DB0:0x3749,\n0xE59DB1:0x374A,0xE59DB3:0x374B,0xE59DB4:0x374C,0xE59DB5:0x374D,0xE59DB7:0x374E,\n0xE59DB9:0x374F,0xE59DBA:0x3750,0xE59DBB:0x3751,0xE59DBC:0x3752,0xE59DBE:0x3753,\n0xE59E81:0x3754,0xE59E83:0x3755,0xE59E8C:0x3756,0xE59E94:0x3757,0xE59E97:0x3758,\n0xE59E99:0x3759,0xE59E9A:0x375A,0xE59E9C:0x375B,0xE59E9D:0x375C,0xE59E9E:0x375D,\n0xE59E9F:0x375E,0xE59EA1:0x375F,0xE59E95:0x3760,0xE59EA7:0x3761,0xE59EA8:0x3762,\n0xE59EA9:0x3763,0xE59EAC:0x3764,0xE59EB8:0x3765,0xE59EBD:0x3766,0xE59F87:0x3767,\n0xE59F88:0x3768,0xE59F8C:0x3769,0xE59F8F:0x376A,0xE59F95:0x376B,0xE59F9D:0x376C,\n0xE59F9E:0x376D,0xE59FA4:0x376E,0xE59FA6:0x376F,0xE59FA7:0x3770,0xE59FA9:0x3771,\n0xE59FAD:0x3772,0xE59FB0:0x3773,0xE59FB5:0x3774,0xE59FB6:0x3775,0xE59FB8:0x3776,\n0xE59FBD:0x3777,0xE59FBE:0x3778,0xE59FBF:0x3779,0xE5A083:0x377A,0xE5A084:0x377B,\n0xE5A088:0x377C,0xE5A089:0x377D,0xE59FA1:0x377E,0xE5A08C:0x3821,0xE5A08D:0x3822,\n0xE5A09B:0x3823,0xE5A09E:0x3824,0xE5A09F:0x3825,0xE5A0A0:0x3826,0xE5A0A6:0x3827,\n0xE5A0A7:0x3828,0xE5A0AD:0x3829,0xE5A0B2:0x382A,0xE5A0B9:0x382B,0xE5A0BF:0x382C,\n0xE5A189:0x382D,0xE5A18C:0x382E,0xE5A18D:0x382F,0xE5A18F:0x3830,0xE5A190:0x3831,\n0xE5A195:0x3832,0xE5A19F:0x3833,0xE5A1A1:0x3834,0xE5A1A4:0x3835,0xE5A1A7:0x3836,\n0xE5A1A8:0x3837,0xE5A1B8:0x3838,0xE5A1BC:0x3839,0xE5A1BF:0x383A,0xE5A280:0x383B,\n0xE5A281:0x383C,0xE5A287:0x383D,0xE5A288:0x383E,0xE5A289:0x383F,0xE5A28A:0x3840,\n0xE5A28C:0x3841,0xE5A28D:0x3842,0xE5A28F:0x3843,0xE5A290:0x3844,0xE5A294:0x3845,\n0xE5A296:0x3846,0xE5A29D:0x3847,0xE5A2A0:0x3848,0xE5A2A1:0x3849,0xE5A2A2:0x384A,\n0xE5A2A6:0x384B,0xE5A2A9:0x384C,0xE5A2B1:0x384D,0xE5A2B2:0x384E,0xE5A384:0x384F,\n0xE5A2BC:0x3850,0xE5A382:0x3851,0xE5A388:0x3852,0xE5A38D:0x3853,0xE5A38E:0x3854,\n0xE5A390:0x3855,0xE5A392:0x3856,0xE5A394:0x3857,0xE5A396:0x3858,0xE5A39A:0x3859,\n0xE5A39D:0x385A,0xE5A3A1:0x385B,0xE5A3A2:0x385C,0xE5A3A9:0x385D,0xE5A3B3:0x385E,\n0xE5A485:0x385F,0xE5A486:0x3860,0xE5A48B:0x3861,0xE5A48C:0x3862,0xE5A492:0x3863,\n0xE5A493:0x3864,0xE5A494:0x3865,0xE89981:0x3866,0xE5A49D:0x3867,0xE5A4A1:0x3868,\n0xE5A4A3:0x3869,0xE5A4A4:0x386A,0xE5A4A8:0x386B,0xE5A4AF:0x386C,0xE5A4B0:0x386D,\n0xE5A4B3:0x386E,0xE5A4B5:0x386F,0xE5A4B6:0x3870,0xE5A4BF:0x3871,0xE5A583:0x3872,\n0xE5A586:0x3873,0xE5A592:0x3874,0xE5A593:0x3875,0xE5A599:0x3876,0xE5A59B:0x3877,\n0xE5A59D:0x3878,0xE5A59E:0x3879,0xE5A59F:0x387A,0xE5A5A1:0x387B,0xE5A5A3:0x387C,\n0xE5A5AB:0x387D,0xE5A5AD:0x387E,0xE5A5AF:0x3921,0xE5A5B2:0x3922,0xE5A5B5:0x3923,\n0xE5A5B6:0x3924,0xE5A5B9:0x3925,0xE5A5BB:0x3926,0xE5A5BC:0x3927,0xE5A68B:0x3928,\n0xE5A68C:0x3929,0xE5A68E:0x392A,0xE5A692:0x392B,0xE5A695:0x392C,0xE5A697:0x392D,\n0xE5A69F:0x392E,0xE5A6A4:0x392F,0xE5A6A7:0x3930,0xE5A6AD:0x3931,0xE5A6AE:0x3932,\n0xE5A6AF:0x3933,0xE5A6B0:0x3934,0xE5A6B3:0x3935,0xE5A6B7:0x3936,0xE5A6BA:0x3937,\n0xE5A6BC:0x3938,0xE5A781:0x3939,0xE5A783:0x393A,0xE5A784:0x393B,0xE5A788:0x393C,\n0xE5A78A:0x393D,0xE5A78D:0x393E,0xE5A792:0x393F,0xE5A79D:0x3940,0xE5A79E:0x3941,\n0xE5A79F:0x3942,0xE5A7A3:0x3943,0xE5A7A4:0x3944,0xE5A7A7:0x3945,0xE5A7AE:0x3946,\n0xE5A7AF:0x3947,0xE5A7B1:0x3948,0xE5A7B2:0x3949,0xE5A7B4:0x394A,0xE5A7B7:0x394B,\n0xE5A880:0x394C,0xE5A884:0x394D,0xE5A88C:0x394E,0xE5A88D:0x394F,0xE5A88E:0x3950,\n0xE5A892:0x3951,0xE5A893:0x3952,0xE5A89E:0x3953,0xE5A8A3:0x3954,0xE5A8A4:0x3955,\n0xE5A8A7:0x3956,0xE5A8A8:0x3957,0xE5A8AA:0x3958,0xE5A8AD:0x3959,0xE5A8B0:0x395A,\n0xE5A984:0x395B,0xE5A985:0x395C,0xE5A987:0x395D,0xE5A988:0x395E,0xE5A98C:0x395F,\n0xE5A990:0x3960,0xE5A995:0x3961,0xE5A99E:0x3962,0xE5A9A3:0x3963,0xE5A9A5:0x3964,\n0xE5A9A7:0x3965,0xE5A9AD:0x3966,0xE5A9B7:0x3967,0xE5A9BA:0x3968,0xE5A9BB:0x3969,\n0xE5A9BE:0x396A,0xE5AA8B:0x396B,0xE5AA90:0x396C,0xE5AA93:0x396D,0xE5AA96:0x396E,\n0xE5AA99:0x396F,0xE5AA9C:0x3970,0xE5AA9E:0x3971,0xE5AA9F:0x3972,0xE5AAA0:0x3973,\n0xE5AAA2:0x3974,0xE5AAA7:0x3975,0xE5AAAC:0x3976,0xE5AAB1:0x3977,0xE5AAB2:0x3978,\n0xE5AAB3:0x3979,0xE5AAB5:0x397A,0xE5AAB8:0x397B,0xE5AABA:0x397C,0xE5AABB:0x397D,\n0xE5AABF:0x397E,0xE5AB84:0x3A21,0xE5AB86:0x3A22,0xE5AB88:0x3A23,0xE5AB8F:0x3A24,\n0xE5AB9A:0x3A25,0xE5AB9C:0x3A26,0xE5ABA0:0x3A27,0xE5ABA5:0x3A28,0xE5ABAA:0x3A29,\n0xE5ABAE:0x3A2A,0xE5ABB5:0x3A2B,0xE5ABB6:0x3A2C,0xE5ABBD:0x3A2D,0xE5AC80:0x3A2E,\n0xE5AC81:0x3A2F,0xE5AC88:0x3A30,0xE5AC97:0x3A31,0xE5ACB4:0x3A32,0xE5AC99:0x3A33,\n0xE5AC9B:0x3A34,0xE5AC9D:0x3A35,0xE5ACA1:0x3A36,0xE5ACA5:0x3A37,0xE5ACAD:0x3A38,\n0xE5ACB8:0x3A39,0xE5AD81:0x3A3A,0xE5AD8B:0x3A3B,0xE5AD8C:0x3A3C,0xE5AD92:0x3A3D,\n0xE5AD96:0x3A3E,0xE5AD9E:0x3A3F,0xE5ADA8:0x3A40,0xE5ADAE:0x3A41,0xE5ADAF:0x3A42,\n0xE5ADBC:0x3A43,0xE5ADBD:0x3A44,0xE5ADBE:0x3A45,0xE5ADBF:0x3A46,0xE5AE81:0x3A47,\n0xE5AE84:0x3A48,0xE5AE86:0x3A49,0xE5AE8A:0x3A4A,0xE5AE8E:0x3A4B,0xE5AE90:0x3A4C,\n0xE5AE91:0x3A4D,0xE5AE93:0x3A4E,0xE5AE94:0x3A4F,0xE5AE96:0x3A50,0xE5AEA8:0x3A51,\n0xE5AEA9:0x3A52,0xE5AEAC:0x3A53,0xE5AEAD:0x3A54,0xE5AEAF:0x3A55,0xE5AEB1:0x3A56,\n0xE5AEB2:0x3A57,0xE5AEB7:0x3A58,0xE5AEBA:0x3A59,0xE5AEBC:0x3A5A,0xE5AF80:0x3A5B,\n0xE5AF81:0x3A5C,0xE5AF8D:0x3A5D,0xE5AF8F:0x3A5E,0xE5AF96:0x3A5F,0xE5AF97:0x3A60,\n0xE5AF98:0x3A61,0xE5AF99:0x3A62,0xE5AF9A:0x3A63,0xE5AFA0:0x3A64,0xE5AFAF:0x3A65,\n0xE5AFB1:0x3A66,0xE5AFB4:0x3A67,0xE5AFBD:0x3A68,0xE5B08C:0x3A69,0xE5B097:0x3A6A,\n0xE5B09E:0x3A6B,0xE5B09F:0x3A6C,0xE5B0A3:0x3A6D,0xE5B0A6:0x3A6E,0xE5B0A9:0x3A6F,\n0xE5B0AB:0x3A70,0xE5B0AC:0x3A71,0xE5B0AE:0x3A72,0xE5B0B0:0x3A73,0xE5B0B2:0x3A74,\n0xE5B0B5:0x3A75,0xE5B0B6:0x3A76,0xE5B199:0x3A77,0xE5B19A:0x3A78,0xE5B19C:0x3A79,\n0xE5B1A2:0x3A7A,0xE5B1A3:0x3A7B,0xE5B1A7:0x3A7C,0xE5B1A8:0x3A7D,0xE5B1A9:0x3A7E,\n0xE5B1AD:0x3B21,0xE5B1B0:0x3B22,0xE5B1B4:0x3B23,0xE5B1B5:0x3B24,0xE5B1BA:0x3B25,\n0xE5B1BB:0x3B26,0xE5B1BC:0x3B27,0xE5B1BD:0x3B28,0xE5B287:0x3B29,0xE5B288:0x3B2A,\n0xE5B28A:0x3B2B,0xE5B28F:0x3B2C,0xE5B292:0x3B2D,0xE5B29D:0x3B2E,0xE5B29F:0x3B2F,\n0xE5B2A0:0x3B30,0xE5B2A2:0x3B31,0xE5B2A3:0x3B32,0xE5B2A6:0x3B33,0xE5B2AA:0x3B34,\n0xE5B2B2:0x3B35,0xE5B2B4:0x3B36,0xE5B2B5:0x3B37,0xE5B2BA:0x3B38,0xE5B389:0x3B39,\n0xE5B38B:0x3B3A,0xE5B392:0x3B3B,0xE5B39D:0x3B3C,0xE5B397:0x3B3D,0xE5B3AE:0x3B3E,\n0xE5B3B1:0x3B3F,0xE5B3B2:0x3B40,0xE5B3B4:0x3B41,0xE5B481:0x3B42,0xE5B486:0x3B43,\n0xE5B48D:0x3B44,0xE5B492:0x3B45,0xE5B4AB:0x3B46,0xE5B4A3:0x3B47,0xE5B4A4:0x3B48,\n0xE5B4A6:0x3B49,0xE5B4A7:0x3B4A,0xE5B4B1:0x3B4B,0xE5B4B4:0x3B4C,0xE5B4B9:0x3B4D,\n0xE5B4BD:0x3B4E,0xE5B4BF:0x3B4F,0xE5B582:0x3B50,0xE5B583:0x3B51,0xE5B586:0x3B52,\n0xE5B588:0x3B53,0xE5B595:0x3B54,0xE5B591:0x3B55,0xE5B599:0x3B56,0xE5B58A:0x3B57,\n0xE5B59F:0x3B58,0xE5B5A0:0x3B59,0xE5B5A1:0x3B5A,0xE5B5A2:0x3B5B,0xE5B5A4:0x3B5C,\n0xE5B5AA:0x3B5D,0xE5B5AD:0x3B5E,0xE5B5B0:0x3B5F,0xE5B5B9:0x3B60,0xE5B5BA:0x3B61,\n0xE5B5BE:0x3B62,0xE5B5BF:0x3B63,0xE5B681:0x3B64,0xE5B683:0x3B65,0xE5B688:0x3B66,\n0xE5B68A:0x3B67,0xE5B692:0x3B68,0xE5B693:0x3B69,0xE5B694:0x3B6A,0xE5B695:0x3B6B,\n0xE5B699:0x3B6C,0xE5B69B:0x3B6D,0xE5B69F:0x3B6E,0xE5B6A0:0x3B6F,0xE5B6A7:0x3B70,\n0xE5B6AB:0x3B71,0xE5B6B0:0x3B72,0xE5B6B4:0x3B73,0xE5B6B8:0x3B74,0xE5B6B9:0x3B75,\n0xE5B783:0x3B76,0xE5B787:0x3B77,0xE5B78B:0x3B78,0xE5B790:0x3B79,0xE5B78E:0x3B7A,\n0xE5B798:0x3B7B,0xE5B799:0x3B7C,0xE5B7A0:0x3B7D,0xE5B7A4:0x3B7E,0xE5B7A9:0x3C21,\n0xE5B7B8:0x3C22,0xE5B7B9:0x3C23,0xE5B880:0x3C24,0xE5B887:0x3C25,0xE5B88D:0x3C26,\n0xE5B892:0x3C27,0xE5B894:0x3C28,0xE5B895:0x3C29,0xE5B898:0x3C2A,0xE5B89F:0x3C2B,\n0xE5B8A0:0x3C2C,0xE5B8AE:0x3C2D,0xE5B8A8:0x3C2E,0xE5B8B2:0x3C2F,0xE5B8B5:0x3C30,\n0xE5B8BE:0x3C31,0xE5B98B:0x3C32,0xE5B990:0x3C33,0xE5B989:0x3C34,0xE5B991:0x3C35,\n0xE5B996:0x3C36,0xE5B998:0x3C37,0xE5B99B:0x3C38,0xE5B99C:0x3C39,0xE5B99E:0x3C3A,\n0xE5B9A8:0x3C3B,0xE5B9AA:0x3C3C,0xE5B9AB:0x3C3D,0xE5B9AC:0x3C3E,0xE5B9AD:0x3C3F,\n0xE5B9AE:0x3C40,0xE5B9B0:0x3C41,0xE5BA80:0x3C42,0xE5BA8B:0x3C43,0xE5BA8E:0x3C44,\n0xE5BAA2:0x3C45,0xE5BAA4:0x3C46,0xE5BAA5:0x3C47,0xE5BAA8:0x3C48,0xE5BAAA:0x3C49,\n0xE5BAAC:0x3C4A,0xE5BAB1:0x3C4B,0xE5BAB3:0x3C4C,0xE5BABD:0x3C4D,0xE5BABE:0x3C4E,\n0xE5BABF:0x3C4F,0xE5BB86:0x3C50,0xE5BB8C:0x3C51,0xE5BB8B:0x3C52,0xE5BB8E:0x3C53,\n0xE5BB91:0x3C54,0xE5BB92:0x3C55,0xE5BB94:0x3C56,0xE5BB95:0x3C57,0xE5BB9C:0x3C58,\n0xE5BB9E:0x3C59,0xE5BBA5:0x3C5A,0xE5BBAB:0x3C5B,0xE5BC82:0x3C5C,0xE5BC86:0x3C5D,\n0xE5BC87:0x3C5E,0xE5BC88:0x3C5F,0xE5BC8E:0x3C60,0xE5BC99:0x3C61,0xE5BC9C:0x3C62,\n0xE5BC9D:0x3C63,0xE5BCA1:0x3C64,0xE5BCA2:0x3C65,0xE5BCA3:0x3C66,0xE5BCA4:0x3C67,\n0xE5BCA8:0x3C68,0xE5BCAB:0x3C69,0xE5BCAC:0x3C6A,0xE5BCAE:0x3C6B,0xE5BCB0:0x3C6C,\n0xE5BCB4:0x3C6D,0xE5BCB6:0x3C6E,0xE5BCBB:0x3C6F,0xE5BCBD:0x3C70,0xE5BCBF:0x3C71,\n0xE5BD80:0x3C72,0xE5BD84:0x3C73,0xE5BD85:0x3C74,0xE5BD87:0x3C75,0xE5BD8D:0x3C76,\n0xE5BD90:0x3C77,0xE5BD94:0x3C78,0xE5BD98:0x3C79,0xE5BD9B:0x3C7A,0xE5BDA0:0x3C7B,\n0xE5BDA3:0x3C7C,0xE5BDA4:0x3C7D,0xE5BDA7:0x3C7E,0xE5BDAF:0x3D21,0xE5BDB2:0x3D22,\n0xE5BDB4:0x3D23,0xE5BDB5:0x3D24,0xE5BDB8:0x3D25,0xE5BDBA:0x3D26,0xE5BDBD:0x3D27,\n0xE5BDBE:0x3D28,0xE5BE89:0x3D29,0xE5BE8D:0x3D2A,0xE5BE8F:0x3D2B,0xE5BE96:0x3D2C,\n0xE5BE9C:0x3D2D,0xE5BE9D:0x3D2E,0xE5BEA2:0x3D2F,0xE5BEA7:0x3D30,0xE5BEAB:0x3D31,\n0xE5BEA4:0x3D32,0xE5BEAC:0x3D33,0xE5BEAF:0x3D34,0xE5BEB0:0x3D35,0xE5BEB1:0x3D36,\n0xE5BEB8:0x3D37,0xE5BF84:0x3D38,0xE5BF87:0x3D39,0xE5BF88:0x3D3A,0xE5BF89:0x3D3B,\n0xE5BF8B:0x3D3C,0xE5BF90:0x3D3D,0xE5BF91:0x3D3E,0xE5BF92:0x3D3F,0xE5BF93:0x3D40,\n0xE5BF94:0x3D41,0xE5BF9E:0x3D42,0xE5BFA1:0x3D43,0xE5BFA2:0x3D44,0xE5BFA8:0x3D45,\n0xE5BFA9:0x3D46,0xE5BFAA:0x3D47,0xE5BFAC:0x3D48,0xE5BFAD:0x3D49,0xE5BFAE:0x3D4A,\n0xE5BFAF:0x3D4B,0xE5BFB2:0x3D4C,0xE5BFB3:0x3D4D,0xE5BFB6:0x3D4E,0xE5BFBA:0x3D4F,\n0xE5BFBC:0x3D50,0xE68087:0x3D51,0xE6808A:0x3D52,0xE6808D:0x3D53,0xE68093:0x3D54,\n0xE68094:0x3D55,0xE68097:0x3D56,0xE68098:0x3D57,0xE6809A:0x3D58,0xE6809F:0x3D59,\n0xE680A4:0x3D5A,0xE680AD:0x3D5B,0xE680B3:0x3D5C,0xE680B5:0x3D5D,0xE68180:0x3D5E,\n0xE68187:0x3D5F,0xE68188:0x3D60,0xE68189:0x3D61,0xE6818C:0x3D62,0xE68191:0x3D63,\n0xE68194:0x3D64,0xE68196:0x3D65,0xE68197:0x3D66,0xE6819D:0x3D67,0xE681A1:0x3D68,\n0xE681A7:0x3D69,0xE681B1:0x3D6A,0xE681BE:0x3D6B,0xE681BF:0x3D6C,0xE68282:0x3D6D,\n0xE68286:0x3D6E,0xE68288:0x3D6F,0xE6828A:0x3D70,0xE6828E:0x3D71,0xE68291:0x3D72,\n0xE68293:0x3D73,0xE68295:0x3D74,0xE68298:0x3D75,0xE6829D:0x3D76,0xE6829E:0x3D77,\n0xE682A2:0x3D78,0xE682A4:0x3D79,0xE682A5:0x3D7A,0xE682A8:0x3D7B,0xE682B0:0x3D7C,\n0xE682B1:0x3D7D,0xE682B7:0x3D7E,0xE682BB:0x3E21,0xE682BE:0x3E22,0xE68382:0x3E23,\n0xE68384:0x3E24,0xE68388:0x3E25,0xE68389:0x3E26,0xE6838A:0x3E27,0xE6838B:0x3E28,\n0xE6838E:0x3E29,0xE6838F:0x3E2A,0xE68394:0x3E2B,0xE68395:0x3E2C,0xE68399:0x3E2D,\n0xE6839B:0x3E2E,0xE6839D:0x3E2F,0xE6839E:0x3E30,0xE683A2:0x3E31,0xE683A5:0x3E32,\n0xE683B2:0x3E33,0xE683B5:0x3E34,0xE683B8:0x3E35,0xE683BC:0x3E36,0xE683BD:0x3E37,\n0xE68482:0x3E38,0xE68487:0x3E39,0xE6848A:0x3E3A,0xE6848C:0x3E3B,0xE68490:0x3E3C,\n0xE68491:0x3E3D,0xE68492:0x3E3E,0xE68493:0x3E3F,0xE68494:0x3E40,0xE68496:0x3E41,\n0xE68497:0x3E42,0xE68499:0x3E43,0xE6849C:0x3E44,0xE6849E:0x3E45,0xE684A2:0x3E46,\n0xE684AA:0x3E47,0xE684AB:0x3E48,0xE684B0:0x3E49,0xE684B1:0x3E4A,0xE684B5:0x3E4B,\n0xE684B6:0x3E4C,0xE684B7:0x3E4D,0xE684B9:0x3E4E,0xE68581:0x3E4F,0xE68585:0x3E50,\n0xE68586:0x3E51,0xE68589:0x3E52,0xE6859E:0x3E53,0xE685A0:0x3E54,0xE685AC:0x3E55,\n0xE685B2:0x3E56,0xE685B8:0x3E57,0xE685BB:0x3E58,0xE685BC:0x3E59,0xE685BF:0x3E5A,\n0xE68680:0x3E5B,0xE68681:0x3E5C,0xE68683:0x3E5D,0xE68684:0x3E5E,0xE6868B:0x3E5F,\n0xE6868D:0x3E60,0xE68692:0x3E61,0xE68693:0x3E62,0xE68697:0x3E63,0xE68698:0x3E64,\n0xE6869C:0x3E65,0xE6869D:0x3E66,0xE6869F:0x3E67,0xE686A0:0x3E68,0xE686A5:0x3E69,\n0xE686A8:0x3E6A,0xE686AA:0x3E6B,0xE686AD:0x3E6C,0xE686B8:0x3E6D,0xE686B9:0x3E6E,\n0xE686BC:0x3E6F,0xE68780:0x3E70,0xE68781:0x3E71,0xE68782:0x3E72,0xE6878E:0x3E73,\n0xE6878F:0x3E74,0xE68795:0x3E75,0xE6879C:0x3E76,0xE6879D:0x3E77,0xE6879E:0x3E78,\n0xE6879F:0x3E79,0xE687A1:0x3E7A,0xE687A2:0x3E7B,0xE687A7:0x3E7C,0xE687A9:0x3E7D,\n0xE687A5:0x3E7E,0xE687AC:0x3F21,0xE687AD:0x3F22,0xE687AF:0x3F23,0xE68881:0x3F24,\n0xE68883:0x3F25,0xE68884:0x3F26,0xE68887:0x3F27,0xE68893:0x3F28,0xE68895:0x3F29,\n0xE6889C:0x3F2A,0xE688A0:0x3F2B,0xE688A2:0x3F2C,0xE688A3:0x3F2D,0xE688A7:0x3F2E,\n0xE688A9:0x3F2F,0xE688AB:0x3F30,0xE688B9:0x3F31,0xE688BD:0x3F32,0xE68982:0x3F33,\n0xE68983:0x3F34,0xE68984:0x3F35,0xE68986:0x3F36,0xE6898C:0x3F37,0xE68990:0x3F38,\n0xE68991:0x3F39,0xE68992:0x3F3A,0xE68994:0x3F3B,0xE68996:0x3F3C,0xE6899A:0x3F3D,\n0xE6899C:0x3F3E,0xE689A4:0x3F3F,0xE689AD:0x3F40,0xE689AF:0x3F41,0xE689B3:0x3F42,\n0xE689BA:0x3F43,0xE689BD:0x3F44,0xE68A8D:0x3F45,0xE68A8E:0x3F46,0xE68A8F:0x3F47,\n0xE68A90:0x3F48,0xE68AA6:0x3F49,0xE68AA8:0x3F4A,0xE68AB3:0x3F4B,0xE68AB6:0x3F4C,\n0xE68AB7:0x3F4D,0xE68ABA:0x3F4E,0xE68ABE:0x3F4F,0xE68ABF:0x3F50,0xE68B84:0x3F51,\n0xE68B8E:0x3F52,0xE68B95:0x3F53,0xE68B96:0x3F54,0xE68B9A:0x3F55,0xE68BAA:0x3F56,\n0xE68BB2:0x3F57,0xE68BB4:0x3F58,0xE68BBC:0x3F59,0xE68BBD:0x3F5A,0xE68C83:0x3F5B,\n0xE68C84:0x3F5C,0xE68C8A:0x3F5D,0xE68C8B:0x3F5E,0xE68C8D:0x3F5F,0xE68C90:0x3F60,\n0xE68C93:0x3F61,0xE68C96:0x3F62,0xE68C98:0x3F63,0xE68CA9:0x3F64,0xE68CAA:0x3F65,\n0xE68CAD:0x3F66,0xE68CB5:0x3F67,0xE68CB6:0x3F68,0xE68CB9:0x3F69,0xE68CBC:0x3F6A,\n0xE68D81:0x3F6B,0xE68D82:0x3F6C,0xE68D83:0x3F6D,0xE68D84:0x3F6E,0xE68D86:0x3F6F,\n0xE68D8A:0x3F70,0xE68D8B:0x3F71,0xE68D8E:0x3F72,0xE68D92:0x3F73,0xE68D93:0x3F74,\n0xE68D94:0x3F75,0xE68D98:0x3F76,0xE68D9B:0x3F77,0xE68DA5:0x3F78,0xE68DA6:0x3F79,\n0xE68DAC:0x3F7A,0xE68DAD:0x3F7B,0xE68DB1:0x3F7C,0xE68DB4:0x3F7D,0xE68DB5:0x3F7E,\n0xE68DB8:0x4021,0xE68DBC:0x4022,0xE68DBD:0x4023,0xE68DBF:0x4024,0xE68E82:0x4025,\n0xE68E84:0x4026,0xE68E87:0x4027,0xE68E8A:0x4028,0xE68E90:0x4029,0xE68E94:0x402A,\n0xE68E95:0x402B,0xE68E99:0x402C,0xE68E9A:0x402D,0xE68E9E:0x402E,0xE68EA4:0x402F,\n0xE68EA6:0x4030,0xE68EAD:0x4031,0xE68EAE:0x4032,0xE68EAF:0x4033,0xE68EBD:0x4034,\n0xE68F81:0x4035,0xE68F85:0x4036,0xE68F88:0x4037,0xE68F8E:0x4038,0xE68F91:0x4039,\n0xE68F93:0x403A,0xE68F94:0x403B,0xE68F95:0x403C,0xE68F9C:0x403D,0xE68FA0:0x403E,\n0xE68FA5:0x403F,0xE68FAA:0x4040,0xE68FAC:0x4041,0xE68FB2:0x4042,0xE68FB3:0x4043,\n0xE68FB5:0x4044,0xE68FB8:0x4045,0xE68FB9:0x4046,0xE69089:0x4047,0xE6908A:0x4048,\n0xE69090:0x4049,0xE69092:0x404A,0xE69094:0x404B,0xE69098:0x404C,0xE6909E:0x404D,\n0xE690A0:0x404E,0xE690A2:0x404F,0xE690A4:0x4050,0xE690A5:0x4051,0xE690A9:0x4052,\n0xE690AA:0x4053,0xE690AF:0x4054,0xE690B0:0x4055,0xE690B5:0x4056,0xE690BD:0x4057,\n0xE690BF:0x4058,0xE6918B:0x4059,0xE6918F:0x405A,0xE69191:0x405B,0xE69192:0x405C,\n0xE69193:0x405D,0xE69194:0x405E,0xE6919A:0x405F,0xE6919B:0x4060,0xE6919C:0x4061,\n0xE6919D:0x4062,0xE6919F:0x4063,0xE691A0:0x4064,0xE691A1:0x4065,0xE691A3:0x4066,\n0xE691AD:0x4067,0xE691B3:0x4068,0xE691B4:0x4069,0xE691BB:0x406A,0xE691BD:0x406B,\n0xE69285:0x406C,0xE69287:0x406D,0xE6928F:0x406E,0xE69290:0x406F,0xE69291:0x4070,\n0xE69298:0x4071,0xE69299:0x4072,0xE6929B:0x4073,0xE6929D:0x4074,0xE6929F:0x4075,\n0xE692A1:0x4076,0xE692A3:0x4077,0xE692A6:0x4078,0xE692A8:0x4079,0xE692AC:0x407A,\n0xE692B3:0x407B,0xE692BD:0x407C,0xE692BE:0x407D,0xE692BF:0x407E,0xE69384:0x4121,\n0xE69389:0x4122,0xE6938A:0x4123,0xE6938B:0x4124,0xE6938C:0x4125,0xE6938E:0x4126,\n0xE69390:0x4127,0xE69391:0x4128,0xE69395:0x4129,0xE69397:0x412A,0xE693A4:0x412B,\n0xE693A5:0x412C,0xE693A9:0x412D,0xE693AA:0x412E,0xE693AD:0x412F,0xE693B0:0x4130,\n0xE693B5:0x4131,0xE693B7:0x4132,0xE693BB:0x4133,0xE693BF:0x4134,0xE69481:0x4135,\n0xE69484:0x4136,0xE69488:0x4137,0xE69489:0x4138,0xE6948A:0x4139,0xE6948F:0x413A,\n0xE69493:0x413B,0xE69494:0x413C,0xE69496:0x413D,0xE69499:0x413E,0xE6949B:0x413F,\n0xE6949E:0x4140,0xE6949F:0x4141,0xE694A2:0x4142,0xE694A6:0x4143,0xE694A9:0x4144,\n0xE694AE:0x4145,0xE694B1:0x4146,0xE694BA:0x4147,0xE694BC:0x4148,0xE694BD:0x4149,\n0xE69583:0x414A,0xE69587:0x414B,0xE69589:0x414C,0xE69590:0x414D,0xE69592:0x414E,\n0xE69594:0x414F,0xE6959F:0x4150,0xE695A0:0x4151,0xE695A7:0x4152,0xE695AB:0x4153,\n0xE695BA:0x4154,0xE695BD:0x4155,0xE69681:0x4156,0xE69685:0x4157,0xE6968A:0x4158,\n0xE69692:0x4159,0xE69695:0x415A,0xE69698:0x415B,0xE6969D:0x415C,0xE696A0:0x415D,\n0xE696A3:0x415E,0xE696A6:0x415F,0xE696AE:0x4160,0xE696B2:0x4161,0xE696B3:0x4162,\n0xE696B4:0x4163,0xE696BF:0x4164,0xE69782:0x4165,0xE69788:0x4166,0xE69789:0x4167,\n0xE6978E:0x4168,0xE69790:0x4169,0xE69794:0x416A,0xE69796:0x416B,0xE69798:0x416C,\n0xE6979F:0x416D,0xE697B0:0x416E,0xE697B2:0x416F,0xE697B4:0x4170,0xE697B5:0x4171,\n0xE697B9:0x4172,0xE697BE:0x4173,0xE697BF:0x4174,0xE69880:0x4175,0xE69884:0x4176,\n0xE69888:0x4177,0xE69889:0x4178,0xE6988D:0x4179,0xE69891:0x417A,0xE69892:0x417B,\n0xE69895:0x417C,0xE69896:0x417D,0xE6989D:0x417E,0xE6989E:0x4221,0xE698A1:0x4222,\n0xE698A2:0x4223,0xE698A3:0x4224,0xE698A4:0x4225,0xE698A6:0x4226,0xE698A9:0x4227,\n0xE698AA:0x4228,0xE698AB:0x4229,0xE698AC:0x422A,0xE698AE:0x422B,0xE698B0:0x422C,\n0xE698B1:0x422D,0xE698B3:0x422E,0xE698B9:0x422F,0xE698B7:0x4230,0xE69980:0x4231,\n0xE69985:0x4232,0xE69986:0x4233,0xE6998A:0x4234,0xE6998C:0x4235,0xE69991:0x4236,\n0xE6998E:0x4237,0xE69997:0x4238,0xE69998:0x4239,0xE69999:0x423A,0xE6999B:0x423B,\n0xE6999C:0x423C,0xE699A0:0x423D,0xE699A1:0x423E,0xE69BBB:0x423F,0xE699AA:0x4240,\n0xE699AB:0x4241,0xE699AC:0x4242,0xE699BE:0x4243,0xE699B3:0x4244,0xE699B5:0x4245,\n0xE699BF:0x4246,0xE699B7:0x4247,0xE699B8:0x4248,0xE699B9:0x4249,0xE699BB:0x424A,\n0xE69A80:0x424B,0xE699BC:0x424C,0xE69A8B:0x424D,0xE69A8C:0x424E,0xE69A8D:0x424F,\n0xE69A90:0x4250,0xE69A92:0x4251,0xE69A99:0x4252,0xE69A9A:0x4253,0xE69A9B:0x4254,\n0xE69A9C:0x4255,0xE69A9F:0x4256,0xE69AA0:0x4257,0xE69AA4:0x4258,0xE69AAD:0x4259,\n0xE69AB1:0x425A,0xE69AB2:0x425B,0xE69AB5:0x425C,0xE69ABB:0x425D,0xE69ABF:0x425E,\n0xE69B80:0x425F,0xE69B82:0x4260,0xE69B83:0x4261,0xE69B88:0x4262,0xE69B8C:0x4263,\n0xE69B8E:0x4264,0xE69B8F:0x4265,0xE69B94:0x4266,0xE69B9B:0x4267,0xE69B9F:0x4268,\n0xE69BA8:0x4269,0xE69BAB:0x426A,0xE69BAC:0x426B,0xE69BAE:0x426C,0xE69BBA:0x426D,\n0xE69C85:0x426E,0xE69C87:0x426F,0xE69C8E:0x4270,0xE69C93:0x4271,0xE69C99:0x4272,\n0xE69C9C:0x4273,0xE69CA0:0x4274,0xE69CA2:0x4275,0xE69CB3:0x4276,0xE69CBE:0x4277,\n0xE69D85:0x4278,0xE69D87:0x4279,0xE69D88:0x427A,0xE69D8C:0x427B,0xE69D94:0x427C,\n0xE69D95:0x427D,0xE69D9D:0x427E,0xE69DA6:0x4321,0xE69DAC:0x4322,0xE69DAE:0x4323,\n0xE69DB4:0x4324,0xE69DB6:0x4325,0xE69DBB:0x4326,0xE69E81:0x4327,0xE69E84:0x4328,\n0xE69E8E:0x4329,0xE69E8F:0x432A,0xE69E91:0x432B,0xE69E93:0x432C,0xE69E96:0x432D,\n0xE69E98:0x432E,0xE69E99:0x432F,0xE69E9B:0x4330,0xE69EB0:0x4331,0xE69EB1:0x4332,\n0xE69EB2:0x4333,0xE69EB5:0x4334,0xE69EBB:0x4335,0xE69EBC:0x4336,0xE69EBD:0x4337,\n0xE69FB9:0x4338,0xE69F80:0x4339,0xE69F82:0x433A,0xE69F83:0x433B,0xE69F85:0x433C,\n0xE69F88:0x433D,0xE69F89:0x433E,0xE69F92:0x433F,0xE69F97:0x4340,0xE69F99:0x4341,\n0xE69F9C:0x4342,0xE69FA1:0x4343,0xE69FA6:0x4344,0xE69FB0:0x4345,0xE69FB2:0x4346,\n0xE69FB6:0x4347,0xE69FB7:0x4348,0xE6A192:0x4349,0xE6A094:0x434A,0xE6A099:0x434B,\n0xE6A09D:0x434C,0xE6A09F:0x434D,0xE6A0A8:0x434E,0xE6A0A7:0x434F,0xE6A0AC:0x4350,\n0xE6A0AD:0x4351,0xE6A0AF:0x4352,0xE6A0B0:0x4353,0xE6A0B1:0x4354,0xE6A0B3:0x4355,\n0xE6A0BB:0x4356,0xE6A0BF:0x4357,0xE6A184:0x4358,0xE6A185:0x4359,0xE6A18A:0x435A,\n0xE6A18C:0x435B,0xE6A195:0x435C,0xE6A197:0x435D,0xE6A198:0x435E,0xE6A19B:0x435F,\n0xE6A1AB:0x4360,0xE6A1AE:0x4361,0xE6A1AF:0x4362,0xE6A1B0:0x4363,0xE6A1B1:0x4364,\n0xE6A1B2:0x4365,0xE6A1B5:0x4366,0xE6A1B9:0x4367,0xE6A1BA:0x4368,0xE6A1BB:0x4369,\n0xE6A1BC:0x436A,0xE6A282:0x436B,0xE6A284:0x436C,0xE6A286:0x436D,0xE6A288:0x436E,\n0xE6A296:0x436F,0xE6A298:0x4370,0xE6A29A:0x4371,0xE6A29C:0x4372,0xE6A2A1:0x4373,\n0xE6A2A3:0x4374,0xE6A2A5:0x4375,0xE6A2A9:0x4376,0xE6A2AA:0x4377,0xE6A2AE:0x4378,\n0xE6A2B2:0x4379,0xE6A2BB:0x437A,0xE6A385:0x437B,0xE6A388:0x437C,0xE6A38C:0x437D,\n0xE6A38F:0x437E,0xE6A390:0x4421,0xE6A391:0x4422,0xE6A393:0x4423,0xE6A396:0x4424,\n0xE6A399:0x4425,0xE6A39C:0x4426,0xE6A39D:0x4427,0xE6A3A5:0x4428,0xE6A3A8:0x4429,\n0xE6A3AA:0x442A,0xE6A3AB:0x442B,0xE6A3AC:0x442C,0xE6A3AD:0x442D,0xE6A3B0:0x442E,\n0xE6A3B1:0x442F,0xE6A3B5:0x4430,0xE6A3B6:0x4431,0xE6A3BB:0x4432,0xE6A3BC:0x4433,\n0xE6A3BD:0x4434,0xE6A486:0x4435,0xE6A489:0x4436,0xE6A48A:0x4437,0xE6A490:0x4438,\n0xE6A491:0x4439,0xE6A493:0x443A,0xE6A496:0x443B,0xE6A497:0x443C,0xE6A4B1:0x443D,\n0xE6A4B3:0x443E,0xE6A4B5:0x443F,0xE6A4B8:0x4440,0xE6A4BB:0x4441,0xE6A582:0x4442,\n0xE6A585:0x4443,0xE6A589:0x4444,0xE6A58E:0x4445,0xE6A597:0x4446,0xE6A59B:0x4447,\n0xE6A5A3:0x4448,0xE6A5A4:0x4449,0xE6A5A5:0x444A,0xE6A5A6:0x444B,0xE6A5A8:0x444C,\n0xE6A5A9:0x444D,0xE6A5AC:0x444E,0xE6A5B0:0x444F,0xE6A5B1:0x4450,0xE6A5B2:0x4451,\n0xE6A5BA:0x4452,0xE6A5BB:0x4453,0xE6A5BF:0x4454,0xE6A680:0x4455,0xE6A68D:0x4456,\n0xE6A692:0x4457,0xE6A696:0x4458,0xE6A698:0x4459,0xE6A6A1:0x445A,0xE6A6A5:0x445B,\n0xE6A6A6:0x445C,0xE6A6A8:0x445D,0xE6A6AB:0x445E,0xE6A6AD:0x445F,0xE6A6AF:0x4460,\n0xE6A6B7:0x4461,0xE6A6B8:0x4462,0xE6A6BA:0x4463,0xE6A6BC:0x4464,0xE6A785:0x4465,\n0xE6A788:0x4466,0xE6A791:0x4467,0xE6A796:0x4468,0xE6A797:0x4469,0xE6A7A2:0x446A,\n0xE6A7A5:0x446B,0xE6A7AE:0x446C,0xE6A7AF:0x446D,0xE6A7B1:0x446E,0xE6A7B3:0x446F,\n0xE6A7B5:0x4470,0xE6A7BE:0x4471,0xE6A880:0x4472,0xE6A881:0x4473,0xE6A883:0x4474,\n0xE6A88F:0x4475,0xE6A891:0x4476,0xE6A895:0x4477,0xE6A89A:0x4478,0xE6A89D:0x4479,\n0xE6A8A0:0x447A,0xE6A8A4:0x447B,0xE6A8A8:0x447C,0xE6A8B0:0x447D,0xE6A8B2:0x447E,\n0xE6A8B4:0x4521,0xE6A8B7:0x4522,0xE6A8BB:0x4523,0xE6A8BE:0x4524,0xE6A8BF:0x4525,\n0xE6A985:0x4526,0xE6A986:0x4527,0xE6A989:0x4528,0xE6A98A:0x4529,0xE6A98E:0x452A,\n0xE6A990:0x452B,0xE6A991:0x452C,0xE6A992:0x452D,0xE6A995:0x452E,0xE6A996:0x452F,\n0xE6A99B:0x4530,0xE6A9A4:0x4531,0xE6A9A7:0x4532,0xE6A9AA:0x4533,0xE6A9B1:0x4534,\n0xE6A9B3:0x4535,0xE6A9BE:0x4536,0xE6AA81:0x4537,0xE6AA83:0x4538,0xE6AA86:0x4539,\n0xE6AA87:0x453A,0xE6AA89:0x453B,0xE6AA8B:0x453C,0xE6AA91:0x453D,0xE6AA9B:0x453E,\n0xE6AA9D:0x453F,0xE6AA9E:0x4540,0xE6AA9F:0x4541,0xE6AAA5:0x4542,0xE6AAAB:0x4543,\n0xE6AAAF:0x4544,0xE6AAB0:0x4545,0xE6AAB1:0x4546,0xE6AAB4:0x4547,0xE6AABD:0x4548,\n0xE6AABE:0x4549,0xE6AABF:0x454A,0xE6AB86:0x454B,0xE6AB89:0x454C,0xE6AB88:0x454D,\n0xE6AB8C:0x454E,0xE6AB90:0x454F,0xE6AB94:0x4550,0xE6AB95:0x4551,0xE6AB96:0x4552,\n0xE6AB9C:0x4553,0xE6AB9D:0x4554,0xE6ABA4:0x4555,0xE6ABA7:0x4556,0xE6ABAC:0x4557,\n0xE6ABB0:0x4558,0xE6ABB1:0x4559,0xE6ABB2:0x455A,0xE6ABBC:0x455B,0xE6ABBD:0x455C,\n0xE6AC82:0x455D,0xE6AC83:0x455E,0xE6AC86:0x455F,0xE6AC87:0x4560,0xE6AC89:0x4561,\n0xE6AC8F:0x4562,0xE6AC90:0x4563,0xE6AC91:0x4564,0xE6AC97:0x4565,0xE6AC9B:0x4566,\n0xE6AC9E:0x4567,0xE6ACA4:0x4568,0xE6ACA8:0x4569,0xE6ACAB:0x456A,0xE6ACAC:0x456B,\n0xE6ACAF:0x456C,0xE6ACB5:0x456D,0xE6ACB6:0x456E,0xE6ACBB:0x456F,0xE6ACBF:0x4570,\n0xE6AD86:0x4571,0xE6AD8A:0x4572,0xE6AD8D:0x4573,0xE6AD92:0x4574,0xE6AD96:0x4575,\n0xE6AD98:0x4576,0xE6AD9D:0x4577,0xE6ADA0:0x4578,0xE6ADA7:0x4579,0xE6ADAB:0x457A,\n0xE6ADAE:0x457B,0xE6ADB0:0x457C,0xE6ADB5:0x457D,0xE6ADBD:0x457E,0xE6ADBE:0x4621,\n0xE6AE82:0x4622,0xE6AE85:0x4623,0xE6AE97:0x4624,0xE6AE9B:0x4625,0xE6AE9F:0x4626,\n0xE6AEA0:0x4627,0xE6AEA2:0x4628,0xE6AEA3:0x4629,0xE6AEA8:0x462A,0xE6AEA9:0x462B,\n0xE6AEAC:0x462C,0xE6AEAD:0x462D,0xE6AEAE:0x462E,0xE6AEB0:0x462F,0xE6AEB8:0x4630,\n0xE6AEB9:0x4631,0xE6AEBD:0x4632,0xE6AEBE:0x4633,0xE6AF83:0x4634,0xE6AF84:0x4635,\n0xE6AF89:0x4636,0xE6AF8C:0x4637,0xE6AF96:0x4638,0xE6AF9A:0x4639,0xE6AFA1:0x463A,\n0xE6AFA3:0x463B,0xE6AFA6:0x463C,0xE6AFA7:0x463D,0xE6AFAE:0x463E,0xE6AFB1:0x463F,\n0xE6AFB7:0x4640,0xE6AFB9:0x4641,0xE6AFBF:0x4642,0xE6B082:0x4643,0xE6B084:0x4644,\n0xE6B085:0x4645,0xE6B089:0x4646,0xE6B08D:0x4647,0xE6B08E:0x4648,0xE6B090:0x4649,\n0xE6B092:0x464A,0xE6B099:0x464B,0xE6B09F:0x464C,0xE6B0A6:0x464D,0xE6B0A7:0x464E,\n0xE6B0A8:0x464F,0xE6B0AC:0x4650,0xE6B0AE:0x4651,0xE6B0B3:0x4652,0xE6B0B5:0x4653,\n0xE6B0B6:0x4654,0xE6B0BA:0x4655,0xE6B0BB:0x4656,0xE6B0BF:0x4657,0xE6B18A:0x4658,\n0xE6B18B:0x4659,0xE6B18D:0x465A,0xE6B18F:0x465B,0xE6B192:0x465C,0xE6B194:0x465D,\n0xE6B199:0x465E,0xE6B19B:0x465F,0xE6B19C:0x4660,0xE6B1AB:0x4661,0xE6B1AD:0x4662,\n0xE6B1AF:0x4663,0xE6B1B4:0x4664,0xE6B1B6:0x4665,0xE6B1B8:0x4666,0xE6B1B9:0x4667,\n0xE6B1BB:0x4668,0xE6B285:0x4669,0xE6B286:0x466A,0xE6B287:0x466B,0xE6B289:0x466C,\n0xE6B294:0x466D,0xE6B295:0x466E,0xE6B297:0x466F,0xE6B298:0x4670,0xE6B29C:0x4671,\n0xE6B29F:0x4672,0xE6B2B0:0x4673,0xE6B2B2:0x4674,0xE6B2B4:0x4675,0xE6B382:0x4676,\n0xE6B386:0x4677,0xE6B38D:0x4678,0xE6B38F:0x4679,0xE6B390:0x467A,0xE6B391:0x467B,\n0xE6B392:0x467C,0xE6B394:0x467D,0xE6B396:0x467E,0xE6B39A:0x4721,0xE6B39C:0x4722,\n0xE6B3A0:0x4723,0xE6B3A7:0x4724,0xE6B3A9:0x4725,0xE6B3AB:0x4726,0xE6B3AC:0x4727,\n0xE6B3AE:0x4728,0xE6B3B2:0x4729,0xE6B3B4:0x472A,0xE6B484:0x472B,0xE6B487:0x472C,\n0xE6B48A:0x472D,0xE6B48E:0x472E,0xE6B48F:0x472F,0xE6B491:0x4730,0xE6B493:0x4731,\n0xE6B49A:0x4732,0xE6B4A6:0x4733,0xE6B4A7:0x4734,0xE6B4A8:0x4735,0xE6B1A7:0x4736,\n0xE6B4AE:0x4737,0xE6B4AF:0x4738,0xE6B4B1:0x4739,0xE6B4B9:0x473A,0xE6B4BC:0x473B,\n0xE6B4BF:0x473C,0xE6B597:0x473D,0xE6B59E:0x473E,0xE6B59F:0x473F,0xE6B5A1:0x4740,\n0xE6B5A5:0x4741,0xE6B5A7:0x4742,0xE6B5AF:0x4743,0xE6B5B0:0x4744,0xE6B5BC:0x4745,\n0xE6B682:0x4746,0xE6B687:0x4747,0xE6B691:0x4748,0xE6B692:0x4749,0xE6B694:0x474A,\n0xE6B696:0x474B,0xE6B697:0x474C,0xE6B698:0x474D,0xE6B6AA:0x474E,0xE6B6AC:0x474F,\n0xE6B6B4:0x4750,0xE6B6B7:0x4751,0xE6B6B9:0x4752,0xE6B6BD:0x4753,0xE6B6BF:0x4754,\n0xE6B784:0x4755,0xE6B788:0x4756,0xE6B78A:0x4757,0xE6B78E:0x4758,0xE6B78F:0x4759,\n0xE6B796:0x475A,0xE6B79B:0x475B,0xE6B79D:0x475C,0xE6B79F:0x475D,0xE6B7A0:0x475E,\n0xE6B7A2:0x475F,0xE6B7A5:0x4760,0xE6B7A9:0x4761,0xE6B7AF:0x4762,0xE6B7B0:0x4763,\n0xE6B7B4:0x4764,0xE6B7B6:0x4765,0xE6B7BC:0x4766,0xE6B880:0x4767,0xE6B884:0x4768,\n0xE6B89E:0x4769,0xE6B8A2:0x476A,0xE6B8A7:0x476B,0xE6B8B2:0x476C,0xE6B8B6:0x476D,\n0xE6B8B9:0x476E,0xE6B8BB:0x476F,0xE6B8BC:0x4770,0xE6B984:0x4771,0xE6B985:0x4772,\n0xE6B988:0x4773,0xE6B989:0x4774,0xE6B98B:0x4775,0xE6B98F:0x4776,0xE6B991:0x4777,\n0xE6B992:0x4778,0xE6B993:0x4779,0xE6B994:0x477A,0xE6B997:0x477B,0xE6B99C:0x477C,\n0xE6B99D:0x477D,0xE6B99E:0x477E,0xE6B9A2:0x4821,0xE6B9A3:0x4822,0xE6B9A8:0x4823,\n0xE6B9B3:0x4824,0xE6B9BB:0x4825,0xE6B9BD:0x4826,0xE6BA8D:0x4827,0xE6BA93:0x4828,\n0xE6BA99:0x4829,0xE6BAA0:0x482A,0xE6BAA7:0x482B,0xE6BAAD:0x482C,0xE6BAAE:0x482D,\n0xE6BAB1:0x482E,0xE6BAB3:0x482F,0xE6BABB:0x4830,0xE6BABF:0x4831,0xE6BB80:0x4832,\n0xE6BB81:0x4833,0xE6BB83:0x4834,0xE6BB87:0x4835,0xE6BB88:0x4836,0xE6BB8A:0x4837,\n0xE6BB8D:0x4838,0xE6BB8E:0x4839,0xE6BB8F:0x483A,0xE6BBAB:0x483B,0xE6BBAD:0x483C,\n0xE6BBAE:0x483D,0xE6BBB9:0x483E,0xE6BBBB:0x483F,0xE6BBBD:0x4840,0xE6BC84:0x4841,\n0xE6BC88:0x4842,0xE6BC8A:0x4843,0xE6BC8C:0x4844,0xE6BC8D:0x4845,0xE6BC96:0x4846,\n0xE6BC98:0x4847,0xE6BC9A:0x4848,0xE6BC9B:0x4849,0xE6BCA6:0x484A,0xE6BCA9:0x484B,\n0xE6BCAA:0x484C,0xE6BCAF:0x484D,0xE6BCB0:0x484E,0xE6BCB3:0x484F,0xE6BCB6:0x4850,\n0xE6BCBB:0x4851,0xE6BCBC:0x4852,0xE6BCAD:0x4853,0xE6BD8F:0x4854,0xE6BD91:0x4855,\n0xE6BD92:0x4856,0xE6BD93:0x4857,0xE6BD97:0x4858,0xE6BD99:0x4859,0xE6BD9A:0x485A,\n0xE6BD9D:0x485B,0xE6BD9E:0x485C,0xE6BDA1:0x485D,0xE6BDA2:0x485E,0xE6BDA8:0x485F,\n0xE6BDAC:0x4860,0xE6BDBD:0x4861,0xE6BDBE:0x4862,0xE6BE83:0x4863,0xE6BE87:0x4864,\n0xE6BE88:0x4865,0xE6BE8B:0x4866,0xE6BE8C:0x4867,0xE6BE8D:0x4868,0xE6BE90:0x4869,\n0xE6BE92:0x486A,0xE6BE93:0x486B,0xE6BE94:0x486C,0xE6BE96:0x486D,0xE6BE9A:0x486E,\n0xE6BE9F:0x486F,0xE6BEA0:0x4870,0xE6BEA5:0x4871,0xE6BEA6:0x4872,0xE6BEA7:0x4873,\n0xE6BEA8:0x4874,0xE6BEAE:0x4875,0xE6BEAF:0x4876,0xE6BEB0:0x4877,0xE6BEB5:0x4878,\n0xE6BEB6:0x4879,0xE6BEBC:0x487A,0xE6BF85:0x487B,0xE6BF87:0x487C,0xE6BF88:0x487D,\n0xE6BF8A:0x487E,0xE6BF9A:0x4921,0xE6BF9E:0x4922,0xE6BFA8:0x4923,0xE6BFA9:0x4924,\n0xE6BFB0:0x4925,0xE6BFB5:0x4926,0xE6BFB9:0x4927,0xE6BFBC:0x4928,0xE6BFBD:0x4929,\n0xE78080:0x492A,0xE78085:0x492B,0xE78086:0x492C,0xE78087:0x492D,0xE7808D:0x492E,\n0xE78097:0x492F,0xE780A0:0x4930,0xE780A3:0x4931,0xE780AF:0x4932,0xE780B4:0x4933,\n0xE780B7:0x4934,0xE780B9:0x4935,0xE780BC:0x4936,0xE78183:0x4937,0xE78184:0x4938,\n0xE78188:0x4939,0xE78189:0x493A,0xE7818A:0x493B,0xE7818B:0x493C,0xE78194:0x493D,\n0xE78195:0x493E,0xE7819D:0x493F,0xE7819E:0x4940,0xE7818E:0x4941,0xE781A4:0x4942,\n0xE781A5:0x4943,0xE781AC:0x4944,0xE781AE:0x4945,0xE781B5:0x4946,0xE781B6:0x4947,\n0xE781BE:0x4948,0xE78281:0x4949,0xE78285:0x494A,0xE78286:0x494B,0xE78294:0x494C,\n0xE78295:0x494D,0xE78296:0x494E,0xE78297:0x494F,0xE78298:0x4950,0xE7829B:0x4951,\n0xE782A4:0x4952,0xE782AB:0x4953,0xE782B0:0x4954,0xE782B1:0x4955,0xE782B4:0x4956,\n0xE782B7:0x4957,0xE7838A:0x4958,0xE78391:0x4959,0xE78393:0x495A,0xE78394:0x495B,\n0xE78395:0x495C,0xE78396:0x495D,0xE78398:0x495E,0xE7839C:0x495F,0xE783A4:0x4960,\n0xE783BA:0x4961,0xE78483:0x4962,0xE78484:0x4963,0xE78485:0x4964,0xE78486:0x4965,\n0xE78487:0x4966,0xE7848B:0x4967,0xE7848C:0x4968,0xE7848F:0x4969,0xE7849E:0x496A,\n0xE784A0:0x496B,0xE784AB:0x496C,0xE784AD:0x496D,0xE784AF:0x496E,0xE784B0:0x496F,\n0xE784B1:0x4970,0xE784B8:0x4971,0xE78581:0x4972,0xE78585:0x4973,0xE78586:0x4974,\n0xE78587:0x4975,0xE7858A:0x4976,0xE7858B:0x4977,0xE78590:0x4978,0xE78592:0x4979,\n0xE78597:0x497A,0xE7859A:0x497B,0xE7859C:0x497C,0xE7859E:0x497D,0xE785A0:0x497E,\n0xE785A8:0x4A21,0xE785B9:0x4A22,0xE78680:0x4A23,0xE78685:0x4A24,0xE78687:0x4A25,\n0xE7868C:0x4A26,0xE78692:0x4A27,0xE7869A:0x4A28,0xE7869B:0x4A29,0xE786A0:0x4A2A,\n0xE786A2:0x4A2B,0xE786AF:0x4A2C,0xE786B0:0x4A2D,0xE786B2:0x4A2E,0xE786B3:0x4A2F,\n0xE786BA:0x4A30,0xE786BF:0x4A31,0xE78780:0x4A32,0xE78781:0x4A33,0xE78784:0x4A34,\n0xE7878B:0x4A35,0xE7878C:0x4A36,0xE78793:0x4A37,0xE78796:0x4A38,0xE78799:0x4A39,\n0xE7879A:0x4A3A,0xE7879C:0x4A3B,0xE787B8:0x4A3C,0xE787BE:0x4A3D,0xE78880:0x4A3E,\n0xE78887:0x4A3F,0xE78888:0x4A40,0xE78889:0x4A41,0xE78893:0x4A42,0xE78897:0x4A43,\n0xE7889A:0x4A44,0xE7889D:0x4A45,0xE7889F:0x4A46,0xE788A4:0x4A47,0xE788AB:0x4A48,\n0xE788AF:0x4A49,0xE788B4:0x4A4A,0xE788B8:0x4A4B,0xE788B9:0x4A4C,0xE78981:0x4A4D,\n0xE78982:0x4A4E,0xE78983:0x4A4F,0xE78985:0x4A50,0xE7898E:0x4A51,0xE7898F:0x4A52,\n0xE78990:0x4A53,0xE78993:0x4A54,0xE78995:0x4A55,0xE78996:0x4A56,0xE7899A:0x4A57,\n0xE7899C:0x4A58,0xE7899E:0x4A59,0xE789A0:0x4A5A,0xE789A3:0x4A5B,0xE789A8:0x4A5C,\n0xE789AB:0x4A5D,0xE789AE:0x4A5E,0xE789AF:0x4A5F,0xE789B1:0x4A60,0xE789B7:0x4A61,\n0xE789B8:0x4A62,0xE789BB:0x4A63,0xE789BC:0x4A64,0xE789BF:0x4A65,0xE78A84:0x4A66,\n0xE78A89:0x4A67,0xE78A8D:0x4A68,0xE78A8E:0x4A69,0xE78A93:0x4A6A,0xE78A9B:0x4A6B,\n0xE78AA8:0x4A6C,0xE78AAD:0x4A6D,0xE78AAE:0x4A6E,0xE78AB1:0x4A6F,0xE78AB4:0x4A70,\n0xE78ABE:0x4A71,0xE78B81:0x4A72,0xE78B87:0x4A73,0xE78B89:0x4A74,0xE78B8C:0x4A75,\n0xE78B95:0x4A76,0xE78B96:0x4A77,0xE78B98:0x4A78,0xE78B9F:0x4A79,0xE78BA5:0x4A7A,\n0xE78BB3:0x4A7B,0xE78BB4:0x4A7C,0xE78BBA:0x4A7D,0xE78BBB:0x4A7E,0xE78BBE:0x4B21,\n0xE78C82:0x4B22,0xE78C84:0x4B23,0xE78C85:0x4B24,0xE78C87:0x4B25,0xE78C8B:0x4B26,\n0xE78C8D:0x4B27,0xE78C92:0x4B28,0xE78C93:0x4B29,0xE78C98:0x4B2A,0xE78C99:0x4B2B,\n0xE78C9E:0x4B2C,0xE78CA2:0x4B2D,0xE78CA4:0x4B2E,0xE78CA7:0x4B2F,0xE78CA8:0x4B30,\n0xE78CAC:0x4B31,0xE78CB1:0x4B32,0xE78CB2:0x4B33,0xE78CB5:0x4B34,0xE78CBA:0x4B35,\n0xE78CBB:0x4B36,0xE78CBD:0x4B37,0xE78D83:0x4B38,0xE78D8D:0x4B39,0xE78D90:0x4B3A,\n0xE78D92:0x4B3B,0xE78D96:0x4B3C,0xE78D98:0x4B3D,0xE78D9D:0x4B3E,0xE78D9E:0x4B3F,\n0xE78D9F:0x4B40,0xE78DA0:0x4B41,0xE78DA6:0x4B42,0xE78DA7:0x4B43,0xE78DA9:0x4B44,\n0xE78DAB:0x4B45,0xE78DAC:0x4B46,0xE78DAE:0x4B47,0xE78DAF:0x4B48,0xE78DB1:0x4B49,\n0xE78DB7:0x4B4A,0xE78DB9:0x4B4B,0xE78DBC:0x4B4C,0xE78E80:0x4B4D,0xE78E81:0x4B4E,\n0xE78E83:0x4B4F,0xE78E85:0x4B50,0xE78E86:0x4B51,0xE78E8E:0x4B52,0xE78E90:0x4B53,\n0xE78E93:0x4B54,0xE78E95:0x4B55,0xE78E97:0x4B56,0xE78E98:0x4B57,0xE78E9C:0x4B58,\n0xE78E9E:0x4B59,0xE78E9F:0x4B5A,0xE78EA0:0x4B5B,0xE78EA2:0x4B5C,0xE78EA5:0x4B5D,\n0xE78EA6:0x4B5E,0xE78EAA:0x4B5F,0xE78EAB:0x4B60,0xE78EAD:0x4B61,0xE78EB5:0x4B62,\n0xE78EB7:0x4B63,0xE78EB9:0x4B64,0xE78EBC:0x4B65,0xE78EBD:0x4B66,0xE78EBF:0x4B67,\n0xE78F85:0x4B68,0xE78F86:0x4B69,0xE78F89:0x4B6A,0xE78F8B:0x4B6B,0xE78F8C:0x4B6C,\n0xE78F8F:0x4B6D,0xE78F92:0x4B6E,0xE78F93:0x4B6F,0xE78F96:0x4B70,0xE78F99:0x4B71,\n0xE78F9D:0x4B72,0xE78FA1:0x4B73,0xE78FA3:0x4B74,0xE78FA6:0x4B75,0xE78FA7:0x4B76,\n0xE78FA9:0x4B77,0xE78FB4:0x4B78,0xE78FB5:0x4B79,0xE78FB7:0x4B7A,0xE78FB9:0x4B7B,\n0xE78FBA:0x4B7C,0xE78FBB:0x4B7D,0xE78FBD:0x4B7E,0xE78FBF:0x4C21,0xE79080:0x4C22,\n0xE79081:0x4C23,0xE79084:0x4C24,0xE79087:0x4C25,0xE7908A:0x4C26,0xE79091:0x4C27,\n0xE7909A:0x4C28,0xE7909B:0x4C29,0xE790A4:0x4C2A,0xE790A6:0x4C2B,0xE790A8:0x4C2C,\n0xE790A9:0x4C2D,0xE790AA:0x4C2E,0xE790AB:0x4C2F,0xE790AC:0x4C30,0xE790AD:0x4C31,\n0xE790AE:0x4C32,0xE790AF:0x4C33,0xE790B0:0x4C34,0xE790B1:0x4C35,0xE790B9:0x4C36,\n0xE79180:0x4C37,0xE79183:0x4C38,0xE79184:0x4C39,0xE79186:0x4C3A,0xE79187:0x4C3B,\n0xE7918B:0x4C3C,0xE7918D:0x4C3D,0xE79191:0x4C3E,0xE79192:0x4C3F,0xE79197:0x4C40,\n0xE7919D:0x4C41,0xE791A2:0x4C42,0xE791A6:0x4C43,0xE791A7:0x4C44,0xE791A8:0x4C45,\n0xE791AB:0x4C46,0xE791AD:0x4C47,0xE791AE:0x4C48,0xE791B1:0x4C49,0xE791B2:0x4C4A,\n0xE79280:0x4C4B,0xE79281:0x4C4C,0xE79285:0x4C4D,0xE79286:0x4C4E,0xE79287:0x4C4F,\n0xE79289:0x4C50,0xE7928F:0x4C51,0xE79290:0x4C52,0xE79291:0x4C53,0xE79292:0x4C54,\n0xE79298:0x4C55,0xE79299:0x4C56,0xE7929A:0x4C57,0xE7929C:0x4C58,0xE7929F:0x4C59,\n0xE792A0:0x4C5A,0xE792A1:0x4C5B,0xE792A3:0x4C5C,0xE792A6:0x4C5D,0xE792A8:0x4C5E,\n0xE792A9:0x4C5F,0xE792AA:0x4C60,0xE792AB:0x4C61,0xE792AE:0x4C62,0xE792AF:0x4C63,\n0xE792B1:0x4C64,0xE792B2:0x4C65,0xE792B5:0x4C66,0xE792B9:0x4C67,0xE792BB:0x4C68,\n0xE792BF:0x4C69,0xE79388:0x4C6A,0xE79389:0x4C6B,0xE7938C:0x4C6C,0xE79390:0x4C6D,\n0xE79393:0x4C6E,0xE79398:0x4C6F,0xE7939A:0x4C70,0xE7939B:0x4C71,0xE7939E:0x4C72,\n0xE7939F:0x4C73,0xE793A4:0x4C74,0xE793A8:0x4C75,0xE793AA:0x4C76,0xE793AB:0x4C77,\n0xE793AF:0x4C78,0xE793B4:0x4C79,0xE793BA:0x4C7A,0xE793BB:0x4C7B,0xE793BC:0x4C7C,\n0xE793BF:0x4C7D,0xE79486:0x4C7E,0xE79492:0x4D21,0xE79496:0x4D22,0xE79497:0x4D23,\n0xE794A0:0x4D24,0xE794A1:0x4D25,0xE794A4:0x4D26,0xE794A7:0x4D27,0xE794A9:0x4D28,\n0xE794AA:0x4D29,0xE794AF:0x4D2A,0xE794B6:0x4D2B,0xE794B9:0x4D2C,0xE794BD:0x4D2D,\n0xE794BE:0x4D2E,0xE794BF:0x4D2F,0xE79580:0x4D30,0xE79583:0x4D31,0xE79587:0x4D32,\n0xE79588:0x4D33,0xE7958E:0x4D34,0xE79590:0x4D35,0xE79592:0x4D36,0xE79597:0x4D37,\n0xE7959E:0x4D38,0xE7959F:0x4D39,0xE795A1:0x4D3A,0xE795AF:0x4D3B,0xE795B1:0x4D3C,\n0xE795B9:0x4D3D,0xE795BA:0x4D3E,0xE795BB:0x4D3F,0xE795BC:0x4D40,0xE795BD:0x4D41,\n0xE795BE:0x4D42,0xE79681:0x4D43,0xE79685:0x4D44,0xE79690:0x4D45,0xE79692:0x4D46,\n0xE79693:0x4D47,0xE79695:0x4D48,0xE79699:0x4D49,0xE7969C:0x4D4A,0xE796A2:0x4D4B,\n0xE796A4:0x4D4C,0xE796B4:0x4D4D,0xE796BA:0x4D4E,0xE796BF:0x4D4F,0xE79780:0x4D50,\n0xE79781:0x4D51,0xE79784:0x4D52,0xE79786:0x4D53,0xE7978C:0x4D54,0xE7978E:0x4D55,\n0xE7978F:0x4D56,0xE79797:0x4D57,0xE7979C:0x4D58,0xE7979F:0x4D59,0xE797A0:0x4D5A,\n0xE797A1:0x4D5B,0xE797A4:0x4D5C,0xE797A7:0x4D5D,0xE797AC:0x4D5E,0xE797AE:0x4D5F,\n0xE797AF:0x4D60,0xE797B1:0x4D61,0xE797B9:0x4D62,0xE79880:0x4D63,0xE79882:0x4D64,\n0xE79883:0x4D65,0xE79884:0x4D66,0xE79887:0x4D67,0xE79888:0x4D68,0xE7988A:0x4D69,\n0xE7988C:0x4D6A,0xE7988F:0x4D6B,0xE79892:0x4D6C,0xE79893:0x4D6D,0xE79895:0x4D6E,\n0xE79896:0x4D6F,0xE79899:0x4D70,0xE7989B:0x4D71,0xE7989C:0x4D72,0xE7989D:0x4D73,\n0xE7989E:0x4D74,0xE798A3:0x4D75,0xE798A5:0x4D76,0xE798A6:0x4D77,0xE798A9:0x4D78,\n0xE798AD:0x4D79,0xE798B2:0x4D7A,0xE798B3:0x4D7B,0xE798B5:0x4D7C,0xE798B8:0x4D7D,\n0xE798B9:0x4D7E,0xE798BA:0x4E21,0xE798BC:0x4E22,0xE7998A:0x4E23,0xE79980:0x4E24,\n0xE79981:0x4E25,0xE79983:0x4E26,0xE79984:0x4E27,0xE79985:0x4E28,0xE79989:0x4E29,\n0xE7998B:0x4E2A,0xE79995:0x4E2B,0xE79999:0x4E2C,0xE7999F:0x4E2D,0xE799A4:0x4E2E,\n0xE799A5:0x4E2F,0xE799AD:0x4E30,0xE799AE:0x4E31,0xE799AF:0x4E32,0xE799B1:0x4E33,\n0xE799B4:0x4E34,0xE79A81:0x4E35,0xE79A85:0x4E36,0xE79A8C:0x4E37,0xE79A8D:0x4E38,\n0xE79A95:0x4E39,0xE79A9B:0x4E3A,0xE79A9C:0x4E3B,0xE79A9D:0x4E3C,0xE79A9F:0x4E3D,\n0xE79AA0:0x4E3E,0xE79AA2:0x4E3F,0xE79AA3:0x4E40,0xE79AA4:0x4E41,0xE79AA5:0x4E42,\n0xE79AA6:0x4E43,0xE79AA7:0x4E44,0xE79AA8:0x4E45,0xE79AAA:0x4E46,0xE79AAD:0x4E47,\n0xE79ABD:0x4E48,0xE79B81:0x4E49,0xE79B85:0x4E4A,0xE79B89:0x4E4B,0xE79B8B:0x4E4C,\n0xE79B8C:0x4E4D,0xE79B8E:0x4E4E,0xE79B94:0x4E4F,0xE79B99:0x4E50,0xE79BA0:0x4E51,\n0xE79BA6:0x4E52,0xE79BA8:0x4E53,0xE79BAC:0x4E54,0xE79BB0:0x4E55,0xE79BB1:0x4E56,\n0xE79BB6:0x4E57,0xE79BB9:0x4E58,0xE79BBC:0x4E59,0xE79C80:0x4E5A,0xE79C86:0x4E5B,\n0xE79C8A:0x4E5C,0xE79C8E:0x4E5D,0xE79C92:0x4E5E,0xE79C94:0x4E5F,0xE79C95:0x4E60,\n0xE79C97:0x4E61,0xE79C99:0x4E62,0xE79C9A:0x4E63,0xE79C9C:0x4E64,0xE79CA2:0x4E65,\n0xE79CA8:0x4E66,0xE79CAD:0x4E67,0xE79CAE:0x4E68,0xE79CAF:0x4E69,0xE79CB4:0x4E6A,\n0xE79CB5:0x4E6B,0xE79CB6:0x4E6C,0xE79CB9:0x4E6D,0xE79CBD:0x4E6E,0xE79CBE:0x4E6F,\n0xE79D82:0x4E70,0xE79D85:0x4E71,0xE79D86:0x4E72,0xE79D8A:0x4E73,0xE79D8D:0x4E74,\n0xE79D8E:0x4E75,0xE79D8F:0x4E76,0xE79D92:0x4E77,0xE79D96:0x4E78,0xE79D97:0x4E79,\n0xE79D9C:0x4E7A,0xE79D9E:0x4E7B,0xE79D9F:0x4E7C,0xE79DA0:0x4E7D,0xE79DA2:0x4E7E,\n0xE79DA4:0x4F21,0xE79DA7:0x4F22,0xE79DAA:0x4F23,0xE79DAC:0x4F24,0xE79DB0:0x4F25,\n0xE79DB2:0x4F26,0xE79DB3:0x4F27,0xE79DB4:0x4F28,0xE79DBA:0x4F29,0xE79DBD:0x4F2A,\n0xE79E80:0x4F2B,0xE79E84:0x4F2C,0xE79E8C:0x4F2D,0xE79E8D:0x4F2E,0xE79E94:0x4F2F,\n0xE79E95:0x4F30,0xE79E96:0x4F31,0xE79E9A:0x4F32,0xE79E9F:0x4F33,0xE79EA2:0x4F34,\n0xE79EA7:0x4F35,0xE79EAA:0x4F36,0xE79EAE:0x4F37,0xE79EAF:0x4F38,0xE79EB1:0x4F39,\n0xE79EB5:0x4F3A,0xE79EBE:0x4F3B,0xE79F83:0x4F3C,0xE79F89:0x4F3D,0xE79F91:0x4F3E,\n0xE79F92:0x4F3F,0xE79F95:0x4F40,0xE79F99:0x4F41,0xE79F9E:0x4F42,0xE79F9F:0x4F43,\n0xE79FA0:0x4F44,0xE79FA4:0x4F45,0xE79FA6:0x4F46,0xE79FAA:0x4F47,0xE79FAC:0x4F48,\n0xE79FB0:0x4F49,0xE79FB1:0x4F4A,0xE79FB4:0x4F4B,0xE79FB8:0x4F4C,0xE79FBB:0x4F4D,\n0xE7A085:0x4F4E,0xE7A086:0x4F4F,0xE7A089:0x4F50,0xE7A08D:0x4F51,0xE7A08E:0x4F52,\n0xE7A091:0x4F53,0xE7A09D:0x4F54,0xE7A0A1:0x4F55,0xE7A0A2:0x4F56,0xE7A0A3:0x4F57,\n0xE7A0AD:0x4F58,0xE7A0AE:0x4F59,0xE7A0B0:0x4F5A,0xE7A0B5:0x4F5B,0xE7A0B7:0x4F5C,\n0xE7A183:0x4F5D,0xE7A184:0x4F5E,0xE7A187:0x4F5F,0xE7A188:0x4F60,0xE7A18C:0x4F61,\n0xE7A18E:0x4F62,0xE7A192:0x4F63,0xE7A19C:0x4F64,0xE7A19E:0x4F65,0xE7A1A0:0x4F66,\n0xE7A1A1:0x4F67,0xE7A1A3:0x4F68,0xE7A1A4:0x4F69,0xE7A1A8:0x4F6A,0xE7A1AA:0x4F6B,\n0xE7A1AE:0x4F6C,0xE7A1BA:0x4F6D,0xE7A1BE:0x4F6E,0xE7A28A:0x4F6F,0xE7A28F:0x4F70,\n0xE7A294:0x4F71,0xE7A298:0x4F72,0xE7A2A1:0x4F73,0xE7A29D:0x4F74,0xE7A29E:0x4F75,\n0xE7A29F:0x4F76,0xE7A2A4:0x4F77,0xE7A2A8:0x4F78,0xE7A2AC:0x4F79,0xE7A2AD:0x4F7A,\n0xE7A2B0:0x4F7B,0xE7A2B1:0x4F7C,0xE7A2B2:0x4F7D,0xE7A2B3:0x4F7E,0xE7A2BB:0x5021,\n0xE7A2BD:0x5022,0xE7A2BF:0x5023,0xE7A387:0x5024,0xE7A388:0x5025,0xE7A389:0x5026,\n0xE7A38C:0x5027,0xE7A38E:0x5028,0xE7A392:0x5029,0xE7A393:0x502A,0xE7A395:0x502B,\n0xE7A396:0x502C,0xE7A3A4:0x502D,0xE7A39B:0x502E,0xE7A39F:0x502F,0xE7A3A0:0x5030,\n0xE7A3A1:0x5031,0xE7A3A6:0x5032,0xE7A3AA:0x5033,0xE7A3B2:0x5034,0xE7A3B3:0x5035,\n0xE7A480:0x5036,0xE7A3B6:0x5037,0xE7A3B7:0x5038,0xE7A3BA:0x5039,0xE7A3BB:0x503A,\n0xE7A3BF:0x503B,0xE7A486:0x503C,0xE7A48C:0x503D,0xE7A490:0x503E,0xE7A49A:0x503F,\n0xE7A49C:0x5040,0xE7A49E:0x5041,0xE7A49F:0x5042,0xE7A4A0:0x5043,0xE7A4A5:0x5044,\n0xE7A4A7:0x5045,0xE7A4A9:0x5046,0xE7A4AD:0x5047,0xE7A4B1:0x5048,0xE7A4B4:0x5049,\n0xE7A4B5:0x504A,0xE7A4BB:0x504B,0xE7A4BD:0x504C,0xE7A4BF:0x504D,0xE7A584:0x504E,\n0xE7A585:0x504F,0xE7A586:0x5050,0xE7A58A:0x5051,0xE7A58B:0x5052,0xE7A58F:0x5053,\n0xE7A591:0x5054,0xE7A594:0x5055,0xE7A598:0x5056,0xE7A59B:0x5057,0xE7A59C:0x5058,\n0xE7A5A7:0x5059,0xE7A5A9:0x505A,0xE7A5AB:0x505B,0xE7A5B2:0x505C,0xE7A5B9:0x505D,\n0xE7A5BB:0x505E,0xE7A5BC:0x505F,0xE7A5BE:0x5060,0xE7A68B:0x5061,0xE7A68C:0x5062,\n0xE7A691:0x5063,0xE7A693:0x5064,0xE7A694:0x5065,0xE7A695:0x5066,0xE7A696:0x5067,\n0xE7A698:0x5068,0xE7A69B:0x5069,0xE7A69C:0x506A,0xE7A6A1:0x506B,0xE7A6A8:0x506C,\n0xE7A6A9:0x506D,0xE7A6AB:0x506E,0xE7A6AF:0x506F,0xE7A6B1:0x5070,0xE7A6B4:0x5071,\n0xE7A6B8:0x5072,0xE7A6BB:0x5073,0xE7A782:0x5074,0xE7A784:0x5075,0xE7A787:0x5076,\n0xE7A788:0x5077,0xE7A78A:0x5078,0xE7A78F:0x5079,0xE7A794:0x507A,0xE7A796:0x507B,\n0xE7A79A:0x507C,0xE7A79D:0x507D,0xE7A79E:0x507E,0xE7A7A0:0x5121,0xE7A7A2:0x5122,\n0xE7A7A5:0x5123,0xE7A7AA:0x5124,0xE7A7AB:0x5125,0xE7A7AD:0x5126,0xE7A7B1:0x5127,\n0xE7A7B8:0x5128,0xE7A7BC:0x5129,0xE7A882:0x512A,0xE7A883:0x512B,0xE7A887:0x512C,\n0xE7A889:0x512D,0xE7A88A:0x512E,0xE7A88C:0x512F,0xE7A891:0x5130,0xE7A895:0x5131,\n0xE7A89B:0x5132,0xE7A89E:0x5133,0xE7A8A1:0x5134,0xE7A8A7:0x5135,0xE7A8AB:0x5136,\n0xE7A8AD:0x5137,0xE7A8AF:0x5138,0xE7A8B0:0x5139,0xE7A8B4:0x513A,0xE7A8B5:0x513B,\n0xE7A8B8:0x513C,0xE7A8B9:0x513D,0xE7A8BA:0x513E,0xE7A984:0x513F,0xE7A985:0x5140,\n0xE7A987:0x5141,0xE7A988:0x5142,0xE7A98C:0x5143,0xE7A995:0x5144,0xE7A996:0x5145,\n0xE7A999:0x5146,0xE7A99C:0x5147,0xE7A99D:0x5148,0xE7A99F:0x5149,0xE7A9A0:0x514A,\n0xE7A9A5:0x514B,0xE7A9A7:0x514C,0xE7A9AA:0x514D,0xE7A9AD:0x514E,0xE7A9B5:0x514F,\n0xE7A9B8:0x5150,0xE7A9BE:0x5151,0xE7AA80:0x5152,0xE7AA82:0x5153,0xE7AA85:0x5154,\n0xE7AA86:0x5155,0xE7AA8A:0x5156,0xE7AA8B:0x5157,0xE7AA90:0x5158,0xE7AA91:0x5159,\n0xE7AA94:0x515A,0xE7AA9E:0x515B,0xE7AAA0:0x515C,0xE7AAA3:0x515D,0xE7AAAC:0x515E,\n0xE7AAB3:0x515F,0xE7AAB5:0x5160,0xE7AAB9:0x5161,0xE7AABB:0x5162,0xE7AABC:0x5163,\n0xE7AB86:0x5164,0xE7AB89:0x5165,0xE7AB8C:0x5166,0xE7AB8E:0x5167,0xE7AB91:0x5168,\n0xE7AB9B:0x5169,0xE7ABA8:0x516A,0xE7ABA9:0x516B,0xE7ABAB:0x516C,0xE7ABAC:0x516D,\n0xE7ABB1:0x516E,0xE7ABB4:0x516F,0xE7ABBB:0x5170,0xE7ABBD:0x5171,0xE7ABBE:0x5172,\n0xE7AC87:0x5173,0xE7AC94:0x5174,0xE7AC9F:0x5175,0xE7ACA3:0x5176,0xE7ACA7:0x5177,\n0xE7ACA9:0x5178,0xE7ACAA:0x5179,0xE7ACAB:0x517A,0xE7ACAD:0x517B,0xE7ACAE:0x517C,\n0xE7ACAF:0x517D,0xE7ACB0:0x517E,0xE7ACB1:0x5221,0xE7ACB4:0x5222,0xE7ACBD:0x5223,\n0xE7ACBF:0x5224,0xE7AD80:0x5225,0xE7AD81:0x5226,0xE7AD87:0x5227,0xE7AD8E:0x5228,\n0xE7AD95:0x5229,0xE7ADA0:0x522A,0xE7ADA4:0x522B,0xE7ADA6:0x522C,0xE7ADA9:0x522D,\n0xE7ADAA:0x522E,0xE7ADAD:0x522F,0xE7ADAF:0x5230,0xE7ADB2:0x5231,0xE7ADB3:0x5232,\n0xE7ADB7:0x5233,0xE7AE84:0x5234,0xE7AE89:0x5235,0xE7AE8E:0x5236,0xE7AE90:0x5237,\n0xE7AE91:0x5238,0xE7AE96:0x5239,0xE7AE9B:0x523A,0xE7AE9E:0x523B,0xE7AEA0:0x523C,\n0xE7AEA5:0x523D,0xE7AEAC:0x523E,0xE7AEAF:0x523F,0xE7AEB0:0x5240,0xE7AEB2:0x5241,\n0xE7AEB5:0x5242,0xE7AEB6:0x5243,0xE7AEBA:0x5244,0xE7AEBB:0x5245,0xE7AEBC:0x5246,\n0xE7AEBD:0x5247,0xE7AF82:0x5248,0xE7AF85:0x5249,0xE7AF88:0x524A,0xE7AF8A:0x524B,\n0xE7AF94:0x524C,0xE7AF96:0x524D,0xE7AF97:0x524E,0xE7AF99:0x524F,0xE7AF9A:0x5250,\n0xE7AF9B:0x5251,0xE7AFA8:0x5252,0xE7AFAA:0x5253,0xE7AFB2:0x5254,0xE7AFB4:0x5255,\n0xE7AFB5:0x5256,0xE7AFB8:0x5257,0xE7AFB9:0x5258,0xE7AFBA:0x5259,0xE7AFBC:0x525A,\n0xE7AFBE:0x525B,0xE7B081:0x525C,0xE7B082:0x525D,0xE7B083:0x525E,0xE7B084:0x525F,\n0xE7B086:0x5260,0xE7B089:0x5261,0xE7B08B:0x5262,0xE7B08C:0x5263,0xE7B08E:0x5264,\n0xE7B08F:0x5265,0xE7B099:0x5266,0xE7B09B:0x5267,0xE7B0A0:0x5268,0xE7B0A5:0x5269,\n0xE7B0A6:0x526A,0xE7B0A8:0x526B,0xE7B0AC:0x526C,0xE7B0B1:0x526D,0xE7B0B3:0x526E,\n0xE7B0B4:0x526F,0xE7B0B6:0x5270,0xE7B0B9:0x5271,0xE7B0BA:0x5272,0xE7B186:0x5273,\n0xE7B18A:0x5274,0xE7B195:0x5275,0xE7B191:0x5276,0xE7B192:0x5277,0xE7B193:0x5278,\n0xE7B199:0x5279,0xE7B19A:0x527A,0xE7B19B:0x527B,0xE7B19C:0x527C,0xE7B19D:0x527D,\n0xE7B19E:0x527E,0xE7B1A1:0x5321,0xE7B1A3:0x5322,0xE7B1A7:0x5323,0xE7B1A9:0x5324,\n0xE7B1AD:0x5325,0xE7B1AE:0x5326,0xE7B1B0:0x5327,0xE7B1B2:0x5328,0xE7B1B9:0x5329,\n0xE7B1BC:0x532A,0xE7B1BD:0x532B,0xE7B286:0x532C,0xE7B287:0x532D,0xE7B28F:0x532E,\n0xE7B294:0x532F,0xE7B29E:0x5330,0xE7B2A0:0x5331,0xE7B2A6:0x5332,0xE7B2B0:0x5333,\n0xE7B2B6:0x5334,0xE7B2B7:0x5335,0xE7B2BA:0x5336,0xE7B2BB:0x5337,0xE7B2BC:0x5338,\n0xE7B2BF:0x5339,0xE7B384:0x533A,0xE7B387:0x533B,0xE7B388:0x533C,0xE7B389:0x533D,\n0xE7B38D:0x533E,0xE7B38F:0x533F,0xE7B393:0x5340,0xE7B394:0x5341,0xE7B395:0x5342,\n0xE7B397:0x5343,0xE7B399:0x5344,0xE7B39A:0x5345,0xE7B39D:0x5346,0xE7B3A6:0x5347,\n0xE7B3A9:0x5348,0xE7B3AB:0x5349,0xE7B3B5:0x534A,0xE7B483:0x534B,0xE7B487:0x534C,\n0xE7B488:0x534D,0xE7B489:0x534E,0xE7B48F:0x534F,0xE7B491:0x5350,0xE7B492:0x5351,\n0xE7B493:0x5352,0xE7B496:0x5353,0xE7B49D:0x5354,0xE7B49E:0x5355,0xE7B4A3:0x5356,\n0xE7B4A6:0x5357,0xE7B4AA:0x5358,0xE7B4AD:0x5359,0xE7B4B1:0x535A,0xE7B4BC:0x535B,\n0xE7B4BD:0x535C,0xE7B4BE:0x535D,0xE7B580:0x535E,0xE7B581:0x535F,0xE7B587:0x5360,\n0xE7B588:0x5361,0xE7B58D:0x5362,0xE7B591:0x5363,0xE7B593:0x5364,0xE7B597:0x5365,\n0xE7B599:0x5366,0xE7B59A:0x5367,0xE7B59C:0x5368,0xE7B59D:0x5369,0xE7B5A5:0x536A,\n0xE7B5A7:0x536B,0xE7B5AA:0x536C,0xE7B5B0:0x536D,0xE7B5B8:0x536E,0xE7B5BA:0x536F,\n0xE7B5BB:0x5370,0xE7B5BF:0x5371,0xE7B681:0x5372,0xE7B682:0x5373,0xE7B683:0x5374,\n0xE7B685:0x5375,0xE7B686:0x5376,0xE7B688:0x5377,0xE7B68B:0x5378,0xE7B68C:0x5379,\n0xE7B68D:0x537A,0xE7B691:0x537B,0xE7B696:0x537C,0xE7B697:0x537D,0xE7B69D:0x537E,\n0xE7B69E:0x5421,0xE7B6A6:0x5422,0xE7B6A7:0x5423,0xE7B6AA:0x5424,0xE7B6B3:0x5425,\n0xE7B6B6:0x5426,0xE7B6B7:0x5427,0xE7B6B9:0x5428,0xE7B782:0x5429,0xE7B783:0x542A,\n0xE7B784:0x542B,0xE7B785:0x542C,0xE7B786:0x542D,0xE7B78C:0x542E,0xE7B78D:0x542F,\n0xE7B78E:0x5430,0xE7B797:0x5431,0xE7B799:0x5432,0xE7B880:0x5433,0xE7B7A2:0x5434,\n0xE7B7A5:0x5435,0xE7B7A6:0x5436,0xE7B7AA:0x5437,0xE7B7AB:0x5438,0xE7B7AD:0x5439,\n0xE7B7B1:0x543A,0xE7B7B5:0x543B,0xE7B7B6:0x543C,0xE7B7B9:0x543D,0xE7B7BA:0x543E,\n0xE7B888:0x543F,0xE7B890:0x5440,0xE7B891:0x5441,0xE7B895:0x5442,0xE7B897:0x5443,\n0xE7B89C:0x5444,0xE7B89D:0x5445,0xE7B8A0:0x5446,0xE7B8A7:0x5447,0xE7B8A8:0x5448,\n0xE7B8AC:0x5449,0xE7B8AD:0x544A,0xE7B8AF:0x544B,0xE7B8B3:0x544C,0xE7B8B6:0x544D,\n0xE7B8BF:0x544E,0xE7B984:0x544F,0xE7B985:0x5450,0xE7B987:0x5451,0xE7B98E:0x5452,\n0xE7B990:0x5453,0xE7B992:0x5454,0xE7B998:0x5455,0xE7B99F:0x5456,0xE7B9A1:0x5457,\n0xE7B9A2:0x5458,0xE7B9A5:0x5459,0xE7B9AB:0x545A,0xE7B9AE:0x545B,0xE7B9AF:0x545C,\n0xE7B9B3:0x545D,0xE7B9B8:0x545E,0xE7B9BE:0x545F,0xE7BA81:0x5460,0xE7BA86:0x5461,\n0xE7BA87:0x5462,0xE7BA8A:0x5463,0xE7BA8D:0x5464,0xE7BA91:0x5465,0xE7BA95:0x5466,\n0xE7BA98:0x5467,0xE7BA9A:0x5468,0xE7BA9D:0x5469,0xE7BA9E:0x546A,0xE7BCBC:0x546B,\n0xE7BCBB:0x546C,0xE7BCBD:0x546D,0xE7BCBE:0x546E,0xE7BCBF:0x546F,0xE7BD83:0x5470,\n0xE7BD84:0x5471,0xE7BD87:0x5472,0xE7BD8F:0x5473,0xE7BD92:0x5474,0xE7BD93:0x5475,\n0xE7BD9B:0x5476,0xE7BD9C:0x5477,0xE7BD9D:0x5478,0xE7BDA1:0x5479,0xE7BDA3:0x547A,\n0xE7BDA4:0x547B,0xE7BDA5:0x547C,0xE7BDA6:0x547D,0xE7BDAD:0x547E,0xE7BDB1:0x5521,\n0xE7BDBD:0x5522,0xE7BDBE:0x5523,0xE7BDBF:0x5524,0xE7BE80:0x5525,0xE7BE8B:0x5526,\n0xE7BE8D:0x5527,0xE7BE8F:0x5528,0xE7BE90:0x5529,0xE7BE91:0x552A,0xE7BE96:0x552B,\n0xE7BE97:0x552C,0xE7BE9C:0x552D,0xE7BEA1:0x552E,0xE7BEA2:0x552F,0xE7BEA6:0x5530,\n0xE7BEAA:0x5531,0xE7BEAD:0x5532,0xE7BEB4:0x5533,0xE7BEBC:0x5534,0xE7BEBF:0x5535,\n0xE7BF80:0x5536,0xE7BF83:0x5537,0xE7BF88:0x5538,0xE7BF8E:0x5539,0xE7BF8F:0x553A,\n0xE7BF9B:0x553B,0xE7BF9F:0x553C,0xE7BFA3:0x553D,0xE7BFA5:0x553E,0xE7BFA8:0x553F,\n0xE7BFAC:0x5540,0xE7BFAE:0x5541,0xE7BFAF:0x5542,0xE7BFB2:0x5543,0xE7BFBA:0x5544,\n0xE7BFBD:0x5545,0xE7BFBE:0x5546,0xE7BFBF:0x5547,0xE88087:0x5548,0xE88088:0x5549,\n0xE8808A:0x554A,0xE8808D:0x554B,0xE8808E:0x554C,0xE8808F:0x554D,0xE88091:0x554E,\n0xE88093:0x554F,0xE88094:0x5550,0xE88096:0x5551,0xE8809D:0x5552,0xE8809E:0x5553,\n0xE8809F:0x5554,0xE880A0:0x5555,0xE880A4:0x5556,0xE880A6:0x5557,0xE880AC:0x5558,\n0xE880AE:0x5559,0xE880B0:0x555A,0xE880B4:0x555B,0xE880B5:0x555C,0xE880B7:0x555D,\n0xE880B9:0x555E,0xE880BA:0x555F,0xE880BC:0x5560,0xE880BE:0x5561,0xE88180:0x5562,\n0xE88184:0x5563,0xE881A0:0x5564,0xE881A4:0x5565,0xE881A6:0x5566,0xE881AD:0x5567,\n0xE881B1:0x5568,0xE881B5:0x5569,0xE88281:0x556A,0xE88288:0x556B,0xE8828E:0x556C,\n0xE8829C:0x556D,0xE8829E:0x556E,0xE882A6:0x556F,0xE882A7:0x5570,0xE882AB:0x5571,\n0xE882B8:0x5572,0xE882B9:0x5573,0xE88388:0x5574,0xE8838D:0x5575,0xE8838F:0x5576,\n0xE88392:0x5577,0xE88394:0x5578,0xE88395:0x5579,0xE88397:0x557A,0xE88398:0x557B,\n0xE883A0:0x557C,0xE883AD:0x557D,0xE883AE:0x557E,0xE883B0:0x5621,0xE883B2:0x5622,\n0xE883B3:0x5623,0xE883B6:0x5624,0xE883B9:0x5625,0xE883BA:0x5626,0xE883BE:0x5627,\n0xE88483:0x5628,0xE8848B:0x5629,0xE88496:0x562A,0xE88497:0x562B,0xE88498:0x562C,\n0xE8849C:0x562D,0xE8849E:0x562E,0xE884A0:0x562F,0xE884A4:0x5630,0xE884A7:0x5631,\n0xE884AC:0x5632,0xE884B0:0x5633,0xE884B5:0x5634,0xE884BA:0x5635,0xE884BC:0x5636,\n0xE88585:0x5637,0xE88587:0x5638,0xE8858A:0x5639,0xE8858C:0x563A,0xE88592:0x563B,\n0xE88597:0x563C,0xE885A0:0x563D,0xE885A1:0x563E,0xE885A7:0x563F,0xE885A8:0x5640,\n0xE885A9:0x5641,0xE885AD:0x5642,0xE885AF:0x5643,0xE885B7:0x5644,0xE88681:0x5645,\n0xE88690:0x5646,0xE88684:0x5647,0xE88685:0x5648,0xE88686:0x5649,0xE8868B:0x564A,\n0xE8868E:0x564B,0xE88696:0x564C,0xE88698:0x564D,0xE8869B:0x564E,0xE8869E:0x564F,\n0xE886A2:0x5650,0xE886AE:0x5651,0xE886B2:0x5652,0xE886B4:0x5653,0xE886BB:0x5654,\n0xE8878B:0x5655,0xE88783:0x5656,0xE88785:0x5657,0xE8878A:0x5658,0xE8878E:0x5659,\n0xE8878F:0x565A,0xE88795:0x565B,0xE88797:0x565C,0xE8879B:0x565D,0xE8879D:0x565E,\n0xE8879E:0x565F,0xE887A1:0x5660,0xE887A4:0x5661,0xE887AB:0x5662,0xE887AC:0x5663,\n0xE887B0:0x5664,0xE887B1:0x5665,0xE887B2:0x5666,0xE887B5:0x5667,0xE887B6:0x5668,\n0xE887B8:0x5669,0xE887B9:0x566A,0xE887BD:0x566B,0xE887BF:0x566C,0xE88880:0x566D,\n0xE88883:0x566E,0xE8888F:0x566F,0xE88893:0x5670,0xE88894:0x5671,0xE88899:0x5672,\n0xE8889A:0x5673,0xE8889D:0x5674,0xE888A1:0x5675,0xE888A2:0x5676,0xE888A8:0x5677,\n0xE888B2:0x5678,0xE888B4:0x5679,0xE888BA:0x567A,0xE88983:0x567B,0xE88984:0x567C,\n0xE88985:0x567D,0xE88986:0x567E,0xE8898B:0x5721,0xE8898E:0x5722,0xE8898F:0x5723,\n0xE88991:0x5724,0xE88996:0x5725,0xE8899C:0x5726,0xE889A0:0x5727,0xE889A3:0x5728,\n0xE889A7:0x5729,0xE889AD:0x572A,0xE889B4:0x572B,0xE889BB:0x572C,0xE889BD:0x572D,\n0xE889BF:0x572E,0xE88A80:0x572F,0xE88A81:0x5730,0xE88A83:0x5731,0xE88A84:0x5732,\n0xE88A87:0x5733,0xE88A89:0x5734,0xE88A8A:0x5735,0xE88A8E:0x5736,0xE88A91:0x5737,\n0xE88A94:0x5738,0xE88A96:0x5739,0xE88A98:0x573A,0xE88A9A:0x573B,0xE88A9B:0x573C,\n0xE88AA0:0x573D,0xE88AA1:0x573E,0xE88AA3:0x573F,0xE88AA4:0x5740,0xE88AA7:0x5741,\n0xE88AA8:0x5742,0xE88AA9:0x5743,0xE88AAA:0x5744,0xE88AAE:0x5745,0xE88AB0:0x5746,\n0xE88AB2:0x5747,0xE88AB4:0x5748,0xE88AB7:0x5749,0xE88ABA:0x574A,0xE88ABC:0x574B,\n0xE88ABE:0x574C,0xE88ABF:0x574D,0xE88B86:0x574E,0xE88B90:0x574F,0xE88B95:0x5750,\n0xE88B9A:0x5751,0xE88BA0:0x5752,0xE88BA2:0x5753,0xE88BA4:0x5754,0xE88BA8:0x5755,\n0xE88BAA:0x5756,0xE88BAD:0x5757,0xE88BAF:0x5758,0xE88BB6:0x5759,0xE88BB7:0x575A,\n0xE88BBD:0x575B,0xE88BBE:0x575C,0xE88C80:0x575D,0xE88C81:0x575E,0xE88C87:0x575F,\n0xE88C88:0x5760,0xE88C8A:0x5761,0xE88C8B:0x5762,0xE88D94:0x5763,0xE88C9B:0x5764,\n0xE88C9D:0x5765,0xE88C9E:0x5766,0xE88C9F:0x5767,0xE88CA1:0x5768,0xE88CA2:0x5769,\n0xE88CAC:0x576A,0xE88CAD:0x576B,0xE88CAE:0x576C,0xE88CB0:0x576D,0xE88CB3:0x576E,\n0xE88CB7:0x576F,0xE88CBA:0x5770,0xE88CBC:0x5771,0xE88CBD:0x5772,0xE88D82:0x5773,\n0xE88D83:0x5774,0xE88D84:0x5775,0xE88D87:0x5776,0xE88D8D:0x5777,0xE88D8E:0x5778,\n0xE88D91:0x5779,0xE88D95:0x577A,0xE88D96:0x577B,0xE88D97:0x577C,0xE88DB0:0x577D,\n0xE88DB8:0x577E,0xE88DBD:0x5821,0xE88DBF:0x5822,0xE88E80:0x5823,0xE88E82:0x5824,\n0xE88E84:0x5825,0xE88E86:0x5826,0xE88E8D:0x5827,0xE88E92:0x5828,0xE88E94:0x5829,\n0xE88E95:0x582A,0xE88E98:0x582B,0xE88E99:0x582C,0xE88E9B:0x582D,0xE88E9C:0x582E,\n0xE88E9D:0x582F,0xE88EA6:0x5830,0xE88EA7:0x5831,0xE88EA9:0x5832,0xE88EAC:0x5833,\n0xE88EBE:0x5834,0xE88EBF:0x5835,0xE88F80:0x5836,0xE88F87:0x5837,0xE88F89:0x5838,\n0xE88F8F:0x5839,0xE88F90:0x583A,0xE88F91:0x583B,0xE88F94:0x583C,0xE88F9D:0x583D,\n0xE88D93:0x583E,0xE88FA8:0x583F,0xE88FAA:0x5840,0xE88FB6:0x5841,0xE88FB8:0x5842,\n0xE88FB9:0x5843,0xE88FBC:0x5844,0xE89081:0x5845,0xE89086:0x5846,0xE8908A:0x5847,\n0xE8908F:0x5848,0xE89091:0x5849,0xE89095:0x584A,0xE89099:0x584B,0xE88EAD:0x584C,\n0xE890AF:0x584D,0xE890B9:0x584E,0xE89185:0x584F,0xE89187:0x5850,0xE89188:0x5851,\n0xE8918A:0x5852,0xE8918D:0x5853,0xE8918F:0x5854,0xE89191:0x5855,0xE89192:0x5856,\n0xE89196:0x5857,0xE89198:0x5858,0xE89199:0x5859,0xE8919A:0x585A,0xE8919C:0x585B,\n0xE891A0:0x585C,0xE891A4:0x585D,0xE891A5:0x585E,0xE891A7:0x585F,0xE891AA:0x5860,\n0xE891B0:0x5861,0xE891B3:0x5862,0xE891B4:0x5863,0xE891B6:0x5864,0xE891B8:0x5865,\n0xE891BC:0x5866,0xE891BD:0x5867,0xE89281:0x5868,0xE89285:0x5869,0xE89292:0x586A,\n0xE89293:0x586B,0xE89295:0x586C,0xE8929E:0x586D,0xE892A6:0x586E,0xE892A8:0x586F,\n0xE892A9:0x5870,0xE892AA:0x5871,0xE892AF:0x5872,0xE892B1:0x5873,0xE892B4:0x5874,\n0xE892BA:0x5875,0xE892BD:0x5876,0xE892BE:0x5877,0xE89380:0x5878,0xE89382:0x5879,\n0xE89387:0x587A,0xE89388:0x587B,0xE8938C:0x587C,0xE8938F:0x587D,0xE89393:0x587E,\n0xE8939C:0x5921,0xE893A7:0x5922,0xE893AA:0x5923,0xE893AF:0x5924,0xE893B0:0x5925,\n0xE893B1:0x5926,0xE893B2:0x5927,0xE893B7:0x5928,0xE894B2:0x5929,0xE893BA:0x592A,\n0xE893BB:0x592B,0xE893BD:0x592C,0xE89482:0x592D,0xE89483:0x592E,0xE89487:0x592F,\n0xE8948C:0x5930,0xE8948E:0x5931,0xE89490:0x5932,0xE8949C:0x5933,0xE8949E:0x5934,\n0xE894A2:0x5935,0xE894A3:0x5936,0xE894A4:0x5937,0xE894A5:0x5938,0xE894A7:0x5939,\n0xE894AA:0x593A,0xE894AB:0x593B,0xE894AF:0x593C,0xE894B3:0x593D,0xE894B4:0x593E,\n0xE894B6:0x593F,0xE894BF:0x5940,0xE89586:0x5941,0xE8958F:0x5942,0xE89590:0x5943,\n0xE89591:0x5944,0xE89592:0x5945,0xE89593:0x5946,0xE89596:0x5947,0xE89599:0x5948,\n0xE8959C:0x5949,0xE8959D:0x594A,0xE8959E:0x594B,0xE8959F:0x594C,0xE895A0:0x594D,\n0xE895A1:0x594E,0xE895A2:0x594F,0xE895A4:0x5950,0xE895AB:0x5951,0xE895AF:0x5952,\n0xE895B9:0x5953,0xE895BA:0x5954,0xE895BB:0x5955,0xE895BD:0x5956,0xE895BF:0x5957,\n0xE89681:0x5958,0xE89685:0x5959,0xE89686:0x595A,0xE89689:0x595B,0xE8968B:0x595C,\n0xE8968C:0x595D,0xE8968F:0x595E,0xE89693:0x595F,0xE89698:0x5960,0xE8969D:0x5961,\n0xE8969F:0x5962,0xE896A0:0x5963,0xE896A2:0x5964,0xE896A5:0x5965,0xE896A7:0x5966,\n0xE896B4:0x5967,0xE896B6:0x5968,0xE896B7:0x5969,0xE896B8:0x596A,0xE896BC:0x596B,\n0xE896BD:0x596C,0xE896BE:0x596D,0xE896BF:0x596E,0xE89782:0x596F,0xE89787:0x5970,\n0xE8978A:0x5971,0xE8978B:0x5972,0xE8978E:0x5973,0xE896AD:0x5974,0xE89798:0x5975,\n0xE8979A:0x5976,0xE8979F:0x5977,0xE897A0:0x5978,0xE897A6:0x5979,0xE897A8:0x597A,\n0xE897AD:0x597B,0xE897B3:0x597C,0xE897B6:0x597D,0xE897BC:0x597E,0xE897BF:0x5A21,\n0xE89880:0x5A22,0xE89884:0x5A23,0xE89885:0x5A24,0xE8988D:0x5A25,0xE8988E:0x5A26,\n0xE89890:0x5A27,0xE89891:0x5A28,0xE89892:0x5A29,0xE89898:0x5A2A,0xE89899:0x5A2B,\n0xE8989B:0x5A2C,0xE8989E:0x5A2D,0xE898A1:0x5A2E,0xE898A7:0x5A2F,0xE898A9:0x5A30,\n0xE898B6:0x5A31,0xE898B8:0x5A32,0xE898BA:0x5A33,0xE898BC:0x5A34,0xE898BD:0x5A35,\n0xE89980:0x5A36,0xE89982:0x5A37,0xE89986:0x5A38,0xE89992:0x5A39,0xE89993:0x5A3A,\n0xE89996:0x5A3B,0xE89997:0x5A3C,0xE89998:0x5A3D,0xE89999:0x5A3E,0xE8999D:0x5A3F,\n0xE899A0:0x5A40,0xE899A1:0x5A41,0xE899A2:0x5A42,0xE899A3:0x5A43,0xE899A4:0x5A44,\n0xE899A9:0x5A45,0xE899AC:0x5A46,0xE899AF:0x5A47,0xE899B5:0x5A48,0xE899B6:0x5A49,\n0xE899B7:0x5A4A,0xE899BA:0x5A4B,0xE89A8D:0x5A4C,0xE89A91:0x5A4D,0xE89A96:0x5A4E,\n0xE89A98:0x5A4F,0xE89A9A:0x5A50,0xE89A9C:0x5A51,0xE89AA1:0x5A52,0xE89AA6:0x5A53,\n0xE89AA7:0x5A54,0xE89AA8:0x5A55,0xE89AAD:0x5A56,0xE89AB1:0x5A57,0xE89AB3:0x5A58,\n0xE89AB4:0x5A59,0xE89AB5:0x5A5A,0xE89AB7:0x5A5B,0xE89AB8:0x5A5C,0xE89AB9:0x5A5D,\n0xE89ABF:0x5A5E,0xE89B80:0x5A5F,0xE89B81:0x5A60,0xE89B83:0x5A61,0xE89B85:0x5A62,\n0xE89B91:0x5A63,0xE89B92:0x5A64,0xE89B95:0x5A65,0xE89B97:0x5A66,0xE89B9A:0x5A67,\n0xE89B9C:0x5A68,0xE89BA0:0x5A69,0xE89BA3:0x5A6A,0xE89BA5:0x5A6B,0xE89BA7:0x5A6C,\n0xE89A88:0x5A6D,0xE89BBA:0x5A6E,0xE89BBC:0x5A6F,0xE89BBD:0x5A70,0xE89C84:0x5A71,\n0xE89C85:0x5A72,0xE89C87:0x5A73,0xE89C8B:0x5A74,0xE89C8E:0x5A75,0xE89C8F:0x5A76,\n0xE89C90:0x5A77,0xE89C93:0x5A78,0xE89C94:0x5A79,0xE89C99:0x5A7A,0xE89C9E:0x5A7B,\n0xE89C9F:0x5A7C,0xE89CA1:0x5A7D,0xE89CA3:0x5A7E,0xE89CA8:0x5B21,0xE89CAE:0x5B22,\n0xE89CAF:0x5B23,0xE89CB1:0x5B24,0xE89CB2:0x5B25,0xE89CB9:0x5B26,0xE89CBA:0x5B27,\n0xE89CBC:0x5B28,0xE89CBD:0x5B29,0xE89CBE:0x5B2A,0xE89D80:0x5B2B,0xE89D83:0x5B2C,\n0xE89D85:0x5B2D,0xE89D8D:0x5B2E,0xE89D98:0x5B2F,0xE89D9D:0x5B30,0xE89DA1:0x5B31,\n0xE89DA4:0x5B32,0xE89DA5:0x5B33,0xE89DAF:0x5B34,0xE89DB1:0x5B35,0xE89DB2:0x5B36,\n0xE89DBB:0x5B37,0xE89E83:0x5B38,0xE89E84:0x5B39,0xE89E85:0x5B3A,0xE89E86:0x5B3B,\n0xE89E87:0x5B3C,0xE89E88:0x5B3D,0xE89E89:0x5B3E,0xE89E8B:0x5B3F,0xE89E8C:0x5B40,\n0xE89E90:0x5B41,0xE89E93:0x5B42,0xE89E95:0x5B43,0xE89E97:0x5B44,0xE89E98:0x5B45,\n0xE89E99:0x5B46,0xE89E9E:0x5B47,0xE89EA0:0x5B48,0xE89EA3:0x5B49,0xE89EA7:0x5B4A,\n0xE89EAC:0x5B4B,0xE89EAD:0x5B4C,0xE89EAE:0x5B4D,0xE89EB1:0x5B4E,0xE89EB5:0x5B4F,\n0xE89EBE:0x5B50,0xE89EBF:0x5B51,0xE89F81:0x5B52,0xE89F88:0x5B53,0xE89F89:0x5B54,\n0xE89F8A:0x5B55,0xE89F8E:0x5B56,0xE89F95:0x5B57,0xE89F96:0x5B58,0xE89F99:0x5B59,\n0xE89F9A:0x5B5A,0xE89F9C:0x5B5B,0xE89F9F:0x5B5C,0xE89FA2:0x5B5D,0xE89FA3:0x5B5E,\n0xE89FA4:0x5B5F,0xE89FAA:0x5B60,0xE89FAB:0x5B61,0xE89FAD:0x5B62,0xE89FB1:0x5B63,\n0xE89FB3:0x5B64,0xE89FB8:0x5B65,0xE89FBA:0x5B66,0xE89FBF:0x5B67,0xE8A081:0x5B68,\n0xE8A083:0x5B69,0xE8A086:0x5B6A,0xE8A089:0x5B6B,0xE8A08A:0x5B6C,0xE8A08B:0x5B6D,\n0xE8A090:0x5B6E,0xE8A099:0x5B6F,0xE8A092:0x5B70,0xE8A093:0x5B71,0xE8A094:0x5B72,\n0xE8A098:0x5B73,0xE8A09A:0x5B74,0xE8A09B:0x5B75,0xE8A09C:0x5B76,0xE8A09E:0x5B77,\n0xE8A09F:0x5B78,0xE8A0A8:0x5B79,0xE8A0AD:0x5B7A,0xE8A0AE:0x5B7B,0xE8A0B0:0x5B7C,\n0xE8A0B2:0x5B7D,0xE8A0B5:0x5B7E,0xE8A0BA:0x5C21,0xE8A0BC:0x5C22,0xE8A181:0x5C23,\n0xE8A183:0x5C24,0xE8A185:0x5C25,0xE8A188:0x5C26,0xE8A189:0x5C27,0xE8A18A:0x5C28,\n0xE8A18B:0x5C29,0xE8A18E:0x5C2A,0xE8A191:0x5C2B,0xE8A195:0x5C2C,0xE8A196:0x5C2D,\n0xE8A198:0x5C2E,0xE8A19A:0x5C2F,0xE8A19C:0x5C30,0xE8A19F:0x5C31,0xE8A1A0:0x5C32,\n0xE8A1A4:0x5C33,0xE8A1A9:0x5C34,0xE8A1B1:0x5C35,0xE8A1B9:0x5C36,0xE8A1BB:0x5C37,\n0xE8A280:0x5C38,0xE8A298:0x5C39,0xE8A29A:0x5C3A,0xE8A29B:0x5C3B,0xE8A29C:0x5C3C,\n0xE8A29F:0x5C3D,0xE8A2A0:0x5C3E,0xE8A2A8:0x5C3F,0xE8A2AA:0x5C40,0xE8A2BA:0x5C41,\n0xE8A2BD:0x5C42,0xE8A2BE:0x5C43,0xE8A380:0x5C44,0xE8A38A:0x5C45,0xE8A38B:0x5C46,\n0xE8A38C:0x5C47,0xE8A38D:0x5C48,0xE8A38E:0x5C49,0xE8A391:0x5C4A,0xE8A392:0x5C4B,\n0xE8A393:0x5C4C,0xE8A39B:0x5C4D,0xE8A39E:0x5C4E,0xE8A3A7:0x5C4F,0xE8A3AF:0x5C50,\n0xE8A3B0:0x5C51,0xE8A3B1:0x5C52,0xE8A3B5:0x5C53,0xE8A3B7:0x5C54,0xE8A481:0x5C55,\n0xE8A486:0x5C56,0xE8A48D:0x5C57,0xE8A48E:0x5C58,0xE8A48F:0x5C59,0xE8A495:0x5C5A,\n0xE8A496:0x5C5B,0xE8A498:0x5C5C,0xE8A499:0x5C5D,0xE8A49A:0x5C5E,0xE8A49C:0x5C5F,\n0xE8A4A0:0x5C60,0xE8A4A6:0x5C61,0xE8A4A7:0x5C62,0xE8A4A8:0x5C63,0xE8A4B0:0x5C64,\n0xE8A4B1:0x5C65,0xE8A4B2:0x5C66,0xE8A4B5:0x5C67,0xE8A4B9:0x5C68,0xE8A4BA:0x5C69,\n0xE8A4BE:0x5C6A,0xE8A580:0x5C6B,0xE8A582:0x5C6C,0xE8A585:0x5C6D,0xE8A586:0x5C6E,\n0xE8A589:0x5C6F,0xE8A58F:0x5C70,0xE8A592:0x5C71,0xE8A597:0x5C72,0xE8A59A:0x5C73,\n0xE8A59B:0x5C74,0xE8A59C:0x5C75,0xE8A5A1:0x5C76,0xE8A5A2:0x5C77,0xE8A5A3:0x5C78,\n0xE8A5AB:0x5C79,0xE8A5AE:0x5C7A,0xE8A5B0:0x5C7B,0xE8A5B3:0x5C7C,0xE8A5B5:0x5C7D,\n0xE8A5BA:0x5C7E,0xE8A5BB:0x5D21,0xE8A5BC:0x5D22,0xE8A5BD:0x5D23,0xE8A689:0x5D24,\n0xE8A68D:0x5D25,0xE8A690:0x5D26,0xE8A694:0x5D27,0xE8A695:0x5D28,0xE8A69B:0x5D29,\n0xE8A69C:0x5D2A,0xE8A69F:0x5D2B,0xE8A6A0:0x5D2C,0xE8A6A5:0x5D2D,0xE8A6B0:0x5D2E,\n0xE8A6B4:0x5D2F,0xE8A6B5:0x5D30,0xE8A6B6:0x5D31,0xE8A6B7:0x5D32,0xE8A6BC:0x5D33,\n0xE8A794:0x5D34,0xE8A795:0x5D35,0xE8A796:0x5D36,0xE8A797:0x5D37,0xE8A798:0x5D38,\n0xE8A7A5:0x5D39,0xE8A7A9:0x5D3A,0xE8A7AB:0x5D3B,0xE8A7AD:0x5D3C,0xE8A7B1:0x5D3D,\n0xE8A7B3:0x5D3E,0xE8A7B6:0x5D3F,0xE8A7B9:0x5D40,0xE8A7BD:0x5D41,0xE8A7BF:0x5D42,\n0xE8A884:0x5D43,0xE8A885:0x5D44,0xE8A887:0x5D45,0xE8A88F:0x5D46,0xE8A891:0x5D47,\n0xE8A892:0x5D48,0xE8A894:0x5D49,0xE8A895:0x5D4A,0xE8A89E:0x5D4B,0xE8A8A0:0x5D4C,\n0xE8A8A2:0x5D4D,0xE8A8A4:0x5D4E,0xE8A8A6:0x5D4F,0xE8A8AB:0x5D50,0xE8A8AC:0x5D51,\n0xE8A8AF:0x5D52,0xE8A8B5:0x5D53,0xE8A8B7:0x5D54,0xE8A8BD:0x5D55,0xE8A8BE:0x5D56,\n0xE8A980:0x5D57,0xE8A983:0x5D58,0xE8A985:0x5D59,0xE8A987:0x5D5A,0xE8A989:0x5D5B,\n0xE8A98D:0x5D5C,0xE8A98E:0x5D5D,0xE8A993:0x5D5E,0xE8A996:0x5D5F,0xE8A997:0x5D60,\n0xE8A998:0x5D61,0xE8A99C:0x5D62,0xE8A99D:0x5D63,0xE8A9A1:0x5D64,0xE8A9A5:0x5D65,\n0xE8A9A7:0x5D66,0xE8A9B5:0x5D67,0xE8A9B6:0x5D68,0xE8A9B7:0x5D69,0xE8A9B9:0x5D6A,\n0xE8A9BA:0x5D6B,0xE8A9BB:0x5D6C,0xE8A9BE:0x5D6D,0xE8A9BF:0x5D6E,0xE8AA80:0x5D6F,\n0xE8AA83:0x5D70,0xE8AA86:0x5D71,0xE8AA8B:0x5D72,0xE8AA8F:0x5D73,0xE8AA90:0x5D74,\n0xE8AA92:0x5D75,0xE8AA96:0x5D76,0xE8AA97:0x5D77,0xE8AA99:0x5D78,0xE8AA9F:0x5D79,\n0xE8AAA7:0x5D7A,0xE8AAA9:0x5D7B,0xE8AAAE:0x5D7C,0xE8AAAF:0x5D7D,0xE8AAB3:0x5D7E,\n0xE8AAB6:0x5E21,0xE8AAB7:0x5E22,0xE8AABB:0x5E23,0xE8AABE:0x5E24,0xE8AB83:0x5E25,\n0xE8AB86:0x5E26,0xE8AB88:0x5E27,0xE8AB89:0x5E28,0xE8AB8A:0x5E29,0xE8AB91:0x5E2A,\n0xE8AB93:0x5E2B,0xE8AB94:0x5E2C,0xE8AB95:0x5E2D,0xE8AB97:0x5E2E,0xE8AB9D:0x5E2F,\n0xE8AB9F:0x5E30,0xE8ABAC:0x5E31,0xE8ABB0:0x5E32,0xE8ABB4:0x5E33,0xE8ABB5:0x5E34,\n0xE8ABB6:0x5E35,0xE8ABBC:0x5E36,0xE8ABBF:0x5E37,0xE8AC85:0x5E38,0xE8AC86:0x5E39,\n0xE8AC8B:0x5E3A,0xE8AC91:0x5E3B,0xE8AC9C:0x5E3C,0xE8AC9E:0x5E3D,0xE8AC9F:0x5E3E,\n0xE8AC8A:0x5E3F,0xE8ACAD:0x5E40,0xE8ACB0:0x5E41,0xE8ACB7:0x5E42,0xE8ACBC:0x5E43,\n0xE8AD82:0x5E44,0xE8AD83:0x5E45,0xE8AD84:0x5E46,0xE8AD85:0x5E47,0xE8AD86:0x5E48,\n0xE8AD88:0x5E49,0xE8AD92:0x5E4A,0xE8AD93:0x5E4B,0xE8AD94:0x5E4C,0xE8AD99:0x5E4D,\n0xE8AD8D:0x5E4E,0xE8AD9E:0x5E4F,0xE8ADA3:0x5E50,0xE8ADAD:0x5E51,0xE8ADB6:0x5E52,\n0xE8ADB8:0x5E53,0xE8ADB9:0x5E54,0xE8ADBC:0x5E55,0xE8ADBE:0x5E56,0xE8AE81:0x5E57,\n0xE8AE84:0x5E58,0xE8AE85:0x5E59,0xE8AE8B:0x5E5A,0xE8AE8D:0x5E5B,0xE8AE8F:0x5E5C,\n0xE8AE94:0x5E5D,0xE8AE95:0x5E5E,0xE8AE9C:0x5E5F,0xE8AE9E:0x5E60,0xE8AE9F:0x5E61,\n0xE8B0B8:0x5E62,0xE8B0B9:0x5E63,0xE8B0BD:0x5E64,0xE8B0BE:0x5E65,0xE8B185:0x5E66,\n0xE8B187:0x5E67,0xE8B189:0x5E68,0xE8B18B:0x5E69,0xE8B18F:0x5E6A,0xE8B191:0x5E6B,\n0xE8B193:0x5E6C,0xE8B194:0x5E6D,0xE8B197:0x5E6E,0xE8B198:0x5E6F,0xE8B19B:0x5E70,\n0xE8B19D:0x5E71,0xE8B199:0x5E72,0xE8B1A3:0x5E73,0xE8B1A4:0x5E74,0xE8B1A6:0x5E75,\n0xE8B1A8:0x5E76,0xE8B1A9:0x5E77,0xE8B1AD:0x5E78,0xE8B1B3:0x5E79,0xE8B1B5:0x5E7A,\n0xE8B1B6:0x5E7B,0xE8B1BB:0x5E7C,0xE8B1BE:0x5E7D,0xE8B286:0x5E7E,0xE8B287:0x5F21,\n0xE8B28B:0x5F22,0xE8B290:0x5F23,0xE8B292:0x5F24,0xE8B293:0x5F25,0xE8B299:0x5F26,\n0xE8B29B:0x5F27,0xE8B29C:0x5F28,0xE8B2A4:0x5F29,0xE8B2B9:0x5F2A,0xE8B2BA:0x5F2B,\n0xE8B385:0x5F2C,0xE8B386:0x5F2D,0xE8B389:0x5F2E,0xE8B38B:0x5F2F,0xE8B38F:0x5F30,\n0xE8B396:0x5F31,0xE8B395:0x5F32,0xE8B399:0x5F33,0xE8B39D:0x5F34,0xE8B3A1:0x5F35,\n0xE8B3A8:0x5F36,0xE8B3AC:0x5F37,0xE8B3AF:0x5F38,0xE8B3B0:0x5F39,0xE8B3B2:0x5F3A,\n0xE8B3B5:0x5F3B,0xE8B3B7:0x5F3C,0xE8B3B8:0x5F3D,0xE8B3BE:0x5F3E,0xE8B3BF:0x5F3F,\n0xE8B481:0x5F40,0xE8B483:0x5F41,0xE8B489:0x5F42,0xE8B492:0x5F43,0xE8B497:0x5F44,\n0xE8B49B:0x5F45,0xE8B5A5:0x5F46,0xE8B5A9:0x5F47,0xE8B5AC:0x5F48,0xE8B5AE:0x5F49,\n0xE8B5BF:0x5F4A,0xE8B682:0x5F4B,0xE8B684:0x5F4C,0xE8B688:0x5F4D,0xE8B68D:0x5F4E,\n0xE8B690:0x5F4F,0xE8B691:0x5F50,0xE8B695:0x5F51,0xE8B69E:0x5F52,0xE8B69F:0x5F53,\n0xE8B6A0:0x5F54,0xE8B6A6:0x5F55,0xE8B6AB:0x5F56,0xE8B6AC:0x5F57,0xE8B6AF:0x5F58,\n0xE8B6B2:0x5F59,0xE8B6B5:0x5F5A,0xE8B6B7:0x5F5B,0xE8B6B9:0x5F5C,0xE8B6BB:0x5F5D,\n0xE8B780:0x5F5E,0xE8B785:0x5F5F,0xE8B786:0x5F60,0xE8B787:0x5F61,0xE8B788:0x5F62,\n0xE8B78A:0x5F63,0xE8B78E:0x5F64,0xE8B791:0x5F65,0xE8B794:0x5F66,0xE8B795:0x5F67,\n0xE8B797:0x5F68,0xE8B799:0x5F69,0xE8B7A4:0x5F6A,0xE8B7A5:0x5F6B,0xE8B7A7:0x5F6C,\n0xE8B7AC:0x5F6D,0xE8B7B0:0x5F6E,0xE8B6BC:0x5F6F,0xE8B7B1:0x5F70,0xE8B7B2:0x5F71,\n0xE8B7B4:0x5F72,0xE8B7BD:0x5F73,0xE8B881:0x5F74,0xE8B884:0x5F75,0xE8B885:0x5F76,\n0xE8B886:0x5F77,0xE8B88B:0x5F78,0xE8B891:0x5F79,0xE8B894:0x5F7A,0xE8B896:0x5F7B,\n0xE8B8A0:0x5F7C,0xE8B8A1:0x5F7D,0xE8B8A2:0x5F7E,0xE8B8A3:0x6021,0xE8B8A6:0x6022,\n0xE8B8A7:0x6023,0xE8B8B1:0x6024,0xE8B8B3:0x6025,0xE8B8B6:0x6026,0xE8B8B7:0x6027,\n0xE8B8B8:0x6028,0xE8B8B9:0x6029,0xE8B8BD:0x602A,0xE8B980:0x602B,0xE8B981:0x602C,\n0xE8B98B:0x602D,0xE8B98D:0x602E,0xE8B98E:0x602F,0xE8B98F:0x6030,0xE8B994:0x6031,\n0xE8B99B:0x6032,0xE8B99C:0x6033,0xE8B99D:0x6034,0xE8B99E:0x6035,0xE8B9A1:0x6036,\n0xE8B9A2:0x6037,0xE8B9A9:0x6038,0xE8B9AC:0x6039,0xE8B9AD:0x603A,0xE8B9AF:0x603B,\n0xE8B9B0:0x603C,0xE8B9B1:0x603D,0xE8B9B9:0x603E,0xE8B9BA:0x603F,0xE8B9BB:0x6040,\n0xE8BA82:0x6041,0xE8BA83:0x6042,0xE8BA89:0x6043,0xE8BA90:0x6044,0xE8BA92:0x6045,\n0xE8BA95:0x6046,0xE8BA9A:0x6047,0xE8BA9B:0x6048,0xE8BA9D:0x6049,0xE8BA9E:0x604A,\n0xE8BAA2:0x604B,0xE8BAA7:0x604C,0xE8BAA9:0x604D,0xE8BAAD:0x604E,0xE8BAAE:0x604F,\n0xE8BAB3:0x6050,0xE8BAB5:0x6051,0xE8BABA:0x6052,0xE8BABB:0x6053,0xE8BB80:0x6054,\n0xE8BB81:0x6055,0xE8BB83:0x6056,0xE8BB84:0x6057,0xE8BB87:0x6058,0xE8BB8F:0x6059,\n0xE8BB91:0x605A,0xE8BB94:0x605B,0xE8BB9C:0x605C,0xE8BBA8:0x605D,0xE8BBAE:0x605E,\n0xE8BBB0:0x605F,0xE8BBB1:0x6060,0xE8BBB7:0x6061,0xE8BBB9:0x6062,0xE8BBBA:0x6063,\n0xE8BBAD:0x6064,0xE8BC80:0x6065,0xE8BC82:0x6066,0xE8BC87:0x6067,0xE8BC88:0x6068,\n0xE8BC8F:0x6069,0xE8BC90:0x606A,0xE8BC96:0x606B,0xE8BC97:0x606C,0xE8BC98:0x606D,\n0xE8BC9E:0x606E,0xE8BCA0:0x606F,0xE8BCA1:0x6070,0xE8BCA3:0x6071,0xE8BCA5:0x6072,\n0xE8BCA7:0x6073,0xE8BCA8:0x6074,0xE8BCAC:0x6075,0xE8BCAD:0x6076,0xE8BCAE:0x6077,\n0xE8BCB4:0x6078,0xE8BCB5:0x6079,0xE8BCB6:0x607A,0xE8BCB7:0x607B,0xE8BCBA:0x607C,\n0xE8BD80:0x607D,0xE8BD81:0x607E,0xE8BD83:0x6121,0xE8BD87:0x6122,0xE8BD8F:0x6123,\n0xE8BD91:0x6124,0xE8BD92:0x6125,0xE8BD93:0x6126,0xE8BD94:0x6127,0xE8BD95:0x6128,\n0xE8BD98:0x6129,0xE8BD9D:0x612A,0xE8BD9E:0x612B,0xE8BDA5:0x612C,0xE8BE9D:0x612D,\n0xE8BEA0:0x612E,0xE8BEA1:0x612F,0xE8BEA4:0x6130,0xE8BEA5:0x6131,0xE8BEA6:0x6132,\n0xE8BEB5:0x6133,0xE8BEB6:0x6134,0xE8BEB8:0x6135,0xE8BEBE:0x6136,0xE8BF80:0x6137,\n0xE8BF81:0x6138,0xE8BF86:0x6139,0xE8BF8A:0x613A,0xE8BF8B:0x613B,0xE8BF8D:0x613C,\n0xE8BF90:0x613D,0xE8BF92:0x613E,0xE8BF93:0x613F,0xE8BF95:0x6140,0xE8BFA0:0x6141,\n0xE8BFA3:0x6142,0xE8BFA4:0x6143,0xE8BFA8:0x6144,0xE8BFAE:0x6145,0xE8BFB1:0x6146,\n0xE8BFB5:0x6147,0xE8BFB6:0x6148,0xE8BFBB:0x6149,0xE8BFBE:0x614A,0xE98082:0x614B,\n0xE98084:0x614C,0xE98088:0x614D,0xE9808C:0x614E,0xE98098:0x614F,0xE9809B:0x6150,\n0xE980A8:0x6151,0xE980A9:0x6152,0xE980AF:0x6153,0xE980AA:0x6154,0xE980AC:0x6155,\n0xE980AD:0x6156,0xE980B3:0x6157,0xE980B4:0x6158,0xE980B7:0x6159,0xE980BF:0x615A,\n0xE98183:0x615B,0xE98184:0x615C,0xE9818C:0x615D,0xE9819B:0x615E,0xE9819D:0x615F,\n0xE981A2:0x6160,0xE981A6:0x6161,0xE981A7:0x6162,0xE981AC:0x6163,0xE981B0:0x6164,\n0xE981B4:0x6165,0xE981B9:0x6166,0xE98285:0x6167,0xE98288:0x6168,0xE9828B:0x6169,\n0xE9828C:0x616A,0xE9828E:0x616B,0xE98290:0x616C,0xE98295:0x616D,0xE98297:0x616E,\n0xE98298:0x616F,0xE98299:0x6170,0xE9829B:0x6171,0xE982A0:0x6172,0xE982A1:0x6173,\n0xE982A2:0x6174,0xE982A5:0x6175,0xE982B0:0x6176,0xE982B2:0x6177,0xE982B3:0x6178,\n0xE982B4:0x6179,0xE982B6:0x617A,0xE982BD:0x617B,0xE9838C:0x617C,0xE982BE:0x617D,\n0xE98383:0x617E,0xE98384:0x6221,0xE98385:0x6222,0xE98387:0x6223,0xE98388:0x6224,\n0xE98395:0x6225,0xE98397:0x6226,0xE98398:0x6227,0xE98399:0x6228,0xE9839C:0x6229,\n0xE9839D:0x622A,0xE9839F:0x622B,0xE983A5:0x622C,0xE98392:0x622D,0xE983B6:0x622E,\n0xE983AB:0x622F,0xE983AF:0x6230,0xE983B0:0x6231,0xE983B4:0x6232,0xE983BE:0x6233,\n0xE983BF:0x6234,0xE98480:0x6235,0xE98484:0x6236,0xE98485:0x6237,0xE98486:0x6238,\n0xE98488:0x6239,0xE9848D:0x623A,0xE98490:0x623B,0xE98494:0x623C,0xE98496:0x623D,\n0xE98497:0x623E,0xE98498:0x623F,0xE9849A:0x6240,0xE9849C:0x6241,0xE9849E:0x6242,\n0xE984A0:0x6243,0xE984A5:0x6244,0xE984A2:0x6245,0xE984A3:0x6246,0xE984A7:0x6247,\n0xE984A9:0x6248,0xE984AE:0x6249,0xE984AF:0x624A,0xE984B1:0x624B,0xE984B4:0x624C,\n0xE984B6:0x624D,0xE984B7:0x624E,0xE984B9:0x624F,0xE984BA:0x6250,0xE984BC:0x6251,\n0xE984BD:0x6252,0xE98583:0x6253,0xE98587:0x6254,0xE98588:0x6255,0xE9858F:0x6256,\n0xE98593:0x6257,0xE98597:0x6258,0xE98599:0x6259,0xE9859A:0x625A,0xE9859B:0x625B,\n0xE985A1:0x625C,0xE985A4:0x625D,0xE985A7:0x625E,0xE985AD:0x625F,0xE985B4:0x6260,\n0xE985B9:0x6261,0xE985BA:0x6262,0xE985BB:0x6263,0xE98681:0x6264,0xE98683:0x6265,\n0xE98685:0x6266,0xE98686:0x6267,0xE9868A:0x6268,0xE9868E:0x6269,0xE98691:0x626A,\n0xE98693:0x626B,0xE98694:0x626C,0xE98695:0x626D,0xE98698:0x626E,0xE9869E:0x626F,\n0xE986A1:0x6270,0xE986A6:0x6271,0xE986A8:0x6272,0xE986AC:0x6273,0xE986AD:0x6274,\n0xE986AE:0x6275,0xE986B0:0x6276,0xE986B1:0x6277,0xE986B2:0x6278,0xE986B3:0x6279,\n0xE986B6:0x627A,0xE986BB:0x627B,0xE986BC:0x627C,0xE986BD:0x627D,0xE986BF:0x627E,\n0xE98782:0x6321,0xE98783:0x6322,0xE98785:0x6323,0xE98793:0x6324,0xE98794:0x6325,\n0xE98797:0x6326,0xE98799:0x6327,0xE9879A:0x6328,0xE9879E:0x6329,0xE987A4:0x632A,\n0xE987A5:0x632B,0xE987A9:0x632C,0xE987AA:0x632D,0xE987AC:0x632E,0xE987AD:0x632F,\n0xE987AE:0x6330,0xE987AF:0x6331,0xE987B0:0x6332,0xE987B1:0x6333,0xE987B7:0x6334,\n0xE987B9:0x6335,0xE987BB:0x6336,0xE987BD:0x6337,0xE98880:0x6338,0xE98881:0x6339,\n0xE98884:0x633A,0xE98885:0x633B,0xE98886:0x633C,0xE98887:0x633D,0xE98889:0x633E,\n0xE9888A:0x633F,0xE9888C:0x6340,0xE98890:0x6341,0xE98892:0x6342,0xE98893:0x6343,\n0xE98896:0x6344,0xE98898:0x6345,0xE9889C:0x6346,0xE9889D:0x6347,0xE988A3:0x6348,\n0xE988A4:0x6349,0xE988A5:0x634A,0xE988A6:0x634B,0xE988A8:0x634C,0xE988AE:0x634D,\n0xE988AF:0x634E,0xE988B0:0x634F,0xE988B3:0x6350,0xE988B5:0x6351,0xE988B6:0x6352,\n0xE988B8:0x6353,0xE988B9:0x6354,0xE988BA:0x6355,0xE988BC:0x6356,0xE988BE:0x6357,\n0xE98980:0x6358,0xE98982:0x6359,0xE98983:0x635A,0xE98986:0x635B,0xE98987:0x635C,\n0xE9898A:0x635D,0xE9898D:0x635E,0xE9898E:0x635F,0xE9898F:0x6360,0xE98991:0x6361,\n0xE98998:0x6362,0xE98999:0x6363,0xE9899C:0x6364,0xE9899D:0x6365,0xE989A0:0x6366,\n0xE989A1:0x6367,0xE989A5:0x6368,0xE989A7:0x6369,0xE989A8:0x636A,0xE989A9:0x636B,\n0xE989AE:0x636C,0xE989AF:0x636D,0xE989B0:0x636E,0xE989B5:0x636F,0xE989B6:0x6370,\n0xE989B7:0x6371,0xE989B8:0x6372,0xE989B9:0x6373,0xE989BB:0x6374,0xE989BC:0x6375,\n0xE989BD:0x6376,0xE989BF:0x6377,0xE98A88:0x6378,0xE98A89:0x6379,0xE98A8A:0x637A,\n0xE98A8D:0x637B,0xE98A8E:0x637C,0xE98A92:0x637D,0xE98A97:0x637E,0xE98A99:0x6421,\n0xE98A9F:0x6422,0xE98AA0:0x6423,0xE98AA4:0x6424,0xE98AA5:0x6425,0xE98AA7:0x6426,\n0xE98AA8:0x6427,0xE98AAB:0x6428,0xE98AAF:0x6429,0xE98AB2:0x642A,0xE98AB6:0x642B,\n0xE98AB8:0x642C,0xE98ABA:0x642D,0xE98ABB:0x642E,0xE98ABC:0x642F,0xE98ABD:0x6430,\n0xE98ABF:0x6431,0xE98B80:0x6432,0xE98B81:0x6433,0xE98B82:0x6434,0xE98B83:0x6435,\n0xE98B85:0x6436,0xE98B86:0x6437,0xE98B87:0x6438,0xE98B88:0x6439,0xE98B8B:0x643A,\n0xE98B8C:0x643B,0xE98B8D:0x643C,0xE98B8E:0x643D,0xE98B90:0x643E,0xE98B93:0x643F,\n0xE98B95:0x6440,0xE98B97:0x6441,0xE98B98:0x6442,0xE98B99:0x6443,0xE98B9C:0x6444,\n0xE98B9D:0x6445,0xE98B9F:0x6446,0xE98BA0:0x6447,0xE98BA1:0x6448,0xE98BA3:0x6449,\n0xE98BA5:0x644A,0xE98BA7:0x644B,0xE98BA8:0x644C,0xE98BAC:0x644D,0xE98BAE:0x644E,\n0xE98BB0:0x644F,0xE98BB9:0x6450,0xE98BBB:0x6451,0xE98BBF:0x6452,0xE98C80:0x6453,\n0xE98C82:0x6454,0xE98C88:0x6455,0xE98C8D:0x6456,0xE98C91:0x6457,0xE98C94:0x6458,\n0xE98C95:0x6459,0xE98C9C:0x645A,0xE98C9D:0x645B,0xE98C9E:0x645C,0xE98C9F:0x645D,\n0xE98CA1:0x645E,0xE98CA4:0x645F,0xE98CA5:0x6460,0xE98CA7:0x6461,0xE98CA9:0x6462,\n0xE98CAA:0x6463,0xE98CB3:0x6464,0xE98CB4:0x6465,0xE98CB6:0x6466,0xE98CB7:0x6467,\n0xE98D87:0x6468,0xE98D88:0x6469,0xE98D89:0x646A,0xE98D90:0x646B,0xE98D91:0x646C,\n0xE98D92:0x646D,0xE98D95:0x646E,0xE98D97:0x646F,0xE98D98:0x6470,0xE98D9A:0x6471,\n0xE98D9E:0x6472,0xE98DA4:0x6473,0xE98DA5:0x6474,0xE98DA7:0x6475,0xE98DA9:0x6476,\n0xE98DAA:0x6477,0xE98DAD:0x6478,0xE98DAF:0x6479,0xE98DB0:0x647A,0xE98DB1:0x647B,\n0xE98DB3:0x647C,0xE98DB4:0x647D,0xE98DB6:0x647E,0xE98DBA:0x6521,0xE98DBD:0x6522,\n0xE98DBF:0x6523,0xE98E80:0x6524,0xE98E81:0x6525,0xE98E82:0x6526,0xE98E88:0x6527,\n0xE98E8A:0x6528,0xE98E8B:0x6529,0xE98E8D:0x652A,0xE98E8F:0x652B,0xE98E92:0x652C,\n0xE98E95:0x652D,0xE98E98:0x652E,0xE98E9B:0x652F,0xE98E9E:0x6530,0xE98EA1:0x6531,\n0xE98EA3:0x6532,0xE98EA4:0x6533,0xE98EA6:0x6534,0xE98EA8:0x6535,0xE98EAB:0x6536,\n0xE98EB4:0x6537,0xE98EB5:0x6538,0xE98EB6:0x6539,0xE98EBA:0x653A,0xE98EA9:0x653B,\n0xE98F81:0x653C,0xE98F84:0x653D,0xE98F85:0x653E,0xE98F86:0x653F,0xE98F87:0x6540,\n0xE98F89:0x6541,0xE98F8A:0x6542,0xE98F8B:0x6543,0xE98F8C:0x6544,0xE98F8D:0x6545,\n0xE98F93:0x6546,0xE98F99:0x6547,0xE98F9C:0x6548,0xE98F9E:0x6549,0xE98F9F:0x654A,\n0xE98FA2:0x654B,0xE98FA6:0x654C,0xE98FA7:0x654D,0xE98FB9:0x654E,0xE98FB7:0x654F,\n0xE98FB8:0x6550,0xE98FBA:0x6551,0xE98FBB:0x6552,0xE98FBD:0x6553,0xE99081:0x6554,\n0xE99082:0x6555,0xE99084:0x6556,0xE99088:0x6557,0xE99089:0x6558,0xE9908D:0x6559,\n0xE9908E:0x655A,0xE9908F:0x655B,0xE99095:0x655C,0xE99096:0x655D,0xE99097:0x655E,\n0xE9909F:0x655F,0xE990AE:0x6560,0xE990AF:0x6561,0xE990B1:0x6562,0xE990B2:0x6563,\n0xE990B3:0x6564,0xE990B4:0x6565,0xE990BB:0x6566,0xE990BF:0x6567,0xE990BD:0x6568,\n0xE99183:0x6569,0xE99185:0x656A,0xE99188:0x656B,0xE9918A:0x656C,0xE9918C:0x656D,\n0xE99195:0x656E,0xE99199:0x656F,0xE9919C:0x6570,0xE9919F:0x6571,0xE991A1:0x6572,\n0xE991A3:0x6573,0xE991A8:0x6574,0xE991AB:0x6575,0xE991AD:0x6576,0xE991AE:0x6577,\n0xE991AF:0x6578,0xE991B1:0x6579,0xE991B2:0x657A,0xE99284:0x657B,0xE99283:0x657C,\n0xE995B8:0x657D,0xE995B9:0x657E,0xE995BE:0x6621,0xE99684:0x6622,0xE99688:0x6623,\n0xE9968C:0x6624,0xE9968D:0x6625,0xE9968E:0x6626,0xE9969D:0x6627,0xE9969E:0x6628,\n0xE9969F:0x6629,0xE996A1:0x662A,0xE996A6:0x662B,0xE996A9:0x662C,0xE996AB:0x662D,\n0xE996AC:0x662E,0xE996B4:0x662F,0xE996B6:0x6630,0xE996BA:0x6631,0xE996BD:0x6632,\n0xE996BF:0x6633,0xE99786:0x6634,0xE99788:0x6635,0xE99789:0x6636,0xE9978B:0x6637,\n0xE99790:0x6638,0xE99791:0x6639,0xE99792:0x663A,0xE99793:0x663B,0xE99799:0x663C,\n0xE9979A:0x663D,0xE9979D:0x663E,0xE9979E:0x663F,0xE9979F:0x6640,0xE997A0:0x6641,\n0xE997A4:0x6642,0xE997A6:0x6643,0xE9989D:0x6644,0xE9989E:0x6645,0xE998A2:0x6646,\n0xE998A4:0x6647,0xE998A5:0x6648,0xE998A6:0x6649,0xE998AC:0x664A,0xE998B1:0x664B,\n0xE998B3:0x664C,0xE998B7:0x664D,0xE998B8:0x664E,0xE998B9:0x664F,0xE998BA:0x6650,\n0xE998BC:0x6651,0xE998BD:0x6652,0xE99981:0x6653,0xE99992:0x6654,0xE99994:0x6655,\n0xE99996:0x6656,0xE99997:0x6657,0xE99998:0x6658,0xE999A1:0x6659,0xE999AE:0x665A,\n0xE999B4:0x665B,0xE999BB:0x665C,0xE999BC:0x665D,0xE999BE:0x665E,0xE999BF:0x665F,\n0xE99A81:0x6660,0xE99A82:0x6661,0xE99A83:0x6662,0xE99A84:0x6663,0xE99A89:0x6664,\n0xE99A91:0x6665,0xE99A96:0x6666,0xE99A9A:0x6667,0xE99A9D:0x6668,0xE99A9F:0x6669,\n0xE99AA4:0x666A,0xE99AA5:0x666B,0xE99AA6:0x666C,0xE99AA9:0x666D,0xE99AAE:0x666E,\n0xE99AAF:0x666F,0xE99AB3:0x6670,0xE99ABA:0x6671,0xE99B8A:0x6672,0xE99B92:0x6673,\n0xE5B6B2:0x6674,0xE99B98:0x6675,0xE99B9A:0x6676,0xE99B9D:0x6677,0xE99B9E:0x6678,\n0xE99B9F:0x6679,0xE99BA9:0x667A,0xE99BAF:0x667B,0xE99BB1:0x667C,0xE99BBA:0x667D,\n0xE99C82:0x667E,0xE99C83:0x6721,0xE99C85:0x6722,0xE99C89:0x6723,0xE99C9A:0x6724,\n0xE99C9B:0x6725,0xE99C9D:0x6726,0xE99CA1:0x6727,0xE99CA2:0x6728,0xE99CA3:0x6729,\n0xE99CA8:0x672A,0xE99CB1:0x672B,0xE99CB3:0x672C,0xE99D81:0x672D,0xE99D83:0x672E,\n0xE99D8A:0x672F,0xE99D8E:0x6730,0xE99D8F:0x6731,0xE99D95:0x6732,0xE99D97:0x6733,\n0xE99D98:0x6734,0xE99D9A:0x6735,0xE99D9B:0x6736,0xE99DA3:0x6737,0xE99DA7:0x6738,\n0xE99DAA:0x6739,0xE99DAE:0x673A,0xE99DB3:0x673B,0xE99DB6:0x673C,0xE99DB7:0x673D,\n0xE99DB8:0x673E,0xE99DBB:0x673F,0xE99DBD:0x6740,0xE99DBF:0x6741,0xE99E80:0x6742,\n0xE99E89:0x6743,0xE99E95:0x6744,0xE99E96:0x6745,0xE99E97:0x6746,0xE99E99:0x6747,\n0xE99E9A:0x6748,0xE99E9E:0x6749,0xE99E9F:0x674A,0xE99EA2:0x674B,0xE99EAC:0x674C,\n0xE99EAE:0x674D,0xE99EB1:0x674E,0xE99EB2:0x674F,0xE99EB5:0x6750,0xE99EB6:0x6751,\n0xE99EB8:0x6752,0xE99EB9:0x6753,0xE99EBA:0x6754,0xE99EBC:0x6755,0xE99EBE:0x6756,\n0xE99EBF:0x6757,0xE99F81:0x6758,0xE99F84:0x6759,0xE99F85:0x675A,0xE99F87:0x675B,\n0xE99F89:0x675C,0xE99F8A:0x675D,0xE99F8C:0x675E,0xE99F8D:0x675F,0xE99F8E:0x6760,\n0xE99F90:0x6761,0xE99F91:0x6762,0xE99F94:0x6763,0xE99F97:0x6764,0xE99F98:0x6765,\n0xE99F99:0x6766,0xE99F9D:0x6767,0xE99F9E:0x6768,0xE99FA0:0x6769,0xE99F9B:0x676A,\n0xE99FA1:0x676B,0xE99FA4:0x676C,0xE99FAF:0x676D,0xE99FB1:0x676E,0xE99FB4:0x676F,\n0xE99FB7:0x6770,0xE99FB8:0x6771,0xE99FBA:0x6772,0xE9A087:0x6773,0xE9A08A:0x6774,\n0xE9A099:0x6775,0xE9A08D:0x6776,0xE9A08E:0x6777,0xE9A094:0x6778,0xE9A096:0x6779,\n0xE9A09C:0x677A,0xE9A09E:0x677B,0xE9A0A0:0x677C,0xE9A0A3:0x677D,0xE9A0A6:0x677E,\n0xE9A0AB:0x6821,0xE9A0AE:0x6822,0xE9A0AF:0x6823,0xE9A0B0:0x6824,0xE9A0B2:0x6825,\n0xE9A0B3:0x6826,0xE9A0B5:0x6827,0xE9A0A5:0x6828,0xE9A0BE:0x6829,0xE9A184:0x682A,\n0xE9A187:0x682B,0xE9A18A:0x682C,0xE9A191:0x682D,0xE9A192:0x682E,0xE9A193:0x682F,\n0xE9A196:0x6830,0xE9A197:0x6831,0xE9A199:0x6832,0xE9A19A:0x6833,0xE9A1A2:0x6834,\n0xE9A1A3:0x6835,0xE9A1A5:0x6836,0xE9A1A6:0x6837,0xE9A1AA:0x6838,0xE9A1AC:0x6839,\n0xE9A2AB:0x683A,0xE9A2AD:0x683B,0xE9A2AE:0x683C,0xE9A2B0:0x683D,0xE9A2B4:0x683E,\n0xE9A2B7:0x683F,0xE9A2B8:0x6840,0xE9A2BA:0x6841,0xE9A2BB:0x6842,0xE9A2BF:0x6843,\n0xE9A382:0x6844,0xE9A385:0x6845,0xE9A388:0x6846,0xE9A38C:0x6847,0xE9A3A1:0x6848,\n0xE9A3A3:0x6849,0xE9A3A5:0x684A,0xE9A3A6:0x684B,0xE9A3A7:0x684C,0xE9A3AA:0x684D,\n0xE9A3B3:0x684E,0xE9A3B6:0x684F,0xE9A482:0x6850,0xE9A487:0x6851,0xE9A488:0x6852,\n0xE9A491:0x6853,0xE9A495:0x6854,0xE9A496:0x6855,0xE9A497:0x6856,0xE9A49A:0x6857,\n0xE9A49B:0x6858,0xE9A49C:0x6859,0xE9A49F:0x685A,0xE9A4A2:0x685B,0xE9A4A6:0x685C,\n0xE9A4A7:0x685D,0xE9A4AB:0x685E,0xE9A4B1:0x685F,0xE9A4B2:0x6860,0xE9A4B3:0x6861,\n0xE9A4B4:0x6862,0xE9A4B5:0x6863,0xE9A4B9:0x6864,0xE9A4BA:0x6865,0xE9A4BB:0x6866,\n0xE9A4BC:0x6867,0xE9A580:0x6868,0xE9A581:0x6869,0xE9A586:0x686A,0xE9A587:0x686B,\n0xE9A588:0x686C,0xE9A58D:0x686D,0xE9A58E:0x686E,0xE9A594:0x686F,0xE9A598:0x6870,\n0xE9A599:0x6871,0xE9A59B:0x6872,0xE9A59C:0x6873,0xE9A59E:0x6874,0xE9A59F:0x6875,\n0xE9A5A0:0x6876,0xE9A69B:0x6877,0xE9A69D:0x6878,0xE9A69F:0x6879,0xE9A6A6:0x687A,\n0xE9A6B0:0x687B,0xE9A6B1:0x687C,0xE9A6B2:0x687D,0xE9A6B5:0x687E,0xE9A6B9:0x6921,\n0xE9A6BA:0x6922,0xE9A6BD:0x6923,0xE9A6BF:0x6924,0xE9A783:0x6925,0xE9A789:0x6926,\n0xE9A793:0x6927,0xE9A794:0x6928,0xE9A799:0x6929,0xE9A79A:0x692A,0xE9A79C:0x692B,\n0xE9A79E:0x692C,0xE9A7A7:0x692D,0xE9A7AA:0x692E,0xE9A7AB:0x692F,0xE9A7AC:0x6930,\n0xE9A7B0:0x6931,0xE9A7B4:0x6932,0xE9A7B5:0x6933,0xE9A7B9:0x6934,0xE9A7BD:0x6935,\n0xE9A7BE:0x6936,0xE9A882:0x6937,0xE9A883:0x6938,0xE9A884:0x6939,0xE9A88B:0x693A,\n0xE9A88C:0x693B,0xE9A890:0x693C,0xE9A891:0x693D,0xE9A896:0x693E,0xE9A89E:0x693F,\n0xE9A8A0:0x6940,0xE9A8A2:0x6941,0xE9A8A3:0x6942,0xE9A8A4:0x6943,0xE9A8A7:0x6944,\n0xE9A8AD:0x6945,0xE9A8AE:0x6946,0xE9A8B3:0x6947,0xE9A8B5:0x6948,0xE9A8B6:0x6949,\n0xE9A8B8:0x694A,0xE9A987:0x694B,0xE9A981:0x694C,0xE9A984:0x694D,0xE9A98A:0x694E,\n0xE9A98B:0x694F,0xE9A98C:0x6950,0xE9A98E:0x6951,0xE9A991:0x6952,0xE9A994:0x6953,\n0xE9A996:0x6954,0xE9A99D:0x6955,0xE9AAAA:0x6956,0xE9AAAC:0x6957,0xE9AAAE:0x6958,\n0xE9AAAF:0x6959,0xE9AAB2:0x695A,0xE9AAB4:0x695B,0xE9AAB5:0x695C,0xE9AAB6:0x695D,\n0xE9AAB9:0x695E,0xE9AABB:0x695F,0xE9AABE:0x6960,0xE9AABF:0x6961,0xE9AB81:0x6962,\n0xE9AB83:0x6963,0xE9AB86:0x6964,0xE9AB88:0x6965,0xE9AB8E:0x6966,0xE9AB90:0x6967,\n0xE9AB92:0x6968,0xE9AB95:0x6969,0xE9AB96:0x696A,0xE9AB97:0x696B,0xE9AB9B:0x696C,\n0xE9AB9C:0x696D,0xE9ABA0:0x696E,0xE9ABA4:0x696F,0xE9ABA5:0x6970,0xE9ABA7:0x6971,\n0xE9ABA9:0x6972,0xE9ABAC:0x6973,0xE9ABB2:0x6974,0xE9ABB3:0x6975,0xE9ABB5:0x6976,\n0xE9ABB9:0x6977,0xE9ABBA:0x6978,0xE9ABBD:0x6979,0xE9ABBF:0x697A,0xE9AC80:0x697B,\n0xE9AC81:0x697C,0xE9AC82:0x697D,0xE9AC83:0x697E,0xE9AC84:0x6A21,0xE9AC85:0x6A22,\n0xE9AC88:0x6A23,0xE9AC89:0x6A24,0xE9AC8B:0x6A25,0xE9AC8C:0x6A26,0xE9AC8D:0x6A27,\n0xE9AC8E:0x6A28,0xE9AC90:0x6A29,0xE9AC92:0x6A2A,0xE9AC96:0x6A2B,0xE9AC99:0x6A2C,\n0xE9AC9B:0x6A2D,0xE9AC9C:0x6A2E,0xE9ACA0:0x6A2F,0xE9ACA6:0x6A30,0xE9ACAB:0x6A31,\n0xE9ACAD:0x6A32,0xE9ACB3:0x6A33,0xE9ACB4:0x6A34,0xE9ACB5:0x6A35,0xE9ACB7:0x6A36,\n0xE9ACB9:0x6A37,0xE9ACBA:0x6A38,0xE9ACBD:0x6A39,0xE9AD88:0x6A3A,0xE9AD8B:0x6A3B,\n0xE9AD8C:0x6A3C,0xE9AD95:0x6A3D,0xE9AD96:0x6A3E,0xE9AD97:0x6A3F,0xE9AD9B:0x6A40,\n0xE9AD9E:0x6A41,0xE9ADA1:0x6A42,0xE9ADA3:0x6A43,0xE9ADA5:0x6A44,0xE9ADA6:0x6A45,\n0xE9ADA8:0x6A46,0xE9ADAA:0x6A47,0xE9ADAB:0x6A48,0xE9ADAC:0x6A49,0xE9ADAD:0x6A4A,\n0xE9ADAE:0x6A4B,0xE9ADB3:0x6A4C,0xE9ADB5:0x6A4D,0xE9ADB7:0x6A4E,0xE9ADB8:0x6A4F,\n0xE9ADB9:0x6A50,0xE9ADBF:0x6A51,0xE9AE80:0x6A52,0xE9AE84:0x6A53,0xE9AE85:0x6A54,\n0xE9AE86:0x6A55,0xE9AE87:0x6A56,0xE9AE89:0x6A57,0xE9AE8A:0x6A58,0xE9AE8B:0x6A59,\n0xE9AE8D:0x6A5A,0xE9AE8F:0x6A5B,0xE9AE90:0x6A5C,0xE9AE94:0x6A5D,0xE9AE9A:0x6A5E,\n0xE9AE9D:0x6A5F,0xE9AE9E:0x6A60,0xE9AEA6:0x6A61,0xE9AEA7:0x6A62,0xE9AEA9:0x6A63,\n0xE9AEAC:0x6A64,0xE9AEB0:0x6A65,0xE9AEB1:0x6A66,0xE9AEB2:0x6A67,0xE9AEB7:0x6A68,\n0xE9AEB8:0x6A69,0xE9AEBB:0x6A6A,0xE9AEBC:0x6A6B,0xE9AEBE:0x6A6C,0xE9AEBF:0x6A6D,\n0xE9AF81:0x6A6E,0xE9AF87:0x6A6F,0xE9AF88:0x6A70,0xE9AF8E:0x6A71,0xE9AF90:0x6A72,\n0xE9AF97:0x6A73,0xE9AF98:0x6A74,0xE9AF9D:0x6A75,0xE9AF9F:0x6A76,0xE9AFA5:0x6A77,\n0xE9AFA7:0x6A78,0xE9AFAA:0x6A79,0xE9AFAB:0x6A7A,0xE9AFAF:0x6A7B,0xE9AFB3:0x6A7C,\n0xE9AFB7:0x6A7D,0xE9AFB8:0x6A7E,0xE9AFB9:0x6B21,0xE9AFBA:0x6B22,0xE9AFBD:0x6B23,\n0xE9AFBF:0x6B24,0xE9B080:0x6B25,0xE9B082:0x6B26,0xE9B08B:0x6B27,0xE9B08F:0x6B28,\n0xE9B091:0x6B29,0xE9B096:0x6B2A,0xE9B098:0x6B2B,0xE9B099:0x6B2C,0xE9B09A:0x6B2D,\n0xE9B09C:0x6B2E,0xE9B09E:0x6B2F,0xE9B0A2:0x6B30,0xE9B0A3:0x6B31,0xE9B0A6:0x6B32,\n0xE9B0A7:0x6B33,0xE9B0A8:0x6B34,0xE9B0A9:0x6B35,0xE9B0AA:0x6B36,0xE9B0B1:0x6B37,\n0xE9B0B5:0x6B38,0xE9B0B6:0x6B39,0xE9B0B7:0x6B3A,0xE9B0BD:0x6B3B,0xE9B181:0x6B3C,\n0xE9B183:0x6B3D,0xE9B184:0x6B3E,0xE9B185:0x6B3F,0xE9B189:0x6B40,0xE9B18A:0x6B41,\n0xE9B18E:0x6B42,0xE9B18F:0x6B43,0xE9B190:0x6B44,0xE9B193:0x6B45,0xE9B194:0x6B46,\n0xE9B196:0x6B47,0xE9B198:0x6B48,0xE9B19B:0x6B49,0xE9B19D:0x6B4A,0xE9B19E:0x6B4B,\n0xE9B19F:0x6B4C,0xE9B1A3:0x6B4D,0xE9B1A9:0x6B4E,0xE9B1AA:0x6B4F,0xE9B19C:0x6B50,\n0xE9B1AB:0x6B51,0xE9B1A8:0x6B52,0xE9B1AE:0x6B53,0xE9B1B0:0x6B54,0xE9B1B2:0x6B55,\n0xE9B1B5:0x6B56,0xE9B1B7:0x6B57,0xE9B1BB:0x6B58,0xE9B3A6:0x6B59,0xE9B3B2:0x6B5A,\n0xE9B3B7:0x6B5B,0xE9B3B9:0x6B5C,0xE9B48B:0x6B5D,0xE9B482:0x6B5E,0xE9B491:0x6B5F,\n0xE9B497:0x6B60,0xE9B498:0x6B61,0xE9B49C:0x6B62,0xE9B49D:0x6B63,0xE9B49E:0x6B64,\n0xE9B4AF:0x6B65,0xE9B4B0:0x6B66,0xE9B4B2:0x6B67,0xE9B4B3:0x6B68,0xE9B4B4:0x6B69,\n0xE9B4BA:0x6B6A,0xE9B4BC:0x6B6B,0xE9B585:0x6B6C,0xE9B4BD:0x6B6D,0xE9B582:0x6B6E,\n0xE9B583:0x6B6F,0xE9B587:0x6B70,0xE9B58A:0x6B71,0xE9B593:0x6B72,0xE9B594:0x6B73,\n0xE9B59F:0x6B74,0xE9B5A3:0x6B75,0xE9B5A2:0x6B76,0xE9B5A5:0x6B77,0xE9B5A9:0x6B78,\n0xE9B5AA:0x6B79,0xE9B5AB:0x6B7A,0xE9B5B0:0x6B7B,0xE9B5B6:0x6B7C,0xE9B5B7:0x6B7D,\n0xE9B5BB:0x6B7E,0xE9B5BC:0x6C21,0xE9B5BE:0x6C22,0xE9B683:0x6C23,0xE9B684:0x6C24,\n0xE9B686:0x6C25,0xE9B68A:0x6C26,0xE9B68D:0x6C27,0xE9B68E:0x6C28,0xE9B692:0x6C29,\n0xE9B693:0x6C2A,0xE9B695:0x6C2B,0xE9B696:0x6C2C,0xE9B697:0x6C2D,0xE9B698:0x6C2E,\n0xE9B6A1:0x6C2F,0xE9B6AA:0x6C30,0xE9B6AC:0x6C31,0xE9B6AE:0x6C32,0xE9B6B1:0x6C33,\n0xE9B6B5:0x6C34,0xE9B6B9:0x6C35,0xE9B6BC:0x6C36,0xE9B6BF:0x6C37,0xE9B783:0x6C38,\n0xE9B787:0x6C39,0xE9B789:0x6C3A,0xE9B78A:0x6C3B,0xE9B794:0x6C3C,0xE9B795:0x6C3D,\n0xE9B796:0x6C3E,0xE9B797:0x6C3F,0xE9B79A:0x6C40,0xE9B79E:0x6C41,0xE9B79F:0x6C42,\n0xE9B7A0:0x6C43,0xE9B7A5:0x6C44,0xE9B7A7:0x6C45,0xE9B7A9:0x6C46,0xE9B7AB:0x6C47,\n0xE9B7AE:0x6C48,0xE9B7B0:0x6C49,0xE9B7B3:0x6C4A,0xE9B7B4:0x6C4B,0xE9B7BE:0x6C4C,\n0xE9B88A:0x6C4D,0xE9B882:0x6C4E,0xE9B887:0x6C4F,0xE9B88E:0x6C50,0xE9B890:0x6C51,\n0xE9B891:0x6C52,0xE9B892:0x6C53,0xE9B895:0x6C54,0xE9B896:0x6C55,0xE9B899:0x6C56,\n0xE9B89C:0x6C57,0xE9B89D:0x6C58,0xE9B9BA:0x6C59,0xE9B9BB:0x6C5A,0xE9B9BC:0x6C5B,\n0xE9BA80:0x6C5C,0xE9BA82:0x6C5D,0xE9BA83:0x6C5E,0xE9BA84:0x6C5F,0xE9BA85:0x6C60,\n0xE9BA87:0x6C61,0xE9BA8E:0x6C62,0xE9BA8F:0x6C63,0xE9BA96:0x6C64,0xE9BA98:0x6C65,\n0xE9BA9B:0x6C66,0xE9BA9E:0x6C67,0xE9BAA4:0x6C68,0xE9BAA8:0x6C69,0xE9BAAC:0x6C6A,\n0xE9BAAE:0x6C6B,0xE9BAAF:0x6C6C,0xE9BAB0:0x6C6D,0xE9BAB3:0x6C6E,0xE9BAB4:0x6C6F,\n0xE9BAB5:0x6C70,0xE9BB86:0x6C71,0xE9BB88:0x6C72,0xE9BB8B:0x6C73,0xE9BB95:0x6C74,\n0xE9BB9F:0x6C75,0xE9BBA4:0x6C76,0xE9BBA7:0x6C77,0xE9BBAC:0x6C78,0xE9BBAD:0x6C79,\n0xE9BBAE:0x6C7A,0xE9BBB0:0x6C7B,0xE9BBB1:0x6C7C,0xE9BBB2:0x6C7D,0xE9BBB5:0x6C7E,\n0xE9BBB8:0x6D21,0xE9BBBF:0x6D22,0xE9BC82:0x6D23,0xE9BC83:0x6D24,0xE9BC89:0x6D25,\n0xE9BC8F:0x6D26,0xE9BC90:0x6D27,0xE9BC91:0x6D28,0xE9BC92:0x6D29,0xE9BC94:0x6D2A,\n0xE9BC96:0x6D2B,0xE9BC97:0x6D2C,0xE9BC99:0x6D2D,0xE9BC9A:0x6D2E,0xE9BC9B:0x6D2F,\n0xE9BC9F:0x6D30,0xE9BCA2:0x6D31,0xE9BCA6:0x6D32,0xE9BCAA:0x6D33,0xE9BCAB:0x6D34,\n0xE9BCAF:0x6D35,0xE9BCB1:0x6D36,0xE9BCB2:0x6D37,0xE9BCB4:0x6D38,0xE9BCB7:0x6D39,\n0xE9BCB9:0x6D3A,0xE9BCBA:0x6D3B,0xE9BCBC:0x6D3C,0xE9BCBD:0x6D3D,0xE9BCBF:0x6D3E,\n0xE9BD81:0x6D3F,0xE9BD83:0x6D40,0xE9BD84:0x6D41,0xE9BD85:0x6D42,0xE9BD86:0x6D43,\n0xE9BD87:0x6D44,0xE9BD93:0x6D45,0xE9BD95:0x6D46,0xE9BD96:0x6D47,0xE9BD97:0x6D48,\n0xE9BD98:0x6D49,0xE9BD9A:0x6D4A,0xE9BD9D:0x6D4B,0xE9BD9E:0x6D4C,0xE9BDA8:0x6D4D,\n0xE9BDA9:0x6D4E,0xE9BDAD:0x6D4F,0xE9BDAE:0x6D50,0xE9BDAF:0x6D51,0xE9BDB0:0x6D52,\n0xE9BDB1:0x6D53,0xE9BDB3:0x6D54,0xE9BDB5:0x6D55,0xE9BDBA:0x6D56,0xE9BDBD:0x6D57,\n0xE9BE8F:0x6D58,0xE9BE90:0x6D59,0xE9BE91:0x6D5A,0xE9BE92:0x6D5B,0xE9BE94:0x6D5C,\n0xE9BE96:0x6D5D,0xE9BE97:0x6D5E,0xE9BE9E:0x6D5F,0xE9BEA1:0x6D60,0xE9BEA2:0x6D61,\n0xE9BEA3:0x6D62,0xE9BEA5:0x6D63,\n\n//FIXME: mojibake\n0xE3809C:0x2141\n};\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/encoding-japanese/src/utf8-to-jisx0212-table.js?");

/***/ }),

/***/ "../node_modules/encoding-japanese/src/util.js":
/*!*****************************************************!*\
  !*** ../node_modules/encoding-japanese/src/util.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var config = __webpack_require__(/*! ./config */ \"../node_modules/encoding-japanese/src/config.js\");\nvar fromCharCode = String.fromCharCode;\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\nfunction isObject(x) {\n  var type = typeof x;\n  return type === 'function' || type === 'object' && !!x;\n}\nexports.isObject = isObject;\n\n\nfunction isArray(x) {\n  return Array.isArray ? Array.isArray(x) : toString.call(x) === '[object Array]';\n}\nexports.isArray = isArray;\n\n\nfunction isString(x) {\n  return typeof x === 'string' || toString.call(x) === '[object String]';\n}\nexports.isString = isString;\n\n\nfunction getKeys(object) {\n  if (Object.keys) {\n    return Object.keys(object);\n  }\n\n  var keys = [];\n  for (var key in object) {\n    if (hasOwnProperty.call(object, key)) {\n      keys[keys.length] = key;\n    }\n  }\n\n  return keys;\n}\nexports.getKeys = getKeys;\n\n\nfunction createBuffer(bits, size) {\n  if (!config.HAS_TYPED) {\n    return new Array(size);\n  }\n\n  switch (bits) {\n    case 8: return new Uint8Array(size);\n    case 16: return new Uint16Array(size);\n  }\n}\nexports.createBuffer = createBuffer;\n\n\nfunction stringToBuffer(string) {\n  var length = string.length;\n  var buffer = createBuffer(16, length);\n\n  for (var i = 0; i < length; i++) {\n    buffer[i] = string.charCodeAt(i);\n  }\n\n  return buffer;\n}\nexports.stringToBuffer = stringToBuffer;\n\n\nfunction codeToString_fast(code) {\n  if (config.CAN_CHARCODE_APPLY && config.CAN_CHARCODE_APPLY_TYPED) {\n    var len = code && code.length;\n    if (len < config.APPLY_BUFFER_SIZE && config.APPLY_BUFFER_SIZE_OK) {\n      return fromCharCode.apply(null, code);\n    }\n\n    if (config.APPLY_BUFFER_SIZE_OK === null) {\n      try {\n        var s = fromCharCode.apply(null, code);\n        if (len > config.APPLY_BUFFER_SIZE) {\n          config.APPLY_BUFFER_SIZE_OK = true;\n        }\n        return s;\n      } catch (e) {\n        // Ignore RangeError: arguments too large\n        config.APPLY_BUFFER_SIZE_OK = false;\n      }\n    }\n  }\n\n  return codeToString_chunked(code);\n}\nexports.codeToString_fast = codeToString_fast;\n\n\nfunction codeToString_chunked(code) {\n  var string = '';\n  var length = code && code.length;\n  var i = 0;\n  var sub;\n\n  while (i < length) {\n    if (code.subarray) {\n      sub = code.subarray(i, i + config.APPLY_BUFFER_SIZE);\n    } else {\n      sub = code.slice(i, i + config.APPLY_BUFFER_SIZE);\n    }\n    i += config.APPLY_BUFFER_SIZE;\n\n    if (config.APPLY_BUFFER_SIZE_OK) {\n      string += fromCharCode.apply(null, sub);\n      continue;\n    }\n\n    if (config.APPLY_BUFFER_SIZE_OK === null) {\n      try {\n        string += fromCharCode.apply(null, sub);\n        if (sub.length > config.APPLY_BUFFER_SIZE) {\n          config.APPLY_BUFFER_SIZE_OK = true;\n        }\n        continue;\n      } catch (e) {\n        config.APPLY_BUFFER_SIZE_OK = false;\n      }\n    }\n\n    return codeToString_slow(code);\n  }\n\n  return string;\n}\nexports.codeToString_chunked = codeToString_chunked;\n\n\nfunction codeToString_slow(code) {\n  var string = '';\n  var length = code && code.length;\n\n  for (var i = 0; i < length; i++) {\n    string += fromCharCode(code[i]);\n  }\n\n  return string;\n}\nexports.codeToString_slow = codeToString_slow;\n\n\nfunction stringToCode(string) {\n  var code = [];\n  var len = string && string.length;\n\n  for (var i = 0; i < len; i++) {\n    code[i] = string.charCodeAt(i);\n  }\n\n  return code;\n}\nexports.stringToCode = stringToCode;\n\n\nfunction codeToBuffer(code) {\n  if (config.HAS_TYPED) {\n    // Use Uint16Array for Unicode codepoint.\n    return new Uint16Array(code);\n  } else {\n    if (isArray(code)) {\n      return code;\n    }\n  }\n\n  var length = code && code.length;\n  var buffer = [];\n\n  for (var i = 0; i < length; i++) {\n    buffer[i] = code[i];\n  }\n\n  return buffer;\n}\nexports.codeToBuffer = codeToBuffer;\n\n\nfunction bufferToCode(buffer) {\n  if (isArray(buffer)) {\n    return buffer;\n  }\n\n  return slice.call(buffer);\n}\nexports.bufferToCode = bufferToCode;\n\n\n// Base64\n/* Copyright (C) 1999 Masanao Izumo <iz@onicos.co.jp>\n * Version: 1.0\n * LastModified: Dec 25 1999\n * This library is free.  You can redistribute it and/or modify it.\n */\n// -- Masanao Izumo Copyright 1999 \"free\"\n// Modified to add support for Binary Array for Encoding.js\n\nvar base64EncodeChars = [\n  65,  66,  67,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,\n  78,  79,  80,  81,  82,  83,  84,  85,  86,  87,  88,  89,  90,\n  97,  98,  99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109,\n 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122,\n  48,  49,  50,  51,  52,  53,  54,  55,  56,  57,  43,  47\n];\n\nvar base64DecodeChars = [\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, 63,\n  52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1,\n  -1,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14,\n  15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1,\n  -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n  41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -1, -1, -1, -1, -1\n];\n\nvar base64EncodePadding = '='.charCodeAt(0);\n\n\nfunction base64encode(data) {\n  var out, i, len;\n  var c1, c2, c3;\n\n  len = data && data.length;\n  i = 0;\n  out = [];\n\n  while (i < len) {\n    c1 = data[i++];\n    if (i == len) {\n      out[out.length] = base64EncodeChars[c1 >> 2];\n      out[out.length] = base64EncodeChars[(c1 & 0x3) << 4];\n      out[out.length] = base64EncodePadding;\n      out[out.length] = base64EncodePadding;\n      break;\n    }\n\n    c2 = data[i++];\n    if (i == len) {\n      out[out.length] = base64EncodeChars[c1 >> 2];\n      out[out.length] = base64EncodeChars[((c1 & 0x3) << 4) | ((c2 & 0xF0) >> 4)];\n      out[out.length] = base64EncodeChars[(c2 & 0xF) << 2];\n      out[out.length] = base64EncodePadding;\n      break;\n    }\n\n    c3 = data[i++];\n    out[out.length] = base64EncodeChars[c1 >> 2];\n    out[out.length] = base64EncodeChars[((c1 & 0x3) << 4) | ((c2 & 0xF0) >> 4)];\n    out[out.length] = base64EncodeChars[((c2 & 0xF) << 2) | ((c3 & 0xC0) >> 6)];\n    out[out.length] = base64EncodeChars[c3 & 0x3F];\n  }\n\n  return codeToString_fast(out);\n}\nexports.base64encode = base64encode;\n\n\nfunction base64decode(str) {\n  var c1, c2, c3, c4;\n  var i, len, out;\n\n  len = str && str.length;\n  i = 0;\n  out = [];\n\n  while (i < len) {\n    /* c1 */\n    do {\n      c1 = base64DecodeChars[str.charCodeAt(i++) & 0xFF];\n    } while (i < len && c1 == -1);\n\n    if (c1 == -1) {\n      break;\n    }\n\n    /* c2 */\n    do {\n      c2 = base64DecodeChars[str.charCodeAt(i++) & 0xFF];\n    } while (i < len && c2 == -1);\n\n    if (c2 == -1) {\n      break;\n    }\n\n    out[out.length] = (c1 << 2) | ((c2 & 0x30) >> 4);\n\n    /* c3 */\n    do {\n      c3 = str.charCodeAt(i++) & 0xFF;\n      if (c3 == 61) {\n        return out;\n      }\n      c3 = base64DecodeChars[c3];\n    } while (i < len && c3 == -1);\n\n    if (c3 == -1) {\n      break;\n    }\n\n    out[out.length] = ((c2 & 0xF) << 4) | ((c3 & 0x3C) >> 2);\n\n    /* c4 */\n    do {\n      c4 = str.charCodeAt(i++) & 0xFF;\n      if (c4 == 61) {\n        return out;\n      }\n      c4 = base64DecodeChars[c4];\n    } while (i < len && c4 == -1);\n\n    if (c4 == -1) {\n      break;\n    }\n\n    out[out.length] = ((c3 & 0x03) << 6) | c4;\n  }\n\n  return out;\n}\nexports.base64decode = base64decode;\n\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/encoding-japanese/src/util.js?");

/***/ }),

/***/ "../node_modules/events/events.js":
/*!****************************************!*\
  !*** ../node_modules/events/events.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/events/events.js?");

/***/ }),

/***/ "../node_modules/evp_bytestokey/index.js":
/*!***********************************************!*\
  !*** ../node_modules/evp_bytestokey/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\nvar MD5 = __webpack_require__(/*! md5.js */ \"../node_modules/md5.js/index.js\")\n\n/* eslint-disable camelcase */\nfunction EVP_BytesToKey (password, salt, keyBits, ivLen) {\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, 'binary')\n  if (salt) {\n    if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, 'binary')\n    if (salt.length !== 8) throw new RangeError('salt should be Buffer with 8 byte length')\n  }\n\n  var keyLen = keyBits / 8\n  var key = Buffer.alloc(keyLen)\n  var iv = Buffer.alloc(ivLen || 0)\n  var tmp = Buffer.alloc(0)\n\n  while (keyLen > 0 || ivLen > 0) {\n    var hash = new MD5()\n    hash.update(tmp)\n    hash.update(password)\n    if (salt) hash.update(salt)\n    tmp = hash.digest()\n\n    var used = 0\n\n    if (keyLen > 0) {\n      var keyStart = key.length - keyLen\n      used = Math.min(keyLen, tmp.length)\n      tmp.copy(key, keyStart, 0, used)\n      keyLen -= used\n    }\n\n    if (used < tmp.length && ivLen > 0) {\n      var ivStart = iv.length - ivLen\n      var length = Math.min(ivLen, tmp.length - used)\n      tmp.copy(iv, ivStart, used, used + length)\n      ivLen -= length\n    }\n  }\n\n  tmp.fill(0)\n  return { key: key, iv: iv }\n}\n\nmodule.exports = EVP_BytesToKey\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/evp_bytestokey/index.js?");

/***/ }),

/***/ "../node_modules/hash-base/index.js":
/*!******************************************!*\
  !*** ../node_modules/hash-base/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\nvar Transform = __webpack_require__(/*! stream */ \"../node_modules/stream-browserify/index.js\").Transform\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\n\nfunction throwIfNotStringOrBuffer (val, prefix) {\n  if (!Buffer.isBuffer(val) && typeof val !== 'string') {\n    throw new TypeError(prefix + ' must be a string or a buffer')\n  }\n}\n\nfunction HashBase (blockSize) {\n  Transform.call(this)\n\n  this._block = Buffer.allocUnsafe(blockSize)\n  this._blockSize = blockSize\n  this._blockOffset = 0\n  this._length = [0, 0, 0, 0]\n\n  this._finalized = false\n}\n\ninherits(HashBase, Transform)\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null\n  try {\n    this.update(chunk, encoding)\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype._flush = function (callback) {\n  var error = null\n  try {\n    this.push(this.digest())\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype.update = function (data, encoding) {\n  throwIfNotStringOrBuffer(data, 'Data')\n  if (this._finalized) throw new Error('Digest already called')\n  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n  // consume data\n  var block = this._block\n  var offset = 0\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]\n    this._update()\n    this._blockOffset = 0\n  }\n  while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n  // update length\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\n    this._length[j] += carry\n    carry = (this._length[j] / 0x0100000000) | 0\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry\n  }\n\n  return this\n}\n\nHashBase.prototype._update = function () {\n  throw new Error('_update is not implemented')\n}\n\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n  this._finalized = true\n\n  var digest = this._digest()\n  if (encoding !== undefined) digest = digest.toString(encoding)\n\n  // reset state\n  this._block.fill(0)\n  this._blockOffset = 0\n  for (var i = 0; i < 4; ++i) this._length[i] = 0\n\n  return digest\n}\n\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented')\n}\n\nmodule.exports = HashBase\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/hash-base/index.js?");

/***/ }),

/***/ "../node_modules/hash.js/lib/hash.js":
/*!*******************************************!*\
  !*** ../node_modules/hash.js/lib/hash.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var hash = exports;\n\nhash.utils = __webpack_require__(/*! ./hash/utils */ \"../node_modules/hash.js/lib/hash/utils.js\");\nhash.common = __webpack_require__(/*! ./hash/common */ \"../node_modules/hash.js/lib/hash/common.js\");\nhash.sha = __webpack_require__(/*! ./hash/sha */ \"../node_modules/hash.js/lib/hash/sha.js\");\nhash.ripemd = __webpack_require__(/*! ./hash/ripemd */ \"../node_modules/hash.js/lib/hash/ripemd.js\");\nhash.hmac = __webpack_require__(/*! ./hash/hmac */ \"../node_modules/hash.js/lib/hash/hmac.js\");\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/hash.js/lib/hash.js?");

/***/ }),

/***/ "../node_modules/hash.js/lib/hash/common.js":
/*!**************************************************!*\
  !*** ../node_modules/hash.js/lib/hash/common.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"../node_modules/hash.js/lib/hash/utils.js\");\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"../node_modules/minimalistic-assert/index.js\");\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/hash.js/lib/hash/common.js?");

/***/ }),

/***/ "../node_modules/hash.js/lib/hash/hmac.js":
/*!************************************************!*\
  !*** ../node_modules/hash.js/lib/hash/hmac.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"../node_modules/hash.js/lib/hash/utils.js\");\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"../node_modules/minimalistic-assert/index.js\");\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/hash.js/lib/hash/hmac.js?");

/***/ }),

/***/ "../node_modules/hash.js/lib/hash/ripemd.js":
/*!**************************************************!*\
  !*** ../node_modules/hash.js/lib/hash/ripemd.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"../node_modules/hash.js/lib/hash/utils.js\");\nvar common = __webpack_require__(/*! ./common */ \"../node_modules/hash.js/lib/hash/common.js\");\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/hash.js/lib/hash/ripemd.js?");

/***/ }),

/***/ "../node_modules/hash.js/lib/hash/sha.js":
/*!***********************************************!*\
  !*** ../node_modules/hash.js/lib/hash/sha.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.sha1 = __webpack_require__(/*! ./sha/1 */ \"../node_modules/hash.js/lib/hash/sha/1.js\");\nexports.sha224 = __webpack_require__(/*! ./sha/224 */ \"../node_modules/hash.js/lib/hash/sha/224.js\");\nexports.sha256 = __webpack_require__(/*! ./sha/256 */ \"../node_modules/hash.js/lib/hash/sha/256.js\");\nexports.sha384 = __webpack_require__(/*! ./sha/384 */ \"../node_modules/hash.js/lib/hash/sha/384.js\");\nexports.sha512 = __webpack_require__(/*! ./sha/512 */ \"../node_modules/hash.js/lib/hash/sha/512.js\");\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/hash.js/lib/hash/sha.js?");

/***/ }),

/***/ "../node_modules/hash.js/lib/hash/sha/1.js":
/*!*************************************************!*\
  !*** ../node_modules/hash.js/lib/hash/sha/1.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"../node_modules/hash.js/lib/hash/utils.js\");\nvar common = __webpack_require__(/*! ../common */ \"../node_modules/hash.js/lib/hash/common.js\");\nvar shaCommon = __webpack_require__(/*! ./common */ \"../node_modules/hash.js/lib/hash/sha/common.js\");\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/hash.js/lib/hash/sha/1.js?");

/***/ }),

/***/ "../node_modules/hash.js/lib/hash/sha/224.js":
/*!***************************************************!*\
  !*** ../node_modules/hash.js/lib/hash/sha/224.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"../node_modules/hash.js/lib/hash/utils.js\");\nvar SHA256 = __webpack_require__(/*! ./256 */ \"../node_modules/hash.js/lib/hash/sha/256.js\");\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/hash.js/lib/hash/sha/224.js?");

/***/ }),

/***/ "../node_modules/hash.js/lib/hash/sha/256.js":
/*!***************************************************!*\
  !*** ../node_modules/hash.js/lib/hash/sha/256.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"../node_modules/hash.js/lib/hash/utils.js\");\nvar common = __webpack_require__(/*! ../common */ \"../node_modules/hash.js/lib/hash/common.js\");\nvar shaCommon = __webpack_require__(/*! ./common */ \"../node_modules/hash.js/lib/hash/sha/common.js\");\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"../node_modules/minimalistic-assert/index.js\");\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/hash.js/lib/hash/sha/256.js?");

/***/ }),

/***/ "../node_modules/hash.js/lib/hash/sha/384.js":
/*!***************************************************!*\
  !*** ../node_modules/hash.js/lib/hash/sha/384.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"../node_modules/hash.js/lib/hash/utils.js\");\n\nvar SHA512 = __webpack_require__(/*! ./512 */ \"../node_modules/hash.js/lib/hash/sha/512.js\");\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/hash.js/lib/hash/sha/384.js?");

/***/ }),

/***/ "../node_modules/hash.js/lib/hash/sha/512.js":
/*!***************************************************!*\
  !*** ../node_modules/hash.js/lib/hash/sha/512.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"../node_modules/hash.js/lib/hash/utils.js\");\nvar common = __webpack_require__(/*! ../common */ \"../node_modules/hash.js/lib/hash/common.js\");\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"../node_modules/minimalistic-assert/index.js\");\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/hash.js/lib/hash/sha/512.js?");

/***/ }),

/***/ "../node_modules/hash.js/lib/hash/sha/common.js":
/*!******************************************************!*\
  !*** ../node_modules/hash.js/lib/hash/sha/common.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"../node_modules/hash.js/lib/hash/utils.js\");\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/hash.js/lib/hash/sha/common.js?");

/***/ }),

/***/ "../node_modules/hash.js/lib/hash/utils.js":
/*!*************************************************!*\
  !*** ../node_modules/hash.js/lib/hash/utils.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"../node_modules/minimalistic-assert/index.js\");\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/hash.js/lib/hash/utils.js?");

/***/ }),

/***/ "../node_modules/hmac-drbg/lib/hmac-drbg.js":
/*!**************************************************!*\
  !*** ../node_modules/hmac-drbg/lib/hmac-drbg.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar hash = __webpack_require__(/*! hash.js */ \"../node_modules/hash.js/lib/hash.js\");\nvar utils = __webpack_require__(/*! minimalistic-crypto-utils */ \"../node_modules/minimalistic-crypto-utils/lib/utils.js\");\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"../node_modules/minimalistic-assert/index.js\");\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/hmac-drbg/lib/hmac-drbg.js?");

/***/ }),

/***/ "../node_modules/ieee754/index.js":
/*!****************************************!*\
  !*** ../node_modules/ieee754/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/ieee754/index.js?");

/***/ }),

/***/ "../node_modules/inherits/inherits_browser.js":
/*!****************************************************!*\
  !*** ../node_modules/inherits/inherits_browser.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/inherits/inherits_browser.js?");

/***/ }),

/***/ "../node_modules/isarray/index.js":
/*!****************************************!*\
  !*** ../node_modules/isarray/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/isarray/index.js?");

/***/ }),

/***/ "../node_modules/lamejs/src/js/ATH.js":
/*!********************************************!*\
  !*** ../node_modules/lamejs/src/js/ATH.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var common = __webpack_require__(/*! ./common.js */ \"../node_modules/lamejs/src/js/common.js\");\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar Encoder = __webpack_require__(/*! ./Encoder.js */ \"../node_modules/lamejs/src/js/Encoder.js\");\n\n/**\n * ATH related stuff, if something new ATH related has to be added, please plug\n * it here into the ATH.\n */\nfunction ATH() {\n    /**\n     * Method for the auto adjustment.\n     */\n    this.useAdjust = 0;\n    /**\n     * factor for tuning the (sample power) point below which adaptive threshold\n     * of hearing adjustment occurs\n     */\n    this.aaSensitivityP = 0.;\n    /**\n     * Lowering based on peak volume, 1 = no lowering.\n     */\n    this.adjust = 0.;\n    /**\n     * Limit for dynamic ATH adjust.\n     */\n    this.adjustLimit = 0.;\n    /**\n     * Determined to lower x dB each second.\n     */\n    this.decay = 0.;\n    /**\n     * Lowest ATH value.\n     */\n    this.floor = 0.;\n    /**\n     * ATH for sfbs in long blocks.\n     */\n    this.l = new_float(Encoder.SBMAX_l);\n    /**\n     * ATH for sfbs in short blocks.\n     */\n    this.s = new_float(Encoder.SBMAX_s);\n    /**\n     * ATH for partitioned sfb21 in long blocks.\n     */\n    this.psfb21 = new_float(Encoder.PSFB21);\n    /**\n     * ATH for partitioned sfb12 in short blocks.\n     */\n    this.psfb12 = new_float(Encoder.PSFB12);\n    /**\n     * ATH for long block convolution bands.\n     */\n    this.cb_l = new_float(Encoder.CBANDS);\n    /**\n     * ATH for short block convolution bands.\n     */\n    this.cb_s = new_float(Encoder.CBANDS);\n    /**\n     * Equal loudness weights (based on ATH).\n     */\n    this.eql_w = new_float(Encoder.BLKSIZE / 2);\n}\n\nmodule.exports = ATH;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/lamejs/src/js/ATH.js?");

/***/ }),

/***/ "../node_modules/lamejs/src/js/BitStream.js":
/*!**************************************************!*\
  !*** ../node_modules/lamejs/src/js/BitStream.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var common = __webpack_require__(/*! ./common.js */ \"../node_modules/lamejs/src/js/common.js\");\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar Takehiro = __webpack_require__(/*! ./Takehiro.js */ \"../node_modules/lamejs/src/js/Takehiro.js\");\nvar Tables = __webpack_require__(/*! ./Tables.js */ \"../node_modules/lamejs/src/js/Tables.js\");\nvar Encoder = __webpack_require__(/*! ./Encoder.js */ \"../node_modules/lamejs/src/js/Encoder.js\");\nvar LameInternalFlags = __webpack_require__(/*! ./LameInternalFlags.js */ \"../node_modules/lamejs/src/js/LameInternalFlags.js\");\n\nBitStream.EQ = function (a, b) {\n    return (Math.abs(a) > Math.abs(b)) ? (Math.abs((a) - (b)) <= (Math\n        .abs(a) * 1e-6))\n        : (Math.abs((a) - (b)) <= (Math.abs(b) * 1e-6));\n};\n\nBitStream.NEQ = function (a, b) {\n    return !BitStream.EQ(a, b);\n};\n\nfunction BitStream() {\n    var self = this;\n    var CRC16_POLYNOMIAL = 0x8005;\n\n    /*\n     * we work with ints, so when doing bit manipulation, we limit ourselves to\n     * MAX_LENGTH-2 just to be on the safe side\n     */\n    var MAX_LENGTH = 32;\n\n    //GainAnalysis ga;\n    //MPGLib mpg;\n    //Version ver;\n    //VBRTag vbr;\n    var ga = null;\n    var mpg = null;\n    var ver = null;\n    var vbr = null;\n\n    //public final void setModules(GainAnalysis ga, MPGLib mpg, Version ver,\n    //\tVBRTag vbr) {\n\n    this.setModules = function (_ga, _mpg, _ver, _vbr) {\n        ga = _ga;\n        mpg = _mpg;\n        ver = _ver;\n        vbr = _vbr;\n    };\n\n    /**\n     * Bit stream buffer.\n     */\n    //private byte[] buf;\n    var buf = null;\n    /**\n     * Bit counter of bit stream.\n     */\n    var totbit = 0;\n    /**\n     * Pointer to top byte in buffer.\n     */\n    var bufByteIdx = 0;\n    /**\n     * Pointer to top bit of top byte in buffer.\n     */\n    var bufBitIdx = 0;\n\n    /**\n     * compute bitsperframe and mean_bits for a layer III frame\n     */\n    this.getframebits = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var bit_rate;\n\n        /* get bitrate in kbps [?] */\n        if (gfc.bitrate_index != 0)\n            bit_rate = Tables.bitrate_table[gfp.version][gfc.bitrate_index];\n        else\n            bit_rate = gfp.brate;\n        assert(8 <= bit_rate && bit_rate <= 640);\n\n        /* main encoding routine toggles padding on and off */\n        /* one Layer3 Slot consists of 8 bits */\n        var bytes = 0 | (gfp.version + 1) * 72000 * bit_rate / gfp.out_samplerate + gfc.padding;\n        return 8 * bytes;\n    };\n\n    function putheader_bits(gfc) {\n        System.arraycopy(gfc.header[gfc.w_ptr].buf, 0, buf, bufByteIdx, gfc.sideinfo_len);\n        bufByteIdx += gfc.sideinfo_len;\n        totbit += gfc.sideinfo_len * 8;\n        gfc.w_ptr = (gfc.w_ptr + 1) & (LameInternalFlags.MAX_HEADER_BUF - 1);\n    }\n\n    /**\n     * write j bits into the bit stream\n     */\n    function putbits2(gfc, val, j) {\n        assert(j < MAX_LENGTH - 2);\n\n        while (j > 0) {\n            var k;\n            if (bufBitIdx == 0) {\n                bufBitIdx = 8;\n                bufByteIdx++;\n                assert(bufByteIdx < Lame.LAME_MAXMP3BUFFER);\n                assert(gfc.header[gfc.w_ptr].write_timing >= totbit);\n                if (gfc.header[gfc.w_ptr].write_timing == totbit) {\n                    putheader_bits(gfc);\n                }\n                buf[bufByteIdx] = 0;\n            }\n\n            k = Math.min(j, bufBitIdx);\n            j -= k;\n\n            bufBitIdx -= k;\n\n            assert(j < MAX_LENGTH);\n            /* 32 too large on 32 bit machines */\n            assert(bufBitIdx < MAX_LENGTH);\n\n            buf[bufByteIdx] |= ((val >> j) << bufBitIdx);\n            totbit += k;\n        }\n    }\n\n    /**\n     * write j bits into the bit stream, ignoring frame headers\n     */\n    function putbits_noheaders(gfc, val, j) {\n        assert(j < MAX_LENGTH - 2);\n\n        while (j > 0) {\n            var k;\n            if (bufBitIdx == 0) {\n                bufBitIdx = 8;\n                bufByteIdx++;\n                assert(bufByteIdx < Lame.LAME_MAXMP3BUFFER);\n                buf[bufByteIdx] = 0;\n            }\n\n            k = Math.min(j, bufBitIdx);\n            j -= k;\n\n            bufBitIdx -= k;\n\n            assert(j < MAX_LENGTH);\n            /* 32 too large on 32 bit machines */\n            assert(bufBitIdx < MAX_LENGTH);\n\n            buf[bufByteIdx] |= ((val >> j) << bufBitIdx);\n            totbit += k;\n        }\n    }\n\n    /**\n     * Some combinations of bitrate, Fs, and stereo make it impossible to stuff\n     * out a frame using just main_data, due to the limited number of bits to\n     * indicate main_data_length. In these situations, we put stuffing bits into\n     * the ancillary data...\n     */\n    function drain_into_ancillary(gfp, remainingBits) {\n        var gfc = gfp.internal_flags;\n        var i;\n        assert(remainingBits >= 0);\n\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x4c, 8);\n            remainingBits -= 8;\n        }\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x41, 8);\n            remainingBits -= 8;\n        }\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x4d, 8);\n            remainingBits -= 8;\n        }\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x45, 8);\n            remainingBits -= 8;\n        }\n\n        if (remainingBits >= 32) {\n            var version = ver.getLameShortVersion();\n            if (remainingBits >= 32)\n                for (i = 0; i < version.length && remainingBits >= 8; ++i) {\n                    remainingBits -= 8;\n                    putbits2(gfc, version.charAt(i), 8);\n                }\n        }\n\n        for (; remainingBits >= 1; remainingBits -= 1) {\n            putbits2(gfc, gfc.ancillary_flag, 1);\n            gfc.ancillary_flag ^= (!gfp.disable_reservoir ? 1 : 0);\n        }\n\n        assert(remainingBits == 0);\n\n    }\n\n    /**\n     * write N bits into the header\n     */\n    function writeheader(gfc, val, j) {\n        var ptr = gfc.header[gfc.h_ptr].ptr;\n\n        while (j > 0) {\n            var k = Math.min(j, 8 - (ptr & 7));\n            j -= k;\n            assert(j < MAX_LENGTH);\n            /* >> 32 too large for 32 bit machines */\n\n            gfc.header[gfc.h_ptr].buf[ptr >> 3] |= ((val >> j)) << (8 - (ptr & 7) - k);\n            ptr += k;\n        }\n        gfc.header[gfc.h_ptr].ptr = ptr;\n    }\n\n    function CRC_update(value, crc) {\n        value <<= 8;\n        for (var i = 0; i < 8; i++) {\n            value <<= 1;\n            crc <<= 1;\n\n            if ((((crc ^ value) & 0x10000) != 0))\n                crc ^= CRC16_POLYNOMIAL;\n        }\n        return crc;\n    }\n\n    this.CRC_writeheader = function (gfc, header) {\n        var crc = 0xffff;\n        /* (jo) init crc16 for error_protection */\n\n        crc = CRC_update(header[2] & 0xff, crc);\n        crc = CRC_update(header[3] & 0xff, crc);\n        for (var i = 6; i < gfc.sideinfo_len; i++) {\n            crc = CRC_update(header[i] & 0xff, crc);\n        }\n\n        header[4] = (byte)(crc >> 8);\n        header[5] = (byte)(crc & 255);\n    };\n\n    function encodeSideInfo2(gfp, bitsPerFrame) {\n        var gfc = gfp.internal_flags;\n        var l3_side;\n        var gr, ch;\n\n        l3_side = gfc.l3_side;\n        gfc.header[gfc.h_ptr].ptr = 0;\n        Arrays.fill(gfc.header[gfc.h_ptr].buf, 0, gfc.sideinfo_len, 0);\n        if (gfp.out_samplerate < 16000)\n            writeheader(gfc, 0xffe, 12);\n        else\n            writeheader(gfc, 0xfff, 12);\n        writeheader(gfc, (gfp.version), 1);\n        writeheader(gfc, 4 - 3, 2);\n        writeheader(gfc, (!gfp.error_protection ? 1 : 0), 1);\n        writeheader(gfc, (gfc.bitrate_index), 4);\n        writeheader(gfc, (gfc.samplerate_index), 2);\n        writeheader(gfc, (gfc.padding), 1);\n        writeheader(gfc, (gfp.extension), 1);\n        writeheader(gfc, (gfp.mode.ordinal()), 2);\n        writeheader(gfc, (gfc.mode_ext), 2);\n        writeheader(gfc, (gfp.copyright), 1);\n        writeheader(gfc, (gfp.original), 1);\n        writeheader(gfc, (gfp.emphasis), 2);\n        if (gfp.error_protection) {\n            writeheader(gfc, 0, 16);\n            /* dummy */\n        }\n\n        if (gfp.version == 1) {\n            /* MPEG1 */\n            assert(l3_side.main_data_begin >= 0);\n            writeheader(gfc, (l3_side.main_data_begin), 9);\n\n            if (gfc.channels_out == 2)\n                writeheader(gfc, l3_side.private_bits, 3);\n            else\n                writeheader(gfc, l3_side.private_bits, 5);\n\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var band;\n                for (band = 0; band < 4; band++) {\n                    writeheader(gfc, l3_side.scfsi[ch][band], 1);\n                }\n            }\n\n            for (gr = 0; gr < 2; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    var gi = l3_side.tt[gr][ch];\n                    writeheader(gfc, gi.part2_3_length + gi.part2_length, 12);\n                    writeheader(gfc, gi.big_values / 2, 9);\n                    writeheader(gfc, gi.global_gain, 8);\n                    writeheader(gfc, gi.scalefac_compress, 4);\n\n                    if (gi.block_type != Encoder.NORM_TYPE) {\n                        writeheader(gfc, 1, 1);\n                        /* window_switching_flag */\n                        writeheader(gfc, gi.block_type, 2);\n                        writeheader(gfc, gi.mixed_block_flag, 1);\n\n                        if (gi.table_select[0] == 14)\n                            gi.table_select[0] = 16;\n                        writeheader(gfc, gi.table_select[0], 5);\n                        if (gi.table_select[1] == 14)\n                            gi.table_select[1] = 16;\n                        writeheader(gfc, gi.table_select[1], 5);\n\n                        writeheader(gfc, gi.subblock_gain[0], 3);\n                        writeheader(gfc, gi.subblock_gain[1], 3);\n                        writeheader(gfc, gi.subblock_gain[2], 3);\n                    } else {\n                        writeheader(gfc, 0, 1);\n                        /* window_switching_flag */\n                        if (gi.table_select[0] == 14)\n                            gi.table_select[0] = 16;\n                        writeheader(gfc, gi.table_select[0], 5);\n                        if (gi.table_select[1] == 14)\n                            gi.table_select[1] = 16;\n                        writeheader(gfc, gi.table_select[1], 5);\n                        if (gi.table_select[2] == 14)\n                            gi.table_select[2] = 16;\n                        writeheader(gfc, gi.table_select[2], 5);\n\n                        assert(0 <= gi.region0_count && gi.region0_count < 16);\n                        assert(0 <= gi.region1_count && gi.region1_count < 8);\n                        writeheader(gfc, gi.region0_count, 4);\n                        writeheader(gfc, gi.region1_count, 3);\n                    }\n                    writeheader(gfc, gi.preflag, 1);\n                    writeheader(gfc, gi.scalefac_scale, 1);\n                    writeheader(gfc, gi.count1table_select, 1);\n                }\n            }\n        } else {\n            /* MPEG2 */\n            assert(l3_side.main_data_begin >= 0);\n            writeheader(gfc, (l3_side.main_data_begin), 8);\n            writeheader(gfc, l3_side.private_bits, gfc.channels_out);\n\n            gr = 0;\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var gi = l3_side.tt[gr][ch];\n                writeheader(gfc, gi.part2_3_length + gi.part2_length, 12);\n                writeheader(gfc, gi.big_values / 2, 9);\n                writeheader(gfc, gi.global_gain, 8);\n                writeheader(gfc, gi.scalefac_compress, 9);\n\n                if (gi.block_type != Encoder.NORM_TYPE) {\n                    writeheader(gfc, 1, 1);\n                    /* window_switching_flag */\n                    writeheader(gfc, gi.block_type, 2);\n                    writeheader(gfc, gi.mixed_block_flag, 1);\n\n                    if (gi.table_select[0] == 14)\n                        gi.table_select[0] = 16;\n                    writeheader(gfc, gi.table_select[0], 5);\n                    if (gi.table_select[1] == 14)\n                        gi.table_select[1] = 16;\n                    writeheader(gfc, gi.table_select[1], 5);\n\n                    writeheader(gfc, gi.subblock_gain[0], 3);\n                    writeheader(gfc, gi.subblock_gain[1], 3);\n                    writeheader(gfc, gi.subblock_gain[2], 3);\n                } else {\n                    writeheader(gfc, 0, 1);\n                    /* window_switching_flag */\n                    if (gi.table_select[0] == 14)\n                        gi.table_select[0] = 16;\n                    writeheader(gfc, gi.table_select[0], 5);\n                    if (gi.table_select[1] == 14)\n                        gi.table_select[1] = 16;\n                    writeheader(gfc, gi.table_select[1], 5);\n                    if (gi.table_select[2] == 14)\n                        gi.table_select[2] = 16;\n                    writeheader(gfc, gi.table_select[2], 5);\n\n                    assert(0 <= gi.region0_count && gi.region0_count < 16);\n                    assert(0 <= gi.region1_count && gi.region1_count < 8);\n                    writeheader(gfc, gi.region0_count, 4);\n                    writeheader(gfc, gi.region1_count, 3);\n                }\n\n                writeheader(gfc, gi.scalefac_scale, 1);\n                writeheader(gfc, gi.count1table_select, 1);\n            }\n        }\n\n        if (gfp.error_protection) {\n            /* (jo) error_protection: add crc16 information to header */\n            CRC_writeheader(gfc, gfc.header[gfc.h_ptr].buf);\n        }\n\n        {\n            var old = gfc.h_ptr;\n            assert(gfc.header[old].ptr == gfc.sideinfo_len * 8);\n\n            gfc.h_ptr = (old + 1) & (LameInternalFlags.MAX_HEADER_BUF - 1);\n            gfc.header[gfc.h_ptr].write_timing = gfc.header[old].write_timing\n                + bitsPerFrame;\n\n            if (gfc.h_ptr == gfc.w_ptr) {\n                /* yikes! we are out of header buffer space */\n                System.err\n                    .println(\"Error: MAX_HEADER_BUF too small in bitstream.c \\n\");\n            }\n\n        }\n    }\n\n    function huffman_coder_count1(gfc, gi) {\n        /* Write count1 area */\n        var h = Tables.ht[gi.count1table_select + 32];\n        var i, bits = 0;\n\n        var ix = gi.big_values;\n        var xr = gi.big_values;\n        assert(gi.count1table_select < 2);\n\n        for (i = (gi.count1 - gi.big_values) / 4; i > 0; --i) {\n            var huffbits = 0;\n            var p = 0, v;\n\n            v = gi.l3_enc[ix + 0];\n            if (v != 0) {\n                p += 8;\n                if (gi.xr[xr + 0] < 0)\n                    huffbits++;\n                assert(v <= 1);\n            }\n\n            v = gi.l3_enc[ix + 1];\n            if (v != 0) {\n                p += 4;\n                huffbits *= 2;\n                if (gi.xr[xr + 1] < 0)\n                    huffbits++;\n                assert(v <= 1);\n            }\n\n            v = gi.l3_enc[ix + 2];\n            if (v != 0) {\n                p += 2;\n                huffbits *= 2;\n                if (gi.xr[xr + 2] < 0)\n                    huffbits++;\n                assert(v <= 1);\n            }\n\n            v = gi.l3_enc[ix + 3];\n            if (v != 0) {\n                p++;\n                huffbits *= 2;\n                if (gi.xr[xr + 3] < 0)\n                    huffbits++;\n                assert(v <= 1);\n            }\n\n            ix += 4;\n            xr += 4;\n            putbits2(gfc, huffbits + h.table[p], h.hlen[p]);\n            bits += h.hlen[p];\n        }\n        return bits;\n    }\n\n    /**\n     * Implements the pseudocode of page 98 of the IS\n     */\n    function Huffmancode(gfc, tableindex, start, end, gi) {\n        var h = Tables.ht[tableindex];\n        var bits = 0;\n\n        assert(tableindex < 32);\n        if (0 == tableindex)\n            return bits;\n\n        for (var i = start; i < end; i += 2) {\n            var cbits = 0;\n            var xbits = 0;\n            var linbits = h.xlen;\n            var xlen = h.xlen;\n            var ext = 0;\n            var x1 = gi.l3_enc[i];\n            var x2 = gi.l3_enc[i + 1];\n\n            if (x1 != 0) {\n                if (gi.xr[i] < 0)\n                    ext++;\n                cbits--;\n            }\n\n            if (tableindex > 15) {\n                /* use ESC-words */\n                if (x1 > 14) {\n                    var linbits_x1 = x1 - 15;\n                    assert(linbits_x1 <= h.linmax);\n                    ext |= linbits_x1 << 1;\n                    xbits = linbits;\n                    x1 = 15;\n                }\n\n                if (x2 > 14) {\n                    var linbits_x2 = x2 - 15;\n                    assert(linbits_x2 <= h.linmax);\n                    ext <<= linbits;\n                    ext |= linbits_x2;\n                    xbits += linbits;\n                    x2 = 15;\n                }\n                xlen = 16;\n            }\n\n            if (x2 != 0) {\n                ext <<= 1;\n                if (gi.xr[i + 1] < 0)\n                    ext++;\n                cbits--;\n            }\n\n            assert((x1 | x2) < 16);\n\n            x1 = x1 * xlen + x2;\n            xbits -= cbits;\n            cbits += h.hlen[x1];\n\n            assert(cbits <= MAX_LENGTH);\n            assert(xbits <= MAX_LENGTH);\n\n            putbits2(gfc, h.table[x1], cbits);\n            putbits2(gfc, ext, xbits);\n            bits += cbits + xbits;\n        }\n        return bits;\n    }\n\n    /**\n     * Note the discussion of huffmancodebits() on pages 28 and 29 of the IS, as\n     * well as the definitions of the side information on pages 26 and 27.\n     */\n    function ShortHuffmancodebits(gfc, gi) {\n        var region1Start = 3 * gfc.scalefac_band.s[3];\n        if (region1Start > gi.big_values)\n            region1Start = gi.big_values;\n\n        /* short blocks do not have a region2 */\n        var bits = Huffmancode(gfc, gi.table_select[0], 0, region1Start, gi);\n        bits += Huffmancode(gfc, gi.table_select[1], region1Start,\n            gi.big_values, gi);\n        return bits;\n    }\n\n    function LongHuffmancodebits(gfc, gi) {\n        var bigvalues, bits;\n        var region1Start, region2Start;\n\n        bigvalues = gi.big_values;\n        assert(0 <= bigvalues && bigvalues <= 576);\n\n        var i = gi.region0_count + 1;\n        assert(0 <= i);\n        assert(i < gfc.scalefac_band.l.length);\n        region1Start = gfc.scalefac_band.l[i];\n        i += gi.region1_count + 1;\n        assert(0 <= i);\n        assert(i < gfc.scalefac_band.l.length);\n        region2Start = gfc.scalefac_band.l[i];\n\n        if (region1Start > bigvalues)\n            region1Start = bigvalues;\n\n        if (region2Start > bigvalues)\n            region2Start = bigvalues;\n\n        bits = Huffmancode(gfc, gi.table_select[0], 0, region1Start, gi);\n        bits += Huffmancode(gfc, gi.table_select[1], region1Start,\n            region2Start, gi);\n        bits += Huffmancode(gfc, gi.table_select[2], region2Start, bigvalues,\n            gi);\n        return bits;\n    }\n\n    function writeMainData(gfp) {\n        var gr, ch, sfb, data_bits, tot_bits = 0;\n        var gfc = gfp.internal_flags;\n        var l3_side = gfc.l3_side;\n\n        if (gfp.version == 1) {\n            /* MPEG 1 */\n            for (gr = 0; gr < 2; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    var gi = l3_side.tt[gr][ch];\n                    var slen1 = Takehiro.slen1_tab[gi.scalefac_compress];\n                    var slen2 = Takehiro.slen2_tab[gi.scalefac_compress];\n                    data_bits = 0;\n                    for (sfb = 0; sfb < gi.sfbdivide; sfb++) {\n                        if (gi.scalefac[sfb] == -1)\n                            continue;\n                        /* scfsi is used */\n                        putbits2(gfc, gi.scalefac[sfb], slen1);\n                        data_bits += slen1;\n                    }\n                    for (; sfb < gi.sfbmax; sfb++) {\n                        if (gi.scalefac[sfb] == -1)\n                            continue;\n                        /* scfsi is used */\n                        putbits2(gfc, gi.scalefac[sfb], slen2);\n                        data_bits += slen2;\n                    }\n                    assert(data_bits == gi.part2_length);\n\n                    if (gi.block_type == Encoder.SHORT_TYPE) {\n                        data_bits += ShortHuffmancodebits(gfc, gi);\n                    } else {\n                        data_bits += LongHuffmancodebits(gfc, gi);\n                    }\n                    data_bits += huffman_coder_count1(gfc, gi);\n                    /* does bitcount in quantize.c agree with actual bit count? */\n                    assert(data_bits == gi.part2_3_length + gi.part2_length);\n                    tot_bits += data_bits;\n                }\n                /* for ch */\n            }\n            /* for gr */\n        } else {\n            /* MPEG 2 */\n            gr = 0;\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var gi = l3_side.tt[gr][ch];\n                var i, sfb_partition, scale_bits = 0;\n                assert(gi.sfb_partition_table != null);\n                data_bits = 0;\n                sfb = 0;\n                sfb_partition = 0;\n\n                if (gi.block_type == Encoder.SHORT_TYPE) {\n                    for (; sfb_partition < 4; sfb_partition++) {\n                        var sfbs = gi.sfb_partition_table[sfb_partition] / 3;\n                        var slen = gi.slen[sfb_partition];\n                        for (i = 0; i < sfbs; i++, sfb++) {\n                            putbits2(gfc,\n                                Math.max(gi.scalefac[sfb * 3 + 0], 0), slen);\n                            putbits2(gfc,\n                                Math.max(gi.scalefac[sfb * 3 + 1], 0), slen);\n                            putbits2(gfc,\n                                Math.max(gi.scalefac[sfb * 3 + 2], 0), slen);\n                            scale_bits += 3 * slen;\n                        }\n                    }\n                    data_bits += ShortHuffmancodebits(gfc, gi);\n                } else {\n                    for (; sfb_partition < 4; sfb_partition++) {\n                        var sfbs = gi.sfb_partition_table[sfb_partition];\n                        var slen = gi.slen[sfb_partition];\n                        for (i = 0; i < sfbs; i++, sfb++) {\n                            putbits2(gfc, Math.max(gi.scalefac[sfb], 0), slen);\n                            scale_bits += slen;\n                        }\n                    }\n                    data_bits += LongHuffmancodebits(gfc, gi);\n                }\n                data_bits += huffman_coder_count1(gfc, gi);\n                /* does bitcount in quantize.c agree with actual bit count? */\n                assert(data_bits == gi.part2_3_length);\n                assert(scale_bits == gi.part2_length);\n                tot_bits += scale_bits + data_bits;\n            }\n            /* for ch */\n        }\n        /* for gf */\n        return tot_bits;\n    }\n\n    /* main_data */\n\n    function TotalBytes() {\n        this.total = 0;\n    }\n\n    /*\n     * compute the number of bits required to flush all mp3 frames currently in\n     * the buffer. This should be the same as the reservoir size. Only call this\n     * routine between frames - i.e. only after all headers and data have been\n     * added to the buffer by format_bitstream().\n     *\n     * Also compute total_bits_output = size of mp3 buffer (including frame\n     * headers which may not have yet been send to the mp3 buffer) + number of\n     * bits needed to flush all mp3 frames.\n     *\n     * total_bytes_output is the size of the mp3 output buffer if\n     * lame_encode_flush_nogap() was called right now.\n     */\n    function compute_flushbits(gfp, total_bytes_output) {\n        var gfc = gfp.internal_flags;\n        var flushbits, remaining_headers;\n        var bitsPerFrame;\n        var last_ptr, first_ptr;\n        first_ptr = gfc.w_ptr;\n        /* first header to add to bitstream */\n        last_ptr = gfc.h_ptr - 1;\n        /* last header to add to bitstream */\n        if (last_ptr == -1)\n            last_ptr = LameInternalFlags.MAX_HEADER_BUF - 1;\n\n        /* add this many bits to bitstream so we can flush all headers */\n        flushbits = gfc.header[last_ptr].write_timing - totbit;\n        total_bytes_output.total = flushbits;\n\n        if (flushbits >= 0) {\n            /* if flushbits >= 0, some headers have not yet been written */\n            /* reduce flushbits by the size of the headers */\n            remaining_headers = 1 + last_ptr - first_ptr;\n            if (last_ptr < first_ptr)\n                remaining_headers = 1 + last_ptr - first_ptr\n                    + LameInternalFlags.MAX_HEADER_BUF;\n            flushbits -= remaining_headers * 8 * gfc.sideinfo_len;\n        }\n\n        /*\n         * finally, add some bits so that the last frame is complete these bits\n         * are not necessary to decode the last frame, but some decoders will\n         * ignore last frame if these bits are missing\n         */\n        bitsPerFrame = self.getframebits(gfp);\n        flushbits += bitsPerFrame;\n        total_bytes_output.total += bitsPerFrame;\n        /* round up: */\n        if ((total_bytes_output.total % 8) != 0)\n            total_bytes_output.total = 1 + (total_bytes_output.total / 8);\n        else\n            total_bytes_output.total = (total_bytes_output.total / 8);\n        total_bytes_output.total += bufByteIdx + 1;\n\n        if (flushbits < 0) {\n            System.err.println(\"strange error flushing buffer ... \\n\");\n        }\n        return flushbits;\n    }\n\n    this.flush_bitstream = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var l3_side;\n        var flushbits;\n        var last_ptr = gfc.h_ptr - 1;\n        /* last header to add to bitstream */\n        if (last_ptr == -1)\n            last_ptr = LameInternalFlags.MAX_HEADER_BUF - 1;\n        l3_side = gfc.l3_side;\n\n        if ((flushbits = compute_flushbits(gfp, new TotalBytes())) < 0)\n            return;\n        drain_into_ancillary(gfp, flushbits);\n\n        /* check that the 100% of the last frame has been written to bitstream */\n        assert(gfc.header[last_ptr].write_timing + this.getframebits(gfp) == totbit);\n\n        /*\n         * we have padded out all frames with ancillary data, which is the same\n         * as filling the bitreservoir with ancillary data, so :\n         */\n        gfc.ResvSize = 0;\n        l3_side.main_data_begin = 0;\n\n        /* save the ReplayGain value */\n        if (gfc.findReplayGain) {\n            var RadioGain = ga.GetTitleGain(gfc.rgdata);\n            assert(NEQ(RadioGain, GainAnalysis.GAIN_NOT_ENOUGH_SAMPLES));\n            gfc.RadioGain = Math.floor(RadioGain * 10.0 + 0.5) | 0;\n            /* round to nearest */\n        }\n\n        /* find the gain and scale change required for no clipping */\n        if (gfc.findPeakSample) {\n            gfc.noclipGainChange = Math.ceil(Math\n                        .log10(gfc.PeakSample / 32767.0) * 20.0 * 10.0) | 0;\n            /* round up */\n\n            if (gfc.noclipGainChange > 0) {\n                /* clipping occurs */\n                if (EQ(gfp.scale, 1.0) || EQ(gfp.scale, 0.0))\n                    gfc.noclipScale = (Math\n                        .floor((32767.0 / gfc.PeakSample) * 100.0) / 100.0);\n                /* round down */\n                else {\n                    /*\n                     * the user specified his own scaling factor. We could\n                     * suggest the scaling factor of\n                     * (32767.0/gfp.PeakSample)*(gfp.scale) but it's usually\n                     * very inaccurate. So we'd rather not advice him on the\n                     * scaling factor.\n                     */\n                    gfc.noclipScale = -1;\n                }\n            } else\n            /* no clipping */\n                gfc.noclipScale = -1;\n        }\n    };\n\n    this.add_dummy_byte = function (gfp, val, n) {\n        var gfc = gfp.internal_flags;\n        var i;\n\n        while (n-- > 0) {\n            putbits_noheaders(gfc, val, 8);\n\n            for (i = 0; i < LameInternalFlags.MAX_HEADER_BUF; ++i)\n                gfc.header[i].write_timing += 8;\n        }\n    };\n\n    /**\n     * This is called after a frame of audio has been quantized and coded. It\n     * will write the encoded audio to the bitstream. Note that from a layer3\n     * encoder's perspective the bit stream is primarily a series of main_data()\n     * blocks, with header and side information inserted at the proper locations\n     * to maintain framing. (See Figure A.7 in the IS).\n     */\n    this.format_bitstream = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var l3_side;\n        l3_side = gfc.l3_side;\n\n        var bitsPerFrame = this.getframebits(gfp);\n        drain_into_ancillary(gfp, l3_side.resvDrain_pre);\n\n        encodeSideInfo2(gfp, bitsPerFrame);\n        var bits = 8 * gfc.sideinfo_len;\n        bits += writeMainData(gfp);\n        drain_into_ancillary(gfp, l3_side.resvDrain_post);\n        bits += l3_side.resvDrain_post;\n\n        l3_side.main_data_begin += (bitsPerFrame - bits) / 8;\n\n        /*\n         * compare number of bits needed to clear all buffered mp3 frames with\n         * what we think the resvsize is:\n         */\n        if (compute_flushbits(gfp, new TotalBytes()) != gfc.ResvSize) {\n            System.err.println(\"Internal buffer inconsistency. flushbits <> ResvSize\");\n        }\n\n        /*\n         * compare main_data_begin for the next frame with what we think the\n         * resvsize is:\n         */\n        if ((l3_side.main_data_begin * 8) != gfc.ResvSize) {\n            System.err.printf(\"bit reservoir error: \\n\"\n                + \"l3_side.main_data_begin: %d \\n\"\n                + \"Resvoir size:             %d \\n\"\n                + \"resv drain (post)         %d \\n\"\n                + \"resv drain (pre)          %d \\n\"\n                + \"header and sideinfo:      %d \\n\"\n                + \"data bits:                %d \\n\"\n                + \"total bits:               %d (remainder: %d) \\n\"\n                + \"bitsperframe:             %d \\n\",\n                8 * l3_side.main_data_begin, gfc.ResvSize,\n                l3_side.resvDrain_post, l3_side.resvDrain_pre,\n                8 * gfc.sideinfo_len, bits - l3_side.resvDrain_post - 8\n                * gfc.sideinfo_len, bits, bits % 8, bitsPerFrame);\n\n            System.err.println(\"This is a fatal error.  It has several possible causes:\");\n            System.err.println(\"90%%  LAME compiled with buggy version of gcc using advanced optimizations\");\n            System.err.println(\" 9%%  Your system is overclocked\");\n            System.err.println(\" 1%%  bug in LAME encoding library\");\n\n            gfc.ResvSize = l3_side.main_data_begin * 8;\n        }\n        //;\n        assert(totbit % 8 == 0);\n\n        if (totbit > 1000000000) {\n            /*\n             * to avoid totbit overflow, (at 8h encoding at 128kbs) lets reset\n             * bit counter\n             */\n            var i;\n            for (i = 0; i < LameInternalFlags.MAX_HEADER_BUF; ++i)\n                gfc.header[i].write_timing -= totbit;\n            totbit = 0;\n        }\n\n        return 0;\n    };\n\n    /**\n     * <PRE>\n     * copy data out of the internal MP3 bit buffer into a user supplied\n     *       unsigned char buffer.\n     *\n     *       mp3data=0      indicates data in buffer is an id3tags and VBR tags\n     *       mp3data=1      data is real mp3 frame data.\n     * </PRE>\n     */\n    this.copy_buffer = function (gfc, buffer, bufferPos, size, mp3data) {\n        var minimum = bufByteIdx + 1;\n        if (minimum <= 0)\n            return 0;\n        if (size != 0 && minimum > size) {\n            /* buffer is too small */\n            return -1;\n        }\n        System.arraycopy(buf, 0, buffer, bufferPos, minimum);\n        bufByteIdx = -1;\n        bufBitIdx = 0;\n\n        if (mp3data != 0) {\n            var crc = new_int(1);\n            crc[0] = gfc.nMusicCRC;\n            vbr.updateMusicCRC(crc, buffer, bufferPos, minimum);\n            gfc.nMusicCRC = crc[0];\n\n            /**\n             * sum number of bytes belonging to the mp3 stream this info will be\n             * written into the Xing/LAME header for seeking\n             */\n            if (minimum > 0) {\n                gfc.VBR_seek_table.nBytesWritten += minimum;\n            }\n\n            if (gfc.decode_on_the_fly) { /* decode the frame */\n                var pcm_buf = new_float_n([2, 1152]);\n                var mp3_in = minimum;\n                var samples_out = -1;\n                var i;\n\n                /* re-synthesis to pcm. Repeat until we get a samples_out=0 */\n                while (samples_out != 0) {\n\n                    samples_out = mpg.hip_decode1_unclipped(gfc.hip, buffer,\n                        bufferPos, mp3_in, pcm_buf[0], pcm_buf[1]);\n                    /*\n                     * samples_out = 0: need more data to decode samples_out =\n                     * -1: error. Lets assume 0 pcm output samples_out = number\n                     * of samples output\n                     */\n\n                    /*\n                     * set the lenght of the mp3 input buffer to zero, so that\n                     * in the next iteration of the loop we will be querying\n                     * mpglib about buffered data\n                     */\n                    mp3_in = 0;\n\n                    if (samples_out == -1) {\n                        /*\n                         * error decoding. Not fatal, but might screw up the\n                         * ReplayGain tag. What should we do? Ignore for now\n                         */\n                        samples_out = 0;\n                    }\n                    if (samples_out > 0) {\n                        /* process the PCM data */\n\n                        /*\n                         * this should not be possible, and indicates we have\n                         * overflown the pcm_buf buffer\n                         */\n                        assert(samples_out <= 1152);\n\n                        if (gfc.findPeakSample) {\n                            for (i = 0; i < samples_out; i++) {\n                                if (pcm_buf[0][i] > gfc.PeakSample)\n                                    gfc.PeakSample = pcm_buf[0][i];\n                                else if (-pcm_buf[0][i] > gfc.PeakSample)\n                                    gfc.PeakSample = -pcm_buf[0][i];\n                            }\n                            if (gfc.channels_out > 1)\n                                for (i = 0; i < samples_out; i++) {\n                                    if (pcm_buf[1][i] > gfc.PeakSample)\n                                        gfc.PeakSample = pcm_buf[1][i];\n                                    else if (-pcm_buf[1][i] > gfc.PeakSample)\n                                        gfc.PeakSample = -pcm_buf[1][i];\n                                }\n                        }\n\n                        if (gfc.findReplayGain)\n                            if (ga.AnalyzeSamples(gfc.rgdata, pcm_buf[0], 0,\n                                    pcm_buf[1], 0, samples_out,\n                                    gfc.channels_out) == GainAnalysis.GAIN_ANALYSIS_ERROR)\n                                return -6;\n\n                    }\n                    /* if (samples_out>0) */\n                }\n                /* while (samples_out!=0) */\n            }\n            /* if (gfc.decode_on_the_fly) */\n\n        }\n        /* if (mp3data) */\n        return minimum;\n    };\n\n    this.init_bit_stream_w = function (gfc) {\n        buf = new_byte(Lame.LAME_MAXMP3BUFFER);\n\n        gfc.h_ptr = gfc.w_ptr = 0;\n        gfc.header[gfc.h_ptr].write_timing = 0;\n        bufByteIdx = -1;\n        bufBitIdx = 0;\n        totbit = 0;\n    };\n\n    // From machine.h\n\n\n}\n\nmodule.exports = BitStream;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/lamejs/src/js/BitStream.js?");

/***/ }),

/***/ "../node_modules/lamejs/src/js/CBRNewIterationLoop.js":
/*!************************************************************!*\
  !*** ../node_modules/lamejs/src/js/CBRNewIterationLoop.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var common = __webpack_require__(/*! ./common.js */ \"../node_modules/lamejs/src/js/common.js\");\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar MeanBits = __webpack_require__(/*! ./MeanBits.js */ \"../node_modules/lamejs/src/js/MeanBits.js\");\nvar Encoder = __webpack_require__(/*! ./Encoder.js */ \"../node_modules/lamejs/src/js/Encoder.js\");\nvar L3Side = __webpack_require__(/*! ./L3Side.js */ \"../node_modules/lamejs/src/js/L3Side.js\");\nvar LameInternalFlags = __webpack_require__(/*! ./LameInternalFlags.js */ \"../node_modules/lamejs/src/js/LameInternalFlags.js\");\n\nfunction CBRNewIterationLoop(_quantize)  {\n    var quantize = _quantize;\n    this.quantize = quantize;\n\tthis.iteration_loop = function(gfp, pe, ms_ener_ratio, ratio) {\n\t\tvar gfc = gfp.internal_flags;\n        var l3_xmin = new_float(L3Side.SFBMAX);\n\t\tvar xrpow = new_float(576);\n\t\tvar targ_bits = new_int(2);\n\t\tvar mean_bits = 0, max_bits;\n\t\tvar l3_side = gfc.l3_side;\n\n\t\tvar mb = new MeanBits(mean_bits);\n\t\tthis.quantize.rv.ResvFrameBegin(gfp, mb);\n\t\tmean_bits = mb.bits;\n\n\t\t/* quantize! */\n\t\tfor (var gr = 0; gr < gfc.mode_gr; gr++) {\n\n\t\t\t/*\n\t\t\t * calculate needed bits\n\t\t\t */\n\t\t\tmax_bits = this.quantize.qupvt.on_pe(gfp, pe, targ_bits, mean_bits,\n\t\t\t\t\tgr, gr);\n\n\t\t\tif (gfc.mode_ext == Encoder.MPG_MD_MS_LR) {\n\t\t\t\tthis.quantize.ms_convert(gfc.l3_side, gr);\n\t\t\t\tthis.quantize.qupvt.reduce_side(targ_bits, ms_ener_ratio[gr],\n\t\t\t\t\t\tmean_bits, max_bits);\n\t\t\t}\n\n\t\t\tfor (var ch = 0; ch < gfc.channels_out; ch++) {\n\t\t\t\tvar adjust, masking_lower_db;\n\t\t\t\tvar cod_info = l3_side.tt[gr][ch];\n\n\t\t\t\tif (cod_info.block_type != Encoder.SHORT_TYPE) {\n\t\t\t\t\t// NORM, START or STOP type\n\t\t\t\t\tadjust = 0;\n\t\t\t\t\tmasking_lower_db = gfc.PSY.mask_adjust - adjust;\n\t\t\t\t} else {\n\t\t\t\t\tadjust = 0;\n\t\t\t\t\tmasking_lower_db = gfc.PSY.mask_adjust_short - adjust;\n\t\t\t\t}\n\t\t\t\tgfc.masking_lower =  Math.pow(10.0,\n\t\t\t\t\t\tmasking_lower_db * 0.1);\n\n\t\t\t\t/*\n\t\t\t\t * init_outer_loop sets up cod_info, scalefac and xrpow\n\t\t\t\t */\n\t\t\t\tthis.quantize.init_outer_loop(gfc, cod_info);\n\t\t\t\tif (this.quantize.init_xrpow(gfc, cod_info, xrpow)) {\n\t\t\t\t\t/*\n\t\t\t\t\t * xr contains energy we will have to encode calculate the\n\t\t\t\t\t * masking abilities find some good quantization in\n\t\t\t\t\t * outer_loop\n\t\t\t\t\t */\n\t\t\t\t\tthis.quantize.qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info,\n\t\t\t\t\t\t\tl3_xmin);\n\t\t\t\t\tthis.quantize.outer_loop(gfp, cod_info, l3_xmin, xrpow, ch,\n\t\t\t\t\t\t\ttarg_bits[ch]);\n\t\t\t\t}\n\n\t\t\t\tthis.quantize.iteration_finish_one(gfc, gr, ch);\n\t\t\t\tassert (cod_info.part2_3_length <= LameInternalFlags.MAX_BITS_PER_CHANNEL);\n\t\t\t\tassert (cod_info.part2_3_length <= targ_bits[ch]);\n\t\t\t} /* for ch */\n\t\t} /* for gr */\n\n\t\tthis.quantize.rv.ResvFrameEnd(gfc, mean_bits);\n\t}\n}\nmodule.exports = CBRNewIterationLoop;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/lamejs/src/js/CBRNewIterationLoop.js?");

/***/ }),

/***/ "../node_modules/lamejs/src/js/CalcNoiseData.js":
/*!******************************************************!*\
  !*** ../node_modules/lamejs/src/js/CalcNoiseData.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var common = __webpack_require__(/*! ./common.js */ \"../node_modules/lamejs/src/js/common.js\");\nvar new_float = common.new_float;\nvar new_int = common.new_int;\nvar assert = common.assert;\n\nfunction CalcNoiseData() {\n    this.global_gain = 0;\n    this.sfb_count1 = 0;\n    this.step = new_int(39);\n    this.noise = new_float(39);\n    this.noise_log = new_float(39);\n}\n\nmodule.exports = CalcNoiseData;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/lamejs/src/js/CalcNoiseData.js?");

/***/ }),

/***/ "../node_modules/lamejs/src/js/CalcNoiseResult.js":
/*!********************************************************!*\
  !*** ../node_modules/lamejs/src/js/CalcNoiseResult.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("//package mp3;\n\nfunction CalcNoiseResult() {\n    /**\n     * sum of quantization noise > masking\n     */\n    this.over_noise = 0.;\n    /**\n     * sum of all quantization noise\n     */\n    this.tot_noise = 0.;\n    /**\n     * max quantization noise\n     */\n    this.max_noise = 0.;\n    /**\n     * number of quantization noise > masking\n     */\n    this.over_count = 0;\n    /**\n     * SSD-like cost of distorted bands\n     */\n    this.over_SSD = 0;\n    this.bits = 0;\n}\n\nmodule.exports = CalcNoiseResult;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/lamejs/src/js/CalcNoiseResult.js?");

/***/ }),

/***/ "../node_modules/lamejs/src/js/Encoder.js":
/*!************************************************!*\
  !*** ../node_modules/lamejs/src/js/Encoder.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var common = __webpack_require__(/*! ./common.js */ \"../node_modules/lamejs/src/js/common.js\");\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\n/**\n * ENCDELAY The encoder delay.\n *\n * Minimum allowed is MDCTDELAY (see below)\n *\n * The first 96 samples will be attenuated, so using a value less than 96\n * will result in corrupt data for the first 96-ENCDELAY samples.\n *\n * suggested: 576 set to 1160 to sync with FhG.\n */\nEncoder.ENCDELAY = 576;\n/**\n * make sure there is at least one complete frame after the last frame\n * containing real data\n *\n * Using a value of 288 would be sufficient for a a very sophisticated\n * decoder that can decode granule-by-granule instead of frame by frame. But\n * lets not assume this, and assume the decoder will not decode frame N\n * unless it also has data for frame N+1\n */\nEncoder.POSTDELAY = 1152;\n\n/**\n * delay of the MDCT used in mdct.c original ISO routines had a delay of\n * 528! Takehiro's routines:\n */\nEncoder.MDCTDELAY = 48;\nEncoder.FFTOFFSET = (224 + Encoder.MDCTDELAY);\n\n/**\n * Most decoders, including the one we use, have a delay of 528 samples.\n */\nEncoder.DECDELAY = 528;\n\n/**\n * number of subbands\n */\nEncoder.SBLIMIT = 32;\n\n/**\n * parition bands bands\n */\nEncoder.CBANDS = 64;\n\n/**\n * number of critical bands/scale factor bands where masking is computed\n */\nEncoder.SBPSY_l = 21;\nEncoder.SBPSY_s = 12;\n\n/**\n * total number of scalefactor bands encoded\n */\nEncoder.SBMAX_l = 22;\nEncoder.SBMAX_s = 13;\nEncoder.PSFB21 = 6;\nEncoder.PSFB12 = 6;\n\n/**\n * FFT sizes\n */\nEncoder.BLKSIZE = 1024;\nEncoder.HBLKSIZE = (Encoder.BLKSIZE / 2 + 1);\nEncoder.BLKSIZE_s = 256;\nEncoder.HBLKSIZE_s = (Encoder.BLKSIZE_s / 2 + 1);\n\nEncoder.NORM_TYPE = 0;\nEncoder.START_TYPE = 1;\nEncoder.SHORT_TYPE = 2;\nEncoder.STOP_TYPE = 3;\n\n/**\n * <PRE>\n * Mode Extention:\n * When we are in stereo mode, there are 4 possible methods to store these\n * two channels. The stereo modes -m? are using a subset of them.\n *\n *  -ms: MPG_MD_LR_LR\n *  -mj: MPG_MD_LR_LR and MPG_MD_MS_LR\n *  -mf: MPG_MD_MS_LR\n *  -mi: all\n * </PRE>\n */\nEncoder.MPG_MD_LR_LR = 0;\nEncoder.MPG_MD_LR_I = 1;\nEncoder.MPG_MD_MS_LR = 2;\nEncoder.MPG_MD_MS_I = 3;\n\nEncoder.fircoef = [-0.0207887 * 5, -0.0378413 * 5,\n    -0.0432472 * 5, -0.031183 * 5, 7.79609e-18 * 5, 0.0467745 * 5,\n    0.10091 * 5, 0.151365 * 5, 0.187098 * 5];\n\nfunction Encoder() {\n    var NewMDCT = __webpack_require__(/*! ./NewMDCT.js */ \"../node_modules/lamejs/src/js/NewMDCT.js\");\n    var III_psy_ratio = __webpack_require__(/*! ./III_psy_ratio.js */ \"../node_modules/lamejs/src/js/III_psy_ratio.js\");\n\n    var FFTOFFSET = Encoder.FFTOFFSET;\n    var MPG_MD_MS_LR = Encoder.MPG_MD_MS_LR;\n    //BitStream bs;\n    //PsyModel psy;\n    //VBRTag vbr;\n    //QuantizePVT qupvt;\n    var bs = null;\n    this.psy = null;\n    var psy = null;\n    var vbr = null;\n    var qupvt = null;\n\n    //public final void setModules(BitStream bs, PsyModel psy, QuantizePVT qupvt,\n    //    VBRTag vbr) {\n    this.setModules = function (_bs, _psy, _qupvt, _vbr) {\n        bs = _bs;\n        this.psy = _psy;\n        psy = _psy;\n        vbr = _vbr;\n        qupvt = _qupvt;\n    };\n\n    var newMDCT = new NewMDCT();\n\n    /***********************************************************************\n     *\n     * encoder and decoder delays\n     *\n     ***********************************************************************/\n\n    /**\n     * <PRE>\n     * layer III enc->dec delay:  1056 (1057?)   (observed)\n     * layer  II enc->dec delay:   480  (481?)   (observed)\n     *\n     * polyphase 256-16             (dec or enc)        = 240\n     * mdct      256+32  (9*32)     (dec or enc)        = 288\n     * total:    512+16\n     *\n     * My guess is that delay of polyphase filterbank is actualy 240.5\n     * (there are technical reasons for this, see postings in mp3encoder).\n     * So total Encode+Decode delay = ENCDELAY + 528 + 1\n     * </PRE>\n     */\n\n\n    /**\n     * auto-adjust of ATH, useful for low volume Gabriel Bouvigne 3 feb 2001\n     *\n     * modifies some values in gfp.internal_flags.ATH (gfc.ATH)\n     */\n//private void adjust_ATH(final LameInternalFlags gfc) {\n    function adjust_ATH(gfc) {\n        var gr2_max, max_pow;\n\n        if (gfc.ATH.useAdjust == 0) {\n            gfc.ATH.adjust = 1.0;\n            /* no adjustment */\n            return;\n        }\n\n        /* jd - 2001 mar 12, 27, jun 30 */\n        /* loudness based on equal loudness curve; */\n        /* use granule with maximum combined loudness */\n        max_pow = gfc.loudness_sq[0][0];\n        gr2_max = gfc.loudness_sq[1][0];\n        if (gfc.channels_out == 2) {\n            max_pow += gfc.loudness_sq[0][1];\n            gr2_max += gfc.loudness_sq[1][1];\n        } else {\n            max_pow += max_pow;\n            gr2_max += gr2_max;\n        }\n        if (gfc.mode_gr == 2) {\n            max_pow = Math.max(max_pow, gr2_max);\n        }\n        max_pow *= 0.5;\n        /* max_pow approaches 1.0 for full band noise */\n\n        /* jd - 2001 mar 31, jun 30 */\n        /* user tuning of ATH adjustment region */\n        max_pow *= gfc.ATH.aaSensitivityP;\n\n        /*\n         * adjust ATH depending on range of maximum value\n         */\n\n        /* jd - 2001 feb27, mar12,20, jun30, jul22 */\n        /* continuous curves based on approximation */\n        /* to GB's original values. */\n        /* For an increase in approximate loudness, */\n        /* set ATH adjust to adjust_limit immediately */\n        /* after a delay of one frame. */\n        /* For a loudness decrease, reduce ATH adjust */\n        /* towards adjust_limit gradually. */\n        /* max_pow is a loudness squared or a power. */\n        if (max_pow > 0.03125) { /* ((1 - 0.000625)/ 31.98) from curve below */\n            if (gfc.ATH.adjust >= 1.0) {\n                gfc.ATH.adjust = 1.0;\n            } else {\n                /* preceding frame has lower ATH adjust; */\n                /* ascend only to the preceding adjust_limit */\n                /* in case there is leading low volume */\n                if (gfc.ATH.adjust < gfc.ATH.adjustLimit) {\n                    gfc.ATH.adjust = gfc.ATH.adjustLimit;\n                }\n            }\n            gfc.ATH.adjustLimit = 1.0;\n        } else { /* adjustment curve */\n            /* about 32 dB maximum adjust (0.000625) */\n            var adj_lim_new = 31.98 * max_pow + 0.000625;\n            if (gfc.ATH.adjust >= adj_lim_new) { /* descend gradually */\n                gfc.ATH.adjust *= adj_lim_new * 0.075 + 0.925;\n                if (gfc.ATH.adjust < adj_lim_new) { /* stop descent */\n                    gfc.ATH.adjust = adj_lim_new;\n                }\n            } else { /* ascend */\n                if (gfc.ATH.adjustLimit >= adj_lim_new) {\n                    gfc.ATH.adjust = adj_lim_new;\n                } else {\n                    /* preceding frame has lower ATH adjust; */\n                    /* ascend only to the preceding adjust_limit */\n                    if (gfc.ATH.adjust < gfc.ATH.adjustLimit) {\n                        gfc.ATH.adjust = gfc.ATH.adjustLimit;\n                    }\n                }\n            }\n            gfc.ATH.adjustLimit = adj_lim_new;\n        }\n    }\n\n    /**\n     * <PRE>\n     *  some simple statistics\n     *\n     *  bitrate index 0: free bitrate . not allowed in VBR mode\n     *  : bitrates, kbps depending on MPEG version\n     *  bitrate index 15: forbidden\n     *\n     *  mode_ext:\n     *  0:  LR\n     *  1:  LR-i\n     *  2:  MS\n     *  3:  MS-i\n     * </PRE>\n     */\n    function updateStats(gfc) {\n        var gr, ch;\n        assert(0 <= gfc.bitrate_index && gfc.bitrate_index < 16);\n        assert(0 <= gfc.mode_ext && gfc.mode_ext < 4);\n\n        /* count bitrate indices */\n        gfc.bitrate_stereoMode_Hist[gfc.bitrate_index][4]++;\n        gfc.bitrate_stereoMode_Hist[15][4]++;\n\n        /* count 'em for every mode extension in case of 2 channel encoding */\n        if (gfc.channels_out == 2) {\n            gfc.bitrate_stereoMode_Hist[gfc.bitrate_index][gfc.mode_ext]++;\n            gfc.bitrate_stereoMode_Hist[15][gfc.mode_ext]++;\n        }\n        for (gr = 0; gr < gfc.mode_gr; ++gr) {\n            for (ch = 0; ch < gfc.channels_out; ++ch) {\n                var bt = gfc.l3_side.tt[gr][ch].block_type | 0;\n                if (gfc.l3_side.tt[gr][ch].mixed_block_flag != 0)\n                    bt = 4;\n                gfc.bitrate_blockType_Hist[gfc.bitrate_index][bt]++;\n                gfc.bitrate_blockType_Hist[gfc.bitrate_index][5]++;\n                gfc.bitrate_blockType_Hist[15][bt]++;\n                gfc.bitrate_blockType_Hist[15][5]++;\n            }\n        }\n    }\n\n    function lame_encode_frame_init(gfp, inbuf) {\n        var gfc = gfp.internal_flags;\n\n        var ch, gr;\n\n        if (gfc.lame_encode_frame_init == 0) {\n            /* prime the MDCT/polyphase filterbank with a short block */\n            var i, j;\n            var primebuff0 = new_float(286 + 1152 + 576);\n            var primebuff1 = new_float(286 + 1152 + 576);\n            gfc.lame_encode_frame_init = 1;\n            for (i = 0, j = 0; i < 286 + 576 * (1 + gfc.mode_gr); ++i) {\n                if (i < 576 * gfc.mode_gr) {\n                    primebuff0[i] = 0;\n                    if (gfc.channels_out == 2)\n                        primebuff1[i] = 0;\n                } else {\n                    primebuff0[i] = inbuf[0][j];\n                    if (gfc.channels_out == 2)\n                        primebuff1[i] = inbuf[1][j];\n                    ++j;\n                }\n            }\n            /* polyphase filtering / mdct */\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    gfc.l3_side.tt[gr][ch].block_type = Encoder.SHORT_TYPE;\n                }\n            }\n            newMDCT.mdct_sub48(gfc, primebuff0, primebuff1);\n\n            /* check FFT will not use a negative starting offset */\n            assert(576 >= Encoder.FFTOFFSET);\n            /* check if we have enough data for FFT */\n            assert(gfc.mf_size >= (Encoder.BLKSIZE + gfp.framesize - Encoder.FFTOFFSET));\n            /* check if we have enough data for polyphase filterbank */\n            assert(gfc.mf_size >= (512 + gfp.framesize - 32));\n        }\n\n    }\n\n    /**\n     * <PRE>\n     * encodeframe()           Layer 3\n     *\n     * encode a single frame\n     *\n     *\n     *    lame_encode_frame()\n     *\n     *\n     *                           gr 0            gr 1\n     *    inbuf:           |--------------|--------------|--------------|\n     *\n     *\n     *    Polyphase (18 windows, each shifted 32)\n     *    gr 0:\n     *    window1          <----512---.\n     *    window18                 <----512---.\n     *\n     *    gr 1:\n     *    window1                         <----512---.\n     *    window18                                <----512---.\n     *\n     *\n     *\n     *    MDCT output:  |--------------|--------------|--------------|\n     *\n     *    FFT's                    <---------1024---------.\n     *                                             <---------1024-------.\n     *\n     *\n     *\n     *        inbuf = buffer of PCM data size=MP3 framesize\n     *        encoder acts on inbuf[ch][0], but output is delayed by MDCTDELAY\n     *        so the MDCT coefficints are from inbuf[ch][-MDCTDELAY]\n     *\n     *        psy-model FFT has a 1 granule delay, so we feed it data for the\n     *        next granule.\n     *        FFT is centered over granule:  224+576+224\n     *        So FFT starts at:   576-224-MDCTDELAY\n     *\n     *        MPEG2:  FFT ends at:  BLKSIZE+576-224-MDCTDELAY      (1328)\n     *        MPEG1:  FFT ends at:  BLKSIZE+2*576-224-MDCTDELAY    (1904)\n     *\n     *        MPEG2:  polyphase first window:  [0..511]\n     *                          18th window:   [544..1055]          (1056)\n     *        MPEG1:            36th window:   [1120..1631]         (1632)\n     *                data needed:  512+framesize-32\n     *\n     *        A close look newmdct.c shows that the polyphase filterbank\n     *        only uses data from [0..510] for each window.  Perhaps because the window\n     *        used by the filterbank is zero for the last point, so Takehiro's\n     *        code doesn't bother to compute with it.\n     *\n     *        FFT starts at 576-224-MDCTDELAY (304)  = 576-FFTOFFSET\n     *\n     * </PRE>\n     */\n\n\n    this.lame_encode_mp3_frame = function (gfp, inbuf_l, inbuf_r, mp3buf, mp3bufPos, mp3buf_size) {\n        var mp3count;\n        var masking_LR = new_array_n([2, 2]);\n        /*\n         * LR masking &\n         * energy\n         */\n        masking_LR[0][0] = new III_psy_ratio();\n        masking_LR[0][1] = new III_psy_ratio();\n        masking_LR[1][0] = new III_psy_ratio();\n        masking_LR[1][1] = new III_psy_ratio();\n        var masking_MS = new_array_n([2, 2]);\n        /* MS masking & energy */\n        masking_MS[0][0] = new III_psy_ratio();\n        masking_MS[0][1] = new III_psy_ratio();\n        masking_MS[1][0] = new III_psy_ratio();\n        masking_MS[1][1] = new III_psy_ratio();\n        //III_psy_ratio masking[][];\n        var masking;\n        /* pointer to selected maskings */\n        var inbuf = [null, null];\n        var gfc = gfp.internal_flags;\n\n        var tot_ener = new_float_n([2, 4]);\n        var ms_ener_ratio = [.5, .5];\n        var pe = [[0., 0.], [0., 0.]];\n        var pe_MS = [[0., 0.], [0., 0.]];\n\n//float[][] pe_use;\n        var pe_use;\n\n        var ch, gr;\n\n        inbuf[0] = inbuf_l;\n        inbuf[1] = inbuf_r;\n\n        if (gfc.lame_encode_frame_init == 0) {\n            /* first run? */\n            lame_encode_frame_init(gfp, inbuf);\n\n        }\n\n        /********************** padding *****************************/\n        /**\n         * <PRE>\n         * padding method as described in\n         * \"MPEG-Layer3 / Bitstream Syntax and Decoding\"\n         * by Martin Sieler, Ralph Sperschneider\n         *\n         * note: there is no padding for the very first frame\n         *\n         * Robert Hegemann 2000-06-22\n         * </PRE>\n         */\n        gfc.padding = 0;\n        if ((gfc.slot_lag -= gfc.frac_SpF) < 0) {\n            gfc.slot_lag += gfp.out_samplerate;\n            gfc.padding = 1;\n        }\n\n        /****************************************\n         * Stage 1: psychoacoustic model *\n         ****************************************/\n\n        if (gfc.psymodel != 0) {\n            /*\n             * psychoacoustic model psy model has a 1 granule (576) delay that\n             * we must compensate for (mt 6/99).\n             */\n            var ret;\n            var bufp = [null, null];\n            /* address of beginning of left & right granule */\n            var bufpPos = 0;\n            /* address of beginning of left & right granule */\n            var blocktype = new_int(2);\n\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    bufp[ch] = inbuf[ch];\n                    bufpPos = 576 + gr * 576 - Encoder.FFTOFFSET;\n                }\n                if (gfp.VBR == VbrMode.vbr_mtrh || gfp.VBR == VbrMode.vbr_mt) {\n                    ret = psy.L3psycho_anal_vbr(gfp, bufp, bufpPos, gr,\n                        masking_LR, masking_MS, pe[gr], pe_MS[gr],\n                        tot_ener[gr], blocktype);\n                } else {\n                    ret = psy.L3psycho_anal_ns(gfp, bufp, bufpPos, gr,\n                        masking_LR, masking_MS, pe[gr], pe_MS[gr],\n                        tot_ener[gr], blocktype);\n                }\n                if (ret != 0)\n                    return -4;\n\n                if (gfp.mode == MPEGMode.JOINT_STEREO) {\n                    ms_ener_ratio[gr] = tot_ener[gr][2] + tot_ener[gr][3];\n                    if (ms_ener_ratio[gr] > 0)\n                        ms_ener_ratio[gr] = tot_ener[gr][3] / ms_ener_ratio[gr];\n                }\n\n                /* block type flags */\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    var cod_info = gfc.l3_side.tt[gr][ch];\n                    cod_info.block_type = blocktype[ch];\n                    cod_info.mixed_block_flag = 0;\n                }\n            }\n        } else {\n            /* no psy model */\n            for (gr = 0; gr < gfc.mode_gr; gr++)\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    gfc.l3_side.tt[gr][ch].block_type = Encoder.NORM_TYPE;\n                    gfc.l3_side.tt[gr][ch].mixed_block_flag = 0;\n                    pe_MS[gr][ch] = pe[gr][ch] = 700;\n                }\n        }\n\n        /* auto-adjust of ATH, useful for low volume */\n        adjust_ATH(gfc);\n\n        /****************************************\n         * Stage 2: MDCT *\n         ****************************************/\n\n        /* polyphase filtering / mdct */\n        newMDCT.mdct_sub48(gfc, inbuf[0], inbuf[1]);\n\n        /****************************************\n         * Stage 3: MS/LR decision *\n         ****************************************/\n\n        /* Here will be selected MS or LR coding of the 2 stereo channels */\n        gfc.mode_ext = Encoder.MPG_MD_LR_LR;\n\n        if (gfp.force_ms) {\n            gfc.mode_ext = Encoder.MPG_MD_MS_LR;\n        } else if (gfp.mode == MPEGMode.JOINT_STEREO) {\n            /*\n             * ms_ratio = is scaled, for historical reasons, to look like a\n             * ratio of side_channel / total. 0 = signal is 100% mono .5 = L & R\n             * uncorrelated\n             */\n\n            /**\n             * <PRE>\n             * [0] and [1] are the results for the two granules in MPEG-1,\n             * in MPEG-2 it's only a faked averaging of the same value\n             * _prev is the value of the last granule of the previous frame\n             * _next is the value of the first granule of the next frame\n             * </PRE>\n             */\n\n            var sum_pe_MS = 0.;\n            var sum_pe_LR = 0.;\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    sum_pe_MS += pe_MS[gr][ch];\n                    sum_pe_LR += pe[gr][ch];\n                }\n            }\n\n            /* based on PE: M/S coding would not use much more bits than L/R */\n            if (sum_pe_MS <= 1.00 * sum_pe_LR) {\n\n                var gi0 = gfc.l3_side.tt[0];\n                var gi1 = gfc.l3_side.tt[gfc.mode_gr - 1];\n\n                if (gi0[0].block_type == gi0[1].block_type\n                    && gi1[0].block_type == gi1[1].block_type) {\n\n                    gfc.mode_ext = Encoder.MPG_MD_MS_LR;\n                }\n            }\n        }\n\n        /* bit and noise allocation */\n        if (gfc.mode_ext == MPG_MD_MS_LR) {\n            masking = masking_MS;\n            /* use MS masking */\n            pe_use = pe_MS;\n        } else {\n            masking = masking_LR;\n            /* use LR masking */\n            pe_use = pe;\n        }\n\n        /* copy data for MP3 frame analyzer */\n        if (gfp.analysis && gfc.pinfo != null) {\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    gfc.pinfo.ms_ratio[gr] = gfc.ms_ratio[gr];\n                    gfc.pinfo.ms_ener_ratio[gr] = ms_ener_ratio[gr];\n                    gfc.pinfo.blocktype[gr][ch] = gfc.l3_side.tt[gr][ch].block_type;\n                    gfc.pinfo.pe[gr][ch] = pe_use[gr][ch];\n                    System.arraycopy(gfc.l3_side.tt[gr][ch].xr, 0,\n                        gfc.pinfo.xr[gr][ch], 0, 576);\n                    /*\n                     * in psymodel, LR and MS data was stored in pinfo. switch\n                     * to MS data:\n                     */\n                    if (gfc.mode_ext == MPG_MD_MS_LR) {\n                        gfc.pinfo.ers[gr][ch] = gfc.pinfo.ers[gr][ch + 2];\n                        System.arraycopy(gfc.pinfo.energy[gr][ch + 2], 0,\n                            gfc.pinfo.energy[gr][ch], 0,\n                            gfc.pinfo.energy[gr][ch].length);\n                    }\n                }\n            }\n        }\n\n        /****************************************\n         * Stage 4: quantization loop *\n         ****************************************/\n\n        if (gfp.VBR == VbrMode.vbr_off || gfp.VBR == VbrMode.vbr_abr) {\n\n            var i;\n            var f;\n\n            for (i = 0; i < 18; i++)\n                gfc.nsPsy.pefirbuf[i] = gfc.nsPsy.pefirbuf[i + 1];\n\n            f = 0.0;\n            for (gr = 0; gr < gfc.mode_gr; gr++)\n                for (ch = 0; ch < gfc.channels_out; ch++)\n                    f += pe_use[gr][ch];\n            gfc.nsPsy.pefirbuf[18] = f;\n\n            f = gfc.nsPsy.pefirbuf[9];\n            for (i = 0; i < 9; i++)\n                f += (gfc.nsPsy.pefirbuf[i] + gfc.nsPsy.pefirbuf[18 - i])\n                    * Encoder.fircoef[i];\n\n            f = (670 * 5 * gfc.mode_gr * gfc.channels_out) / f;\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    pe_use[gr][ch] *= f;\n                }\n            }\n        }\n        gfc.iteration_loop.iteration_loop(gfp, pe_use, ms_ener_ratio, masking);\n\n        /****************************************\n         * Stage 5: bitstream formatting *\n         ****************************************/\n\n        /* write the frame to the bitstream */\n        bs.format_bitstream(gfp);\n\n        /* copy mp3 bit buffer into array */\n        mp3count = bs.copy_buffer(gfc, mp3buf, mp3bufPos, mp3buf_size, 1);\n\n        if (gfp.bWriteVbrTag)\n            vbr.addVbrFrame(gfp);\n\n        if (gfp.analysis && gfc.pinfo != null) {\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var j;\n                for (j = 0; j < FFTOFFSET; j++)\n                    gfc.pinfo.pcmdata[ch][j] = gfc.pinfo.pcmdata[ch][j\n                    + gfp.framesize];\n                for (j = FFTOFFSET; j < 1600; j++) {\n                    gfc.pinfo.pcmdata[ch][j] = inbuf[ch][j - FFTOFFSET];\n                }\n            }\n            qupvt.set_frame_pinfo(gfp, masking);\n        }\n\n        updateStats(gfc);\n\n        return mp3count;\n    }\n}\n\n\nmodule.exports = Encoder;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/lamejs/src/js/Encoder.js?");

/***/ }),

/***/ "../node_modules/lamejs/src/js/FFT.js":
/*!********************************************!*\
  !*** ../node_modules/lamejs/src/js/FFT.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var common = __webpack_require__(/*! ./common.js */ \"../node_modules/lamejs/src/js/common.js\");\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar Encoder = __webpack_require__(/*! ./Encoder.js */ \"../node_modules/lamejs/src/js/Encoder.js\");\n\nfunction FFT() {\n\n    var window = new_float(Encoder.BLKSIZE);\n    var window_s = new_float(Encoder.BLKSIZE_s / 2);\n\n    var costab = [\n        9.238795325112867e-01, 3.826834323650898e-01,\n        9.951847266721969e-01, 9.801714032956060e-02,\n        9.996988186962042e-01, 2.454122852291229e-02,\n        9.999811752826011e-01, 6.135884649154475e-03\n    ];\n\n    function fht(fz, fzPos, n) {\n        var tri = 0;\n        var k4;\n        var fi;\n        var gi;\n\n        n <<= 1;\n        /* to get BLKSIZE, because of 3DNow! ASM routine */\n        var fn = fzPos + n;\n        k4 = 4;\n        do {\n            var s1, c1;\n            var i, k1, k2, k3, kx;\n            kx = k4 >> 1;\n            k1 = k4;\n            k2 = k4 << 1;\n            k3 = k2 + k1;\n            k4 = k2 << 1;\n            fi = fzPos;\n            gi = fi + kx;\n            do {\n                var f0, f1, f2, f3;\n                f1 = fz[fi + 0] - fz[fi + k1];\n                f0 = fz[fi + 0] + fz[fi + k1];\n                f3 = fz[fi + k2] - fz[fi + k3];\n                f2 = fz[fi + k2] + fz[fi + k3];\n                fz[fi + k2] = f0 - f2;\n                fz[fi + 0] = f0 + f2;\n                fz[fi + k3] = f1 - f3;\n                fz[fi + k1] = f1 + f3;\n                f1 = fz[gi + 0] - fz[gi + k1];\n                f0 = fz[gi + 0] + fz[gi + k1];\n                f3 = (Util.SQRT2 * fz[gi + k3]);\n                f2 = (Util.SQRT2 * fz[gi + k2]);\n                fz[gi + k2] = f0 - f2;\n                fz[gi + 0] = f0 + f2;\n                fz[gi + k3] = f1 - f3;\n                fz[gi + k1] = f1 + f3;\n                gi += k4;\n                fi += k4;\n            } while (fi < fn);\n            c1 = costab[tri + 0];\n            s1 = costab[tri + 1];\n            for (i = 1; i < kx; i++) {\n                var c2, s2;\n                c2 = 1 - (2 * s1) * s1;\n                s2 = (2 * s1) * c1;\n                fi = fzPos + i;\n                gi = fzPos + k1 - i;\n                do {\n                    var a, b, g0, f0, f1, g1, f2, g2, f3, g3;\n                    b = s2 * fz[fi + k1] - c2 * fz[gi + k1];\n                    a = c2 * fz[fi + k1] + s2 * fz[gi + k1];\n                    f1 = fz[fi + 0] - a;\n                    f0 = fz[fi + 0] + a;\n                    g1 = fz[gi + 0] - b;\n                    g0 = fz[gi + 0] + b;\n                    b = s2 * fz[fi + k3] - c2 * fz[gi + k3];\n                    a = c2 * fz[fi + k3] + s2 * fz[gi + k3];\n                    f3 = fz[fi + k2] - a;\n                    f2 = fz[fi + k2] + a;\n                    g3 = fz[gi + k2] - b;\n                    g2 = fz[gi + k2] + b;\n                    b = s1 * f2 - c1 * g3;\n                    a = c1 * f2 + s1 * g3;\n                    fz[fi + k2] = f0 - a;\n                    fz[fi + 0] = f0 + a;\n                    fz[gi + k3] = g1 - b;\n                    fz[gi + k1] = g1 + b;\n                    b = c1 * g2 - s1 * f3;\n                    a = s1 * g2 + c1 * f3;\n                    fz[gi + k2] = g0 - a;\n                    fz[gi + 0] = g0 + a;\n                    fz[fi + k3] = f1 - b;\n                    fz[fi + k1] = f1 + b;\n                    gi += k4;\n                    fi += k4;\n                } while (fi < fn);\n                c2 = c1;\n                c1 = c2 * costab[tri + 0] - s1 * costab[tri + 1];\n                s1 = c2 * costab[tri + 1] + s1 * costab[tri + 0];\n            }\n            tri += 2;\n        } while (k4 < n);\n    }\n\n    var rv_tbl = [0x00, 0x80, 0x40,\n        0xc0, 0x20, 0xa0, 0x60, 0xe0, 0x10,\n        0x90, 0x50, 0xd0, 0x30, 0xb0, 0x70,\n        0xf0, 0x08, 0x88, 0x48, 0xc8, 0x28,\n        0xa8, 0x68, 0xe8, 0x18, 0x98, 0x58,\n        0xd8, 0x38, 0xb8, 0x78, 0xf8, 0x04,\n        0x84, 0x44, 0xc4, 0x24, 0xa4, 0x64,\n        0xe4, 0x14, 0x94, 0x54, 0xd4, 0x34,\n        0xb4, 0x74, 0xf4, 0x0c, 0x8c, 0x4c,\n        0xcc, 0x2c, 0xac, 0x6c, 0xec, 0x1c,\n        0x9c, 0x5c, 0xdc, 0x3c, 0xbc, 0x7c,\n        0xfc, 0x02, 0x82, 0x42, 0xc2, 0x22,\n        0xa2, 0x62, 0xe2, 0x12, 0x92, 0x52,\n        0xd2, 0x32, 0xb2, 0x72, 0xf2, 0x0a,\n        0x8a, 0x4a, 0xca, 0x2a, 0xaa, 0x6a,\n        0xea, 0x1a, 0x9a, 0x5a, 0xda, 0x3a,\n        0xba, 0x7a, 0xfa, 0x06, 0x86, 0x46,\n        0xc6, 0x26, 0xa6, 0x66, 0xe6, 0x16,\n        0x96, 0x56, 0xd6, 0x36, 0xb6, 0x76,\n        0xf6, 0x0e, 0x8e, 0x4e, 0xce, 0x2e,\n        0xae, 0x6e, 0xee, 0x1e, 0x9e, 0x5e,\n        0xde, 0x3e, 0xbe, 0x7e, 0xfe];\n\n    this.fft_short = function (gfc, x_real, chn, buffer, bufPos) {\n        for (var b = 0; b < 3; b++) {\n            var x = Encoder.BLKSIZE_s / 2;\n            var k = 0xffff & ((576 / 3) * (b + 1));\n            var j = Encoder.BLKSIZE_s / 8 - 1;\n            do {\n                var f0, f1, f2, f3, w;\n                var i = rv_tbl[j << 2] & 0xff;\n\n                f0 = window_s[i] * buffer[chn][bufPos + i + k];\n                w = window_s[0x7f - i] * buffer[chn][bufPos + i + k + 0x80];\n                f1 = f0 - w;\n                f0 = f0 + w;\n                f2 = window_s[i + 0x40] * buffer[chn][bufPos + i + k + 0x40];\n                w = window_s[0x3f - i] * buffer[chn][bufPos + i + k + 0xc0];\n                f3 = f2 - w;\n                f2 = f2 + w;\n\n                x -= 4;\n                x_real[b][x + 0] = f0 + f2;\n                x_real[b][x + 2] = f0 - f2;\n                x_real[b][x + 1] = f1 + f3;\n                x_real[b][x + 3] = f1 - f3;\n\n                f0 = window_s[i + 0x01] * buffer[chn][bufPos + i + k + 0x01];\n                w = window_s[0x7e - i] * buffer[chn][bufPos + i + k + 0x81];\n                f1 = f0 - w;\n                f0 = f0 + w;\n                f2 = window_s[i + 0x41] * buffer[chn][bufPos + i + k + 0x41];\n                w = window_s[0x3e - i] * buffer[chn][bufPos + i + k + 0xc1];\n                f3 = f2 - w;\n                f2 = f2 + w;\n\n                x_real[b][x + Encoder.BLKSIZE_s / 2 + 0] = f0 + f2;\n                x_real[b][x + Encoder.BLKSIZE_s / 2 + 2] = f0 - f2;\n                x_real[b][x + Encoder.BLKSIZE_s / 2 + 1] = f1 + f3;\n                x_real[b][x + Encoder.BLKSIZE_s / 2 + 3] = f1 - f3;\n            } while (--j >= 0);\n\n            fht(x_real[b], x, Encoder.BLKSIZE_s / 2);\n            /* BLKSIZE_s/2 because of 3DNow! ASM routine */\n            /* BLKSIZE/2 because of 3DNow! ASM routine */\n        }\n    }\n\n    this.fft_long = function (gfc, y, chn, buffer, bufPos) {\n        var jj = Encoder.BLKSIZE / 8 - 1;\n        var x = Encoder.BLKSIZE / 2;\n\n        do {\n            var f0, f1, f2, f3, w;\n            var i = rv_tbl[jj] & 0xff;\n            f0 = window[i] * buffer[chn][bufPos + i];\n            w = window[i + 0x200] * buffer[chn][bufPos + i + 0x200];\n            f1 = f0 - w;\n            f0 = f0 + w;\n            f2 = window[i + 0x100] * buffer[chn][bufPos + i + 0x100];\n            w = window[i + 0x300] * buffer[chn][bufPos + i + 0x300];\n            f3 = f2 - w;\n            f2 = f2 + w;\n\n            x -= 4;\n            y[x + 0] = f0 + f2;\n            y[x + 2] = f0 - f2;\n            y[x + 1] = f1 + f3;\n            y[x + 3] = f1 - f3;\n\n            f0 = window[i + 0x001] * buffer[chn][bufPos + i + 0x001];\n            w = window[i + 0x201] * buffer[chn][bufPos + i + 0x201];\n            f1 = f0 - w;\n            f0 = f0 + w;\n            f2 = window[i + 0x101] * buffer[chn][bufPos + i + 0x101];\n            w = window[i + 0x301] * buffer[chn][bufPos + i + 0x301];\n            f3 = f2 - w;\n            f2 = f2 + w;\n\n            y[x + Encoder.BLKSIZE / 2 + 0] = f0 + f2;\n            y[x + Encoder.BLKSIZE / 2 + 2] = f0 - f2;\n            y[x + Encoder.BLKSIZE / 2 + 1] = f1 + f3;\n            y[x + Encoder.BLKSIZE / 2 + 3] = f1 - f3;\n        } while (--jj >= 0);\n\n        fht(y, x, Encoder.BLKSIZE / 2);\n        /* BLKSIZE/2 because of 3DNow! ASM routine */\n    }\n\n    this.init_fft = function (gfc) {\n        /* The type of window used here will make no real difference, but */\n        /*\n         * in the interest of merging nspsytune stuff - switch to blackman\n         * window\n         */\n        for (var i = 0; i < Encoder.BLKSIZE; i++)\n            /* blackman window */\n            window[i] = (0.42 - 0.5 * Math.cos(2 * Math.PI * (i + .5)\n                / Encoder.BLKSIZE) + 0.08 * Math.cos(4 * Math.PI * (i + .5)\n                / Encoder.BLKSIZE));\n\n        for (var i = 0; i < Encoder.BLKSIZE_s / 2; i++)\n            window_s[i] = (0.5 * (1.0 - Math.cos(2.0 * Math.PI\n                * (i + 0.5) / Encoder.BLKSIZE_s)));\n\n    }\n\n}\n\nmodule.exports = FFT;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/lamejs/src/js/FFT.js?");

/***/ }),

/***/ "../node_modules/lamejs/src/js/GainAnalysis.js":
/*!*****************************************************!*\
  !*** ../node_modules/lamejs/src/js/GainAnalysis.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n *  ReplayGainAnalysis - analyzes input samples and give the recommended dB change\n *  Copyright (C) 2001 David Robinson and Glen Sawyer\n *  Improvements and optimizations added by Frank Klemm, and by Marcel Muller \n *\n *  This library is free software; you can redistribute it and/or\n *  modify it under the terms of the GNU Lesser General Public\n *  License as published by the Free Software Foundation; either\n *  version 2.1 of the License, or (at your option) any later version.\n *\n *  This library is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n *  Lesser General Public License for more details.\n *\n *  You should have received a copy of the GNU Lesser General Public\n *  License along with this library; if not, write to the Free Software\n *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n *\n *  concept and filter values by David Robinson (David@Robinson.org)\n *    -- blame him if you think the idea is flawed\n *  original coding by Glen Sawyer (mp3gain@hotmail.com)\n *    -- blame him if you think this runs too slowly, or the coding is otherwise flawed\n *\n *  lots of code improvements by Frank Klemm ( http://www.uni-jena.de/~pfk/mpp/ )\n *    -- credit him for all the _good_ programming ;)\n *\n *\n *  For an explanation of the concepts and the basic algorithms involved, go to:\n *    http://www.replaygain.org/\n */\n\n/*\n *  Here's the deal. Call\n *\n *    InitGainAnalysis ( long samplefreq );\n *\n *  to initialize everything. Call\n *\n *    AnalyzeSamples ( var Float_t*  left_samples,\n *                     var Float_t*  right_samples,\n *                     size_t          num_samples,\n *                     int             num_channels );\n *\n *  as many times as you want, with as many or as few samples as you want.\n *  If mono, pass the sample buffer in through left_samples, leave\n *  right_samples NULL, and make sure num_channels = 1.\n *\n *    GetTitleGain()\n *\n *  will return the recommended dB level change for all samples analyzed\n *  SINCE THE LAST TIME you called GetTitleGain() OR InitGainAnalysis().\n *\n *    GetAlbumGain()\n *\n *  will return the recommended dB level change for all samples analyzed\n *  since InitGainAnalysis() was called and finalized with GetTitleGain().\n *\n *  Pseudo-code to process an album:\n *\n *    Float_t       l_samples [4096];\n *    Float_t       r_samples [4096];\n *    size_t        num_samples;\n *    unsigned int  num_songs;\n *    unsigned int  i;\n *\n *    InitGainAnalysis ( 44100 );\n *    for ( i = 1; i <= num_songs; i++ ) {\n *        while ( ( num_samples = getSongSamples ( song[i], left_samples, right_samples ) ) > 0 )\n *            AnalyzeSamples ( left_samples, right_samples, num_samples, 2 );\n *        fprintf (\"Recommended dB change for song %2d: %+6.2 dB\\n\", i, GetTitleGain() );\n *    }\n *    fprintf (\"Recommended dB change for whole album: %+6.2 dB\\n\", GetAlbumGain() );\n */\n\n/*\n *  So here's the main source of potential code confusion:\n *\n *  The filters applied to the incoming samples are IIR filters,\n *  meaning they rely on up to <filter order> number of previous samples\n *  AND up to <filter order> number of previous filtered samples.\n *\n *  I set up the AnalyzeSamples routine to minimize memory usage and interface\n *  complexity. The speed isn't compromised too much (I don't think), but the\n *  internal complexity is higher than it should be for such a relatively\n *  simple routine.\n *\n *  Optimization/clarity suggestions are welcome.\n */\nvar common = __webpack_require__(/*! ./common.js */ \"../node_modules/lamejs/src/js/common.js\");\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\n/**\n * Table entries per dB\n */\nGainAnalysis.STEPS_per_dB = 100.;\n/**\n * Table entries for 0...MAX_dB (normal max. values are 70...80 dB)\n */\nGainAnalysis.MAX_dB = 120.;\nGainAnalysis.GAIN_NOT_ENOUGH_SAMPLES = -24601;\nGainAnalysis.GAIN_ANALYSIS_ERROR = 0;\nGainAnalysis.GAIN_ANALYSIS_OK = 1;\nGainAnalysis.INIT_GAIN_ANALYSIS_ERROR = 0;\nGainAnalysis.INIT_GAIN_ANALYSIS_OK = 1;\n\nGainAnalysis.YULE_ORDER = 10;\nGainAnalysis.MAX_ORDER = GainAnalysis.YULE_ORDER;\n\nGainAnalysis.MAX_SAMP_FREQ = 48000;\nGainAnalysis.RMS_WINDOW_TIME_NUMERATOR = 1;\nGainAnalysis.RMS_WINDOW_TIME_DENOMINATOR = 20;\nGainAnalysis.MAX_SAMPLES_PER_WINDOW = ((GainAnalysis.MAX_SAMP_FREQ * GainAnalysis.RMS_WINDOW_TIME_NUMERATOR) / GainAnalysis.RMS_WINDOW_TIME_DENOMINATOR + 1);\n\nfunction GainAnalysis() {\n    /**\n     * calibration value for 89dB\n     */\n    var PINK_REF = 64.82;\n\n    var YULE_ORDER = GainAnalysis.YULE_ORDER;\n    /**\n     * percentile which is louder than the proposed level\n     */\n    var RMS_PERCENTILE = 0.95;\n    /**\n     * maximum allowed sample frequency [Hz]\n     */\n    var MAX_SAMP_FREQ = GainAnalysis.MAX_SAMP_FREQ;\n    var RMS_WINDOW_TIME_NUMERATOR = GainAnalysis.RMS_WINDOW_TIME_NUMERATOR;\n    /**\n     * numerator / denominator = time slice size [s]\n     */\n    var RMS_WINDOW_TIME_DENOMINATOR = GainAnalysis.RMS_WINDOW_TIME_DENOMINATOR;\n    /**\n     * max. Samples per Time slice\n     */\n    var MAX_SAMPLES_PER_WINDOW = GainAnalysis.MAX_SAMPLES_PER_WINDOW;\n\n\n    var ABYule = [\n        [0.03857599435200, -3.84664617118067, -0.02160367184185,\n            7.81501653005538, -0.00123395316851, -11.34170355132042,\n            -0.00009291677959, 13.05504219327545, -0.01655260341619,\n            -12.28759895145294, 0.02161526843274, 9.48293806319790,\n            -0.02074045215285, -5.87257861775999, 0.00594298065125,\n            2.75465861874613, 0.00306428023191, -0.86984376593551,\n            0.00012025322027, 0.13919314567432, 0.00288463683916],\n        [0.05418656406430, -3.47845948550071, -0.02911007808948,\n            6.36317777566148, -0.00848709379851, -8.54751527471874,\n            -0.00851165645469, 9.47693607801280, -0.00834990904936,\n            -8.81498681370155, 0.02245293253339, 6.85401540936998,\n            -0.02596338512915, -4.39470996079559, 0.01624864962975,\n            2.19611684890774, -0.00240879051584, -0.75104302451432,\n            0.00674613682247, 0.13149317958808, -0.00187763777362],\n        [0.15457299681924, -2.37898834973084, -0.09331049056315,\n            2.84868151156327, -0.06247880153653, -2.64577170229825,\n            0.02163541888798, 2.23697657451713, -0.05588393329856,\n            -1.67148153367602, 0.04781476674921, 1.00595954808547,\n            0.00222312597743, -0.45953458054983, 0.03174092540049,\n            0.16378164858596, -0.01390589421898, -0.05032077717131,\n            0.00651420667831, 0.02347897407020, -0.00881362733839],\n        [0.30296907319327, -1.61273165137247, -0.22613988682123,\n            1.07977492259970, -0.08587323730772, -0.25656257754070,\n            0.03282930172664, -0.16276719120440, -0.00915702933434,\n            -0.22638893773906, -0.02364141202522, 0.39120800788284,\n            -0.00584456039913, -0.22138138954925, 0.06276101321749,\n            0.04500235387352, -0.00000828086748, 0.02005851806501,\n            0.00205861885564, 0.00302439095741, -0.02950134983287],\n        [0.33642304856132, -1.49858979367799, -0.25572241425570,\n            0.87350271418188, -0.11828570177555, 0.12205022308084,\n            0.11921148675203, -0.80774944671438, -0.07834489609479,\n            0.47854794562326, -0.00469977914380, -0.12453458140019,\n            -0.00589500224440, -0.04067510197014, 0.05724228140351,\n            0.08333755284107, 0.00832043980773, -0.04237348025746,\n            -0.01635381384540, 0.02977207319925, -0.01760176568150],\n        [0.44915256608450, -0.62820619233671, -0.14351757464547,\n            0.29661783706366, -0.22784394429749, -0.37256372942400,\n            -0.01419140100551, 0.00213767857124, 0.04078262797139,\n            -0.42029820170918, -0.12398163381748, 0.22199650564824,\n            0.04097565135648, 0.00613424350682, 0.10478503600251,\n            0.06747620744683, -0.01863887810927, 0.05784820375801,\n            -0.03193428438915, 0.03222754072173, 0.00541907748707],\n        [0.56619470757641, -1.04800335126349, -0.75464456939302,\n            0.29156311971249, 0.16242137742230, -0.26806001042947,\n            0.16744243493672, 0.00819999645858, -0.18901604199609,\n            0.45054734505008, 0.30931782841830, -0.33032403314006,\n            -0.27562961986224, 0.06739368333110, 0.00647310677246,\n            -0.04784254229033, 0.08647503780351, 0.01639907836189,\n            -0.03788984554840, 0.01807364323573, -0.00588215443421],\n        [0.58100494960553, -0.51035327095184, -0.53174909058578,\n            -0.31863563325245, -0.14289799034253, -0.20256413484477,\n            0.17520704835522, 0.14728154134330, 0.02377945217615,\n            0.38952639978999, 0.15558449135573, -0.23313271880868,\n            -0.25344790059353, -0.05246019024463, 0.01628462406333,\n            -0.02505961724053, 0.06920467763959, 0.02442357316099,\n            -0.03721611395801, 0.01818801111503, -0.00749618797172],\n        [0.53648789255105, -0.25049871956020, -0.42163034350696,\n            -0.43193942311114, -0.00275953611929, -0.03424681017675,\n            0.04267842219415, -0.04678328784242, -0.10214864179676,\n            0.26408300200955, 0.14590772289388, 0.15113130533216,\n            -0.02459864859345, -0.17556493366449, -0.11202315195388,\n            -0.18823009262115, -0.04060034127000, 0.05477720428674,\n            0.04788665548180, 0.04704409688120, -0.02217936801134]];\n\n    var ABButter = [\n        [0.98621192462708, -1.97223372919527, -1.97242384925416,\n            0.97261396931306, 0.98621192462708],\n        [0.98500175787242, -1.96977855582618, -1.97000351574484,\n            0.97022847566350, 0.98500175787242],\n        [0.97938932735214, -1.95835380975398, -1.95877865470428,\n            0.95920349965459, 0.97938932735214],\n        [0.97531843204928, -1.95002759149878, -1.95063686409857,\n            0.95124613669835, 0.97531843204928],\n        [0.97316523498161, -1.94561023566527, -1.94633046996323,\n            0.94705070426118, 0.97316523498161],\n        [0.96454515552826, -1.92783286977036, -1.92909031105652,\n            0.93034775234268, 0.96454515552826],\n        [0.96009142950541, -1.91858953033784, -1.92018285901082,\n            0.92177618768381, 0.96009142950541],\n        [0.95856916599601, -1.91542108074780, -1.91713833199203,\n            0.91885558323625, 0.95856916599601],\n        [0.94597685600279, -1.88903307939452, -1.89195371200558,\n            0.89487434461664, 0.94597685600279]];\n\n\n    /**\n     * When calling this procedure, make sure that ip[-order] and op[-order]\n     * point to real data\n     */\n    //private void filterYule(final float[] input, int inputPos, float[] output,\n    //int outputPos, int nSamples, final float[] kernel) {\n    function filterYule(input, inputPos, output, outputPos, nSamples, kernel) {\n\n        while ((nSamples--) != 0) {\n            /* 1e-10 is a hack to avoid slowdown because of denormals */\n            output[outputPos] = 1e-10 + input[inputPos + 0] * kernel[0]\n                - output[outputPos - 1] * kernel[1] + input[inputPos - 1]\n                * kernel[2] - output[outputPos - 2] * kernel[3]\n                + input[inputPos - 2] * kernel[4] - output[outputPos - 3]\n                * kernel[5] + input[inputPos - 3] * kernel[6]\n                - output[outputPos - 4] * kernel[7] + input[inputPos - 4]\n                * kernel[8] - output[outputPos - 5] * kernel[9]\n                + input[inputPos - 5] * kernel[10] - output[outputPos - 6]\n                * kernel[11] + input[inputPos - 6] * kernel[12]\n                - output[outputPos - 7] * kernel[13] + input[inputPos - 7]\n                * kernel[14] - output[outputPos - 8] * kernel[15]\n                + input[inputPos - 8] * kernel[16] - output[outputPos - 9]\n                * kernel[17] + input[inputPos - 9] * kernel[18]\n                - output[outputPos - 10] * kernel[19]\n                + input[inputPos - 10] * kernel[20];\n            ++outputPos;\n            ++inputPos;\n        }\n    }\n\n//private void filterButter(final float[] input, int inputPos,\n//    float[] output, int outputPos, int nSamples, final float[] kernel) {\n    function filterButter(input, inputPos, output, outputPos, nSamples, kernel) {\n\n        while ((nSamples--) != 0) {\n            output[outputPos] = input[inputPos + 0] * kernel[0]\n                - output[outputPos - 1] * kernel[1] + input[inputPos - 1]\n                * kernel[2] - output[outputPos - 2] * kernel[3]\n                + input[inputPos - 2] * kernel[4];\n            ++outputPos;\n            ++inputPos;\n        }\n    }\n\n    /**\n     * @return INIT_GAIN_ANALYSIS_OK if successful, INIT_GAIN_ANALYSIS_ERROR if\n     *         not\n     */\n    function ResetSampleFrequency(rgData, samplefreq) {\n        /* zero out initial values */\n        for (var i = 0; i < MAX_ORDER; i++)\n            rgData.linprebuf[i] = rgData.lstepbuf[i] = rgData.loutbuf[i] = rgData.rinprebuf[i] = rgData.rstepbuf[i] = rgData.routbuf[i] = 0.;\n\n        switch (0 | (samplefreq)) {\n            case 48000:\n                rgData.reqindex = 0;\n                break;\n            case 44100:\n                rgData.reqindex = 1;\n                break;\n            case 32000:\n                rgData.reqindex = 2;\n                break;\n            case 24000:\n                rgData.reqindex = 3;\n                break;\n            case 22050:\n                rgData.reqindex = 4;\n                break;\n            case 16000:\n                rgData.reqindex = 5;\n                break;\n            case 12000:\n                rgData.reqindex = 6;\n                break;\n            case 11025:\n                rgData.reqindex = 7;\n                break;\n            case 8000:\n                rgData.reqindex = 8;\n                break;\n            default:\n                return INIT_GAIN_ANALYSIS_ERROR;\n        }\n\n        rgData.sampleWindow = 0 | ((samplefreq * RMS_WINDOW_TIME_NUMERATOR\n            + RMS_WINDOW_TIME_DENOMINATOR - 1) / RMS_WINDOW_TIME_DENOMINATOR);\n\n        rgData.lsum = 0.;\n        rgData.rsum = 0.;\n        rgData.totsamp = 0;\n\n        Arrays.ill(rgData.A, 0);\n\n        return INIT_GAIN_ANALYSIS_OK;\n    }\n\n    this.InitGainAnalysis = function (rgData, samplefreq) {\n        if (ResetSampleFrequency(rgData, samplefreq) != INIT_GAIN_ANALYSIS_OK) {\n            return INIT_GAIN_ANALYSIS_ERROR;\n        }\n\n        rgData.linpre = MAX_ORDER;\n        rgData.rinpre = MAX_ORDER;\n        rgData.lstep = MAX_ORDER;\n        rgData.rstep = MAX_ORDER;\n        rgData.lout = MAX_ORDER;\n        rgData.rout = MAX_ORDER;\n\n        Arrays.fill(rgData.B, 0);\n\n        return INIT_GAIN_ANALYSIS_OK;\n    };\n\n    /**\n     * square\n     */\n    function fsqr(d) {\n        return d * d;\n    }\n\n    this.AnalyzeSamples = function (rgData, left_samples, left_samplesPos, right_samples, right_samplesPos, num_samples,\n                                    num_channels) {\n        var curleft;\n        var curleftBase;\n        var curright;\n        var currightBase;\n        var batchsamples;\n        var cursamples;\n        var cursamplepos;\n\n        if (num_samples == 0)\n            return GAIN_ANALYSIS_OK;\n\n        cursamplepos = 0;\n        batchsamples = num_samples;\n\n        switch (num_channels) {\n            case 1:\n                right_samples = left_samples;\n                right_samplesPos = left_samplesPos;\n                break;\n            case 2:\n                break;\n            default:\n                return GAIN_ANALYSIS_ERROR;\n        }\n\n        if (num_samples < MAX_ORDER) {\n            System.arraycopy(left_samples, left_samplesPos, rgData.linprebuf,\n                MAX_ORDER, num_samples);\n            System.arraycopy(right_samples, right_samplesPos, rgData.rinprebuf,\n                MAX_ORDER, num_samples);\n        } else {\n            System.arraycopy(left_samples, left_samplesPos, rgData.linprebuf,\n                MAX_ORDER, MAX_ORDER);\n            System.arraycopy(right_samples, right_samplesPos, rgData.rinprebuf,\n                MAX_ORDER, MAX_ORDER);\n        }\n\n        while (batchsamples > 0) {\n            cursamples = batchsamples > rgData.sampleWindow - rgData.totsamp ? rgData.sampleWindow\n            - rgData.totsamp\n                : batchsamples;\n            if (cursamplepos < MAX_ORDER) {\n                curleft = rgData.linpre + cursamplepos;\n                curleftBase = rgData.linprebuf;\n                curright = rgData.rinpre + cursamplepos;\n                currightBase = rgData.rinprebuf;\n                if (cursamples > MAX_ORDER - cursamplepos)\n                    cursamples = MAX_ORDER - cursamplepos;\n            } else {\n                curleft = left_samplesPos + cursamplepos;\n                curleftBase = left_samples;\n                curright = right_samplesPos + cursamplepos;\n                currightBase = right_samples;\n            }\n\n            filterYule(curleftBase, curleft, rgData.lstepbuf, rgData.lstep\n                + rgData.totsamp, cursamples, ABYule[rgData.reqindex]);\n            filterYule(currightBase, curright, rgData.rstepbuf, rgData.rstep\n                + rgData.totsamp, cursamples, ABYule[rgData.reqindex]);\n\n            filterButter(rgData.lstepbuf, rgData.lstep + rgData.totsamp,\n                rgData.loutbuf, rgData.lout + rgData.totsamp, cursamples,\n                ABButter[rgData.reqindex]);\n            filterButter(rgData.rstepbuf, rgData.rstep + rgData.totsamp,\n                rgData.routbuf, rgData.rout + rgData.totsamp, cursamples,\n                ABButter[rgData.reqindex]);\n\n            curleft = rgData.lout + rgData.totsamp;\n            /* Get the squared values */\n            curleftBase = rgData.loutbuf;\n            curright = rgData.rout + rgData.totsamp;\n            currightBase = rgData.routbuf;\n\n            var i = cursamples % 8;\n            while ((i--) != 0) {\n                rgData.lsum += fsqr(curleftBase[curleft++]);\n                rgData.rsum += fsqr(currightBase[curright++]);\n            }\n            i = cursamples / 8;\n            while ((i--) != 0) {\n                rgData.lsum += fsqr(curleftBase[curleft + 0])\n                    + fsqr(curleftBase[curleft + 1])\n                    + fsqr(curleftBase[curleft + 2])\n                    + fsqr(curleftBase[curleft + 3])\n                    + fsqr(curleftBase[curleft + 4])\n                    + fsqr(curleftBase[curleft + 5])\n                    + fsqr(curleftBase[curleft + 6])\n                    + fsqr(curleftBase[curleft + 7]);\n                curleft += 8;\n                rgData.rsum += fsqr(currightBase[curright + 0])\n                    + fsqr(currightBase[curright + 1])\n                    + fsqr(currightBase[curright + 2])\n                    + fsqr(currightBase[curright + 3])\n                    + fsqr(currightBase[curright + 4])\n                    + fsqr(currightBase[curright + 5])\n                    + fsqr(currightBase[curright + 6])\n                    + fsqr(currightBase[curright + 7]);\n                curright += 8;\n            }\n\n            batchsamples -= cursamples;\n            cursamplepos += cursamples;\n            rgData.totsamp += cursamples;\n            if (rgData.totsamp == rgData.sampleWindow) {\n                /* Get the Root Mean Square (RMS) for this set of samples */\n                var val = GainAnalysis.STEPS_per_dB\n                    * 10.\n                    * Math.log10((rgData.lsum + rgData.rsum)\n                        / rgData.totsamp * 0.5 + 1.e-37);\n                var ival = (val <= 0) ? 0 : 0 | val;\n                if (ival >= rgData.A.length)\n                    ival = rgData.A.length - 1;\n                rgData.A[ival]++;\n                rgData.lsum = rgData.rsum = 0.;\n\n                System.arraycopy(rgData.loutbuf, rgData.totsamp,\n                    rgData.loutbuf, 0, MAX_ORDER);\n                System.arraycopy(rgData.routbuf, rgData.totsamp,\n                    rgData.routbuf, 0, MAX_ORDER);\n                System.arraycopy(rgData.lstepbuf, rgData.totsamp,\n                    rgData.lstepbuf, 0, MAX_ORDER);\n                System.arraycopy(rgData.rstepbuf, rgData.totsamp,\n                    rgData.rstepbuf, 0, MAX_ORDER);\n                rgData.totsamp = 0;\n            }\n            if (rgData.totsamp > rgData.sampleWindow) {\n                /*\n                 * somehow I really screwed up: Error in programming! Contact\n                 * author about totsamp > sampleWindow\n                 */\n                return GAIN_ANALYSIS_ERROR;\n            }\n        }\n        if (num_samples < MAX_ORDER) {\n            System.arraycopy(rgData.linprebuf, num_samples, rgData.linprebuf,\n                0, MAX_ORDER - num_samples);\n            System.arraycopy(rgData.rinprebuf, num_samples, rgData.rinprebuf,\n                0, MAX_ORDER - num_samples);\n            System.arraycopy(left_samples, left_samplesPos, rgData.linprebuf,\n                MAX_ORDER - num_samples, num_samples);\n            System.arraycopy(right_samples, right_samplesPos, rgData.rinprebuf,\n                MAX_ORDER - num_samples, num_samples);\n        } else {\n            System.arraycopy(left_samples, left_samplesPos + num_samples\n                - MAX_ORDER, rgData.linprebuf, 0, MAX_ORDER);\n            System.arraycopy(right_samples, right_samplesPos + num_samples\n                - MAX_ORDER, rgData.rinprebuf, 0, MAX_ORDER);\n        }\n\n        return GAIN_ANALYSIS_OK;\n    };\n\n    function analyzeResult(Array, len) {\n        var i;\n\n        var elems = 0;\n        for (i = 0; i < len; i++)\n            elems += Array[i];\n        if (elems == 0)\n            return GAIN_NOT_ENOUGH_SAMPLES;\n\n        var upper = 0 | Math.ceil(elems * (1. - RMS_PERCENTILE));\n        for (i = len; i-- > 0;) {\n            if ((upper -= Array[i]) <= 0)\n                break;\n        }\n\n        //return (float) ((float) PINK_REF - (float) i / (float) STEPS_per_dB);\n        return (PINK_REF - i / GainAnalysis.STEPS_per_dB);\n    }\n\n    this.GetTitleGain = function (rgData) {\n        var retval = analyzeResult(rgData.A, rgData.A.length);\n\n        for (var i = 0; i < rgData.A.length; i++) {\n            rgData.B[i] += rgData.A[i];\n            rgData.A[i] = 0;\n        }\n\n        for (var i = 0; i < MAX_ORDER; i++)\n            rgData.linprebuf[i] = rgData.lstepbuf[i] = rgData.loutbuf[i] = rgData.rinprebuf[i] = rgData.rstepbuf[i] = rgData.routbuf[i] = 0.;\n\n        rgData.totsamp = 0;\n        rgData.lsum = rgData.rsum = 0.;\n        return retval;\n    }\n\n}\n\nmodule.exports = GainAnalysis;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/lamejs/src/js/GainAnalysis.js?");

/***/ }),

/***/ "../node_modules/lamejs/src/js/GrInfo.js":
/*!***********************************************!*\
  !*** ../node_modules/lamejs/src/js/GrInfo.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//package mp3;\nvar common = __webpack_require__(/*! ./common.js */ \"../node_modules/lamejs/src/js/common.js\");\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar L3Side = __webpack_require__(/*! ./L3Side.js */ \"../node_modules/lamejs/src/js/L3Side.js\");\n\nfunction GrInfo() {\n    //float xr[] = new float[576];\n    this.xr = new_float(576);\n    //int l3_enc[] = new int[576];\n    this.l3_enc = new_int(576);\n    //int scalefac[] = new int[L3Side.SFBMAX];\n    this.scalefac = new_int(L3Side.SFBMAX);\n    this.xrpow_max = 0.;\n\n    this.part2_3_length = 0;\n    this.big_values = 0;\n    this.count1 = 0;\n    this.global_gain = 0;\n    this.scalefac_compress = 0;\n    this.block_type = 0;\n    this.mixed_block_flag = 0;\n    this.table_select = new_int(3);\n    this.subblock_gain = new_int(3 + 1);\n    this.region0_count = 0;\n    this.region1_count = 0;\n    this.preflag = 0;\n    this.scalefac_scale = 0;\n    this.count1table_select = 0;\n\n    this.part2_length = 0;\n    this.sfb_lmax = 0;\n    this.sfb_smin = 0;\n    this.psy_lmax = 0;\n    this.sfbmax = 0;\n    this.psymax = 0;\n    this.sfbdivide = 0;\n    this.width = new_int(L3Side.SFBMAX);\n    this.window = new_int(L3Side.SFBMAX);\n    this.count1bits = 0;\n    /**\n     * added for LSF\n     */\n    this.sfb_partition_table = null;\n    this.slen = new_int(4);\n\n    this.max_nonzero_coeff = 0;\n\n    var self = this;\n    function clone_int(array) {\n        return new Int32Array(array);\n    }\n    function clone_float(array) {\n        return new Float32Array(array);\n    }\n    this.assign = function (other) {\n        self.xr = clone_float(other.xr); //.slice(0); //clone();\n        self.l3_enc = clone_int(other.l3_enc); //.slice(0); //clone();\n        self.scalefac = clone_int(other.scalefac);//.slice(0); //clone();\n        self.xrpow_max = other.xrpow_max;\n\n        self.part2_3_length = other.part2_3_length;\n        self.big_values = other.big_values;\n        self.count1 = other.count1;\n        self.global_gain = other.global_gain;\n        self.scalefac_compress = other.scalefac_compress;\n        self.block_type = other.block_type;\n        self.mixed_block_flag = other.mixed_block_flag;\n        self.table_select = clone_int(other.table_select);//.slice(0); //clone();\n        self.subblock_gain = clone_int(other.subblock_gain); //.slice(0); //.clone();\n        self.region0_count = other.region0_count;\n        self.region1_count = other.region1_count;\n        self.preflag = other.preflag;\n        self.scalefac_scale = other.scalefac_scale;\n        self.count1table_select = other.count1table_select;\n\n        self.part2_length = other.part2_length;\n        self.sfb_lmax = other.sfb_lmax;\n        self.sfb_smin = other.sfb_smin;\n        self.psy_lmax = other.psy_lmax;\n        self.sfbmax = other.sfbmax;\n        self.psymax = other.psymax;\n        self.sfbdivide = other.sfbdivide;\n        self.width = clone_int(other.width); //.slice(0); //.clone();\n        self.window = clone_int(other.window); //.slice(0); //.clone();\n        self.count1bits = other.count1bits;\n\n        self.sfb_partition_table = other.sfb_partition_table.slice(0); //.clone();\n        self.slen = clone_int(other.slen); //.slice(0); //.clone();\n        self.max_nonzero_coeff = other.max_nonzero_coeff;\n    }\n}\n\nmodule.exports = GrInfo;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/lamejs/src/js/GrInfo.js?");

/***/ }),

/***/ "../node_modules/lamejs/src/js/IIISideInfo.js":
/*!****************************************************!*\
  !*** ../node_modules/lamejs/src/js/IIISideInfo.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var common = __webpack_require__(/*! ./common.js */ \"../node_modules/lamejs/src/js/common.js\");\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar GrInfo = __webpack_require__(/*! ./GrInfo.js */ \"../node_modules/lamejs/src/js/GrInfo.js\");\n\nfunction IIISideInfo() {\n    this.tt = [[null, null], [null, null]];\n    this.main_data_begin = 0;\n    this.private_bits = 0;\n    this.resvDrain_pre = 0;\n    this.resvDrain_post = 0;\n    this.scfsi = [new_int(4), new_int(4)];\n\n    for (var gr = 0; gr < 2; gr++) {\n        for (var ch = 0; ch < 2; ch++) {\n            this.tt[gr][ch] = new GrInfo();\n        }\n    }\n}\n\nmodule.exports = IIISideInfo;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/lamejs/src/js/IIISideInfo.js?");

/***/ }),

/***/ "../node_modules/lamejs/src/js/III_psy_ratio.js":
/*!******************************************************!*\
  !*** ../node_modules/lamejs/src/js/III_psy_ratio.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//package mp3;\n\nvar III_psy_xmin = __webpack_require__(/*! ./III_psy_xmin.js */ \"../node_modules/lamejs/src/js/III_psy_xmin.js\");\n\nfunction III_psy_ratio() {\n\tthis.thm = new III_psy_xmin();\n\tthis.en = new III_psy_xmin();\n}\n\nmodule.exports = III_psy_ratio;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/lamejs/src/js/III_psy_ratio.js?");

/***/ }),

/***/ "../node_modules/lamejs/src/js/III_psy_xmin.js":
/*!*****************************************************!*\
  !*** ../node_modules/lamejs/src/js/III_psy_xmin.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Encoder = __webpack_require__(/*! ./Encoder.js */ \"../node_modules/lamejs/src/js/Encoder.js\");\nvar common = __webpack_require__(/*! ./common.js */ \"../node_modules/lamejs/src/js/common.js\");\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nfunction III_psy_xmin() {\n    this.l = new_float(Encoder.SBMAX_l);\n    this.s = new_float_n([Encoder.SBMAX_s, 3]);\n\n    var self = this;\n    this.assign = function (iii_psy_xmin) {\n        System.arraycopy(iii_psy_xmin.l, 0, self.l, 0, Encoder.SBMAX_l);\n        for (var i = 0; i < Encoder.SBMAX_s; i++) {\n            for (var j = 0; j < 3; j++) {\n                self.s[i][j] = iii_psy_xmin.s[i][j];\n            }\n        }\n    }\n}\n\nmodule.exports = III_psy_xmin;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/lamejs/src/js/III_psy_xmin.js?");

/***/ }),

/***/ "../node_modules/lamejs/src/js/L3Side.js":
/*!***********************************************!*\
  !*** ../node_modules/lamejs/src/js/L3Side.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Encoder = __webpack_require__(/*! ./Encoder.js */ \"../node_modules/lamejs/src/js/Encoder.js\");\n\nvar L3Side = {};\n\n\n\t/**\n\t * max scalefactor band, max(SBMAX_l, SBMAX_s*3, (SBMAX_s-3)*3+8)\n\t */\nL3Side.SFBMAX = (Encoder.SBMAX_s * 3);\n\nmodule.exports = L3Side;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/lamejs/src/js/L3Side.js?");

/***/ }),

/***/ "../node_modules/lamejs/src/js/Lame.js":
/*!*********************************************!*\
  !*** ../node_modules/lamejs/src/js/Lame.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var common = __webpack_require__(/*! ./common.js */ \"../node_modules/lamejs/src/js/common.js\");\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar new_short_n = common.new_short_n;\nvar assert = common.assert;\n\nvar PsyModel = __webpack_require__(/*! ./PsyModel.js */ \"../node_modules/lamejs/src/js/PsyModel.js\");\nvar LameGlobalFlags = __webpack_require__(/*! ./LameGlobalFlags.js */ \"../node_modules/lamejs/src/js/LameGlobalFlags.js\");\nvar LameInternalFlags = __webpack_require__(/*! ./LameInternalFlags.js */ \"../node_modules/lamejs/src/js/LameInternalFlags.js\");\nvar ATH = __webpack_require__(/*! ./ATH.js */ \"../node_modules/lamejs/src/js/ATH.js\");\nvar ReplayGain = __webpack_require__(/*! ./ReplayGain.js */ \"../node_modules/lamejs/src/js/ReplayGain.js\");\nvar CBRNewIterationLoop = __webpack_require__(/*! ./CBRNewIterationLoop.js */ \"../node_modules/lamejs/src/js/CBRNewIterationLoop.js\");\nvar BitStream = __webpack_require__(/*! ./BitStream.js */ \"../node_modules/lamejs/src/js/BitStream.js\");\nvar Tables = __webpack_require__(/*! ./Tables.js */ \"../node_modules/lamejs/src/js/Tables.js\");\nvar Encoder = __webpack_require__(/*! ./Encoder.js */ \"../node_modules/lamejs/src/js/Encoder.js\");\n\nfunction Lame() {\n    var self = this;\n    var LAME_MAXALBUMART = (128 * 1024);\n\n    Lame.V9 = 410;\n    Lame.V8 = 420;\n    Lame.V7 = 430;\n    Lame.V6 = 440;\n    Lame.V5 = 450;\n    Lame.V4 = 460;\n    Lame.V3 = 470;\n    Lame.V2 = 480;\n    Lame.V1 = 490;\n    Lame.V0 = 500;\n\n    /* still there for compatibility */\n\n    Lame.R3MIX = 1000;\n    Lame.STANDARD = 1001;\n    Lame.EXTREME = 1002;\n    Lame.INSANE = 1003;\n    Lame.STANDARD_FAST = 1004;\n    Lame.EXTREME_FAST = 1005;\n    Lame.MEDIUM = 1006;\n    Lame.MEDIUM_FAST = 1007;\n\n    /**\n     * maximum size of mp3buffer needed if you encode at most 1152 samples for\n     * each call to lame_encode_buffer. see lame_encode_buffer() below\n     * (LAME_MAXMP3BUFFER is now obsolete)\n     */\n    var LAME_MAXMP3BUFFER = (16384 + LAME_MAXALBUMART);\n    Lame.LAME_MAXMP3BUFFER = LAME_MAXMP3BUFFER;\n\n    var ga;\n    var bs;\n    var p;\n    var qupvt;\n    var qu;\n    var psy = new PsyModel();\n    var vbr;\n    var ver;\n    var id3;\n    var mpglib;\n    this.enc = new Encoder();\n\n    this.setModules = function (_ga, _bs, _p, _qupvt, _qu, _vbr, _ver, _id3, _mpglib) {\n        ga = _ga;\n        bs = _bs;\n        p = _p;\n        qupvt = _qupvt;\n        qu = _qu;\n        vbr = _vbr;\n        ver = _ver;\n        id3 = _id3;\n        mpglib = _mpglib;\n        this.enc.setModules(bs, psy, qupvt, vbr);\n    }\n\n    /**\n     * PSY Model related stuff\n     */\n    function PSY() {\n        /**\n         * The dbQ stuff.\n         */\n        this.mask_adjust = 0.;\n        /**\n         * The dbQ stuff.\n         */\n        this.mask_adjust_short = 0.;\n        /* at transition from one scalefactor band to next */\n        /**\n         * Band weight long scalefactor bands.\n         */\n        this.bo_l_weight = new_float(Encoder.SBMAX_l);\n        /**\n         * Band weight short scalefactor bands.\n         */\n        this.bo_s_weight = new_float(Encoder.SBMAX_s);\n    }\n\n    function LowPassHighPass() {\n        this.lowerlimit = 0.;\n    }\n\n    function BandPass(bitrate, lPass) {\n        this.lowpass = lPass;\n    }\n\n    var LAME_ID = 0xFFF88E3B;\n\n    function lame_init_old(gfp) {\n        var gfc;\n\n        gfp.class_id = LAME_ID;\n\n        gfc = gfp.internal_flags = new LameInternalFlags();\n\n        /* Global flags. set defaults here for non-zero values */\n        /* see lame.h for description */\n        /*\n         * set integer values to -1 to mean that LAME will compute the best\n         * value, UNLESS the calling program as set it (and the value is no\n         * longer -1)\n         */\n\n        gfp.mode = MPEGMode.NOT_SET;\n        gfp.original = 1;\n        gfp.in_samplerate = 44100;\n        gfp.num_channels = 2;\n        gfp.num_samples = -1;\n\n        gfp.bWriteVbrTag = true;\n        gfp.quality = -1;\n        gfp.short_blocks = null;\n        gfc.subblock_gain = -1;\n\n        gfp.lowpassfreq = 0;\n        gfp.highpassfreq = 0;\n        gfp.lowpasswidth = -1;\n        gfp.highpasswidth = -1;\n\n        gfp.VBR = VbrMode.vbr_off;\n        gfp.VBR_q = 4;\n        gfp.ATHcurve = -1;\n        gfp.VBR_mean_bitrate_kbps = 128;\n        gfp.VBR_min_bitrate_kbps = 0;\n        gfp.VBR_max_bitrate_kbps = 0;\n        gfp.VBR_hard_min = 0;\n        gfc.VBR_min_bitrate = 1;\n        /* not 0 ????? */\n        gfc.VBR_max_bitrate = 13;\n        /* not 14 ????? */\n\n        gfp.quant_comp = -1;\n        gfp.quant_comp_short = -1;\n\n        gfp.msfix = -1;\n\n        gfc.resample_ratio = 1;\n\n        gfc.OldValue[0] = 180;\n        gfc.OldValue[1] = 180;\n        gfc.CurrentStep[0] = 4;\n        gfc.CurrentStep[1] = 4;\n        gfc.masking_lower = 1;\n        gfc.nsPsy.attackthre = -1;\n        gfc.nsPsy.attackthre_s = -1;\n\n        gfp.scale = -1;\n\n        gfp.athaa_type = -1;\n        gfp.ATHtype = -1;\n        /* default = -1 = set in lame_init_params */\n        gfp.athaa_loudapprox = -1;\n        /* 1 = flat loudness approx. (total energy) */\n        /* 2 = equal loudness curve */\n        gfp.athaa_sensitivity = 0.0;\n        /* no offset */\n        gfp.useTemporal = null;\n        gfp.interChRatio = -1;\n\n        /*\n         * The reason for int mf_samples_to_encode = ENCDELAY + POSTDELAY;\n         * ENCDELAY = internal encoder delay. And then we have to add\n         * POSTDELAY=288 because of the 50% MDCT overlap. A 576 MDCT granule\n         * decodes to 1152 samples. To synthesize the 576 samples centered under\n         * this granule we need the previous granule for the first 288 samples\n         * (no problem), and the next granule for the next 288 samples (not\n         * possible if this is last granule). So we need to pad with 288 samples\n         * to make sure we can encode the 576 samples we are interested in.\n         */\n        gfc.mf_samples_to_encode = Encoder.ENCDELAY + Encoder.POSTDELAY;\n        gfp.encoder_padding = 0;\n        gfc.mf_size = Encoder.ENCDELAY - Encoder.MDCTDELAY;\n        /*\n         * we pad input with this many 0's\n         */\n\n        gfp.findReplayGain = false;\n        gfp.decode_on_the_fly = false;\n\n        gfc.decode_on_the_fly = false;\n        gfc.findReplayGain = false;\n        gfc.findPeakSample = false;\n\n        gfc.RadioGain = 0;\n        gfc.AudiophileGain = 0;\n        gfc.noclipGainChange = 0;\n        gfc.noclipScale = -1.0;\n\n        gfp.preset = 0;\n\n        gfp.write_id3tag_automatic = true;\n        return 0;\n    }\n\n    this.lame_init = function () {\n        var gfp = new LameGlobalFlags();\n\n        var ret = lame_init_old(gfp);\n        if (ret != 0) {\n            return null;\n        }\n\n        gfp.lame_allocated_gfp = 1;\n        return gfp;\n    }\n\n    function filter_coef(x) {\n        if (x > 1.0)\n            return 0.0;\n        if (x <= 0.0)\n            return 1.0;\n\n        return Math.cos(Math.PI / 2 * x);\n    }\n\n    this.nearestBitrateFullIndex = function (bitrate) {\n        /* borrowed from DM abr presets */\n\n        var full_bitrate_table = [8, 16, 24, 32, 40, 48, 56, 64, 80,\n            96, 112, 128, 160, 192, 224, 256, 320];\n\n        var lower_range = 0, lower_range_kbps = 0, upper_range = 0, upper_range_kbps = 0;\n\n        /* We assume specified bitrate will be 320kbps */\n        upper_range_kbps = full_bitrate_table[16];\n        upper_range = 16;\n        lower_range_kbps = full_bitrate_table[16];\n        lower_range = 16;\n\n        /*\n         * Determine which significant bitrates the value specified falls\n         * between, if loop ends without breaking then we were correct above\n         * that the value was 320\n         */\n        for (var b = 0; b < 16; b++) {\n            if ((Math.max(bitrate, full_bitrate_table[b + 1])) != bitrate) {\n                upper_range_kbps = full_bitrate_table[b + 1];\n                upper_range = b + 1;\n                lower_range_kbps = full_bitrate_table[b];\n                lower_range = (b);\n                break;\n                /* We found upper range */\n            }\n        }\n\n        /* Determine which range the value specified is closer to */\n        if ((upper_range_kbps - bitrate) > (bitrate - lower_range_kbps)) {\n            return lower_range;\n        }\n        return upper_range;\n    }\n\n    function optimum_samplefreq(lowpassfreq, input_samplefreq) {\n        /*\n         * Rules:\n         *\n         * - if possible, sfb21 should NOT be used\n         */\n        var suggested_samplefreq = 44100;\n\n        if (input_samplefreq >= 48000)\n            suggested_samplefreq = 48000;\n        else if (input_samplefreq >= 44100)\n            suggested_samplefreq = 44100;\n        else if (input_samplefreq >= 32000)\n            suggested_samplefreq = 32000;\n        else if (input_samplefreq >= 24000)\n            suggested_samplefreq = 24000;\n        else if (input_samplefreq >= 22050)\n            suggested_samplefreq = 22050;\n        else if (input_samplefreq >= 16000)\n            suggested_samplefreq = 16000;\n        else if (input_samplefreq >= 12000)\n            suggested_samplefreq = 12000;\n        else if (input_samplefreq >= 11025)\n            suggested_samplefreq = 11025;\n        else if (input_samplefreq >= 8000)\n            suggested_samplefreq = 8000;\n\n        if (lowpassfreq == -1)\n            return suggested_samplefreq;\n\n        if (lowpassfreq <= 15960)\n            suggested_samplefreq = 44100;\n        if (lowpassfreq <= 15250)\n            suggested_samplefreq = 32000;\n        if (lowpassfreq <= 11220)\n            suggested_samplefreq = 24000;\n        if (lowpassfreq <= 9970)\n            suggested_samplefreq = 22050;\n        if (lowpassfreq <= 7230)\n            suggested_samplefreq = 16000;\n        if (lowpassfreq <= 5420)\n            suggested_samplefreq = 12000;\n        if (lowpassfreq <= 4510)\n            suggested_samplefreq = 11025;\n        if (lowpassfreq <= 3970)\n            suggested_samplefreq = 8000;\n\n        if (input_samplefreq < suggested_samplefreq) {\n            /*\n             * choose a valid MPEG sample frequency above the input sample\n             * frequency to avoid SFB21/12 bitrate bloat rh 061115\n             */\n            if (input_samplefreq > 44100) {\n                return 48000;\n            }\n            if (input_samplefreq > 32000) {\n                return 44100;\n            }\n            if (input_samplefreq > 24000) {\n                return 32000;\n            }\n            if (input_samplefreq > 22050) {\n                return 24000;\n            }\n            if (input_samplefreq > 16000) {\n                return 22050;\n            }\n            if (input_samplefreq > 12000) {\n                return 16000;\n            }\n            if (input_samplefreq > 11025) {\n                return 12000;\n            }\n            if (input_samplefreq > 8000) {\n                return 11025;\n            }\n            return 8000;\n        }\n        return suggested_samplefreq;\n    }\n\n    /**\n     * convert samp freq in Hz to index\n     */\n    function SmpFrqIndex(sample_freq, gpf) {\n        switch (sample_freq) {\n            case 44100:\n                gpf.version = 1;\n                return 0;\n            case 48000:\n                gpf.version = 1;\n                return 1;\n            case 32000:\n                gpf.version = 1;\n                return 2;\n            case 22050:\n                gpf.version = 0;\n                return 0;\n            case 24000:\n                gpf.version = 0;\n                return 1;\n            case 16000:\n                gpf.version = 0;\n                return 2;\n            case 11025:\n                gpf.version = 0;\n                return 0;\n            case 12000:\n                gpf.version = 0;\n                return 1;\n            case 8000:\n                gpf.version = 0;\n                return 2;\n            default:\n                gpf.version = 0;\n                return -1;\n        }\n    }\n\n    /**\n     * @param bRate\n     *            legal rates from 8 to 320\n     */\n    function FindNearestBitrate(bRate, version, samplerate) {\n        /* MPEG-1 or MPEG-2 LSF */\n        if (samplerate < 16000)\n            version = 2;\n\n        var bitrate = Tables.bitrate_table[version][1];\n\n        for (var i = 2; i <= 14; i++) {\n            if (Tables.bitrate_table[version][i] > 0) {\n                if (Math.abs(Tables.bitrate_table[version][i] - bRate) < Math\n                        .abs(bitrate - bRate))\n                    bitrate = Tables.bitrate_table[version][i];\n            }\n        }\n        return bitrate;\n    }\n\n    /**\n     * @param bRate\n     *            legal rates from 32 to 448 kbps\n     * @param version\n     *            MPEG-1 or MPEG-2/2.5 LSF\n     */\n    function BitrateIndex(bRate, version, samplerate) {\n        /* convert bitrate in kbps to index */\n        if (samplerate < 16000)\n            version = 2;\n        for (var i = 0; i <= 14; i++) {\n            if (Tables.bitrate_table[version][i] > 0) {\n                if (Tables.bitrate_table[version][i] == bRate) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    function optimum_bandwidth(lh, bitrate) {\n        /**\n         * <PRE>\n         *  Input:\n         *      bitrate     total bitrate in kbps\n         *\n         *   Output:\n         *      lowerlimit: best lowpass frequency limit for input filter in Hz\n         *      upperlimit: best highpass frequency limit for input filter in Hz\n         * </PRE>\n         */\n        var freq_map = [new BandPass(8, 2000),\n            new BandPass(16, 3700), new BandPass(24, 3900),\n            new BandPass(32, 5500), new BandPass(40, 7000),\n            new BandPass(48, 7500), new BandPass(56, 10000),\n            new BandPass(64, 11000), new BandPass(80, 13500),\n            new BandPass(96, 15100), new BandPass(112, 15600),\n            new BandPass(128, 17000), new BandPass(160, 17500),\n            new BandPass(192, 18600), new BandPass(224, 19400),\n            new BandPass(256, 19700), new BandPass(320, 20500)];\n\n        var table_index = self.nearestBitrateFullIndex(bitrate);\n        lh.lowerlimit = freq_map[table_index].lowpass;\n    }\n\n    function lame_init_params_ppflt(gfp) {\n        var gfc = gfp.internal_flags;\n        /***************************************************************/\n        /* compute info needed for polyphase filter (filter type==0, default) */\n        /***************************************************************/\n\n        var lowpass_band = 32;\n        var highpass_band = -1;\n\n        if (gfc.lowpass1 > 0) {\n            var minband = 999;\n            for (var band = 0; band <= 31; band++) {\n                var freq = (band / 31.0);\n                /* this band and above will be zeroed: */\n                if (freq >= gfc.lowpass2) {\n                    lowpass_band = Math.min(lowpass_band, band);\n                }\n                if (gfc.lowpass1 < freq && freq < gfc.lowpass2) {\n                    minband = Math.min(minband, band);\n                }\n            }\n\n            /*\n             * compute the *actual* transition band implemented by the polyphase\n             * filter\n             */\n            if (minband == 999) {\n                gfc.lowpass1 = (lowpass_band - .75) / 31.0;\n            } else {\n                gfc.lowpass1 = (minband - .75) / 31.0;\n            }\n            gfc.lowpass2 = lowpass_band / 31.0;\n        }\n\n        /*\n         * make sure highpass filter is within 90% of what the effective\n         * highpass frequency will be\n         */\n        if (gfc.highpass2 > 0) {\n            if (gfc.highpass2 < .9 * (.75 / 31.0)) {\n                gfc.highpass1 = 0;\n                gfc.highpass2 = 0;\n                System.err.println(\"Warning: highpass filter disabled.  \"\n                    + \"highpass frequency too small\\n\");\n            }\n        }\n\n        if (gfc.highpass2 > 0) {\n            var maxband = -1;\n            for (var band = 0; band <= 31; band++) {\n                var freq = band / 31.0;\n                /* this band and below will be zereod */\n                if (freq <= gfc.highpass1) {\n                    highpass_band = Math.max(highpass_band, band);\n                }\n                if (gfc.highpass1 < freq && freq < gfc.highpass2) {\n                    maxband = Math.max(maxband, band);\n                }\n            }\n            /*\n             * compute the *actual* transition band implemented by the polyphase\n             * filter\n             */\n            gfc.highpass1 = highpass_band / 31.0;\n            if (maxband == -1) {\n                gfc.highpass2 = (highpass_band + .75) / 31.0;\n            } else {\n                gfc.highpass2 = (maxband + .75) / 31.0;\n            }\n        }\n\n        for (var band = 0; band < 32; band++) {\n            var fc1, fc2;\n            var freq = band / 31.0;\n            if (gfc.highpass2 > gfc.highpass1) {\n                fc1 = filter_coef((gfc.highpass2 - freq)\n                    / (gfc.highpass2 - gfc.highpass1 + 1e-20));\n            } else {\n                fc1 = 1.0;\n            }\n            if (gfc.lowpass2 > gfc.lowpass1) {\n                fc2 = filter_coef((freq - gfc.lowpass1)\n                    / (gfc.lowpass2 - gfc.lowpass1 + 1e-20));\n            } else {\n                fc2 = 1.0;\n            }\n            gfc.amp_filter[band] = (fc1 * fc2);\n        }\n    }\n\n    function lame_init_qval(gfp) {\n        var gfc = gfp.internal_flags;\n\n        switch (gfp.quality) {\n            default:\n            case 9: /* no psymodel, no noise shaping */\n                gfc.psymodel = 0;\n                gfc.noise_shaping = 0;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 8:\n                gfp.quality = 7;\n            //$FALL-THROUGH$\n            case 7:\n                /*\n                 * use psymodel (for short block and m/s switching), but no noise\n                 * shapping\n                 */\n                gfc.psymodel = 1;\n                gfc.noise_shaping = 0;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 6:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 5:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 4:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 3:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 1;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 2:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                if (gfc.substep_shaping == 0)\n                    gfc.substep_shaping = 2;\n                gfc.noise_shaping_amp = 1;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                /* inner loop */\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 1:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                if (gfc.substep_shaping == 0)\n                    gfc.substep_shaping = 2;\n                gfc.noise_shaping_amp = 2;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 0:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                if (gfc.substep_shaping == 0)\n                    gfc.substep_shaping = 2;\n                gfc.noise_shaping_amp = 2;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                /*\n                 * type 2 disabled because of it slowness, in favor of full outer\n                 * loop search\n                 */\n                gfc.full_outer_loop = 0;\n                /*\n                 * full outer loop search disabled because of audible distortions it\n                 * may generate rh 060629\n                 */\n                break;\n        }\n\n    }\n\n    function lame_init_bitstream(gfp) {\n        var gfc = gfp.internal_flags;\n        gfp.frameNum = 0;\n\n        if (gfp.write_id3tag_automatic) {\n            id3.id3tag_write_v2(gfp);\n        }\n        /* initialize histogram data optionally used by frontend */\n\n        gfc.bitrate_stereoMode_Hist = new_int_n([16, 4 + 1]);\n        gfc.bitrate_blockType_Hist = new_int_n([16, 4 + 1 + 1]);\n\n        gfc.PeakSample = 0.0;\n\n        /* Write initial VBR Header to bitstream and init VBR data */\n        if (gfp.bWriteVbrTag)\n            vbr.InitVbrTag(gfp);\n    }\n\n    /********************************************************************\n     * initialize internal params based on data in gf (globalflags struct filled\n     * in by calling program)\n     *\n     * OUTLINE:\n     *\n     * We first have some complex code to determine bitrate, output samplerate\n     * and mode. It is complicated by the fact that we allow the user to set\n     * some or all of these parameters, and need to determine best possible\n     * values for the rest of them:\n     *\n     * 1. set some CPU related flags 2. check if we are mono.mono, stereo.mono\n     * or stereo.stereo 3. compute bitrate and output samplerate: user may have\n     * set compression ratio user may have set a bitrate user may have set a\n     * output samplerate 4. set some options which depend on output samplerate\n     * 5. compute the actual compression ratio 6. set mode based on compression\n     * ratio\n     *\n     * The remaining code is much simpler - it just sets options based on the\n     * mode & compression ratio:\n     *\n     * set allow_diff_short based on mode select lowpass filter based on\n     * compression ratio & mode set the bitrate index, and min/max bitrates for\n     * VBR modes disable VBR tag if it is not appropriate initialize the\n     * bitstream initialize scalefac_band data set sideinfo_len (based on\n     * channels, CRC, out_samplerate) write an id3v2 tag into the bitstream\n     * write VBR tag into the bitstream set mpeg1/2 flag estimate the number of\n     * frames (based on a lot of data)\n     *\n     * now we set more flags: nspsytune: see code VBR modes see code CBR/ABR see\n     * code\n     *\n     * Finally, we set the algorithm flags based on the gfp.quality value\n     * lame_init_qval(gfp);\n     *\n     ********************************************************************/\n    this.lame_init_params = function (gfp) {\n        var gfc = gfp.internal_flags;\n\n        gfc.Class_ID = 0;\n        if (gfc.ATH == null)\n            gfc.ATH = new ATH();\n        if (gfc.PSY == null)\n            gfc.PSY = new PSY();\n        if (gfc.rgdata == null)\n            gfc.rgdata = new ReplayGain();\n\n        gfc.channels_in = gfp.num_channels;\n        if (gfc.channels_in == 1)\n            gfp.mode = MPEGMode.MONO;\n        gfc.channels_out = (gfp.mode == MPEGMode.MONO) ? 1 : 2;\n        gfc.mode_ext = Encoder.MPG_MD_MS_LR;\n        if (gfp.mode == MPEGMode.MONO)\n            gfp.force_ms = false;\n        /*\n         * don't allow forced mid/side stereo for mono output\n         */\n\n        if (gfp.VBR == VbrMode.vbr_off && gfp.VBR_mean_bitrate_kbps != 128\n            && gfp.brate == 0)\n            gfp.brate = gfp.VBR_mean_bitrate_kbps;\n\n        if (gfp.VBR == VbrMode.vbr_off || gfp.VBR == VbrMode.vbr_mtrh\n            || gfp.VBR == VbrMode.vbr_mt) {\n            /* these modes can handle free format condition */\n        } else {\n            gfp.free_format = false;\n            /* mode can't be mixed with free format */\n        }\n\n        if (gfp.VBR == VbrMode.vbr_off && gfp.brate == 0) {\n            /* no bitrate or compression ratio specified, use 11.025 */\n            if (BitStream.EQ(gfp.compression_ratio, 0))\n                gfp.compression_ratio = 11.025;\n            /*\n             * rate to compress a CD down to exactly 128000 bps\n             */\n        }\n\n        /* find bitrate if user specify a compression ratio */\n        if (gfp.VBR == VbrMode.vbr_off && gfp.compression_ratio > 0) {\n\n            if (gfp.out_samplerate == 0)\n                gfp.out_samplerate = map2MP3Frequency((int)(0.97 * gfp.in_samplerate));\n            /*\n             * round up with a margin of 3 %\n             */\n\n            /*\n             * choose a bitrate for the output samplerate which achieves\n             * specified compression ratio\n             */\n            gfp.brate = 0 | (gfp.out_samplerate * 16 * gfc.channels_out / (1.e3 * gfp.compression_ratio));\n\n            /* we need the version for the bitrate table look up */\n            gfc.samplerate_index = SmpFrqIndex(gfp.out_samplerate, gfp);\n\n            if (!gfp.free_format) /*\n             * for non Free Format find the nearest allowed\n             * bitrate\n             */\n                gfp.brate = FindNearestBitrate(gfp.brate, gfp.version,\n                    gfp.out_samplerate);\n        }\n\n        if (gfp.out_samplerate != 0) {\n            if (gfp.out_samplerate < 16000) {\n                gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps,\n                    8);\n                gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps,\n                    64);\n            } else if (gfp.out_samplerate < 32000) {\n                gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps,\n                    8);\n                gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps,\n                    160);\n            } else {\n                gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps,\n                    32);\n                gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps,\n                    320);\n            }\n        }\n\n        /****************************************************************/\n        /* if a filter has not been enabled, see if we should add one: */\n        /****************************************************************/\n        if (gfp.lowpassfreq == 0) {\n            var lowpass = 16000.;\n\n            switch (gfp.VBR) {\n                case VbrMode.vbr_off:\n                {\n                    var lh = new LowPassHighPass();\n                    optimum_bandwidth(lh, gfp.brate);\n                    lowpass = lh.lowerlimit;\n                    break;\n                }\n                case VbrMode.vbr_abr:\n                {\n                    var lh = new LowPassHighPass();\n                    optimum_bandwidth(lh, gfp.VBR_mean_bitrate_kbps);\n                    lowpass = lh.lowerlimit;\n                    break;\n                }\n                case VbrMode.vbr_rh:\n                {\n                    var x = [19500, 19000, 18600, 18000, 17500, 16000,\n                        15600, 14900, 12500, 10000, 3950];\n                    if (0 <= gfp.VBR_q && gfp.VBR_q <= 9) {\n                        var a = x[gfp.VBR_q], b = x[gfp.VBR_q + 1], m = gfp.VBR_q_frac;\n                        lowpass = linear_int(a, b, m);\n                    } else {\n                        lowpass = 19500;\n                    }\n                    break;\n                }\n                default:\n                {\n                    var x = [19500, 19000, 18500, 18000, 17500, 16500,\n                        15500, 14500, 12500, 9500, 3950];\n                    if (0 <= gfp.VBR_q && gfp.VBR_q <= 9) {\n                        var a = x[gfp.VBR_q], b = x[gfp.VBR_q + 1], m = gfp.VBR_q_frac;\n                        lowpass = linear_int(a, b, m);\n                    } else {\n                        lowpass = 19500;\n                    }\n                }\n            }\n            if (gfp.mode == MPEGMode.MONO\n                && (gfp.VBR == VbrMode.vbr_off || gfp.VBR == VbrMode.vbr_abr))\n                lowpass *= 1.5;\n\n            gfp.lowpassfreq = lowpass | 0;\n        }\n\n        if (gfp.out_samplerate == 0) {\n            if (2 * gfp.lowpassfreq > gfp.in_samplerate) {\n                gfp.lowpassfreq = gfp.in_samplerate / 2;\n            }\n            gfp.out_samplerate = optimum_samplefreq(gfp.lowpassfreq | 0,\n                gfp.in_samplerate);\n        }\n\n        gfp.lowpassfreq = Math.min(20500, gfp.lowpassfreq);\n        gfp.lowpassfreq = Math.min(gfp.out_samplerate / 2, gfp.lowpassfreq);\n\n        if (gfp.VBR == VbrMode.vbr_off) {\n            gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                / (1.e3 * gfp.brate);\n        }\n        if (gfp.VBR == VbrMode.vbr_abr) {\n            gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                / (1.e3 * gfp.VBR_mean_bitrate_kbps);\n        }\n\n        /*\n         * do not compute ReplayGain values and do not find the peak sample if\n         * we can't store them\n         */\n        if (!gfp.bWriteVbrTag) {\n            gfp.findReplayGain = false;\n            gfp.decode_on_the_fly = false;\n            gfc.findPeakSample = false;\n        }\n        gfc.findReplayGain = gfp.findReplayGain;\n        gfc.decode_on_the_fly = gfp.decode_on_the_fly;\n\n        if (gfc.decode_on_the_fly)\n            gfc.findPeakSample = true;\n\n        if (gfc.findReplayGain) {\n            if (ga.InitGainAnalysis(gfc.rgdata, gfp.out_samplerate) == GainAnalysis.INIT_GAIN_ANALYSIS_ERROR) {\n                gfp.internal_flags = null;\n                return -6;\n            }\n        }\n\n        if (gfc.decode_on_the_fly && !gfp.decode_only) {\n            if (gfc.hip != null) {\n                mpglib.hip_decode_exit(gfc.hip);\n            }\n            gfc.hip = mpglib.hip_decode_init();\n        }\n\n        gfc.mode_gr = gfp.out_samplerate <= 24000 ? 1 : 2;\n        /*\n         * Number of granules per frame\n         */\n        gfp.framesize = 576 * gfc.mode_gr;\n        gfp.encoder_delay = Encoder.ENCDELAY;\n\n        gfc.resample_ratio = gfp.in_samplerate / gfp.out_samplerate;\n\n        /**\n         * <PRE>\n         *  sample freq       bitrate     compression ratio\n         *     [kHz]      [kbps/channel]   for 16 bit input\n         *     44.1            56               12.6\n         *     44.1            64               11.025\n         *     44.1            80                8.82\n         *     22.05           24               14.7\n         *     22.05           32               11.025\n         *     22.05           40                8.82\n         *     16              16               16.0\n         *     16              24               10.667\n         * </PRE>\n         */\n        /**\n         * <PRE>\n         *  For VBR, take a guess at the compression_ratio.\n         *  For example:\n         *\n         *    VBR_q    compression     like\n         *     -        4.4         320 kbps/44 kHz\n         *   0...1      5.5         256 kbps/44 kHz\n         *     2        7.3         192 kbps/44 kHz\n         *     4        8.8         160 kbps/44 kHz\n         *     6       11           128 kbps/44 kHz\n         *     9       14.7          96 kbps\n         *\n         *  for lower bitrates, downsample with --resample\n         * </PRE>\n         */\n        switch (gfp.VBR) {\n            case VbrMode.vbr_mt:\n            case VbrMode.vbr_rh:\n            case VbrMode.vbr_mtrh:\n            {\n                /* numbers are a bit strange, but they determine the lowpass value */\n                var cmp = [5.7, 6.5, 7.3, 8.2, 10, 11.9, 13, 14,\n                    15, 16.5];\n                gfp.compression_ratio = cmp[gfp.VBR_q];\n            }\n                break;\n            case VbrMode.vbr_abr:\n                gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                    / (1.e3 * gfp.VBR_mean_bitrate_kbps);\n                break;\n            default:\n                gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                    / (1.e3 * gfp.brate);\n                break;\n        }\n\n        /*\n         * mode = -1 (not set by user) or mode = MONO (because of only 1 input\n         * channel). If mode has not been set, then select J-STEREO\n         */\n        if (gfp.mode == MPEGMode.NOT_SET) {\n            gfp.mode = MPEGMode.JOINT_STEREO;\n        }\n\n        /* apply user driven high pass filter */\n        if (gfp.highpassfreq > 0) {\n            gfc.highpass1 = 2. * gfp.highpassfreq;\n\n            if (gfp.highpasswidth >= 0)\n                gfc.highpass2 = 2. * (gfp.highpassfreq + gfp.highpasswidth);\n            else\n            /* 0% above on default */\n                gfc.highpass2 = (1 + 0.00) * 2. * gfp.highpassfreq;\n\n            gfc.highpass1 /= gfp.out_samplerate;\n            gfc.highpass2 /= gfp.out_samplerate;\n        } else {\n            gfc.highpass1 = 0;\n            gfc.highpass2 = 0;\n        }\n        /* apply user driven low pass filter */\n        if (gfp.lowpassfreq > 0) {\n            gfc.lowpass2 = 2. * gfp.lowpassfreq;\n            if (gfp.lowpasswidth >= 0) {\n                gfc.lowpass1 = 2. * (gfp.lowpassfreq - gfp.lowpasswidth);\n                if (gfc.lowpass1 < 0) /* has to be >= 0 */\n                    gfc.lowpass1 = 0;\n            } else { /* 0% below on default */\n                gfc.lowpass1 = (1 - 0.00) * 2. * gfp.lowpassfreq;\n            }\n            gfc.lowpass1 /= gfp.out_samplerate;\n            gfc.lowpass2 /= gfp.out_samplerate;\n        } else {\n            gfc.lowpass1 = 0;\n            gfc.lowpass2 = 0;\n        }\n\n        /**********************************************************************/\n        /* compute info needed for polyphase filter (filter type==0, default) */\n        /**********************************************************************/\n        lame_init_params_ppflt(gfp);\n        /*******************************************************\n         * samplerate and bitrate index\n         *******************************************************/\n        gfc.samplerate_index = SmpFrqIndex(gfp.out_samplerate, gfp);\n        if (gfc.samplerate_index < 0) {\n            gfp.internal_flags = null;\n            return -1;\n        }\n\n        if (gfp.VBR == VbrMode.vbr_off) {\n            if (gfp.free_format) {\n                gfc.bitrate_index = 0;\n            } else {\n                gfp.brate = FindNearestBitrate(gfp.brate, gfp.version,\n                    gfp.out_samplerate);\n                gfc.bitrate_index = BitrateIndex(gfp.brate, gfp.version,\n                    gfp.out_samplerate);\n                if (gfc.bitrate_index <= 0) {\n                    gfp.internal_flags = null;\n                    return -1;\n                }\n            }\n        } else {\n            gfc.bitrate_index = 1;\n        }\n\n        /* for CBR, we will write an \"info\" tag. */\n\n        if (gfp.analysis)\n            gfp.bWriteVbrTag = false;\n\n        /* some file options not allowed if output is: not specified or stdout */\n        if (gfc.pinfo != null)\n            gfp.bWriteVbrTag = false;\n        /* disable Xing VBR tag */\n\n        bs.init_bit_stream_w(gfc);\n\n        var j = gfc.samplerate_index + (3 * gfp.version) + 6\n            * (gfp.out_samplerate < 16000 ? 1 : 0);\n        for (var i = 0; i < Encoder.SBMAX_l + 1; i++)\n            gfc.scalefac_band.l[i] = qupvt.sfBandIndex[j].l[i];\n\n        for (var i = 0; i < Encoder.PSFB21 + 1; i++) {\n            var size = (gfc.scalefac_band.l[22] - gfc.scalefac_band.l[21])\n                / Encoder.PSFB21;\n            var start = gfc.scalefac_band.l[21] + i * size;\n            gfc.scalefac_band.psfb21[i] = start;\n        }\n        gfc.scalefac_band.psfb21[Encoder.PSFB21] = 576;\n\n        for (var i = 0; i < Encoder.SBMAX_s + 1; i++)\n            gfc.scalefac_band.s[i] = qupvt.sfBandIndex[j].s[i];\n\n        for (var i = 0; i < Encoder.PSFB12 + 1; i++) {\n            var size = (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12])\n                / Encoder.PSFB12;\n            var start = gfc.scalefac_band.s[12] + i * size;\n            gfc.scalefac_band.psfb12[i] = start;\n        }\n        gfc.scalefac_band.psfb12[Encoder.PSFB12] = 192;\n        /* determine the mean bitrate for main data */\n        if (gfp.version == 1) /* MPEG 1 */\n            gfc.sideinfo_len = (gfc.channels_out == 1) ? 4 + 17 : 4 + 32;\n        else\n        /* MPEG 2 */\n            gfc.sideinfo_len = (gfc.channels_out == 1) ? 4 + 9 : 4 + 17;\n\n        if (gfp.error_protection)\n            gfc.sideinfo_len += 2;\n\n        lame_init_bitstream(gfp);\n\n        gfc.Class_ID = LAME_ID;\n\n        {\n            var k;\n\n            for (k = 0; k < 19; k++)\n                gfc.nsPsy.pefirbuf[k] = 700 * gfc.mode_gr * gfc.channels_out;\n\n            if (gfp.ATHtype == -1)\n                gfp.ATHtype = 4;\n        }\n        assert(gfp.VBR_q <= 9);\n        assert(gfp.VBR_q >= 0);\n\n        switch (gfp.VBR) {\n\n            case VbrMode.vbr_mt:\n                gfp.VBR = VbrMode.vbr_mtrh;\n            //$FALL-THROUGH$\n            case VbrMode.vbr_mtrh:\n            {\n                if (gfp.useTemporal == null) {\n                    gfp.useTemporal = false;\n                    /* off by default for this VBR mode */\n                }\n\n                p.apply_preset(gfp, 500 - (gfp.VBR_q * 10), 0);\n                /**\n                 * <PRE>\n                 *   The newer VBR code supports only a limited\n                 *     subset of quality levels:\n                 *     9-5=5 are the same, uses x^3/4 quantization\n                 *   4-0=0 are the same  5 plus best huffman divide code\n                 * </PRE>\n                 */\n                if (gfp.quality < 0)\n                    gfp.quality = LAME_DEFAULT_QUALITY;\n                if (gfp.quality < 5)\n                    gfp.quality = 0;\n                if (gfp.quality > 5)\n                    gfp.quality = 5;\n\n                gfc.PSY.mask_adjust = gfp.maskingadjust;\n                gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\n\n                /*\n                 * sfb21 extra only with MPEG-1 at higher sampling rates\n                 */\n                if (gfp.experimentalY)\n                    gfc.sfb21_extra = false;\n                else\n                    gfc.sfb21_extra = (gfp.out_samplerate > 44000);\n\n                gfc.iteration_loop = new VBRNewIterationLoop(qu);\n                break;\n\n            }\n            case VbrMode.vbr_rh:\n            {\n\n                p.apply_preset(gfp, 500 - (gfp.VBR_q * 10), 0);\n\n                gfc.PSY.mask_adjust = gfp.maskingadjust;\n                gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\n\n                /*\n                 * sfb21 extra only with MPEG-1 at higher sampling rates\n                 */\n                if (gfp.experimentalY)\n                    gfc.sfb21_extra = false;\n                else\n                    gfc.sfb21_extra = (gfp.out_samplerate > 44000);\n\n                /*\n                 * VBR needs at least the output of GPSYCHO, so we have to garantee\n                 * that by setting a minimum quality level, actually level 6 does\n                 * it. down to level 6\n                 */\n                if (gfp.quality > 6)\n                    gfp.quality = 6;\n\n                if (gfp.quality < 0)\n                    gfp.quality = LAME_DEFAULT_QUALITY;\n\n                gfc.iteration_loop = new VBROldIterationLoop(qu);\n                break;\n            }\n\n            default: /* cbr/abr */\n            {\n                var vbrmode;\n\n                /*\n                 * no sfb21 extra with CBR code\n                 */\n                gfc.sfb21_extra = false;\n\n                if (gfp.quality < 0)\n                    gfp.quality = LAME_DEFAULT_QUALITY;\n\n                vbrmode = gfp.VBR;\n                if (vbrmode == VbrMode.vbr_off)\n                    gfp.VBR_mean_bitrate_kbps = gfp.brate;\n                /* second, set parameters depending on bitrate */\n                p.apply_preset(gfp, gfp.VBR_mean_bitrate_kbps, 0);\n                gfp.VBR = vbrmode;\n\n                gfc.PSY.mask_adjust = gfp.maskingadjust;\n                gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\n\n                if (vbrmode == VbrMode.vbr_off) {\n                    gfc.iteration_loop = new CBRNewIterationLoop(qu);\n                } else {\n                    gfc.iteration_loop = new ABRIterationLoop(qu);\n                }\n                break;\n            }\n        }\n        assert(gfp.scale >= 0);\n        /* initialize default values common for all modes */\n\n        if (gfp.VBR != VbrMode.vbr_off) { /* choose a min/max bitrate for VBR */\n            /* if the user didn't specify VBR_max_bitrate: */\n            gfc.VBR_min_bitrate = 1;\n            /*\n             * default: allow 8 kbps (MPEG-2) or 32 kbps (MPEG-1)\n             */\n            gfc.VBR_max_bitrate = 14;\n            /*\n             * default: allow 160 kbps (MPEG-2) or 320 kbps (MPEG-1)\n             */\n            if (gfp.out_samplerate < 16000)\n                gfc.VBR_max_bitrate = 8;\n            /* default: allow 64 kbps (MPEG-2.5) */\n            if (gfp.VBR_min_bitrate_kbps != 0) {\n                gfp.VBR_min_bitrate_kbps = FindNearestBitrate(\n                    gfp.VBR_min_bitrate_kbps, gfp.version,\n                    gfp.out_samplerate);\n                gfc.VBR_min_bitrate = BitrateIndex(gfp.VBR_min_bitrate_kbps,\n                    gfp.version, gfp.out_samplerate);\n                if (gfc.VBR_min_bitrate < 0)\n                    return -1;\n            }\n            if (gfp.VBR_max_bitrate_kbps != 0) {\n                gfp.VBR_max_bitrate_kbps = FindNearestBitrate(\n                    gfp.VBR_max_bitrate_kbps, gfp.version,\n                    gfp.out_samplerate);\n                gfc.VBR_max_bitrate = BitrateIndex(gfp.VBR_max_bitrate_kbps,\n                    gfp.version, gfp.out_samplerate);\n                if (gfc.VBR_max_bitrate < 0)\n                    return -1;\n            }\n            gfp.VBR_min_bitrate_kbps = Tables.bitrate_table[gfp.version][gfc.VBR_min_bitrate];\n            gfp.VBR_max_bitrate_kbps = Tables.bitrate_table[gfp.version][gfc.VBR_max_bitrate];\n            gfp.VBR_mean_bitrate_kbps = Math.min(\n                Tables.bitrate_table[gfp.version][gfc.VBR_max_bitrate],\n                gfp.VBR_mean_bitrate_kbps);\n            gfp.VBR_mean_bitrate_kbps = Math.max(\n                Tables.bitrate_table[gfp.version][gfc.VBR_min_bitrate],\n                gfp.VBR_mean_bitrate_kbps);\n        }\n\n        /* just another daily changing developer switch */\n        if (gfp.tune) {\n            gfc.PSY.mask_adjust += gfp.tune_value_a;\n            gfc.PSY.mask_adjust_short += gfp.tune_value_a;\n        }\n\n        /* initialize internal qval settings */\n        lame_init_qval(gfp);\n        assert(gfp.scale >= 0);\n        /*\n         * automatic ATH adjustment on\n         */\n        if (gfp.athaa_type < 0)\n            gfc.ATH.useAdjust = 3;\n        else\n            gfc.ATH.useAdjust = gfp.athaa_type;\n\n        /* initialize internal adaptive ATH settings -jd */\n        gfc.ATH.aaSensitivityP = Math.pow(10.0, gfp.athaa_sensitivity\n            / -10.0);\n\n        if (gfp.short_blocks == null) {\n            gfp.short_blocks = ShortBlock.short_block_allowed;\n        }\n\n        /*\n         * Note Jan/2003: Many hardware decoders cannot handle short blocks in\n         * regular stereo mode unless they are coupled (same type in both\n         * channels) it is a rare event (1 frame per min. or so) that LAME would\n         * use uncoupled short blocks, so lets turn them off until we decide how\n         * to handle this. No other encoders allow uncoupled short blocks, even\n         * though it is in the standard.\n         */\n        /*\n         * rh 20040217: coupling makes no sense for mono and dual-mono streams\n         */\n        if (gfp.short_blocks == ShortBlock.short_block_allowed\n            && (gfp.mode == MPEGMode.JOINT_STEREO || gfp.mode == MPEGMode.STEREO)) {\n            gfp.short_blocks = ShortBlock.short_block_coupled;\n        }\n\n        if (gfp.quant_comp < 0)\n            gfp.quant_comp = 1;\n        if (gfp.quant_comp_short < 0)\n            gfp.quant_comp_short = 0;\n\n        if (gfp.msfix < 0)\n            gfp.msfix = 0;\n\n        /* select psychoacoustic model */\n        gfp.exp_nspsytune = gfp.exp_nspsytune | 1;\n\n        if (gfp.internal_flags.nsPsy.attackthre < 0)\n            gfp.internal_flags.nsPsy.attackthre = PsyModel.NSATTACKTHRE;\n        if (gfp.internal_flags.nsPsy.attackthre_s < 0)\n            gfp.internal_flags.nsPsy.attackthre_s = PsyModel.NSATTACKTHRE_S;\n\n        assert(gfp.scale >= 0);\n\n        if (gfp.scale < 0)\n            gfp.scale = 1;\n\n        if (gfp.ATHtype < 0)\n            gfp.ATHtype = 4;\n\n        if (gfp.ATHcurve < 0)\n            gfp.ATHcurve = 4;\n\n        if (gfp.athaa_loudapprox < 0)\n            gfp.athaa_loudapprox = 2;\n\n        if (gfp.interChRatio < 0)\n            gfp.interChRatio = 0;\n\n        if (gfp.useTemporal == null)\n            gfp.useTemporal = true;\n        /* on by default */\n\n        /*\n         * padding method as described in\n         * \"MPEG-Layer3 / Bitstream Syntax and Decoding\" by Martin Sieler, Ralph\n         * Sperschneider\n         *\n         * note: there is no padding for the very first frame\n         *\n         * Robert Hegemann 2000-06-22\n         */\n        gfc.slot_lag = gfc.frac_SpF = 0;\n        if (gfp.VBR == VbrMode.vbr_off)\n            gfc.slot_lag = gfc.frac_SpF = (((gfp.version + 1) * 72000 * gfp.brate) % gfp.out_samplerate) | 0;\n\n        qupvt.iteration_init(gfp);\n        psy.psymodel_init(gfp);\n        assert(gfp.scale >= 0);\n        return 0;\n    }\n\n    function update_inbuffer_size(gfc, nsamples) {\n        if (gfc.in_buffer_0 == null || gfc.in_buffer_nsamples < nsamples) {\n            gfc.in_buffer_0 = new_float(nsamples);\n            gfc.in_buffer_1 = new_float(nsamples);\n            gfc.in_buffer_nsamples = nsamples;\n        }\n    }\n\n    this.lame_encode_flush = function (gfp, mp3buffer, mp3bufferPos, mp3buffer_size) {\n        var gfc = gfp.internal_flags;\n        var buffer = new_short_n([2, 1152]);\n        var imp3 = 0, mp3count, mp3buffer_size_remaining;\n\n        /*\n         * we always add POSTDELAY=288 padding to make sure granule with real\n         * data can be complety decoded (because of 50% overlap with next\n         * granule\n         */\n        var end_padding;\n        var frames_left;\n        var samples_to_encode = gfc.mf_samples_to_encode - Encoder.POSTDELAY;\n        var mf_needed = calcNeeded(gfp);\n\n        /* Was flush already called? */\n        if (gfc.mf_samples_to_encode < 1) {\n            return 0;\n        }\n        mp3count = 0;\n\n        if (gfp.in_samplerate != gfp.out_samplerate) {\n            /*\n             * delay due to resampling; needs to be fixed, if resampling code\n             * gets changed\n             */\n            samples_to_encode += 16. * gfp.out_samplerate / gfp.in_samplerate;\n        }\n        end_padding = gfp.framesize - (samples_to_encode % gfp.framesize);\n        if (end_padding < 576)\n            end_padding += gfp.framesize;\n        gfp.encoder_padding = end_padding;\n\n        frames_left = (samples_to_encode + end_padding) / gfp.framesize;\n\n        /*\n         * send in a frame of 0 padding until all internal sample buffers are\n         * flushed\n         */\n        while (frames_left > 0 && imp3 >= 0) {\n            var bunch = mf_needed - gfc.mf_size;\n            var frame_num = gfp.frameNum;\n\n            bunch *= gfp.in_samplerate;\n            bunch /= gfp.out_samplerate;\n            if (bunch > 1152)\n                bunch = 1152;\n            if (bunch < 1)\n                bunch = 1;\n\n            mp3buffer_size_remaining = mp3buffer_size - mp3count;\n\n            /* if user specifed buffer size = 0, dont check size */\n            if (mp3buffer_size == 0)\n                mp3buffer_size_remaining = 0;\n\n            imp3 = this.lame_encode_buffer(gfp, buffer[0], buffer[1], bunch,\n                mp3buffer, mp3bufferPos, mp3buffer_size_remaining);\n\n            mp3bufferPos += imp3;\n            mp3count += imp3;\n            frames_left -= (frame_num != gfp.frameNum) ? 1 : 0;\n        }\n        /*\n         * Set gfc.mf_samples_to_encode to 0, so we may detect and break loops\n         * calling it more than once in a row.\n         */\n        gfc.mf_samples_to_encode = 0;\n\n        if (imp3 < 0) {\n            /* some type of fatal error */\n            return imp3;\n        }\n\n        mp3buffer_size_remaining = mp3buffer_size - mp3count;\n        /* if user specifed buffer size = 0, dont check size */\n        if (mp3buffer_size == 0)\n            mp3buffer_size_remaining = 0;\n\n        /* mp3 related stuff. bit buffer might still contain some mp3 data */\n        bs.flush_bitstream(gfp);\n        imp3 = bs.copy_buffer(gfc, mp3buffer, mp3bufferPos,\n            mp3buffer_size_remaining, 1);\n        if (imp3 < 0) {\n            /* some type of fatal error */\n            return imp3;\n        }\n        mp3bufferPos += imp3;\n        mp3count += imp3;\n        mp3buffer_size_remaining = mp3buffer_size - mp3count;\n        /* if user specifed buffer size = 0, dont check size */\n        if (mp3buffer_size == 0)\n            mp3buffer_size_remaining = 0;\n\n        if (gfp.write_id3tag_automatic) {\n            /* write a id3 tag to the bitstream */\n            id3.id3tag_write_v1(gfp);\n\n            imp3 = bs.copy_buffer(gfc, mp3buffer, mp3bufferPos,\n                mp3buffer_size_remaining, 0);\n\n            if (imp3 < 0) {\n                return imp3;\n            }\n            mp3count += imp3;\n        }\n        return mp3count;\n    };\n\n    this.lame_encode_buffer = function (gfp, buffer_l, buffer_r, nsamples, mp3buf, mp3bufPos, mp3buf_size) {\n        var gfc = gfp.internal_flags;\n        var in_buffer = [null, null];\n\n        if (gfc.Class_ID != LAME_ID)\n            return -3;\n\n        if (nsamples == 0)\n            return 0;\n\n        update_inbuffer_size(gfc, nsamples);\n\n        in_buffer[0] = gfc.in_buffer_0;\n        in_buffer[1] = gfc.in_buffer_1;\n\n        /* make a copy of input buffer, changing type to sample_t */\n        for (var i = 0; i < nsamples; i++) {\n            in_buffer[0][i] = buffer_l[i];\n            if (gfc.channels_in > 1)\n                in_buffer[1][i] = buffer_r[i];\n        }\n\n        return lame_encode_buffer_sample(gfp, in_buffer[0], in_buffer[1],\n            nsamples, mp3buf, mp3bufPos, mp3buf_size);\n    }\n\n    function calcNeeded(gfp) {\n        var mf_needed = Encoder.BLKSIZE + gfp.framesize - Encoder.FFTOFFSET;\n        /*\n         * amount needed for FFT\n         */\n        mf_needed = Math.max(mf_needed, 512 + gfp.framesize - 32);\n        assert(LameInternalFlags.MFSIZE >= mf_needed);\n\n        return mf_needed;\n    }\n\n    function lame_encode_buffer_sample(gfp, buffer_l, buffer_r, nsamples, mp3buf, mp3bufPos, mp3buf_size) {\n        var gfc = gfp.internal_flags;\n        var mp3size = 0, ret, i, ch, mf_needed;\n        var mp3out;\n        var mfbuf = [null, null];\n        var in_buffer = [null, null];\n\n        if (gfc.Class_ID != LAME_ID)\n            return -3;\n\n        if (nsamples == 0)\n            return 0;\n\n        /* copy out any tags that may have been written into bitstream */\n        mp3out = bs.copy_buffer(gfc, mp3buf, mp3bufPos, mp3buf_size, 0);\n        if (mp3out < 0)\n            return mp3out;\n        /* not enough buffer space */\n        mp3bufPos += mp3out;\n        mp3size += mp3out;\n\n        in_buffer[0] = buffer_l;\n        in_buffer[1] = buffer_r;\n\n        /* Apply user defined re-scaling */\n\n        /* user selected scaling of the samples */\n        if (BitStream.NEQ(gfp.scale, 0) && BitStream.NEQ(gfp.scale, 1.0)) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[0][i] *= gfp.scale;\n                if (gfc.channels_out == 2)\n                    in_buffer[1][i] *= gfp.scale;\n            }\n        }\n\n        /* user selected scaling of the channel 0 (left) samples */\n        if (BitStream.NEQ(gfp.scale_left, 0)\n            && BitStream.NEQ(gfp.scale_left, 1.0)) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[0][i] *= gfp.scale_left;\n            }\n        }\n\n        /* user selected scaling of the channel 1 (right) samples */\n        if (BitStream.NEQ(gfp.scale_right, 0)\n            && BitStream.NEQ(gfp.scale_right, 1.0)) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[1][i] *= gfp.scale_right;\n            }\n        }\n\n        /* Downsample to Mono if 2 channels in and 1 channel out */\n        if (gfp.num_channels == 2 && gfc.channels_out == 1) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[0][i] = 0.5 * ( in_buffer[0][i] + in_buffer[1][i]);\n                in_buffer[1][i] = 0.0;\n            }\n        }\n\n        mf_needed = calcNeeded(gfp);\n\n        mfbuf[0] = gfc.mfbuf[0];\n        mfbuf[1] = gfc.mfbuf[1];\n\n        var in_bufferPos = 0;\n        while (nsamples > 0) {\n            var in_buffer_ptr = [null, null];\n            var n_in = 0;\n            /* number of input samples processed with fill_buffer */\n            var n_out = 0;\n            /* number of samples output with fill_buffer */\n            /* n_in <> n_out if we are resampling */\n\n            in_buffer_ptr[0] = in_buffer[0];\n            in_buffer_ptr[1] = in_buffer[1];\n            /* copy in new samples into mfbuf, with resampling */\n            var inOut = new InOut();\n            fill_buffer(gfp, mfbuf, in_buffer_ptr, in_bufferPos, nsamples,\n                inOut);\n            n_in = inOut.n_in;\n            n_out = inOut.n_out;\n\n            /* compute ReplayGain of resampled input if requested */\n            if (gfc.findReplayGain && !gfc.decode_on_the_fly)\n                if (ga.AnalyzeSamples(gfc.rgdata, mfbuf[0], gfc.mf_size,\n                        mfbuf[1], gfc.mf_size, n_out, gfc.channels_out) == GainAnalysis.GAIN_ANALYSIS_ERROR)\n                    return -6;\n\n            /* update in_buffer counters */\n            nsamples -= n_in;\n            in_bufferPos += n_in;\n            if (gfc.channels_out == 2)\n                ;// in_bufferPos += n_in;\n\n            /* update mfbuf[] counters */\n            gfc.mf_size += n_out;\n            assert(gfc.mf_size <= LameInternalFlags.MFSIZE);\n\n            /*\n             * lame_encode_flush may have set gfc.mf_sample_to_encode to 0 so we\n             * have to reinitialize it here when that happened.\n             */\n            if (gfc.mf_samples_to_encode < 1) {\n                gfc.mf_samples_to_encode = Encoder.ENCDELAY + Encoder.POSTDELAY;\n            }\n            gfc.mf_samples_to_encode += n_out;\n\n            if (gfc.mf_size >= mf_needed) {\n                /* encode the frame. */\n                /* mp3buf = pointer to current location in buffer */\n                /* mp3buf_size = size of original mp3 output buffer */\n                /* = 0 if we should not worry about the */\n                /* buffer size because calling program is */\n                /* to lazy to compute it */\n                /* mp3size = size of data written to buffer so far */\n                /* mp3buf_size-mp3size = amount of space avalable */\n\n                var buf_size = mp3buf_size - mp3size;\n                if (mp3buf_size == 0)\n                    buf_size = 0;\n\n                ret = lame_encode_frame(gfp, mfbuf[0], mfbuf[1], mp3buf,\n                    mp3bufPos, buf_size);\n\n                if (ret < 0)\n                    return ret;\n                mp3bufPos += ret;\n                mp3size += ret;\n\n                /* shift out old samples */\n                gfc.mf_size -= gfp.framesize;\n                gfc.mf_samples_to_encode -= gfp.framesize;\n                for (ch = 0; ch < gfc.channels_out; ch++)\n                    for (i = 0; i < gfc.mf_size; i++)\n                        mfbuf[ch][i] = mfbuf[ch][i + gfp.framesize];\n            }\n        }\n        assert(nsamples == 0);\n\n        return mp3size;\n    }\n\n    function lame_encode_frame(gfp, inbuf_l, inbuf_r, mp3buf, mp3bufPos, mp3buf_size) {\n        var ret = self.enc.lame_encode_mp3_frame(gfp, inbuf_l, inbuf_r, mp3buf,\n            mp3bufPos, mp3buf_size);\n        gfp.frameNum++;\n        return ret;\n    }\n\n    function InOut() {\n        this.n_in = 0;\n        this.n_out = 0;\n    }\n\n\n    function NumUsed() {\n        this.num_used = 0;\n    }\n\n    /**\n     * Greatest common divisor.\n     * <p>\n     * Joint work of Euclid and M. Hendry\n     */\n    function gcd(i, j) {\n        return j != 0 ? gcd(j, i % j) : i;\n    }\n\n    /**\n     * Resampling via FIR filter, blackman window.\n     */\n    function blackman(x, fcn, l) {\n        /*\n         * This algorithm from: SIGNAL PROCESSING ALGORITHMS IN FORTRAN AND C\n         * S.D. Stearns and R.A. David, Prentice-Hall, 1992\n         */\n        var wcn = (Math.PI * fcn);\n\n        x /= l;\n        if (x < 0)\n            x = 0;\n        if (x > 1)\n            x = 1;\n        var x2 = x - .5;\n\n        var bkwn = 0.42 - 0.5 * Math.cos(2 * x * Math.PI) + 0.08 * Math.cos(4 * x * Math.PI);\n        if (Math.abs(x2) < 1e-9)\n            return (wcn / Math.PI);\n        else\n            return (bkwn * Math.sin(l * wcn * x2) / (Math.PI * l * x2));\n    }\n\n    function fill_buffer_resample(gfp, outbuf, outbufPos, desired_len, inbuf, in_bufferPos, len, num_used, ch) {\n        var gfc = gfp.internal_flags;\n        var i, j = 0, k;\n        /* number of convolution functions to pre-compute */\n        var bpc = gfp.out_samplerate\n            / gcd(gfp.out_samplerate, gfp.in_samplerate);\n        if (bpc > LameInternalFlags.BPC)\n            bpc = LameInternalFlags.BPC;\n\n        var intratio = (Math.abs(gfc.resample_ratio\n            - Math.floor(.5 + gfc.resample_ratio)) < .0001) ? 1 : 0;\n        var fcn = 1.00 / gfc.resample_ratio;\n        if (fcn > 1.00)\n            fcn = 1.00;\n        var filter_l = 31;\n        if (0 == filter_l % 2)\n            --filter_l;\n        /* must be odd */\n        filter_l += intratio;\n        /* unless resample_ratio=int, it must be even */\n\n        var BLACKSIZE = filter_l + 1;\n        /* size of data needed for FIR */\n\n        if (gfc.fill_buffer_resample_init == 0) {\n            gfc.inbuf_old[0] = new_float(BLACKSIZE);\n            gfc.inbuf_old[1] = new_float(BLACKSIZE);\n            for (i = 0; i <= 2 * bpc; ++i)\n                gfc.blackfilt[i] = new_float(BLACKSIZE);\n\n            gfc.itime[0] = 0;\n            gfc.itime[1] = 0;\n\n            /* precompute blackman filter coefficients */\n            for (j = 0; j <= 2 * bpc; j++) {\n                var sum = 0.;\n                var offset = (j - bpc) / (2. * bpc);\n                for (i = 0; i <= filter_l; i++)\n                    sum += gfc.blackfilt[j][i] = blackman(i - offset, fcn,\n                        filter_l);\n                for (i = 0; i <= filter_l; i++)\n                    gfc.blackfilt[j][i] /= sum;\n            }\n            gfc.fill_buffer_resample_init = 1;\n        }\n\n        var inbuf_old = gfc.inbuf_old[ch];\n\n        /* time of j'th element in inbuf = itime + j/ifreq; */\n        /* time of k'th element in outbuf = j/ofreq */\n        for (k = 0; k < desired_len; k++) {\n            var time0;\n            var joff;\n\n            time0 = k * gfc.resample_ratio;\n            /* time of k'th output sample */\n            j = 0 | Math.floor(time0 - gfc.itime[ch]);\n\n            /* check if we need more input data */\n            if ((filter_l + j - filter_l / 2) >= len)\n                break;\n\n            /* blackman filter. by default, window centered at j+.5(filter_l%2) */\n            /* but we want a window centered at time0. */\n            var offset = (time0 - gfc.itime[ch] - (j + .5 * (filter_l % 2)));\n            assert(Math.abs(offset) <= .501);\n\n            /* find the closest precomputed window for this offset: */\n            joff = 0 | Math.floor((offset * 2 * bpc) + bpc + .5);\n            var xvalue = 0.;\n            for (i = 0; i <= filter_l; ++i) {\n                var j2 = i + j - filter_l / 2;\n                var y;\n                assert(j2 < len);\n                assert(j2 + BLACKSIZE >= 0);\n                y = (j2 < 0) ? inbuf_old[BLACKSIZE + j2] : inbuf[in_bufferPos\n                + j2];\n                xvalue += y * gfc.blackfilt[joff][i];\n            }\n            outbuf[outbufPos + k] = xvalue;\n        }\n\n        /* k = number of samples added to outbuf */\n        /* last k sample used data from [j-filter_l/2,j+filter_l-filter_l/2] */\n\n        /* how many samples of input data were used: */\n        num_used.num_used = Math.min(len, filter_l + j - filter_l / 2);\n\n        /*\n         * adjust our input time counter. Incriment by the number of samples\n         * used, then normalize so that next output sample is at time 0, next\n         * input buffer is at time itime[ch]\n         */\n        gfc.itime[ch] += num_used.num_used - k * gfc.resample_ratio;\n\n        /* save the last BLACKSIZE samples into the inbuf_old buffer */\n        if (num_used.num_used >= BLACKSIZE) {\n            for (i = 0; i < BLACKSIZE; i++)\n                inbuf_old[i] = inbuf[in_bufferPos + num_used.num_used + i\n                - BLACKSIZE];\n        } else {\n            /* shift in num_used.num_used samples into inbuf_old */\n            var n_shift = BLACKSIZE - num_used.num_used;\n            /*\n             * number of samples to\n             * shift\n             */\n\n            /*\n             * shift n_shift samples by num_used.num_used, to make room for the\n             * num_used new samples\n             */\n            for (i = 0; i < n_shift; ++i)\n                inbuf_old[i] = inbuf_old[i + num_used.num_used];\n\n            /* shift in the num_used.num_used samples */\n            for (j = 0; i < BLACKSIZE; ++i, ++j)\n                inbuf_old[i] = inbuf[in_bufferPos + j];\n\n            assert(j == num_used.num_used);\n        }\n        return k;\n        /* return the number samples created at the new samplerate */\n    }\n\n    function fill_buffer(gfp, mfbuf, in_buffer, in_bufferPos, nsamples, io) {\n        var gfc = gfp.internal_flags;\n\n        /* copy in new samples into mfbuf, with resampling if necessary */\n        if ((gfc.resample_ratio < .9999) || (gfc.resample_ratio > 1.0001)) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                var numUsed = new NumUsed();\n                io.n_out = fill_buffer_resample(gfp, mfbuf[ch], gfc.mf_size,\n                    gfp.framesize, in_buffer[ch], in_bufferPos, nsamples,\n                    numUsed, ch);\n                io.n_in = numUsed.num_used;\n            }\n        } else {\n            io.n_out = Math.min(gfp.framesize, nsamples);\n            io.n_in = io.n_out;\n            for (var i = 0; i < io.n_out; ++i) {\n                mfbuf[0][gfc.mf_size + i] = in_buffer[0][in_bufferPos + i];\n                if (gfc.channels_out == 2)\n                    mfbuf[1][gfc.mf_size + i] = in_buffer[1][in_bufferPos + i];\n            }\n        }\n    }\n\n}\n\nmodule.exports = Lame;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/lamejs/src/js/Lame.js?");

/***/ }),

/***/ "../node_modules/lamejs/src/js/LameGlobalFlags.js":
/*!********************************************************!*\
  !*** ../node_modules/lamejs/src/js/LameGlobalFlags.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var MPEGMode = __webpack_require__(/*! ./MPEGMode.js */ \"../node_modules/lamejs/src/js/MPEGMode.js\");\n\nfunction LameGlobalFlags() {\n\n    this.class_id = 0;\n\n    /* input description */\n\n    /**\n     * number of samples. default=-1\n     */\n    this.num_samples = 0;\n    /**\n     * input number of channels. default=2\n     */\n    this.num_channels = 0;\n    /**\n     * input_samp_rate in Hz. default=44.1 kHz\n     */\n    this.in_samplerate = 0;\n    /**\n     * output_samp_rate. default: LAME picks best value at least not used for\n     * MP3 decoding: Remember 44.1 kHz MP3s and AC97\n     */\n    this.out_samplerate = 0;\n    /**\n     * scale input by this amount before encoding at least not used for MP3\n     * decoding\n     */\n    this.scale = 0.;\n    /**\n     * scale input of channel 0 (left) by this amount before encoding\n     */\n    this.scale_left = 0.;\n    /**\n     * scale input of channel 1 (right) by this amount before encoding\n     */\n    this.scale_right = 0.;\n\n    /* general control params */\n    /**\n     * collect data for a MP3 frame analyzer?\n     */\n    this.analysis = false;\n    /**\n     * add Xing VBR tag?\n     */\n    this.bWriteVbrTag = false;\n\n    /**\n     * use lame/mpglib to convert mp3 to wav\n     */\n    this.decode_only = false;\n    /**\n     * quality setting 0=best, 9=worst default=5\n     */\n    this.quality = 0;\n    /**\n     * see enum default = LAME picks best value\n     */\n    this.mode = MPEGMode.STEREO;\n    /**\n     * force M/S mode. requires mode=1\n     */\n    this.force_ms = false;\n    /**\n     * use free format? default=0\n     */\n    this.free_format = false;\n    /**\n     * find the RG value? default=0\n     */\n    this.findReplayGain = false;\n    /**\n     * decode on the fly? default=0\n     */\n    this.decode_on_the_fly = false;\n    /**\n     * 1 (default) writes ID3 tags, 0 not\n     */\n    this.write_id3tag_automatic = false;\n\n    /*\n     * set either brate>0 or compression_ratio>0, LAME will compute the value of\n     * the variable not set. Default is compression_ratio = 11.025\n     */\n    /**\n     * bitrate\n     */\n    this.brate = 0;\n    /**\n     * sizeof(wav file)/sizeof(mp3 file)\n     */\n    this.compression_ratio = 0.;\n\n    /* frame params */\n    /**\n     * mark as copyright. default=0\n     */\n    this.copyright = 0;\n    /**\n     * mark as original. default=1\n     */\n    this.original = 0;\n    /**\n     * the MP3 'private extension' bit. Meaningless\n     */\n    this.extension = 0;\n    /**\n     * Input PCM is emphased PCM (for instance from one of the rarely emphased\n     * CDs), it is STRONGLY not recommended to use this, because psycho does not\n     * take it into account, and last but not least many decoders don't care\n     * about these bits\n     */\n    this.emphasis = 0;\n    /**\n     * use 2 bytes per frame for a CRC checksum. default=0\n     */\n    this.error_protection = 0;\n    /**\n     * enforce ISO spec as much as possible\n     */\n    this.strict_ISO = false;\n\n    /**\n     * use bit reservoir?\n     */\n    this.disable_reservoir = false;\n\n    /* quantization/noise shaping */\n    this.quant_comp = 0;\n    this.quant_comp_short = 0;\n    this.experimentalY = false;\n    this.experimentalZ = 0;\n    this.exp_nspsytune = 0;\n\n    this.preset = 0;\n\n    /* VBR control */\n    this.VBR = null;\n    /**\n     * Range [0,...,1[\n     */\n    this.VBR_q_frac = 0.;\n    /**\n     * Range [0,...,9]\n     */\n    this.VBR_q = 0;\n    this.VBR_mean_bitrate_kbps = 0;\n    this.VBR_min_bitrate_kbps = 0;\n    this.VBR_max_bitrate_kbps = 0;\n    /**\n     * strictly enforce VBR_min_bitrate normaly, it will be violated for analog\n     * silence\n     */\n    this.VBR_hard_min = 0;\n\n    /* resampling and filtering */\n\n    /**\n     * freq in Hz. 0=lame choses. -1=no filter\n     */\n    this.lowpassfreq = 0;\n    /**\n     * freq in Hz. 0=lame choses. -1=no filter\n     */\n    this.highpassfreq = 0;\n    /**\n     * freq width of filter, in Hz (default=15%)\n     */\n    this.lowpasswidth = 0;\n    /**\n     * freq width of filter, in Hz (default=15%)\n     */\n    this.highpasswidth = 0;\n\n    /*\n     * psycho acoustics and other arguments which you should not change unless\n     * you know what you are doing\n     */\n\n    this.maskingadjust = 0.;\n    this.maskingadjust_short = 0.;\n    /**\n     * only use ATH\n     */\n    this.ATHonly = false;\n    /**\n     * only use ATH for short blocks\n     */\n    this.ATHshort = false;\n    /**\n     * disable ATH\n     */\n    this.noATH = false;\n    /**\n     * select ATH formula\n     */\n    this.ATHtype = 0;\n    /**\n     * change ATH formula 4 shape\n     */\n    this.ATHcurve = 0.;\n    /**\n     * lower ATH by this many db\n     */\n    this.ATHlower = 0.;\n    /**\n     * select ATH auto-adjust scheme\n     */\n    this.athaa_type = 0;\n    /**\n     * select ATH auto-adjust loudness calc\n     */\n    this.athaa_loudapprox = 0;\n    /**\n     * dB, tune active region of auto-level\n     */\n    this.athaa_sensitivity = 0.;\n    this.short_blocks = null;\n    /**\n     * use temporal masking effect\n     */\n    this.useTemporal = false;\n    this.interChRatio = 0.;\n    /**\n     * Naoki's adjustment of Mid/Side maskings\n     */\n    this.msfix = 0.;\n\n    /**\n     * 0 off, 1 on\n     */\n    this.tune = false;\n    /**\n     * used to pass values for debugging and stuff\n     */\n    this.tune_value_a = 0.;\n\n    /************************************************************************/\n    /* internal variables, do not set... */\n    /* provided because they may be of use to calling application */\n    /************************************************************************/\n\n    /**\n     * 0=MPEG-2/2.5 1=MPEG-1\n     */\n    this.version = 0;\n    this.encoder_delay = 0;\n    /**\n     * number of samples of padding appended to input\n     */\n    this.encoder_padding = 0;\n    this.framesize = 0;\n    /**\n     * number of frames encoded\n     */\n    this.frameNum = 0;\n    /**\n     * is this struct owned by calling program or lame?\n     */\n    this.lame_allocated_gfp = 0;\n    /**************************************************************************/\n    /* more internal variables are stored in this structure: */\n    /**************************************************************************/\n    this.internal_flags = null;\n}\n\nmodule.exports = LameGlobalFlags;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/lamejs/src/js/LameGlobalFlags.js?");

/***/ }),

/***/ "../node_modules/lamejs/src/js/LameInternalFlags.js":
/*!**********************************************************!*\
  !*** ../node_modules/lamejs/src/js/LameInternalFlags.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var common = __webpack_require__(/*! ./common.js */ \"../node_modules/lamejs/src/js/common.js\");\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar IIISideInfo = __webpack_require__(/*! ./IIISideInfo.js */ \"../node_modules/lamejs/src/js/IIISideInfo.js\");\nvar ScaleFac = __webpack_require__(/*! ./ScaleFac.js */ \"../node_modules/lamejs/src/js/ScaleFac.js\");\nvar NsPsy = __webpack_require__(/*! ./NsPsy.js */ \"../node_modules/lamejs/src/js/NsPsy.js\");\nvar VBRSeekInfo = __webpack_require__(/*! ./VBRSeekInfo.js */ \"../node_modules/lamejs/src/js/VBRSeekInfo.js\");\nvar III_psy_xmin = __webpack_require__(/*! ./III_psy_xmin.js */ \"../node_modules/lamejs/src/js/III_psy_xmin.js\");\nvar Encoder = __webpack_require__(/*! ./Encoder.js */ \"../node_modules/lamejs/src/js/Encoder.js\");\nvar L3Side = __webpack_require__(/*! ./L3Side.js */ \"../node_modules/lamejs/src/js/L3Side.js\");\n\n\nLameInternalFlags.MFSIZE = (3 * 1152 + Encoder.ENCDELAY - Encoder.MDCTDELAY);\nLameInternalFlags.MAX_HEADER_BUF = 256;\nLameInternalFlags.MAX_BITS_PER_CHANNEL = 4095;\nLameInternalFlags.MAX_BITS_PER_GRANULE = 7680;\nLameInternalFlags.BPC = 320;\n\nfunction LameInternalFlags() {\n    var MAX_HEADER_LEN = 40;\n\n\n    /********************************************************************\n     * internal variables NOT set by calling program, and should not be *\n     * modified by the calling program *\n     ********************************************************************/\n\n    /**\n     * Some remarks to the Class_ID field: The Class ID is an Identifier for a\n     * pointer to this struct. It is very unlikely that a pointer to\n     * lame_global_flags has the same 32 bits in it's structure (large and other\n     * special properties, for instance prime).\n     *\n     * To test that the structure is right and initialized, use: if ( gfc .\n     * Class_ID == LAME_ID ) ... Other remark: If you set a flag to 0 for uninit\n     * data and 1 for init data, the right test should be \"if (flag == 1)\" and\n     * NOT \"if (flag)\". Unintended modification of this element will be\n     * otherwise misinterpreted as an init.\n     */\n    this.Class_ID = 0;\n\n    this.lame_encode_frame_init = 0;\n    this.iteration_init_init = 0;\n    this.fill_buffer_resample_init = 0;\n\n    //public float mfbuf[][] = new float[2][MFSIZE];\n    this.mfbuf = new_float_n([2, LameInternalFlags.MFSIZE]);\n\n    /**\n     * granules per frame\n     */\n    this.mode_gr = 0;\n    /**\n     * number of channels in the input data stream (PCM or decoded PCM)\n     */\n    this.channels_in = 0;\n    /**\n     * number of channels in the output data stream (not used for decoding)\n     */\n    this.channels_out = 0;\n    /**\n     * input_samp_rate/output_samp_rate\n     */\n        //public double resample_ratio;\n    this.resample_ratio = 0.;\n\n    this.mf_samples_to_encode = 0;\n    this.mf_size = 0;\n    /**\n     * min bitrate index\n     */\n    this.VBR_min_bitrate = 0;\n    /**\n     * max bitrate index\n     */\n    this.VBR_max_bitrate = 0;\n    this.bitrate_index = 0;\n    this.samplerate_index = 0;\n    this.mode_ext = 0;\n\n    /* lowpass and highpass filter control */\n    /**\n     * normalized frequency bounds of passband\n     */\n    this.lowpass1 = 0.;\n    this.lowpass2 = 0.;\n    /**\n     * normalized frequency bounds of passband\n     */\n    this.highpass1 = 0.;\n    this.highpass2 = 0.;\n\n    /**\n     * 0 = none 1 = ISO AAC model 2 = allow scalefac_select=1\n     */\n    this.noise_shaping = 0;\n\n    /**\n     * 0 = ISO model: amplify all distorted bands<BR>\n     * 1 = amplify within 50% of max (on db scale)<BR>\n     * 2 = amplify only most distorted band<BR>\n     * 3 = method 1 and refine with method 2<BR>\n     */\n    this.noise_shaping_amp = 0;\n    /**\n     * 0 = no substep<BR>\n     * 1 = use substep shaping at last step(VBR only)<BR>\n     * (not implemented yet)<BR>\n     * 2 = use substep inside loop<BR>\n     * 3 = use substep inside loop and last step<BR>\n     */\n    this.substep_shaping = 0;\n\n    /**\n     * 1 = gpsycho. 0 = none\n     */\n    this.psymodel = 0;\n    /**\n     * 0 = stop at over=0, all scalefacs amplified or<BR>\n     * a scalefac has reached max value<BR>\n     * 1 = stop when all scalefacs amplified or a scalefac has reached max value<BR>\n     * 2 = stop when all scalefacs amplified\n     */\n    this.noise_shaping_stop = 0;\n\n    /**\n     * 0 = no, 1 = yes\n     */\n    this.subblock_gain = 0;\n    /**\n     * 0 = no. 1=outside loop 2=inside loop(slow)\n     */\n    this.use_best_huffman = 0;\n\n    /**\n     * 0 = stop early after 0 distortion found. 1 = full search\n     */\n    this.full_outer_loop = 0;\n\n    //public IIISideInfo l3_side = new IIISideInfo();\n    this.l3_side = new IIISideInfo();\n    this.ms_ratio = new_float(2);\n\n    /* used for padding */\n    /**\n     * padding for the current frame?\n     */\n    this.padding = 0;\n    this.frac_SpF = 0;\n    this.slot_lag = 0;\n\n    /**\n     * optional ID3 tags\n     */\n        //public ID3TagSpec tag_spec;\n    this.tag_spec = null;\n    this.nMusicCRC = 0;\n\n    /* variables used by Quantize */\n    //public int OldValue[] = new int[2];\n    this.OldValue = new_int(2);\n    //public int CurrentStep[] = new int[2];\n    this.CurrentStep = new_int(2);\n\n    this.masking_lower = 0.;\n    //public int bv_scf[] = new int[576];\n    this.bv_scf = new_int(576);\n    //public int pseudohalf[] = new int[L3Side.SFBMAX];\n    this.pseudohalf = new_int(L3Side.SFBMAX);\n\n    /**\n     * will be set in lame_init_params\n     */\n    this.sfb21_extra = false;\n\n    /* BPC = maximum number of filter convolution windows to precompute */\n    //public float[][] inbuf_old = new float[2][];\n    this.inbuf_old = new Array(2);\n    //public float[][] blackfilt = new float[2 * BPC + 1][];\n    this.blackfilt = new Array(2 * LameInternalFlags.BPC + 1);\n    //public double itime[] = new double[2];\n    this.itime = new_double(2);\n    this.sideinfo_len = 0;\n\n    /* variables for newmdct.c */\n    //public float sb_sample[][][][] = new float[2][2][18][Encoder.SBLIMIT];\n    this.sb_sample = new_float_n([2, 2, 18, Encoder.SBLIMIT]);\n    this.amp_filter = new_float(32);\n\n    /* variables for BitStream */\n\n    /**\n     * <PRE>\n     * mpeg1: buffer=511 bytes  smallest frame: 96-38(sideinfo)=58\n     * max number of frames in reservoir:  8\n     * mpeg2: buffer=255 bytes.  smallest frame: 24-23bytes=1\n     * with VBR, if you are encoding all silence, it is possible to\n     * have 8kbs/24khz frames with 1byte of data each, which means we need\n     * to buffer up to 255 headers!\n     * </PRE>\n     */\n    /**\n     * also, max_header_buf has to be a power of two\n     */\n    /**\n     * max size of header is 38\n     */\n\n    function Header() {\n        this.write_timing = 0;\n        this.ptr = 0;\n        //public byte buf[] = new byte[MAX_HEADER_LEN];\n        this.buf = new_byte(MAX_HEADER_LEN);\n    }\n\n    this.header = new Array(LameInternalFlags.MAX_HEADER_BUF);\n\n    this.h_ptr = 0;\n    this.w_ptr = 0;\n    this.ancillary_flag = 0;\n\n    /* variables for Reservoir */\n    /**\n     * in bits\n     */\n    this.ResvSize = 0;\n    /**\n     * in bits\n     */\n    this.ResvMax = 0;\n\n    //public ScaleFac scalefac_band = new ScaleFac();\n    this.scalefac_band = new ScaleFac();\n\n    /* daa from PsyModel */\n    /* The static variables \"r\", \"phi_sav\", \"new\", \"old\" and \"oldest\" have */\n    /* to be remembered for the unpredictability measure. For \"r\" and */\n    /* \"phi_sav\", the first index from the left is the channel select and */\n    /* the second index is the \"age\" of the data. */\n    this.minval_l = new_float(Encoder.CBANDS);\n    this.minval_s = new_float(Encoder.CBANDS);\n    this.nb_1 = new_float_n([4, Encoder.CBANDS]);\n    this.nb_2 = new_float_n([4, Encoder.CBANDS]);\n    this.nb_s1 = new_float_n([4, Encoder.CBANDS]);\n    this.nb_s2 = new_float_n([4, Encoder.CBANDS]);\n    this.s3_ss = null;\n    this.s3_ll = null;\n    this.decay = 0.;\n\n    //public III_psy_xmin[] thm = new III_psy_xmin[4];\n    //public III_psy_xmin[] en = new III_psy_xmin[4];\n    this.thm = new Array(4);\n    this.en = new Array(4);\n\n    /**\n     * fft and energy calculation\n     */\n    this.tot_ener = new_float(4);\n\n    /* loudness calculation (for adaptive threshold of hearing) */\n    /**\n     * loudness^2 approx. per granule and channel\n     */\n    this.loudness_sq = new_float_n([2, 2]);\n    /**\n     * account for granule delay of L3psycho_anal\n     */\n    this.loudness_sq_save = new_float(2);\n\n    /**\n     * Scale Factor Bands\n     */\n    this.mld_l = new_float(Encoder.SBMAX_l);\n    this.mld_s = new_float(Encoder.SBMAX_s);\n    this.bm_l = new_int(Encoder.SBMAX_l);\n    this.bo_l = new_int(Encoder.SBMAX_l);\n    this.bm_s = new_int(Encoder.SBMAX_s);\n    this.bo_s = new_int(Encoder.SBMAX_s);\n    this.npart_l = 0;\n    this.npart_s = 0;\n\n    this.s3ind = new_int_n([Encoder.CBANDS, 2]);\n    this.s3ind_s = new_int_n([Encoder.CBANDS, 2]);\n\n    this.numlines_s = new_int(Encoder.CBANDS);\n    this.numlines_l = new_int(Encoder.CBANDS);\n    this.rnumlines_l = new_float(Encoder.CBANDS);\n    this.mld_cb_l = new_float(Encoder.CBANDS);\n    this.mld_cb_s = new_float(Encoder.CBANDS);\n    this.numlines_s_num1 = 0;\n    this.numlines_l_num1 = 0;\n\n    /* ratios */\n    this.pe = new_float(4);\n    this.ms_ratio_s_old = 0.;\n    this.ms_ratio_l_old = 0.;\n    this.ms_ener_ratio_old = 0.;\n\n    /**\n     * block type\n     */\n    this.blocktype_old = new_int(2);\n\n    /**\n     * variables used for --nspsytune\n     */\n    this.nsPsy = new NsPsy();\n\n    /**\n     * used for Xing VBR header\n     */\n    this.VBR_seek_table = new VBRSeekInfo();\n\n    /**\n     * all ATH related stuff\n     */\n        //public ATH ATH;\n    this.ATH = null;\n\n    this.PSY = null;\n\n    this.nogap_total = 0;\n    this.nogap_current = 0;\n\n    /* ReplayGain */\n    this.decode_on_the_fly = true;\n    this.findReplayGain = true;\n    this.findPeakSample = true;\n    this.PeakSample = 0.;\n    this.RadioGain = 0;\n    this.AudiophileGain = 0;\n    //public ReplayGain rgdata;\n    this.rgdata = null;\n\n    /**\n     * gain change required for preventing clipping\n     */\n    this.noclipGainChange = 0;\n    /**\n     * user-specified scale factor required for preventing clipping\n     */\n    this.noclipScale = 0.;\n\n    /* simple statistics */\n    this.bitrate_stereoMode_Hist = new_int_n([16, 4 + 1]);\n    /**\n     * norm/start/short/stop/mixed(short)/sum\n     */\n    this.bitrate_blockType_Hist = new_int_n([16, 4 + 1 + 1]);\n\n    //public PlottingData pinfo;\n    //public MPGLib.mpstr_tag hip;\n    this.pinfo = null;\n    this.hip = null;\n\n    this.in_buffer_nsamples = 0;\n    //public float[] in_buffer_0;\n    //public float[] in_buffer_1;\n    this.in_buffer_0 = null;\n    this.in_buffer_1 = null;\n\n    //public IIterationLoop iteration_loop;\n    this.iteration_loop = null;\n\n    for (var i = 0; i < this.en.length; i++) {\n        this.en[i] = new III_psy_xmin();\n    }\n    for (var i = 0; i < this.thm.length; i++) {\n        this.thm[i] = new III_psy_xmin();\n    }\n    for (var i = 0; i < this.header.length; i++) {\n        this.header[i] = new Header();\n    }\n\n}\n\nmodule.exports = LameInternalFlags;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/lamejs/src/js/LameInternalFlags.js?");

/***/ }),

/***/ "../node_modules/lamejs/src/js/MPEGMode.js":
/*!*************************************************!*\
  !*** ../node_modules/lamejs/src/js/MPEGMode.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("//package mp3;\n\n/* MPEG modes */\nfunction MPEGMode(ordinal) {\n    var _ordinal = ordinal;\n    this.ordinal = function () {\n        return _ordinal;\n    }\n}\n\nMPEGMode.STEREO = new MPEGMode(0);\nMPEGMode.JOINT_STEREO = new MPEGMode(1);\nMPEGMode.DUAL_CHANNEL = new MPEGMode(2);\nMPEGMode.MONO = new MPEGMode(3);\nMPEGMode.NOT_SET = new MPEGMode(4);\n\nmodule.exports = MPEGMode;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/lamejs/src/js/MPEGMode.js?");

/***/ }),

/***/ "../node_modules/lamejs/src/js/MeanBits.js":
/*!*************************************************!*\
  !*** ../node_modules/lamejs/src/js/MeanBits.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function MeanBits(meanBits) {\n    this.bits = meanBits;\n}\n\nmodule.exports = MeanBits;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/lamejs/src/js/MeanBits.js?");

/***/ }),

/***/ "../node_modules/lamejs/src/js/NewMDCT.js":
/*!************************************************!*\
  !*** ../node_modules/lamejs/src/js/NewMDCT.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n *      MP3 window subband -> subband filtering -> mdct routine\n *\n *      Copyright (c) 1999-2000 Takehiro Tominaga\n *\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Library General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n/*\n *         Special Thanks to Patrick De Smet for your advices.\n */\n\n/* $Id: NewMDCT.java,v 1.11 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n//import java.util.Arrays;\nvar common = __webpack_require__(/*! ./common.js */ \"../node_modules/lamejs/src/js/common.js\");\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar Encoder = __webpack_require__(/*! ./Encoder.js */ \"../node_modules/lamejs/src/js/Encoder.js\");\n\n\nfunction NewMDCT() {\n\n\tvar enwindow = [\n\t\t\t-4.77e-07 * 0.740951125354959 / 2.384e-06,\n\t\t\t1.03951e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.53674e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t2.841473e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t3.5758972e-02 * 0.740951125354959 / 2.384e-06,\n\t\t\t3.401756e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.83715e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.9182e-05 * 0.740951125354959 / 2.384e-06, /* 15 */\n\t\t\t1.2398e-05 * 0.740951125354959 / 2.384e-06,\n\t\t\t1.91212e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t2.283096e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t1.6994476e-02 * 0.740951125354959 / 2.384e-06,\n\t\t\t-1.8756866e-02 * 0.740951125354959 / 2.384e-06,\n\t\t\t-2.630711e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t-2.47478e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t-1.4782e-05 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.063471690191471e-01, 1.960342806591213e-01,\n\n\t\t\t-4.77e-07 * 0.773010453362737 / 2.384e-06,\n\t\t\t1.05858e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t9.30786e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t2.521515e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t3.5694122e-02 * 0.773010453362737 / 2.384e-06,\n\t\t\t3.643036e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t9.91821e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t9.6321e-05 * 0.773010453362737 / 2.384e-06, /* 14 */\n\t\t\t1.1444e-05 * 0.773010453362737 / 2.384e-06,\n\t\t\t1.65462e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t2.110004e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t1.6112804e-02 * 0.773010453362737 / 2.384e-06,\n\t\t\t-1.9634247e-02 * 0.773010453362737 / 2.384e-06,\n\t\t\t-2.803326e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t-2.77042e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t-1.6689e-05 * 0.773010453362737 / 2.384e-06,\n\t\t\t8.206787908286602e-01, 3.901806440322567e-01,\n\n\t\t\t-4.77e-07 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.07288e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t9.02653e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t2.174854e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t3.5586357e-02 * 0.803207531480645 / 2.384e-06,\n\t\t\t3.858566e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t9.95159e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t9.3460e-05 * 0.803207531480645 / 2.384e-06, /* 13 */\n\t\t\t1.0014e-05 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.40190e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.937389e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.5233517e-02 * 0.803207531480645 / 2.384e-06,\n\t\t\t-2.0506859e-02 * 0.803207531480645 / 2.384e-06,\n\t\t\t-2.974033e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t-3.07560e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t-1.8120e-05 * 0.803207531480645 / 2.384e-06,\n\t\t\t7.416505462720353e-01, 5.805693545089249e-01,\n\n\t\t\t-4.77e-07 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.08242e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t8.68797e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.800537e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t3.5435200e-02 * 0.831469612302545 / 2.384e-06,\n\t\t\t4.049301e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t9.94205e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t9.0599e-05 * 0.831469612302545 / 2.384e-06, /* 12 */\n\t\t\t9.060e-06 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.16348e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.766682e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.4358521e-02 * 0.831469612302545 / 2.384e-06,\n\t\t\t-2.1372318e-02 * 0.831469612302545 / 2.384e-06,\n\t\t\t-3.14188e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t-3.39031e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t-1.9550e-05 * 0.831469612302545 / 2.384e-06,\n\t\t\t6.681786379192989e-01, 7.653668647301797e-01,\n\n\t\t\t-4.77e-07 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.08719e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t8.29220e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.399517e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t3.5242081e-02 * 0.857728610000272 / 2.384e-06,\n\t\t\t4.215240e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t9.89437e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t8.7261e-05 * 0.857728610000272 / 2.384e-06, /* 11 */\n\t\t\t8.106e-06 * 0.857728610000272 / 2.384e-06,\n\t\t\t9.3937e-05 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.597881e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.3489246e-02 * 0.857728610000272 / 2.384e-06,\n\t\t\t-2.2228718e-02 * 0.857728610000272 / 2.384e-06,\n\t\t\t-3.306866e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t-3.71456e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t-2.1458e-05 * 0.857728610000272 / 2.384e-06,\n\t\t\t5.993769336819237e-01, 9.427934736519954e-01,\n\n\t\t\t-4.77e-07 * 0.881921264348355 / 2.384e-06,\n\t\t\t1.08719e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t7.8392e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t9.71317e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t3.5007000e-02 * 0.881921264348355 / 2.384e-06,\n\t\t\t4.357815e-03 * 0.881921264348355 / 2.384e-06,\n\t\t\t9.80854e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t8.3923e-05 * 0.881921264348355 / 2.384e-06, /* 10 */\n\t\t\t7.629e-06 * 0.881921264348355 / 2.384e-06,\n\t\t\t7.2956e-05 * 0.881921264348355 / 2.384e-06,\n\t\t\t1.432419e-03 * 0.881921264348355 / 2.384e-06,\n\t\t\t1.2627602e-02 * 0.881921264348355 / 2.384e-06,\n\t\t\t-2.3074150e-02 * 0.881921264348355 / 2.384e-06,\n\t\t\t-3.467083e-03 * 0.881921264348355 / 2.384e-06,\n\t\t\t-4.04358e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t-2.3365e-05 * 0.881921264348355 / 2.384e-06,\n\t\t\t5.345111359507916e-01, 1.111140466039205e+00,\n\n\t\t\t-9.54e-07 * 0.903989293123443 / 2.384e-06,\n\t\t\t1.08242e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t7.31945e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t5.15938e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t3.4730434e-02 * 0.903989293123443 / 2.384e-06,\n\t\t\t4.477024e-03 * 0.903989293123443 / 2.384e-06,\n\t\t\t9.68933e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t8.0585e-05 * 0.903989293123443 / 2.384e-06, /* 9 */\n\t\t\t6.676e-06 * 0.903989293123443 / 2.384e-06,\n\t\t\t5.2929e-05 * 0.903989293123443 / 2.384e-06,\n\t\t\t1.269817e-03 * 0.903989293123443 / 2.384e-06,\n\t\t\t1.1775017e-02 * 0.903989293123443 / 2.384e-06,\n\t\t\t-2.3907185e-02 * 0.903989293123443 / 2.384e-06,\n\t\t\t-3.622532e-03 * 0.903989293123443 / 2.384e-06,\n\t\t\t-4.38213e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t-2.5272e-05 * 0.903989293123443 / 2.384e-06,\n\t\t\t4.729647758913199e-01, 1.268786568327291e+00,\n\n\t\t\t-9.54e-07 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t1.06812e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t6.74248e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t3.3379e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t3.4412861e-02 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t4.573822e-03 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t9.54151e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t7.6771e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t6.199e-06 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t3.4332e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t1.111031e-03 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t1.0933399e-02 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-2.4725437e-02 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-3.771782e-03 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-4.72546e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-2.7657e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t4.1421356237309504879e-01, /* tan(PI/8) */\n\t\t\t1.414213562373095e+00,\n\n\t\t\t-9.54e-07 * 0.941544065183021 / 2.384e-06,\n\t\t\t1.05381e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t6.10352e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t-4.75883e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t3.4055710e-02 * 0.941544065183021 / 2.384e-06,\n\t\t\t4.649162e-03 * 0.941544065183021 / 2.384e-06,\n\t\t\t9.35555e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t7.3433e-05 * 0.941544065183021 / 2.384e-06, /* 7 */\n\t\t\t5.245e-06 * 0.941544065183021 / 2.384e-06,\n\t\t\t1.7166e-05 * 0.941544065183021 / 2.384e-06,\n\t\t\t9.56535e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t1.0103703e-02 * 0.941544065183021 / 2.384e-06,\n\t\t\t-2.5527000e-02 * 0.941544065183021 / 2.384e-06,\n\t\t\t-3.914356e-03 * 0.941544065183021 / 2.384e-06,\n\t\t\t-5.07355e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t-3.0041e-05 * 0.941544065183021 / 2.384e-06,\n\t\t\t3.578057213145241e-01, 1.546020906725474e+00,\n\n\t\t\t-9.54e-07 * 0.956940335732209 / 2.384e-06,\n\t\t\t1.02520e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t5.39303e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t-1.011848e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t3.3659935e-02 * 0.956940335732209 / 2.384e-06,\n\t\t\t4.703045e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t9.15051e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t7.0095e-05 * 0.956940335732209 / 2.384e-06, /* 6 */\n\t\t\t4.768e-06 * 0.956940335732209 / 2.384e-06,\n\t\t\t9.54e-07 * 0.956940335732209 / 2.384e-06,\n\t\t\t8.06808e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t9.287834e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t-2.6310921e-02 * 0.956940335732209 / 2.384e-06,\n\t\t\t-4.048824e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t-5.42164e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t-3.2425e-05 * 0.956940335732209 / 2.384e-06,\n\t\t\t3.033466836073424e-01, 1.662939224605090e+00,\n\n\t\t\t-1.431e-06 * 0.970031253194544 / 2.384e-06,\n\t\t\t9.9182e-05 * 0.970031253194544 / 2.384e-06,\n\t\t\t4.62532e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t-1.573563e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t3.3225536e-02 * 0.970031253194544 / 2.384e-06,\n\t\t\t4.737377e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t8.91685e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t6.6280e-05 * 0.970031253194544 / 2.384e-06, /* 5 */\n\t\t\t4.292e-06 * 0.970031253194544 / 2.384e-06,\n\t\t\t-1.3828e-05 * 0.970031253194544 / 2.384e-06,\n\t\t\t6.61850e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t8.487225e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t-2.7073860e-02 * 0.970031253194544 / 2.384e-06,\n\t\t\t-4.174709e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t-5.76973e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t-3.4809e-05 * 0.970031253194544 / 2.384e-06,\n\t\t\t2.504869601913055e-01, 1.763842528696710e+00,\n\n\t\t\t-1.431e-06 * 0.98078528040323 / 2.384e-06,\n\t\t\t9.5367e-05 * 0.98078528040323 / 2.384e-06,\n\t\t\t3.78609e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t-2.161503e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t3.2754898e-02 * 0.98078528040323 / 2.384e-06,\n\t\t\t4.752159e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t8.66413e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t6.2943e-05 * 0.98078528040323 / 2.384e-06, /* 4 */\n\t\t\t3.815e-06 * 0.98078528040323 / 2.384e-06,\n\t\t\t-2.718e-05 * 0.98078528040323 / 2.384e-06,\n\t\t\t5.22137e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t7.703304e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t-2.7815342e-02 * 0.98078528040323 / 2.384e-06,\n\t\t\t-4.290581e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t-6.11782e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t-3.7670e-05 * 0.98078528040323 / 2.384e-06,\n\t\t\t1.989123673796580e-01, 1.847759065022573e+00,\n\n\t\t\t-1.907e-06 * 0.989176509964781 / 2.384e-06,\n\t\t\t9.0122e-05 * 0.989176509964781 / 2.384e-06,\n\t\t\t2.88486e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t-2.774239e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t3.2248020e-02 * 0.989176509964781 / 2.384e-06,\n\t\t\t4.748821e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t8.38757e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t5.9605e-05 * 0.989176509964781 / 2.384e-06, /* 3 */\n\t\t\t3.338e-06 * 0.989176509964781 / 2.384e-06,\n\t\t\t-3.9577e-05 * 0.989176509964781 / 2.384e-06,\n\t\t\t3.88145e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t6.937027e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t-2.8532982e-02 * 0.989176509964781 / 2.384e-06,\n\t\t\t-4.395962e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t-6.46591e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t-4.0531e-05 * 0.989176509964781 / 2.384e-06,\n\t\t\t1.483359875383474e-01, 1.913880671464418e+00,\n\n\t\t\t-1.907e-06 * 0.995184726672197 / 2.384e-06,\n\t\t\t8.4400e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t1.91689e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t-3.411293e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t3.1706810e-02 * 0.995184726672197 / 2.384e-06,\n\t\t\t4.728317e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t8.09669e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t5.579e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t3.338e-06 * 0.995184726672197 / 2.384e-06,\n\t\t\t-5.0545e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t2.59876e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t6.189346e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t-2.9224873e-02 * 0.995184726672197 / 2.384e-06,\n\t\t\t-4.489899e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t-6.80923e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t-4.3392e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t9.849140335716425e-02, 1.961570560806461e+00,\n\n\t\t\t-2.384e-06 * 0.998795456205172 / 2.384e-06,\n\t\t\t7.7724e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t8.8215e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t-4.072189e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t3.1132698e-02 * 0.998795456205172 / 2.384e-06,\n\t\t\t4.691124e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t7.79152e-04 * 0.998795456205172 / 2.384e-06,\n\t\t\t5.2929e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t2.861e-06 * 0.998795456205172 / 2.384e-06,\n\t\t\t-6.0558e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t1.37329e-04 * 0.998795456205172 / 2.384e-06,\n\t\t\t5.462170e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t-2.9890060e-02 * 0.998795456205172 / 2.384e-06,\n\t\t\t-4.570484e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t-7.14302e-04 * 0.998795456205172 / 2.384e-06,\n\t\t\t-4.6253e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t4.912684976946725e-02, 1.990369453344394e+00,\n\n\t\t\t3.5780907e-02 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t1.7876148e-02 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t3.134727e-03 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t2.457142e-03 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t9.71317e-04 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t2.18868e-04 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t1.01566e-04 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t1.3828e-05 * Util.SQRT2 * 0.5 / 2.384e-06,\n\n\t\t\t3.0526638e-02 / 2.384e-06, 4.638195e-03 / 2.384e-06,\n\t\t\t7.47204e-04 / 2.384e-06, 4.9591e-05 / 2.384e-06,\n\t\t\t4.756451e-03 / 2.384e-06, 2.1458e-05 / 2.384e-06,\n\t\t\t-6.9618e-05 / 2.384e-06, /* 2.384e-06/2.384e-06 */\n\t];\n\n\tvar NS = 12;\n\tvar NL = 36;\n\n\tvar win = [\n\t    [\n\t     2.382191739347913e-13,\n\t     6.423305872147834e-13,\n\t     9.400849094049688e-13,\n\t     1.122435026096556e-12,\n\t     1.183840321267481e-12,\n\t     1.122435026096556e-12,\n\t     9.400849094049690e-13,\n\t     6.423305872147839e-13,\n\t     2.382191739347918e-13,\n\n\t     5.456116108943412e-12,\n\t     4.878985199565852e-12,\n\t     4.240448995017367e-12,\n\t     3.559909094758252e-12,\n\t     2.858043359288075e-12,\n\t     2.156177623817898e-12,\n\t     1.475637723558783e-12,\n\t     8.371015190102974e-13,\n\t     2.599706096327376e-13,\n\n\t     -5.456116108943412e-12,\n\t     -4.878985199565852e-12,\n\t     -4.240448995017367e-12,\n\t     -3.559909094758252e-12,\n\t     -2.858043359288076e-12,\n\t     -2.156177623817898e-12,\n\t     -1.475637723558783e-12,\n\t     -8.371015190102975e-13,\n\t     -2.599706096327376e-13,\n\n\t     -2.382191739347923e-13,\n\t     -6.423305872147843e-13,\n\t     -9.400849094049696e-13,\n\t     -1.122435026096556e-12,\n\t     -1.183840321267481e-12,\n\t     -1.122435026096556e-12,\n\t     -9.400849094049694e-13,\n\t     -6.423305872147840e-13,\n\t     -2.382191739347918e-13,\n\t     ],\n\t    [\n\t     2.382191739347913e-13,\n\t     6.423305872147834e-13,\n\t     9.400849094049688e-13,\n\t     1.122435026096556e-12,\n\t     1.183840321267481e-12,\n\t     1.122435026096556e-12,\n\t     9.400849094049688e-13,\n\t     6.423305872147841e-13,\n\t     2.382191739347918e-13,\n\n\t     5.456116108943413e-12,\n\t     4.878985199565852e-12,\n\t     4.240448995017367e-12,\n\t     3.559909094758253e-12,\n\t     2.858043359288075e-12,\n\t     2.156177623817898e-12,\n\t     1.475637723558782e-12,\n\t     8.371015190102975e-13,\n\t     2.599706096327376e-13,\n\n\t     -5.461314069809755e-12,\n\t     -4.921085770524055e-12,\n\t     -4.343405037091838e-12,\n\t     -3.732668368707687e-12,\n\t     -3.093523840190885e-12,\n\t     -2.430835727329465e-12,\n\t     -1.734679010007751e-12,\n\t     -9.748253656609281e-13,\n\t     -2.797435120168326e-13,\n\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     -2.283748241799531e-13,\n\t     -4.037858874020686e-13,\n\t     -2.146547464825323e-13,\n\t     ],\n\t    [\n\t     1.316524975873958e-01, /* win[SHORT_TYPE] */\n\t     4.142135623730950e-01,\n\t     7.673269879789602e-01,\n\n\t     1.091308501069271e+00, /* tantab_l */\n\t     1.303225372841206e+00,\n\t     1.569685577117490e+00,\n\t     1.920982126971166e+00,\n\t     2.414213562373094e+00,\n\t     3.171594802363212e+00,\n\t     4.510708503662055e+00,\n\t     7.595754112725146e+00,\n\t     2.290376554843115e+01,\n\n\t     0.98480775301220802032, /* cx */\n\t     0.64278760968653936292,\n\t     0.34202014332566882393,\n\t     0.93969262078590842791,\n\t     -0.17364817766693030343,\n\t     -0.76604444311897790243,\n\t     0.86602540378443870761,\n\t     0.500000000000000e+00,\n\n\t     -5.144957554275265e-01, /* ca */\n\t     -4.717319685649723e-01,\n\t     -3.133774542039019e-01,\n\t     -1.819131996109812e-01,\n\t     -9.457419252642064e-02,\n\t     -4.096558288530405e-02,\n\t     -1.419856857247115e-02,\n\t     -3.699974673760037e-03,\n\n\t     8.574929257125442e-01, /* cs */\n\t     8.817419973177052e-01,\n\t     9.496286491027329e-01,\n\t     9.833145924917901e-01,\n\t     9.955178160675857e-01,\n\t     9.991605581781475e-01,\n\t     9.998991952444470e-01,\n\t     9.999931550702802e-01,\n\t     ],\n\t    [\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     2.283748241799531e-13,\n\t     4.037858874020686e-13,\n\t     2.146547464825323e-13,\n\n\t     5.461314069809755e-12,\n\t     4.921085770524055e-12,\n\t     4.343405037091838e-12,\n\t     3.732668368707687e-12,\n\t     3.093523840190885e-12,\n\t     2.430835727329466e-12,\n\t     1.734679010007751e-12,\n\t     9.748253656609281e-13,\n\t     2.797435120168326e-13,\n\n\t     -5.456116108943413e-12,\n\t     -4.878985199565852e-12,\n\t     -4.240448995017367e-12,\n\t     -3.559909094758253e-12,\n\t     -2.858043359288075e-12,\n\t     -2.156177623817898e-12,\n\t     -1.475637723558782e-12,\n\t     -8.371015190102975e-13,\n\t     -2.599706096327376e-13,\n\n\t     -2.382191739347913e-13,\n\t     -6.423305872147834e-13,\n\t     -9.400849094049688e-13,\n\t     -1.122435026096556e-12,\n\t     -1.183840321267481e-12,\n\t     -1.122435026096556e-12,\n\t     -9.400849094049688e-13,\n\t     -6.423305872147841e-13,\n\t     -2.382191739347918e-13,\n\t     ]\n\t];\n\n\tvar tantab_l = win[Encoder.SHORT_TYPE];\n\tvar cx = win[Encoder.SHORT_TYPE];\n\tvar ca = win[Encoder.SHORT_TYPE];\n\tvar cs = win[Encoder.SHORT_TYPE];\n\n\t/**\n\t * new IDCT routine written by Takehiro TOMINAGA\n\t *\n\t * PURPOSE: Overlapping window on PCM samples<BR>\n\t *\n\t * SEMANTICS:<BR>\n\t * 32 16-bit pcm samples are scaled to fractional 2's complement and\n\t * concatenated to the end of the window buffer #x#. The updated window\n\t * buffer #x# is then windowed by the analysis window #c# to produce the\n\t * windowed sample #z#\n\t */\n\tvar order = [\n\t    0, 1, 16, 17, 8, 9, 24, 25, 4, 5, 20, 21, 12, 13, 28, 29,\n\t    2, 3, 18, 19, 10, 11, 26, 27, 6, 7, 22, 23, 14, 15, 30, 31\n\t];\n\n\t/**\n\t * returns sum_j=0^31 a[j]*cos(PI*j*(k+1/2)/32), 0<=k<32\n\t */\n\tfunction window_subband(x1, x1Pos, a) {\n\t\tvar wp = 10;\n\n\t\tvar x2 = x1Pos + 238 - 14 - 286;\n\n\t\tfor (var i = -15; i < 0; i++) {\n\t\t\tvar w, s, t;\n\n\t\t\tw = enwindow[wp + -10];\n\t\t\ts = x1[x2 + -224] * w;\n\t\t\tt = x1[x1Pos + 224] * w;\n\t\t\tw = enwindow[wp + -9];\n\t\t\ts += x1[x2 + -160] * w;\n\t\t\tt += x1[x1Pos + 160] * w;\n\t\t\tw = enwindow[wp + -8];\n\t\t\ts += x1[x2 + -96] * w;\n\t\t\tt += x1[x1Pos + 96] * w;\n\t\t\tw = enwindow[wp + -7];\n\t\t\ts += x1[x2 + -32] * w;\n\t\t\tt += x1[x1Pos + 32] * w;\n\t\t\tw = enwindow[wp + -6];\n\t\t\ts += x1[x2 + 32] * w;\n\t\t\tt += x1[x1Pos + -32] * w;\n\t\t\tw = enwindow[wp + -5];\n\t\t\ts += x1[x2 + 96] * w;\n\t\t\tt += x1[x1Pos + -96] * w;\n\t\t\tw = enwindow[wp + -4];\n\t\t\ts += x1[x2 + 160] * w;\n\t\t\tt += x1[x1Pos + -160] * w;\n\t\t\tw = enwindow[wp + -3];\n\t\t\ts += x1[x2 + 224] * w;\n\t\t\tt += x1[x1Pos + -224] * w;\n\n\t\t\tw = enwindow[wp + -2];\n\t\t\ts += x1[x1Pos + -256] * w;\n\t\t\tt -= x1[x2 + 256] * w;\n\t\t\tw = enwindow[wp + -1];\n\t\t\ts += x1[x1Pos + -192] * w;\n\t\t\tt -= x1[x2 + 192] * w;\n\t\t\tw = enwindow[wp + 0];\n\t\t\ts += x1[x1Pos + -128] * w;\n\t\t\tt -= x1[x2 + 128] * w;\n\t\t\tw = enwindow[wp + 1];\n\t\t\ts += x1[x1Pos + -64] * w;\n\t\t\tt -= x1[x2 + 64] * w;\n\t\t\tw = enwindow[wp + 2];\n\t\t\ts += x1[x1Pos + 0] * w;\n\t\t\tt -= x1[x2 + 0] * w;\n\t\t\tw = enwindow[wp + 3];\n\t\t\ts += x1[x1Pos + 64] * w;\n\t\t\tt -= x1[x2 + -64] * w;\n\t\t\tw = enwindow[wp + 4];\n\t\t\ts += x1[x1Pos + 128] * w;\n\t\t\tt -= x1[x2 + -128] * w;\n\t\t\tw = enwindow[wp + 5];\n\t\t\ts += x1[x1Pos + 192] * w;\n\t\t\tt -= x1[x2 + -192] * w;\n\n\t\t\t/*\n\t\t\t * this multiplyer could be removed, but it needs more 256 FLOAT\n\t\t\t * data. thinking about the data cache performance, I think we\n\t\t\t * should not use such a huge table. tt 2000/Oct/25\n\t\t\t */\n\t\t\ts *= enwindow[wp + 6];\n\t\t\tw = t - s;\n\t\t\ta[30 + i * 2] = t + s;\n\t\t\ta[31 + i * 2] = enwindow[wp + 7] * w;\n\t\t\twp += 18;\n\t\t\tx1Pos--;\n\t\t\tx2++;\n\t\t}\n\t\t{\n\t\t\tvar s, t, u, v;\n\t\t\tt = x1[x1Pos + -16] * enwindow[wp + -10];\n\t\t\ts = x1[x1Pos + -32] * enwindow[wp + -2];\n\t\t\tt += (x1[x1Pos + -48] - x1[x1Pos + 16]) * enwindow[wp + -9];\n\t\t\ts += x1[x1Pos + -96] * enwindow[wp + -1];\n\t\t\tt += (x1[x1Pos + -80] + x1[x1Pos + 48]) * enwindow[wp + -8];\n\t\t\ts += x1[x1Pos + -160] * enwindow[wp + 0];\n\t\t\tt += (x1[x1Pos + -112] - x1[x1Pos + 80]) * enwindow[wp + -7];\n\t\t\ts += x1[x1Pos + -224] * enwindow[wp + 1];\n\t\t\tt += (x1[x1Pos + -144] + x1[x1Pos + 112]) * enwindow[wp + -6];\n\t\t\ts -= x1[x1Pos + 32] * enwindow[wp + 2];\n\t\t\tt += (x1[x1Pos + -176] - x1[x1Pos + 144]) * enwindow[wp + -5];\n\t\t\ts -= x1[x1Pos + 96] * enwindow[wp + 3];\n\t\t\tt += (x1[x1Pos + -208] + x1[x1Pos + 176]) * enwindow[wp + -4];\n\t\t\ts -= x1[x1Pos + 160] * enwindow[wp + 4];\n\t\t\tt += (x1[x1Pos + -240] - x1[x1Pos + 208]) * enwindow[wp + -3];\n\t\t\ts -= x1[x1Pos + 224];\n\n\t\t\tu = s - t;\n\t\t\tv = s + t;\n\n\t\t\tt = a[14];\n\t\t\ts = a[15] - t;\n\n\t\t\ta[31] = v + t; /* A0 */\n\t\t\ta[30] = u + s; /* A1 */\n\t\t\ta[15] = u - s; /* A2 */\n\t\t\ta[14] = v - t; /* A3 */\n\t\t}\n\t\t{\n\t\t\tvar xr;\n\t\t\txr = a[28] - a[0];\n\t\t\ta[0] += a[28];\n\t\t\ta[28] = xr * enwindow[wp + -2 * 18 + 7];\n\t\t\txr = a[29] - a[1];\n\t\t\ta[1] += a[29];\n\t\t\ta[29] = xr * enwindow[wp + -2 * 18 + 7];\n\n\t\t\txr = a[26] - a[2];\n\t\t\ta[2] += a[26];\n\t\t\ta[26] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = a[27] - a[3];\n\t\t\ta[3] += a[27];\n\t\t\ta[27] = xr * enwindow[wp + -4 * 18 + 7];\n\n\t\t\txr = a[24] - a[4];\n\t\t\ta[4] += a[24];\n\t\t\ta[24] = xr * enwindow[wp + -6 * 18 + 7];\n\t\t\txr = a[25] - a[5];\n\t\t\ta[5] += a[25];\n\t\t\ta[25] = xr * enwindow[wp + -6 * 18 + 7];\n\n\t\t\txr = a[22] - a[6];\n\t\t\ta[6] += a[22];\n\t\t\ta[22] = xr * Util.SQRT2;\n\t\t\txr = a[23] - a[7];\n\t\t\ta[7] += a[23];\n\t\t\ta[23] = xr * Util.SQRT2 - a[7];\n\t\t\ta[7] -= a[6];\n\t\t\ta[22] -= a[7];\n\t\t\ta[23] -= a[22];\n\n\t\t\txr = a[6];\n\t\t\ta[6] = a[31] - xr;\n\t\t\ta[31] = a[31] + xr;\n\t\t\txr = a[7];\n\t\t\ta[7] = a[30] - xr;\n\t\t\ta[30] = a[30] + xr;\n\t\t\txr = a[22];\n\t\t\ta[22] = a[15] - xr;\n\t\t\ta[15] = a[15] + xr;\n\t\t\txr = a[23];\n\t\t\ta[23] = a[14] - xr;\n\t\t\ta[14] = a[14] + xr;\n\n\t\t\txr = a[20] - a[8];\n\t\t\ta[8] += a[20];\n\t\t\ta[20] = xr * enwindow[wp + -10 * 18 + 7];\n\t\t\txr = a[21] - a[9];\n\t\t\ta[9] += a[21];\n\t\t\ta[21] = xr * enwindow[wp + -10 * 18 + 7];\n\n\t\t\txr = a[18] - a[10];\n\t\t\ta[10] += a[18];\n\t\t\ta[18] = xr * enwindow[wp + -12 * 18 + 7];\n\t\t\txr = a[19] - a[11];\n\t\t\ta[11] += a[19];\n\t\t\ta[19] = xr * enwindow[wp + -12 * 18 + 7];\n\n\t\t\txr = a[16] - a[12];\n\t\t\ta[12] += a[16];\n\t\t\ta[16] = xr * enwindow[wp + -14 * 18 + 7];\n\t\t\txr = a[17] - a[13];\n\t\t\ta[13] += a[17];\n\t\t\ta[17] = xr * enwindow[wp + -14 * 18 + 7];\n\n\t\t\txr = -a[20] + a[24];\n\t\t\ta[20] += a[24];\n\t\t\ta[24] = xr * enwindow[wp + -12 * 18 + 7];\n\t\t\txr = -a[21] + a[25];\n\t\t\ta[21] += a[25];\n\t\t\ta[25] = xr * enwindow[wp + -12 * 18 + 7];\n\n\t\t\txr = a[4] - a[8];\n\t\t\ta[4] += a[8];\n\t\t\ta[8] = xr * enwindow[wp + -12 * 18 + 7];\n\t\t\txr = a[5] - a[9];\n\t\t\ta[5] += a[9];\n\t\t\ta[9] = xr * enwindow[wp + -12 * 18 + 7];\n\n\t\t\txr = a[0] - a[12];\n\t\t\ta[0] += a[12];\n\t\t\ta[12] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = a[1] - a[13];\n\t\t\ta[1] += a[13];\n\t\t\ta[13] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = a[16] - a[28];\n\t\t\ta[16] += a[28];\n\t\t\ta[28] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = -a[17] + a[29];\n\t\t\ta[17] += a[29];\n\t\t\ta[29] = xr * enwindow[wp + -4 * 18 + 7];\n\n\t\t\txr = Util.SQRT2 * (a[2] - a[10]);\n\t\t\ta[2] += a[10];\n\t\t\ta[10] = xr;\n\t\t\txr = Util.SQRT2 * (a[3] - a[11]);\n\t\t\ta[3] += a[11];\n\t\t\ta[11] = xr;\n\t\t\txr = Util.SQRT2 * (-a[18] + a[26]);\n\t\t\ta[18] += a[26];\n\t\t\ta[26] = xr - a[18];\n\t\t\txr = Util.SQRT2 * (-a[19] + a[27]);\n\t\t\ta[19] += a[27];\n\t\t\ta[27] = xr - a[19];\n\n\t\t\txr = a[2];\n\t\t\ta[19] -= a[3];\n\t\t\ta[3] -= xr;\n\t\t\ta[2] = a[31] - xr;\n\t\t\ta[31] += xr;\n\t\t\txr = a[3];\n\t\t\ta[11] -= a[19];\n\t\t\ta[18] -= xr;\n\t\t\ta[3] = a[30] - xr;\n\t\t\ta[30] += xr;\n\t\t\txr = a[18];\n\t\t\ta[27] -= a[11];\n\t\t\ta[19] -= xr;\n\t\t\ta[18] = a[15] - xr;\n\t\t\ta[15] += xr;\n\n\t\t\txr = a[19];\n\t\t\ta[10] -= xr;\n\t\t\ta[19] = a[14] - xr;\n\t\t\ta[14] += xr;\n\t\t\txr = a[10];\n\t\t\ta[11] -= xr;\n\t\t\ta[10] = a[23] - xr;\n\t\t\ta[23] += xr;\n\t\t\txr = a[11];\n\t\t\ta[26] -= xr;\n\t\t\ta[11] = a[22] - xr;\n\t\t\ta[22] += xr;\n\t\t\txr = a[26];\n\t\t\ta[27] -= xr;\n\t\t\ta[26] = a[7] - xr;\n\t\t\ta[7] += xr;\n\n\t\t\txr = a[27];\n\t\t\ta[27] = a[6] - xr;\n\t\t\ta[6] += xr;\n\n\t\t\txr = Util.SQRT2 * (a[0] - a[4]);\n\t\t\ta[0] += a[4];\n\t\t\ta[4] = xr;\n\t\t\txr = Util.SQRT2 * (a[1] - a[5]);\n\t\t\ta[1] += a[5];\n\t\t\ta[5] = xr;\n\t\t\txr = Util.SQRT2 * (a[16] - a[20]);\n\t\t\ta[16] += a[20];\n\t\t\ta[20] = xr;\n\t\t\txr = Util.SQRT2 * (a[17] - a[21]);\n\t\t\ta[17] += a[21];\n\t\t\ta[21] = xr;\n\n\t\t\txr = -Util.SQRT2 * (a[8] - a[12]);\n\t\t\ta[8] += a[12];\n\t\t\ta[12] = xr - a[8];\n\t\t\txr = -Util.SQRT2 * (a[9] - a[13]);\n\t\t\ta[9] += a[13];\n\t\t\ta[13] = xr - a[9];\n\t\t\txr = -Util.SQRT2 * (a[25] - a[29]);\n\t\t\ta[25] += a[29];\n\t\t\ta[29] = xr - a[25];\n\t\t\txr = -Util.SQRT2 * (a[24] + a[28]);\n\t\t\ta[24] -= a[28];\n\t\t\ta[28] = xr - a[24];\n\n\t\t\txr = a[24] - a[16];\n\t\t\ta[24] = xr;\n\t\t\txr = a[20] - xr;\n\t\t\ta[20] = xr;\n\t\t\txr = a[28] - xr;\n\t\t\ta[28] = xr;\n\n\t\t\txr = a[25] - a[17];\n\t\t\ta[25] = xr;\n\t\t\txr = a[21] - xr;\n\t\t\ta[21] = xr;\n\t\t\txr = a[29] - xr;\n\t\t\ta[29] = xr;\n\n\t\t\txr = a[17] - a[1];\n\t\t\ta[17] = xr;\n\t\t\txr = a[9] - xr;\n\t\t\ta[9] = xr;\n\t\t\txr = a[25] - xr;\n\t\t\ta[25] = xr;\n\t\t\txr = a[5] - xr;\n\t\t\ta[5] = xr;\n\t\t\txr = a[21] - xr;\n\t\t\ta[21] = xr;\n\t\t\txr = a[13] - xr;\n\t\t\ta[13] = xr;\n\t\t\txr = a[29] - xr;\n\t\t\ta[29] = xr;\n\n\t\t\txr = a[1] - a[0];\n\t\t\ta[1] = xr;\n\t\t\txr = a[16] - xr;\n\t\t\ta[16] = xr;\n\t\t\txr = a[17] - xr;\n\t\t\ta[17] = xr;\n\t\t\txr = a[8] - xr;\n\t\t\ta[8] = xr;\n\t\t\txr = a[9] - xr;\n\t\t\ta[9] = xr;\n\t\t\txr = a[24] - xr;\n\t\t\ta[24] = xr;\n\t\t\txr = a[25] - xr;\n\t\t\ta[25] = xr;\n\t\t\txr = a[4] - xr;\n\t\t\ta[4] = xr;\n\t\t\txr = a[5] - xr;\n\t\t\ta[5] = xr;\n\t\t\txr = a[20] - xr;\n\t\t\ta[20] = xr;\n\t\t\txr = a[21] - xr;\n\t\t\ta[21] = xr;\n\t\t\txr = a[12] - xr;\n\t\t\ta[12] = xr;\n\t\t\txr = a[13] - xr;\n\t\t\ta[13] = xr;\n\t\t\txr = a[28] - xr;\n\t\t\ta[28] = xr;\n\t\t\txr = a[29] - xr;\n\t\t\ta[29] = xr;\n\n\t\t\txr = a[0];\n\t\t\ta[0] += a[31];\n\t\t\ta[31] -= xr;\n\t\t\txr = a[1];\n\t\t\ta[1] += a[30];\n\t\t\ta[30] -= xr;\n\t\t\txr = a[16];\n\t\t\ta[16] += a[15];\n\t\t\ta[15] -= xr;\n\t\t\txr = a[17];\n\t\t\ta[17] += a[14];\n\t\t\ta[14] -= xr;\n\t\t\txr = a[8];\n\t\t\ta[8] += a[23];\n\t\t\ta[23] -= xr;\n\t\t\txr = a[9];\n\t\t\ta[9] += a[22];\n\t\t\ta[22] -= xr;\n\t\t\txr = a[24];\n\t\t\ta[24] += a[7];\n\t\t\ta[7] -= xr;\n\t\t\txr = a[25];\n\t\t\ta[25] += a[6];\n\t\t\ta[6] -= xr;\n\t\t\txr = a[4];\n\t\t\ta[4] += a[27];\n\t\t\ta[27] -= xr;\n\t\t\txr = a[5];\n\t\t\ta[5] += a[26];\n\t\t\ta[26] -= xr;\n\t\t\txr = a[20];\n\t\t\ta[20] += a[11];\n\t\t\ta[11] -= xr;\n\t\t\txr = a[21];\n\t\t\ta[21] += a[10];\n\t\t\ta[10] -= xr;\n\t\t\txr = a[12];\n\t\t\ta[12] += a[19];\n\t\t\ta[19] -= xr;\n\t\t\txr = a[13];\n\t\t\ta[13] += a[18];\n\t\t\ta[18] -= xr;\n\t\t\txr = a[28];\n\t\t\ta[28] += a[3];\n\t\t\ta[3] -= xr;\n\t\t\txr = a[29];\n\t\t\ta[29] += a[2];\n\t\t\ta[2] -= xr;\n\t\t}\n\t}\n\n\t/**\n\t * Function: Calculation of the MDCT In the case of long blocks (type 0,1,3)\n\t * there are 36 coefficents in the time domain and 18 in the frequency\n\t * domain.<BR>\n\t * In the case of short blocks (type 2) there are 3 transformations with\n\t * short length. This leads to 12 coefficents in the time and 6 in the\n\t * frequency domain. In this case the results are stored side by side in the\n\t * vector out[].\n\t *\n\t * New layer3\n\t */\n\tfunction mdct_short(inout, inoutPos) {\n\t\tfor (var l = 0; l < 3; l++) {\n\t\t\tvar tc0, tc1, tc2, ts0, ts1, ts2;\n\n\t\t\tts0 = inout[inoutPos + 2 * 3] * win[Encoder.SHORT_TYPE][0]\n\t\t\t\t\t- inout[inoutPos + 5 * 3];\n\t\t\ttc0 = inout[inoutPos + 0 * 3] * win[Encoder.SHORT_TYPE][2]\n\t\t\t\t\t- inout[inoutPos + 3 * 3];\n\t\t\ttc1 = ts0 + tc0;\n\t\t\ttc2 = ts0 - tc0;\n\n\t\t\tts0 = inout[inoutPos + 5 * 3] * win[Encoder.SHORT_TYPE][0]\n\t\t\t\t\t+ inout[inoutPos + 2 * 3];\n\t\t\ttc0 = inout[inoutPos + 3 * 3] * win[Encoder.SHORT_TYPE][2]\n\t\t\t\t\t+ inout[inoutPos + 0 * 3];\n\t\t\tts1 = ts0 + tc0;\n\t\t\tts2 = -ts0 + tc0;\n\n\t\t\ttc0 = (inout[inoutPos + 1 * 3] * win[Encoder.SHORT_TYPE][1] - inout[inoutPos + 4 * 3]) * 2.069978111953089e-11;\n\t\t\t/*\n\t\t\t * tritab_s [ 1 ]\n\t\t\t */\n\t\t\tts0 = (inout[inoutPos + 4 * 3] * win[Encoder.SHORT_TYPE][1] + inout[inoutPos + 1 * 3]) * 2.069978111953089e-11;\n\t\t\t/*\n\t\t\t * tritab_s [ 1 ]\n\t\t\t */\n\t\t\tinout[inoutPos + 3 * 0] = tc1 * 1.907525191737280e-11 + tc0;\n\t\t\t/*\n\t\t\t * tritab_s[ 2 ]\n\t\t\t */\n\t\t\tinout[inoutPos + 3 * 5] = -ts1 * 1.907525191737280e-11 + ts0;\n\t\t\t/*\n\t\t\t * tritab_s[0 ]\n\t\t\t */\n\t\t\ttc2 = tc2 * 0.86602540378443870761 * 1.907525191737281e-11;\n\t\t\t/*\n\t\t\t * tritab_s[ 2]\n\t\t\t */\n\t\t\tts1 = ts1 * 0.5 * 1.907525191737281e-11 + ts0;\n\t\t\tinout[inoutPos + 3 * 1] = tc2 - ts1;\n\t\t\tinout[inoutPos + 3 * 2] = tc2 + ts1;\n\n\t\t\ttc1 = tc1 * 0.5 * 1.907525191737281e-11 - tc0;\n\t\t\tts2 = ts2 * 0.86602540378443870761 * 1.907525191737281e-11;\n\t\t\t/*\n\t\t\t * tritab_s[ 0]\n\t\t\t */\n\t\t\tinout[inoutPos + 3 * 3] = tc1 + ts2;\n\t\t\tinout[inoutPos + 3 * 4] = tc1 - ts2;\n\n\t\t\tinoutPos++;\n\t\t}\n\t}\n\n\tfunction mdct_long(out, outPos, _in) {\n\t\tvar ct, st;\n\t\t{\n\t\t\tvar tc1, tc2, tc3, tc4, ts5, ts6, ts7, ts8;\n\t\t\t/* 1,2, 5,6, 9,10, 13,14, 17 */\n\t\t\ttc1 = _in[17] - _in[9];\n\t\t\ttc3 = _in[15] - _in[11];\n\t\t\ttc4 = _in[14] - _in[12];\n\t\t\tts5 = _in[0] + _in[8];\n\t\t\tts6 = _in[1] + _in[7];\n\t\t\tts7 = _in[2] + _in[6];\n\t\t\tts8 = _in[3] + _in[5];\n\n\t\t\tout[outPos + 17] = (ts5 + ts7 - ts8) - (ts6 - _in[4]);\n\t\t\tst = (ts5 + ts7 - ts8) * cx[12 + 7] + (ts6 - _in[4]);\n\t\t\tct = (tc1 - tc3 - tc4) * cx[12 + 6];\n\t\t\tout[outPos + 5] = ct + st;\n\t\t\tout[outPos + 6] = ct - st;\n\n\t\t\ttc2 = (_in[16] - _in[10]) * cx[12 + 6];\n\t\t\tts6 = ts6 * cx[12 + 7] + _in[4];\n\t\t\tct = tc1 * cx[12 + 0] + tc2 + tc3 * cx[12 + 1] + tc4 * cx[12 + 2];\n\t\t\tst = -ts5 * cx[12 + 4] + ts6 - ts7 * cx[12 + 5] + ts8 * cx[12 + 3];\n\t\t\tout[outPos + 1] = ct + st;\n\t\t\tout[outPos + 2] = ct - st;\n\n\t\t\tct = tc1 * cx[12 + 1] - tc2 - tc3 * cx[12 + 2] + tc4 * cx[12 + 0];\n\t\t\tst = -ts5 * cx[12 + 5] + ts6 - ts7 * cx[12 + 3] + ts8 * cx[12 + 4];\n\t\t\tout[outPos + 9] = ct + st;\n\t\t\tout[outPos + 10] = ct - st;\n\n\t\t\tct = tc1 * cx[12 + 2] - tc2 + tc3 * cx[12 + 0] - tc4 * cx[12 + 1];\n\t\t\tst = ts5 * cx[12 + 3] - ts6 + ts7 * cx[12 + 4] - ts8 * cx[12 + 5];\n\t\t\tout[outPos + 13] = ct + st;\n\t\t\tout[outPos + 14] = ct - st;\n\t\t}\n\t\t{\n\t\t\tvar ts1, ts2, ts3, ts4, tc5, tc6, tc7, tc8;\n\n\t\t\tts1 = _in[8] - _in[0];\n\t\t\tts3 = _in[6] - _in[2];\n\t\t\tts4 = _in[5] - _in[3];\n\t\t\ttc5 = _in[17] + _in[9];\n\t\t\ttc6 = _in[16] + _in[10];\n\t\t\ttc7 = _in[15] + _in[11];\n\t\t\ttc8 = _in[14] + _in[12];\n\n\t\t\tout[outPos + 0] = (tc5 + tc7 + tc8) + (tc6 + _in[13]);\n\t\t\tct = (tc5 + tc7 + tc8) * cx[12 + 7] - (tc6 + _in[13]);\n\t\t\tst = (ts1 - ts3 + ts4) * cx[12 + 6];\n\t\t\tout[outPos + 11] = ct + st;\n\t\t\tout[outPos + 12] = ct - st;\n\n\t\t\tts2 = (_in[7] - _in[1]) * cx[12 + 6];\n\t\t\ttc6 = _in[13] - tc6 * cx[12 + 7];\n\t\t\tct = tc5 * cx[12 + 3] - tc6 + tc7 * cx[12 + 4] + tc8 * cx[12 + 5];\n\t\t\tst = ts1 * cx[12 + 2] + ts2 + ts3 * cx[12 + 0] + ts4 * cx[12 + 1];\n\t\t\tout[outPos + 3] = ct + st;\n\t\t\tout[outPos + 4] = ct - st;\n\n\t\t\tct = -tc5 * cx[12 + 5] + tc6 - tc7 * cx[12 + 3] - tc8 * cx[12 + 4];\n\t\t\tst = ts1 * cx[12 + 1] + ts2 - ts3 * cx[12 + 2] - ts4 * cx[12 + 0];\n\t\t\tout[outPos + 7] = ct + st;\n\t\t\tout[outPos + 8] = ct - st;\n\n\t\t\tct = -tc5 * cx[12 + 4] + tc6 - tc7 * cx[12 + 5] - tc8 * cx[12 + 3];\n\t\t\tst = ts1 * cx[12 + 0] - ts2 + ts3 * cx[12 + 1] - ts4 * cx[12 + 2];\n\t\t\tout[outPos + 15] = ct + st;\n\t\t\tout[outPos + 16] = ct - st;\n\t\t}\n\t}\n\n\tthis.mdct_sub48 = function(gfc, w0, w1) {\n\t\tvar wk = w0;\n\t\tvar wkPos = 286;\n\t\t/* thinking cache performance, ch->gr loop is better than gr->ch loop */\n\t\tfor (var ch = 0; ch < gfc.channels_out; ch++) {\n\t\t\tfor (var gr = 0; gr < gfc.mode_gr; gr++) {\n\t\t\t\tvar band;\n\t\t\t\tvar gi = (gfc.l3_side.tt[gr][ch]);\n\t\t\t\tvar mdct_enc = gi.xr;\n\t\t\t\tvar mdct_encPos = 0;\n\t\t\t\tvar samp = gfc.sb_sample[ch][1 - gr];\n\t\t\t\tvar sampPos = 0;\n\n\t\t\t\tfor (var k = 0; k < 18 / 2; k++) {\n\t\t\t\t\twindow_subband(wk, wkPos, samp[sampPos]);\n\t\t\t\t\twindow_subband(wk, wkPos + 32, samp[sampPos + 1]);\n\t\t\t\t\tsampPos += 2;\n\t\t\t\t\twkPos += 64;\n\t\t\t\t\t/*\n\t\t\t\t\t * Compensate for inversion in the analysis filter\n\t\t\t\t\t */\n\t\t\t\t\tfor (band = 1; band < 32; band += 2) {\n\t\t\t\t\t\tsamp[sampPos - 1][band] *= -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t * Perform imdct of 18 previous subband samples + 18 current\n\t\t\t\t * subband samples\n\t\t\t\t */\n\t\t\t\tfor (band = 0; band < 32; band++, mdct_encPos += 18) {\n\t\t\t\t\tvar type = gi.block_type;\n\t\t\t\t\tvar band0 = gfc.sb_sample[ch][gr];\n\t\t\t\t\tvar band1 = gfc.sb_sample[ch][1 - gr];\n\t\t\t\t\tif (gi.mixed_block_flag != 0 && band < 2)\n\t\t\t\t\t\ttype = 0;\n\t\t\t\t\tif (gfc.amp_filter[band] < 1e-12) {\n\t\t\t\t\t\tArrays.fill(mdct_enc, mdct_encPos + 0,\n\t\t\t\t\t\t\t\tmdct_encPos + 18, 0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (gfc.amp_filter[band] < 1.0) {\n\t\t\t\t\t\t\tfor (var k = 0; k < 18; k++)\n\t\t\t\t\t\t\t\tband1[k][order[band]] *= gfc.amp_filter[band];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (type == Encoder.SHORT_TYPE) {\n\t\t\t\t\t\t\tfor (var k = -NS / 4; k < 0; k++) {\n\t\t\t\t\t\t\t\tvar w = win[Encoder.SHORT_TYPE][k + 3];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 9] = band0[9 + k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w - band0[8 - k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 18] = band0[14 - k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w + band0[15 + k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 10] = band0[15 + k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w - band0[14 - k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 19] = band1[2 - k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w + band1[3 + k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 11] = band1[3 + k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w - band1[2 - k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 20] = band1[8 - k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w + band1[9 + k][order[band]];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmdct_short(mdct_enc, mdct_encPos);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar work = new_float(18);\n\t\t\t\t\t\t\tfor (var k = -NL / 4; k < 0; k++) {\n\t\t\t\t\t\t\t\tvar a, b;\n\t\t\t\t\t\t\t\ta = win[type][k + 27]\n\t\t\t\t\t\t\t\t\t\t* band1[k + 9][order[band]]\n\t\t\t\t\t\t\t\t\t\t+ win[type][k + 36]\n\t\t\t\t\t\t\t\t\t\t* band1[8 - k][order[band]];\n\t\t\t\t\t\t\t\tb = win[type][k + 9]\n\t\t\t\t\t\t\t\t\t\t* band0[k + 9][order[band]]\n\t\t\t\t\t\t\t\t\t\t- win[type][k + 18]\n\t\t\t\t\t\t\t\t\t\t* band0[8 - k][order[band]];\n\t\t\t\t\t\t\t\twork[k + 9] = a - b * tantab_l[3 + k + 9];\n\t\t\t\t\t\t\t\twork[k + 18] = a * tantab_l[3 + k + 9] + b;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmdct_long(mdct_enc, mdct_encPos, work);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t/*\n\t\t\t\t\t * Perform aliasing reduction butterfly\n\t\t\t\t\t */\n\t\t\t\t\tif (type != Encoder.SHORT_TYPE && band != 0) {\n\t\t\t\t\t\tfor (var k = 7; k >= 0; --k) {\n\t\t\t\t\t\t\tvar bu, bd;\n\t\t\t\t\t\t\tbu = mdct_enc[mdct_encPos + k] * ca[20 + k]\n\t\t\t\t\t\t\t\t\t+ mdct_enc[mdct_encPos + -1 - k]\n\t\t\t\t\t\t\t\t\t* cs[28 + k];\n\t\t\t\t\t\t\tbd = mdct_enc[mdct_encPos + k] * cs[28 + k]\n\t\t\t\t\t\t\t\t\t- mdct_enc[mdct_encPos + -1 - k]\n\t\t\t\t\t\t\t\t\t* ca[20 + k];\n\n\t\t\t\t\t\t\tmdct_enc[mdct_encPos + -1 - k] = bu;\n\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k] = bd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\twk = w1;\n\t\t\twkPos = 286;\n\t\t\tif (gfc.mode_gr == 1) {\n\t\t\t\tfor (var i = 0; i < 18; i++) {\n\t\t\t\t\tSystem.arraycopy(gfc.sb_sample[ch][1][i], 0,\n\t\t\t\t\t\t\tgfc.sb_sample[ch][0][i], 0, 32);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nmodule.exports = NewMDCT;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/lamejs/src/js/NewMDCT.js?");

/***/ }),

/***/ "../node_modules/lamejs/src/js/NsPsy.js":
/*!**********************************************!*\
  !*** ../node_modules/lamejs/src/js/NsPsy.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var common = __webpack_require__(/*! ./common.js */ \"../node_modules/lamejs/src/js/common.js\");\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar Encoder = __webpack_require__(/*! ./Encoder.js */ \"../node_modules/lamejs/src/js/Encoder.js\");\n\n//package mp3;\n\n/**\n * Variables used for --nspsytune\n *\n * @author Ken\n *\n */\nfunction NsPsy() {\n    this.last_en_subshort = new_float_n([4, 9]);\n    this.lastAttacks = new_int(4);\n    this.pefirbuf = new_float(19);\n    this.longfact = new_float(Encoder.SBMAX_l);\n    this.shortfact = new_float(Encoder.SBMAX_s);\n\n    /**\n     * short block tuning\n     */\n    this.attackthre = 0.;\n    this.attackthre_s = 0.;\n}\n\nmodule.exports = NsPsy;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/lamejs/src/js/NsPsy.js?");

/***/ }),

/***/ "../node_modules/lamejs/src/js/Presets.js":
/*!************************************************!*\
  !*** ../node_modules/lamejs/src/js/Presets.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var common = __webpack_require__(/*! ./common.js */ \"../node_modules/lamejs/src/js/common.js\");\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nfunction Presets() {\n    function VBRPresets(qual, comp, compS,\n                        y, shThreshold, shThresholdS,\n                        adj, adjShort, lower,\n                        curve, sens, inter,\n                        joint, mod, fix) {\n        this.vbr_q = qual;\n        this.quant_comp = comp;\n        this.quant_comp_s = compS;\n        this.expY = y;\n        this.st_lrm = shThreshold;\n        this.st_s = shThresholdS;\n        this.masking_adj = adj;\n        this.masking_adj_short = adjShort;\n        this.ath_lower = lower;\n        this.ath_curve = curve;\n        this.ath_sensitivity = sens;\n        this.interch = inter;\n        this.safejoint = joint;\n        this.sfb21mod = mod;\n        this.msfix = fix;\n    }\n\n    function ABRPresets(kbps, comp, compS,\n                        joint, fix, shThreshold,\n                        shThresholdS, bass, sc,\n                        mask, lower, curve,\n                        interCh, sfScale) {\n        this.quant_comp = comp;\n        this.quant_comp_s = compS;\n        this.safejoint = joint;\n        this.nsmsfix = fix;\n        this.st_lrm = shThreshold;\n        this.st_s = shThresholdS;\n        this.nsbass = bass;\n        this.scale = sc;\n        this.masking_adj = mask;\n        this.ath_lower = lower;\n        this.ath_curve = curve;\n        this.interch = interCh;\n        this.sfscale = sfScale;\n    }\n\n    var lame;\n\n    this.setModules = function (_lame) {\n        lame = _lame;\n    };\n\n    /**\n     * <PRE>\n     * Switch mappings for VBR mode VBR_RH\n     *             vbr_q  qcomp_l  qcomp_s  expY  st_lrm   st_s  mask adj_l  adj_s  ath_lower  ath_curve  ath_sens  interChR  safejoint sfb21mod  msfix\n     * </PRE>\n     */\n    var vbr_old_switch_map = [\n        new VBRPresets(0, 9, 9, 0, 5.20, 125.0, -4.2, -6.3, 4.8, 1, 0, 0, 2, 21, 0.97),\n        new VBRPresets(1, 9, 9, 0, 5.30, 125.0, -3.6, -5.6, 4.5, 1.5, 0, 0, 2, 21, 1.35),\n        new VBRPresets(2, 9, 9, 0, 5.60, 125.0, -2.2, -3.5, 2.8, 2, 0, 0, 2, 21, 1.49),\n        new VBRPresets(3, 9, 9, 1, 5.80, 130.0, -1.8, -2.8, 2.6, 3, -4, 0, 2, 20, 1.64),\n        new VBRPresets(4, 9, 9, 1, 6.00, 135.0, -0.7, -1.1, 1.1, 3.5, -8, 0, 2, 0, 1.79),\n        new VBRPresets(5, 9, 9, 1, 6.40, 140.0, 0.5, 0.4, -7.5, 4, -12, 0.0002, 0, 0, 1.95),\n        new VBRPresets(6, 9, 9, 1, 6.60, 145.0, 0.67, 0.65, -14.7, 6.5, -19, 0.0004, 0, 0, 2.30),\n        new VBRPresets(7, 9, 9, 1, 6.60, 145.0, 0.8, 0.75, -19.7, 8, -22, 0.0006, 0, 0, 2.70),\n        new VBRPresets(8, 9, 9, 1, 6.60, 145.0, 1.2, 1.15, -27.5, 10, -23, 0.0007, 0, 0, 0),\n        new VBRPresets(9, 9, 9, 1, 6.60, 145.0, 1.6, 1.6, -36, 11, -25, 0.0008, 0, 0, 0),\n        new VBRPresets(10, 9, 9, 1, 6.60, 145.0, 2.0, 2.0, -36, 12, -25, 0.0008, 0, 0, 0)\n    ];\n\n    /**\n     * <PRE>\n     *                 vbr_q  qcomp_l  qcomp_s  expY  st_lrm   st_s  mask adj_l  adj_s  ath_lower  ath_curve  ath_sens  interChR  safejoint sfb21mod  msfix\n     * </PRE>\n     */\n    var vbr_psy_switch_map = [\n        new VBRPresets(0, 9, 9, 0, 4.20, 25.0, -7.0, -4.0, 7.5, 1, 0, 0, 2, 26, 0.97),\n        new VBRPresets(1, 9, 9, 0, 4.20, 25.0, -5.6, -3.6, 4.5, 1.5, 0, 0, 2, 21, 1.35),\n        new VBRPresets(2, 9, 9, 0, 4.20, 25.0, -4.4, -1.8, 2, 2, 0, 0, 2, 18, 1.49),\n        new VBRPresets(3, 9, 9, 1, 4.20, 25.0, -3.4, -1.25, 1.1, 3, -4, 0, 2, 15, 1.64),\n        new VBRPresets(4, 9, 9, 1, 4.20, 25.0, -2.2, 0.1, 0, 3.5, -8, 0, 2, 0, 1.79),\n        new VBRPresets(5, 9, 9, 1, 4.20, 25.0, -1.0, 1.65, -7.7, 4, -12, 0.0002, 0, 0, 1.95),\n        new VBRPresets(6, 9, 9, 1, 4.20, 25.0, -0.0, 2.47, -7.7, 6.5, -19, 0.0004, 0, 0, 2),\n        new VBRPresets(7, 9, 9, 1, 4.20, 25.0, 0.5, 2.0, -14.5, 8, -22, 0.0006, 0, 0, 2),\n        new VBRPresets(8, 9, 9, 1, 4.20, 25.0, 1.0, 2.4, -22.0, 10, -23, 0.0007, 0, 0, 2),\n        new VBRPresets(9, 9, 9, 1, 4.20, 25.0, 1.5, 2.95, -30.0, 11, -25, 0.0008, 0, 0, 2),\n        new VBRPresets(10, 9, 9, 1, 4.20, 25.0, 2.0, 2.95, -36.0, 12, -30, 0.0008, 0, 0, 2)\n    ];\n\n    function apply_vbr_preset(gfp, a, enforce) {\n        var vbr_preset = gfp.VBR == VbrMode.vbr_rh ? vbr_old_switch_map\n            : vbr_psy_switch_map;\n\n        var x = gfp.VBR_q_frac;\n        var p = vbr_preset[a];\n        var q = vbr_preset[a + 1];\n        var set = p;\n\n        // NOOP(vbr_q);\n        // NOOP(quant_comp);\n        // NOOP(quant_comp_s);\n        // NOOP(expY);\n        p.st_lrm = p.st_lrm + x * (q.st_lrm - p.st_lrm);\n        // LERP(st_lrm);\n        p.st_s = p.st_s + x * (q.st_s - p.st_s);\n        // LERP(st_s);\n        p.masking_adj = p.masking_adj + x * (q.masking_adj - p.masking_adj);\n        // LERP(masking_adj);\n        p.masking_adj_short = p.masking_adj_short + x\n            * (q.masking_adj_short - p.masking_adj_short);\n        // LERP(masking_adj_short);\n        p.ath_lower = p.ath_lower + x * (q.ath_lower - p.ath_lower);\n        // LERP(ath_lower);\n        p.ath_curve = p.ath_curve + x * (q.ath_curve - p.ath_curve);\n        // LERP(ath_curve);\n        p.ath_sensitivity = p.ath_sensitivity + x\n            * (q.ath_sensitivity - p.ath_sensitivity);\n        // LERP(ath_sensitivity);\n        p.interch = p.interch + x * (q.interch - p.interch);\n        // LERP(interch);\n        // NOOP(safejoint);\n        // NOOP(sfb21mod);\n        p.msfix = p.msfix + x * (q.msfix - p.msfix);\n        // LERP(msfix);\n\n        lame_set_VBR_q(gfp, set.vbr_q);\n\n        if (enforce != 0)\n            gfp.quant_comp = set.quant_comp;\n        else if (!(Math.abs(gfp.quant_comp - -1) > 0))\n            gfp.quant_comp = set.quant_comp;\n        // SET_OPTION(quant_comp, set.quant_comp, -1);\n        if (enforce != 0)\n            gfp.quant_comp_short = set.quant_comp_s;\n        else if (!(Math.abs(gfp.quant_comp_short - -1) > 0))\n            gfp.quant_comp_short = set.quant_comp_s;\n        // SET_OPTION(quant_comp_short, set.quant_comp_s, -1);\n        if (set.expY != 0) {\n            gfp.experimentalY = set.expY != 0;\n        }\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre = set.st_lrm;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre = set.st_lrm;\n        // SET_OPTION(short_threshold_lrm, set.st_lrm, -1);\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre_s = set.st_s;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre_s - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre_s = set.st_s;\n        // SET_OPTION(short_threshold_s, set.st_s, -1);\n        if (enforce != 0)\n            gfp.maskingadjust = set.masking_adj;\n        else if (!(Math.abs(gfp.maskingadjust - 0) > 0))\n            gfp.maskingadjust = set.masking_adj;\n        // SET_OPTION(maskingadjust, set.masking_adj, 0);\n        if (enforce != 0)\n            gfp.maskingadjust_short = set.masking_adj_short;\n        else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0))\n            gfp.maskingadjust_short = set.masking_adj_short;\n        // SET_OPTION(maskingadjust_short, set.masking_adj_short, 0);\n        if (enforce != 0)\n            gfp.ATHlower = -set.ath_lower / 10.0;\n        else if (!(Math.abs((-gfp.ATHlower * 10.0) - 0) > 0))\n            gfp.ATHlower = -set.ath_lower / 10.0;\n        // SET_OPTION(ATHlower, set.ath_lower, 0);\n        if (enforce != 0)\n            gfp.ATHcurve = set.ath_curve;\n        else if (!(Math.abs(gfp.ATHcurve - -1) > 0))\n            gfp.ATHcurve = set.ath_curve;\n        // SET_OPTION(ATHcurve, set.ath_curve, -1);\n        if (enforce != 0)\n            gfp.athaa_sensitivity = set.ath_sensitivity;\n        else if (!(Math.abs(gfp.athaa_sensitivity - -1) > 0))\n            gfp.athaa_sensitivity = set.ath_sensitivity;\n        // SET_OPTION(athaa_sensitivity, set.ath_sensitivity, 0);\n        if (set.interch > 0) {\n            if (enforce != 0)\n                gfp.interChRatio = set.interch;\n            else if (!(Math.abs(gfp.interChRatio - -1) > 0))\n                gfp.interChRatio = set.interch;\n            // SET_OPTION(interChRatio, set.interch, -1);\n        }\n\n        /* parameters for which there is no proper set/get interface */\n        if (set.safejoint > 0) {\n            gfp.exp_nspsytune = gfp.exp_nspsytune | set.safejoint;\n        }\n        if (set.sfb21mod > 0) {\n            gfp.exp_nspsytune = gfp.exp_nspsytune | (set.sfb21mod << 20);\n        }\n        if (enforce != 0)\n            gfp.msfix = set.msfix;\n        else if (!(Math.abs(gfp.msfix - -1) > 0))\n            gfp.msfix = set.msfix;\n        // SET_OPTION(msfix, set.msfix, -1);\n\n        if (enforce == 0) {\n            gfp.VBR_q = a;\n            gfp.VBR_q_frac = x;\n        }\n    }\n\n    /**\n     * <PRE>\n     *  Switch mappings for ABR mode\n     *\n     *              kbps  quant q_s safejoint nsmsfix st_lrm  st_s  ns-bass scale   msk ath_lwr ath_curve  interch , sfscale\n     * </PRE>\n     */\n    var abr_switch_map = [\n        new ABRPresets(8, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -30.0, 11, 0.0012, 1), /*   8, impossible to use in stereo */\n        new ABRPresets(16, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -25.0, 11, 0.0010, 1), /*  16 */\n        new ABRPresets(24, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -20.0, 11, 0.0010, 1), /*  24 */\n        new ABRPresets(32, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -15.0, 11, 0.0010, 1), /*  32 */\n        new ABRPresets(40, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -10.0, 11, 0.0009, 1), /*  40 */\n        new ABRPresets(48, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -10.0, 11, 0.0009, 1), /*  48 */\n        new ABRPresets(56, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -6.0, 11, 0.0008, 1), /*  56 */\n        new ABRPresets(64, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -2.0, 11, 0.0008, 1), /*  64 */\n        new ABRPresets(80, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, .0, 8, 0.0007, 1), /*  80 */\n        new ABRPresets(96, 9, 9, 0, 2.50, 6.60, 145, 0, 0.95, 0, 1.0, 5.5, 0.0006, 1), /*  96 */\n        new ABRPresets(112, 9, 9, 0, 2.25, 6.60, 145, 0, 0.95, 0, 2.0, 4.5, 0.0005, 1), /* 112 */\n        new ABRPresets(128, 9, 9, 0, 1.95, 6.40, 140, 0, 0.95, 0, 3.0, 4, 0.0002, 1), /* 128 */\n        new ABRPresets(160, 9, 9, 1, 1.79, 6.00, 135, 0, 0.95, -2, 5.0, 3.5, 0, 1), /* 160 */\n        new ABRPresets(192, 9, 9, 1, 1.49, 5.60, 125, 0, 0.97, -4, 7.0, 3, 0, 0), /* 192 */\n        new ABRPresets(224, 9, 9, 1, 1.25, 5.20, 125, 0, 0.98, -6, 9.0, 2, 0, 0), /* 224 */\n        new ABRPresets(256, 9, 9, 1, 0.97, 5.20, 125, 0, 1.00, -8, 10.0, 1, 0, 0), /* 256 */\n        new ABRPresets(320, 9, 9, 1, 0.90, 5.20, 125, 0, 1.00, -10, 12.0, 0, 0, 0)  /* 320 */\n    ];\n\n    function apply_abr_preset(gfp, preset, enforce) {\n        /* Variables for the ABR stuff */\n        var actual_bitrate = preset;\n\n        var r = lame.nearestBitrateFullIndex(preset);\n\n        gfp.VBR = VbrMode.vbr_abr;\n        gfp.VBR_mean_bitrate_kbps = actual_bitrate;\n        gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps, 320);\n        gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps, 8);\n        gfp.brate = gfp.VBR_mean_bitrate_kbps;\n        if (gfp.VBR_mean_bitrate_kbps > 320) {\n            gfp.disable_reservoir = true;\n        }\n\n        /* parameters for which there is no proper set/get interface */\n        if (abr_switch_map[r].safejoint > 0)\n            gfp.exp_nspsytune = gfp.exp_nspsytune | 2;\n        /* safejoint */\n\n        if (abr_switch_map[r].sfscale > 0) {\n            gfp.internal_flags.noise_shaping = 2;\n        }\n        /* ns-bass tweaks */\n        if (Math.abs(abr_switch_map[r].nsbass) > 0) {\n            var k = (int)(abr_switch_map[r].nsbass * 4);\n            if (k < 0)\n                k += 64;\n            gfp.exp_nspsytune = gfp.exp_nspsytune | (k << 2);\n        }\n\n        if (enforce != 0)\n            gfp.quant_comp = abr_switch_map[r].quant_comp;\n        else if (!(Math.abs(gfp.quant_comp - -1) > 0))\n            gfp.quant_comp = abr_switch_map[r].quant_comp;\n        // SET_OPTION(quant_comp, abr_switch_map[r].quant_comp, -1);\n        if (enforce != 0)\n            gfp.quant_comp_short = abr_switch_map[r].quant_comp_s;\n        else if (!(Math.abs(gfp.quant_comp_short - -1) > 0))\n            gfp.quant_comp_short = abr_switch_map[r].quant_comp_s;\n        // SET_OPTION(quant_comp_short, abr_switch_map[r].quant_comp_s, -1);\n\n        if (enforce != 0)\n            gfp.msfix = abr_switch_map[r].nsmsfix;\n        else if (!(Math.abs(gfp.msfix - -1) > 0))\n            gfp.msfix = abr_switch_map[r].nsmsfix;\n        // SET_OPTION(msfix, abr_switch_map[r].nsmsfix, -1);\n\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre = abr_switch_map[r].st_lrm;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre = abr_switch_map[r].st_lrm;\n        // SET_OPTION(short_threshold_lrm, abr_switch_map[r].st_lrm, -1);\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre_s = abr_switch_map[r].st_s;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre_s - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre_s = abr_switch_map[r].st_s;\n        // SET_OPTION(short_threshold_s, abr_switch_map[r].st_s, -1);\n\n        /*\n         * ABR seems to have big problems with clipping, especially at low\n         * bitrates\n         */\n        /*\n         * so we compensate for that here by using a scale value depending on\n         * bitrate\n         */\n        if (enforce != 0)\n            gfp.scale = abr_switch_map[r].scale;\n        else if (!(Math.abs(gfp.scale - -1) > 0))\n            gfp.scale = abr_switch_map[r].scale;\n        // SET_OPTION(scale, abr_switch_map[r].scale, -1);\n\n        if (enforce != 0)\n            gfp.maskingadjust = abr_switch_map[r].masking_adj;\n        else if (!(Math.abs(gfp.maskingadjust - 0) > 0))\n            gfp.maskingadjust = abr_switch_map[r].masking_adj;\n        // SET_OPTION(maskingadjust, abr_switch_map[r].masking_adj, 0);\n        if (abr_switch_map[r].masking_adj > 0) {\n            if (enforce != 0)\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * .9);\n            else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0))\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * .9);\n            // SET_OPTION(maskingadjust_short, abr_switch_map[r].masking_adj *\n            // .9, 0);\n        } else {\n            if (enforce != 0)\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * 1.1);\n            else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0))\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * 1.1);\n            // SET_OPTION(maskingadjust_short, abr_switch_map[r].masking_adj *\n            // 1.1, 0);\n        }\n\n        if (enforce != 0)\n            gfp.ATHlower = -abr_switch_map[r].ath_lower / 10.;\n        else if (!(Math.abs((-gfp.ATHlower * 10.) - 0) > 0))\n            gfp.ATHlower = -abr_switch_map[r].ath_lower / 10.;\n        // SET_OPTION(ATHlower, abr_switch_map[r].ath_lower, 0);\n        if (enforce != 0)\n            gfp.ATHcurve = abr_switch_map[r].ath_curve;\n        else if (!(Math.abs(gfp.ATHcurve - -1) > 0))\n            gfp.ATHcurve = abr_switch_map[r].ath_curve;\n        // SET_OPTION(ATHcurve, abr_switch_map[r].ath_curve, -1);\n\n        if (enforce != 0)\n            gfp.interChRatio = abr_switch_map[r].interch;\n        else if (!(Math.abs(gfp.interChRatio - -1) > 0))\n            gfp.interChRatio = abr_switch_map[r].interch;\n        // SET_OPTION(interChRatio, abr_switch_map[r].interch, -1);\n\n        return preset;\n    }\n\n    this.apply_preset = function(gfp, preset, enforce) {\n        /* translate legacy presets */\n        switch (preset) {\n            case Lame.R3MIX:\n            {\n                preset = Lame.V3;\n                gfp.VBR = VbrMode.vbr_mtrh;\n                break;\n            }\n            case Lame.MEDIUM:\n            {\n                preset = Lame.V4;\n                gfp.VBR = VbrMode.vbr_rh;\n                break;\n            }\n            case Lame.MEDIUM_FAST:\n            {\n                preset = Lame.V4;\n                gfp.VBR = VbrMode.vbr_mtrh;\n                break;\n            }\n            case Lame.STANDARD:\n            {\n                preset = Lame.V2;\n                gfp.VBR = VbrMode.vbr_rh;\n                break;\n            }\n            case Lame.STANDARD_FAST:\n            {\n                preset = Lame.V2;\n                gfp.VBR = VbrMode.vbr_mtrh;\n                break;\n            }\n            case Lame.EXTREME:\n            {\n                preset = Lame.V0;\n                gfp.VBR = VbrMode.vbr_rh;\n                break;\n            }\n            case Lame.EXTREME_FAST:\n            {\n                preset = Lame.V0;\n                gfp.VBR = VbrMode.vbr_mtrh;\n                break;\n            }\n            case Lame.INSANE:\n            {\n                preset = 320;\n                gfp.preset = preset;\n                apply_abr_preset(gfp, preset, enforce);\n                gfp.VBR = VbrMode.vbr_off;\n                return preset;\n            }\n        }\n\n        gfp.preset = preset;\n        {\n            switch (preset) {\n                case Lame.V9:\n                    apply_vbr_preset(gfp, 9, enforce);\n                    return preset;\n                case Lame.V8:\n                    apply_vbr_preset(gfp, 8, enforce);\n                    return preset;\n                case Lame.V7:\n                    apply_vbr_preset(gfp, 7, enforce);\n                    return preset;\n                case Lame.V6:\n                    apply_vbr_preset(gfp, 6, enforce);\n                    return preset;\n                case Lame.V5:\n                    apply_vbr_preset(gfp, 5, enforce);\n                    return preset;\n                case Lame.V4:\n                    apply_vbr_preset(gfp, 4, enforce);\n                    return preset;\n                case Lame.V3:\n                    apply_vbr_preset(gfp, 3, enforce);\n                    return preset;\n                case Lame.V2:\n                    apply_vbr_preset(gfp, 2, enforce);\n                    return preset;\n                case Lame.V1:\n                    apply_vbr_preset(gfp, 1, enforce);\n                    return preset;\n                case Lame.V0:\n                    apply_vbr_preset(gfp, 0, enforce);\n                    return preset;\n                default:\n                    break;\n            }\n        }\n        if (8 <= preset && preset <= 320) {\n            return apply_abr_preset(gfp, preset, enforce);\n        }\n\n        /* no corresponding preset found */\n        gfp.preset = 0;\n        return preset;\n    }\n\n    // Rest from getset.c:\n\n    /**\n     * VBR quality level.<BR>\n     * 0 = highest<BR>\n     * 9 = lowest\n     */\n    function lame_set_VBR_q(gfp, VBR_q) {\n        var ret = 0;\n\n        if (0 > VBR_q) {\n            /* Unknown VBR quality level! */\n            ret = -1;\n            VBR_q = 0;\n        }\n        if (9 < VBR_q) {\n            ret = -1;\n            VBR_q = 9;\n        }\n\n        gfp.VBR_q = VBR_q;\n        gfp.VBR_q_frac = 0;\n        return ret;\n    }\n\n}\n\nmodule.exports = Presets;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/lamejs/src/js/Presets.js?");

/***/ }),

/***/ "../node_modules/lamejs/src/js/PsyModel.js":
/*!*************************************************!*\
  !*** ../node_modules/lamejs/src/js/PsyModel.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n *      psymodel.c\n *\n *      Copyright (c) 1999-2000 Mark Taylor\n *      Copyright (c) 2001-2002 Naoki Shibata\n *      Copyright (c) 2000-2003 Takehiro Tominaga\n *      Copyright (c) 2000-2008 Robert Hegemann\n *      Copyright (c) 2000-2005 Gabriel Bouvigne\n *      Copyright (c) 2000-2005 Alexander Leidinger\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: PsyModel.java,v 1.27 2011/05/24 20:48:06 kenchis Exp $ */\n\n\n/*\n PSYCHO ACOUSTICS\n\n\n This routine computes the psycho acoustics, delayed by one granule.\n\n Input: buffer of PCM data (1024 samples).\n\n This window should be centered over the 576 sample granule window.\n The routine will compute the psycho acoustics for\n this granule, but return the psycho acoustics computed\n for the *previous* granule.  This is because the block\n type of the previous granule can only be determined\n after we have computed the psycho acoustics for the following\n granule.\n\n Output:  maskings and energies for each scalefactor band.\n block type, PE, and some correlation measures.\n The PE is used by CBR modes to determine if extra bits\n from the bit reservoir should be used.  The correlation\n measures are used to determine mid/side or regular stereo.\n */\n/*\n Notation:\n\n barks:  a non-linear frequency scale.  Mapping from frequency to\n barks is given by freq2bark()\n\n scalefactor bands: The spectrum (frequencies) are broken into\n SBMAX \"scalefactor bands\".  Thes bands\n are determined by the MPEG ISO spec.  In\n the noise shaping/quantization code, we allocate\n bits among the partition bands to achieve the\n best possible quality\n\n partition bands:   The spectrum is also broken into about\n 64 \"partition bands\".  Each partition\n band is about .34 barks wide.  There are about 2-5\n partition bands for each scalefactor band.\n\n LAME computes all psycho acoustic information for each partition\n band.  Then at the end of the computations, this information\n is mapped to scalefactor bands.  The energy in each scalefactor\n band is taken as the sum of the energy in all partition bands\n which overlap the scalefactor band.  The maskings can be computed\n in the same way (and thus represent the average masking in that band)\n or by taking the minmum value multiplied by the number of\n partition bands used (which represents a minimum masking in that band).\n */\n/*\n The general outline is as follows:\n\n 1. compute the energy in each partition band\n 2. compute the tonality in each partition band\n 3. compute the strength of each partion band \"masker\"\n 4. compute the masking (via the spreading function applied to each masker)\n 5. Modifications for mid/side masking.\n\n Each partition band is considiered a \"masker\".  The strength\n of the i'th masker in band j is given by:\n\n s3(bark(i)-bark(j))*strength(i)\n\n The strength of the masker is a function of the energy and tonality.\n The more tonal, the less masking.  LAME uses a simple linear formula\n (controlled by NMT and TMN) which says the strength is given by the\n energy divided by a linear function of the tonality.\n */\n/*\n s3() is the \"spreading function\".  It is given by a formula\n determined via listening tests.\n\n The total masking in the j'th partition band is the sum over\n all maskings i.  It is thus given by the convolution of\n the strength with s3(), the \"spreading function.\"\n\n masking(j) = sum_over_i  s3(i-j)*strength(i)  = s3 o strength\n\n where \"o\" = convolution operator.  s3 is given by a formula determined\n via listening tests.  It is normalized so that s3 o 1 = 1.\n\n Note: instead of a simple convolution, LAME also has the\n option of using \"additive masking\"\n\n The most critical part is step 2, computing the tonality of each\n partition band.  LAME has two tonality estimators.  The first\n is based on the ISO spec, and measures how predictiable the\n signal is over time.  The more predictable, the more tonal.\n The second measure is based on looking at the spectrum of\n a single granule.  The more peaky the spectrum, the more\n tonal.  By most indications, the latter approach is better.\n\n Finally, in step 5, the maskings for the mid and side\n channel are possibly increased.  Under certain circumstances,\n noise in the mid & side channels is assumed to also\n be masked by strong maskers in the L or R channels.\n\n\n Other data computed by the psy-model:\n\n ms_ratio        side-channel / mid-channel masking ratio (for previous granule)\n ms_ratio_next   side-channel / mid-channel masking ratio for this granule\n\n percep_entropy[2]     L and R values (prev granule) of PE - A measure of how\n much pre-echo is in the previous granule\n percep_entropy_MS[2]  mid and side channel values (prev granule) of percep_entropy\n energy[4]             L,R,M,S energy in each channel, prev granule\n blocktype_d[2]        block type to use for previous granule\n */\n//package mp3;\n\n//import java.util.Arrays;\nvar common = __webpack_require__(/*! ./common.js */ \"../node_modules/lamejs/src/js/common.js\");\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar FFT = __webpack_require__(/*! ./FFT.js */ \"../node_modules/lamejs/src/js/FFT.js\");\nvar Encoder = __webpack_require__(/*! ./Encoder.js */ \"../node_modules/lamejs/src/js/Encoder.js\");\n\nfunction PsyModel() {\n\n    var fft = new FFT();\n\n    var LOG10 = 2.30258509299404568402;\n\n    var rpelev = 2;\n    var rpelev2 = 16;\n    var rpelev_s = 2;\n    var rpelev2_s = 16;\n\n    /* size of each partition band, in barks: */\n    var DELBARK = .34;\n\n    /* tuned for output level (sensitive to energy scale) */\n    var VO_SCALE = (1. / (14752 * 14752) / (Encoder.BLKSIZE / 2));\n\n    var temporalmask_sustain_sec = 0.01;\n\n    var NS_PREECHO_ATT0 = 0.8;\n    var NS_PREECHO_ATT1 = 0.6;\n    var NS_PREECHO_ATT2 = 0.3;\n\n    var NS_MSFIX = 3.5;\n\n    var NSATTACKTHRE = 4.4;\n    var NSATTACKTHRE_S = 25;\n\n    var NSFIRLEN = 21;\n\n    /* size of each partition band, in barks: */\n    var LN_TO_LOG10 = 0.2302585093;\n\n    function NON_LINEAR_SCALE_ENERGY(x) {\n        return x;\n    }\n\n    /**\n     * <PRE>\n     *       L3psycho_anal.  Compute psycho acoustics.\n     *\n     *       Data returned to the calling program must be delayed by one\n     *       granule.\n     *\n     *       This is done in two places.\n     *       If we do not need to know the blocktype, the copying\n     *       can be done here at the top of the program: we copy the data for\n     *       the last granule (computed during the last call) before it is\n     *       overwritten with the new data.  It looks like this:\n     *\n     *       0. static psymodel_data\n     *       1. calling_program_data = psymodel_data\n     *       2. compute psymodel_data\n     *\n     *       For data which needs to know the blocktype, the copying must be\n     *       done at the end of this loop, and the old values must be saved:\n     *\n     *       0. static psymodel_data_old\n     *       1. compute psymodel_data\n     *       2. compute possible block type of this granule\n     *       3. compute final block type of previous granule based on #2.\n     *       4. calling_program_data = psymodel_data_old\n     *       5. psymodel_data_old = psymodel_data\n     *     psycho_loudness_approx\n     *       jd - 2001 mar 12\n     *    in:  energy   - BLKSIZE/2 elements of frequency magnitudes ^ 2\n     *         gfp      - uses out_samplerate, ATHtype (also needed for ATHformula)\n     *    returns: loudness^2 approximation, a positive value roughly tuned for a value\n     *             of 1.0 for signals near clipping.\n     *    notes:   When calibrated, feeding this function binary white noise at sample\n     *             values +32767 or -32768 should return values that approach 3.\n     *             ATHformula is used to approximate an equal loudness curve.\n     *    future:  Data indicates that the shape of the equal loudness curve varies\n     *             with intensity.  This function might be improved by using an equal\n     *             loudness curve shaped for typical playback levels (instead of the\n     *             ATH, that is shaped for the threshold).  A flexible realization might\n     *             simply bend the existing ATH curve to achieve the desired shape.\n     *             However, the potential gain may not be enough to justify an effort.\n     * </PRE>\n     */\n    function psycho_loudness_approx(energy, gfc) {\n        var loudness_power = 0.0;\n        /* apply weights to power in freq. bands */\n        for (var i = 0; i < Encoder.BLKSIZE / 2; ++i)\n            loudness_power += energy[i] * gfc.ATH.eql_w[i];\n        loudness_power *= VO_SCALE;\n\n        return loudness_power;\n    }\n\n    function compute_ffts(gfp, fftenergy, fftenergy_s, wsamp_l, wsamp_lPos, wsamp_s, wsamp_sPos, gr_out, chn, buffer, bufPos) {\n        var gfc = gfp.internal_flags;\n        if (chn < 2) {\n            fft.fft_long(gfc, wsamp_l[wsamp_lPos], chn, buffer, bufPos);\n            fft.fft_short(gfc, wsamp_s[wsamp_sPos], chn, buffer, bufPos);\n        }\n        /* FFT data for mid and side channel is derived from L & R */\n        else if (chn == 2) {\n            for (var j = Encoder.BLKSIZE - 1; j >= 0; --j) {\n                var l = wsamp_l[wsamp_lPos + 0][j];\n                var r = wsamp_l[wsamp_lPos + 1][j];\n                wsamp_l[wsamp_lPos + 0][j] = (l + r) * Util.SQRT2 * 0.5;\n                wsamp_l[wsamp_lPos + 1][j] = (l - r) * Util.SQRT2 * 0.5;\n            }\n            for (var b = 2; b >= 0; --b) {\n                for (var j = Encoder.BLKSIZE_s - 1; j >= 0; --j) {\n                    var l = wsamp_s[wsamp_sPos + 0][b][j];\n                    var r = wsamp_s[wsamp_sPos + 1][b][j];\n                    wsamp_s[wsamp_sPos + 0][b][j] = (l + r) * Util.SQRT2 * 0.5;\n                    wsamp_s[wsamp_sPos + 1][b][j] = (l - r) * Util.SQRT2 * 0.5;\n                }\n            }\n        }\n\n        /*********************************************************************\n         * compute energies\n         *********************************************************************/\n        fftenergy[0] = NON_LINEAR_SCALE_ENERGY(wsamp_l[wsamp_lPos + 0][0]);\n        fftenergy[0] *= fftenergy[0];\n\n        for (var j = Encoder.BLKSIZE / 2 - 1; j >= 0; --j) {\n            var re = (wsamp_l[wsamp_lPos + 0])[Encoder.BLKSIZE / 2 - j];\n            var im = (wsamp_l[wsamp_lPos + 0])[Encoder.BLKSIZE / 2 + j];\n            fftenergy[Encoder.BLKSIZE / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                * re + im * im) * 0.5);\n        }\n        for (var b = 2; b >= 0; --b) {\n            fftenergy_s[b][0] = (wsamp_s[wsamp_sPos + 0])[b][0];\n            fftenergy_s[b][0] *= fftenergy_s[b][0];\n            for (var j = Encoder.BLKSIZE_s / 2 - 1; j >= 0; --j) {\n                var re = (wsamp_s[wsamp_sPos + 0])[b][Encoder.BLKSIZE_s\n                / 2 - j];\n                var im = (wsamp_s[wsamp_sPos + 0])[b][Encoder.BLKSIZE_s\n                / 2 + j];\n                fftenergy_s[b][Encoder.BLKSIZE_s / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                    * re + im * im) * 0.5);\n            }\n        }\n        /* total energy */\n        {\n            var totalenergy = 0.0;\n            for (var j = 11; j < Encoder.HBLKSIZE; j++)\n                totalenergy += fftenergy[j];\n\n            gfc.tot_ener[chn] = totalenergy;\n        }\n\n        if (gfp.analysis) {\n            for (var j = 0; j < Encoder.HBLKSIZE; j++) {\n                gfc.pinfo.energy[gr_out][chn][j] = gfc.pinfo.energy_save[chn][j];\n                gfc.pinfo.energy_save[chn][j] = fftenergy[j];\n            }\n            gfc.pinfo.pe[gr_out][chn] = gfc.pe[chn];\n        }\n\n        /*********************************************************************\n         * compute loudness approximation (used for ATH auto-level adjustment)\n         *********************************************************************/\n        if (gfp.athaa_loudapprox == 2 && chn < 2) {\n            // no loudness for mid/side ch\n            gfc.loudness_sq[gr_out][chn] = gfc.loudness_sq_save[chn];\n            gfc.loudness_sq_save[chn] = psycho_loudness_approx(fftenergy, gfc);\n        }\n    }\n\n    /* mask_add optimization */\n    /* init the limit values used to avoid computing log in mask_add when it is not necessary */\n\n    /**\n     * <PRE>\n     *  For example, with i = 10*log10(m2/m1)/10*16         (= log10(m2/m1)*16)\n     *\n     * abs(i)>8 is equivalent (as i is an integer) to\n     * abs(i)>=9\n     * i>=9 || i<=-9\n     * equivalent to (as i is the biggest integer smaller than log10(m2/m1)*16\n     * or the smallest integer bigger than log10(m2/m1)*16 depending on the sign of log10(m2/m1)*16)\n     * log10(m2/m1)>=9/16 || log10(m2/m1)<=-9/16\n     * exp10 is strictly increasing thus this is equivalent to\n     * m2/m1 >= 10^(9/16) || m2/m1<=10^(-9/16) which are comparisons to constants\n     * </PRE>\n     */\n\n    /**\n     * as in if(i>8)\n     */\n    var I1LIMIT = 8;\n    /**\n     * as in if(i>24) . changed 23\n     */\n    var I2LIMIT = 23;\n    /**\n     * as in if(m<15)\n     */\n    var MLIMIT = 15;\n\n    var ma_max_i1;\n    var ma_max_i2;\n    var ma_max_m;\n\n    /**\n     * This is the masking table:<BR>\n     * According to tonality, values are going from 0dB (TMN) to 9.3dB (NMT).<BR>\n     * After additive masking computation, 8dB are added, so final values are\n     * going from 8dB to 17.3dB\n     *\n     * pow(10, -0.0..-0.6)\n     */\n    var tab = [1.0, 0.79433, 0.63096, 0.63096,\n        0.63096, 0.63096, 0.63096, 0.25119, 0.11749];\n\n    function init_mask_add_max_values() {\n        ma_max_i1 = Math.pow(10, (I1LIMIT + 1) / 16.0);\n        ma_max_i2 = Math.pow(10, (I2LIMIT + 1) / 16.0);\n        ma_max_m = Math.pow(10, (MLIMIT) / 10.0);\n    }\n\n    var table1 = [3.3246 * 3.3246,\n        3.23837 * 3.23837, 3.15437 * 3.15437, 3.00412 * 3.00412,\n        2.86103 * 2.86103, 2.65407 * 2.65407, 2.46209 * 2.46209,\n        2.284 * 2.284, 2.11879 * 2.11879, 1.96552 * 1.96552,\n        1.82335 * 1.82335, 1.69146 * 1.69146, 1.56911 * 1.56911,\n        1.46658 * 1.46658, 1.37074 * 1.37074, 1.31036 * 1.31036,\n        1.25264 * 1.25264, 1.20648 * 1.20648, 1.16203 * 1.16203,\n        1.12765 * 1.12765, 1.09428 * 1.09428, 1.0659 * 1.0659,\n        1.03826 * 1.03826, 1.01895 * 1.01895, 1];\n\n    var table2 = [1.33352 * 1.33352,\n        1.35879 * 1.35879, 1.38454 * 1.38454, 1.39497 * 1.39497,\n        1.40548 * 1.40548, 1.3537 * 1.3537, 1.30382 * 1.30382,\n        1.22321 * 1.22321, 1.14758 * 1.14758, 1];\n\n    var table3 = [2.35364 * 2.35364,\n        2.29259 * 2.29259, 2.23313 * 2.23313, 2.12675 * 2.12675,\n        2.02545 * 2.02545, 1.87894 * 1.87894, 1.74303 * 1.74303,\n        1.61695 * 1.61695, 1.49999 * 1.49999, 1.39148 * 1.39148,\n        1.29083 * 1.29083, 1.19746 * 1.19746, 1.11084 * 1.11084,\n        1.03826 * 1.03826];\n\n    /**\n     * addition of simultaneous masking Naoki Shibata 2000/7\n     */\n    function mask_add(m1, m2, kk, b, gfc, shortblock) {\n        var ratio;\n\n        if (m2 > m1) {\n            if (m2 < (m1 * ma_max_i2))\n                ratio = m2 / m1;\n            else\n                return (m1 + m2);\n        } else {\n            if (m1 >= (m2 * ma_max_i2))\n                return (m1 + m2);\n            ratio = m1 / m2;\n        }\n\n        /* Should always be true, just checking */\n        assert(m1 >= 0);\n        assert(m2 >= 0);\n\n        m1 += m2;\n        //if (((long)(b + 3) & 0xffffffff) <= 3 + 3) {\n        if ((b + 3) <= 3 + 3) {\n            /* approximately, 1 bark = 3 partitions */\n            /* 65% of the cases */\n            /* originally 'if(i > 8)' */\n            if (ratio >= ma_max_i1) {\n                /* 43% of the total */\n                return m1;\n            }\n\n            /* 22% of the total */\n            var i = 0 | (Util.FAST_LOG10_X(ratio, 16.0));\n            return m1 * table2[i];\n        }\n\n        /**\n         * <PRE>\n         * m<15 equ log10((m1+m2)/gfc.ATH.cb[k])<1.5\n         * equ (m1+m2)/gfc.ATH.cb[k]<10^1.5\n         * equ (m1+m2)<10^1.5 * gfc.ATH.cb[k]\n         * </PRE>\n         */\n        var i = 0 | Util.FAST_LOG10_X(ratio, 16.0);\n        if (shortblock != 0) {\n            m2 = gfc.ATH.cb_s[kk] * gfc.ATH.adjust;\n        } else {\n            m2 = gfc.ATH.cb_l[kk] * gfc.ATH.adjust;\n        }\n        assert(m2 >= 0);\n        if (m1 < ma_max_m * m2) {\n            /* 3% of the total */\n            /* Originally if (m > 0) { */\n            if (m1 > m2) {\n                var f, r;\n\n                f = 1.0;\n                if (i <= 13)\n                    f = table3[i];\n\n                r = Util.FAST_LOG10_X(m1 / m2, 10.0 / 15.0);\n                return m1 * ((table1[i] - f) * r + f);\n            }\n\n            if (i > 13)\n                return m1;\n\n            return m1 * table3[i];\n        }\n\n        /* 10% of total */\n        return m1 * table1[i];\n    }\n\n    var table2_ = [1.33352 * 1.33352,\n        1.35879 * 1.35879, 1.38454 * 1.38454, 1.39497 * 1.39497,\n        1.40548 * 1.40548, 1.3537 * 1.3537, 1.30382 * 1.30382,\n        1.22321 * 1.22321, 1.14758 * 1.14758, 1];\n\n    /**\n     * addition of simultaneous masking Naoki Shibata 2000/7\n     */\n    function vbrpsy_mask_add(m1, m2, b) {\n        var ratio;\n\n        if (m1 < 0) {\n            m1 = 0;\n        }\n        if (m2 < 0) {\n            m2 = 0;\n        }\n        if (m1 <= 0) {\n            return m2;\n        }\n        if (m2 <= 0) {\n            return m1;\n        }\n        if (m2 > m1) {\n            ratio = m2 / m1;\n        } else {\n            ratio = m1 / m2;\n        }\n        if (-2 <= b && b <= 2) {\n            /* approximately, 1 bark = 3 partitions */\n            /* originally 'if(i > 8)' */\n            if (ratio >= ma_max_i1) {\n                return m1 + m2;\n            } else {\n                var i = 0 | (Util.FAST_LOG10_X(ratio, 16.0));\n                return (m1 + m2) * table2_[i];\n            }\n        }\n        if (ratio < ma_max_i2) {\n            return m1 + m2;\n        }\n        if (m1 < m2) {\n            m1 = m2;\n        }\n        return m1;\n    }\n\n    /**\n     * compute interchannel masking effects\n     */\n    function calc_interchannel_masking(gfp, ratio) {\n        var gfc = gfp.internal_flags;\n        if (gfc.channels_out > 1) {\n            for (var sb = 0; sb < Encoder.SBMAX_l; sb++) {\n                var l = gfc.thm[0].l[sb];\n                var r = gfc.thm[1].l[sb];\n                gfc.thm[0].l[sb] += r * ratio;\n                gfc.thm[1].l[sb] += l * ratio;\n            }\n            for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\n                for (var sblock = 0; sblock < 3; sblock++) {\n                    var l = gfc.thm[0].s[sb][sblock];\n                    var r = gfc.thm[1].s[sb][sblock];\n                    gfc.thm[0].s[sb][sblock] += r * ratio;\n                    gfc.thm[1].s[sb][sblock] += l * ratio;\n                }\n            }\n        }\n    }\n\n    /**\n     * compute M/S thresholds from Johnston & Ferreira 1992 ICASSP paper\n     */\n    function msfix1(gfc) {\n        for (var sb = 0; sb < Encoder.SBMAX_l; sb++) {\n            /* use this fix if L & R masking differs by 2db or less */\n            /* if db = 10*log10(x2/x1) < 2 */\n            /* if (x2 < 1.58*x1) { */\n            if (gfc.thm[0].l[sb] > 1.58 * gfc.thm[1].l[sb]\n                || gfc.thm[1].l[sb] > 1.58 * gfc.thm[0].l[sb])\n                continue;\n            var mld = gfc.mld_l[sb] * gfc.en[3].l[sb];\n            var rmid = Math.max(gfc.thm[2].l[sb],\n                Math.min(gfc.thm[3].l[sb], mld));\n\n            mld = gfc.mld_l[sb] * gfc.en[2].l[sb];\n            var rside = Math.max(gfc.thm[3].l[sb],\n                Math.min(gfc.thm[2].l[sb], mld));\n            gfc.thm[2].l[sb] = rmid;\n            gfc.thm[3].l[sb] = rside;\n        }\n\n        for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                if (gfc.thm[0].s[sb][sblock] > 1.58 * gfc.thm[1].s[sb][sblock]\n                    || gfc.thm[1].s[sb][sblock] > 1.58 * gfc.thm[0].s[sb][sblock])\n                    continue;\n                var mld = gfc.mld_s[sb] * gfc.en[3].s[sb][sblock];\n                var rmid = Math.max(gfc.thm[2].s[sb][sblock],\n                    Math.min(gfc.thm[3].s[sb][sblock], mld));\n\n                mld = gfc.mld_s[sb] * gfc.en[2].s[sb][sblock];\n                var rside = Math.max(gfc.thm[3].s[sb][sblock],\n                    Math.min(gfc.thm[2].s[sb][sblock], mld));\n\n                gfc.thm[2].s[sb][sblock] = rmid;\n                gfc.thm[3].s[sb][sblock] = rside;\n            }\n        }\n    }\n\n    /**\n     * Adjust M/S maskings if user set \"msfix\"\n     *\n     * Naoki Shibata 2000\n     */\n    function ns_msfix(gfc, msfix, athadjust) {\n        var msfix2 = msfix;\n        var athlower = Math.pow(10, athadjust);\n\n        msfix *= 2.0;\n        msfix2 *= 2.0;\n        for (var sb = 0; sb < Encoder.SBMAX_l; sb++) {\n            var thmLR, thmM, thmS, ath;\n            ath = (gfc.ATH.cb_l[gfc.bm_l[sb]]) * athlower;\n            thmLR = Math.min(Math.max(gfc.thm[0].l[sb], ath),\n                Math.max(gfc.thm[1].l[sb], ath));\n            thmM = Math.max(gfc.thm[2].l[sb], ath);\n            thmS = Math.max(gfc.thm[3].l[sb], ath);\n            if (thmLR * msfix < thmM + thmS) {\n                var f = thmLR * msfix2 / (thmM + thmS);\n                thmM *= f;\n                thmS *= f;\n                assert(thmM + thmS > 0);\n            }\n            gfc.thm[2].l[sb] = Math.min(thmM, gfc.thm[2].l[sb]);\n            gfc.thm[3].l[sb] = Math.min(thmS, gfc.thm[3].l[sb]);\n        }\n\n        athlower *= ( Encoder.BLKSIZE_s / Encoder.BLKSIZE);\n        for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                var thmLR, thmM, thmS, ath;\n                ath = (gfc.ATH.cb_s[gfc.bm_s[sb]]) * athlower;\n                thmLR = Math.min(Math.max(gfc.thm[0].s[sb][sblock], ath),\n                    Math.max(gfc.thm[1].s[sb][sblock], ath));\n                thmM = Math.max(gfc.thm[2].s[sb][sblock], ath);\n                thmS = Math.max(gfc.thm[3].s[sb][sblock], ath);\n\n                if (thmLR * msfix < thmM + thmS) {\n                    var f = thmLR * msfix / (thmM + thmS);\n                    thmM *= f;\n                    thmS *= f;\n                    assert(thmM + thmS > 0);\n                }\n                gfc.thm[2].s[sb][sblock] = Math.min(gfc.thm[2].s[sb][sblock],\n                    thmM);\n                gfc.thm[3].s[sb][sblock] = Math.min(gfc.thm[3].s[sb][sblock],\n                    thmS);\n            }\n        }\n    }\n\n    /**\n     * short block threshold calculation (part 2)\n     *\n     * partition band bo_s[sfb] is at the transition from scalefactor band sfb\n     * to the next one sfb+1; enn and thmm have to be split between them\n     */\n    function convert_partition2scalefac_s(gfc, eb, thr, chn, sblock) {\n        var sb, b;\n        var enn = 0.0;\n        var thmm = 0.0;\n        for (sb = b = 0; sb < Encoder.SBMAX_s; ++b, ++sb) {\n            var bo_s_sb = gfc.bo_s[sb];\n            var npart_s = gfc.npart_s;\n            var b_lim = bo_s_sb < npart_s ? bo_s_sb : npart_s;\n            while (b < b_lim) {\n                assert(eb[b] >= 0);\n                // iff failed, it may indicate some index error elsewhere\n                assert(thr[b] >= 0);\n                enn += eb[b];\n                thmm += thr[b];\n                b++;\n            }\n            gfc.en[chn].s[sb][sblock] = enn;\n            gfc.thm[chn].s[sb][sblock] = thmm;\n\n            if (b >= npart_s) {\n                ++sb;\n                break;\n            }\n            assert(eb[b] >= 0);\n            // iff failed, it may indicate some index error elsewhere\n            assert(thr[b] >= 0);\n            {\n                /* at transition sfb . sfb+1 */\n                var w_curr = gfc.PSY.bo_s_weight[sb];\n                var w_next = 1.0 - w_curr;\n                enn = w_curr * eb[b];\n                thmm = w_curr * thr[b];\n                gfc.en[chn].s[sb][sblock] += enn;\n                gfc.thm[chn].s[sb][sblock] += thmm;\n                enn = w_next * eb[b];\n                thmm = w_next * thr[b];\n            }\n        }\n        /* zero initialize the rest */\n        for (; sb < Encoder.SBMAX_s; ++sb) {\n            gfc.en[chn].s[sb][sblock] = 0;\n            gfc.thm[chn].s[sb][sblock] = 0;\n        }\n    }\n\n    /**\n     * longblock threshold calculation (part 2)\n     */\n    function convert_partition2scalefac_l(gfc, eb, thr, chn) {\n        var sb, b;\n        var enn = 0.0;\n        var thmm = 0.0;\n        for (sb = b = 0; sb < Encoder.SBMAX_l; ++b, ++sb) {\n            var bo_l_sb = gfc.bo_l[sb];\n            var npart_l = gfc.npart_l;\n            var b_lim = bo_l_sb < npart_l ? bo_l_sb : npart_l;\n            while (b < b_lim) {\n                assert(eb[b] >= 0);\n                // iff failed, it may indicate some index error elsewhere\n                assert(thr[b] >= 0);\n                enn += eb[b];\n                thmm += thr[b];\n                b++;\n            }\n            gfc.en[chn].l[sb] = enn;\n            gfc.thm[chn].l[sb] = thmm;\n\n            if (b >= npart_l) {\n                ++sb;\n                break;\n            }\n            assert(eb[b] >= 0);\n            assert(thr[b] >= 0);\n            {\n                /* at transition sfb . sfb+1 */\n                var w_curr = gfc.PSY.bo_l_weight[sb];\n                var w_next = 1.0 - w_curr;\n                enn = w_curr * eb[b];\n                thmm = w_curr * thr[b];\n                gfc.en[chn].l[sb] += enn;\n                gfc.thm[chn].l[sb] += thmm;\n                enn = w_next * eb[b];\n                thmm = w_next * thr[b];\n            }\n        }\n        /* zero initialize the rest */\n        for (; sb < Encoder.SBMAX_l; ++sb) {\n            gfc.en[chn].l[sb] = 0;\n            gfc.thm[chn].l[sb] = 0;\n        }\n    }\n\n    function compute_masking_s(gfp, fftenergy_s, eb, thr, chn, sblock) {\n        var gfc = gfp.internal_flags;\n        var j, b;\n\n        for (b = j = 0; b < gfc.npart_s; ++b) {\n            var ebb = 0, m = 0;\n            var n = gfc.numlines_s[b];\n            for (var i = 0; i < n; ++i, ++j) {\n                var el = fftenergy_s[sblock][j];\n                ebb += el;\n                if (m < el)\n                    m = el;\n            }\n            eb[b] = ebb;\n        }\n        assert(b == gfc.npart_s);\n        assert(j == 129);\n        for (j = b = 0; b < gfc.npart_s; b++) {\n            var kk = gfc.s3ind_s[b][0];\n            var ecb = gfc.s3_ss[j++] * eb[kk];\n            ++kk;\n            while (kk <= gfc.s3ind_s[b][1]) {\n                ecb += gfc.s3_ss[j] * eb[kk];\n                ++j;\n                ++kk;\n            }\n\n            { /* limit calculated threshold by previous granule */\n                var x = rpelev_s * gfc.nb_s1[chn][b];\n                thr[b] = Math.min(ecb, x);\n            }\n            if (gfc.blocktype_old[chn & 1] == Encoder.SHORT_TYPE) {\n                /* limit calculated threshold by even older granule */\n                var x = rpelev2_s * gfc.nb_s2[chn][b];\n                var y = thr[b];\n                thr[b] = Math.min(x, y);\n            }\n\n            gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\n            gfc.nb_s1[chn][b] = ecb;\n            assert(thr[b] >= 0);\n        }\n        for (; b <= Encoder.CBANDS; ++b) {\n            eb[b] = 0;\n            thr[b] = 0;\n        }\n    }\n\n    function block_type_set(gfp, uselongblock, blocktype_d, blocktype) {\n        var gfc = gfp.internal_flags;\n\n        if (gfp.short_blocks == ShortBlock.short_block_coupled\n                /* force both channels to use the same block type */\n                /* this is necessary if the frame is to be encoded in ms_stereo. */\n                /* But even without ms_stereo, FhG does this */\n            && !(uselongblock[0] != 0 && uselongblock[1] != 0))\n            uselongblock[0] = uselongblock[1] = 0;\n\n        /*\n         * update the blocktype of the previous granule, since it depends on\n         * what happend in this granule\n         */\n        for (var chn = 0; chn < gfc.channels_out; chn++) {\n            blocktype[chn] = Encoder.NORM_TYPE;\n            /* disable short blocks */\n            if (gfp.short_blocks == ShortBlock.short_block_dispensed)\n                uselongblock[chn] = 1;\n            if (gfp.short_blocks == ShortBlock.short_block_forced)\n                uselongblock[chn] = 0;\n\n            if (uselongblock[chn] != 0) {\n                /* no attack : use long blocks */\n                assert(gfc.blocktype_old[chn] != Encoder.START_TYPE);\n                if (gfc.blocktype_old[chn] == Encoder.SHORT_TYPE)\n                    blocktype[chn] = Encoder.STOP_TYPE;\n            } else {\n                /* attack : use short blocks */\n                blocktype[chn] = Encoder.SHORT_TYPE;\n                if (gfc.blocktype_old[chn] == Encoder.NORM_TYPE) {\n                    gfc.blocktype_old[chn] = Encoder.START_TYPE;\n                }\n                if (gfc.blocktype_old[chn] == Encoder.STOP_TYPE)\n                    gfc.blocktype_old[chn] = Encoder.SHORT_TYPE;\n            }\n\n            blocktype_d[chn] = gfc.blocktype_old[chn];\n            // value returned to calling program\n            gfc.blocktype_old[chn] = blocktype[chn];\n            // save for next call to l3psy_anal\n        }\n    }\n\n    function NS_INTERP(x, y, r) {\n        /* was pow((x),(r))*pow((y),1-(r)) */\n        if (r >= 1.0) {\n            /* 99.7% of the time */\n            return x;\n        }\n        if (r <= 0.0)\n            return y;\n        if (y > 0.0) {\n            /* rest of the time */\n            return (Math.pow(x / y, r) * y);\n        }\n        /* never happens */\n        return 0.0;\n    }\n\n    /**\n     * these values are tuned only for 44.1kHz...\n     */\n    var regcoef_s = [11.8, 13.6, 17.2, 32, 46.5,\n        51.3, 57.5, 67.1, 71.5, 84.6, 97.6, 130,\n        /* 255.8 */\n    ];\n\n    function pecalc_s(mr, masking_lower) {\n        var pe_s = 1236.28 / 4;\n        for (var sb = 0; sb < Encoder.SBMAX_s - 1; sb++) {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                var thm = mr.thm.s[sb][sblock];\n                assert(sb < regcoef_s.length);\n                if (thm > 0.0) {\n                    var x = thm * masking_lower;\n                    var en = mr.en.s[sb][sblock];\n                    if (en > x) {\n                        if (en > x * 1e10) {\n                            pe_s += regcoef_s[sb] * (10.0 * LOG10);\n                        } else {\n                            assert(x > 0);\n                            pe_s += regcoef_s[sb] * Util.FAST_LOG10(en / x);\n                        }\n                    }\n                }\n            }\n        }\n\n        return pe_s;\n    }\n\n    /**\n     * these values are tuned only for 44.1kHz...\n     */\n    var regcoef_l = [6.8, 5.8, 5.8, 6.4, 6.5, 9.9,\n        12.1, 14.4, 15, 18.9, 21.6, 26.9, 34.2, 40.2, 46.8, 56.5,\n        60.7, 73.9, 85.7, 93.4, 126.1,\n        /* 241.3 */\n    ];\n\n    function pecalc_l(mr, masking_lower) {\n        var pe_l = 1124.23 / 4;\n        for (var sb = 0; sb < Encoder.SBMAX_l - 1; sb++) {\n            var thm = mr.thm.l[sb];\n            assert(sb < regcoef_l.length);\n            if (thm > 0.0) {\n                var x = thm * masking_lower;\n                var en = mr.en.l[sb];\n                if (en > x) {\n                    if (en > x * 1e10) {\n                        pe_l += regcoef_l[sb] * (10.0 * LOG10);\n                    } else {\n                        assert(x > 0);\n                        pe_l += regcoef_l[sb] * Util.FAST_LOG10(en / x);\n                    }\n                }\n            }\n        }\n        return pe_l;\n    }\n\n    function calc_energy(gfc, fftenergy, eb, max, avg) {\n        var b, j;\n\n        for (b = j = 0; b < gfc.npart_l; ++b) {\n            var ebb = 0, m = 0;\n            var i;\n            for (i = 0; i < gfc.numlines_l[b]; ++i, ++j) {\n                var el = fftenergy[j];\n                assert(el >= 0);\n                ebb += el;\n                if (m < el)\n                    m = el;\n            }\n            eb[b] = ebb;\n            max[b] = m;\n            avg[b] = ebb * gfc.rnumlines_l[b];\n            assert(gfc.rnumlines_l[b] >= 0);\n            assert(ebb >= 0);\n            assert(eb[b] >= 0);\n            assert(max[b] >= 0);\n            assert(avg[b] >= 0);\n        }\n    }\n\n    function calc_mask_index_l(gfc, max, avg, mask_idx) {\n        var last_tab_entry = tab.length - 1;\n        var b = 0;\n        var a = avg[b] + avg[b + 1];\n        assert(a >= 0);\n        if (a > 0.0) {\n            var m = max[b];\n            if (m < max[b + 1])\n                m = max[b + 1];\n            assert((gfc.numlines_l[b] + gfc.numlines_l[b + 1] - 1) > 0);\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_l[b] + gfc.numlines_l[b + 1] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n\n        for (b = 1; b < gfc.npart_l - 1; b++) {\n            a = avg[b - 1] + avg[b] + avg[b + 1];\n            assert(a >= 0);\n            if (a > 0.0) {\n                var m = max[b - 1];\n                if (m < max[b])\n                    m = max[b];\n                if (m < max[b + 1])\n                    m = max[b + 1];\n                assert((gfc.numlines_l[b - 1] + gfc.numlines_l[b] + gfc.numlines_l[b + 1] - 1) > 0);\n                a = 20.0\n                    * (m * 3.0 - a)\n                    / (a * (gfc.numlines_l[b - 1] + gfc.numlines_l[b]\n                    + gfc.numlines_l[b + 1] - 1));\n                var k = 0 | a;\n                if (k > last_tab_entry)\n                    k = last_tab_entry;\n                mask_idx[b] = k;\n            } else {\n                mask_idx[b] = 0;\n            }\n        }\n        assert(b > 0);\n        assert(b == gfc.npart_l - 1);\n\n        a = avg[b - 1] + avg[b];\n        assert(a >= 0);\n        if (a > 0.0) {\n            var m = max[b - 1];\n            if (m < max[b])\n                m = max[b];\n            assert((gfc.numlines_l[b - 1] + gfc.numlines_l[b] - 1) > 0);\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_l[b - 1] + gfc.numlines_l[b] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n        assert(b == (gfc.npart_l - 1));\n    }\n\n    var fircoef = [\n        -8.65163e-18 * 2, -0.00851586 * 2, -6.74764e-18 * 2, 0.0209036 * 2,\n        -3.36639e-17 * 2, -0.0438162 * 2, -1.54175e-17 * 2, 0.0931738 * 2,\n        -5.52212e-17 * 2, -0.313819 * 2\n    ];\n\n    this.L3psycho_anal_ns = function (gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, percep_entropy, percep_MS_entropy, energy, blocktype_d) {\n        /*\n         * to get a good cache performance, one has to think about the sequence,\n         * in which the variables are used.\n         */\n        var gfc = gfp.internal_flags;\n\n        /* fft and energy calculation */\n        var wsamp_L = new_float_n([2, Encoder.BLKSIZE]);\n        var wsamp_S = new_float_n([2, 3, Encoder.BLKSIZE_s]);\n\n        /* convolution */\n        var eb_l = new_float(Encoder.CBANDS + 1);\n        var eb_s = new_float(Encoder.CBANDS + 1);\n        var thr = new_float(Encoder.CBANDS + 2);\n\n        /* block type */\n        var blocktype = new_int(2), uselongblock = new_int(2);\n\n        /* usual variables like loop indices, etc.. */\n        var numchn, chn;\n        var b, i, j, k;\n        var sb, sblock;\n\n        /* variables used for --nspsytune */\n        var ns_hpfsmpl = new_float_n([2, 576]);\n        var pcfact;\n        var mask_idx_l = new_int(Encoder.CBANDS + 2), mask_idx_s = new_int(Encoder.CBANDS + 2);\n\n        Arrays.fill(mask_idx_s, 0);\n\n        numchn = gfc.channels_out;\n        /* chn=2 and 3 = Mid and Side channels */\n        if (gfp.mode == MPEGMode.JOINT_STEREO)\n            numchn = 4;\n\n        if (gfp.VBR == VbrMode.vbr_off)\n            pcfact = gfc.ResvMax == 0 ? 0 : ( gfc.ResvSize)\n            / gfc.ResvMax * 0.5;\n        else if (gfp.VBR == VbrMode.vbr_rh || gfp.VBR == VbrMode.vbr_mtrh\n            || gfp.VBR == VbrMode.vbr_mt) {\n            pcfact = 0.6;\n        } else\n            pcfact = 1.0;\n\n        /**********************************************************************\n         * Apply HPF of fs/4 to the input signal. This is used for attack\n         * detection / handling.\n         **********************************************************************/\n        /* Don't copy the input buffer into a temporary buffer */\n        /* unroll the loop 2 times */\n        for (chn = 0; chn < gfc.channels_out; chn++) {\n            /* apply high pass filter of fs/4 */\n            var firbuf = buffer[chn];\n            var firbufPos = bufPos + 576 - 350 - NSFIRLEN + 192;\n            assert(fircoef.length == ((NSFIRLEN - 1) / 2));\n            for (i = 0; i < 576; i++) {\n                var sum1, sum2;\n                sum1 = firbuf[firbufPos + i + 10];\n                sum2 = 0.0;\n                for (j = 0; j < ((NSFIRLEN - 1) / 2) - 1; j += 2) {\n                    sum1 += fircoef[j]\n                        * (firbuf[firbufPos + i + j] + firbuf[firbufPos + i\n                        + NSFIRLEN - j]);\n                    sum2 += fircoef[j + 1]\n                        * (firbuf[firbufPos + i + j + 1] + firbuf[firbufPos\n                        + i + NSFIRLEN - j - 1]);\n                }\n                ns_hpfsmpl[chn][i] = sum1 + sum2;\n            }\n            masking_ratio[gr_out][chn].en.assign(gfc.en[chn]);\n            masking_ratio[gr_out][chn].thm.assign(gfc.thm[chn]);\n            if (numchn > 2) {\n                /* MS maskings */\n                /* percep_MS_entropy [chn-2] = gfc . pe [chn]; */\n                masking_MS_ratio[gr_out][chn].en.assign(gfc.en[chn + 2]);\n                masking_MS_ratio[gr_out][chn].thm.assign(gfc.thm[chn + 2]);\n            }\n        }\n\n        for (chn = 0; chn < numchn; chn++) {\n            var wsamp_l;\n            var wsamp_s;\n            var en_subshort = new_float(12);\n            var en_short = [0, 0, 0, 0];\n            var attack_intensity = new_float(12);\n            var ns_uselongblock = 1;\n            var attackThreshold;\n            var max = new_float(Encoder.CBANDS), avg = new_float(Encoder.CBANDS);\n            var ns_attacks = [0, 0, 0, 0];\n            var fftenergy = new_float(Encoder.HBLKSIZE);\n            var fftenergy_s = new_float_n([3, Encoder.HBLKSIZE_s]);\n\n            /*\n             * rh 20040301: the following loops do access one off the limits so\n             * I increase the array dimensions by one and initialize the\n             * accessed values to zero\n             */\n            assert(gfc.npart_s <= Encoder.CBANDS);\n            assert(gfc.npart_l <= Encoder.CBANDS);\n\n            /***************************************************************\n             * determine the block type (window type)\n             ***************************************************************/\n            /* calculate energies of each sub-shortblocks */\n            for (i = 0; i < 3; i++) {\n                en_subshort[i] = gfc.nsPsy.last_en_subshort[chn][i + 6];\n                assert(gfc.nsPsy.last_en_subshort[chn][i + 4] > 0);\n                attack_intensity[i] = en_subshort[i]\n                    / gfc.nsPsy.last_en_subshort[chn][i + 4];\n                en_short[0] += en_subshort[i];\n            }\n\n            if (chn == 2) {\n                for (i = 0; i < 576; i++) {\n                    var l, r;\n                    l = ns_hpfsmpl[0][i];\n                    r = ns_hpfsmpl[1][i];\n                    ns_hpfsmpl[0][i] = l + r;\n                    ns_hpfsmpl[1][i] = l - r;\n                }\n            }\n            {\n                var pf = ns_hpfsmpl[chn & 1];\n                var pfPos = 0;\n                for (i = 0; i < 9; i++) {\n                    var pfe = pfPos + 576 / 9;\n                    var p = 1.;\n                    for (; pfPos < pfe; pfPos++)\n                        if (p < Math.abs(pf[pfPos]))\n                            p = Math.abs(pf[pfPos]);\n\n                    gfc.nsPsy.last_en_subshort[chn][i] = en_subshort[i + 3] = p;\n                    en_short[1 + i / 3] += p;\n                    if (p > en_subshort[i + 3 - 2]) {\n                        assert(en_subshort[i + 3 - 2] > 0);\n                        p = p / en_subshort[i + 3 - 2];\n                    } else if (en_subshort[i + 3 - 2] > p * 10.0) {\n                        assert(p > 0);\n                        p = en_subshort[i + 3 - 2] / (p * 10.0);\n                    } else\n                        p = 0.0;\n                    attack_intensity[i + 3] = p;\n                }\n            }\n\n            if (gfp.analysis) {\n                var x = attack_intensity[0];\n                for (i = 1; i < 12; i++)\n                    if (x < attack_intensity[i])\n                        x = attack_intensity[i];\n                gfc.pinfo.ers[gr_out][chn] = gfc.pinfo.ers_save[chn];\n                gfc.pinfo.ers_save[chn] = x;\n            }\n\n            /* compare energies between sub-shortblocks */\n            attackThreshold = (chn == 3) ? gfc.nsPsy.attackthre_s\n                : gfc.nsPsy.attackthre;\n            for (i = 0; i < 12; i++)\n                if (0 == ns_attacks[i / 3]\n                    && attack_intensity[i] > attackThreshold)\n                    ns_attacks[i / 3] = (i % 3) + 1;\n\n            /*\n             * should have energy change between short blocks, in order to avoid\n             * periodic signals\n             */\n            for (i = 1; i < 4; i++) {\n                var ratio;\n                if (en_short[i - 1] > en_short[i]) {\n                    assert(en_short[i] > 0);\n                    ratio = en_short[i - 1] / en_short[i];\n                } else {\n                    assert(en_short[i - 1] > 0);\n                    ratio = en_short[i] / en_short[i - 1];\n                }\n                if (ratio < 1.7) {\n                    ns_attacks[i] = 0;\n                    if (i == 1)\n                        ns_attacks[0] = 0;\n                }\n            }\n\n            if (ns_attacks[0] != 0 && gfc.nsPsy.lastAttacks[chn] != 0)\n                ns_attacks[0] = 0;\n\n            if (gfc.nsPsy.lastAttacks[chn] == 3\n                || (ns_attacks[0] + ns_attacks[1] + ns_attacks[2] + ns_attacks[3]) != 0) {\n                ns_uselongblock = 0;\n\n                if (ns_attacks[1] != 0 && ns_attacks[0] != 0)\n                    ns_attacks[1] = 0;\n                if (ns_attacks[2] != 0 && ns_attacks[1] != 0)\n                    ns_attacks[2] = 0;\n                if (ns_attacks[3] != 0 && ns_attacks[2] != 0)\n                    ns_attacks[3] = 0;\n            }\n\n            if (chn < 2) {\n                uselongblock[chn] = ns_uselongblock;\n            } else {\n                if (ns_uselongblock == 0) {\n                    uselongblock[0] = uselongblock[1] = 0;\n                }\n            }\n\n            /*\n             * there is a one granule delay. Copy maskings computed last call\n             * into masking_ratio to return to calling program.\n             */\n            energy[chn] = gfc.tot_ener[chn];\n\n            /*********************************************************************\n             * compute FFTs\n             *********************************************************************/\n            wsamp_s = wsamp_S;\n            wsamp_l = wsamp_L;\n            compute_ffts(gfp, fftenergy, fftenergy_s, wsamp_l, (chn & 1),\n                wsamp_s, (chn & 1), gr_out, chn, buffer, bufPos);\n\n            /*********************************************************************\n             * Calculate the energy and the tonality of each partition.\n             *********************************************************************/\n            calc_energy(gfc, fftenergy, eb_l, max, avg);\n            calc_mask_index_l(gfc, max, avg, mask_idx_l);\n            /* compute masking thresholds for short blocks */\n            for (sblock = 0; sblock < 3; sblock++) {\n                var enn, thmm;\n                compute_masking_s(gfp, fftenergy_s, eb_s, thr, chn, sblock);\n                convert_partition2scalefac_s(gfc, eb_s, thr, chn, sblock);\n                /**** short block pre-echo control ****/\n                for (sb = 0; sb < Encoder.SBMAX_s; sb++) {\n                    thmm = gfc.thm[chn].s[sb][sblock];\n\n                    thmm *= NS_PREECHO_ATT0;\n                    if (ns_attacks[sblock] >= 2 || ns_attacks[sblock + 1] == 1) {\n                        var idx = (sblock != 0) ? sblock - 1 : 2;\n                        var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                            NS_PREECHO_ATT1 * pcfact);\n                        thmm = Math.min(thmm, p);\n                    }\n\n                    if (ns_attacks[sblock] == 1) {\n                        var idx = (sblock != 0) ? sblock - 1 : 2;\n                        var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                            NS_PREECHO_ATT2 * pcfact);\n                        thmm = Math.min(thmm, p);\n                    } else if ((sblock != 0 && ns_attacks[sblock - 1] == 3)\n                        || (sblock == 0 && gfc.nsPsy.lastAttacks[chn] == 3)) {\n                        var idx = (sblock != 2) ? sblock + 1 : 0;\n                        var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                            NS_PREECHO_ATT2 * pcfact);\n                        thmm = Math.min(thmm, p);\n                    }\n\n                    /* pulse like signal detection for fatboy.wav and so on */\n                    enn = en_subshort[sblock * 3 + 3]\n                        + en_subshort[sblock * 3 + 4]\n                        + en_subshort[sblock * 3 + 5];\n                    if (en_subshort[sblock * 3 + 5] * 6 < enn) {\n                        thmm *= 0.5;\n                        if (en_subshort[sblock * 3 + 4] * 6 < enn)\n                            thmm *= 0.5;\n                    }\n\n                    gfc.thm[chn].s[sb][sblock] = thmm;\n                }\n            }\n            gfc.nsPsy.lastAttacks[chn] = ns_attacks[2];\n\n            /*********************************************************************\n             * convolve the partitioned energy and unpredictability with the\n             * spreading function, s3_l[b][k]\n             ********************************************************************/\n            k = 0;\n            {\n                for (b = 0; b < gfc.npart_l; b++) {\n                    /*\n                     * convolve the partitioned energy with the spreading\n                     * function\n                     */\n                    var kk = gfc.s3ind[b][0];\n                    var eb2 = eb_l[kk] * tab[mask_idx_l[kk]];\n                    var ecb = gfc.s3_ll[k++] * eb2;\n                    while (++kk <= gfc.s3ind[b][1]) {\n                        eb2 = eb_l[kk] * tab[mask_idx_l[kk]];\n                        ecb = mask_add(ecb, gfc.s3_ll[k++] * eb2, kk, kk - b,\n                            gfc, 0);\n                    }\n                    ecb *= 0.158489319246111;\n                    /* pow(10,-0.8) */\n\n                    /**** long block pre-echo control ****/\n                    /**\n                     * <PRE>\n                     * dont use long block pre-echo control if previous granule was\n                     * a short block.  This is to avoid the situation:\n                     * frame0:  quiet (very low masking)\n                     * frame1:  surge  (triggers short blocks)\n                     * frame2:  regular frame.  looks like pre-echo when compared to\n                     *          frame0, but all pre-echo was in frame1.\n                     * </PRE>\n                     */\n                    /*\n                     * chn=0,1 L and R channels\n                     *\n                     * chn=2,3 S and M channels.\n                     */\n\n                    if (gfc.blocktype_old[chn & 1] == Encoder.SHORT_TYPE)\n                        thr[b] = ecb;\n                    else\n                        thr[b] = NS_INTERP(\n                            Math.min(ecb, Math.min(rpelev\n                                * gfc.nb_1[chn][b], rpelev2\n                                * gfc.nb_2[chn][b])), ecb, pcfact);\n\n                    gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\n                    gfc.nb_1[chn][b] = ecb;\n                }\n            }\n            for (; b <= Encoder.CBANDS; ++b) {\n                eb_l[b] = 0;\n                thr[b] = 0;\n            }\n            /* compute masking thresholds for long blocks */\n            convert_partition2scalefac_l(gfc, eb_l, thr, chn);\n        }\n        /* end loop over chn */\n\n        if (gfp.mode == MPEGMode.STEREO || gfp.mode == MPEGMode.JOINT_STEREO) {\n            if (gfp.interChRatio > 0.0) {\n                calc_interchannel_masking(gfp, gfp.interChRatio);\n            }\n        }\n\n        if (gfp.mode == MPEGMode.JOINT_STEREO) {\n            var msfix;\n            msfix1(gfc);\n            msfix = gfp.msfix;\n            if (Math.abs(msfix) > 0.0)\n                ns_msfix(gfc, msfix, gfp.ATHlower * gfc.ATH.adjust);\n        }\n\n        /***************************************************************\n         * determine final block type\n         ***************************************************************/\n        block_type_set(gfp, uselongblock, blocktype_d, blocktype);\n\n        /*********************************************************************\n         * compute the value of PE to return ... no delay and advance\n         *********************************************************************/\n        for (chn = 0; chn < numchn; chn++) {\n            var ppe;\n            var ppePos = 0;\n            var type;\n            var mr;\n\n            if (chn > 1) {\n                ppe = percep_MS_entropy;\n                ppePos = -2;\n                type = Encoder.NORM_TYPE;\n                if (blocktype_d[0] == Encoder.SHORT_TYPE\n                    || blocktype_d[1] == Encoder.SHORT_TYPE)\n                    type = Encoder.SHORT_TYPE;\n                mr = masking_MS_ratio[gr_out][chn - 2];\n            } else {\n                ppe = percep_entropy;\n                ppePos = 0;\n                type = blocktype_d[chn];\n                mr = masking_ratio[gr_out][chn];\n            }\n\n            if (type == Encoder.SHORT_TYPE)\n                ppe[ppePos + chn] = pecalc_s(mr, gfc.masking_lower);\n            else\n                ppe[ppePos + chn] = pecalc_l(mr, gfc.masking_lower);\n\n            if (gfp.analysis)\n                gfc.pinfo.pe[gr_out][chn] = ppe[ppePos + chn];\n\n        }\n        return 0;\n    }\n\n    function vbrpsy_compute_fft_l(gfp, buffer, bufPos, chn, gr_out, fftenergy, wsamp_l, wsamp_lPos) {\n        var gfc = gfp.internal_flags;\n        if (chn < 2) {\n            fft.fft_long(gfc, wsamp_l[wsamp_lPos], chn, buffer, bufPos);\n        } else if (chn == 2) {\n            /* FFT data for mid and side channel is derived from L & R */\n            for (var j = Encoder.BLKSIZE - 1; j >= 0; --j) {\n                var l = wsamp_l[wsamp_lPos + 0][j];\n                var r = wsamp_l[wsamp_lPos + 1][j];\n                wsamp_l[wsamp_lPos + 0][j] = (l + r) * Util.SQRT2 * 0.5;\n                wsamp_l[wsamp_lPos + 1][j] = (l - r) * Util.SQRT2 * 0.5;\n            }\n        }\n\n        /*********************************************************************\n         * compute energies\n         *********************************************************************/\n        fftenergy[0] = NON_LINEAR_SCALE_ENERGY(wsamp_l[wsamp_lPos + 0][0]);\n        fftenergy[0] *= fftenergy[0];\n\n        for (var j = Encoder.BLKSIZE / 2 - 1; j >= 0; --j) {\n            var re = wsamp_l[wsamp_lPos + 0][Encoder.BLKSIZE / 2 - j];\n            var im = wsamp_l[wsamp_lPos + 0][Encoder.BLKSIZE / 2 + j];\n            fftenergy[Encoder.BLKSIZE / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                * re + im * im) * 0.5);\n        }\n        /* total energy */\n        {\n            var totalenergy = 0.0;\n            for (var j = 11; j < Encoder.HBLKSIZE; j++)\n                totalenergy += fftenergy[j];\n\n            gfc.tot_ener[chn] = totalenergy;\n        }\n\n        if (gfp.analysis) {\n            for (var j = 0; j < Encoder.HBLKSIZE; j++) {\n                gfc.pinfo.energy[gr_out][chn][j] = gfc.pinfo.energy_save[chn][j];\n                gfc.pinfo.energy_save[chn][j] = fftenergy[j];\n            }\n            gfc.pinfo.pe[gr_out][chn] = gfc.pe[chn];\n        }\n    }\n\n    function vbrpsy_compute_fft_s(gfp, buffer, bufPos, chn, sblock, fftenergy_s, wsamp_s, wsamp_sPos) {\n        var gfc = gfp.internal_flags;\n\n        if (sblock == 0 && chn < 2) {\n            fft.fft_short(gfc, wsamp_s[wsamp_sPos], chn, buffer, bufPos);\n        }\n        if (chn == 2) {\n            /* FFT data for mid and side channel is derived from L & R */\n            for (var j = Encoder.BLKSIZE_s - 1; j >= 0; --j) {\n                var l = wsamp_s[wsamp_sPos + 0][sblock][j];\n                var r = wsamp_s[wsamp_sPos + 1][sblock][j];\n                wsamp_s[wsamp_sPos + 0][sblock][j] = (l + r) * Util.SQRT2 * 0.5;\n                wsamp_s[wsamp_sPos + 1][sblock][j] = (l - r) * Util.SQRT2 * 0.5;\n            }\n        }\n\n        /*********************************************************************\n         * compute energies\n         *********************************************************************/\n        fftenergy_s[sblock][0] = wsamp_s[wsamp_sPos + 0][sblock][0];\n        fftenergy_s[sblock][0] *= fftenergy_s[sblock][0];\n        for (var j = Encoder.BLKSIZE_s / 2 - 1; j >= 0; --j) {\n            var re = wsamp_s[wsamp_sPos + 0][sblock][Encoder.BLKSIZE_s / 2 - j];\n            var im = wsamp_s[wsamp_sPos + 0][sblock][Encoder.BLKSIZE_s / 2 + j];\n            fftenergy_s[sblock][Encoder.BLKSIZE_s / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                * re + im * im) * 0.5);\n        }\n    }\n\n    /**\n     * compute loudness approximation (used for ATH auto-level adjustment)\n     */\n    function vbrpsy_compute_loudness_approximation_l(gfp, gr_out, chn, fftenergy) {\n        var gfc = gfp.internal_flags;\n        if (gfp.athaa_loudapprox == 2 && chn < 2) {\n            // no loudness for mid/side ch\n            gfc.loudness_sq[gr_out][chn] = gfc.loudness_sq_save[chn];\n            gfc.loudness_sq_save[chn] = psycho_loudness_approx(fftenergy, gfc);\n        }\n    }\n\n    var fircoef_ = [-8.65163e-18 * 2,\n        -0.00851586 * 2, -6.74764e-18 * 2, 0.0209036 * 2,\n        -3.36639e-17 * 2, -0.0438162 * 2, -1.54175e-17 * 2,\n        0.0931738 * 2, -5.52212e-17 * 2, -0.313819 * 2];\n\n    /**\n     * Apply HPF of fs/4 to the input signal. This is used for attack detection\n     * / handling.\n     */\n    function vbrpsy_attack_detection(gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, energy, sub_short_factor, ns_attacks, uselongblock) {\n        var ns_hpfsmpl = new_float_n([2, 576]);\n        var gfc = gfp.internal_flags;\n        var n_chn_out = gfc.channels_out;\n        /* chn=2 and 3 = Mid and Side channels */\n        var n_chn_psy = (gfp.mode == MPEGMode.JOINT_STEREO) ? 4 : n_chn_out;\n        /* Don't copy the input buffer into a temporary buffer */\n        /* unroll the loop 2 times */\n        for (var chn = 0; chn < n_chn_out; chn++) {\n            /* apply high pass filter of fs/4 */\n            firbuf = buffer[chn];\n            var firbufPos = bufPos + 576 - 350 - NSFIRLEN + 192;\n            assert(fircoef_.length == ((NSFIRLEN - 1) / 2));\n            for (var i = 0; i < 576; i++) {\n                var sum1, sum2;\n                sum1 = firbuf[firbufPos + i + 10];\n                sum2 = 0.0;\n                for (var j = 0; j < ((NSFIRLEN - 1) / 2) - 1; j += 2) {\n                    sum1 += fircoef_[j]\n                        * (firbuf[firbufPos + i + j] + firbuf[firbufPos + i\n                        + NSFIRLEN - j]);\n                    sum2 += fircoef_[j + 1]\n                        * (firbuf[firbufPos + i + j + 1] + firbuf[firbufPos\n                        + i + NSFIRLEN - j - 1]);\n                }\n                ns_hpfsmpl[chn][i] = sum1 + sum2;\n            }\n            masking_ratio[gr_out][chn].en.assign(gfc.en[chn]);\n            masking_ratio[gr_out][chn].thm.assign(gfc.thm[chn]);\n            if (n_chn_psy > 2) {\n                /* MS maskings */\n                /* percep_MS_entropy [chn-2] = gfc . pe [chn]; */\n                masking_MS_ratio[gr_out][chn].en.assign(gfc.en[chn + 2]);\n                masking_MS_ratio[gr_out][chn].thm.assign(gfc.thm[chn + 2]);\n            }\n        }\n        for (var chn = 0; chn < n_chn_psy; chn++) {\n            var attack_intensity = new_float(12);\n            var en_subshort = new_float(12);\n            var en_short = [0, 0, 0, 0];\n            var pf = ns_hpfsmpl[chn & 1];\n            var pfPos = 0;\n            var attackThreshold = (chn == 3) ? gfc.nsPsy.attackthre_s\n                : gfc.nsPsy.attackthre;\n            var ns_uselongblock = 1;\n\n            if (chn == 2) {\n                for (var i = 0, j = 576; j > 0; ++i, --j) {\n                    var l = ns_hpfsmpl[0][i];\n                    var r = ns_hpfsmpl[1][i];\n                    ns_hpfsmpl[0][i] = l + r;\n                    ns_hpfsmpl[1][i] = l - r;\n                }\n            }\n            /***************************************************************\n             * determine the block type (window type)\n             ***************************************************************/\n            /* calculate energies of each sub-shortblocks */\n            for (var i = 0; i < 3; i++) {\n                en_subshort[i] = gfc.nsPsy.last_en_subshort[chn][i + 6];\n                assert(gfc.nsPsy.last_en_subshort[chn][i + 4] > 0);\n                attack_intensity[i] = en_subshort[i]\n                    / gfc.nsPsy.last_en_subshort[chn][i + 4];\n                en_short[0] += en_subshort[i];\n            }\n\n            for (var i = 0; i < 9; i++) {\n                var pfe = pfPos + 576 / 9;\n                var p = 1.;\n                for (; pfPos < pfe; pfPos++)\n                    if (p < Math.abs(pf[pfPos]))\n                        p = Math.abs(pf[pfPos]);\n\n                gfc.nsPsy.last_en_subshort[chn][i] = en_subshort[i + 3] = p;\n                en_short[1 + i / 3] += p;\n                if (p > en_subshort[i + 3 - 2]) {\n                    assert(en_subshort[i + 3 - 2] > 0);\n                    p = p / en_subshort[i + 3 - 2];\n                } else if (en_subshort[i + 3 - 2] > p * 10.0) {\n                    assert(p > 0);\n                    p = en_subshort[i + 3 - 2] / (p * 10.0);\n                } else {\n                    p = 0.0;\n                }\n                attack_intensity[i + 3] = p;\n            }\n            /* pulse like signal detection for fatboy.wav and so on */\n            for (var i = 0; i < 3; ++i) {\n                var enn = en_subshort[i * 3 + 3]\n                    + en_subshort[i * 3 + 4] + en_subshort[i * 3 + 5];\n                var factor = 1.;\n                if (en_subshort[i * 3 + 5] * 6 < enn) {\n                    factor *= 0.5;\n                    if (en_subshort[i * 3 + 4] * 6 < enn) {\n                        factor *= 0.5;\n                    }\n                }\n                sub_short_factor[chn][i] = factor;\n            }\n\n            if (gfp.analysis) {\n                var x = attack_intensity[0];\n                for (var i = 1; i < 12; i++) {\n                    if (x < attack_intensity[i]) {\n                        x = attack_intensity[i];\n                    }\n                }\n                gfc.pinfo.ers[gr_out][chn] = gfc.pinfo.ers_save[chn];\n                gfc.pinfo.ers_save[chn] = x;\n            }\n\n            /* compare energies between sub-shortblocks */\n            for (var i = 0; i < 12; i++) {\n                if (0 == ns_attacks[chn][i / 3]\n                    && attack_intensity[i] > attackThreshold) {\n                    ns_attacks[chn][i / 3] = (i % 3) + 1;\n                }\n            }\n\n            /*\n             * should have energy change between short blocks, in order to avoid\n             * periodic signals\n             */\n            /* Good samples to show the effect are Trumpet test songs */\n            /*\n             * GB: tuned (1) to avoid too many short blocks for test sample\n             * TRUMPET\n             */\n            /*\n             * RH: tuned (2) to let enough short blocks through for test sample\n             * FSOL and SNAPS\n             */\n            for (var i = 1; i < 4; i++) {\n                var u = en_short[i - 1];\n                var v = en_short[i];\n                var m = Math.max(u, v);\n                if (m < 40000) { /* (2) */\n                    if (u < 1.7 * v && v < 1.7 * u) { /* (1) */\n                        if (i == 1 && ns_attacks[chn][0] <= ns_attacks[chn][i]) {\n                            ns_attacks[chn][0] = 0;\n                        }\n                        ns_attacks[chn][i] = 0;\n                    }\n                }\n            }\n\n            if (ns_attacks[chn][0] <= gfc.nsPsy.lastAttacks[chn]) {\n                ns_attacks[chn][0] = 0;\n            }\n\n            if (gfc.nsPsy.lastAttacks[chn] == 3\n                || (ns_attacks[chn][0] + ns_attacks[chn][1]\n                + ns_attacks[chn][2] + ns_attacks[chn][3]) != 0) {\n                ns_uselongblock = 0;\n\n                if (ns_attacks[chn][1] != 0 && ns_attacks[chn][0] != 0) {\n                    ns_attacks[chn][1] = 0;\n                }\n                if (ns_attacks[chn][2] != 0 && ns_attacks[chn][1] != 0) {\n                    ns_attacks[chn][2] = 0;\n                }\n                if (ns_attacks[chn][3] != 0 && ns_attacks[chn][2] != 0) {\n                    ns_attacks[chn][3] = 0;\n                }\n            }\n            if (chn < 2) {\n                uselongblock[chn] = ns_uselongblock;\n            } else {\n                if (ns_uselongblock == 0) {\n                    uselongblock[0] = uselongblock[1] = 0;\n                }\n            }\n\n            /*\n             * there is a one granule delay. Copy maskings computed last call\n             * into masking_ratio to return to calling program.\n             */\n            energy[chn] = gfc.tot_ener[chn];\n        }\n    }\n\n    function vbrpsy_skip_masking_s(gfc, chn, sblock) {\n        if (sblock == 0) {\n            for (var b = 0; b < gfc.npart_s; b++) {\n                gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\n                gfc.nb_s1[chn][b] = 0;\n            }\n        }\n    }\n\n    function vbrpsy_skip_masking_l(gfc, chn) {\n        for (var b = 0; b < gfc.npart_l; b++) {\n            gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\n            gfc.nb_1[chn][b] = 0;\n        }\n    }\n\n    function psyvbr_calc_mask_index_s(gfc, max, avg, mask_idx) {\n        var last_tab_entry = tab.length - 1;\n        var b = 0;\n        var a = avg[b] + avg[b + 1];\n        assert(a >= 0);\n        if (a > 0.0) {\n            var m = max[b];\n            if (m < max[b + 1])\n                m = max[b + 1];\n            assert((gfc.numlines_s[b] + gfc.numlines_s[b + 1] - 1) > 0);\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_s[b] + gfc.numlines_s[b + 1] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n\n        for (b = 1; b < gfc.npart_s - 1; b++) {\n            a = avg[b - 1] + avg[b] + avg[b + 1];\n            assert(b + 1 < gfc.npart_s);\n            assert(a >= 0);\n            if (a > 0.0) {\n                var m = max[b - 1];\n                if (m < max[b])\n                    m = max[b];\n                if (m < max[b + 1])\n                    m = max[b + 1];\n                assert((gfc.numlines_s[b - 1] + gfc.numlines_s[b] + gfc.numlines_s[b + 1] - 1) > 0);\n                a = 20.0\n                    * (m * 3.0 - a)\n                    / (a * (gfc.numlines_s[b - 1] + gfc.numlines_s[b]\n                    + gfc.numlines_s[b + 1] - 1));\n                var k = 0 | a;\n                if (k > last_tab_entry)\n                    k = last_tab_entry;\n                mask_idx[b] = k;\n            } else {\n                mask_idx[b] = 0;\n            }\n        }\n        assert(b > 0);\n        assert(b == gfc.npart_s - 1);\n\n        a = avg[b - 1] + avg[b];\n        assert(a >= 0);\n        if (a > 0.0) {\n            var m = max[b - 1];\n            if (m < max[b])\n                m = max[b];\n            assert((gfc.numlines_s[b - 1] + gfc.numlines_s[b] - 1) > 0);\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_s[b - 1] + gfc.numlines_s[b] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n        assert(b == (gfc.npart_s - 1));\n    }\n\n    function vbrpsy_compute_masking_s(gfp, fftenergy_s, eb, thr, chn, sblock) {\n        var gfc = gfp.internal_flags;\n        var max = new float[Encoder.CBANDS], avg = new_float(Encoder.CBANDS);\n        var i, j, b;\n        var mask_idx_s = new int[Encoder.CBANDS];\n\n        for (b = j = 0; b < gfc.npart_s; ++b) {\n            var ebb = 0, m = 0;\n            var n = gfc.numlines_s[b];\n            for (i = 0; i < n; ++i, ++j) {\n                var el = fftenergy_s[sblock][j];\n                ebb += el;\n                if (m < el)\n                    m = el;\n            }\n            eb[b] = ebb;\n            assert(ebb >= 0);\n            max[b] = m;\n            assert(n > 0);\n            avg[b] = ebb / n;\n            assert(avg[b] >= 0);\n        }\n        assert(b == gfc.npart_s);\n        assert(j == 129);\n        for (; b < Encoder.CBANDS; ++b) {\n            max[b] = 0;\n            avg[b] = 0;\n        }\n        psyvbr_calc_mask_index_s(gfc, max, avg, mask_idx_s);\n        for (j = b = 0; b < gfc.npart_s; b++) {\n            var kk = gfc.s3ind_s[b][0];\n            var last = gfc.s3ind_s[b][1];\n            var dd, dd_n;\n            var x, ecb, avg_mask;\n            dd = mask_idx_s[kk];\n            dd_n = 1;\n            ecb = gfc.s3_ss[j] * eb[kk] * tab[mask_idx_s[kk]];\n            ++j;\n            ++kk;\n            while (kk <= last) {\n                dd += mask_idx_s[kk];\n                dd_n += 1;\n                x = gfc.s3_ss[j] * eb[kk] * tab[mask_idx_s[kk]];\n                ecb = vbrpsy_mask_add(ecb, x, kk - b);\n                ++j;\n                ++kk;\n            }\n            dd = (1 + 2 * dd) / (2 * dd_n);\n            avg_mask = tab[dd] * 0.5;\n            ecb *= avg_mask;\n            thr[b] = ecb;\n            gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\n            gfc.nb_s1[chn][b] = ecb;\n            {\n                /*\n                 * if THR exceeds EB, the quantization routines will take the\n                 * difference from other bands. in case of strong tonal samples\n                 * (tonaltest.wav) this leads to heavy distortions. that's why\n                 * we limit THR here.\n                 */\n                x = max[b];\n                x *= gfc.minval_s[b];\n                x *= avg_mask;\n                if (thr[b] > x) {\n                    thr[b] = x;\n                }\n            }\n            if (gfc.masking_lower > 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n            if (thr[b] > eb[b]) {\n                thr[b] = eb[b];\n            }\n            if (gfc.masking_lower < 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n\n            assert(thr[b] >= 0);\n        }\n        for (; b < Encoder.CBANDS; ++b) {\n            eb[b] = 0;\n            thr[b] = 0;\n        }\n    }\n\n    function vbrpsy_compute_masking_l(gfc, fftenergy, eb_l, thr, chn) {\n        var max = new_float(Encoder.CBANDS), avg = new_float(Encoder.CBANDS);\n        var mask_idx_l = new_int(Encoder.CBANDS + 2);\n        var b;\n\n        /*********************************************************************\n         * Calculate the energy and the tonality of each partition.\n         *********************************************************************/\n        calc_energy(gfc, fftenergy, eb_l, max, avg);\n        calc_mask_index_l(gfc, max, avg, mask_idx_l);\n\n        /*********************************************************************\n         * convolve the partitioned energy and unpredictability with the\n         * spreading function, s3_l[b][k]\n         ********************************************************************/\n        var k = 0;\n        for (b = 0; b < gfc.npart_l; b++) {\n            var x, ecb, avg_mask, t;\n            /* convolve the partitioned energy with the spreading function */\n            var kk = gfc.s3ind[b][0];\n            var last = gfc.s3ind[b][1];\n            var dd = 0, dd_n = 0;\n            dd = mask_idx_l[kk];\n            dd_n += 1;\n            ecb = gfc.s3_ll[k] * eb_l[kk] * tab[mask_idx_l[kk]];\n            ++k;\n            ++kk;\n            while (kk <= last) {\n                dd += mask_idx_l[kk];\n                dd_n += 1;\n                x = gfc.s3_ll[k] * eb_l[kk] * tab[mask_idx_l[kk]];\n                t = vbrpsy_mask_add(ecb, x, kk - b);\n                ecb = t;\n                ++k;\n                ++kk;\n            }\n            dd = (1 + 2 * dd) / (2 * dd_n);\n            avg_mask = tab[dd] * 0.5;\n            ecb *= avg_mask;\n\n            /**** long block pre-echo control ****/\n            /**\n             * <PRE>\n             * dont use long block pre-echo control if previous granule was\n             * a short block.  This is to avoid the situation:\n             * frame0:  quiet (very low masking)\n             * frame1:  surge  (triggers short blocks)\n             * frame2:  regular frame.  looks like pre-echo when compared to\n             *          frame0, but all pre-echo was in frame1.\n             * </PRE>\n             */\n            /*\n             * chn=0,1 L and R channels chn=2,3 S and M channels.\n             */\n            if (gfc.blocktype_old[chn & 0x01] == Encoder.SHORT_TYPE) {\n                var ecb_limit = rpelev * gfc.nb_1[chn][b];\n                if (ecb_limit > 0) {\n                    thr[b] = Math.min(ecb, ecb_limit);\n                } else {\n                    /**\n                     * <PRE>\n                     * Robert 071209:\n                     * Because we don't calculate long block psy when we know a granule\n                     * should be of short blocks, we don't have any clue how the granule\n                     * before would have looked like as a long block. So we have to guess\n                     * a little bit for this END_TYPE block.\n                     * Most of the time we get away with this sloppyness. (fingers crossed :)\n                     * The speed increase is worth it.\n                     * </PRE>\n                     */\n                    thr[b] = Math.min(ecb, eb_l[b] * NS_PREECHO_ATT2);\n                }\n            } else {\n                var ecb_limit_2 = rpelev2 * gfc.nb_2[chn][b];\n                var ecb_limit_1 = rpelev * gfc.nb_1[chn][b];\n                var ecb_limit;\n                if (ecb_limit_2 <= 0) {\n                    ecb_limit_2 = ecb;\n                }\n                if (ecb_limit_1 <= 0) {\n                    ecb_limit_1 = ecb;\n                }\n                if (gfc.blocktype_old[chn & 0x01] == Encoder.NORM_TYPE) {\n                    ecb_limit = Math.min(ecb_limit_1, ecb_limit_2);\n                } else {\n                    ecb_limit = ecb_limit_1;\n                }\n                thr[b] = Math.min(ecb, ecb_limit);\n            }\n            gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\n            gfc.nb_1[chn][b] = ecb;\n            {\n                /*\n                 * if THR exceeds EB, the quantization routines will take the\n                 * difference from other bands. in case of strong tonal samples\n                 * (tonaltest.wav) this leads to heavy distortions. that's why\n                 * we limit THR here.\n                 */\n                x = max[b];\n                x *= gfc.minval_l[b];\n                x *= avg_mask;\n                if (thr[b] > x) {\n                    thr[b] = x;\n                }\n            }\n            if (gfc.masking_lower > 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n            if (thr[b] > eb_l[b]) {\n                thr[b] = eb_l[b];\n            }\n            if (gfc.masking_lower < 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n            assert(thr[b] >= 0);\n        }\n        for (; b < Encoder.CBANDS; ++b) {\n            eb_l[b] = 0;\n            thr[b] = 0;\n        }\n    }\n\n    function vbrpsy_compute_block_type(gfp, uselongblock) {\n        var gfc = gfp.internal_flags;\n\n        if (gfp.short_blocks == ShortBlock.short_block_coupled\n                /* force both channels to use the same block type */\n                /* this is necessary if the frame is to be encoded in ms_stereo. */\n                /* But even without ms_stereo, FhG does this */\n            && !(uselongblock[0] != 0 && uselongblock[1] != 0))\n            uselongblock[0] = uselongblock[1] = 0;\n\n        for (var chn = 0; chn < gfc.channels_out; chn++) {\n            /* disable short blocks */\n            if (gfp.short_blocks == ShortBlock.short_block_dispensed) {\n                uselongblock[chn] = 1;\n            }\n            if (gfp.short_blocks == ShortBlock.short_block_forced) {\n                uselongblock[chn] = 0;\n            }\n        }\n    }\n\n    function vbrpsy_apply_block_type(gfp, uselongblock, blocktype_d) {\n        var gfc = gfp.internal_flags;\n\n        /*\n         * update the blocktype of the previous granule, since it depends on\n         * what happend in this granule\n         */\n        for (var chn = 0; chn < gfc.channels_out; chn++) {\n            var blocktype = Encoder.NORM_TYPE;\n            /* disable short blocks */\n\n            if (uselongblock[chn] != 0) {\n                /* no attack : use long blocks */\n                assert(gfc.blocktype_old[chn] != Encoder.START_TYPE);\n                if (gfc.blocktype_old[chn] == Encoder.SHORT_TYPE)\n                    blocktype = Encoder.STOP_TYPE;\n            } else {\n                /* attack : use short blocks */\n                blocktype = Encoder.SHORT_TYPE;\n                if (gfc.blocktype_old[chn] == Encoder.NORM_TYPE) {\n                    gfc.blocktype_old[chn] = Encoder.START_TYPE;\n                }\n                if (gfc.blocktype_old[chn] == Encoder.STOP_TYPE)\n                    gfc.blocktype_old[chn] = Encoder.SHORT_TYPE;\n            }\n\n            blocktype_d[chn] = gfc.blocktype_old[chn];\n            // value returned to calling program\n            gfc.blocktype_old[chn] = blocktype;\n            // save for next call to l3psy_anal\n        }\n    }\n\n    /**\n     * compute M/S thresholds from Johnston & Ferreira 1992 ICASSP paper\n     */\n    function vbrpsy_compute_MS_thresholds(eb, thr, cb_mld, ath_cb, athadjust, msfix, n) {\n        var msfix2 = msfix * 2;\n        var athlower = msfix > 0 ? Math.pow(10, athadjust) : 1;\n        var rside, rmid;\n        for (var b = 0; b < n; ++b) {\n            var ebM = eb[2][b];\n            var ebS = eb[3][b];\n            var thmL = thr[0][b];\n            var thmR = thr[1][b];\n            var thmM = thr[2][b];\n            var thmS = thr[3][b];\n\n            /* use this fix if L & R masking differs by 2db or less */\n            if (thmL <= 1.58 * thmR && thmR <= 1.58 * thmL) {\n                var mld_m = cb_mld[b] * ebS;\n                var mld_s = cb_mld[b] * ebM;\n                rmid = Math.max(thmM, Math.min(thmS, mld_m));\n                rside = Math.max(thmS, Math.min(thmM, mld_s));\n            } else {\n                rmid = thmM;\n                rside = thmS;\n            }\n            if (msfix > 0) {\n                /***************************************************************/\n                /* Adjust M/S maskings if user set \"msfix\" */\n                /***************************************************************/\n                /* Naoki Shibata 2000 */\n                var thmLR, thmMS;\n                var ath = ath_cb[b] * athlower;\n                thmLR = Math.min(Math.max(thmL, ath), Math.max(thmR, ath));\n                thmM = Math.max(rmid, ath);\n                thmS = Math.max(rside, ath);\n                thmMS = thmM + thmS;\n                if (thmMS > 0 && (thmLR * msfix2) < thmMS) {\n                    var f = thmLR * msfix2 / thmMS;\n                    thmM *= f;\n                    thmS *= f;\n                    assert(thmMS > 0);\n                }\n                rmid = Math.min(thmM, rmid);\n                rside = Math.min(thmS, rside);\n            }\n            if (rmid > ebM) {\n                rmid = ebM;\n            }\n            if (rside > ebS) {\n                rside = ebS;\n            }\n            thr[2][b] = rmid;\n            thr[3][b] = rside;\n        }\n    }\n\n    this.L3psycho_anal_vbr = function (gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, percep_entropy, percep_MS_entropy, energy, blocktype_d) {\n        var gfc = gfp.internal_flags;\n\n        /* fft and energy calculation */\n        var wsamp_l;\n        var wsamp_s;\n        var fftenergy = new_float(Encoder.HBLKSIZE);\n        var fftenergy_s = new_float_n([3, Encoder.HBLKSIZE_s]);\n        var wsamp_L = new_float_n([2, Encoder.BLKSIZE]);\n        var wsamp_S = new_float_n([2, 3, Encoder.BLKSIZE_s]);\n        var eb = new_float_n([4, Encoder.CBANDS]), thr = new_float_n([4, Encoder.CBANDS]);\n        var sub_short_factor = new_float_n([4, 3]);\n        var pcfact = 0.6;\n\n        /* block type */\n        var ns_attacks = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0],\n            [0, 0, 0, 0]];\n        var uselongblock = new_int(2);\n\n        /* usual variables like loop indices, etc.. */\n\n        /* chn=2 and 3 = Mid and Side channels */\n        var n_chn_psy = (gfp.mode == MPEGMode.JOINT_STEREO) ? 4\n            : gfc.channels_out;\n\n        vbrpsy_attack_detection(gfp, buffer, bufPos, gr_out, masking_ratio,\n            masking_MS_ratio, energy, sub_short_factor, ns_attacks,\n            uselongblock);\n\n        vbrpsy_compute_block_type(gfp, uselongblock);\n\n        /* LONG BLOCK CASE */\n        {\n            for (var chn = 0; chn < n_chn_psy; chn++) {\n                var ch01 = chn & 0x01;\n                wsamp_l = wsamp_L;\n                vbrpsy_compute_fft_l(gfp, buffer, bufPos, chn, gr_out,\n                    fftenergy, wsamp_l, ch01);\n\n                vbrpsy_compute_loudness_approximation_l(gfp, gr_out, chn,\n                    fftenergy);\n\n                if (uselongblock[ch01] != 0) {\n                    vbrpsy_compute_masking_l(gfc, fftenergy, eb[chn], thr[chn],\n                        chn);\n                } else {\n                    vbrpsy_skip_masking_l(gfc, chn);\n                }\n            }\n            if ((uselongblock[0] + uselongblock[1]) == 2) {\n                /* M/S channel */\n                if (gfp.mode == MPEGMode.JOINT_STEREO) {\n                    vbrpsy_compute_MS_thresholds(eb, thr, gfc.mld_cb_l,\n                        gfc.ATH.cb_l, gfp.ATHlower * gfc.ATH.adjust,\n                        gfp.msfix, gfc.npart_l);\n                }\n            }\n            /* TODO: apply adaptive ATH masking here ?? */\n            for (var chn = 0; chn < n_chn_psy; chn++) {\n                var ch01 = chn & 0x01;\n                if (uselongblock[ch01] != 0) {\n                    convert_partition2scalefac_l(gfc, eb[chn], thr[chn], chn);\n                }\n            }\n        }\n\n        /* SHORT BLOCKS CASE */\n        {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                for (var chn = 0; chn < n_chn_psy; ++chn) {\n                    var ch01 = chn & 0x01;\n\n                    if (uselongblock[ch01] != 0) {\n                        vbrpsy_skip_masking_s(gfc, chn, sblock);\n                    } else {\n                        /* compute masking thresholds for short blocks */\n                        wsamp_s = wsamp_S;\n                        vbrpsy_compute_fft_s(gfp, buffer, bufPos, chn, sblock,\n                            fftenergy_s, wsamp_s, ch01);\n                        vbrpsy_compute_masking_s(gfp, fftenergy_s, eb[chn],\n                            thr[chn], chn, sblock);\n                    }\n                }\n                if ((uselongblock[0] + uselongblock[1]) == 0) {\n                    /* M/S channel */\n                    if (gfp.mode == MPEGMode.JOINT_STEREO) {\n                        vbrpsy_compute_MS_thresholds(eb, thr, gfc.mld_cb_s,\n                            gfc.ATH.cb_s, gfp.ATHlower * gfc.ATH.adjust,\n                            gfp.msfix, gfc.npart_s);\n                    }\n                    /* L/R channel */\n                }\n                /* TODO: apply adaptive ATH masking here ?? */\n                for (var chn = 0; chn < n_chn_psy; ++chn) {\n                    var ch01 = chn & 0x01;\n                    if (0 == uselongblock[ch01]) {\n                        convert_partition2scalefac_s(gfc, eb[chn], thr[chn],\n                            chn, sblock);\n                    }\n                }\n            }\n\n            /**** short block pre-echo control ****/\n            for (var chn = 0; chn < n_chn_psy; chn++) {\n                var ch01 = chn & 0x01;\n\n                if (uselongblock[ch01] != 0) {\n                    continue;\n                }\n                for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\n                    var new_thmm = new_float(3);\n                    for (var sblock = 0; sblock < 3; sblock++) {\n                        var thmm = gfc.thm[chn].s[sb][sblock];\n                        thmm *= NS_PREECHO_ATT0;\n\n                        if (ns_attacks[chn][sblock] >= 2\n                            || ns_attacks[chn][sblock + 1] == 1) {\n                            var idx = (sblock != 0) ? sblock - 1 : 2;\n                            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                                NS_PREECHO_ATT1 * pcfact);\n                            thmm = Math.min(thmm, p);\n                        } else if (ns_attacks[chn][sblock] == 1) {\n                            var idx = (sblock != 0) ? sblock - 1 : 2;\n                            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                                NS_PREECHO_ATT2 * pcfact);\n                            thmm = Math.min(thmm, p);\n                        } else if ((sblock != 0 && ns_attacks[chn][sblock - 1] == 3)\n                            || (sblock == 0 && gfc.nsPsy.lastAttacks[chn] == 3)) {\n                            var idx = (sblock != 2) ? sblock + 1 : 0;\n                            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                                NS_PREECHO_ATT2 * pcfact);\n                            thmm = Math.min(thmm, p);\n                        }\n\n                        /* pulse like signal detection for fatboy.wav and so on */\n                        thmm *= sub_short_factor[chn][sblock];\n\n                        new_thmm[sblock] = thmm;\n                    }\n                    for (var sblock = 0; sblock < 3; sblock++) {\n                        gfc.thm[chn].s[sb][sblock] = new_thmm[sblock];\n                    }\n                }\n            }\n        }\n        for (var chn = 0; chn < n_chn_psy; chn++) {\n            gfc.nsPsy.lastAttacks[chn] = ns_attacks[chn][2];\n        }\n\n        /***************************************************************\n         * determine final block type\n         ***************************************************************/\n        vbrpsy_apply_block_type(gfp, uselongblock, blocktype_d);\n\n        /*********************************************************************\n         * compute the value of PE to return ... no delay and advance\n         *********************************************************************/\n        for (var chn = 0; chn < n_chn_psy; chn++) {\n            var ppe;\n            var ppePos;\n            var type;\n            var mr;\n\n            if (chn > 1) {\n                ppe = percep_MS_entropy;\n                ppePos = -2;\n                type = Encoder.NORM_TYPE;\n                if (blocktype_d[0] == Encoder.SHORT_TYPE\n                    || blocktype_d[1] == Encoder.SHORT_TYPE)\n                    type = Encoder.SHORT_TYPE;\n                mr = masking_MS_ratio[gr_out][chn - 2];\n            } else {\n                ppe = percep_entropy;\n                ppePos = 0;\n                type = blocktype_d[chn];\n                mr = masking_ratio[gr_out][chn];\n            }\n\n            if (type == Encoder.SHORT_TYPE) {\n                ppe[ppePos + chn] = pecalc_s(mr, gfc.masking_lower);\n            } else {\n                ppe[ppePos + chn] = pecalc_l(mr, gfc.masking_lower);\n            }\n\n            if (gfp.analysis) {\n                gfc.pinfo.pe[gr_out][chn] = ppe[ppePos + chn];\n            }\n        }\n        return 0;\n    }\n\n    function s3_func_x(bark, hf_slope) {\n        var tempx = bark, tempy;\n\n        if (tempx >= 0) {\n            tempy = -tempx * 27;\n        } else {\n            tempy = tempx * hf_slope;\n        }\n        if (tempy <= -72.0) {\n            return 0;\n        }\n        return Math.exp(tempy * LN_TO_LOG10);\n    }\n\n    function norm_s3_func_x(hf_slope) {\n        var lim_a = 0, lim_b = 0;\n        {\n            var x = 0, l, h;\n            for (x = 0; s3_func_x(x, hf_slope) > 1e-20; x -= 1)\n                ;\n            l = x;\n            h = 0;\n            while (Math.abs(h - l) > 1e-12) {\n                x = (h + l) / 2;\n                if (s3_func_x(x, hf_slope) > 0) {\n                    h = x;\n                } else {\n                    l = x;\n                }\n            }\n            lim_a = l;\n        }\n        {\n            var x = 0, l, h;\n            for (x = 0; s3_func_x(x, hf_slope) > 1e-20; x += 1)\n                ;\n            l = 0;\n            h = x;\n            while (Math.abs(h - l) > 1e-12) {\n                x = (h + l) / 2;\n                if (s3_func_x(x, hf_slope) > 0) {\n                    l = x;\n                } else {\n                    h = x;\n                }\n            }\n            lim_b = h;\n        }\n        {\n            var sum = 0;\n            var m = 1000;\n            var i;\n            for (i = 0; i <= m; ++i) {\n                var x = lim_a + i * (lim_b - lim_a) / m;\n                var y = s3_func_x(x, hf_slope);\n                sum += y;\n            }\n            {\n                var norm = (m + 1) / (sum * (lim_b - lim_a));\n                /* printf( \"norm = %lf\\n\",norm); */\n                return norm;\n            }\n        }\n    }\n\n    /**\n     *   The spreading function.  Values returned in units of energy\n     */\n    function s3_func(bark) {\n        var tempx, x, tempy, temp;\n        tempx = bark;\n        if (tempx >= 0)\n            tempx *= 3;\n        else\n            tempx *= 1.5;\n\n        if (tempx >= 0.5 && tempx <= 2.5) {\n            temp = tempx - 0.5;\n            x = 8.0 * (temp * temp - 2.0 * temp);\n        } else\n            x = 0.0;\n        tempx += 0.474;\n        tempy = 15.811389 + 7.5 * tempx - 17.5\n            * Math.sqrt(1.0 + tempx * tempx);\n\n        if (tempy <= -60.0)\n            return 0.0;\n\n        tempx = Math.exp((x + tempy) * LN_TO_LOG10);\n\n        /**\n         * <PRE>\n         * Normalization.  The spreading function should be normalized so that:\n         * +inf\n         * /\n         * |  s3 [ bark ]  d(bark)   =  1\n         * /\n         * -inf\n         * </PRE>\n         */\n        tempx /= .6609193;\n        return tempx;\n    }\n\n    /**\n     * see for example \"Zwicker: Psychoakustik, 1982; ISBN 3-540-11401-7\n     */\n    function freq2bark(freq) {\n        /* input: freq in hz output: barks */\n        if (freq < 0)\n            freq = 0;\n        freq = freq * 0.001;\n        return 13.0 * Math.atan(.76 * freq) + 3.5\n            * Math.atan(freq * freq / (7.5 * 7.5));\n    }\n\n    function init_numline(numlines, bo, bm, bval, bval_width, mld, bo_w, sfreq, blksize, scalepos, deltafreq, sbmax) {\n        var b_frq = new_float(Encoder.CBANDS + 1);\n        var sample_freq_frac = sfreq / (sbmax > 15 ? 2 * 576 : 2 * 192);\n        var partition = new_int(Encoder.HBLKSIZE);\n        var i;\n        sfreq /= blksize;\n        var j = 0;\n        var ni = 0;\n        /* compute numlines, the number of spectral lines in each partition band */\n        /* each partition band should be about DELBARK wide. */\n        for (i = 0; i < Encoder.CBANDS; i++) {\n            var bark1;\n            var j2;\n            bark1 = freq2bark(sfreq * j);\n\n            b_frq[i] = sfreq * j;\n\n            for (j2 = j; freq2bark(sfreq * j2) - bark1 < DELBARK\n            && j2 <= blksize / 2; j2++)\n                ;\n\n            numlines[i] = j2 - j;\n            ni = i + 1;\n\n            while (j < j2) {\n                assert(j < Encoder.HBLKSIZE);\n                partition[j++] = i;\n            }\n            if (j > blksize / 2) {\n                j = blksize / 2;\n                ++i;\n                break;\n            }\n        }\n        assert(i < Encoder.CBANDS);\n        b_frq[i] = sfreq * j;\n\n        for (var sfb = 0; sfb < sbmax; sfb++) {\n            var i1, i2, start, end;\n            var arg;\n            start = scalepos[sfb];\n            end = scalepos[sfb + 1];\n\n            i1 = 0 | Math.floor(.5 + deltafreq * (start - .5));\n            if (i1 < 0)\n                i1 = 0;\n            i2 = 0 | Math.floor(.5 + deltafreq * (end - .5));\n\n            if (i2 > blksize / 2)\n                i2 = blksize / 2;\n\n            bm[sfb] = (partition[i1] + partition[i2]) / 2;\n            bo[sfb] = partition[i2];\n            var f_tmp = sample_freq_frac * end;\n            /*\n             * calculate how much of this band belongs to current scalefactor\n             * band\n             */\n            bo_w[sfb] = (f_tmp - b_frq[bo[sfb]])\n                / (b_frq[bo[sfb] + 1] - b_frq[bo[sfb]]);\n            if (bo_w[sfb] < 0) {\n                bo_w[sfb] = 0;\n            } else {\n                if (bo_w[sfb] > 1) {\n                    bo_w[sfb] = 1;\n                }\n            }\n            /* setup stereo demasking thresholds */\n            /* formula reverse enginerred from plot in paper */\n            arg = freq2bark(sfreq * scalepos[sfb] * deltafreq);\n            arg = ( Math.min(arg, 15.5) / 15.5);\n\n            mld[sfb] = Math.pow(10.0,\n                1.25 * (1 - Math.cos(Math.PI * arg)) - 2.5);\n        }\n\n        /* compute bark values of each critical band */\n        j = 0;\n        for (var k = 0; k < ni; k++) {\n            var w = numlines[k];\n            var bark1, bark2;\n\n            bark1 = freq2bark(sfreq * (j));\n            bark2 = freq2bark(sfreq * (j + w - 1));\n            bval[k] = .5 * (bark1 + bark2);\n\n            bark1 = freq2bark(sfreq * (j - .5));\n            bark2 = freq2bark(sfreq * (j + w - .5));\n            bval_width[k] = bark2 - bark1;\n            j += w;\n        }\n\n        return ni;\n    }\n\n    function init_s3_values(s3ind, npart, bval, bval_width, norm, use_old_s3) {\n        var s3 = new_float_n([Encoder.CBANDS, Encoder.CBANDS]);\n        /*\n         * The s3 array is not linear in the bark scale.\n         *\n         * bval[x] should be used to get the bark value.\n         */\n        var j;\n        var numberOfNoneZero = 0;\n\n        /**\n         * <PRE>\n         * s[i][j], the value of the spreading function,\n         * centered at band j (masker), for band i (maskee)\n         *\n         * i.e.: sum over j to spread into signal barkval=i\n         * NOTE: i and j are used opposite as in the ISO docs\n         * </PRE>\n         */\n        if (use_old_s3) {\n            for (var i = 0; i < npart; i++) {\n                for (j = 0; j < npart; j++) {\n                    var v = s3_func(bval[i] - bval[j]) * bval_width[j];\n                    s3[i][j] = v * norm[i];\n                }\n            }\n        } else {\n            for (j = 0; j < npart; j++) {\n                var hf_slope = 15 + Math.min(21 / bval[j], 12);\n                var s3_x_norm = norm_s3_func_x(hf_slope);\n                for (var i = 0; i < npart; i++) {\n                    var v = s3_x_norm\n                        * s3_func_x(bval[i] - bval[j], hf_slope)\n                        * bval_width[j];\n                    s3[i][j] = v * norm[i];\n                }\n            }\n        }\n        for (var i = 0; i < npart; i++) {\n            for (j = 0; j < npart; j++) {\n                if (s3[i][j] > 0.0)\n                    break;\n            }\n            s3ind[i][0] = j;\n\n            for (j = npart - 1; j > 0; j--) {\n                if (s3[i][j] > 0.0)\n                    break;\n            }\n            s3ind[i][1] = j;\n            numberOfNoneZero += (s3ind[i][1] - s3ind[i][0] + 1);\n        }\n\n        var p = new_float(numberOfNoneZero);\n        var k = 0;\n        for (var i = 0; i < npart; i++)\n            for (j = s3ind[i][0]; j <= s3ind[i][1]; j++)\n                p[k++] = s3[i][j];\n\n        return p;\n    }\n\n    function stereo_demask(f) {\n        /* setup stereo demasking thresholds */\n        /* formula reverse enginerred from plot in paper */\n        var arg = freq2bark(f);\n        arg = (Math.min(arg, 15.5) / 15.5);\n\n        return Math.pow(10.0,\n            1.25 * (1 - Math.cos(Math.PI * arg)) - 2.5);\n    }\n\n    /**\n     * NOTE: the bitrate reduction from the inter-channel masking effect is low\n     * compared to the chance of getting annyoing artefacts. L3psycho_anal_vbr\n     * does not use this feature. (Robert 071216)\n     */\n    this.psymodel_init = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var i;\n        var useOldS3 = true;\n        var bvl_a = 13, bvl_b = 24;\n        var snr_l_a = 0, snr_l_b = 0;\n        var snr_s_a = -8.25, snr_s_b = -4.5;\n        var bval = new_float(Encoder.CBANDS);\n        var bval_width = new_float(Encoder.CBANDS);\n        var norm = new_float(Encoder.CBANDS);\n        var sfreq = gfp.out_samplerate;\n\n        switch (gfp.experimentalZ) {\n            default:\n            case 0:\n                useOldS3 = true;\n                break;\n            case 1:\n                useOldS3 = (gfp.VBR == VbrMode.vbr_mtrh || gfp.VBR == VbrMode.vbr_mt) ? false\n                    : true;\n                break;\n            case 2:\n                useOldS3 = false;\n                break;\n            case 3:\n                bvl_a = 8;\n                snr_l_a = -1.75;\n                snr_l_b = -0.0125;\n                snr_s_a = -8.25;\n                snr_s_b = -2.25;\n                break;\n        }\n        gfc.ms_ener_ratio_old = .25;\n        gfc.blocktype_old[0] = gfc.blocktype_old[1] = Encoder.NORM_TYPE;\n        // the vbr header is long blocks\n\n        for (i = 0; i < 4; ++i) {\n            for (var j = 0; j < Encoder.CBANDS; ++j) {\n                gfc.nb_1[i][j] = 1e20;\n                gfc.nb_2[i][j] = 1e20;\n                gfc.nb_s1[i][j] = gfc.nb_s2[i][j] = 1.0;\n            }\n            for (var sb = 0; sb < Encoder.SBMAX_l; sb++) {\n                gfc.en[i].l[sb] = 1e20;\n                gfc.thm[i].l[sb] = 1e20;\n            }\n            for (var j = 0; j < 3; ++j) {\n                for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\n                    gfc.en[i].s[sb][j] = 1e20;\n                    gfc.thm[i].s[sb][j] = 1e20;\n                }\n                gfc.nsPsy.lastAttacks[i] = 0;\n            }\n            for (var j = 0; j < 9; j++)\n                gfc.nsPsy.last_en_subshort[i][j] = 10.;\n        }\n\n        /* init. for loudness approx. -jd 2001 mar 27 */\n        gfc.loudness_sq_save[0] = gfc.loudness_sq_save[1] = 0.0;\n\n        /*************************************************************************\n         * now compute the psychoacoustic model specific constants\n         ************************************************************************/\n        /* compute numlines, bo, bm, bval, bval_width, mld */\n\n        gfc.npart_l = init_numline(gfc.numlines_l, gfc.bo_l, gfc.bm_l, bval,\n            bval_width, gfc.mld_l, gfc.PSY.bo_l_weight, sfreq,\n            Encoder.BLKSIZE, gfc.scalefac_band.l, Encoder.BLKSIZE\n            / (2.0 * 576), Encoder.SBMAX_l);\n        assert(gfc.npart_l < Encoder.CBANDS);\n        /* compute the spreading function */\n        for (i = 0; i < gfc.npart_l; i++) {\n            var snr = snr_l_a;\n            if (bval[i] >= bvl_a) {\n                snr = snr_l_b * (bval[i] - bvl_a) / (bvl_b - bvl_a) + snr_l_a\n                    * (bvl_b - bval[i]) / (bvl_b - bvl_a);\n            }\n            norm[i] = Math.pow(10.0, snr / 10.0);\n            if (gfc.numlines_l[i] > 0) {\n                gfc.rnumlines_l[i] = 1.0 / gfc.numlines_l[i];\n            } else {\n                gfc.rnumlines_l[i] = 0;\n            }\n        }\n        gfc.s3_ll = init_s3_values(gfc.s3ind, gfc.npart_l, bval, bval_width,\n            norm, useOldS3);\n\n        /* compute long block specific values, ATH and MINVAL */\n        var j = 0;\n        for (i = 0; i < gfc.npart_l; i++) {\n            var x;\n\n            /* ATH */\n            x = Float.MAX_VALUE;\n            for (var k = 0; k < gfc.numlines_l[i]; k++, j++) {\n                var freq = sfreq * j / (1000.0 * Encoder.BLKSIZE);\n                var level;\n                /*\n                 * ATH below 100 Hz constant, not further climbing\n                 */\n                level = this.ATHformula(freq * 1000, gfp) - 20;\n                // scale to FFT units; returned value is in dB\n                level = Math.pow(10., 0.1 * level);\n                // convert from dB . energy\n                level *= gfc.numlines_l[i];\n                if (x > level)\n                    x = level;\n            }\n            gfc.ATH.cb_l[i] = x;\n\n            /*\n             * MINVAL. For low freq, the strength of the masking is limited by\n             * minval this is an ISO MPEG1 thing, dont know if it is really\n             * needed\n             */\n            /*\n             * FIXME: it does work to reduce low-freq problems in S53-Wind-Sax\n             * and lead-voice samples, but introduces some 3 kbps bit bloat too.\n             * TODO: Further refinement of the shape of this hack.\n             */\n            x = -20 + bval[i] * 20 / 10;\n            if (x > 6) {\n                x = 100;\n            }\n            if (x < -15) {\n                x = -15;\n            }\n            x -= 8.;\n            gfc.minval_l[i] = (Math.pow(10.0, x / 10.) * gfc.numlines_l[i]);\n        }\n\n        /************************************************************************\n         * do the same things for short blocks\n         ************************************************************************/\n        gfc.npart_s = init_numline(gfc.numlines_s, gfc.bo_s, gfc.bm_s, bval,\n            bval_width, gfc.mld_s, gfc.PSY.bo_s_weight, sfreq,\n            Encoder.BLKSIZE_s, gfc.scalefac_band.s, Encoder.BLKSIZE_s\n            / (2.0 * 192), Encoder.SBMAX_s);\n        assert(gfc.npart_s < Encoder.CBANDS);\n\n        /* SNR formula. short block is normalized by SNR. is it still right ? */\n        j = 0;\n        for (i = 0; i < gfc.npart_s; i++) {\n            var x;\n            var snr = snr_s_a;\n            if (bval[i] >= bvl_a) {\n                snr = snr_s_b * (bval[i] - bvl_a) / (bvl_b - bvl_a) + snr_s_a\n                    * (bvl_b - bval[i]) / (bvl_b - bvl_a);\n            }\n            norm[i] = Math.pow(10.0, snr / 10.0);\n\n            /* ATH */\n            x = Float.MAX_VALUE;\n            for (var k = 0; k < gfc.numlines_s[i]; k++, j++) {\n                var freq = sfreq * j / (1000.0 * Encoder.BLKSIZE_s);\n                var level;\n                /* freq = Min(.1,freq); */\n                /*\n                 * ATH below 100 Hz constant, not\n                 * further climbing\n                 */\n                level = this.ATHformula(freq * 1000, gfp) - 20;\n                // scale to FFT units; returned value is in dB\n                level = Math.pow(10., 0.1 * level);\n                // convert from dB . energy\n                level *= gfc.numlines_s[i];\n                if (x > level)\n                    x = level;\n            }\n            gfc.ATH.cb_s[i] = x;\n\n            /*\n             * MINVAL. For low freq, the strength of the masking is limited by\n             * minval this is an ISO MPEG1 thing, dont know if it is really\n             * needed\n             */\n            x = (-7.0 + bval[i] * 7.0 / 12.0);\n            if (bval[i] > 12) {\n                x *= 1 + Math.log(1 + x) * 3.1;\n            }\n            if (bval[i] < 12) {\n                x *= 1 + Math.log(1 - x) * 2.3;\n            }\n            if (x < -15) {\n                x = -15;\n            }\n            x -= 8;\n            gfc.minval_s[i] = Math.pow(10.0, x / 10)\n                * gfc.numlines_s[i];\n        }\n\n        gfc.s3_ss = init_s3_values(gfc.s3ind_s, gfc.npart_s, bval, bval_width,\n            norm, useOldS3);\n\n        init_mask_add_max_values();\n        fft.init_fft(gfc);\n\n        /* setup temporal masking */\n        gfc.decay = Math.exp(-1.0 * LOG10\n            / (temporalmask_sustain_sec * sfreq / 192.0));\n\n        {\n            var msfix;\n            msfix = NS_MSFIX;\n            if ((gfp.exp_nspsytune & 2) != 0)\n                msfix = 1.0;\n            if (Math.abs(gfp.msfix) > 0.0)\n                msfix = gfp.msfix;\n            gfp.msfix = msfix;\n\n            /*\n             * spread only from npart_l bands. Normally, we use the spreading\n             * function to convolve from npart_l down to npart_l bands\n             */\n            for (var b = 0; b < gfc.npart_l; b++)\n                if (gfc.s3ind[b][1] > gfc.npart_l - 1)\n                    gfc.s3ind[b][1] = gfc.npart_l - 1;\n        }\n\n        /*\n         * prepare for ATH auto adjustment: we want to decrease the ATH by 12 dB\n         * per second\n         */\n        var frame_duration = (576. * gfc.mode_gr / sfreq);\n        gfc.ATH.decay = Math.pow(10., -12. / 10. * frame_duration);\n        gfc.ATH.adjust = 0.01;\n        /* minimum, for leading low loudness */\n        gfc.ATH.adjustLimit = 1.0;\n        /* on lead, allow adjust up to maximum */\n\n        assert(gfc.bo_l[Encoder.SBMAX_l - 1] <= gfc.npart_l);\n        assert(gfc.bo_s[Encoder.SBMAX_s - 1] <= gfc.npart_s);\n\n        if (gfp.ATHtype != -1) {\n            /* compute equal loudness weights (eql_w) */\n            var freq;\n            var freq_inc = gfp.out_samplerate\n                / (Encoder.BLKSIZE);\n            var eql_balance = 0.0;\n            freq = 0.0;\n            for (i = 0; i < Encoder.BLKSIZE / 2; ++i) {\n                /* convert ATH dB to relative power (not dB) */\n                /* to determine eql_w */\n                freq += freq_inc;\n                gfc.ATH.eql_w[i] = 1. / Math.pow(10, this.ATHformula(freq, gfp) / 10);\n                eql_balance += gfc.ATH.eql_w[i];\n            }\n            eql_balance = 1.0 / eql_balance;\n            for (i = Encoder.BLKSIZE / 2; --i >= 0;) { /* scale weights */\n                gfc.ATH.eql_w[i] *= eql_balance;\n            }\n        }\n        {\n            for (var b = j = 0; b < gfc.npart_s; ++b) {\n                for (i = 0; i < gfc.numlines_s[b]; ++i) {\n                    ++j;\n                }\n            }\n            assert(j == 129);\n            for (var b = j = 0; b < gfc.npart_l; ++b) {\n                for (i = 0; i < gfc.numlines_l[b]; ++i) {\n                    ++j;\n                }\n            }\n            assert(j == 513);\n        }\n        j = 0;\n        for (i = 0; i < gfc.npart_l; i++) {\n            var freq = sfreq * (j + gfc.numlines_l[i] / 2) / (1.0 * Encoder.BLKSIZE);\n            gfc.mld_cb_l[i] = stereo_demask(freq);\n            j += gfc.numlines_l[i];\n        }\n        for (; i < Encoder.CBANDS; ++i) {\n            gfc.mld_cb_l[i] = 1;\n        }\n        j = 0;\n        for (i = 0; i < gfc.npart_s; i++) {\n            var freq = sfreq * (j + gfc.numlines_s[i] / 2) / (1.0 * Encoder.BLKSIZE_s);\n            gfc.mld_cb_s[i] = stereo_demask(freq);\n            j += gfc.numlines_s[i];\n        }\n        for (; i < Encoder.CBANDS; ++i) {\n            gfc.mld_cb_s[i] = 1;\n        }\n        return 0;\n    }\n\n    /**\n     * Those ATH formulas are returning their minimum value for input = -1\n     */\n    function ATHformula_GB(f, value) {\n        /**\n         * <PRE>\n         *  from Painter & Spanias\n         *           modified by Gabriel Bouvigne to better fit the reality\n         *           ath =    3.640 * pow(f,-0.8)\n         *           - 6.800 * exp(-0.6*pow(f-3.4,2.0))\n         *           + 6.000 * exp(-0.15*pow(f-8.7,2.0))\n         *           + 0.6* 0.001 * pow(f,4.0);\n         *\n         *\n         *           In the past LAME was using the Painter &Spanias formula.\n         *           But we had some recurrent problems with HF content.\n         *           We measured real ATH values, and found the older formula\n         *           to be inaccurate in the higher part. So we made this new\n         *           formula and this solved most of HF problematic test cases.\n         *           The tradeoff is that in VBR mode it increases a lot the\n         *           bitrate.\n         * </PRE>\n         */\n\n        /*\n         * This curve can be adjusted according to the VBR scale: it adjusts\n         * from something close to Painter & Spanias on V9 up to Bouvigne's\n         * formula for V0. This way the VBR bitrate is more balanced according\n         * to the -V value.\n         */\n\n        // the following Hack allows to ask for the lowest value\n        if (f < -.3)\n            f = 3410;\n\n        // convert to khz\n        f /= 1000;\n        f = Math.max(0.1, f);\n        var ath = 3.640 * Math.pow(f, -0.8) - 6.800\n            * Math.exp(-0.6 * Math.pow(f - 3.4, 2.0)) + 6.000\n            * Math.exp(-0.15 * Math.pow(f - 8.7, 2.0))\n            + (0.6 + 0.04 * value) * 0.001 * Math.pow(f, 4.0);\n        return ath;\n    }\n\n    this.ATHformula = function (f, gfp) {\n        var ath;\n        switch (gfp.ATHtype) {\n            case 0:\n                ath = ATHformula_GB(f, 9);\n                break;\n            case 1:\n                // over sensitive, should probably be removed\n                ath = ATHformula_GB(f, -1);\n                break;\n            case 2:\n                ath = ATHformula_GB(f, 0);\n                break;\n            case 3:\n                // modification of GB formula by Roel\n                ath = ATHformula_GB(f, 1) + 6;\n                break;\n            case 4:\n                ath = ATHformula_GB(f, gfp.ATHcurve);\n                break;\n            default:\n                ath = ATHformula_GB(f, 0);\n                break;\n        }\n        return ath;\n    }\n\n}\n\nmodule.exports = PsyModel;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/lamejs/src/js/PsyModel.js?");

/***/ }),

/***/ "../node_modules/lamejs/src/js/Quantize.js":
/*!*************************************************!*\
  !*** ../node_modules/lamejs/src/js/Quantize.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * MP3 quantization\n *\n *      Copyright (c) 1999-2000 Mark Taylor\n *      Copyright (c) 1999-2003 Takehiro Tominaga\n *      Copyright (c) 2000-2007 Robert Hegemann\n *      Copyright (c) 2001-2005 Gabriel Bouvigne\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.     See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: Quantize.java,v 1.24 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n//import java.util.Arrays;\nvar common = __webpack_require__(/*! ./common.js */ \"../node_modules/lamejs/src/js/common.js\");\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar VBRQuantize = __webpack_require__(/*! ./VBRQuantize.js */ \"../node_modules/lamejs/src/js/VBRQuantize.js\");\nvar CalcNoiseResult = __webpack_require__(/*! ./CalcNoiseResult.js */ \"../node_modules/lamejs/src/js/CalcNoiseResult.js\");\nvar CalcNoiseData = __webpack_require__(/*! ./CalcNoiseData.js */ \"../node_modules/lamejs/src/js/CalcNoiseData.js\");\nvar Encoder = __webpack_require__(/*! ./Encoder.js */ \"../node_modules/lamejs/src/js/Encoder.js\");\nvar GrInfo = __webpack_require__(/*! ./GrInfo.js */ \"../node_modules/lamejs/src/js/GrInfo.js\");\nvar L3Side = __webpack_require__(/*! ./L3Side.js */ \"../node_modules/lamejs/src/js/L3Side.js\");\n\nfunction Quantize() {\n    var bs;\n    this.rv = null;\n    var rv;\n    this.qupvt = null;\n    var qupvt;\n\n    var vbr = new VBRQuantize();\n    var tk;\n\n    this.setModules = function (_bs, _rv, _qupvt, _tk) {\n        bs = _bs;\n        rv = _rv;\n        this.rv = _rv;\n        qupvt = _qupvt;\n        this.qupvt = _qupvt;\n        tk = _tk;\n        vbr.setModules(qupvt, tk);\n    }\n\n    /**\n     * convert from L/R <. Mid/Side\n     */\n    this.ms_convert = function (l3_side, gr) {\n        for (var i = 0; i < 576; ++i) {\n            var l = l3_side.tt[gr][0].xr[i];\n            var r = l3_side.tt[gr][1].xr[i];\n            l3_side.tt[gr][0].xr[i] = (l + r) * (Util.SQRT2 * 0.5);\n            l3_side.tt[gr][1].xr[i] = (l - r) * (Util.SQRT2 * 0.5);\n        }\n    };\n\n    /**\n     * mt 6/99\n     *\n     * initializes cod_info, scalefac and xrpow\n     *\n     * returns 0 if all energies in xr are zero, else 1\n     */\n    function init_xrpow_core(cod_info, xrpow, upper, sum) {\n        sum = 0;\n        for (var i = 0; i <= upper; ++i) {\n            var tmp = Math.abs(cod_info.xr[i]);\n            sum += tmp;\n            xrpow[i] = Math.sqrt(tmp * Math.sqrt(tmp));\n\n            if (xrpow[i] > cod_info.xrpow_max)\n                cod_info.xrpow_max = xrpow[i];\n        }\n        return sum;\n    }\n\n    this.init_xrpow = function (gfc, cod_info, xrpow) {\n        var sum = 0;\n        var upper = 0 | cod_info.max_nonzero_coeff;\n\n        assert(xrpow != null);\n        cod_info.xrpow_max = 0;\n\n        /*\n         * check if there is some energy we have to quantize and calculate xrpow\n         * matching our fresh scalefactors\n         */\n        assert(0 <= upper && upper <= 575);\n\n        Arrays.fill(xrpow, upper, 576, 0);\n\n        sum = init_xrpow_core(cod_info, xrpow, upper, sum);\n\n        /*\n         * return 1 if we have something to quantize, else 0\n         */\n        if (sum > 1E-20) {\n            var j = 0;\n            if ((gfc.substep_shaping & 2) != 0)\n                j = 1;\n\n            for (var i = 0; i < cod_info.psymax; i++)\n                gfc.pseudohalf[i] = j;\n\n            return true;\n        }\n\n        Arrays.fill(cod_info.l3_enc, 0, 576, 0);\n        return false;\n    }\n\n    /**\n     * Gabriel Bouvigne feb/apr 2003<BR>\n     * Analog silence detection in partitionned sfb21 or sfb12 for short blocks\n     *\n     * From top to bottom of sfb, changes to 0 coeffs which are below ath. It\n     * stops on the first coeff higher than ath.\n     */\n    function psfb21_analogsilence(gfc, cod_info) {\n        var ath = gfc.ATH;\n        var xr = cod_info.xr;\n\n        if (cod_info.block_type != Encoder.SHORT_TYPE) {\n            /* NORM, START or STOP type, but not SHORT blocks */\n            var stop = false;\n            for (var gsfb = Encoder.PSFB21 - 1; gsfb >= 0 && !stop; gsfb--) {\n                var start = gfc.scalefac_band.psfb21[gsfb];\n                var end = gfc.scalefac_band.psfb21[gsfb + 1];\n                var ath21 = qupvt.athAdjust(ath.adjust, ath.psfb21[gsfb],\n                    ath.floor);\n\n                if (gfc.nsPsy.longfact[21] > 1e-12)\n                    ath21 *= gfc.nsPsy.longfact[21];\n\n                for (var j = end - 1; j >= start; j--) {\n                    if (Math.abs(xr[j]) < ath21)\n                        xr[j] = 0;\n                    else {\n                        stop = true;\n                        break;\n                    }\n                }\n            }\n        } else {\n            /* note: short blocks coeffs are reordered */\n            for (var block = 0; block < 3; block++) {\n                var stop = false;\n                for (var gsfb = Encoder.PSFB12 - 1; gsfb >= 0 && !stop; gsfb--) {\n                    var start = gfc.scalefac_band.s[12]\n                        * 3\n                        + (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12])\n                        * block\n                        + (gfc.scalefac_band.psfb12[gsfb] - gfc.scalefac_band.psfb12[0]);\n                    var end = start\n                        + (gfc.scalefac_band.psfb12[gsfb + 1] - gfc.scalefac_band.psfb12[gsfb]);\n                    var ath12 = qupvt.athAdjust(ath.adjust, ath.psfb12[gsfb],\n                        ath.floor);\n\n                    if (gfc.nsPsy.shortfact[12] > 1e-12)\n                        ath12 *= gfc.nsPsy.shortfact[12];\n\n                    for (var j = end - 1; j >= start; j--) {\n                        if (Math.abs(xr[j]) < ath12)\n                            xr[j] = 0;\n                        else {\n                            stop = true;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n    }\n\n    this.init_outer_loop = function (gfc, cod_info) {\n        /*\n         * initialize fresh cod_info\n         */\n        cod_info.part2_3_length = 0;\n        cod_info.big_values = 0;\n        cod_info.count1 = 0;\n        cod_info.global_gain = 210;\n        cod_info.scalefac_compress = 0;\n        /* mixed_block_flag, block_type was set in psymodel.c */\n        cod_info.table_select[0] = 0;\n        cod_info.table_select[1] = 0;\n        cod_info.table_select[2] = 0;\n        cod_info.subblock_gain[0] = 0;\n        cod_info.subblock_gain[1] = 0;\n        cod_info.subblock_gain[2] = 0;\n        cod_info.subblock_gain[3] = 0;\n        /* this one is always 0 */\n        cod_info.region0_count = 0;\n        cod_info.region1_count = 0;\n        cod_info.preflag = 0;\n        cod_info.scalefac_scale = 0;\n        cod_info.count1table_select = 0;\n        cod_info.part2_length = 0;\n        cod_info.sfb_lmax = Encoder.SBPSY_l;\n        cod_info.sfb_smin = Encoder.SBPSY_s;\n        cod_info.psy_lmax = gfc.sfb21_extra ? Encoder.SBMAX_l : Encoder.SBPSY_l;\n        cod_info.psymax = cod_info.psy_lmax;\n        cod_info.sfbmax = cod_info.sfb_lmax;\n        cod_info.sfbdivide = 11;\n        for (var sfb = 0; sfb < Encoder.SBMAX_l; sfb++) {\n            cod_info.width[sfb] = gfc.scalefac_band.l[sfb + 1]\n                - gfc.scalefac_band.l[sfb];\n            /* which is always 0. */\n            cod_info.window[sfb] = 3;\n        }\n        if (cod_info.block_type == Encoder.SHORT_TYPE) {\n            var ixwork = new_float(576);\n\n            cod_info.sfb_smin = 0;\n            cod_info.sfb_lmax = 0;\n            if (cod_info.mixed_block_flag != 0) {\n                /*\n                 * MPEG-1: sfbs 0-7 long block, 3-12 short blocks MPEG-2(.5):\n                 * sfbs 0-5 long block, 3-12 short blocks\n                 */\n                cod_info.sfb_smin = 3;\n                cod_info.sfb_lmax = gfc.mode_gr * 2 + 4;\n            }\n            cod_info.psymax = cod_info.sfb_lmax\n                + 3\n                * ((gfc.sfb21_extra ? Encoder.SBMAX_s : Encoder.SBPSY_s) - cod_info.sfb_smin);\n            cod_info.sfbmax = cod_info.sfb_lmax + 3\n                * (Encoder.SBPSY_s - cod_info.sfb_smin);\n            cod_info.sfbdivide = cod_info.sfbmax - 18;\n            cod_info.psy_lmax = cod_info.sfb_lmax;\n            /* re-order the short blocks, for more efficient encoding below */\n            /* By Takehiro TOMINAGA */\n            /*\n             * Within each scalefactor band, data is given for successive time\n             * windows, beginning with window 0 and ending with window 2. Within\n             * each window, the quantized values are then arranged in order of\n             * increasing frequency...\n             */\n            var ix = gfc.scalefac_band.l[cod_info.sfb_lmax];\n            System.arraycopy(cod_info.xr, 0, ixwork, 0, 576);\n            for (var sfb = cod_info.sfb_smin; sfb < Encoder.SBMAX_s; sfb++) {\n                var start = gfc.scalefac_band.s[sfb];\n                var end = gfc.scalefac_band.s[sfb + 1];\n                for (var window = 0; window < 3; window++) {\n                    for (var l = start; l < end; l++) {\n                        cod_info.xr[ix++] = ixwork[3 * l + window];\n                    }\n                }\n            }\n\n            var j = cod_info.sfb_lmax;\n            for (var sfb = cod_info.sfb_smin; sfb < Encoder.SBMAX_s; sfb++) {\n                cod_info.width[j] = cod_info.width[j + 1] = cod_info.width[j + 2] = gfc.scalefac_band.s[sfb + 1]\n                    - gfc.scalefac_band.s[sfb];\n                cod_info.window[j] = 0;\n                cod_info.window[j + 1] = 1;\n                cod_info.window[j + 2] = 2;\n                j += 3;\n            }\n        }\n\n        cod_info.count1bits = 0;\n        cod_info.sfb_partition_table = qupvt.nr_of_sfb_block[0][0];\n        cod_info.slen[0] = 0;\n        cod_info.slen[1] = 0;\n        cod_info.slen[2] = 0;\n        cod_info.slen[3] = 0;\n\n        cod_info.max_nonzero_coeff = 575;\n\n        /*\n         * fresh scalefactors are all zero\n         */\n        Arrays.fill(cod_info.scalefac, 0);\n\n        psfb21_analogsilence(gfc, cod_info);\n    };\n\n    function BinSearchDirection(ordinal) {\n        this.ordinal = ordinal;\n    }\n\n    BinSearchDirection.BINSEARCH_NONE = new BinSearchDirection(0);\n    BinSearchDirection.BINSEARCH_UP = new BinSearchDirection(1);\n    BinSearchDirection.BINSEARCH_DOWN = new BinSearchDirection(2);\n\n    /**\n     * author/date??\n     *\n     * binary step size search used by outer_loop to get a quantizer step size\n     * to start with\n     */\n    function bin_search_StepSize(gfc, cod_info, desired_rate, ch, xrpow) {\n        var nBits;\n        var CurrentStep = gfc.CurrentStep[ch];\n        var flagGoneOver = false;\n        var start = gfc.OldValue[ch];\n        var Direction = BinSearchDirection.BINSEARCH_NONE;\n        cod_info.global_gain = start;\n        desired_rate -= cod_info.part2_length;\n\n        assert(CurrentStep != 0);\n        for (; ;) {\n            var step;\n            nBits = tk.count_bits(gfc, xrpow, cod_info, null);\n\n            if (CurrentStep == 1 || nBits == desired_rate)\n                break;\n            /* nothing to adjust anymore */\n\n            if (nBits > desired_rate) {\n                /* increase Quantize_StepSize */\n                if (Direction == BinSearchDirection.BINSEARCH_DOWN)\n                    flagGoneOver = true;\n\n                if (flagGoneOver)\n                    CurrentStep /= 2;\n                Direction = BinSearchDirection.BINSEARCH_UP;\n                step = CurrentStep;\n            } else {\n                /* decrease Quantize_StepSize */\n                if (Direction == BinSearchDirection.BINSEARCH_UP)\n                    flagGoneOver = true;\n\n                if (flagGoneOver)\n                    CurrentStep /= 2;\n                Direction = BinSearchDirection.BINSEARCH_DOWN;\n                step = -CurrentStep;\n            }\n            cod_info.global_gain += step;\n            if (cod_info.global_gain < 0) {\n                cod_info.global_gain = 0;\n                flagGoneOver = true;\n            }\n            if (cod_info.global_gain > 255) {\n                cod_info.global_gain = 255;\n                flagGoneOver = true;\n            }\n        }\n\n        assert(cod_info.global_gain >= 0);\n        assert(cod_info.global_gain < 256);\n\n        while (nBits > desired_rate && cod_info.global_gain < 255) {\n            cod_info.global_gain++;\n            nBits = tk.count_bits(gfc, xrpow, cod_info, null);\n        }\n        gfc.CurrentStep[ch] = (start - cod_info.global_gain >= 4) ? 4 : 2;\n        gfc.OldValue[ch] = cod_info.global_gain;\n        cod_info.part2_3_length = nBits;\n        return nBits;\n    }\n\n    this.trancate_smallspectrums = function (gfc, gi, l3_xmin, work) {\n        var distort = new_float(L3Side.SFBMAX);\n\n        if ((0 == (gfc.substep_shaping & 4) && gi.block_type == Encoder.SHORT_TYPE)\n            || (gfc.substep_shaping & 0x80) != 0)\n            return;\n        qupvt.calc_noise(gi, l3_xmin, distort, new CalcNoiseResult(), null);\n        for (var j = 0; j < 576; j++) {\n            var xr = 0.0;\n            if (gi.l3_enc[j] != 0)\n                xr = Math.abs(gi.xr[j]);\n            work[j] = xr;\n        }\n\n        var j = 0;\n        var sfb = 8;\n        if (gi.block_type == Encoder.SHORT_TYPE)\n            sfb = 6;\n        do {\n            var allowedNoise, trancateThreshold;\n            var nsame, start;\n\n            var width = gi.width[sfb];\n            j += width;\n            if (distort[sfb] >= 1.0)\n                continue;\n\n            Arrays.sort(work, j - width, width);\n            if (BitStream.EQ(work[j - 1], 0.0))\n                continue;\n            /* all zero sfb */\n\n            allowedNoise = (1.0 - distort[sfb]) * l3_xmin[sfb];\n            trancateThreshold = 0.0;\n            start = 0;\n            do {\n                var noise;\n                for (nsame = 1; start + nsame < width; nsame++)\n                    if (BitStream.NEQ(work[start + j - width], work[start + j\n                        + nsame - width]))\n                        break;\n\n                noise = work[start + j - width] * work[start + j - width]\n                    * nsame;\n                if (allowedNoise < noise) {\n                    if (start != 0)\n                        trancateThreshold = work[start + j - width - 1];\n                    break;\n                }\n                allowedNoise -= noise;\n                start += nsame;\n            } while (start < width);\n            if (BitStream.EQ(trancateThreshold, 0.0))\n                continue;\n\n            do {\n                if (Math.abs(gi.xr[j - width]) <= trancateThreshold)\n                    gi.l3_enc[j - width] = 0;\n            } while (--width > 0);\n        } while (++sfb < gi.psymax);\n\n        gi.part2_3_length = tk.noquant_count_bits(gfc, gi, null);\n    };\n\n    /**\n     * author/date??\n     *\n     * Function: Returns zero if there is a scalefac which has not been\n     * amplified. Otherwise it returns one.\n     */\n    function loop_break(cod_info) {\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++)\n            if (cod_info.scalefac[sfb]\n                + cod_info.subblock_gain[cod_info.window[sfb]] == 0)\n                return false;\n\n        return true;\n    }\n\n    /* mt 5/99: Function: Improved calc_noise for a single channel */\n\n    function penalties(noise) {\n        return Util.FAST_LOG10((0.368 + 0.632 * noise * noise * noise));\n    }\n\n    /**\n     * author/date??\n     *\n     * several different codes to decide which quantization is better\n     */\n    function get_klemm_noise(distort, gi) {\n        var klemm_noise = 1E-37;\n        for (var sfb = 0; sfb < gi.psymax; sfb++)\n            klemm_noise += penalties(distort[sfb]);\n\n        return Math.max(1e-20, klemm_noise);\n    }\n\n    function quant_compare(quant_comp, best, calc, gi, distort) {\n        /**\n         * noise is given in decibels (dB) relative to masking thesholds.<BR>\n         *\n         * over_noise: ??? (the previous comment is fully wrong)<BR>\n         * tot_noise: ??? (the previous comment is fully wrong)<BR>\n         * max_noise: max quantization noise\n         */\n        var better;\n\n        switch (quant_comp) {\n            default:\n            case 9:\n            {\n                if (best.over_count > 0) {\n                    /* there are distorted sfb */\n                    better = calc.over_SSD <= best.over_SSD;\n                    if (calc.over_SSD == best.over_SSD)\n                        better = calc.bits < best.bits;\n                } else {\n                    /* no distorted sfb */\n                    better = ((calc.max_noise < 0) && ((calc.max_noise * 10 + calc.bits) <= (best.max_noise * 10 + best.bits)));\n                }\n                break;\n            }\n\n            case 0:\n                better = calc.over_count < best.over_count\n                    || (calc.over_count == best.over_count && calc.over_noise < best.over_noise)\n                    || (calc.over_count == best.over_count\n                    && BitStream.EQ(calc.over_noise, best.over_noise) && calc.tot_noise < best.tot_noise);\n                break;\n\n            case 8:\n                calc.max_noise = get_klemm_noise(distort, gi);\n            //$FALL-THROUGH$\n            case 1:\n                better = calc.max_noise < best.max_noise;\n                break;\n            case 2:\n                better = calc.tot_noise < best.tot_noise;\n                break;\n            case 3:\n                better = (calc.tot_noise < best.tot_noise)\n                    && (calc.max_noise < best.max_noise);\n                break;\n            case 4:\n                better = (calc.max_noise <= 0.0 && best.max_noise > 0.2)\n                    || (calc.max_noise <= 0.0 && best.max_noise < 0.0\n                    && best.max_noise > calc.max_noise - 0.2 && calc.tot_noise < best.tot_noise)\n                    || (calc.max_noise <= 0.0 && best.max_noise > 0.0\n                    && best.max_noise > calc.max_noise - 0.2 && calc.tot_noise < best.tot_noise\n                    + best.over_noise)\n                    || (calc.max_noise > 0.0 && best.max_noise > -0.05\n                    && best.max_noise > calc.max_noise - 0.1 && calc.tot_noise\n                    + calc.over_noise < best.tot_noise\n                    + best.over_noise)\n                    || (calc.max_noise > 0.0 && best.max_noise > -0.1\n                    && best.max_noise > calc.max_noise - 0.15 && calc.tot_noise\n                    + calc.over_noise + calc.over_noise < best.tot_noise\n                    + best.over_noise + best.over_noise);\n                break;\n            case 5:\n                better = calc.over_noise < best.over_noise\n                    || (BitStream.EQ(calc.over_noise, best.over_noise) && calc.tot_noise < best.tot_noise);\n                break;\n            case 6:\n                better = calc.over_noise < best.over_noise\n                    || (BitStream.EQ(calc.over_noise, best.over_noise) && (calc.max_noise < best.max_noise || (BitStream\n                        .EQ(calc.max_noise, best.max_noise) && calc.tot_noise <= best.tot_noise)));\n                break;\n            case 7:\n                better = calc.over_count < best.over_count\n                    || calc.over_noise < best.over_noise;\n                break;\n        }\n\n        if (best.over_count == 0) {\n            /*\n             * If no distorted bands, only use this quantization if it is\n             * better, and if it uses less bits. Unfortunately, part2_3_length\n             * is sometimes a poor estimator of the final size at low bitrates.\n             */\n            better = better && calc.bits < best.bits;\n        }\n\n        return better;\n    }\n\n    /**\n     * author/date??\n     *\n     * <PRE>\n     *  Amplify the scalefactor bands that violate the masking threshold.\n     *  See ISO 11172-3 Section C.1.5.4.3.5\n     *\n     *  distort[] = noise/masking\n     *  distort[] > 1   ==> noise is not masked\n     *  distort[] < 1   ==> noise is masked\n     *  max_dist = maximum value of distort[]\n     *\n     *  Three algorithms:\n     *  noise_shaping_amp\n     *        0             Amplify all bands with distort[]>1.\n     *\n     *        1             Amplify all bands with distort[] >= max_dist^(.5);\n     *                     ( 50% in the db scale)\n     *\n     *        2             Amplify first band with distort[] >= max_dist;\n     *\n     *\n     *  For algorithms 0 and 1, if max_dist < 1, then amplify all bands\n     *  with distort[] >= .95*max_dist.  This is to make sure we always\n     *  amplify at least one band.\n     * </PRE>\n     */\n    function amp_scalefac_bands(gfp, cod_info, distort, xrpow, bRefine) {\n        var gfc = gfp.internal_flags;\n        var ifqstep34;\n\n        if (cod_info.scalefac_scale == 0) {\n            ifqstep34 = 1.29683955465100964055;\n            /* 2**(.75*.5) */\n        } else {\n            ifqstep34 = 1.68179283050742922612;\n            /* 2**(.75*1) */\n        }\n\n        /* compute maximum value of distort[] */\n        var trigger = 0;\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\n            if (trigger < distort[sfb])\n                trigger = distort[sfb];\n        }\n\n        var noise_shaping_amp = gfc.noise_shaping_amp;\n        if (noise_shaping_amp == 3) {\n            if (bRefine)\n                noise_shaping_amp = 2;\n            else\n                noise_shaping_amp = 1;\n        }\n        switch (noise_shaping_amp) {\n            case 2:\n                /* amplify exactly 1 band */\n                break;\n\n            case 1:\n                /* amplify bands within 50% of max (on db scale) */\n                if (trigger > 1.0)\n                    trigger = Math.pow(trigger, .5);\n                else\n                    trigger *= .95;\n                break;\n\n            case 0:\n            default:\n                /* ISO algorithm. amplify all bands with distort>1 */\n                if (trigger > 1.0)\n                    trigger = 1.0;\n                else\n                    trigger *= .95;\n                break;\n        }\n\n        var j = 0;\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\n            var width = cod_info.width[sfb];\n            var l;\n            j += width;\n            if (distort[sfb] < trigger)\n                continue;\n\n            if ((gfc.substep_shaping & 2) != 0) {\n                gfc.pseudohalf[sfb] = (0 == gfc.pseudohalf[sfb]) ? 1 : 0;\n                if (0 == gfc.pseudohalf[sfb] && gfc.noise_shaping_amp == 2)\n                    return;\n            }\n            cod_info.scalefac[sfb]++;\n            for (l = -width; l < 0; l++) {\n                xrpow[j + l] *= ifqstep34;\n                if (xrpow[j + l] > cod_info.xrpow_max)\n                    cod_info.xrpow_max = xrpow[j + l];\n            }\n\n            if (gfc.noise_shaping_amp == 2)\n                return;\n        }\n    }\n\n    /**\n     * Takehiro Tominaga 2000-xx-xx\n     *\n     * turns on scalefac scale and adjusts scalefactors\n     */\n    function inc_scalefac_scale(cod_info, xrpow) {\n        var ifqstep34 = 1.29683955465100964055;\n\n        var j = 0;\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\n            var width = cod_info.width[sfb];\n            var s = cod_info.scalefac[sfb];\n            if (cod_info.preflag != 0)\n                s += qupvt.pretab[sfb];\n            j += width;\n            if ((s & 1) != 0) {\n                s++;\n                for (var l = -width; l < 0; l++) {\n                    xrpow[j + l] *= ifqstep34;\n                    if (xrpow[j + l] > cod_info.xrpow_max)\n                        cod_info.xrpow_max = xrpow[j + l];\n                }\n            }\n            cod_info.scalefac[sfb] = s >> 1;\n        }\n        cod_info.preflag = 0;\n        cod_info.scalefac_scale = 1;\n    }\n\n    /**\n     * Takehiro Tominaga 2000-xx-xx\n     *\n     * increases the subblock gain and adjusts scalefactors\n     */\n    function inc_subblock_gain(gfc, cod_info, xrpow) {\n        var sfb;\n        var scalefac = cod_info.scalefac;\n\n        /* subbloc_gain can't do anything in the long block region */\n        for (sfb = 0; sfb < cod_info.sfb_lmax; sfb++) {\n            if (scalefac[sfb] >= 16)\n                return true;\n        }\n\n        for (var window = 0; window < 3; window++) {\n            var s1 = 0;\n            var s2 = 0;\n\n            for (sfb = cod_info.sfb_lmax + window; sfb < cod_info.sfbdivide; sfb += 3) {\n                if (s1 < scalefac[sfb])\n                    s1 = scalefac[sfb];\n            }\n            for (; sfb < cod_info.sfbmax; sfb += 3) {\n                if (s2 < scalefac[sfb])\n                    s2 = scalefac[sfb];\n            }\n\n            if (s1 < 16 && s2 < 8)\n                continue;\n\n            if (cod_info.subblock_gain[window] >= 7)\n                return true;\n\n            /*\n             * even though there is no scalefactor for sfb12 subblock gain\n             * affects upper frequencies too, that's why we have to go up to\n             * SBMAX_s\n             */\n            cod_info.subblock_gain[window]++;\n            var j = gfc.scalefac_band.l[cod_info.sfb_lmax];\n            for (sfb = cod_info.sfb_lmax + window; sfb < cod_info.sfbmax; sfb += 3) {\n                var amp;\n                var width = cod_info.width[sfb];\n                var s = scalefac[sfb];\n                assert(s >= 0);\n                s = s - (4 >> cod_info.scalefac_scale);\n                if (s >= 0) {\n                    scalefac[sfb] = s;\n                    j += width * 3;\n                    continue;\n                }\n\n                scalefac[sfb] = 0;\n                {\n                    var gain = 210 + (s << (cod_info.scalefac_scale + 1));\n                    amp = qupvt.IPOW20(gain);\n                }\n                j += width * (window + 1);\n                for (var l = -width; l < 0; l++) {\n                    xrpow[j + l] *= amp;\n                    if (xrpow[j + l] > cod_info.xrpow_max)\n                        cod_info.xrpow_max = xrpow[j + l];\n                }\n                j += width * (3 - window - 1);\n            }\n\n            {\n                var amp = qupvt.IPOW20(202);\n                j += cod_info.width[sfb] * (window + 1);\n                for (var l = -cod_info.width[sfb]; l < 0; l++) {\n                    xrpow[j + l] *= amp;\n                    if (xrpow[j + l] > cod_info.xrpow_max)\n                        cod_info.xrpow_max = xrpow[j + l];\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * <PRE>\n     *  Takehiro Tominaga /date??\n     *  Robert Hegemann 2000-09-06: made a function of it\n     *\n     *  amplifies scalefactor bands,\n     *   - if all are already amplified returns 0\n     *   - if some bands are amplified too much:\n     *      * try to increase scalefac_scale\n     *      * if already scalefac_scale was set\n     *          try on short blocks to increase subblock gain\n     * </PRE>\n     */\n    function balance_noise(gfp, cod_info, distort, xrpow, bRefine) {\n        var gfc = gfp.internal_flags;\n\n        amp_scalefac_bands(gfp, cod_info, distort, xrpow, bRefine);\n\n        /*\n         * check to make sure we have not amplified too much loop_break returns\n         * 0 if there is an unamplified scalefac scale_bitcount returns 0 if no\n         * scalefactors are too large\n         */\n\n        var status = loop_break(cod_info);\n\n        if (status)\n            return false;\n        /* all bands amplified */\n\n        /*\n         * not all scalefactors have been amplified. so these scalefacs are\n         * possibly valid. encode them:\n         */\n        if (gfc.mode_gr == 2)\n            status = tk.scale_bitcount(cod_info);\n        else\n            status = tk.scale_bitcount_lsf(gfc, cod_info);\n\n        if (!status)\n            return true;\n        /* amplified some bands not exceeding limits */\n\n        /*\n         * some scalefactors are too large. lets try setting scalefac_scale=1\n         */\n        if (gfc.noise_shaping > 1) {\n            Arrays.fill(gfc.pseudohalf, 0);\n            if (0 == cod_info.scalefac_scale) {\n                inc_scalefac_scale(cod_info, xrpow);\n                status = false;\n            } else {\n                if (cod_info.block_type == Encoder.SHORT_TYPE\n                    && gfc.subblock_gain > 0) {\n                    status = (inc_subblock_gain(gfc, cod_info, xrpow) || loop_break(cod_info));\n                }\n            }\n        }\n\n        if (!status) {\n            if (gfc.mode_gr == 2)\n                status = tk.scale_bitcount(cod_info);\n            else\n                status = tk.scale_bitcount_lsf(gfc, cod_info);\n        }\n        return !status;\n    }\n\n    /**\n     * <PRE>\n     *  Function: The outer iteration loop controls the masking conditions\n     *  of all scalefactorbands. It computes the best scalefac and\n     *  global gain. This module calls the inner iteration loop\n     *\n     *  mt 5/99 completely rewritten to allow for bit reservoir control,\n     *  mid/side channels with L/R or mid/side masking thresholds,\n     *  and chooses best quantization instead of last quantization when\n     *  no distortion free quantization can be found.\n     *\n     *  added VBR support mt 5/99\n     *\n     *  some code shuffle rh 9/00\n     * </PRE>\n     *\n     * @param l3_xmin\n     *            allowed distortion\n     * @param xrpow\n     *            coloured magnitudes of spectral\n     * @param targ_bits\n     *            maximum allowed bits\n     */\n    this.outer_loop = function (gfp, cod_info, l3_xmin, xrpow, ch, targ_bits) {\n        var gfc = gfp.internal_flags;\n        var cod_info_w = new GrInfo();\n        var save_xrpow = new_float(576);\n        var distort = new_float(L3Side.SFBMAX);\n        var best_noise_info = new CalcNoiseResult();\n        var better;\n        var prev_noise = new CalcNoiseData();\n        var best_part2_3_length = 9999999;\n        var bEndOfSearch = false;\n        var bRefine = false;\n        var best_ggain_pass1 = 0;\n\n        bin_search_StepSize(gfc, cod_info, targ_bits, ch, xrpow);\n\n        if (0 == gfc.noise_shaping)\n        /* fast mode, no noise shaping, we are ready */\n            return 100;\n        /* default noise_info.over_count */\n\n        /* compute the distortion in this quantization */\n        /* coefficients and thresholds both l/r (or both mid/side) */\n        qupvt.calc_noise(cod_info, l3_xmin, distort, best_noise_info,\n            prev_noise);\n        best_noise_info.bits = cod_info.part2_3_length;\n\n        cod_info_w.assign(cod_info);\n        var age = 0;\n        System.arraycopy(xrpow, 0, save_xrpow, 0, 576);\n\n        while (!bEndOfSearch) {\n            /* BEGIN MAIN LOOP */\n            do {\n                var noise_info = new CalcNoiseResult();\n                var search_limit;\n                var maxggain = 255;\n\n                /*\n                 * When quantization with no distorted bands is found, allow up\n                 * to X new unsuccesful tries in serial. This gives us more\n                 * possibilities for different quant_compare modes. Much more\n                 * than 3 makes not a big difference, it is only slower.\n                 */\n\n                if ((gfc.substep_shaping & 2) != 0) {\n                    search_limit = 20;\n                } else {\n                    search_limit = 3;\n                }\n\n                /*\n                 * Check if the last scalefactor band is distorted. in VBR mode\n                 * we can't get rid of the distortion, so quit now and VBR mode\n                 * will try again with more bits. (makes a 10% speed increase,\n                 * the files I tested were binary identical, 2000/05/20 Robert\n                 * Hegemann) distort[] > 1 means noise > allowed noise\n                 */\n                if (gfc.sfb21_extra) {\n                    if (distort[cod_info_w.sfbmax] > 1.0)\n                        break;\n                    if (cod_info_w.block_type == Encoder.SHORT_TYPE\n                        && (distort[cod_info_w.sfbmax + 1] > 1.0 || distort[cod_info_w.sfbmax + 2] > 1.0))\n                        break;\n                }\n\n                /* try a new scalefactor conbination on cod_info_w */\n                if (!balance_noise(gfp, cod_info_w, distort, xrpow, bRefine))\n                    break;\n                if (cod_info_w.scalefac_scale != 0)\n                    maxggain = 254;\n\n                /*\n                 * inner_loop starts with the initial quantization step computed\n                 * above and slowly increases until the bits < huff_bits. Thus\n                 * it is important not to start with too large of an inital\n                 * quantization step. Too small is ok, but inner_loop will take\n                 * longer\n                 */\n                var huff_bits = targ_bits - cod_info_w.part2_length;\n                if (huff_bits <= 0)\n                    break;\n\n                /*\n                 * increase quantizer stepsize until needed bits are below\n                 * maximum\n                 */\n                while ((cod_info_w.part2_3_length = tk.count_bits(gfc, xrpow,\n                    cod_info_w, prev_noise)) > huff_bits\n                && cod_info_w.global_gain <= maxggain)\n                    cod_info_w.global_gain++;\n\n                if (cod_info_w.global_gain > maxggain)\n                    break;\n\n                if (best_noise_info.over_count == 0) {\n\n                    while ((cod_info_w.part2_3_length = tk.count_bits(gfc,\n                        xrpow, cod_info_w, prev_noise)) > best_part2_3_length\n                    && cod_info_w.global_gain <= maxggain)\n                        cod_info_w.global_gain++;\n\n                    if (cod_info_w.global_gain > maxggain)\n                        break;\n                }\n\n                /* compute the distortion in this quantization */\n                qupvt.calc_noise(cod_info_w, l3_xmin, distort, noise_info,\n                    prev_noise);\n                noise_info.bits = cod_info_w.part2_3_length;\n\n                /*\n                 * check if this quantization is better than our saved\n                 * quantization\n                 */\n                if (cod_info.block_type != Encoder.SHORT_TYPE) {\n                    // NORM, START or STOP type\n                    better = gfp.quant_comp;\n                } else\n                    better = gfp.quant_comp_short;\n\n                better = quant_compare(better, best_noise_info, noise_info,\n                    cod_info_w, distort) ? 1 : 0;\n\n                /* save data so we can restore this quantization later */\n                if (better != 0) {\n                    best_part2_3_length = cod_info.part2_3_length;\n                    best_noise_info = noise_info;\n                    cod_info.assign(cod_info_w);\n                    age = 0;\n                    /* save data so we can restore this quantization later */\n                    /* store for later reuse */\n                    System.arraycopy(xrpow, 0, save_xrpow, 0, 576);\n                } else {\n                    /* early stop? */\n                    if (gfc.full_outer_loop == 0) {\n                        if (++age > search_limit\n                            && best_noise_info.over_count == 0)\n                            break;\n                        if ((gfc.noise_shaping_amp == 3) && bRefine && age > 30)\n                            break;\n                        if ((gfc.noise_shaping_amp == 3)\n                            && bRefine\n                            && (cod_info_w.global_gain - best_ggain_pass1) > 15)\n                            break;\n                    }\n                }\n            } while ((cod_info_w.global_gain + cod_info_w.scalefac_scale) < 255);\n\n            if (gfc.noise_shaping_amp == 3) {\n                if (!bRefine) {\n                    /* refine search */\n                    cod_info_w.assign(cod_info);\n                    System.arraycopy(save_xrpow, 0, xrpow, 0, 576);\n                    age = 0;\n                    best_ggain_pass1 = cod_info_w.global_gain;\n\n                    bRefine = true;\n                } else {\n                    /* search already refined, stop */\n                    bEndOfSearch = true;\n                }\n\n            } else {\n                bEndOfSearch = true;\n            }\n        }\n\n        assert((cod_info.global_gain + cod_info.scalefac_scale) <= 255);\n        /*\n         * finish up\n         */\n        if (gfp.VBR == VbrMode.vbr_rh || gfp.VBR == VbrMode.vbr_mtrh)\n        /* restore for reuse on next try */\n            System.arraycopy(save_xrpow, 0, xrpow, 0, 576);\n        /*\n         * do the 'substep shaping'\n         */\n        else if ((gfc.substep_shaping & 1) != 0)\n            trancate_smallspectrums(gfc, cod_info, l3_xmin, xrpow);\n\n        return best_noise_info.over_count;\n    }\n\n    /**\n     * Robert Hegemann 2000-09-06\n     *\n     * update reservoir status after FINAL quantization/bitrate\n     */\n    this.iteration_finish_one = function (gfc, gr, ch) {\n        var l3_side = gfc.l3_side;\n        var cod_info = l3_side.tt[gr][ch];\n\n        /*\n         * try some better scalefac storage\n         */\n        tk.best_scalefac_store(gfc, gr, ch, l3_side);\n\n        /*\n         * best huffman_divide may save some bits too\n         */\n        if (gfc.use_best_huffman == 1)\n            tk.best_huffman_divide(gfc, cod_info);\n\n        /*\n         * update reservoir status after FINAL quantization/bitrate\n         */\n        rv.ResvAdjust(gfc, cod_info);\n    };\n\n    /**\n     *\n     * 2000-09-04 Robert Hegemann\n     *\n     * @param l3_xmin\n     *            allowed distortion of the scalefactor\n     * @param xrpow\n     *            coloured magnitudes of spectral values\n     */\n    this.VBR_encode_granule = function (gfp, cod_info, l3_xmin, xrpow, ch, min_bits, max_bits) {\n        var gfc = gfp.internal_flags;\n        var bst_cod_info = new GrInfo();\n        var bst_xrpow = new_float(576);\n        var Max_bits = max_bits;\n        var real_bits = max_bits + 1;\n        var this_bits = (max_bits + min_bits) / 2;\n        var dbits, over, found = 0;\n        var sfb21_extra = gfc.sfb21_extra;\n\n        assert(Max_bits <= LameInternalFlags.MAX_BITS_PER_CHANNEL);\n        Arrays.fill(bst_cod_info.l3_enc, 0);\n\n        /*\n         * search within round about 40 bits of optimal\n         */\n        do {\n            assert(this_bits >= min_bits);\n            assert(this_bits <= max_bits);\n            assert(min_bits <= max_bits);\n\n            if (this_bits > Max_bits - 42)\n                gfc.sfb21_extra = false;\n            else\n                gfc.sfb21_extra = sfb21_extra;\n\n            over = outer_loop(gfp, cod_info, l3_xmin, xrpow, ch, this_bits);\n\n            /*\n             * is quantization as good as we are looking for ? in this case: is\n             * no scalefactor band distorted?\n             */\n            if (over <= 0) {\n                found = 1;\n                /*\n                 * now we know it can be done with \"real_bits\" and maybe we can\n                 * skip some iterations\n                 */\n                real_bits = cod_info.part2_3_length;\n\n                /*\n                 * store best quantization so far\n                 */\n                bst_cod_info.assign(cod_info);\n                System.arraycopy(xrpow, 0, bst_xrpow, 0, 576);\n\n                /*\n                 * try with fewer bits\n                 */\n                max_bits = real_bits - 32;\n                dbits = max_bits - min_bits;\n                this_bits = (max_bits + min_bits) / 2;\n            } else {\n                /*\n                 * try with more bits\n                 */\n                min_bits = this_bits + 32;\n                dbits = max_bits - min_bits;\n                this_bits = (max_bits + min_bits) / 2;\n\n                if (found != 0) {\n                    found = 2;\n                    /*\n                     * start again with best quantization so far\n                     */\n                    cod_info.assign(bst_cod_info);\n                    System.arraycopy(bst_xrpow, 0, xrpow, 0, 576);\n                }\n            }\n        } while (dbits > 12);\n\n        gfc.sfb21_extra = sfb21_extra;\n\n        /*\n         * found=0 => nothing found, use last one found=1 => we just found the\n         * best and left the loop found=2 => we restored a good one and have now\n         * l3_enc to restore too\n         */\n        if (found == 2) {\n            System.arraycopy(bst_cod_info.l3_enc, 0, cod_info.l3_enc, 0, 576);\n        }\n        assert(cod_info.part2_3_length <= Max_bits);\n    }\n\n    /**\n     * Robert Hegemann 2000-09-05\n     *\n     * calculates * how many bits are available for analog silent granules * how\n     * many bits to use for the lowest allowed bitrate * how many bits each\n     * bitrate would provide\n     */\n    this.get_framebits = function (gfp, frameBits) {\n        var gfc = gfp.internal_flags;\n\n        /*\n         * always use at least this many bits per granule per channel unless we\n         * detect analog silence, see below\n         */\n        gfc.bitrate_index = gfc.VBR_min_bitrate;\n        var bitsPerFrame = bs.getframebits(gfp);\n\n        /*\n         * bits for analog silence\n         */\n        gfc.bitrate_index = 1;\n        bitsPerFrame = bs.getframebits(gfp);\n\n        for (var i = 1; i <= gfc.VBR_max_bitrate; i++) {\n            gfc.bitrate_index = i;\n            var mb = new MeanBits(bitsPerFrame);\n            frameBits[i] = rv.ResvFrameBegin(gfp, mb);\n            bitsPerFrame = mb.bits;\n        }\n    };\n\n    /* RH: this one needs to be overhauled sometime */\n\n    /**\n     * <PRE>\n     *  2000-09-04 Robert Hegemann\n     *\n     *  * converts LR to MS coding when necessary\n     *  * calculates allowed/adjusted quantization noise amounts\n     *  * detects analog silent frames\n     *\n     *  some remarks:\n     *  - lower masking depending on Quality setting\n     *  - quality control together with adjusted ATH MDCT scaling\n     *    on lower quality setting allocate more noise from\n     *    ATH masking, and on higher quality setting allocate\n     *    less noise from ATH masking.\n     *  - experiments show that going more than 2dB over GPSYCHO's\n     *    limits ends up in very annoying artefacts\n     * </PRE>\n     */\n    this.VBR_old_prepare = function (gfp, pe, ms_ener_ratio, ratio, l3_xmin, frameBits, min_bits,\n                                     max_bits, bands) {\n        var gfc = gfp.internal_flags;\n\n        var masking_lower_db, adjust = 0.0;\n        var analog_silence = 1;\n        var bits = 0;\n\n        gfc.bitrate_index = gfc.VBR_max_bitrate;\n        var avg = rv.ResvFrameBegin(gfp, new MeanBits(0)) / gfc.mode_gr;\n\n        get_framebits(gfp, frameBits);\n\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            var mxb = qupvt.on_pe(gfp, pe, max_bits[gr], avg, gr, 0);\n            if (gfc.mode_ext == Encoder.MPG_MD_MS_LR) {\n                ms_convert(gfc.l3_side, gr);\n                qupvt.reduce_side(max_bits[gr], ms_ener_ratio[gr], avg, mxb);\n            }\n            for (var ch = 0; ch < gfc.channels_out; ++ch) {\n                var cod_info = gfc.l3_side.tt[gr][ch];\n\n                if (cod_info.block_type != Encoder.SHORT_TYPE) {\n                    // NORM, START or STOP type\n                    adjust = 1.28 / (1 + Math\n                            .exp(3.5 - pe[gr][ch] / 300.)) - 0.05;\n                    masking_lower_db = gfc.PSY.mask_adjust - adjust;\n                } else {\n                    adjust = 2.56 / (1 + Math\n                            .exp(3.5 - pe[gr][ch] / 300.)) - 0.14;\n                    masking_lower_db = gfc.PSY.mask_adjust_short - adjust;\n                }\n                gfc.masking_lower = Math.pow(10.0,\n                    masking_lower_db * 0.1);\n\n                init_outer_loop(gfc, cod_info);\n                bands[gr][ch] = qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info,\n                    l3_xmin[gr][ch]);\n                if (bands[gr][ch] != 0)\n                    analog_silence = 0;\n\n                min_bits[gr][ch] = 126;\n\n                bits += max_bits[gr][ch];\n            }\n        }\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                if (bits > frameBits[gfc.VBR_max_bitrate]) {\n                    max_bits[gr][ch] *= frameBits[gfc.VBR_max_bitrate];\n                    max_bits[gr][ch] /= bits;\n                }\n                if (min_bits[gr][ch] > max_bits[gr][ch])\n                    min_bits[gr][ch] = max_bits[gr][ch];\n\n            }\n            /* for ch */\n        }\n        /* for gr */\n\n        return analog_silence;\n    };\n\n    this.bitpressure_strategy = function (gfc, l3_xmin, min_bits, max_bits) {\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                var gi = gfc.l3_side.tt[gr][ch];\n                var pxmin = l3_xmin[gr][ch];\n                var pxminPos = 0;\n                for (var sfb = 0; sfb < gi.psy_lmax; sfb++)\n                    pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                        / Encoder.SBMAX_l / Encoder.SBMAX_l;\n\n                if (gi.block_type == Encoder.SHORT_TYPE) {\n                    for (var sfb = gi.sfb_smin; sfb < Encoder.SBMAX_s; sfb++) {\n                        pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                            / Encoder.SBMAX_s / Encoder.SBMAX_s;\n                        pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                            / Encoder.SBMAX_s / Encoder.SBMAX_s;\n                        pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                            / Encoder.SBMAX_s / Encoder.SBMAX_s;\n                    }\n                }\n                max_bits[gr][ch] = 0 | Math.max(min_bits[gr][ch],\n                        0.9 * max_bits[gr][ch]);\n            }\n        }\n    };\n\n    this.VBR_new_prepare = function (gfp, pe, ratio, l3_xmin, frameBits, max_bits) {\n        var gfc = gfp.internal_flags;\n\n        var analog_silence = 1;\n        var avg = 0, bits = 0;\n        var maximum_framebits;\n\n        if (!gfp.free_format) {\n            gfc.bitrate_index = gfc.VBR_max_bitrate;\n\n            var mb = new MeanBits(avg);\n            rv.ResvFrameBegin(gfp, mb);\n            avg = mb.bits;\n\n            get_framebits(gfp, frameBits);\n            maximum_framebits = frameBits[gfc.VBR_max_bitrate];\n        } else {\n            gfc.bitrate_index = 0;\n            var mb = new MeanBits(avg);\n            maximum_framebits = rv.ResvFrameBegin(gfp, mb);\n            avg = mb.bits;\n            frameBits[0] = maximum_framebits;\n        }\n\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            qupvt.on_pe(gfp, pe, max_bits[gr], avg, gr, 0);\n            if (gfc.mode_ext == Encoder.MPG_MD_MS_LR) {\n                ms_convert(gfc.l3_side, gr);\n            }\n            for (var ch = 0; ch < gfc.channels_out; ++ch) {\n                var cod_info = gfc.l3_side.tt[gr][ch];\n\n                gfc.masking_lower = Math.pow(10.0,\n                    gfc.PSY.mask_adjust * 0.1);\n\n                init_outer_loop(gfc, cod_info);\n                if (0 != qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info,\n                        l3_xmin[gr][ch]))\n                    analog_silence = 0;\n\n                bits += max_bits[gr][ch];\n            }\n        }\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                if (bits > maximum_framebits) {\n                    max_bits[gr][ch] *= maximum_framebits;\n                    max_bits[gr][ch] /= bits;\n                }\n\n            }\n            /* for ch */\n        }\n        /* for gr */\n\n        return analog_silence;\n    };\n\n    /**\n     * calculates target bits for ABR encoding\n     *\n     * mt 2000/05/31\n     */\n    this.calc_target_bits = function (gfp, pe, ms_ener_ratio, targ_bits, analog_silence_bits, max_frame_bits) {\n        var gfc = gfp.internal_flags;\n        var l3_side = gfc.l3_side;\n        var res_factor;\n        var gr, ch, totbits, mean_bits = 0;\n\n        gfc.bitrate_index = gfc.VBR_max_bitrate;\n        var mb = new MeanBits(mean_bits);\n        max_frame_bits[0] = rv.ResvFrameBegin(gfp, mb);\n        mean_bits = mb.bits;\n\n        gfc.bitrate_index = 1;\n        mean_bits = bs.getframebits(gfp) - gfc.sideinfo_len * 8;\n        analog_silence_bits[0] = mean_bits / (gfc.mode_gr * gfc.channels_out);\n\n        mean_bits = gfp.VBR_mean_bitrate_kbps * gfp.framesize * 1000;\n        if ((gfc.substep_shaping & 1) != 0)\n            mean_bits *= 1.09;\n        mean_bits /= gfp.out_samplerate;\n        mean_bits -= gfc.sideinfo_len * 8;\n        mean_bits /= (gfc.mode_gr * gfc.channels_out);\n\n        /**\n         * <PRE>\n         *           res_factor is the percentage of the target bitrate that should\n         *           be used on average.  the remaining bits are added to the\n         *           bitreservoir and used for difficult to encode frames.\n         *\n         *           Since we are tracking the average bitrate, we should adjust\n         *           res_factor \"on the fly\", increasing it if the average bitrate\n         *           is greater than the requested bitrate, and decreasing it\n         *           otherwise.  Reasonable ranges are from .9 to 1.0\n         *\n         *           Until we get the above suggestion working, we use the following\n         *           tuning:\n         *           compression ratio    res_factor\n         *           5.5  (256kbps)         1.0      no need for bitreservoir\n         *           11   (128kbps)         .93      7% held for reservoir\n         *\n         *           with linear interpolation for other values.\n         * </PRE>\n         */\n        res_factor = .93 + .07 * (11.0 - gfp.compression_ratio)\n            / (11.0 - 5.5);\n        if (res_factor < .90)\n            res_factor = .90;\n        if (res_factor > 1.00)\n            res_factor = 1.00;\n\n        for (gr = 0; gr < gfc.mode_gr; gr++) {\n            var sum = 0;\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                targ_bits[gr][ch] = (int)(res_factor * mean_bits);\n\n                if (pe[gr][ch] > 700) {\n                    var add_bits = (int)((pe[gr][ch] - 700) / 1.4);\n\n                    var cod_info = l3_side.tt[gr][ch];\n                    targ_bits[gr][ch] = (int)(res_factor * mean_bits);\n\n                    /* short blocks use a little extra, no matter what the pe */\n                    if (cod_info.block_type == Encoder.SHORT_TYPE) {\n                        if (add_bits < mean_bits / 2)\n                            add_bits = mean_bits / 2;\n                    }\n                    /* at most increase bits by 1.5*average */\n                    if (add_bits > mean_bits * 3 / 2)\n                        add_bits = mean_bits * 3 / 2;\n                    else if (add_bits < 0)\n                        add_bits = 0;\n\n                    targ_bits[gr][ch] += add_bits;\n                }\n                if (targ_bits[gr][ch] > LameInternalFlags.MAX_BITS_PER_CHANNEL) {\n                    targ_bits[gr][ch] = LameInternalFlags.MAX_BITS_PER_CHANNEL;\n                }\n                sum += targ_bits[gr][ch];\n            }\n            /* for ch */\n            if (sum > LameInternalFlags.MAX_BITS_PER_GRANULE) {\n                for (ch = 0; ch < gfc.channels_out; ++ch) {\n                    targ_bits[gr][ch] *= LameInternalFlags.MAX_BITS_PER_GRANULE;\n                    targ_bits[gr][ch] /= sum;\n                }\n            }\n        }\n        /* for gr */\n\n        if (gfc.mode_ext == Encoder.MPG_MD_MS_LR)\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                qupvt.reduce_side(targ_bits[gr], ms_ener_ratio[gr], mean_bits\n                    * gfc.channels_out,\n                    LameInternalFlags.MAX_BITS_PER_GRANULE);\n            }\n\n        /*\n         * sum target bits\n         */\n        totbits = 0;\n        for (gr = 0; gr < gfc.mode_gr; gr++) {\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                if (targ_bits[gr][ch] > LameInternalFlags.MAX_BITS_PER_CHANNEL)\n                    targ_bits[gr][ch] = LameInternalFlags.MAX_BITS_PER_CHANNEL;\n                totbits += targ_bits[gr][ch];\n            }\n        }\n\n        /*\n         * repartion target bits if needed\n         */\n        if (totbits > max_frame_bits[0]) {\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    targ_bits[gr][ch] *= max_frame_bits[0];\n                    targ_bits[gr][ch] /= totbits;\n                }\n            }\n        }\n    }\n\n}\n\nmodule.exports = Quantize;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/lamejs/src/js/Quantize.js?");

/***/ }),

/***/ "../node_modules/lamejs/src/js/QuantizePVT.js":
/*!****************************************************!*\
  !*** ../node_modules/lamejs/src/js/QuantizePVT.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n *      quantize_pvt source file\n *\n *      Copyright (c) 1999-2002 Takehiro Tominaga\n *      Copyright (c) 2000-2002 Robert Hegemann\n *      Copyright (c) 2001 Naoki Shibata\n *      Copyright (c) 2002-2005 Gabriel Bouvigne\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: QuantizePVT.java,v 1.24 2011/05/24 20:48:06 kenchis Exp $ */\nvar ScaleFac = __webpack_require__(/*! ./ScaleFac.js */ \"../node_modules/lamejs/src/js/ScaleFac.js\");\nvar common = __webpack_require__(/*! ./common.js */ \"../node_modules/lamejs/src/js/common.js\");\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar Encoder = __webpack_require__(/*! ./Encoder.js */ \"../node_modules/lamejs/src/js/Encoder.js\");\nvar MeanBits = __webpack_require__(/*! ./MeanBits.js */ \"../node_modules/lamejs/src/js/MeanBits.js\");\nvar LameInternalFlags = __webpack_require__(/*! ./LameInternalFlags.js */ \"../node_modules/lamejs/src/js/LameInternalFlags.js\");\n\nQuantizePVT.Q_MAX = (256 + 1);\nQuantizePVT.Q_MAX2 = 116;\nQuantizePVT.LARGE_BITS = 100000;\nQuantizePVT.IXMAX_VAL = 8206;\n\nfunction QuantizePVT() {\n\n    var tak = null;\n    var rv = null;\n    var psy = null;\n\n    this.setModules = function (_tk, _rv, _psy) {\n        tak = _tk;\n        rv = _rv;\n        psy = _psy;\n    };\n\n    function POW20(x) {\n        assert(0 <= (x + QuantizePVT.Q_MAX2) && x < QuantizePVT.Q_MAX);\n        return pow20[x + QuantizePVT.Q_MAX2];\n    }\n\n    this.IPOW20 = function (x) {\n        assert(0 <= x && x < QuantizePVT.Q_MAX);\n        return ipow20[x];\n    }\n\n    /**\n     * smallest such that 1.0+DBL_EPSILON != 1.0\n     */\n    var DBL_EPSILON = 2.2204460492503131e-016;\n\n    /**\n     * ix always <= 8191+15. see count_bits()\n     */\n    var IXMAX_VAL = QuantizePVT.IXMAX_VAL;\n\n    var PRECALC_SIZE = (IXMAX_VAL + 2);\n\n    var Q_MAX = QuantizePVT.Q_MAX;\n\n\n    /**\n     * <CODE>\n     * minimum possible number of\n     * -cod_info.global_gain + ((scalefac[] + (cod_info.preflag ? pretab[sfb] : 0))\n     * << (cod_info.scalefac_scale + 1)) + cod_info.subblock_gain[cod_info.window[sfb]] * 8;\n     *\n     * for long block, 0+((15+3)<<2) = 18*4 = 72\n     * for short block, 0+(15<<2)+7*8 = 15*4+56 = 116\n     * </CODE>\n     */\n    var Q_MAX2 = QuantizePVT.Q_MAX2;\n\n    var LARGE_BITS = QuantizePVT.LARGE_BITS;\n\n\n    /**\n     * Assuming dynamic range=96dB, this value should be 92\n     */\n    var NSATHSCALE = 100;\n\n    /**\n     * The following table is used to implement the scalefactor partitioning for\n     * MPEG2 as described in section 2.4.3.2 of the IS. The indexing corresponds\n     * to the way the tables are presented in the IS:\n     *\n     * [table_number][row_in_table][column of nr_of_sfb]\n     */\n    this.nr_of_sfb_block = [\n        [[6, 5, 5, 5], [9, 9, 9, 9], [6, 9, 9, 9]],\n        [[6, 5, 7, 3], [9, 9, 12, 6], [6, 9, 12, 6]],\n        [[11, 10, 0, 0], [18, 18, 0, 0], [15, 18, 0, 0]],\n        [[7, 7, 7, 0], [12, 12, 12, 0], [6, 15, 12, 0]],\n        [[6, 6, 6, 3], [12, 9, 9, 6], [6, 12, 9, 6]],\n        [[8, 8, 5, 0], [15, 12, 9, 0], [6, 18, 9, 0]]];\n\n    /**\n     * Table B.6: layer3 preemphasis\n     */\n    var pretab = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,\n        2, 2, 3, 3, 3, 2, 0];\n    this.pretab = pretab;\n\n    /**\n     * Here are MPEG1 Table B.8 and MPEG2 Table B.1 -- Layer III scalefactor\n     * bands. <BR>\n     * Index into this using a method such as:<BR>\n     * idx = fr_ps.header.sampling_frequency + (fr_ps.header.version * 3)\n     */\n    this.sfBandIndex = [\n        // Table B.2.b: 22.05 kHz\n        new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0, 4, 8, 12, 18, 24, 32, 42, 56, 74, 100, 132, 174, 192]\n            , [0, 0, 0, 0, 0, 0, 0] //  sfb21 pseudo sub bands\n            , [0, 0, 0, 0, 0, 0, 0] //  sfb12 pseudo sub bands\n        ),\n        /* Table B.2.c: 24 kHz */ /* docs: 332. mpg123(broken): 330 */\n        new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 114, 136, 162, 194, 232, 278, 332, 394, 464,\n                540, 576],\n            [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 136, 180, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.2.a: 16 kHz */\n        new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 134, 174, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.8.b: 44.1 kHz */\n        new ScaleFac([0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 52, 62, 74, 90, 110, 134, 162, 196, 238, 288, 342, 418,\n                576],\n            [0, 4, 8, 12, 16, 22, 30, 40, 52, 66, 84, 106, 136, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.8.c: 48 kHz */\n        new ScaleFac([0, 4, 8, 12, 16, 20, 24, 30, 36, 42, 50, 60, 72, 88, 106, 128, 156, 190, 230, 276, 330, 384,\n                576],\n            [0, 4, 8, 12, 16, 22, 28, 38, 50, 64, 80, 100, 126, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.8.a: 32 kHz */\n        new ScaleFac([0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 54, 66, 82, 102, 126, 156, 194, 240, 296, 364, 448, 550,\n                576],\n            [0, 4, 8, 12, 16, 22, 30, 42, 58, 78, 104, 138, 180, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* MPEG-2.5 11.025 kHz */\n        new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0 / 3, 12 / 3, 24 / 3, 36 / 3, 54 / 3, 78 / 3, 108 / 3, 144 / 3, 186 / 3, 240 / 3, 312 / 3,\n                402 / 3, 522 / 3, 576 / 3]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* MPEG-2.5 12 kHz */\n        new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0 / 3, 12 / 3, 24 / 3, 36 / 3, 54 / 3, 78 / 3, 108 / 3, 144 / 3, 186 / 3, 240 / 3, 312 / 3,\n                402 / 3, 522 / 3, 576 / 3]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* MPEG-2.5 8 kHz */\n        new ScaleFac([0, 12, 24, 36, 48, 60, 72, 88, 108, 132, 160, 192, 232, 280, 336, 400, 476, 566, 568, 570,\n                572, 574, 576],\n            [0 / 3, 24 / 3, 48 / 3, 72 / 3, 108 / 3, 156 / 3, 216 / 3, 288 / 3, 372 / 3, 480 / 3, 486 / 3,\n                492 / 3, 498 / 3, 576 / 3]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        )\n    ];\n\n    var pow20 = new_float(Q_MAX + Q_MAX2 + 1);\n    var ipow20 = new_float(Q_MAX);\n    var pow43 = new_float(PRECALC_SIZE);\n\n    var adj43 = new_float(PRECALC_SIZE);\n    this.adj43 = adj43;\n\n    /**\n     * <PRE>\n     * compute the ATH for each scalefactor band cd range: 0..96db\n     *\n     * Input: 3.3kHz signal 32767 amplitude (3.3kHz is where ATH is smallest =\n     * -5db) longblocks: sfb=12 en0/bw=-11db max_en0 = 1.3db shortblocks: sfb=5\n     * -9db 0db\n     *\n     * Input: 1 1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 (repeated) longblocks: amp=1\n     * sfb=12 en0/bw=-103 db max_en0 = -92db amp=32767 sfb=12 -12 db -1.4db\n     *\n     * Input: 1 1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 (repeated) shortblocks: amp=1\n     * sfb=5 en0/bw= -99 -86 amp=32767 sfb=5 -9 db 4db\n     *\n     *\n     * MAX energy of largest wave at 3.3kHz = 1db AVE energy of largest wave at\n     * 3.3kHz = -11db Let's take AVE: -11db = maximum signal in sfb=12. Dynamic\n     * range of CD: 96db. Therefor energy of smallest audible wave in sfb=12 =\n     * -11 - 96 = -107db = ATH at 3.3kHz.\n     *\n     * ATH formula for this wave: -5db. To adjust to LAME scaling, we need ATH =\n     * ATH_formula - 103 (db) ATH = ATH * 2.5e-10 (ener)\n     * </PRE>\n     */\n    function ATHmdct(gfp, f) {\n        var ath = psy.ATHformula(f, gfp);\n\n        ath -= NSATHSCALE;\n\n        /* modify the MDCT scaling for the ATH and convert to energy */\n        ath = Math.pow(10.0, ath / 10.0 + gfp.ATHlower);\n        return ath;\n    }\n\n    function compute_ath(gfp) {\n        var ATH_l = gfp.internal_flags.ATH.l;\n        var ATH_psfb21 = gfp.internal_flags.ATH.psfb21;\n        var ATH_s = gfp.internal_flags.ATH.s;\n        var ATH_psfb12 = gfp.internal_flags.ATH.psfb12;\n        var gfc = gfp.internal_flags;\n        var samp_freq = gfp.out_samplerate;\n\n        for (var sfb = 0; sfb < Encoder.SBMAX_l; sfb++) {\n            var start = gfc.scalefac_band.l[sfb];\n            var end = gfc.scalefac_band.l[sfb + 1];\n            ATH_l[sfb] = Float.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 576);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_l[sfb] = Math.min(ATH_l[sfb], ATH_f);\n            }\n        }\n\n        for (var sfb = 0; sfb < Encoder.PSFB21; sfb++) {\n            var start = gfc.scalefac_band.psfb21[sfb];\n            var end = gfc.scalefac_band.psfb21[sfb + 1];\n            ATH_psfb21[sfb] = Float.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 576);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_psfb21[sfb] = Math.min(ATH_psfb21[sfb], ATH_f);\n            }\n        }\n\n        for (var sfb = 0; sfb < Encoder.SBMAX_s; sfb++) {\n            var start = gfc.scalefac_band.s[sfb];\n            var end = gfc.scalefac_band.s[sfb + 1];\n            ATH_s[sfb] = Float.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 192);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_s[sfb] = Math.min(ATH_s[sfb], ATH_f);\n            }\n            ATH_s[sfb] *= (gfc.scalefac_band.s[sfb + 1] - gfc.scalefac_band.s[sfb]);\n        }\n\n        for (var sfb = 0; sfb < Encoder.PSFB12; sfb++) {\n            var start = gfc.scalefac_band.psfb12[sfb];\n            var end = gfc.scalefac_band.psfb12[sfb + 1];\n            ATH_psfb12[sfb] = Float.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 192);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_psfb12[sfb] = Math.min(ATH_psfb12[sfb], ATH_f);\n            }\n            /* not sure about the following */\n            ATH_psfb12[sfb] *= (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12]);\n        }\n\n        /*\n         * no-ATH mode: reduce ATH to -200 dB\n         */\n        if (gfp.noATH) {\n            for (var sfb = 0; sfb < Encoder.SBMAX_l; sfb++) {\n                ATH_l[sfb] = 1E-20;\n            }\n            for (var sfb = 0; sfb < Encoder.PSFB21; sfb++) {\n                ATH_psfb21[sfb] = 1E-20;\n            }\n            for (var sfb = 0; sfb < Encoder.SBMAX_s; sfb++) {\n                ATH_s[sfb] = 1E-20;\n            }\n            for (var sfb = 0; sfb < Encoder.PSFB12; sfb++) {\n                ATH_psfb12[sfb] = 1E-20;\n            }\n        }\n\n        /*\n         * work in progress, don't rely on it too much\n         */\n        gfc.ATH.floor = 10. * Math.log10(ATHmdct(gfp, -1.));\n    }\n\n    /**\n     * initialization for iteration_loop\n     */\n    this.iteration_init = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var l3_side = gfc.l3_side;\n        var i;\n\n        if (gfc.iteration_init_init == 0) {\n            gfc.iteration_init_init = 1;\n\n            l3_side.main_data_begin = 0;\n            compute_ath(gfp);\n\n            pow43[0] = 0.0;\n            for (i = 1; i < PRECALC_SIZE; i++)\n                pow43[i] = Math.pow(i, 4.0 / 3.0);\n\n            for (i = 0; i < PRECALC_SIZE - 1; i++)\n                adj43[i] = ((i + 1) - Math.pow(\n                    0.5 * (pow43[i] + pow43[i + 1]), 0.75));\n            adj43[i] = 0.5;\n\n            for (i = 0; i < Q_MAX; i++)\n                ipow20[i] = Math.pow(2.0, (i - 210) * -0.1875);\n            for (i = 0; i <= Q_MAX + Q_MAX2; i++)\n                pow20[i] = Math.pow(2.0, (i - 210 - Q_MAX2) * 0.25);\n\n            tak.huffman_init(gfc);\n\n            {\n                var bass, alto, treble, sfb21;\n\n                i = (gfp.exp_nspsytune >> 2) & 63;\n                if (i >= 32)\n                    i -= 64;\n                bass = Math.pow(10, i / 4.0 / 10.0);\n\n                i = (gfp.exp_nspsytune >> 8) & 63;\n                if (i >= 32)\n                    i -= 64;\n                alto = Math.pow(10, i / 4.0 / 10.0);\n\n                i = (gfp.exp_nspsytune >> 14) & 63;\n                if (i >= 32)\n                    i -= 64;\n                treble = Math.pow(10, i / 4.0 / 10.0);\n\n                /*\n                 * to be compatible with Naoki's original code, the next 6 bits\n                 * define only the amount of changing treble for sfb21\n                 */\n                i = (gfp.exp_nspsytune >> 20) & 63;\n                if (i >= 32)\n                    i -= 64;\n                sfb21 = treble * Math.pow(10, i / 4.0 / 10.0);\n                for (i = 0; i < Encoder.SBMAX_l; i++) {\n                    var f;\n                    if (i <= 6)\n                        f = bass;\n                    else if (i <= 13)\n                        f = alto;\n                    else if (i <= 20)\n                        f = treble;\n                    else\n                        f = sfb21;\n\n                    gfc.nsPsy.longfact[i] = f;\n                }\n                for (i = 0; i < Encoder.SBMAX_s; i++) {\n                    var f;\n                    if (i <= 5)\n                        f = bass;\n                    else if (i <= 10)\n                        f = alto;\n                    else if (i <= 11)\n                        f = treble;\n                    else\n                        f = sfb21;\n\n                    gfc.nsPsy.shortfact[i] = f;\n                }\n            }\n        }\n    }\n\n    /**\n     * allocate bits among 2 channels based on PE<BR>\n     * mt 6/99<BR>\n     * bugfixes rh 8/01: often allocated more than the allowed 4095 bits\n     */\n    this.on_pe = function (gfp, pe,\n                           targ_bits, mean_bits, gr, cbr) {\n        var gfc = gfp.internal_flags;\n        var tbits = 0, bits;\n        var add_bits = new_int(2);\n        var ch;\n\n        /* allocate targ_bits for granule */\n        var mb = new MeanBits(tbits);\n        var extra_bits = rv.ResvMaxBits(gfp, mean_bits, mb, cbr);\n        tbits = mb.bits;\n        /* maximum allowed bits for this granule */\n        var max_bits = tbits + extra_bits;\n        if (max_bits > LameInternalFlags.MAX_BITS_PER_GRANULE) {\n            // hard limit per granule\n            max_bits = LameInternalFlags.MAX_BITS_PER_GRANULE;\n        }\n        for (bits = 0, ch = 0; ch < gfc.channels_out; ++ch) {\n            /******************************************************************\n             * allocate bits for each channel\n             ******************************************************************/\n            targ_bits[ch] = Math.min(LameInternalFlags.MAX_BITS_PER_CHANNEL,\n                tbits / gfc.channels_out);\n\n            add_bits[ch] = 0 | (targ_bits[ch] * pe[gr][ch] / 700.0 - targ_bits[ch]);\n\n            /* at most increase bits by 1.5*average */\n            if (add_bits[ch] > mean_bits * 3 / 4)\n                add_bits[ch] = mean_bits * 3 / 4;\n            if (add_bits[ch] < 0)\n                add_bits[ch] = 0;\n\n            if (add_bits[ch] + targ_bits[ch] > LameInternalFlags.MAX_BITS_PER_CHANNEL)\n                add_bits[ch] = Math.max(0,\n                    LameInternalFlags.MAX_BITS_PER_CHANNEL - targ_bits[ch]);\n\n            bits += add_bits[ch];\n        }\n        if (bits > extra_bits) {\n            for (ch = 0; ch < gfc.channels_out; ++ch) {\n                add_bits[ch] = extra_bits * add_bits[ch] / bits;\n            }\n        }\n\n        for (ch = 0; ch < gfc.channels_out; ++ch) {\n            targ_bits[ch] += add_bits[ch];\n            extra_bits -= add_bits[ch];\n        }\n\n        for (bits = 0, ch = 0; ch < gfc.channels_out; ++ch) {\n            bits += targ_bits[ch];\n        }\n        if (bits > LameInternalFlags.MAX_BITS_PER_GRANULE) {\n            var sum = 0;\n            for (ch = 0; ch < gfc.channels_out; ++ch) {\n                targ_bits[ch] *= LameInternalFlags.MAX_BITS_PER_GRANULE;\n                targ_bits[ch] /= bits;\n                sum += targ_bits[ch];\n            }\n            assert(sum <= LameInternalFlags.MAX_BITS_PER_GRANULE);\n        }\n\n        return max_bits;\n    }\n\n    this.reduce_side = function (targ_bits, ms_ener_ratio, mean_bits, max_bits) {\n        assert(max_bits <= LameInternalFlags.MAX_BITS_PER_GRANULE);\n        assert(targ_bits[0] + targ_bits[1] <= LameInternalFlags.MAX_BITS_PER_GRANULE);\n\n        /*\n         * ms_ener_ratio = 0: allocate 66/33 mid/side fac=.33 ms_ener_ratio =.5:\n         * allocate 50/50 mid/side fac= 0\n         */\n        /* 75/25 split is fac=.5 */\n        var fac = .33 * (.5 - ms_ener_ratio) / .5;\n        if (fac < 0)\n            fac = 0;\n        if (fac > .5)\n            fac = .5;\n\n        /* number of bits to move from side channel to mid channel */\n        /* move_bits = fac*targ_bits[1]; */\n        var move_bits = 0 | (fac * .5 * (targ_bits[0] + targ_bits[1]));\n\n        if (move_bits > LameInternalFlags.MAX_BITS_PER_CHANNEL - targ_bits[0]) {\n            move_bits = LameInternalFlags.MAX_BITS_PER_CHANNEL - targ_bits[0];\n        }\n        if (move_bits < 0)\n            move_bits = 0;\n\n        if (targ_bits[1] >= 125) {\n            /* dont reduce side channel below 125 bits */\n            if (targ_bits[1] - move_bits > 125) {\n\n                /* if mid channel already has 2x more than average, dont bother */\n                /* mean_bits = bits per granule (for both channels) */\n                if (targ_bits[0] < mean_bits)\n                    targ_bits[0] += move_bits;\n                targ_bits[1] -= move_bits;\n            } else {\n                targ_bits[0] += targ_bits[1] - 125;\n                targ_bits[1] = 125;\n            }\n        }\n\n        move_bits = targ_bits[0] + targ_bits[1];\n        if (move_bits > max_bits) {\n            targ_bits[0] = (max_bits * targ_bits[0]) / move_bits;\n            targ_bits[1] = (max_bits * targ_bits[1]) / move_bits;\n        }\n        assert(targ_bits[0] <= LameInternalFlags.MAX_BITS_PER_CHANNEL);\n        assert(targ_bits[1] <= LameInternalFlags.MAX_BITS_PER_CHANNEL);\n        assert(targ_bits[0] + targ_bits[1] <= LameInternalFlags.MAX_BITS_PER_GRANULE);\n    };\n\n    /**\n     *  Robert Hegemann 2001-04-27:\n     *  this adjusts the ATH, keeping the original noise floor\n     *  affects the higher frequencies more than the lower ones\n     */\n    this.athAdjust = function (a, x, athFloor) {\n        /*\n         * work in progress\n         */\n        var o = 90.30873362;\n        var p = 94.82444863;\n        var u = Util.FAST_LOG10_X(x, 10.0);\n        var v = a * a;\n        var w = 0.0;\n        u -= athFloor;\n        /* undo scaling */\n        if (v > 1E-20)\n            w = 1. + Util.FAST_LOG10_X(v, 10.0 / o);\n        if (w < 0)\n            w = 0.;\n        u *= w;\n        u += athFloor + o - p;\n        /* redo scaling */\n\n        return Math.pow(10., 0.1 * u);\n    };\n\n    /**\n     * Calculate the allowed distortion for each scalefactor band, as determined\n     * by the psychoacoustic model. xmin(sb) = ratio(sb) * en(sb) / bw(sb)\n     *\n     * returns number of sfb's with energy > ATH\n     */\n    this.calc_xmin = function (gfp, ratio, cod_info, pxmin) {\n        var pxminPos = 0;\n        var gfc = gfp.internal_flags;\n        var gsfb, j = 0, ath_over = 0;\n        var ATH = gfc.ATH;\n        var xr = cod_info.xr;\n        var enable_athaa_fix = (gfp.VBR == VbrMode.vbr_mtrh) ? 1 : 0;\n        var masking_lower = gfc.masking_lower;\n\n        if (gfp.VBR == VbrMode.vbr_mtrh || gfp.VBR == VbrMode.vbr_mt) {\n            /* was already done in PSY-Model */\n            masking_lower = 1.0;\n        }\n\n        for (gsfb = 0; gsfb < cod_info.psy_lmax; gsfb++) {\n            var en0, xmin;\n            var rh1, rh2;\n            var width, l;\n\n            if (gfp.VBR == VbrMode.vbr_rh || gfp.VBR == VbrMode.vbr_mtrh)\n                xmin = athAdjust(ATH.adjust, ATH.l[gsfb], ATH.floor);\n            else\n                xmin = ATH.adjust * ATH.l[gsfb];\n\n            width = cod_info.width[gsfb];\n            rh1 = xmin / width;\n            rh2 = DBL_EPSILON;\n            l = width >> 1;\n            en0 = 0.0;\n            do {\n                var xa, xb;\n                xa = xr[j] * xr[j];\n                en0 += xa;\n                rh2 += (xa < rh1) ? xa : rh1;\n                j++;\n                xb = xr[j] * xr[j];\n                en0 += xb;\n                rh2 += (xb < rh1) ? xb : rh1;\n                j++;\n            } while (--l > 0);\n            if (en0 > xmin)\n                ath_over++;\n\n            if (gsfb == Encoder.SBPSY_l) {\n                var x = xmin * gfc.nsPsy.longfact[gsfb];\n                if (rh2 < x) {\n                    rh2 = x;\n                }\n            }\n            if (enable_athaa_fix != 0) {\n                xmin = rh2;\n            }\n            if (!gfp.ATHonly) {\n                var e = ratio.en.l[gsfb];\n                if (e > 0.0) {\n                    var x;\n                    x = en0 * ratio.thm.l[gsfb] * masking_lower / e;\n                    if (enable_athaa_fix != 0)\n                        x *= gfc.nsPsy.longfact[gsfb];\n                    if (xmin < x)\n                        xmin = x;\n                }\n            }\n            if (enable_athaa_fix != 0)\n                pxmin[pxminPos++] = xmin;\n            else\n                pxmin[pxminPos++] = xmin * gfc.nsPsy.longfact[gsfb];\n        }\n        /* end of long block loop */\n\n        /* use this function to determine the highest non-zero coeff */\n        var max_nonzero = 575;\n        if (cod_info.block_type != Encoder.SHORT_TYPE) {\n            // NORM, START or STOP type, but not SHORT\n            var k = 576;\n            while (k-- != 0 && BitStream.EQ(xr[k], 0)) {\n                max_nonzero = k;\n            }\n        }\n        cod_info.max_nonzero_coeff = max_nonzero;\n\n        for (var sfb = cod_info.sfb_smin; gsfb < cod_info.psymax; sfb++, gsfb += 3) {\n            var width, b;\n            var tmpATH;\n            if (gfp.VBR == VbrMode.vbr_rh || gfp.VBR == VbrMode.vbr_mtrh)\n                tmpATH = athAdjust(ATH.adjust, ATH.s[sfb], ATH.floor);\n            else\n                tmpATH = ATH.adjust * ATH.s[sfb];\n\n            width = cod_info.width[gsfb];\n            for (b = 0; b < 3; b++) {\n                var en0 = 0.0, xmin;\n                var rh1, rh2;\n                var l = width >> 1;\n\n                rh1 = tmpATH / width;\n                rh2 = DBL_EPSILON;\n                do {\n                    var xa, xb;\n                    xa = xr[j] * xr[j];\n                    en0 += xa;\n                    rh2 += (xa < rh1) ? xa : rh1;\n                    j++;\n                    xb = xr[j] * xr[j];\n                    en0 += xb;\n                    rh2 += (xb < rh1) ? xb : rh1;\n                    j++;\n                } while (--l > 0);\n                if (en0 > tmpATH)\n                    ath_over++;\n                if (sfb == Encoder.SBPSY_s) {\n                    var x = tmpATH * gfc.nsPsy.shortfact[sfb];\n                    if (rh2 < x) {\n                        rh2 = x;\n                    }\n                }\n                if (enable_athaa_fix != 0)\n                    xmin = rh2;\n                else\n                    xmin = tmpATH;\n\n                if (!gfp.ATHonly && !gfp.ATHshort) {\n                    var e = ratio.en.s[sfb][b];\n                    if (e > 0.0) {\n                        var x;\n                        x = en0 * ratio.thm.s[sfb][b] * masking_lower / e;\n                        if (enable_athaa_fix != 0)\n                            x *= gfc.nsPsy.shortfact[sfb];\n                        if (xmin < x)\n                            xmin = x;\n                    }\n                }\n                if (enable_athaa_fix != 0)\n                    pxmin[pxminPos++] = xmin;\n                else\n                    pxmin[pxminPos++] = xmin * gfc.nsPsy.shortfact[sfb];\n            }\n            /* b */\n            if (gfp.useTemporal) {\n                if (pxmin[pxminPos - 3] > pxmin[pxminPos - 3 + 1])\n                    pxmin[pxminPos - 3 + 1] += (pxmin[pxminPos - 3] - pxmin[pxminPos - 3 + 1])\n                        * gfc.decay;\n                if (pxmin[pxminPos - 3 + 1] > pxmin[pxminPos - 3 + 2])\n                    pxmin[pxminPos - 3 + 2] += (pxmin[pxminPos - 3 + 1] - pxmin[pxminPos - 3 + 2])\n                        * gfc.decay;\n            }\n        }\n        /* end of short block sfb loop */\n\n        return ath_over;\n    };\n\n    function StartLine(j) {\n        this.s = j;\n    }\n\n    this.calc_noise_core = function (cod_info, startline, l, step) {\n        var noise = 0;\n        var j = startline.s;\n        var ix = cod_info.l3_enc;\n\n        if (j > cod_info.count1) {\n            while ((l--) != 0) {\n                var temp;\n                temp = cod_info.xr[j];\n                j++;\n                noise += temp * temp;\n                temp = cod_info.xr[j];\n                j++;\n                noise += temp * temp;\n            }\n        } else if (j > cod_info.big_values) {\n            var ix01 = new_float(2);\n            ix01[0] = 0;\n            ix01[1] = step;\n            while ((l--) != 0) {\n                var temp;\n                temp = Math.abs(cod_info.xr[j]) - ix01[ix[j]];\n                j++;\n                noise += temp * temp;\n                temp = Math.abs(cod_info.xr[j]) - ix01[ix[j]];\n                j++;\n                noise += temp * temp;\n            }\n        } else {\n            while ((l--) != 0) {\n                var temp;\n                temp = Math.abs(cod_info.xr[j]) - pow43[ix[j]] * step;\n                j++;\n                noise += temp * temp;\n                temp = Math.abs(cod_info.xr[j]) - pow43[ix[j]] * step;\n                j++;\n                noise += temp * temp;\n            }\n        }\n\n        startline.s = j;\n        return noise;\n    }\n\n    /**\n     * <PRE>\n     * -oo dB  =>  -1.00\n     * - 6 dB  =>  -0.97\n     * - 3 dB  =>  -0.80\n     * - 2 dB  =>  -0.64\n     * - 1 dB  =>  -0.38\n     *   0 dB  =>   0.00\n     * + 1 dB  =>  +0.49\n     * + 2 dB  =>  +1.06\n     * + 3 dB  =>  +1.68\n     * + 6 dB  =>  +3.69\n     * +10 dB  =>  +6.45\n     * </PRE>\n     */\n    this.calc_noise = function (cod_info, l3_xmin, distort, res, prev_noise) {\n        var distortPos = 0;\n        var l3_xminPos = 0;\n        var sfb, l, over = 0;\n        var over_noise_db = 0;\n        /* 0 dB relative to masking */\n        var tot_noise_db = 0;\n        /* -200 dB relative to masking */\n        var max_noise = -20.0;\n        var j = 0;\n        var scalefac = cod_info.scalefac;\n        var scalefacPos = 0;\n\n        res.over_SSD = 0;\n\n        for (sfb = 0; sfb < cod_info.psymax; sfb++) {\n            var s = cod_info.global_gain\n                - (((scalefac[scalefacPos++]) + (cod_info.preflag != 0 ? pretab[sfb]\n                    : 0)) << (cod_info.scalefac_scale + 1))\n                - cod_info.subblock_gain[cod_info.window[sfb]] * 8;\n            var noise = 0.0;\n\n            if (prev_noise != null && (prev_noise.step[sfb] == s)) {\n\n                /* use previously computed values */\n                noise = prev_noise.noise[sfb];\n                j += cod_info.width[sfb];\n                distort[distortPos++] = noise / l3_xmin[l3_xminPos++];\n\n                noise = prev_noise.noise_log[sfb];\n\n            } else {\n                var step = POW20(s);\n                l = cod_info.width[sfb] >> 1;\n\n                if ((j + cod_info.width[sfb]) > cod_info.max_nonzero_coeff) {\n                    var usefullsize;\n                    usefullsize = cod_info.max_nonzero_coeff - j + 1;\n\n                    if (usefullsize > 0)\n                        l = usefullsize >> 1;\n                    else\n                        l = 0;\n                }\n\n                var sl = new StartLine(j);\n                noise = this.calc_noise_core(cod_info, sl, l, step);\n                j = sl.s;\n\n                if (prev_noise != null) {\n                    /* save noise values */\n                    prev_noise.step[sfb] = s;\n                    prev_noise.noise[sfb] = noise;\n                }\n\n                noise = distort[distortPos++] = noise / l3_xmin[l3_xminPos++];\n\n                /* multiplying here is adding in dB, but can overflow */\n                noise = Util.FAST_LOG10(Math.max(noise, 1E-20));\n\n                if (prev_noise != null) {\n                    /* save noise values */\n                    prev_noise.noise_log[sfb] = noise;\n                }\n            }\n\n            if (prev_noise != null) {\n                /* save noise values */\n                prev_noise.global_gain = cod_info.global_gain;\n            }\n\n            tot_noise_db += noise;\n\n            if (noise > 0.0) {\n                var tmp;\n\n                tmp = Math.max(0 | (noise * 10 + .5), 1);\n                res.over_SSD += tmp * tmp;\n\n                over++;\n                /* multiplying here is adding in dB -but can overflow */\n                /* over_noise *= noise; */\n                over_noise_db += noise;\n            }\n            max_noise = Math.max(max_noise, noise);\n\n        }\n\n        res.over_count = over;\n        res.tot_noise = tot_noise_db;\n        res.over_noise = over_noise_db;\n        res.max_noise = max_noise;\n\n        return over;\n    }\n\n    /**\n     * updates plotting data\n     *\n     * Mark Taylor 2000-??-??\n     *\n     * Robert Hegemann: moved noise/distortion calc into it\n     */\n    this.set_pinfo = function (gfp, cod_info, ratio, gr, ch) {\n        var gfc = gfp.internal_flags;\n        var sfb, sfb2;\n        var l;\n        var en0, en1;\n        var ifqstep = (cod_info.scalefac_scale == 0) ? .5 : 1.0;\n        var scalefac = cod_info.scalefac;\n\n        var l3_xmin = new_float(L3Side.SFBMAX);\n        var xfsf = new_float(L3Side.SFBMAX);\n        var noise = new CalcNoiseResult();\n\n        calc_xmin(gfp, ratio, cod_info, l3_xmin);\n        calc_noise(cod_info, l3_xmin, xfsf, noise, null);\n\n        var j = 0;\n        sfb2 = cod_info.sfb_lmax;\n        if (cod_info.block_type != Encoder.SHORT_TYPE\n            && 0 == cod_info.mixed_block_flag)\n            sfb2 = 22;\n        for (sfb = 0; sfb < sfb2; sfb++) {\n            var start = gfc.scalefac_band.l[sfb];\n            var end = gfc.scalefac_band.l[sfb + 1];\n            var bw = end - start;\n            for (en0 = 0.0; j < end; j++)\n                en0 += cod_info.xr[j] * cod_info.xr[j];\n            en0 /= bw;\n            /* convert to MDCT units */\n            /* scaling so it shows up on FFT plot */\n            en1 = 1e15;\n            gfc.pinfo.en[gr][ch][sfb] = en1 * en0;\n            gfc.pinfo.xfsf[gr][ch][sfb] = en1 * l3_xmin[sfb] * xfsf[sfb] / bw;\n\n            if (ratio.en.l[sfb] > 0 && !gfp.ATHonly)\n                en0 = en0 / ratio.en.l[sfb];\n            else\n                en0 = 0.0;\n\n            gfc.pinfo.thr[gr][ch][sfb] = en1\n                * Math.max(en0 * ratio.thm.l[sfb], gfc.ATH.l[sfb]);\n\n            /* there is no scalefactor bands >= SBPSY_l */\n            gfc.pinfo.LAMEsfb[gr][ch][sfb] = 0;\n            if (cod_info.preflag != 0 && sfb >= 11)\n                gfc.pinfo.LAMEsfb[gr][ch][sfb] = -ifqstep * pretab[sfb];\n\n            if (sfb < Encoder.SBPSY_l) {\n                /* scfsi should be decoded by caller side */\n                assert(scalefac[sfb] >= 0);\n                gfc.pinfo.LAMEsfb[gr][ch][sfb] -= ifqstep * scalefac[sfb];\n            }\n        }\n        /* for sfb */\n\n        if (cod_info.block_type == Encoder.SHORT_TYPE) {\n            sfb2 = sfb;\n            for (sfb = cod_info.sfb_smin; sfb < Encoder.SBMAX_s; sfb++) {\n                var start = gfc.scalefac_band.s[sfb];\n                var end = gfc.scalefac_band.s[sfb + 1];\n                var bw = end - start;\n                for (var i = 0; i < 3; i++) {\n                    for (en0 = 0.0, l = start; l < end; l++) {\n                        en0 += cod_info.xr[j] * cod_info.xr[j];\n                        j++;\n                    }\n                    en0 = Math.max(en0 / bw, 1e-20);\n                    /* convert to MDCT units */\n                    /* scaling so it shows up on FFT plot */\n                    en1 = 1e15;\n\n                    gfc.pinfo.en_s[gr][ch][3 * sfb + i] = en1 * en0;\n                    gfc.pinfo.xfsf_s[gr][ch][3 * sfb + i] = en1 * l3_xmin[sfb2]\n                        * xfsf[sfb2] / bw;\n                    if (ratio.en.s[sfb][i] > 0)\n                        en0 = en0 / ratio.en.s[sfb][i];\n                    else\n                        en0 = 0.0;\n                    if (gfp.ATHonly || gfp.ATHshort)\n                        en0 = 0;\n\n                    gfc.pinfo.thr_s[gr][ch][3 * sfb + i] = en1\n                        * Math.max(en0 * ratio.thm.s[sfb][i],\n                            gfc.ATH.s[sfb]);\n\n                    /* there is no scalefactor bands >= SBPSY_s */\n                    gfc.pinfo.LAMEsfb_s[gr][ch][3 * sfb + i] = -2.0\n                        * cod_info.subblock_gain[i];\n                    if (sfb < Encoder.SBPSY_s) {\n                        gfc.pinfo.LAMEsfb_s[gr][ch][3 * sfb + i] -= ifqstep\n                            * scalefac[sfb2];\n                    }\n                    sfb2++;\n                }\n            }\n        }\n        /* block type short */\n        gfc.pinfo.LAMEqss[gr][ch] = cod_info.global_gain;\n        gfc.pinfo.LAMEmainbits[gr][ch] = cod_info.part2_3_length\n            + cod_info.part2_length;\n        gfc.pinfo.LAMEsfbits[gr][ch] = cod_info.part2_length;\n\n        gfc.pinfo.over[gr][ch] = noise.over_count;\n        gfc.pinfo.max_noise[gr][ch] = noise.max_noise * 10.0;\n        gfc.pinfo.over_noise[gr][ch] = noise.over_noise * 10.0;\n        gfc.pinfo.tot_noise[gr][ch] = noise.tot_noise * 10.0;\n        gfc.pinfo.over_SSD[gr][ch] = noise.over_SSD;\n    }\n\n    /**\n     * updates plotting data for a whole frame\n     *\n     * Robert Hegemann 2000-10-21\n     */\n    function set_frame_pinfo(gfp, ratio) {\n        var gfc = gfp.internal_flags;\n\n        gfc.masking_lower = 1.0;\n\n        /*\n         * for every granule and channel patch l3_enc and set info\n         */\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                var cod_info = gfc.l3_side.tt[gr][ch];\n                var scalefac_sav = new_int(L3Side.SFBMAX);\n                System.arraycopy(cod_info.scalefac, 0, scalefac_sav, 0,\n                    scalefac_sav.length);\n\n                /*\n                 * reconstruct the scalefactors in case SCFSI was used\n                 */\n                if (gr == 1) {\n                    var sfb;\n                    for (sfb = 0; sfb < cod_info.sfb_lmax; sfb++) {\n                        if (cod_info.scalefac[sfb] < 0) /* scfsi */\n                            cod_info.scalefac[sfb] = gfc.l3_side.tt[0][ch].scalefac[sfb];\n                    }\n                }\n\n                set_pinfo(gfp, cod_info, ratio[gr][ch], gr, ch);\n                System.arraycopy(scalefac_sav, 0, cod_info.scalefac, 0,\n                    scalefac_sav.length);\n            }\n            /* for ch */\n        }\n        /* for gr */\n    }\n\n}\n\nmodule.exports = QuantizePVT;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/lamejs/src/js/QuantizePVT.js?");

/***/ }),

/***/ "../node_modules/lamejs/src/js/ReplayGain.js":
/*!***************************************************!*\
  !*** ../node_modules/lamejs/src/js/ReplayGain.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var common = __webpack_require__(/*! ./common.js */ \"../node_modules/lamejs/src/js/common.js\");\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar GainAnalysis = __webpack_require__(/*! ./GainAnalysis.js */ \"../node_modules/lamejs/src/js/GainAnalysis.js\");\n\nfunction ReplayGain() {\n    this.linprebuf = new_float(GainAnalysis.MAX_ORDER * 2);\n    /**\n     * left input samples, with pre-buffer\n     */\n    this.linpre = 0;\n    this.lstepbuf = new_float(GainAnalysis.MAX_SAMPLES_PER_WINDOW + GainAnalysis.MAX_ORDER);\n    /**\n     * left \"first step\" (i.e. post first filter) samples\n     */\n    this.lstep = 0;\n    this.loutbuf = new_float(GainAnalysis.MAX_SAMPLES_PER_WINDOW + GainAnalysis.MAX_ORDER);\n    /**\n     * left \"out\" (i.e. post second filter) samples\n     */\n    this.lout = 0;\n    this.rinprebuf = new_float(GainAnalysis.MAX_ORDER * 2);\n    /**\n     * right input samples ...\n     */\n    this.rinpre = 0;\n    this.rstepbuf = new_float(GainAnalysis.MAX_SAMPLES_PER_WINDOW + GainAnalysis.MAX_ORDER);\n    this.rstep = 0;\n    this.routbuf = new_float(GainAnalysis.MAX_SAMPLES_PER_WINDOW + GainAnalysis.MAX_ORDER);\n    this.rout = 0;\n    /**\n     * number of samples required to reach number of milliseconds required\n     * for RMS window\n     */\n    this.sampleWindow = 0;\n    this.totsamp = 0;\n    this.lsum = 0.;\n    this.rsum = 0.;\n    this.freqindex = 0;\n    this.first = 0;\n    this.A = new_int(0 | (GainAnalysis.STEPS_per_dB * GainAnalysis.MAX_dB));\n    this.B = new_int(0 | (GainAnalysis.STEPS_per_dB * GainAnalysis.MAX_dB));\n\n}\n\nmodule.exports = ReplayGain;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/lamejs/src/js/ReplayGain.js?");

/***/ }),

/***/ "../node_modules/lamejs/src/js/Reservoir.js":
/*!**************************************************!*\
  !*** ../node_modules/lamejs/src/js/Reservoir.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n *      bit reservoir source file\n *\n *      Copyright (c) 1999-2000 Mark Taylor\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: Reservoir.java,v 1.9 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n/**\n * ResvFrameBegin:<BR>\n * Called (repeatedly) at the beginning of a frame. Updates the maximum size of\n * the reservoir, and checks to make sure main_data_begin was set properly by\n * the formatter<BR>\n * Background information:\n * \n * This is the original text from the ISO standard. Because of sooo many bugs\n * and irritations correcting comments are added in brackets []. A '^W' means\n * you should remove the last word.\n * \n * <PRE>\n *  1. The following rule can be used to calculate the maximum\n *     number of bits used for one granule [^W frame]:<BR>\n *     At the highest possible bitrate of Layer III (320 kbps\n *     per stereo signal [^W^W^W], 48 kHz) the frames must be of\n *     [^W^W^W are designed to have] constant length, i.e.\n *     one buffer [^W^W the frame] length is:<BR>\n * \n *         320 kbps * 1152/48 kHz = 7680 bit = 960 byte\n * \n *     This value is used as the maximum buffer per channel [^W^W] at\n *     lower bitrates [than 320 kbps]. At 64 kbps mono or 128 kbps\n *     stereo the main granule length is 64 kbps * 576/48 kHz = 768 bit\n *     [per granule and channel] at 48 kHz sampling frequency.\n *     This means that there is a maximum deviation (short time buffer\n *     [= reservoir]) of 7680 - 2*2*768 = 4608 bits is allowed at 64 kbps.\n *     The actual deviation is equal to the number of bytes [with the\n *     meaning of octets] denoted by the main_data_end offset pointer.\n *     The actual maximum deviation is (2^9-1)*8 bit = 4088 bits\n *     [for MPEG-1 and (2^8-1)*8 bit for MPEG-2, both are hard limits].\n *     ... The xchange of buffer bits between the left and right channel\n *     is allowed without restrictions [exception: dual channel].\n *     Because of the [constructed] constraint on the buffer size\n *     main_data_end is always set to 0 in the case of bit_rate_index==14,\n *     i.e. data rate 320 kbps per stereo signal [^W^W^W]. In this case\n *     all data are allocated between adjacent header [^W sync] words\n *     [, i.e. there is no buffering at all].\n * </PRE>\n */\n\nvar common = __webpack_require__(/*! ./common.js */ \"../node_modules/lamejs/src/js/common.js\");\nvar assert = common.assert;\n\nfunction Reservoir() {\n\tvar bs;\n\n\tthis.setModules  = function(_bs) {\n\t\tbs = _bs;\n\t}\n\n\tthis.ResvFrameBegin = function(gfp, mean_bits) {\n\t\tvar gfc = gfp.internal_flags;\n\t\tvar maxmp3buf;\n\t\tvar l3_side = gfc.l3_side;\n\n\t\tvar frameLength = bs.getframebits(gfp);\n\t\tmean_bits.bits = (frameLength - gfc.sideinfo_len * 8) / gfc.mode_gr;\n\n\t\t/**\n\t\t * <PRE>\n\t\t *  Meaning of the variables:\n\t\t *      resvLimit: (0, 8, ..., 8*255 (MPEG-2), 8*511 (MPEG-1))\n\t\t *          Number of bits can be stored in previous frame(s) due to\n\t\t *          counter size constaints\n\t\t *      maxmp3buf: ( ??? ... 8*1951 (MPEG-1 and 2), 8*2047 (MPEG-2.5))\n\t\t *          Number of bits allowed to encode one frame (you can take 8*511 bit\n\t\t *          from the bit reservoir and at most 8*1440 bit from the current\n\t\t *          frame (320 kbps, 32 kHz), so 8*1951 bit is the largest possible\n\t\t *          value for MPEG-1 and -2)\n\t\t * \n\t\t *          maximum allowed granule/channel size times 4 = 8*2047 bits.,\n\t\t *          so this is the absolute maximum supported by the format.\n\t\t * \n\t\t * \n\t\t *      fullFrameBits:  maximum number of bits available for encoding\n\t\t *                      the current frame.\n\t\t * \n\t\t *      mean_bits:      target number of bits per granule.\n\t\t * \n\t\t *      frameLength:\n\t\t * \n\t\t *      gfc.ResvMax:   maximum allowed reservoir\n\t\t * \n\t\t *      gfc.ResvSize:  current reservoir size\n\t\t * \n\t\t *      l3_side.resvDrain_pre:\n\t\t *         ancillary data to be added to previous frame:\n\t\t *         (only usefull in VBR modes if it is possible to have\n\t\t *         maxmp3buf < fullFrameBits)).  Currently disabled,\n\t\t *         see #define NEW_DRAIN\n\t\t *         2010-02-13: RH now enabled, it seems to be needed for CBR too,\n\t\t *                     as there exists one example, where the FhG decoder\n\t\t *                     can't decode a -b320 CBR file anymore.\n\t\t * \n\t\t *      l3_side.resvDrain_post:\n\t\t *         ancillary data to be added to this frame:\n\t\t * \n\t\t * </PRE>\n\t\t */\n\n\t\t/* main_data_begin has 9 bits in MPEG-1, 8 bits MPEG-2 */\n\t\tvar resvLimit = (8 * 256) * gfc.mode_gr - 8;\n\n\t\t/*\n\t\t * maximum allowed frame size. dont use more than this number of bits,\n\t\t * even if the frame has the space for them:\n\t\t */\n\t\tif (gfp.brate > 320) {\n\t\t\t/* in freeformat the buffer is constant */\n\t\t\tmaxmp3buf = 8 * ((int) ((gfp.brate * 1000)\n\t\t\t\t\t/ (gfp.out_samplerate / 1152) / 8 + .5));\n\t\t} else {\n\t\t\t/*\n\t\t\t * all mp3 decoders should have enough buffer to handle this value:\n\t\t\t * size of a 320kbps 32kHz frame\n\t\t\t */\n\t\t\tmaxmp3buf = 8 * 1440;\n\n\t\t\t/*\n\t\t\t * Bouvigne suggests this more lax interpretation of the ISO doc\n\t\t\t * instead of using 8*960.\n\t\t\t */\n\n\t\t\tif (gfp.strict_ISO) {\n\t\t\t\tmaxmp3buf = 8 * ((int) (320000 / (gfp.out_samplerate / 1152) / 8 + .5));\n\t\t\t}\n\t\t}\n\n\t\tgfc.ResvMax = maxmp3buf - frameLength;\n\t\tif (gfc.ResvMax > resvLimit)\n\t\t\tgfc.ResvMax = resvLimit;\n\t\tif (gfc.ResvMax < 0 || gfp.disable_reservoir)\n\t\t\tgfc.ResvMax = 0;\n\n\t\tvar fullFrameBits = mean_bits.bits * gfc.mode_gr\n\t\t\t\t+ Math.min(gfc.ResvSize, gfc.ResvMax);\n\n\t\tif (fullFrameBits > maxmp3buf)\n\t\t\tfullFrameBits = maxmp3buf;\n\n\t\tassert (0 == gfc.ResvMax % 8);\n\t\tassert (gfc.ResvMax >= 0);\n\n\t\tl3_side.resvDrain_pre = 0;\n\n\t\t// frame analyzer code\n\t\tif (gfc.pinfo != null) {\n\t\t\t/*\n\t\t\t * expected bits per channel per granule [is this also right for\n\t\t\t * mono/stereo, MPEG-1/2 ?]\n\t\t\t */\n\t\t\tgfc.pinfo.mean_bits = mean_bits.bits / 2;\n\t\t\tgfc.pinfo.resvsize = gfc.ResvSize;\n\t\t}\n\n\t\treturn fullFrameBits;\n\t}\n\n\t/**\n\t * returns targ_bits: target number of bits to use for 1 granule<BR>\n\t * extra_bits: amount extra available from reservoir<BR>\n\t * Mark Taylor 4/99\n\t */\n\tthis.ResvMaxBits = function(gfp, mean_bits, targ_bits, cbr) {\n\t\tvar gfc = gfp.internal_flags;\n\t\tvar add_bits;\n        var ResvSize = gfc.ResvSize, ResvMax = gfc.ResvMax;\n\n\t\t/* compensate the saved bits used in the 1st granule */\n\t\tif (cbr != 0)\n\t\t\tResvSize += mean_bits;\n\n\t\tif ((gfc.substep_shaping & 1) != 0)\n\t\t\tResvMax *= 0.9;\n\n\t\ttarg_bits.bits = mean_bits;\n\n\t\t/* extra bits if the reservoir is almost full */\n\t\tif (ResvSize * 10 > ResvMax * 9) {\n\t\t\tadd_bits = ResvSize - (ResvMax * 9) / 10;\n\t\t\ttarg_bits.bits += add_bits;\n\t\t\tgfc.substep_shaping |= 0x80;\n\t\t} else {\n\t\t\tadd_bits = 0;\n\t\t\tgfc.substep_shaping &= 0x7f;\n\t\t\t/*\n\t\t\t * build up reservoir. this builds the reservoir a little slower\n\t\t\t * than FhG. It could simple be mean_bits/15, but this was rigged to\n\t\t\t * always produce 100 (the old value) at 128kbs\n\t\t\t */\n\t\t\tif (!gfp.disable_reservoir && 0 == (gfc.substep_shaping & 1))\n\t\t\t\ttarg_bits.bits -= .1 * mean_bits;\n\t\t}\n\n\t\t/* amount from the reservoir we are allowed to use. ISO says 6/10 */\n\t\tvar extra_bits = (ResvSize < (gfc.ResvMax * 6) / 10 ? ResvSize\n\t\t\t\t: (gfc.ResvMax * 6) / 10);\n\t\textra_bits -= add_bits;\n\n\t\tif (extra_bits < 0)\n\t\t\textra_bits = 0;\n\t\treturn extra_bits;\n\t}\n\n\t/**\n\t * Called after a granule's bit allocation. Readjusts the size of the\n\t * reservoir to reflect the granule's usage.\n\t */\n\tthis.ResvAdjust = function(gfc, gi) {\n\t\tgfc.ResvSize -= gi.part2_3_length + gi.part2_length;\n\t}\n\n\t/**\n\t * Called after all granules in a frame have been allocated. Makes sure that\n\t * the reservoir size is within limits, possibly by adding stuffing bits.\n\t */\n\tthis.ResvFrameEnd = function(gfc, mean_bits) {\n\t\tvar over_bits;\n\t\tvar l3_side = gfc.l3_side;\n\n\t\tgfc.ResvSize += mean_bits * gfc.mode_gr;\n\t\tvar stuffingBits = 0;\n\t\tl3_side.resvDrain_post = 0;\n\t\tl3_side.resvDrain_pre = 0;\n\n\t\t/* we must be byte aligned */\n\t\tif ((over_bits = gfc.ResvSize % 8) != 0)\n\t\t\tstuffingBits += over_bits;\n\n\t\tover_bits = (gfc.ResvSize - stuffingBits) - gfc.ResvMax;\n\t\tif (over_bits > 0) {\n\t\t\tassert (0 == over_bits % 8);\n\t\t\tassert (over_bits >= 0);\n\t\t\tstuffingBits += over_bits;\n\t\t}\n\n\t\t/*\n\t\t * NOTE: enabling the NEW_DRAIN code fixes some problems with FhG\n\t\t * decoder shipped with MS Windows operating systems. Using this, it is\n\t\t * even possible to use Gabriel's lax buffer consideration again, which\n\t\t * assumes, any decoder should have a buffer large enough for a 320 kbps\n\t\t * frame at 32 kHz sample rate.\n\t\t * \n\t\t * old drain code: lame -b320 BlackBird.wav --. does not play with\n\t\t * GraphEdit.exe using FhG decoder V1.5 Build 50\n\t\t * \n\t\t * new drain code: lame -b320 BlackBird.wav --. plays fine with\n\t\t * GraphEdit.exe using FhG decoder V1.5 Build 50\n\t\t * \n\t\t * Robert Hegemann, 2010-02-13.\n\t\t */\n\t\t/*\n\t\t * drain as many bits as possible into previous frame ancillary data In\n\t\t * particular, in VBR mode ResvMax may have changed, and we have to make\n\t\t * sure main_data_begin does not create a reservoir bigger than ResvMax\n\t\t * mt 4/00\n\t\t */\n\t\t{\n\t\t\tvar mdb_bytes = Math.min(l3_side.main_data_begin * 8, stuffingBits) / 8;\n\t\t\tl3_side.resvDrain_pre += 8 * mdb_bytes;\n\t\t\tstuffingBits -= 8 * mdb_bytes;\n\t\t\tgfc.ResvSize -= 8 * mdb_bytes;\n\t\t\tl3_side.main_data_begin -= mdb_bytes;\n\t\t}\n\t\t/* drain the rest into this frames ancillary data */\n\t\tl3_side.resvDrain_post += stuffingBits;\n\t\tgfc.ResvSize -= stuffingBits;\n\t}\n}\n\nmodule.exports = Reservoir;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/lamejs/src/js/Reservoir.js?");

/***/ }),

/***/ "../node_modules/lamejs/src/js/ScaleFac.js":
/*!*************************************************!*\
  !*** ../node_modules/lamejs/src/js/ScaleFac.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//package mp3;\n\n/**\n * Layer III side information.\n *\n * @author Ken\n *\n */\n\nvar common = __webpack_require__(/*! ./common.js */ \"../node_modules/lamejs/src/js/common.js\");\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar Encoder = __webpack_require__(/*! ./Encoder.js */ \"../node_modules/lamejs/src/js/Encoder.js\");\n\nfunction ScaleFac(arrL, arrS, arr21, arr12) {\n\n    this.l = new_int(1 + Encoder.SBMAX_l);\n    this.s = new_int(1 + Encoder.SBMAX_s);\n    this.psfb21 = new_int(1 + Encoder.PSFB21);\n    this.psfb12 = new_int(1 + Encoder.PSFB12);\n    var l = this.l;\n    var s = this.s;\n\n    if (arguments.length == 4) {\n        //public ScaleFac(final int[] arrL, final int[] arrS, final int[] arr21,\n        //    final int[] arr12) {\n        this.arrL = arguments[0];\n        this.arrS = arguments[1];\n        this.arr21 = arguments[2];\n        this.arr12 = arguments[3];\n\n        System.arraycopy(this.arrL, 0, l, 0, Math.min(this.arrL.length, this.l.length));\n        System.arraycopy(this.arrS, 0, s, 0, Math.min(this.arrS.length, this.s.length));\n        System.arraycopy(this.arr21, 0, this.psfb21, 0, Math.min(this.arr21.length, this.psfb21.length));\n        System.arraycopy(this.arr12, 0, this.psfb12, 0, Math.min(this.arr12.length, this.psfb12.length));\n    }\n}\n\nmodule.exports = ScaleFac;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/lamejs/src/js/ScaleFac.js?");

/***/ }),

/***/ "../node_modules/lamejs/src/js/Tables.js":
/*!***********************************************!*\
  !*** ../node_modules/lamejs/src/js/Tables.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function HuffCodeTab(len, max, tab, hl) {\n    this.xlen = len;\n    this.linmax = max;\n    this.table = tab;\n    this.hlen = hl;\n}\n\nvar Tables = {};\n\n\nTables.t1HB = [\n    1, 1,\n    1, 0\n];\n\nTables.t2HB = [\n    1, 2, 1,\n    3, 1, 1,\n    3, 2, 0\n];\n\nTables.t3HB = [\n    3, 2, 1,\n    1, 1, 1,\n    3, 2, 0\n];\n\nTables.t5HB = [\n    1, 2, 6, 5,\n    3, 1, 4, 4,\n    7, 5, 7, 1,\n    6, 1, 1, 0\n];\n\nTables.t6HB = [\n    7, 3, 5, 1,\n    6, 2, 3, 2,\n    5, 4, 4, 1,\n    3, 3, 2, 0\n];\n\nTables.t7HB = [\n    1, 2, 10, 19, 16, 10,\n    3, 3, 7, 10, 5, 3,\n    11, 4, 13, 17, 8, 4,\n    12, 11, 18, 15, 11, 2,\n    7, 6, 9, 14, 3, 1,\n    6, 4, 5, 3, 2, 0\n];\n\nTables.t8HB = [\n    3, 4, 6, 18, 12, 5,\n    5, 1, 2, 16, 9, 3,\n    7, 3, 5, 14, 7, 3,\n    19, 17, 15, 13, 10, 4,\n    13, 5, 8, 11, 5, 1,\n    12, 4, 4, 1, 1, 0\n];\n\nTables.t9HB = [\n    7, 5, 9, 14, 15, 7,\n    6, 4, 5, 5, 6, 7,\n    7, 6, 8, 8, 8, 5,\n    15, 6, 9, 10, 5, 1,\n    11, 7, 9, 6, 4, 1,\n    14, 4, 6, 2, 6, 0\n];\n\nTables.t10HB = [\n    1, 2, 10, 23, 35, 30, 12, 17,\n    3, 3, 8, 12, 18, 21, 12, 7,\n    11, 9, 15, 21, 32, 40, 19, 6,\n    14, 13, 22, 34, 46, 23, 18, 7,\n    20, 19, 33, 47, 27, 22, 9, 3,\n    31, 22, 41, 26, 21, 20, 5, 3,\n    14, 13, 10, 11, 16, 6, 5, 1,\n    9, 8, 7, 8, 4, 4, 2, 0\n];\n\nTables.t11HB = [\n    3, 4, 10, 24, 34, 33, 21, 15,\n    5, 3, 4, 10, 32, 17, 11, 10,\n    11, 7, 13, 18, 30, 31, 20, 5,\n    25, 11, 19, 59, 27, 18, 12, 5,\n    35, 33, 31, 58, 30, 16, 7, 5,\n    28, 26, 32, 19, 17, 15, 8, 14,\n    14, 12, 9, 13, 14, 9, 4, 1,\n    11, 4, 6, 6, 6, 3, 2, 0\n];\n\nTables.t12HB = [\n    9, 6, 16, 33, 41, 39, 38, 26,\n    7, 5, 6, 9, 23, 16, 26, 11,\n    17, 7, 11, 14, 21, 30, 10, 7,\n    17, 10, 15, 12, 18, 28, 14, 5,\n    32, 13, 22, 19, 18, 16, 9, 5,\n    40, 17, 31, 29, 17, 13, 4, 2,\n    27, 12, 11, 15, 10, 7, 4, 1,\n    27, 12, 8, 12, 6, 3, 1, 0\n];\n\nTables.t13HB = [\n    1, 5, 14, 21, 34, 51, 46, 71, 42, 52, 68, 52, 67, 44, 43, 19,\n    3, 4, 12, 19, 31, 26, 44, 33, 31, 24, 32, 24, 31, 35, 22, 14,\n    15, 13, 23, 36, 59, 49, 77, 65, 29, 40, 30, 40, 27, 33, 42, 16,\n    22, 20, 37, 61, 56, 79, 73, 64, 43, 76, 56, 37, 26, 31, 25, 14,\n    35, 16, 60, 57, 97, 75, 114, 91, 54, 73, 55, 41, 48, 53, 23, 24,\n    58, 27, 50, 96, 76, 70, 93, 84, 77, 58, 79, 29, 74, 49, 41, 17,\n    47, 45, 78, 74, 115, 94, 90, 79, 69, 83, 71, 50, 59, 38, 36, 15,\n    72, 34, 56, 95, 92, 85, 91, 90, 86, 73, 77, 65, 51, 44, 43, 42,\n    43, 20, 30, 44, 55, 78, 72, 87, 78, 61, 46, 54, 37, 30, 20, 16,\n    53, 25, 41, 37, 44, 59, 54, 81, 66, 76, 57, 54, 37, 18, 39, 11,\n    35, 33, 31, 57, 42, 82, 72, 80, 47, 58, 55, 21, 22, 26, 38, 22,\n    53, 25, 23, 38, 70, 60, 51, 36, 55, 26, 34, 23, 27, 14, 9, 7,\n    34, 32, 28, 39, 49, 75, 30, 52, 48, 40, 52, 28, 18, 17, 9, 5,\n    45, 21, 34, 64, 56, 50, 49, 45, 31, 19, 12, 15, 10, 7, 6, 3,\n    48, 23, 20, 39, 36, 35, 53, 21, 16, 23, 13, 10, 6, 1, 4, 2,\n    16, 15, 17, 27, 25, 20, 29, 11, 17, 12, 16, 8, 1, 1, 0, 1\n];\n\nTables.t15HB = [\n    7, 12, 18, 53, 47, 76, 124, 108, 89, 123, 108, 119, 107, 81, 122, 63,\n    13, 5, 16, 27, 46, 36, 61, 51, 42, 70, 52, 83, 65, 41, 59, 36,\n    19, 17, 15, 24, 41, 34, 59, 48, 40, 64, 50, 78, 62, 80, 56, 33,\n    29, 28, 25, 43, 39, 63, 55, 93, 76, 59, 93, 72, 54, 75, 50, 29,\n    52, 22, 42, 40, 67, 57, 95, 79, 72, 57, 89, 69, 49, 66, 46, 27,\n    77, 37, 35, 66, 58, 52, 91, 74, 62, 48, 79, 63, 90, 62, 40, 38,\n    125, 32, 60, 56, 50, 92, 78, 65, 55, 87, 71, 51, 73, 51, 70, 30,\n    109, 53, 49, 94, 88, 75, 66, 122, 91, 73, 56, 42, 64, 44, 21, 25,\n    90, 43, 41, 77, 73, 63, 56, 92, 77, 66, 47, 67, 48, 53, 36, 20,\n    71, 34, 67, 60, 58, 49, 88, 76, 67, 106, 71, 54, 38, 39, 23, 15,\n    109, 53, 51, 47, 90, 82, 58, 57, 48, 72, 57, 41, 23, 27, 62, 9,\n    86, 42, 40, 37, 70, 64, 52, 43, 70, 55, 42, 25, 29, 18, 11, 11,\n    118, 68, 30, 55, 50, 46, 74, 65, 49, 39, 24, 16, 22, 13, 14, 7,\n    91, 44, 39, 38, 34, 63, 52, 45, 31, 52, 28, 19, 14, 8, 9, 3,\n    123, 60, 58, 53, 47, 43, 32, 22, 37, 24, 17, 12, 15, 10, 2, 1,\n    71, 37, 34, 30, 28, 20, 17, 26, 21, 16, 10, 6, 8, 6, 2, 0\n];\n\nTables.t16HB = [\n    1, 5, 14, 44, 74, 63, 110, 93, 172, 149, 138, 242, 225, 195, 376, 17,\n    3, 4, 12, 20, 35, 62, 53, 47, 83, 75, 68, 119, 201, 107, 207, 9,\n    15, 13, 23, 38, 67, 58, 103, 90, 161, 72, 127, 117, 110, 209, 206, 16,\n    45, 21, 39, 69, 64, 114, 99, 87, 158, 140, 252, 212, 199, 387, 365, 26,\n    75, 36, 68, 65, 115, 101, 179, 164, 155, 264, 246, 226, 395, 382, 362, 9,\n    66, 30, 59, 56, 102, 185, 173, 265, 142, 253, 232, 400, 388, 378, 445, 16,\n    111, 54, 52, 100, 184, 178, 160, 133, 257, 244, 228, 217, 385, 366, 715, 10,\n    98, 48, 91, 88, 165, 157, 148, 261, 248, 407, 397, 372, 380, 889, 884, 8,\n    85, 84, 81, 159, 156, 143, 260, 249, 427, 401, 392, 383, 727, 713, 708, 7,\n    154, 76, 73, 141, 131, 256, 245, 426, 406, 394, 384, 735, 359, 710, 352, 11,\n    139, 129, 67, 125, 247, 233, 229, 219, 393, 743, 737, 720, 885, 882, 439, 4,\n    243, 120, 118, 115, 227, 223, 396, 746, 742, 736, 721, 712, 706, 223, 436, 6,\n    202, 224, 222, 218, 216, 389, 386, 381, 364, 888, 443, 707, 440, 437, 1728, 4,\n    747, 211, 210, 208, 370, 379, 734, 723, 714, 1735, 883, 877, 876, 3459, 865, 2,\n    377, 369, 102, 187, 726, 722, 358, 711, 709, 866, 1734, 871, 3458, 870, 434, 0,\n    12, 10, 7, 11, 10, 17, 11, 9, 13, 12, 10, 7, 5, 3, 1, 3\n];\n\nTables.t24HB = [\n    15, 13, 46, 80, 146, 262, 248, 434, 426, 669, 653, 649, 621, 517, 1032, 88,\n    14, 12, 21, 38, 71, 130, 122, 216, 209, 198, 327, 345, 319, 297, 279, 42,\n    47, 22, 41, 74, 68, 128, 120, 221, 207, 194, 182, 340, 315, 295, 541, 18,\n    81, 39, 75, 70, 134, 125, 116, 220, 204, 190, 178, 325, 311, 293, 271, 16,\n    147, 72, 69, 135, 127, 118, 112, 210, 200, 188, 352, 323, 306, 285, 540, 14,\n    263, 66, 129, 126, 119, 114, 214, 202, 192, 180, 341, 317, 301, 281, 262, 12,\n    249, 123, 121, 117, 113, 215, 206, 195, 185, 347, 330, 308, 291, 272, 520, 10,\n    435, 115, 111, 109, 211, 203, 196, 187, 353, 332, 313, 298, 283, 531, 381, 17,\n    427, 212, 208, 205, 201, 193, 186, 177, 169, 320, 303, 286, 268, 514, 377, 16,\n    335, 199, 197, 191, 189, 181, 174, 333, 321, 305, 289, 275, 521, 379, 371, 11,\n    668, 184, 183, 179, 175, 344, 331, 314, 304, 290, 277, 530, 383, 373, 366, 10,\n    652, 346, 171, 168, 164, 318, 309, 299, 287, 276, 263, 513, 375, 368, 362, 6,\n    648, 322, 316, 312, 307, 302, 292, 284, 269, 261, 512, 376, 370, 364, 359, 4,\n    620, 300, 296, 294, 288, 282, 273, 266, 515, 380, 374, 369, 365, 361, 357, 2,\n    1033, 280, 278, 274, 267, 264, 259, 382, 378, 372, 367, 363, 360, 358, 356, 0,\n    43, 20, 19, 17, 15, 13, 11, 9, 7, 6, 4, 7, 5, 3, 1, 3\n];\n\nTables.t32HB = [\n    1 << 0, 5 << 1, 4 << 1, 5 << 2, 6 << 1, 5 << 2, 4 << 2, 4 << 3,\n    7 << 1, 3 << 2, 6 << 2, 0 << 3, 7 << 2, 2 << 3, 3 << 3, 1 << 4\n];\n\nTables.t33HB = [\n    15 << 0, 14 << 1, 13 << 1, 12 << 2, 11 << 1, 10 << 2, 9 << 2, 8 << 3,\n    7 << 1, 6 << 2, 5 << 2, 4 << 3, 3 << 2, 2 << 3, 1 << 3, 0 << 4\n];\n\nTables.t1l = [\n    1, 4,\n    3, 5\n];\n\nTables.t2l = [\n    1, 4, 7,\n    4, 5, 7,\n    6, 7, 8\n];\n\nTables.t3l = [\n    2, 3, 7,\n    4, 4, 7,\n    6, 7, 8\n];\n\nTables.t5l = [\n    1, 4, 7, 8,\n    4, 5, 8, 9,\n    7, 8, 9, 10,\n    8, 8, 9, 10\n];\n\nTables.t6l = [\n    3, 4, 6, 8,\n    4, 4, 6, 7,\n    5, 6, 7, 8,\n    7, 7, 8, 9\n];\n\nTables.t7l = [\n    1, 4, 7, 9, 9, 10,\n    4, 6, 8, 9, 9, 10,\n    7, 7, 9, 10, 10, 11,\n    8, 9, 10, 11, 11, 11,\n    8, 9, 10, 11, 11, 12,\n    9, 10, 11, 12, 12, 12\n];\n\nTables.t8l = [\n    2, 4, 7, 9, 9, 10,\n    4, 4, 6, 10, 10, 10,\n    7, 6, 8, 10, 10, 11,\n    9, 10, 10, 11, 11, 12,\n    9, 9, 10, 11, 12, 12,\n    10, 10, 11, 11, 13, 13\n];\n\nTables.t9l = [\n    3, 4, 6, 7, 9, 10,\n    4, 5, 6, 7, 8, 10,\n    5, 6, 7, 8, 9, 10,\n    7, 7, 8, 9, 9, 10,\n    8, 8, 9, 9, 10, 11,\n    9, 9, 10, 10, 11, 11\n];\n\nTables.t10l = [\n    1, 4, 7, 9, 10, 10, 10, 11,\n    4, 6, 8, 9, 10, 11, 10, 10,\n    7, 8, 9, 10, 11, 12, 11, 11,\n    8, 9, 10, 11, 12, 12, 11, 12,\n    9, 10, 11, 12, 12, 12, 12, 12,\n    10, 11, 12, 12, 13, 13, 12, 13,\n    9, 10, 11, 12, 12, 12, 13, 13,\n    10, 10, 11, 12, 12, 13, 13, 13\n];\n\nTables.t11l = [\n    2, 4, 6, 8, 9, 10, 9, 10,\n    4, 5, 6, 8, 10, 10, 9, 10,\n    6, 7, 8, 9, 10, 11, 10, 10,\n    8, 8, 9, 11, 10, 12, 10, 11,\n    9, 10, 10, 11, 11, 12, 11, 12,\n    9, 10, 11, 12, 12, 13, 12, 13,\n    9, 9, 9, 10, 11, 12, 12, 12,\n    9, 9, 10, 11, 12, 12, 12, 12\n];\n\nTables.t12l = [\n    4, 4, 6, 8, 9, 10, 10, 10,\n    4, 5, 6, 7, 9, 9, 10, 10,\n    6, 6, 7, 8, 9, 10, 9, 10,\n    7, 7, 8, 8, 9, 10, 10, 10,\n    8, 8, 9, 9, 10, 10, 10, 11,\n    9, 9, 10, 10, 10, 11, 10, 11,\n    9, 9, 9, 10, 10, 11, 11, 12,\n    10, 10, 10, 11, 11, 11, 11, 12\n];\n\nTables.t13l = [\n    1, 5, 7, 8, 9, 10, 10, 11, 10, 11, 12, 12, 13, 13, 14, 14,\n    4, 6, 8, 9, 10, 10, 11, 11, 11, 11, 12, 12, 13, 14, 14, 14,\n    7, 8, 9, 10, 11, 11, 12, 12, 11, 12, 12, 13, 13, 14, 15, 15,\n    8, 9, 10, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 15, 15,\n    9, 9, 11, 11, 12, 12, 13, 13, 12, 13, 13, 14, 14, 15, 15, 16,\n    10, 10, 11, 12, 12, 12, 13, 13, 13, 13, 14, 13, 15, 15, 16, 16,\n    10, 11, 12, 12, 13, 13, 13, 13, 13, 14, 14, 14, 15, 15, 16, 16,\n    11, 11, 12, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 16, 18, 18,\n    10, 10, 11, 12, 12, 13, 13, 14, 14, 14, 14, 15, 15, 16, 17, 17,\n    11, 11, 12, 12, 13, 13, 13, 15, 14, 15, 15, 16, 16, 16, 18, 17,\n    11, 12, 12, 13, 13, 14, 14, 15, 14, 15, 16, 15, 16, 17, 18, 19,\n    12, 12, 12, 13, 14, 14, 14, 14, 15, 15, 15, 16, 17, 17, 17, 18,\n    12, 13, 13, 14, 14, 15, 14, 15, 16, 16, 17, 17, 17, 18, 18, 18,\n    13, 13, 14, 15, 15, 15, 16, 16, 16, 16, 16, 17, 18, 17, 18, 18,\n    14, 14, 14, 15, 15, 15, 17, 16, 16, 19, 17, 17, 17, 19, 18, 18,\n    13, 14, 15, 16, 16, 16, 17, 16, 17, 17, 18, 18, 21, 20, 21, 18\n];\n\nTables.t15l = [\n    3, 5, 6, 8, 8, 9, 10, 10, 10, 11, 11, 12, 12, 12, 13, 14,\n    5, 5, 7, 8, 9, 9, 10, 10, 10, 11, 11, 12, 12, 12, 13, 13,\n    6, 7, 7, 8, 9, 9, 10, 10, 10, 11, 11, 12, 12, 13, 13, 13,\n    7, 8, 8, 9, 9, 10, 10, 11, 11, 11, 12, 12, 12, 13, 13, 13,\n    8, 8, 9, 9, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 13,\n    9, 9, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 13, 13, 13, 14,\n    10, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 14, 14,\n    10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 14,\n    10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 14, 14, 14,\n    10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14,\n    11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 15, 14,\n    11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 15,\n    12, 12, 11, 12, 12, 12, 13, 13, 13, 13, 13, 13, 14, 14, 15, 15,\n    12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15,\n    13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 14, 15,\n    13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15, 15, 15\n];\n\nTables.t16_5l = [\n    1, 5, 7, 9, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 14, 11,\n    4, 6, 8, 9, 10, 11, 11, 11, 12, 12, 12, 13, 14, 13, 14, 11,\n    7, 8, 9, 10, 11, 11, 12, 12, 13, 12, 13, 13, 13, 14, 14, 12,\n    9, 9, 10, 11, 11, 12, 12, 12, 13, 13, 14, 14, 14, 15, 15, 13,\n    10, 10, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 12,\n    10, 10, 11, 11, 12, 13, 13, 14, 13, 14, 14, 15, 15, 15, 16, 13,\n    11, 11, 11, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 16, 13,\n    11, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 17, 17, 13,\n    11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 13,\n    12, 12, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 15, 16, 15, 14,\n    12, 13, 12, 13, 14, 14, 14, 14, 15, 16, 16, 16, 17, 17, 16, 13,\n    13, 13, 13, 13, 14, 14, 15, 16, 16, 16, 16, 16, 16, 15, 16, 14,\n    13, 14, 14, 14, 14, 15, 15, 15, 15, 17, 16, 16, 16, 16, 18, 14,\n    15, 14, 14, 14, 15, 15, 16, 16, 16, 18, 17, 17, 17, 19, 17, 14,\n    14, 15, 13, 14, 16, 16, 15, 16, 16, 17, 18, 17, 19, 17, 16, 14,\n    11, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 12\n];\n\nTables.t16l = [\n    1, 5, 7, 9, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 14, 10,\n    4, 6, 8, 9, 10, 11, 11, 11, 12, 12, 12, 13, 14, 13, 14, 10,\n    7, 8, 9, 10, 11, 11, 12, 12, 13, 12, 13, 13, 13, 14, 14, 11,\n    9, 9, 10, 11, 11, 12, 12, 12, 13, 13, 14, 14, 14, 15, 15, 12,\n    10, 10, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 11,\n    10, 10, 11, 11, 12, 13, 13, 14, 13, 14, 14, 15, 15, 15, 16, 12,\n    11, 11, 11, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 16, 12,\n    11, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 17, 17, 12,\n    11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 12,\n    12, 12, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 15, 16, 15, 13,\n    12, 13, 12, 13, 14, 14, 14, 14, 15, 16, 16, 16, 17, 17, 16, 12,\n    13, 13, 13, 13, 14, 14, 15, 16, 16, 16, 16, 16, 16, 15, 16, 13,\n    13, 14, 14, 14, 14, 15, 15, 15, 15, 17, 16, 16, 16, 16, 18, 13,\n    15, 14, 14, 14, 15, 15, 16, 16, 16, 18, 17, 17, 17, 19, 17, 13,\n    14, 15, 13, 14, 16, 16, 15, 16, 16, 17, 18, 17, 19, 17, 16, 13,\n    10, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 10\n];\n\nTables.t24l = [\n    4, 5, 7, 8, 9, 10, 10, 11, 11, 12, 12, 12, 12, 12, 13, 10,\n    5, 6, 7, 8, 9, 10, 10, 11, 11, 11, 12, 12, 12, 12, 12, 10,\n    7, 7, 8, 9, 9, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 9,\n    8, 8, 9, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 9,\n    9, 9, 9, 10, 10, 10, 10, 11, 11, 11, 12, 12, 12, 12, 13, 9,\n    10, 9, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 9,\n    10, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 9,\n    11, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 10,\n    11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 10,\n    11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 10,\n    12, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 10,\n    12, 12, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 10,\n    12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 10,\n    12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 10,\n    13, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 10,\n    9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 6\n];\n\nTables.t32l = [\n    1 + 0, 4 + 1, 4 + 1, 5 + 2, 4 + 1, 6 + 2, 5 + 2, 6 + 3,\n    4 + 1, 5 + 2, 5 + 2, 6 + 3, 5 + 2, 6 + 3, 6 + 3, 6 + 4\n];\n\nTables.t33l = [\n    4 + 0, 4 + 1, 4 + 1, 4 + 2, 4 + 1, 4 + 2, 4 + 2, 4 + 3,\n    4 + 1, 4 + 2, 4 + 2, 4 + 3, 4 + 2, 4 + 3, 4 + 3, 4 + 4\n];\n\nTables.ht = [\n    /* xlen, linmax, table, hlen */\n    new HuffCodeTab(0, 0, null, null),\n    new HuffCodeTab(2, 0, Tables.t1HB, Tables.t1l),\n    new HuffCodeTab(3, 0, Tables.t2HB, Tables.t2l),\n    new HuffCodeTab(3, 0, Tables.t3HB, Tables.t3l),\n    new HuffCodeTab(0, 0, null, null), /* Apparently not used */\n    new HuffCodeTab(4, 0, Tables.t5HB, Tables.t5l),\n    new HuffCodeTab(4, 0, Tables.t6HB, Tables.t6l),\n    new HuffCodeTab(6, 0, Tables.t7HB, Tables.t7l),\n    new HuffCodeTab(6, 0, Tables.t8HB, Tables.t8l),\n    new HuffCodeTab(6, 0, Tables.t9HB, Tables.t9l),\n    new HuffCodeTab(8, 0, Tables.t10HB, Tables.t10l),\n    new HuffCodeTab(8, 0, Tables.t11HB, Tables.t11l),\n    new HuffCodeTab(8, 0, Tables.t12HB, Tables.t12l),\n    new HuffCodeTab(16, 0, Tables.t13HB, Tables.t13l),\n    new HuffCodeTab(0, 0, null, Tables.t16_5l), /* Apparently not used */\n    new HuffCodeTab(16, 0, Tables.t15HB, Tables.t15l),\n\n    new HuffCodeTab(1, 1, Tables.t16HB, Tables.t16l),\n    new HuffCodeTab(2, 3, Tables.t16HB, Tables.t16l),\n    new HuffCodeTab(3, 7, Tables.t16HB, Tables.t16l),\n    new HuffCodeTab(4, 15, Tables.t16HB, Tables.t16l),\n    new HuffCodeTab(6, 63, Tables.t16HB, Tables.t16l),\n    new HuffCodeTab(8, 255, Tables.t16HB, Tables.t16l),\n    new HuffCodeTab(10, 1023, Tables.t16HB, Tables.t16l),\n    new HuffCodeTab(13, 8191, Tables.t16HB, Tables.t16l),\n\n    new HuffCodeTab(4, 15, Tables.t24HB, Tables.t24l),\n    new HuffCodeTab(5, 31, Tables.t24HB, Tables.t24l),\n    new HuffCodeTab(6, 63, Tables.t24HB, Tables.t24l),\n    new HuffCodeTab(7, 127, Tables.t24HB, Tables.t24l),\n    new HuffCodeTab(8, 255, Tables.t24HB, Tables.t24l),\n    new HuffCodeTab(9, 511, Tables.t24HB, Tables.t24l),\n    new HuffCodeTab(11, 2047, Tables.t24HB, Tables.t24l),\n    new HuffCodeTab(13, 8191, Tables.t24HB, Tables.t24l),\n\n    new HuffCodeTab(0, 0, Tables.t32HB, Tables.t32l),\n    new HuffCodeTab(0, 0, Tables.t33HB, Tables.t33l),\n];\n\n/**\n * <CODE>\n *  for (i = 0; i < 16*16; i++) [\n *      largetbl[i] = ((ht[16].hlen[i]) << 16) + ht[24].hlen[i];\n *  ]\n * </CODE>\n *\n */\nTables.largetbl = [\n    0x010004, 0x050005, 0x070007, 0x090008, 0x0a0009, 0x0a000a, 0x0b000a, 0x0b000b,\n    0x0c000b, 0x0c000c, 0x0c000c, 0x0d000c, 0x0d000c, 0x0d000c, 0x0e000d, 0x0a000a,\n    0x040005, 0x060006, 0x080007, 0x090008, 0x0a0009, 0x0b000a, 0x0b000a, 0x0b000b,\n    0x0c000b, 0x0c000b, 0x0c000c, 0x0d000c, 0x0e000c, 0x0d000c, 0x0e000c, 0x0a000a,\n    0x070007, 0x080007, 0x090008, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000b,\n    0x0d000b, 0x0c000b, 0x0d000b, 0x0d000c, 0x0d000c, 0x0e000c, 0x0e000d, 0x0b0009,\n    0x090008, 0x090008, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000a, 0x0c000b,\n    0x0d000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0c0009,\n    0x0a0009, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000a, 0x0d000a, 0x0d000b,\n    0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000d, 0x0b0009,\n    0x0a000a, 0x0a0009, 0x0b000a, 0x0b000a, 0x0c000a, 0x0d000a, 0x0d000b, 0x0e000b,\n    0x0d000b, 0x0e000b, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x0c0009,\n    0x0b000a, 0x0b000a, 0x0b000a, 0x0c000a, 0x0d000a, 0x0d000b, 0x0d000b, 0x0d000b,\n    0x0e000b, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x10000d, 0x0c0009,\n    0x0b000b, 0x0b000a, 0x0c000a, 0x0c000a, 0x0d000b, 0x0d000b, 0x0d000b, 0x0e000b,\n    0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x11000d, 0x11000d, 0x0c000a,\n    0x0b000b, 0x0c000b, 0x0c000b, 0x0d000b, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000b,\n    0x0f000b, 0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x10000d, 0x10000d, 0x0c000a,\n    0x0c000b, 0x0c000b, 0x0c000b, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000b, 0x0f000c,\n    0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x0f000d, 0x10000d, 0x0f000d, 0x0d000a,\n    0x0c000c, 0x0d000b, 0x0c000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0e000c,\n    0x0f000c, 0x10000c, 0x10000c, 0x10000d, 0x11000d, 0x11000d, 0x10000d, 0x0c000a,\n    0x0d000c, 0x0d000c, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0f000c, 0x10000c,\n    0x10000c, 0x10000c, 0x10000c, 0x10000d, 0x10000d, 0x0f000d, 0x10000d, 0x0d000a,\n    0x0d000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c,\n    0x0f000c, 0x11000c, 0x10000d, 0x10000d, 0x10000d, 0x10000d, 0x12000d, 0x0d000a,\n    0x0f000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x10000c, 0x10000c,\n    0x10000d, 0x12000d, 0x11000d, 0x11000d, 0x11000d, 0x13000d, 0x11000d, 0x0d000a,\n    0x0e000d, 0x0f000c, 0x0d000c, 0x0e000c, 0x10000c, 0x10000c, 0x0f000c, 0x10000d,\n    0x10000d, 0x11000d, 0x12000d, 0x11000d, 0x13000d, 0x11000d, 0x10000d, 0x0d000a,\n    0x0a0009, 0x0a0009, 0x0a0009, 0x0b0009, 0x0b0009, 0x0c0009, 0x0c0009, 0x0c0009,\n    0x0d0009, 0x0d0009, 0x0d0009, 0x0d000a, 0x0d000a, 0x0d000a, 0x0d000a, 0x0a0006\n];\n/**\n * <CODE>\n *  for (i = 0; i < 3*3; i++) [\n *      table23[i] = ((ht[2].hlen[i]) << 16) + ht[3].hlen[i];\n *  ]\n * </CODE>\n *\n */\nTables.table23 = [\n    0x010002, 0x040003, 0x070007,\n    0x040004, 0x050004, 0x070007,\n    0x060006, 0x070007, 0x080008\n];\n\n/**\n * <CODE>\n *  for (i = 0; i < 4*4; i++) [\n *       table56[i] = ((ht[5].hlen[i]) << 16) + ht[6].hlen[i];\n *   ]\n * </CODE>\n *\n */\nTables.table56 = [\n    0x010003, 0x040004, 0x070006, 0x080008, 0x040004, 0x050004, 0x080006, 0x090007,\n    0x070005, 0x080006, 0x090007, 0x0a0008, 0x080007, 0x080007, 0x090008, 0x0a0009\n];\n\nTables.bitrate_table = [\n    [0, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160, -1], /* MPEG 2 */\n    [0, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, -1], /* MPEG 1 */\n    [0, 8, 16, 24, 32, 40, 48, 56, 64, -1, -1, -1, -1, -1, -1, -1], /* MPEG 2.5 */\n];\n\n/**\n * MPEG 2, MPEG 1, MPEG 2.5.\n */\nTables.samplerate_table = [\n    [22050, 24000, 16000, -1],\n    [44100, 48000, 32000, -1],\n    [11025, 12000, 8000, -1],\n];\n\n/**\n * This is the scfsi_band table from 2.4.2.7 of the IS.\n */\nTables.scfsi_band = [0, 6, 11, 16, 21];\n\nmodule.exports = Tables;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/lamejs/src/js/Tables.js?");

/***/ }),

/***/ "../node_modules/lamejs/src/js/Takehiro.js":
/*!*************************************************!*\
  !*** ../node_modules/lamejs/src/js/Takehiro.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n *\tMP3 huffman table selecting and bit counting\n *\n *\tCopyright (c) 1999-2005 Takehiro TOMINAGA\n *\tCopyright (c) 2002-2005 Gabriel Bouvigne\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\t See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: Takehiro.java,v 1.26 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n//import java.util.Arrays;\nvar common = __webpack_require__(/*! ./common.js */ \"../node_modules/lamejs/src/js/common.js\");\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar Encoder = __webpack_require__(/*! ./Encoder.js */ \"../node_modules/lamejs/src/js/Encoder.js\");\nvar Tables = __webpack_require__(/*! ./Tables.js */ \"../node_modules/lamejs/src/js/Tables.js\");\nvar GrInfo = __webpack_require__(/*! ./GrInfo.js */ \"../node_modules/lamejs/src/js/GrInfo.js\");\nvar QuantizePVT = __webpack_require__(/*! ./QuantizePVT.js */ \"../node_modules/lamejs/src/js/QuantizePVT.js\");\n\n\nfunction Takehiro() {\n\n    var qupvt = null;\n    this.qupvt = null;\n\n    this.setModules = function (_qupvt) {\n        this.qupvt = _qupvt;\n        qupvt = _qupvt;\n    }\n\n    function Bits(b) {\n        this.bits = 0 | b;\n    }\n\n    var subdv_table = [[0, 0], /* 0 bands */\n        [0, 0], /* 1 bands */\n        [0, 0], /* 2 bands */\n        [0, 0], /* 3 bands */\n        [0, 0], /* 4 bands */\n        [0, 1], /* 5 bands */\n        [1, 1], /* 6 bands */\n        [1, 1], /* 7 bands */\n        [1, 2], /* 8 bands */\n        [2, 2], /* 9 bands */\n        [2, 3], /* 10 bands */\n        [2, 3], /* 11 bands */\n        [3, 4], /* 12 bands */\n        [3, 4], /* 13 bands */\n        [3, 4], /* 14 bands */\n        [4, 5], /* 15 bands */\n        [4, 5], /* 16 bands */\n        [4, 6], /* 17 bands */\n        [5, 6], /* 18 bands */\n        [5, 6], /* 19 bands */\n        [5, 7], /* 20 bands */\n        [6, 7], /* 21 bands */\n        [6, 7], /* 22 bands */\n    ];\n\n    /**\n     * nonlinear quantization of xr More accurate formula than the ISO formula.\n     * Takes into account the fact that we are quantizing xr . ix, but we want\n     * ix^4/3 to be as close as possible to x^4/3. (taking the nearest int would\n     * mean ix is as close as possible to xr, which is different.)\n     *\n     * From Segher Boessenkool <segher@eastsite.nl> 11/1999\n     *\n     * 09/2000: ASM code removed in favor of IEEE754 hack by Takehiro Tominaga.\n     * If you need the ASM code, check CVS circa Aug 2000.\n     *\n     * 01/2004: Optimizations by Gabriel Bouvigne\n     */\n    function quantize_lines_xrpow_01(l, istep, xr, xrPos, ix, ixPos) {\n        var compareval0 = (1.0 - 0.4054) / istep;\n\n        assert(l > 0);\n        l = l >> 1;\n        while ((l--) != 0) {\n            ix[ixPos++] = (compareval0 > xr[xrPos++]) ? 0 : 1;\n            ix[ixPos++] = (compareval0 > xr[xrPos++]) ? 0 : 1;\n        }\n    }\n\n    /**\n     * XRPOW_FTOI is a macro to convert floats to ints.<BR>\n     * if XRPOW_FTOI(x) = nearest_int(x), then QUANTFAC(x)=adj43asm[x]<BR>\n     * ROUNDFAC= -0.0946<BR>\n     *\n     * if XRPOW_FTOI(x) = floor(x), then QUANTFAC(x)=asj43[x]<BR>\n     * ROUNDFAC=0.4054<BR>\n     *\n     * Note: using floor() or 0| is extremely slow. On machines where the\n     * TAKEHIRO_IEEE754_HACK code above does not work, it is worthwile to write\n     * some ASM for XRPOW_FTOI().\n     */\n    function quantize_lines_xrpow(l, istep, xr, xrPos, ix, ixPos) {\n        assert(l > 0);\n\n        l = l >> 1;\n        var remaining = l % 2;\n        l = l >> 1;\n        while (l-- != 0) {\n            var x0, x1, x2, x3;\n            var rx0, rx1, rx2, rx3;\n\n            x0 = xr[xrPos++] * istep;\n            x1 = xr[xrPos++] * istep;\n            rx0 = 0 | x0;\n            x2 = xr[xrPos++] * istep;\n            rx1 = 0 | x1;\n            x3 = xr[xrPos++] * istep;\n            rx2 = 0 | x2;\n            x0 += qupvt.adj43[rx0];\n            rx3 = 0 | x3;\n            x1 += qupvt.adj43[rx1];\n            ix[ixPos++] = 0 | x0;\n            x2 += qupvt.adj43[rx2];\n            ix[ixPos++] = 0 | x1;\n            x3 += qupvt.adj43[rx3];\n            ix[ixPos++] = 0 | x2;\n            ix[ixPos++] = 0 | x3;\n        }\n        if (remaining != 0) {\n            var x0, x1;\n            var rx0, rx1;\n\n            x0 = xr[xrPos++] * istep;\n            x1 = xr[xrPos++] * istep;\n            rx0 = 0 | x0;\n            rx1 = 0 | x1;\n            x0 += qupvt.adj43[rx0];\n            x1 += qupvt.adj43[rx1];\n            ix[ixPos++] = 0 | x0;\n            ix[ixPos++] = 0 | x1;\n        }\n    }\n\n    /**\n     * Quantization function This function will select which lines to quantize\n     * and call the proper quantization function\n     */\n    function quantize_xrpow(xp, pi, istep, codInfo, prevNoise) {\n        /* quantize on xr^(3/4) instead of xr */\n        var sfb;\n        var sfbmax;\n        var j = 0;\n        var prev_data_use;\n        var accumulate = 0;\n        var accumulate01 = 0;\n        var xpPos = 0;\n        var iData = pi;\n        var iDataPos = 0;\n        var acc_iData = iData;\n        var acc_iDataPos = 0;\n        var acc_xp = xp;\n        var acc_xpPos = 0;\n\n        /*\n         * Reusing previously computed data does not seems to work if global\n         * gain is changed. Finding why it behaves this way would allow to use a\n         * cache of previously computed values (let's 10 cached values per sfb)\n         * that would probably provide a noticeable speedup\n         */\n        prev_data_use = (prevNoise != null && (codInfo.global_gain == prevNoise.global_gain));\n\n        if (codInfo.block_type == Encoder.SHORT_TYPE)\n            sfbmax = 38;\n        else\n            sfbmax = 21;\n\n        for (sfb = 0; sfb <= sfbmax; sfb++) {\n            var step = -1;\n\n            if (prev_data_use || codInfo.block_type == Encoder.NORM_TYPE) {\n                step = codInfo.global_gain\n                    - ((codInfo.scalefac[sfb] + (codInfo.preflag != 0 ? qupvt.pretab[sfb]\n                        : 0)) << (codInfo.scalefac_scale + 1))\n                    - codInfo.subblock_gain[codInfo.window[sfb]] * 8;\n            }\n            assert(codInfo.width[sfb] >= 0);\n            if (prev_data_use && (prevNoise.step[sfb] == step)) {\n                /*\n                 * do not recompute this part, but compute accumulated lines\n                 */\n                if (accumulate != 0) {\n                    quantize_lines_xrpow(accumulate, istep, acc_xp, acc_xpPos,\n                        acc_iData, acc_iDataPos);\n                    accumulate = 0;\n                }\n                if (accumulate01 != 0) {\n                    quantize_lines_xrpow_01(accumulate01, istep, acc_xp,\n                        acc_xpPos, acc_iData, acc_iDataPos);\n                    accumulate01 = 0;\n                }\n            } else { /* should compute this part */\n                var l = codInfo.width[sfb];\n\n                if ((j + codInfo.width[sfb]) > codInfo.max_nonzero_coeff) {\n                    /* do not compute upper zero part */\n                    var usefullsize;\n                    usefullsize = codInfo.max_nonzero_coeff - j + 1;\n                    Arrays.fill(pi, codInfo.max_nonzero_coeff, 576, 0);\n                    l = usefullsize;\n\n                    if (l < 0) {\n                        l = 0;\n                    }\n\n                    /* no need to compute higher sfb values */\n                    sfb = sfbmax + 1;\n                }\n\n                /* accumulate lines to quantize */\n                if (0 == accumulate && 0 == accumulate01) {\n                    acc_iData = iData;\n                    acc_iDataPos = iDataPos;\n                    acc_xp = xp;\n                    acc_xpPos = xpPos;\n                }\n                if (prevNoise != null && prevNoise.sfb_count1 > 0\n                    && sfb >= prevNoise.sfb_count1\n                    && prevNoise.step[sfb] > 0\n                    && step >= prevNoise.step[sfb]) {\n\n                    if (accumulate != 0) {\n                        quantize_lines_xrpow(accumulate, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate = 0;\n                        acc_iData = iData;\n                        acc_iDataPos = iDataPos;\n                        acc_xp = xp;\n                        acc_xpPos = xpPos;\n                    }\n                    accumulate01 += l;\n                } else {\n                    if (accumulate01 != 0) {\n                        quantize_lines_xrpow_01(accumulate01, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate01 = 0;\n                        acc_iData = iData;\n                        acc_iDataPos = iDataPos;\n                        acc_xp = xp;\n                        acc_xpPos = xpPos;\n                    }\n                    accumulate += l;\n                }\n\n                if (l <= 0) {\n                    /*\n                     * rh: 20040215 may happen due to \"prev_data_use\"\n                     * optimization\n                     */\n                    if (accumulate01 != 0) {\n                        quantize_lines_xrpow_01(accumulate01, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate01 = 0;\n                    }\n                    if (accumulate != 0) {\n                        quantize_lines_xrpow(accumulate, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate = 0;\n                    }\n\n                    break;\n                    /* ends for-loop */\n                }\n            }\n            if (sfb <= sfbmax) {\n                iDataPos += codInfo.width[sfb];\n                xpPos += codInfo.width[sfb];\n                j += codInfo.width[sfb];\n            }\n        }\n        if (accumulate != 0) { /* last data part */\n            quantize_lines_xrpow(accumulate, istep, acc_xp, acc_xpPos,\n                acc_iData, acc_iDataPos);\n            accumulate = 0;\n        }\n        if (accumulate01 != 0) { /* last data part */\n            quantize_lines_xrpow_01(accumulate01, istep, acc_xp, acc_xpPos,\n                acc_iData, acc_iDataPos);\n            accumulate01 = 0;\n        }\n\n    }\n\n    /**\n     * ix_max\n     */\n    function ix_max(ix, ixPos, endPos) {\n        var max1 = 0, max2 = 0;\n\n        do {\n            var x1 = ix[ixPos++];\n            var x2 = ix[ixPos++];\n            if (max1 < x1)\n                max1 = x1;\n\n            if (max2 < x2)\n                max2 = x2;\n        } while (ixPos < endPos);\n        if (max1 < max2)\n            max1 = max2;\n        return max1;\n    }\n\n    function count_bit_ESC(ix, ixPos, end, t1, t2, s) {\n        /* ESC-table is used */\n        var linbits = Tables.ht[t1].xlen * 65536 + Tables.ht[t2].xlen;\n        var sum = 0, sum2;\n\n        do {\n            var x = ix[ixPos++];\n            var y = ix[ixPos++];\n\n            if (x != 0) {\n                if (x > 14) {\n                    x = 15;\n                    sum += linbits;\n                }\n                x *= 16;\n            }\n\n            if (y != 0) {\n                if (y > 14) {\n                    y = 15;\n                    sum += linbits;\n                }\n                x += y;\n            }\n\n            sum += Tables.largetbl[x];\n        } while (ixPos < end);\n\n        sum2 = sum & 0xffff;\n        sum >>= 16;\n\n        if (sum > sum2) {\n            sum = sum2;\n            t1 = t2;\n        }\n\n        s.bits += sum;\n        return t1;\n    }\n\n    function count_bit_noESC(ix, ixPos, end, s) {\n        /* No ESC-words */\n        var sum1 = 0;\n        var hlen1 = Tables.ht[1].hlen;\n\n        do {\n            var x = ix[ixPos + 0] * 2 + ix[ixPos + 1];\n            ixPos += 2;\n            sum1 += hlen1[x];\n        } while (ixPos < end);\n\n        s.bits += sum1;\n        return 1;\n    }\n\n    function count_bit_noESC_from2(ix, ixPos, end, t1, s) {\n        /* No ESC-words */\n        var sum = 0, sum2;\n        var xlen = Tables.ht[t1].xlen;\n        var hlen;\n        if (t1 == 2)\n            hlen = Tables.table23;\n        else\n            hlen = Tables.table56;\n\n        do {\n            var x = ix[ixPos + 0] * xlen + ix[ixPos + 1];\n            ixPos += 2;\n            sum += hlen[x];\n        } while (ixPos < end);\n\n        sum2 = sum & 0xffff;\n        sum >>= 16;\n\n        if (sum > sum2) {\n            sum = sum2;\n            t1++;\n        }\n\n        s.bits += sum;\n        return t1;\n    }\n\n    function count_bit_noESC_from3(ix, ixPos, end, t1, s) {\n        /* No ESC-words */\n        var sum1 = 0;\n        var sum2 = 0;\n        var sum3 = 0;\n        var xlen = Tables.ht[t1].xlen;\n        var hlen1 = Tables.ht[t1].hlen;\n        var hlen2 = Tables.ht[t1 + 1].hlen;\n        var hlen3 = Tables.ht[t1 + 2].hlen;\n\n        do {\n            var x = ix[ixPos + 0] * xlen + ix[ixPos + 1];\n            ixPos += 2;\n            sum1 += hlen1[x];\n            sum2 += hlen2[x];\n            sum3 += hlen3[x];\n        } while (ixPos < end);\n        var t = t1;\n        if (sum1 > sum2) {\n            sum1 = sum2;\n            t++;\n        }\n        if (sum1 > sum3) {\n            sum1 = sum3;\n            t = t1 + 2;\n        }\n        s.bits += sum1;\n\n        return t;\n    }\n\n    /*************************************************************************/\n    /* choose table */\n    /*************************************************************************/\n\n    var huf_tbl_noESC = [1, 2, 5, 7, 7, 10, 10, 13, 13,\n        13, 13, 13, 13, 13, 13];\n\n    /**\n     * Choose the Huffman table that will encode ix[begin..end] with the fewest\n     * bits.\n     *\n     * Note: This code contains knowledge about the sizes and characteristics of\n     * the Huffman tables as defined in the IS (Table B.7), and will not work\n     * with any arbitrary tables.\n     */\n    function choose_table(ix, ixPos, endPos, s) {\n        var max = ix_max(ix, ixPos, endPos);\n\n        switch (max) {\n            case 0:\n                return max;\n\n            case 1:\n                return count_bit_noESC(ix, ixPos, endPos, s);\n\n            case 2:\n            case 3:\n                return count_bit_noESC_from2(ix, ixPos, endPos,\n                    huf_tbl_noESC[max - 1], s);\n\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n                return count_bit_noESC_from3(ix, ixPos, endPos,\n                    huf_tbl_noESC[max - 1], s);\n\n            default:\n                /* try tables with linbits */\n                if (max > QuantizePVT.IXMAX_VAL) {\n                    s.bits = QuantizePVT.LARGE_BITS;\n                    return -1;\n                }\n                max -= 15;\n                var choice2;\n                for (choice2 = 24; choice2 < 32; choice2++) {\n                    if (Tables.ht[choice2].linmax >= max) {\n                        break;\n                    }\n                }\n                var choice;\n                for (choice = choice2 - 8; choice < 24; choice++) {\n                    if (Tables.ht[choice].linmax >= max) {\n                        break;\n                    }\n                }\n                return count_bit_ESC(ix, ixPos, endPos, choice, choice2, s);\n        }\n    }\n\n    /**\n     * count_bit\n     */\n    this.noquant_count_bits = function (gfc, gi, prev_noise) {\n        var ix = gi.l3_enc;\n        var i = Math.min(576, ((gi.max_nonzero_coeff + 2) >> 1) << 1);\n\n        if (prev_noise != null)\n            prev_noise.sfb_count1 = 0;\n\n        /* Determine count1 region */\n        for (; i > 1; i -= 2)\n            if ((ix[i - 1] | ix[i - 2]) != 0)\n                break;\n        gi.count1 = i;\n\n        /* Determines the number of bits to encode the quadruples. */\n        var a1 = 0;\n        var a2 = 0;\n        for (; i > 3; i -= 4) {\n            var p;\n            /* hack to check if all values <= 1 */\n            //throw \"TODO: HACK         if ((((long) ix[i - 1] | (long) ix[i - 2] | (long) ix[i - 3] | (long) ix[i - 4]) & 0xffffffffL) > 1L        \"\n            //if (true) {\n            if (((ix[i - 1] | ix[i - 2] | ix[i - 3] | ix[i - 4]) & 0x7fffffff) > 1) {\n                break;\n            }\n            p = ((ix[i - 4] * 2 + ix[i - 3]) * 2 + ix[i - 2]) * 2 + ix[i - 1];\n            a1 += Tables.t32l[p];\n            a2 += Tables.t33l[p];\n        }\n        var bits = a1;\n        gi.count1table_select = 0;\n        if (a1 > a2) {\n            bits = a2;\n            gi.count1table_select = 1;\n        }\n\n        gi.count1bits = bits;\n        gi.big_values = i;\n        if (i == 0)\n            return bits;\n\n        if (gi.block_type == Encoder.SHORT_TYPE) {\n            a1 = 3 * gfc.scalefac_band.s[3];\n            if (a1 > gi.big_values)\n                a1 = gi.big_values;\n            a2 = gi.big_values;\n\n        } else if (gi.block_type == Encoder.NORM_TYPE) {\n            assert(i <= 576);\n            /* bv_scf has 576 entries (0..575) */\n            a1 = gi.region0_count = gfc.bv_scf[i - 2];\n            a2 = gi.region1_count = gfc.bv_scf[i - 1];\n\n            assert(a1 + a2 + 2 < Encoder.SBPSY_l);\n            a2 = gfc.scalefac_band.l[a1 + a2 + 2];\n            a1 = gfc.scalefac_band.l[a1 + 1];\n            if (a2 < i) {\n                var bi = new Bits(bits);\n                gi.table_select[2] = choose_table(ix, a2, i, bi);\n                bits = bi.bits;\n            }\n        } else {\n            gi.region0_count = 7;\n            /* gi.region1_count = SBPSY_l - 7 - 1; */\n            gi.region1_count = Encoder.SBMAX_l - 1 - 7 - 1;\n            a1 = gfc.scalefac_band.l[7 + 1];\n            a2 = i;\n            if (a1 > a2) {\n                a1 = a2;\n            }\n        }\n\n        /* have to allow for the case when bigvalues < region0 < region1 */\n        /* (and region0, region1 are ignored) */\n        a1 = Math.min(a1, i);\n        a2 = Math.min(a2, i);\n\n        assert(a1 >= 0);\n        assert(a2 >= 0);\n\n        /* Count the number of bits necessary to code the bigvalues region. */\n        if (0 < a1) {\n            var bi = new Bits(bits);\n            gi.table_select[0] = choose_table(ix, 0, a1, bi);\n            bits = bi.bits;\n        }\n        if (a1 < a2) {\n            var bi = new Bits(bits);\n            gi.table_select[1] = choose_table(ix, a1, a2, bi);\n            bits = bi.bits;\n        }\n        if (gfc.use_best_huffman == 2) {\n            gi.part2_3_length = bits;\n            best_huffman_divide(gfc, gi);\n            bits = gi.part2_3_length;\n        }\n\n        if (prev_noise != null) {\n            if (gi.block_type == Encoder.NORM_TYPE) {\n                var sfb = 0;\n                while (gfc.scalefac_band.l[sfb] < gi.big_values) {\n                    sfb++;\n                }\n                prev_noise.sfb_count1 = sfb;\n            }\n        }\n\n        return bits;\n    }\n\n    this.count_bits = function (gfc, xr, gi, prev_noise) {\n        var ix = gi.l3_enc;\n\n        /* since quantize_xrpow uses table lookup, we need to check this first: */\n        var w = (QuantizePVT.IXMAX_VAL) / qupvt.IPOW20(gi.global_gain);\n\n        if (gi.xrpow_max > w)\n            return QuantizePVT.LARGE_BITS;\n\n        quantize_xrpow(xr, ix, qupvt.IPOW20(gi.global_gain), gi, prev_noise);\n\n        if ((gfc.substep_shaping & 2) != 0) {\n            var j = 0;\n            /* 0.634521682242439 = 0.5946*2**(.5*0.1875) */\n            var gain = gi.global_gain + gi.scalefac_scale;\n            var roundfac = 0.634521682242439 / qupvt.IPOW20(gain);\n            for (var sfb = 0; sfb < gi.sfbmax; sfb++) {\n                var width = gi.width[sfb];\n                assert(width >= 0);\n                if (0 == gfc.pseudohalf[sfb]) {\n                    j += width;\n                } else {\n                    var k;\n                    for (k = j, j += width; k < j; ++k) {\n                        ix[k] = (xr[k] >= roundfac) ? ix[k] : 0;\n                    }\n                }\n            }\n        }\n        return this.noquant_count_bits(gfc, gi, prev_noise);\n    }\n\n    /**\n     * re-calculate the best scalefac_compress using scfsi the saved bits are\n     * kept in the bit reservoir.\n     */\n    function recalc_divide_init(gfc, cod_info, ix, r01_bits, r01_div, r0_tbl, r1_tbl) {\n        var bigv = cod_info.big_values;\n\n        for (var r0 = 0; r0 <= 7 + 15; r0++) {\n            r01_bits[r0] = QuantizePVT.LARGE_BITS;\n        }\n\n        for (var r0 = 0; r0 < 16; r0++) {\n            var a1 = gfc.scalefac_band.l[r0 + 1];\n            if (a1 >= bigv)\n                break;\n            var r0bits = 0;\n            var bi = new Bits(r0bits);\n            var r0t = choose_table(ix, 0, a1, bi);\n            r0bits = bi.bits;\n\n            for (var r1 = 0; r1 < 8; r1++) {\n                var a2 = gfc.scalefac_band.l[r0 + r1 + 2];\n                if (a2 >= bigv)\n                    break;\n                var bits = r0bits;\n                bi = new Bits(bits);\n                var r1t = choose_table(ix, a1, a2, bi);\n                bits = bi.bits;\n                if (r01_bits[r0 + r1] > bits) {\n                    r01_bits[r0 + r1] = bits;\n                    r01_div[r0 + r1] = r0;\n                    r0_tbl[r0 + r1] = r0t;\n                    r1_tbl[r0 + r1] = r1t;\n                }\n            }\n        }\n    }\n\n    function recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div, r0_tbl, r1_tbl) {\n        var bigv = cod_info2.big_values;\n\n        for (var r2 = 2; r2 < Encoder.SBMAX_l + 1; r2++) {\n            var a2 = gfc.scalefac_band.l[r2];\n            if (a2 >= bigv)\n                break;\n            var bits = r01_bits[r2 - 2] + cod_info2.count1bits;\n            if (gi.part2_3_length <= bits)\n                break;\n\n            var bi = new Bits(bits);\n            var r2t = choose_table(ix, a2, bigv, bi);\n            bits = bi.bits;\n            if (gi.part2_3_length <= bits)\n                continue;\n\n            gi.assign(cod_info2);\n            gi.part2_3_length = bits;\n            gi.region0_count = r01_div[r2 - 2];\n            gi.region1_count = r2 - 2 - r01_div[r2 - 2];\n            gi.table_select[0] = r0_tbl[r2 - 2];\n            gi.table_select[1] = r1_tbl[r2 - 2];\n            gi.table_select[2] = r2t;\n        }\n    }\n\n    this.best_huffman_divide = function (gfc, gi) {\n        var cod_info2 = new GrInfo();\n        var ix = gi.l3_enc;\n        var r01_bits = new_int(7 + 15 + 1);\n        var r01_div = new_int(7 + 15 + 1);\n        var r0_tbl = new_int(7 + 15 + 1);\n        var r1_tbl = new_int(7 + 15 + 1);\n\n        /* SHORT BLOCK stuff fails for MPEG2 */\n        if (gi.block_type == Encoder.SHORT_TYPE && gfc.mode_gr == 1)\n            return;\n\n        cod_info2.assign(gi);\n        if (gi.block_type == Encoder.NORM_TYPE) {\n            recalc_divide_init(gfc, gi, ix, r01_bits, r01_div, r0_tbl, r1_tbl);\n            recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div,\n                r0_tbl, r1_tbl);\n        }\n        var i = cod_info2.big_values;\n        if (i == 0 || (ix[i - 2] | ix[i - 1]) > 1)\n            return;\n\n        i = gi.count1 + 2;\n        if (i > 576)\n            return;\n\n        /* Determines the number of bits to encode the quadruples. */\n        cod_info2.assign(gi);\n        cod_info2.count1 = i;\n        var a1 = 0;\n        var a2 = 0;\n\n        assert(i <= 576);\n\n        for (; i > cod_info2.big_values; i -= 4) {\n            var p = ((ix[i - 4] * 2 + ix[i - 3]) * 2 + ix[i - 2]) * 2\n                + ix[i - 1];\n            a1 += Tables.t32l[p];\n            a2 += Tables.t33l[p];\n        }\n        cod_info2.big_values = i;\n\n        cod_info2.count1table_select = 0;\n        if (a1 > a2) {\n            a1 = a2;\n            cod_info2.count1table_select = 1;\n        }\n\n        cod_info2.count1bits = a1;\n\n        if (cod_info2.block_type == Encoder.NORM_TYPE)\n            recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div,\n                r0_tbl, r1_tbl);\n        else {\n            /* Count the number of bits necessary to code the bigvalues region. */\n            cod_info2.part2_3_length = a1;\n            a1 = gfc.scalefac_band.l[7 + 1];\n            if (a1 > i) {\n                a1 = i;\n            }\n            if (a1 > 0) {\n                var bi = new Bits(cod_info2.part2_3_length);\n                cod_info2.table_select[0] = choose_table(ix, 0, a1, bi);\n                cod_info2.part2_3_length = bi.bits;\n            }\n            if (i > a1) {\n                var bi = new Bits(cod_info2.part2_3_length);\n                cod_info2.table_select[1] = choose_table(ix, a1, i, bi);\n                cod_info2.part2_3_length = bi.bits;\n            }\n            if (gi.part2_3_length > cod_info2.part2_3_length)\n                gi.assign(cod_info2);\n        }\n    }\n\n    var slen1_n = [1, 1, 1, 1, 8, 2, 2, 2, 4, 4, 4, 8, 8, 8, 16, 16];\n    var slen2_n = [1, 2, 4, 8, 1, 2, 4, 8, 2, 4, 8, 2, 4, 8, 4, 8];\n    var slen1_tab = [0, 0, 0, 0, 3, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4];\n    var slen2_tab = [0, 1, 2, 3, 0, 1, 2, 3, 1, 2, 3, 1, 2, 3, 2, 3];\n    Takehiro.slen1_tab = slen1_tab;\n    Takehiro.slen2_tab = slen2_tab;\n\n    function scfsi_calc(ch, l3_side) {\n        var sfb;\n        var gi = l3_side.tt[1][ch];\n        var g0 = l3_side.tt[0][ch];\n\n        for (var i = 0; i < Tables.scfsi_band.length - 1; i++) {\n            for (sfb = Tables.scfsi_band[i]; sfb < Tables.scfsi_band[i + 1]; sfb++) {\n                if (g0.scalefac[sfb] != gi.scalefac[sfb]\n                    && gi.scalefac[sfb] >= 0)\n                    break;\n            }\n            if (sfb == Tables.scfsi_band[i + 1]) {\n                for (sfb = Tables.scfsi_band[i]; sfb < Tables.scfsi_band[i + 1]; sfb++) {\n                    gi.scalefac[sfb] = -1;\n                }\n                l3_side.scfsi[ch][i] = 1;\n            }\n        }\n        var s1 = 0;\n        var c1 = 0;\n        for (sfb = 0; sfb < 11; sfb++) {\n            if (gi.scalefac[sfb] == -1)\n                continue;\n            c1++;\n            if (s1 < gi.scalefac[sfb])\n                s1 = gi.scalefac[sfb];\n        }\n        var s2 = 0;\n        var c2 = 0;\n        for (; sfb < Encoder.SBPSY_l; sfb++) {\n            if (gi.scalefac[sfb] == -1)\n                continue;\n            c2++;\n            if (s2 < gi.scalefac[sfb])\n                s2 = gi.scalefac[sfb];\n        }\n\n        for (var i = 0; i < 16; i++) {\n            if (s1 < slen1_n[i] && s2 < slen2_n[i]) {\n                var c = slen1_tab[i] * c1 + slen2_tab[i] * c2;\n                if (gi.part2_length > c) {\n                    gi.part2_length = c;\n                    gi.scalefac_compress = i;\n                }\n            }\n        }\n    }\n\n    /**\n     * Find the optimal way to store the scalefactors. Only call this routine\n     * after final scalefactors have been chosen and the channel/granule will\n     * not be re-encoded.\n     */\n    this.best_scalefac_store = function (gfc, gr, ch, l3_side) {\n        /* use scalefac_scale if we can */\n        var gi = l3_side.tt[gr][ch];\n        var sfb, i, j, l;\n        var recalc = 0;\n\n        /*\n         * remove scalefacs from bands with ix=0. This idea comes from the AAC\n         * ISO docs. added mt 3/00\n         */\n        /* check if l3_enc=0 */\n        j = 0;\n        for (sfb = 0; sfb < gi.sfbmax; sfb++) {\n            var width = gi.width[sfb];\n            assert(width >= 0);\n            j += width;\n            for (l = -width; l < 0; l++) {\n                if (gi.l3_enc[l + j] != 0)\n                    break;\n            }\n            if (l == 0)\n                gi.scalefac[sfb] = recalc = -2;\n            /* anything goes. */\n            /*\n             * only best_scalefac_store and calc_scfsi know--and only they\n             * should know--about the magic number -2.\n             */\n        }\n\n        if (0 == gi.scalefac_scale && 0 == gi.preflag) {\n            var s = 0;\n            for (sfb = 0; sfb < gi.sfbmax; sfb++)\n                if (gi.scalefac[sfb] > 0)\n                    s |= gi.scalefac[sfb];\n\n            if (0 == (s & 1) && s != 0) {\n                for (sfb = 0; sfb < gi.sfbmax; sfb++)\n                    if (gi.scalefac[sfb] > 0)\n                        gi.scalefac[sfb] >>= 1;\n\n                gi.scalefac_scale = recalc = 1;\n            }\n        }\n\n        if (0 == gi.preflag && gi.block_type != Encoder.SHORT_TYPE\n            && gfc.mode_gr == 2) {\n            for (sfb = 11; sfb < Encoder.SBPSY_l; sfb++)\n                if (gi.scalefac[sfb] < qupvt.pretab[sfb]\n                    && gi.scalefac[sfb] != -2)\n                    break;\n            if (sfb == Encoder.SBPSY_l) {\n                for (sfb = 11; sfb < Encoder.SBPSY_l; sfb++)\n                    if (gi.scalefac[sfb] > 0)\n                        gi.scalefac[sfb] -= qupvt.pretab[sfb];\n\n                gi.preflag = recalc = 1;\n            }\n        }\n\n        for (i = 0; i < 4; i++)\n            l3_side.scfsi[ch][i] = 0;\n\n        if (gfc.mode_gr == 2 && gr == 1\n            && l3_side.tt[0][ch].block_type != Encoder.SHORT_TYPE\n            && l3_side.tt[1][ch].block_type != Encoder.SHORT_TYPE) {\n            scfsi_calc(ch, l3_side);\n            recalc = 0;\n        }\n        for (sfb = 0; sfb < gi.sfbmax; sfb++) {\n            if (gi.scalefac[sfb] == -2) {\n                gi.scalefac[sfb] = 0;\n                /* if anything goes, then 0 is a good choice */\n            }\n        }\n        if (recalc != 0) {\n            if (gfc.mode_gr == 2) {\n                this.scale_bitcount(gi);\n            } else {\n                this.scale_bitcount_lsf(gfc, gi);\n            }\n        }\n    }\n\n    function all_scalefactors_not_negative(scalefac, n) {\n        for (var i = 0; i < n; ++i) {\n            if (scalefac[i] < 0)\n                return false;\n        }\n        return true;\n    }\n\n    /**\n     * number of bits used to encode scalefacs.\n     *\n     * 18*slen1_tab[i] + 18*slen2_tab[i]\n     */\n    var scale_short = [0, 18, 36, 54, 54, 36, 54, 72,\n        54, 72, 90, 72, 90, 108, 108, 126];\n\n    /**\n     * number of bits used to encode scalefacs.\n     *\n     * 17*slen1_tab[i] + 18*slen2_tab[i]\n     */\n    var scale_mixed = [0, 18, 36, 54, 51, 35, 53, 71,\n        52, 70, 88, 69, 87, 105, 104, 122];\n\n    /**\n     * number of bits used to encode scalefacs.\n     *\n     * 11*slen1_tab[i] + 10*slen2_tab[i]\n     */\n    var scale_long = [0, 10, 20, 30, 33, 21, 31, 41, 32, 42,\n        52, 43, 53, 63, 64, 74];\n\n    /**\n     * Also calculates the number of bits necessary to code the scalefactors.\n     */\n    this.scale_bitcount = function (cod_info) {\n        var k, sfb, max_slen1 = 0, max_slen2 = 0;\n\n        /* maximum values */\n        var tab;\n        var scalefac = cod_info.scalefac;\n\n        assert(all_scalefactors_not_negative(scalefac, cod_info.sfbmax));\n\n        if (cod_info.block_type == Encoder.SHORT_TYPE) {\n            tab = scale_short;\n            if (cod_info.mixed_block_flag != 0)\n                tab = scale_mixed;\n        } else { /* block_type == 1,2,or 3 */\n            tab = scale_long;\n            if (0 == cod_info.preflag) {\n                for (sfb = 11; sfb < Encoder.SBPSY_l; sfb++)\n                    if (scalefac[sfb] < qupvt.pretab[sfb])\n                        break;\n\n                if (sfb == Encoder.SBPSY_l) {\n                    cod_info.preflag = 1;\n                    for (sfb = 11; sfb < Encoder.SBPSY_l; sfb++)\n                        scalefac[sfb] -= qupvt.pretab[sfb];\n                }\n            }\n        }\n\n        for (sfb = 0; sfb < cod_info.sfbdivide; sfb++)\n            if (max_slen1 < scalefac[sfb])\n                max_slen1 = scalefac[sfb];\n\n        for (; sfb < cod_info.sfbmax; sfb++)\n            if (max_slen2 < scalefac[sfb])\n                max_slen2 = scalefac[sfb];\n\n        /*\n         * from Takehiro TOMINAGA <tominaga@isoternet.org> 10/99 loop over *all*\n         * posible values of scalefac_compress to find the one which uses the\n         * smallest number of bits. ISO would stop at first valid index\n         */\n        cod_info.part2_length = QuantizePVT.LARGE_BITS;\n        for (k = 0; k < 16; k++) {\n            if (max_slen1 < slen1_n[k] && max_slen2 < slen2_n[k]\n                && cod_info.part2_length > tab[k]) {\n                cod_info.part2_length = tab[k];\n                cod_info.scalefac_compress = k;\n            }\n        }\n        return cod_info.part2_length == QuantizePVT.LARGE_BITS;\n    }\n\n    /**\n     * table of largest scalefactor values for MPEG2\n     */\n    var max_range_sfac_tab = [[15, 15, 7, 7],\n        [15, 15, 7, 0], [7, 3, 0, 0], [15, 31, 31, 0],\n        [7, 7, 7, 0], [3, 3, 0, 0]];\n\n    /**\n     * Also counts the number of bits to encode the scalefacs but for MPEG 2\n     * Lower sampling frequencies (24, 22.05 and 16 kHz.)\n     *\n     * This is reverse-engineered from section 2.4.3.2 of the MPEG2 IS,\n     * \"Audio Decoding Layer III\"\n     */\n    this.scale_bitcount_lsf = function (gfc, cod_info) {\n        var table_number, row_in_table, partition, nr_sfb, window;\n        var over;\n        var i, sfb;\n        var max_sfac = new_int(4);\n//var partition_table;\n        var scalefac = cod_info.scalefac;\n\n        /*\n         * Set partition table. Note that should try to use table one, but do\n         * not yet...\n         */\n        if (cod_info.preflag != 0)\n            table_number = 2;\n        else\n            table_number = 0;\n\n        for (i = 0; i < 4; i++)\n            max_sfac[i] = 0;\n\n        if (cod_info.block_type == Encoder.SHORT_TYPE) {\n            row_in_table = 1;\n            var partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\n            for (sfb = 0, partition = 0; partition < 4; partition++) {\n                nr_sfb = partition_table[partition] / 3;\n                for (i = 0; i < nr_sfb; i++, sfb++)\n                    for (window = 0; window < 3; window++)\n                        if (scalefac[sfb * 3 + window] > max_sfac[partition])\n                            max_sfac[partition] = scalefac[sfb * 3 + window];\n            }\n        } else {\n            row_in_table = 0;\n            var partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\n            for (sfb = 0, partition = 0; partition < 4; partition++) {\n                nr_sfb = partition_table[partition];\n                for (i = 0; i < nr_sfb; i++, sfb++)\n                    if (scalefac[sfb] > max_sfac[partition])\n                        max_sfac[partition] = scalefac[sfb];\n            }\n        }\n\n        for (over = false, partition = 0; partition < 4; partition++) {\n            if (max_sfac[partition] > max_range_sfac_tab[table_number][partition])\n                over = true;\n        }\n        if (!over) {\n            var slen1, slen2, slen3, slen4;\n\n            cod_info.sfb_partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\n            for (partition = 0; partition < 4; partition++)\n                cod_info.slen[partition] = log2tab[max_sfac[partition]];\n\n            /* set scalefac_compress */\n            slen1 = cod_info.slen[0];\n            slen2 = cod_info.slen[1];\n            slen3 = cod_info.slen[2];\n            slen4 = cod_info.slen[3];\n\n            switch (table_number) {\n                case 0:\n                    cod_info.scalefac_compress = (((slen1 * 5) + slen2) << 4)\n                        + (slen3 << 2) + slen4;\n                    break;\n\n                case 1:\n                    cod_info.scalefac_compress = 400 + (((slen1 * 5) + slen2) << 2)\n                        + slen3;\n                    break;\n\n                case 2:\n                    cod_info.scalefac_compress = 500 + (slen1 * 3) + slen2;\n                    break;\n\n                default:\n                    System.err.printf(\"intensity stereo not implemented yet\\n\");\n                    break;\n            }\n        }\n        if (!over) {\n            assert(cod_info.sfb_partition_table != null);\n            cod_info.part2_length = 0;\n            for (partition = 0; partition < 4; partition++)\n                cod_info.part2_length += cod_info.slen[partition]\n                    * cod_info.sfb_partition_table[partition];\n        }\n        return over;\n    }\n\n    /*\n     * Since no bands have been over-amplified, we can set scalefac_compress and\n     * slen[] for the formatter\n     */\n    var log2tab = [0, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4,\n        4, 4, 4, 4];\n\n    this.huffman_init = function (gfc) {\n        for (var i = 2; i <= 576; i += 2) {\n            var scfb_anz = 0, bv_index;\n            while (gfc.scalefac_band.l[++scfb_anz] < i)\n                ;\n\n            bv_index = subdv_table[scfb_anz][0]; // .region0_count\n            while (gfc.scalefac_band.l[bv_index + 1] > i)\n                bv_index--;\n\n            if (bv_index < 0) {\n                /*\n                 * this is an indication that everything is going to be encoded\n                 * as region0: bigvalues < region0 < region1 so lets set\n                 * region0, region1 to some value larger than bigvalues\n                 */\n                bv_index = subdv_table[scfb_anz][0]; // .region0_count\n            }\n\n            gfc.bv_scf[i - 2] = bv_index;\n\n            bv_index = subdv_table[scfb_anz][1]; // .region1_count\n            while (gfc.scalefac_band.l[bv_index + gfc.bv_scf[i - 2] + 2] > i)\n                bv_index--;\n\n            if (bv_index < 0) {\n                bv_index = subdv_table[scfb_anz][1]; // .region1_count\n            }\n\n            gfc.bv_scf[i - 1] = bv_index;\n        }\n    }\n}\n\nmodule.exports = Takehiro;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/lamejs/src/js/Takehiro.js?");

/***/ }),

/***/ "../node_modules/lamejs/src/js/VBRQuantize.js":
/*!****************************************************!*\
  !*** ../node_modules/lamejs/src/js/VBRQuantize.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function VBRQuantize() {\n    var qupvt;\n    var tak;\n\n    this.setModules = function (_qupvt, _tk) {\n        qupvt = _qupvt;\n        tak = _tk;\n    }\n    //TODO\n\n}\n\nmodule.exports = VBRQuantize;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/lamejs/src/js/VBRQuantize.js?");

/***/ }),

/***/ "../node_modules/lamejs/src/js/VBRSeekInfo.js":
/*!****************************************************!*\
  !*** ../node_modules/lamejs/src/js/VBRSeekInfo.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("//package mp3;\n\nfunction VBRSeekInfo() {\n    /**\n     * What we have seen so far.\n     */\n    this.sum = 0;\n    /**\n     * How many frames we have seen in this chunk.\n     */\n    this.seen = 0;\n    /**\n     * How many frames we want to collect into one chunk.\n     */\n    this.want = 0;\n    /**\n     * Actual position in our bag.\n     */\n    this.pos = 0;\n    /**\n     * Size of our bag.\n     */\n    this.size = 0;\n    /**\n     * Pointer to our bag.\n     */\n    this.bag = null;\n    this.nVbrNumFrames = 0;\n    this.nBytesWritten = 0;\n    /* VBR tag data */\n    this.TotalFrameSize = 0;\n}\n\nmodule.exports = VBRSeekInfo;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/lamejs/src/js/VBRSeekInfo.js?");

/***/ }),

/***/ "../node_modules/lamejs/src/js/VBRTag.js":
/*!***********************************************!*\
  !*** ../node_modules/lamejs/src/js/VBRTag.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var common = __webpack_require__(/*! ./common.js */ \"../node_modules/lamejs/src/js/common.js\");\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\n/**\n * A Vbr header may be present in the ancillary data field of the first frame of\n * an mp3 bitstream<BR>\n * The Vbr header (optionally) contains\n * <UL>\n * <LI>frames total number of audio frames in the bitstream\n * <LI>bytes total number of bytes in the bitstream\n * <LI>toc table of contents\n * </UL>\n *\n * toc (table of contents) gives seek points for random access.<BR>\n * The ith entry determines the seek point for i-percent duration.<BR>\n * seek point in bytes = (toc[i]/256.0) * total_bitstream_bytes<BR>\n * e.g. half duration seek point = (toc[50]/256.0) * total_bitstream_bytes\n */\nVBRTag.NUMTOCENTRIES = 100;\nVBRTag.MAXFRAMESIZE = 2880;\n\nfunction VBRTag() {\n\n    var lame;\n    var bs;\n    var v;\n\n    this.setModules = function (_lame, _bs, _v) {\n        lame = _lame;\n        bs = _bs;\n        v = _v;\n    };\n\n    var FRAMES_FLAG = 0x0001;\n    var BYTES_FLAG = 0x0002;\n    var TOC_FLAG = 0x0004;\n    var VBR_SCALE_FLAG = 0x0008;\n\n    var NUMTOCENTRIES = VBRTag.NUMTOCENTRIES;\n\n    /**\n     * (0xB40) the max freeformat 640 32kHz framesize.\n     */\n    var MAXFRAMESIZE = VBRTag.MAXFRAMESIZE;\n\n    /**\n     * <PRE>\n     *    4 bytes for Header Tag\n     *    4 bytes for Header Flags\n     *  100 bytes for entry (toc)\n     *    4 bytes for frame size\n     *    4 bytes for stream size\n     *    4 bytes for VBR scale. a VBR quality indicator: 0=best 100=worst\n     *   20 bytes for LAME tag.  for example, \"LAME3.12 (beta 6)\"\n     * ___________\n     *  140 bytes\n     * </PRE>\n     */\n    var VBRHEADERSIZE = (NUMTOCENTRIES + 4 + 4 + 4 + 4 + 4);\n\n    var LAMEHEADERSIZE = (VBRHEADERSIZE + 9 + 1 + 1 + 8\n    + 1 + 1 + 3 + 1 + 1 + 2 + 4 + 2 + 2);\n\n    /**\n     * The size of the Xing header MPEG-1, bit rate in kbps.\n     */\n    var XING_BITRATE1 = 128;\n    /**\n     * The size of the Xing header MPEG-2, bit rate in kbps.\n     */\n    var XING_BITRATE2 = 64;\n    /**\n     * The size of the Xing header MPEG-2.5, bit rate in kbps.\n     */\n    var XING_BITRATE25 = 32;\n\n    /**\n     * ISO-8859-1 charset for byte to string operations.\n     */\n    var ISO_8859_1 = null; //Charset.forName(\"ISO-8859-1\");\n\n    /**\n     * VBR header magic string.\n     */\n    var VBRTag0 = \"Xing\";\n    /**\n     * VBR header magic string (VBR == VBRMode.vbr_off).\n     */\n    var VBRTag1 = \"Info\";\n\n    /**\n     * Lookup table for fast CRC-16 computation. Uses the polynomial\n     * x^16+x^15+x^2+1\n     */\n    var crc16Lookup = [0x0000, 0xC0C1, 0xC181, 0x0140,\n        0xC301, 0x03C0, 0x0280, 0xC241, 0xC601, 0x06C0, 0x0780, 0xC741,\n        0x0500, 0xC5C1, 0xC481, 0x0440, 0xCC01, 0x0CC0, 0x0D80, 0xCD41,\n        0x0F00, 0xCFC1, 0xCE81, 0x0E40, 0x0A00, 0xCAC1, 0xCB81, 0x0B40,\n        0xC901, 0x09C0, 0x0880, 0xC841, 0xD801, 0x18C0, 0x1980, 0xD941,\n        0x1B00, 0xDBC1, 0xDA81, 0x1A40, 0x1E00, 0xDEC1, 0xDF81, 0x1F40,\n        0xDD01, 0x1DC0, 0x1C80, 0xDC41, 0x1400, 0xD4C1, 0xD581, 0x1540,\n        0xD701, 0x17C0, 0x1680, 0xD641, 0xD201, 0x12C0, 0x1380, 0xD341,\n        0x1100, 0xD1C1, 0xD081, 0x1040, 0xF001, 0x30C0, 0x3180, 0xF141,\n        0x3300, 0xF3C1, 0xF281, 0x3240, 0x3600, 0xF6C1, 0xF781, 0x3740,\n        0xF501, 0x35C0, 0x3480, 0xF441, 0x3C00, 0xFCC1, 0xFD81, 0x3D40,\n        0xFF01, 0x3FC0, 0x3E80, 0xFE41, 0xFA01, 0x3AC0, 0x3B80, 0xFB41,\n        0x3900, 0xF9C1, 0xF881, 0x3840, 0x2800, 0xE8C1, 0xE981, 0x2940,\n        0xEB01, 0x2BC0, 0x2A80, 0xEA41, 0xEE01, 0x2EC0, 0x2F80, 0xEF41,\n        0x2D00, 0xEDC1, 0xEC81, 0x2C40, 0xE401, 0x24C0, 0x2580, 0xE541,\n        0x2700, 0xE7C1, 0xE681, 0x2640, 0x2200, 0xE2C1, 0xE381, 0x2340,\n        0xE101, 0x21C0, 0x2080, 0xE041, 0xA001, 0x60C0, 0x6180, 0xA141,\n        0x6300, 0xA3C1, 0xA281, 0x6240, 0x6600, 0xA6C1, 0xA781, 0x6740,\n        0xA501, 0x65C0, 0x6480, 0xA441, 0x6C00, 0xACC1, 0xAD81, 0x6D40,\n        0xAF01, 0x6FC0, 0x6E80, 0xAE41, 0xAA01, 0x6AC0, 0x6B80, 0xAB41,\n        0x6900, 0xA9C1, 0xA881, 0x6840, 0x7800, 0xB8C1, 0xB981, 0x7940,\n        0xBB01, 0x7BC0, 0x7A80, 0xBA41, 0xBE01, 0x7EC0, 0x7F80, 0xBF41,\n        0x7D00, 0xBDC1, 0xBC81, 0x7C40, 0xB401, 0x74C0, 0x7580, 0xB541,\n        0x7700, 0xB7C1, 0xB681, 0x7640, 0x7200, 0xB2C1, 0xB381, 0x7340,\n        0xB101, 0x71C0, 0x7080, 0xB041, 0x5000, 0x90C1, 0x9181, 0x5140,\n        0x9301, 0x53C0, 0x5280, 0x9241, 0x9601, 0x56C0, 0x5780, 0x9741,\n        0x5500, 0x95C1, 0x9481, 0x5440, 0x9C01, 0x5CC0, 0x5D80, 0x9D41,\n        0x5F00, 0x9FC1, 0x9E81, 0x5E40, 0x5A00, 0x9AC1, 0x9B81, 0x5B40,\n        0x9901, 0x59C0, 0x5880, 0x9841, 0x8801, 0x48C0, 0x4980, 0x8941,\n        0x4B00, 0x8BC1, 0x8A81, 0x4A40, 0x4E00, 0x8EC1, 0x8F81, 0x4F40,\n        0x8D01, 0x4DC0, 0x4C80, 0x8C41, 0x4400, 0x84C1, 0x8581, 0x4540,\n        0x8701, 0x47C0, 0x4680, 0x8641, 0x8201, 0x42C0, 0x4380, 0x8341,\n        0x4100, 0x81C1, 0x8081, 0x4040];\n\n    /***********************************************************************\n     * Robert Hegemann 2001-01-17\n     ***********************************************************************/\n\n    function addVbr(v, bitrate) {\n        v.nVbrNumFrames++;\n        v.sum += bitrate;\n        v.seen++;\n\n        if (v.seen < v.want) {\n            return;\n        }\n\n        if (v.pos < v.size) {\n            v.bag[v.pos] = v.sum;\n            v.pos++;\n            v.seen = 0;\n        }\n        if (v.pos == v.size) {\n            for (var i = 1; i < v.size; i += 2) {\n                v.bag[i / 2] = v.bag[i];\n            }\n            v.want *= 2;\n            v.pos /= 2;\n        }\n    }\n\n    function xingSeekTable(v, t) {\n        if (v.pos <= 0)\n            return;\n\n        for (var i = 1; i < NUMTOCENTRIES; ++i) {\n            var j = i / NUMTOCENTRIES, act, sum;\n            var indx = 0 | (Math.floor(j * v.pos));\n            if (indx > v.pos - 1)\n                indx = v.pos - 1;\n            act = v.bag[indx];\n            sum = v.sum;\n            var seek_point = 0 | (256. * act / sum);\n            if (seek_point > 255)\n                seek_point = 255;\n            t[i] = 0xff & seek_point;\n        }\n    }\n\n    /**\n     * Add VBR entry, used to fill the VBR TOC entries.\n     *\n     * @param gfp\n     *            global flags\n     */\n    this.addVbrFrame = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var kbps = Tables.bitrate_table[gfp.version][gfc.bitrate_index];\n        assert(gfc.VBR_seek_table.bag != null);\n        addVbr(gfc.VBR_seek_table, kbps);\n    }\n\n    /**\n     * Read big endian integer (4-bytes) from header.\n     *\n     * @param buf\n     *            header containing the integer\n     * @param bufPos\n     *            offset into the header\n     * @return extracted integer\n     */\n    function extractInteger(buf, bufPos) {\n        var x = buf[bufPos + 0] & 0xff;\n        x <<= 8;\n        x |= buf[bufPos + 1] & 0xff;\n        x <<= 8;\n        x |= buf[bufPos + 2] & 0xff;\n        x <<= 8;\n        x |= buf[bufPos + 3] & 0xff;\n        return x;\n    }\n\n    /**\n     * Write big endian integer (4-bytes) in the header.\n     *\n     * @param buf\n     *            header to write the integer into\n     * @param bufPos\n     *            offset into the header\n     * @param value\n     *            integer value to write\n     */\n    function createInteger(buf, bufPos, value) {\n        buf[bufPos + 0] = 0xff & ((value >> 24) & 0xff);\n        buf[bufPos + 1] = 0xff & ((value >> 16) & 0xff);\n        buf[bufPos + 2] = 0xff & ((value >> 8) & 0xff);\n        buf[bufPos + 3] = 0xff & (value & 0xff);\n    }\n\n    /**\n     * Write big endian short (2-bytes) in the header.\n     *\n     * @param buf\n     *            header to write the integer into\n     * @param bufPos\n     *            offset into the header\n     * @param value\n     *            integer value to write\n     */\n    function createShort(buf, bufPos, value) {\n        buf[bufPos + 0] = 0xff & ((value >> 8) & 0xff);\n        buf[bufPos + 1] = 0xff & (value & 0xff);\n    }\n\n    /**\n     * Check for magic strings (Xing/Info).\n     *\n     * @param buf\n     *            header to check\n     * @param bufPos\n     *            header offset to check\n     * @return magic string found\n     */\n    function isVbrTag(buf, bufPos) {\n        return new String(buf, bufPos, VBRTag0.length(), ISO_8859_1)\n                .equals(VBRTag0)\n            || new String(buf, bufPos, VBRTag1.length(), ISO_8859_1)\n                .equals(VBRTag1);\n    }\n\n    function shiftInBitsValue(x, n, v) {\n        return 0xff & ((x << n) | (v & ~(-1 << n)));\n    }\n\n    /**\n     * Construct the MP3 header using the settings of the global flags.\n     *\n     * <img src=\"1000px-Mp3filestructure.svg.png\">\n     *\n     * @param gfp\n     *            global flags\n     * @param buffer\n     *            header\n     */\n    function setLameTagFrameHeader(gfp, buffer) {\n        var gfc = gfp.internal_flags;\n\n        // MP3 Sync Word\n        buffer[0] = shiftInBitsValue(buffer[0], 8, 0xff);\n\n        buffer[1] = shiftInBitsValue(buffer[1], 3, 7);\n        buffer[1] = shiftInBitsValue(buffer[1], 1,\n            (gfp.out_samplerate < 16000) ? 0 : 1);\n        // Version\n        buffer[1] = shiftInBitsValue(buffer[1], 1, gfp.version);\n        // 01 == Layer 3\n        buffer[1] = shiftInBitsValue(buffer[1], 2, 4 - 3);\n        // Error protection\n        buffer[1] = shiftInBitsValue(buffer[1], 1, (!gfp.error_protection) ? 1\n            : 0);\n\n        // Bit rate\n        buffer[2] = shiftInBitsValue(buffer[2], 4, gfc.bitrate_index);\n        // Frequency\n        buffer[2] = shiftInBitsValue(buffer[2], 2, gfc.samplerate_index);\n        // Pad. Bit\n        buffer[2] = shiftInBitsValue(buffer[2], 1, 0);\n        // Priv. Bit\n        buffer[2] = shiftInBitsValue(buffer[2], 1, gfp.extension);\n\n        // Mode\n        buffer[3] = shiftInBitsValue(buffer[3], 2, gfp.mode.ordinal());\n        // Mode extension (Used with Joint Stereo)\n        buffer[3] = shiftInBitsValue(buffer[3], 2, gfc.mode_ext);\n        // Copy\n        buffer[3] = shiftInBitsValue(buffer[3], 1, gfp.copyright);\n        // Original\n        buffer[3] = shiftInBitsValue(buffer[3], 1, gfp.original);\n        // Emphasis\n        buffer[3] = shiftInBitsValue(buffer[3], 2, gfp.emphasis);\n\n        /* the default VBR header. 48 kbps layer III, no padding, no crc */\n        /* but sampling freq, mode and copyright/copy protection taken */\n        /* from first valid frame */\n        buffer[0] = 0xff;\n        var abyte = 0xff & (buffer[1] & 0xf1);\n        var bitrate;\n        if (1 == gfp.version) {\n            bitrate = XING_BITRATE1;\n        } else {\n            if (gfp.out_samplerate < 16000)\n                bitrate = XING_BITRATE25;\n            else\n                bitrate = XING_BITRATE2;\n        }\n\n        if (gfp.VBR == VbrMode.vbr_off)\n            bitrate = gfp.brate;\n\n        var bbyte;\n        if (gfp.free_format)\n            bbyte = 0x00;\n        else\n            bbyte = 0xff & (16 * lame.BitrateIndex(bitrate, gfp.version,\n                    gfp.out_samplerate));\n\n        /*\n         * Use as much of the info from the real frames in the Xing header:\n         * samplerate, channels, crc, etc...\n         */\n        if (gfp.version == 1) {\n            /* MPEG1 */\n            buffer[1] = 0xff & (abyte | 0x0a);\n            /* was 0x0b; */\n            abyte = 0xff & (buffer[2] & 0x0d);\n            /* AF keep also private bit */\n            buffer[2] = 0xff & (bbyte | abyte);\n            /* 64kbs MPEG1 frame */\n        } else {\n            /* MPEG2 */\n            buffer[1] = 0xff & (abyte | 0x02);\n            /* was 0x03; */\n            abyte = 0xff & (buffer[2] & 0x0d);\n            /* AF keep also private bit */\n            buffer[2] = 0xff & (bbyte | abyte);\n            /* 64kbs MPEG2 frame */\n        }\n    }\n\n    /**\n     * Get VBR tag information\n     *\n     * @param buf\n     *            header to analyze\n     * @param bufPos\n     *            offset into the header\n     * @return VBR tag data\n     */\n    this.getVbrTag = function (buf) {\n        var pTagData = new VBRTagData();\n        var bufPos = 0;\n\n        /* get Vbr header data */\n        pTagData.flags = 0;\n\n        /* get selected MPEG header data */\n        var hId = (buf[bufPos + 1] >> 3) & 1;\n        var hSrIndex = (buf[bufPos + 2] >> 2) & 3;\n        var hMode = (buf[bufPos + 3] >> 6) & 3;\n        var hBitrate = ((buf[bufPos + 2] >> 4) & 0xf);\n        hBitrate = Tables.bitrate_table[hId][hBitrate];\n\n        /* check for FFE syncword */\n        if ((buf[bufPos + 1] >> 4) == 0xE)\n            pTagData.samprate = Tables.samplerate_table[2][hSrIndex];\n        else\n            pTagData.samprate = Tables.samplerate_table[hId][hSrIndex];\n\n        /* determine offset of header */\n        if (hId != 0) {\n            /* mpeg1 */\n            if (hMode != 3)\n                bufPos += (32 + 4);\n            else\n                bufPos += (17 + 4);\n        } else {\n            /* mpeg2 */\n            if (hMode != 3)\n                bufPos += (17 + 4);\n            else\n                bufPos += (9 + 4);\n        }\n\n        if (!isVbrTag(buf, bufPos))\n            return null;\n\n        bufPos += 4;\n\n        pTagData.hId = hId;\n\n        /* get flags */\n        var head_flags = pTagData.flags = extractInteger(buf, bufPos);\n        bufPos += 4;\n\n        if ((head_flags & FRAMES_FLAG) != 0) {\n            pTagData.frames = extractInteger(buf, bufPos);\n            bufPos += 4;\n        }\n\n        if ((head_flags & BYTES_FLAG) != 0) {\n            pTagData.bytes = extractInteger(buf, bufPos);\n            bufPos += 4;\n        }\n\n        if ((head_flags & TOC_FLAG) != 0) {\n            if (pTagData.toc != null) {\n                for (var i = 0; i < NUMTOCENTRIES; i++)\n                    pTagData.toc[i] = buf[bufPos + i];\n            }\n            bufPos += NUMTOCENTRIES;\n        }\n\n        pTagData.vbrScale = -1;\n\n        if ((head_flags & VBR_SCALE_FLAG) != 0) {\n            pTagData.vbrScale = extractInteger(buf, bufPos);\n            bufPos += 4;\n        }\n\n        pTagData.headersize = ((hId + 1) * 72000 * hBitrate)\n            / pTagData.samprate;\n\n        bufPos += 21;\n        var encDelay = buf[bufPos + 0] << 4;\n        encDelay += buf[bufPos + 1] >> 4;\n        var encPadding = (buf[bufPos + 1] & 0x0F) << 8;\n        encPadding += buf[bufPos + 2] & 0xff;\n        /* check for reasonable values (this may be an old Xing header, */\n        /* not a INFO tag) */\n        if (encDelay < 0 || encDelay > 3000)\n            encDelay = -1;\n        if (encPadding < 0 || encPadding > 3000)\n            encPadding = -1;\n\n        pTagData.encDelay = encDelay;\n        pTagData.encPadding = encPadding;\n\n        /* success */\n        return pTagData;\n    }\n\n    /**\n     * Initializes the header\n     *\n     * @param gfp\n     *            global flags\n     */\n    this.InitVbrTag = function (gfp) {\n        var gfc = gfp.internal_flags;\n\n        /**\n         * <PRE>\n         * Xing VBR pretends to be a 48kbs layer III frame.  (at 44.1kHz).\n         * (at 48kHz they use 56kbs since 48kbs frame not big enough for\n         * table of contents)\n         * let's always embed Xing header inside a 64kbs layer III frame.\n         * this gives us enough room for a LAME version string too.\n         * size determined by sampling frequency (MPEG1)\n         * 32kHz:    216 bytes@48kbs    288bytes@ 64kbs\n         * 44.1kHz:  156 bytes          208bytes@64kbs     (+1 if padding = 1)\n         * 48kHz:    144 bytes          192\n         *\n         * MPEG 2 values are the same since the framesize and samplerate\n         * are each reduced by a factor of 2.\n         * </PRE>\n         */\n        var kbps_header;\n        if (1 == gfp.version) {\n            kbps_header = XING_BITRATE1;\n        } else {\n            if (gfp.out_samplerate < 16000)\n                kbps_header = XING_BITRATE25;\n            else\n                kbps_header = XING_BITRATE2;\n        }\n\n        if (gfp.VBR == VbrMode.vbr_off)\n            kbps_header = gfp.brate;\n\n        // make sure LAME Header fits into Frame\n        var totalFrameSize = ((gfp.version + 1) * 72000 * kbps_header)\n            / gfp.out_samplerate;\n        var headerSize = (gfc.sideinfo_len + LAMEHEADERSIZE);\n        gfc.VBR_seek_table.TotalFrameSize = totalFrameSize;\n        if (totalFrameSize < headerSize || totalFrameSize > MAXFRAMESIZE) {\n            /* disable tag, it wont fit */\n            gfp.bWriteVbrTag = false;\n            return;\n        }\n\n        gfc.VBR_seek_table.nVbrNumFrames = 0;\n        gfc.VBR_seek_table.nBytesWritten = 0;\n        gfc.VBR_seek_table.sum = 0;\n\n        gfc.VBR_seek_table.seen = 0;\n        gfc.VBR_seek_table.want = 1;\n        gfc.VBR_seek_table.pos = 0;\n\n        if (gfc.VBR_seek_table.bag == null) {\n            gfc.VBR_seek_table.bag = new int[400];\n            gfc.VBR_seek_table.size = 400;\n        }\n\n        // write dummy VBR tag of all 0's into bitstream\n        var buffer = new_byte(MAXFRAMESIZE);\n\n        setLameTagFrameHeader(gfp, buffer);\n        var n = gfc.VBR_seek_table.TotalFrameSize;\n        for (var i = 0; i < n; ++i) {\n            bs.add_dummy_byte(gfp, buffer[i] & 0xff, 1);\n        }\n    }\n\n    /**\n     * Fast CRC-16 computation (uses table crc16Lookup).\n     *\n     * @param value\n     * @param crc\n     * @return\n     */\n    function crcUpdateLookup(value, crc) {\n        var tmp = crc ^ value;\n        crc = (crc >> 8) ^ crc16Lookup[tmp & 0xff];\n        return crc;\n    }\n\n    this.updateMusicCRC = function (crc, buffer, bufferPos, size) {\n        for (var i = 0; i < size; ++i)\n            crc[0] = crcUpdateLookup(buffer[bufferPos + i], crc[0]);\n    }\n\n    /**\n     * Write LAME info: mini version + info on various switches used (Jonathan\n     * Dee 2001/08/31).\n     *\n     * @param gfp\n     *            global flags\n     * @param musicLength\n     *            music length\n     * @param streamBuffer\n     *            pointer to output buffer\n     * @param streamBufferPos\n     *            offset into the output buffer\n     * @param crc\n     *            computation of CRC-16 of Lame Tag so far (starting at frame\n     *            sync)\n     * @return number of bytes written to the stream\n     */\n    function putLameVBR(gfp, musicLength, streamBuffer, streamBufferPos, crc) {\n        var gfc = gfp.internal_flags;\n        var bytesWritten = 0;\n\n        /* encoder delay */\n        var encDelay = gfp.encoder_delay;\n        /* encoder padding */\n        var encPadding = gfp.encoder_padding;\n\n        /* recall: gfp.VBR_q is for example set by the switch -V */\n        /* gfp.quality by -q, -h, -f, etc */\n        var quality = (100 - 10 * gfp.VBR_q - gfp.quality);\n\n        var version = v.getLameVeryShortVersion();\n        var vbr;\n        var revision = 0x00;\n        var revMethod;\n        // numbering different in vbr_mode vs. Lame tag\n        var vbrTypeTranslator = [1, 5, 3, 2, 4, 0, 3];\n        var lowpass = 0 | (((gfp.lowpassfreq / 100.0) + .5) > 255 ? 255\n                : (gfp.lowpassfreq / 100.0) + .5);\n        var peakSignalAmplitude = 0;\n        var radioReplayGain = 0;\n        var audiophileReplayGain = 0;\n        var noiseShaping = gfp.internal_flags.noise_shaping;\n        var stereoMode = 0;\n        var nonOptimal = 0;\n        var sourceFreq = 0;\n        var misc = 0;\n        var musicCRC = 0;\n\n        // psy model type: Gpsycho or NsPsytune\n        var expNPsyTune = (gfp.exp_nspsytune & 1) != 0;\n        var safeJoint = (gfp.exp_nspsytune & 2) != 0;\n        var noGapMore = false;\n        var noGapPrevious = false;\n        var noGapCount = gfp.internal_flags.nogap_total;\n        var noGapCurr = gfp.internal_flags.nogap_current;\n\n        // 4 bits\n        var athType = gfp.ATHtype;\n        var flags = 0;\n\n        // vbr modes\n        var abrBitrate;\n        switch (gfp.VBR) {\n            case vbr_abr:\n                abrBitrate = gfp.VBR_mean_bitrate_kbps;\n                break;\n            case vbr_off:\n                abrBitrate = gfp.brate;\n                break;\n            default:\n                abrBitrate = gfp.VBR_min_bitrate_kbps;\n        }\n\n        // revision and vbr method\n        if (gfp.VBR.ordinal() < vbrTypeTranslator.length)\n            vbr = vbrTypeTranslator[gfp.VBR.ordinal()];\n        else\n            vbr = 0x00; // unknown\n\n        revMethod = 0x10 * revision + vbr;\n\n        // ReplayGain\n        if (gfc.findReplayGain) {\n            if (gfc.RadioGain > 0x1FE)\n                gfc.RadioGain = 0x1FE;\n            if (gfc.RadioGain < -0x1FE)\n                gfc.RadioGain = -0x1FE;\n\n            // set name code\n            radioReplayGain = 0x2000;\n            // set originator code to `determined automatically'\n            radioReplayGain |= 0xC00;\n\n            if (gfc.RadioGain >= 0) {\n                // set gain adjustment\n                radioReplayGain |= gfc.RadioGain;\n            } else {\n                // set the sign bit\n                radioReplayGain |= 0x200;\n                // set gain adjustment\n                radioReplayGain |= -gfc.RadioGain;\n            }\n        }\n\n        // peak sample\n        if (gfc.findPeakSample)\n            peakSignalAmplitude = Math\n                .abs(0 | ((( gfc.PeakSample) / 32767.0) * Math.pow(2, 23) + .5));\n\n        // nogap\n        if (noGapCount != -1) {\n            if (noGapCurr > 0)\n                noGapPrevious = true;\n\n            if (noGapCurr < noGapCount - 1)\n                noGapMore = true;\n        }\n\n        // flags\n        flags = athType + ((expNPsyTune ? 1 : 0) << 4)\n            + ((safeJoint ? 1 : 0) << 5) + ((noGapMore ? 1 : 0) << 6)\n            + ((noGapPrevious ? 1 : 0) << 7);\n\n        if (quality < 0)\n            quality = 0;\n\n        // stereo mode field (Intensity stereo is not implemented)\n        switch (gfp.mode) {\n            case MONO:\n                stereoMode = 0;\n                break;\n            case STEREO:\n                stereoMode = 1;\n                break;\n            case DUAL_CHANNEL:\n                stereoMode = 2;\n                break;\n            case JOINT_STEREO:\n                if (gfp.force_ms)\n                    stereoMode = 4;\n                else\n                    stereoMode = 3;\n                break;\n            case NOT_SET:\n            //$FALL-THROUGH$\n            default:\n                stereoMode = 7;\n                break;\n        }\n\n        if (gfp.in_samplerate <= 32000)\n            sourceFreq = 0x00;\n        else if (gfp.in_samplerate == 48000)\n            sourceFreq = 0x02;\n        else if (gfp.in_samplerate > 48000)\n            sourceFreq = 0x03;\n        else {\n            // default is 44100Hz\n            sourceFreq = 0x01;\n        }\n\n        // Check if the user overrided the default LAME behavior with some\n        // nasty options\n        if (gfp.short_blocks == ShortBlock.short_block_forced\n            || gfp.short_blocks == ShortBlock.short_block_dispensed\n            || ((gfp.lowpassfreq == -1) && (gfp.highpassfreq == -1)) || /* \"-k\" */\n            (gfp.scale_left < gfp.scale_right)\n            || (gfp.scale_left > gfp.scale_right)\n            || (gfp.disable_reservoir && gfp.brate < 320) || gfp.noATH\n            || gfp.ATHonly || (athType == 0) || gfp.in_samplerate <= 32000)\n            nonOptimal = 1;\n\n        misc = noiseShaping + (stereoMode << 2) + (nonOptimal << 5)\n            + (sourceFreq << 6);\n\n        musicCRC = gfc.nMusicCRC;\n\n        // Write all this information into the stream\n\n        createInteger(streamBuffer, streamBufferPos + bytesWritten, quality);\n        bytesWritten += 4;\n\n        for (var j = 0; j < 9; j++) {\n            streamBuffer[streamBufferPos + bytesWritten + j] = 0xff & version .charAt(j);\n        }\n        bytesWritten += 9;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & revMethod;\n        bytesWritten++;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & lowpass;\n        bytesWritten++;\n\n        createInteger(streamBuffer, streamBufferPos + bytesWritten,\n            peakSignalAmplitude);\n        bytesWritten += 4;\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten,\n            radioReplayGain);\n        bytesWritten += 2;\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten,\n            audiophileReplayGain);\n        bytesWritten += 2;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & flags;\n        bytesWritten++;\n\n        if (abrBitrate >= 255)\n            streamBuffer[streamBufferPos + bytesWritten] = 0xFF;\n        else\n            streamBuffer[streamBufferPos + bytesWritten] = 0xff & abrBitrate;\n        bytesWritten++;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & (encDelay >> 4);\n        streamBuffer[streamBufferPos + bytesWritten + 1] = 0xff & ((encDelay << 4) + (encPadding >> 8));\n        streamBuffer[streamBufferPos + bytesWritten + 2] = 0xff & encPadding;\n\n        bytesWritten += 3;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & misc;\n        bytesWritten++;\n\n        // unused in rev0\n        streamBuffer[streamBufferPos + bytesWritten++] = 0;\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten, gfp.preset);\n        bytesWritten += 2;\n\n        createInteger(streamBuffer, streamBufferPos + bytesWritten, musicLength);\n        bytesWritten += 4;\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten, musicCRC);\n        bytesWritten += 2;\n\n        // Calculate tag CRC.... must be done here, since it includes previous\n        // information\n\n        for (var i = 0; i < bytesWritten; i++)\n            crc = crcUpdateLookup(streamBuffer[streamBufferPos + i], crc);\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten, crc);\n        bytesWritten += 2;\n\n        return bytesWritten;\n    }\n\n    function skipId3v2(fpStream) {\n        // seek to the beginning of the stream\n        fpStream.seek(0);\n        // read 10 bytes in case there's an ID3 version 2 header here\n        var id3v2Header = new_byte(10);\n        fpStream.readFully(id3v2Header);\n        /* does the stream begin with the ID3 version 2 file identifier? */\n        var id3v2TagSize;\n        if (!new String(id3v2Header, \"ISO-8859-1\").startsWith(\"ID3\")) {\n            /*\n             * the tag size (minus the 10-byte header) is encoded into four\n             * bytes where the most significant bit is clear in each byte\n             */\n            id3v2TagSize = (((id3v2Header[6] & 0x7f) << 21)\n                | ((id3v2Header[7] & 0x7f) << 14)\n                | ((id3v2Header[8] & 0x7f) << 7) | (id3v2Header[9] & 0x7f))\n                + id3v2Header.length;\n        } else {\n            /* no ID3 version 2 tag in this stream */\n            id3v2TagSize = 0;\n        }\n        return id3v2TagSize;\n    }\n\n    this.getLameTagFrame = function (gfp, buffer) {\n        var gfc = gfp.internal_flags;\n\n        if (!gfp.bWriteVbrTag) {\n            return 0;\n        }\n        if (gfc.Class_ID != Lame.LAME_ID) {\n            return 0;\n        }\n        if (gfc.VBR_seek_table.pos <= 0) {\n            return 0;\n        }\n        if (buffer.length < gfc.VBR_seek_table.TotalFrameSize) {\n            return gfc.VBR_seek_table.TotalFrameSize;\n        }\n\n        Arrays.fill(buffer, 0, gfc.VBR_seek_table.TotalFrameSize, 0);\n\n        // 4 bytes frame header\n        setLameTagFrameHeader(gfp, buffer);\n\n        // Create TOC entries\n        var toc = new_byte(NUMTOCENTRIES);\n\n        if (gfp.free_format) {\n            for (var i = 1; i < NUMTOCENTRIES; ++i)\n                toc[i] = 0xff & (255 * i / 100);\n        } else {\n            xingSeekTable(gfc.VBR_seek_table, toc);\n        }\n\n        // Start writing the tag after the zero frame\n        var streamIndex = gfc.sideinfo_len;\n        /**\n         * Note: Xing header specifies that Xing data goes in the ancillary data\n         * with NO ERROR PROTECTION. If error protecton in enabled, the Xing\n         * data still starts at the same offset, and now it is in sideinfo data\n         * block, and thus will not decode correctly by non-Xing tag aware\n         * players\n         */\n        if (gfp.error_protection)\n            streamIndex -= 2;\n\n        // Put Vbr tag\n        if (gfp.VBR == VbrMode.vbr_off) {\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(0);\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(1);\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(2);\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(3);\n\n        } else {\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(0);\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(1);\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(2);\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(3);\n        }\n\n        // Put header flags\n        createInteger(buffer, streamIndex, FRAMES_FLAG + BYTES_FLAG + TOC_FLAG\n            + VBR_SCALE_FLAG);\n        streamIndex += 4;\n\n        // Put Total Number of frames\n        createInteger(buffer, streamIndex, gfc.VBR_seek_table.nVbrNumFrames);\n        streamIndex += 4;\n\n        // Put total audio stream size, including Xing/LAME Header\n        var streamSize = (gfc.VBR_seek_table.nBytesWritten + gfc.VBR_seek_table.TotalFrameSize);\n        createInteger(buffer, streamIndex, 0 | streamSize);\n        streamIndex += 4;\n\n        /* Put TOC */\n        System.arraycopy(toc, 0, buffer, streamIndex, toc.length);\n        streamIndex += toc.length;\n\n        if (gfp.error_protection) {\n            // (jo) error_protection: add crc16 information to header\n            bs.CRC_writeheader(gfc, buffer);\n        }\n\n        // work out CRC so far: initially crc = 0\n        var crc = 0x00;\n        for (var i = 0; i < streamIndex; i++)\n            crc = crcUpdateLookup(buffer[i], crc);\n        // Put LAME VBR info\n        streamIndex += putLameVBR(gfp, streamSize, buffer, streamIndex, crc);\n\n        return gfc.VBR_seek_table.TotalFrameSize;\n    }\n\n    /**\n     * Write final VBR tag to the file.\n     *\n     * @param gfp\n     *            global flags\n     * @param stream\n     *            stream to add the VBR tag to\n     * @return 0 (OK), -1 else\n     * @throws IOException\n     *             I/O error\n     */\n    this.putVbrTag = function (gfp, stream) {\n        var gfc = gfp.internal_flags;\n\n        if (gfc.VBR_seek_table.pos <= 0)\n            return -1;\n\n        // Seek to end of file\n        stream.seek(stream.length());\n\n        // Get file size, abort if file has zero length.\n        if (stream.length() == 0)\n            return -1;\n\n        // The VBR tag may NOT be located at the beginning of the stream. If an\n        // ID3 version 2 tag was added, then it must be skipped to write the VBR\n        // tag data.\n        var id3v2TagSize = skipId3v2(stream);\n\n        // Seek to the beginning of the stream\n        stream.seek(id3v2TagSize);\n\n        var buffer = new_byte(MAXFRAMESIZE);\n        var bytes = getLameTagFrame(gfp, buffer);\n        if (bytes > buffer.length) {\n            return -1;\n        }\n\n        if (bytes < 1) {\n            return 0;\n        }\n\n        // Put it all to disk again\n        stream.write(buffer, 0, bytes);\n        // success\n        return 0;\n    }\n\n}\n\nmodule.exports = VBRTag;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/lamejs/src/js/VBRTag.js?");

/***/ }),

/***/ "../node_modules/lamejs/src/js/Version.js":
/*!************************************************!*\
  !*** ../node_modules/lamejs/src/js/Version.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function Version() {\n\n    /**\n     * URL for the LAME website.\n     */\n    var LAME_URL = \"http://www.mp3dev.org/\";\n\n    /**\n     * Major version number.\n     */\n    var LAME_MAJOR_VERSION = 3;\n    /**\n     * Minor version number.\n     */\n    var LAME_MINOR_VERSION = 98;\n    /**\n     * Patch level.\n     */\n    var LAME_PATCH_VERSION = 4;\n\n    /**\n     * Major version number.\n     */\n    var PSY_MAJOR_VERSION = 0;\n    /**\n     * Minor version number.\n     */\n    var PSY_MINOR_VERSION = 93;\n\n    /**\n     * A string which describes the version of LAME.\n     *\n     * @return string which describes the version of LAME\n     */\n    this.getLameVersion = function () {\n        // primary to write screen reports\n        return (LAME_MAJOR_VERSION + \".\" + LAME_MINOR_VERSION + \".\" + LAME_PATCH_VERSION);\n    }\n\n    /**\n     * The short version of the LAME version string.\n     *\n     * @return short version of the LAME version string\n     */\n    this.getLameShortVersion = function () {\n        // Adding date and time to version string makes it harder for output\n        // validation\n        return (LAME_MAJOR_VERSION + \".\" + LAME_MINOR_VERSION + \".\" + LAME_PATCH_VERSION);\n    }\n\n    /**\n     * The shortest version of the LAME version string.\n     *\n     * @return shortest version of the LAME version string\n     */\n    this.getLameVeryShortVersion = function () {\n        // Adding date and time to version string makes it harder for output\n        return (\"LAME\" + LAME_MAJOR_VERSION + \".\" + LAME_MINOR_VERSION + \"r\");\n    }\n\n    /**\n     * String which describes the version of GPSYCHO\n     *\n     * @return string which describes the version of GPSYCHO\n     */\n    this.getPsyVersion = function () {\n        return (PSY_MAJOR_VERSION + \".\" + PSY_MINOR_VERSION);\n    }\n\n    /**\n     * String which is a URL for the LAME website.\n     *\n     * @return string which is a URL for the LAME website\n     */\n    this.getLameUrl = function () {\n        return LAME_URL;\n    }\n\n    /**\n     * Quite useless for a java version, however we are compatible ;-)\n     *\n     * @return \"32bits\"\n     */\n    this.getLameOsBitness = function () {\n        return \"32bits\";\n    }\n\n}\n\nmodule.exports = Version;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/lamejs/src/js/Version.js?");

/***/ }),

/***/ "../node_modules/lamejs/src/js/common.js":
/*!***********************************************!*\
  !*** ../node_modules/lamejs/src/js/common.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function new_byte(count) {\n    return new Int8Array(count);\n}\n\nfunction new_short(count) {\n    return new Int16Array(count);\n}\n\nfunction new_int(count) {\n    return new Int32Array(count);\n}\n\nfunction new_float(count) {\n    return new Float32Array(count);\n}\n\nfunction new_double(count) {\n    return new Float64Array(count);\n}\n\nfunction new_float_n(args) {\n    if (args.length == 1) {\n        return new_float(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_float_n(args));\n    }\n    return A;\n}\nfunction new_int_n(args) {\n    if (args.length == 1) {\n        return new_int(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_int_n(args));\n    }\n    return A;\n}\n\nfunction new_short_n(args) {\n    if (args.length == 1) {\n        return new_short(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_short_n(args));\n    }\n    return A;\n}\n\nfunction new_array_n(args) {\n    if (args.length == 1) {\n        return new Array(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_array_n(args));\n    }\n    return A;\n}\n\n\nvar Arrays = {};\n\nArrays.fill = function (a, fromIndex, toIndex, val) {\n    if (arguments.length == 2) {\n        for (var i = 0; i < a.length; i++) {\n            a[i] = arguments[1];\n        }\n    } else {\n        for (var i = fromIndex; i < toIndex; i++) {\n            a[i] = val;\n        }\n    }\n};\n\nvar System = {};\n\nSystem.arraycopy = function (src, srcPos, dest, destPos, length) {\n    var srcEnd = srcPos + length;\n    while (srcPos < srcEnd)\n        dest[destPos++] = src[srcPos++];\n};\n\n\nvar Util = {};\nUtil.SQRT2 = 1.41421356237309504880;\nUtil.FAST_LOG10 = function (x) {\n    return Math.log10(x);\n};\n\nUtil.FAST_LOG10_X = function (x, y) {\n    return Math.log10(x) * y;\n};\n\nfunction ShortBlock(ordinal) {\n    this.ordinal = ordinal;\n}\n/**\n * LAME may use them, even different block types for L/R.\n */\nShortBlock.short_block_allowed = new ShortBlock(0);\n/**\n * LAME may use them, but always same block types in L/R.\n */\nShortBlock.short_block_coupled = new ShortBlock(1);\n/**\n * LAME will not use short blocks, long blocks only.\n */\nShortBlock.short_block_dispensed = new ShortBlock(2);\n/**\n * LAME will not use long blocks, short blocks only.\n */\nShortBlock.short_block_forced = new ShortBlock(3);\n\nvar Float = {};\nFloat.MAX_VALUE = 3.4028235e+38;\n\nfunction VbrMode(ordinal) {\n    this.ordinal = ordinal;\n}\nVbrMode.vbr_off = new VbrMode(0);\nVbrMode.vbr_mt = new VbrMode(1);\nVbrMode.vbr_rh = new VbrMode(2);\nVbrMode.vbr_abr = new VbrMode(3);\nVbrMode.vbr_mtrh = new VbrMode(4);\nVbrMode.vbr_default = VbrMode.vbr_mtrh;\n\nvar assert = function (x) {\n    //console.assert(x);\n};\n\nmodule.exports = {\n    \"System\": System,\n    \"VbrMode\": VbrMode,\n    \"Float\": Float,\n    \"ShortBlock\": ShortBlock,\n    \"Util\": Util,\n    \"Arrays\": Arrays,\n    \"new_array_n\": new_array_n,\n    \"new_byte\": new_byte,\n    \"new_double\": new_double,\n    \"new_float\": new_float,\n    \"new_float_n\": new_float_n,\n    \"new_int\": new_int,\n    \"new_int_n\": new_int_n,\n    \"new_short\": new_short,\n    \"new_short_n\": new_short_n,\n    \"assert\": assert\n};\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/lamejs/src/js/common.js?");

/***/ }),

/***/ "../node_modules/lamejs/src/js/index.js":
/*!**********************************************!*\
  !*** ../node_modules/lamejs/src/js/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var common = __webpack_require__(/*! ./common.js */ \"../node_modules/lamejs/src/js/common.js\");\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nLame = __webpack_require__(/*! ./Lame.js */ \"../node_modules/lamejs/src/js/Lame.js\");\nPresets = __webpack_require__(/*! ./Presets.js */ \"../node_modules/lamejs/src/js/Presets.js\");\nGainAnalysis = __webpack_require__(/*! ./GainAnalysis.js */ \"../node_modules/lamejs/src/js/GainAnalysis.js\");\nQuantizePVT = __webpack_require__(/*! ./QuantizePVT.js */ \"../node_modules/lamejs/src/js/QuantizePVT.js\");\nQuantize = __webpack_require__(/*! ./Quantize.js */ \"../node_modules/lamejs/src/js/Quantize.js\");\nTakehiro = __webpack_require__(/*! ./Takehiro.js */ \"../node_modules/lamejs/src/js/Takehiro.js\");\nReservoir = __webpack_require__(/*! ./Reservoir.js */ \"../node_modules/lamejs/src/js/Reservoir.js\");\nMPEGMode = __webpack_require__(/*! ./MPEGMode.js */ \"../node_modules/lamejs/src/js/MPEGMode.js\");\nBitStream = __webpack_require__(/*! ./BitStream.js */ \"../node_modules/lamejs/src/js/BitStream.js\");\nvar Encoder = __webpack_require__(/*! ./Encoder.js */ \"../node_modules/lamejs/src/js/Encoder.js\");\nvar Version = __webpack_require__(/*! ./Version.js */ \"../node_modules/lamejs/src/js/Version.js\");\nvar VBRTag = __webpack_require__(/*! ./VBRTag.js */ \"../node_modules/lamejs/src/js/VBRTag.js\");\n\nfunction GetAudio() {\n    var parse;\n    var mpg;\n\n    this.setModules = function (parse2, mpg2) {\n        parse = parse2;\n        mpg = mpg2;\n    }\n}\n\n\nfunction Parse() {\n    var ver;\n    var id3;\n    var pre;\n\n    this.setModules = function (ver2, id32, pre2) {\n        ver = ver2;\n        id3 = id32;\n        pre = pre2;\n    }\n}\n\nfunction MPGLib() {\n}\n\nfunction ID3Tag() {\n    var bits;\n    var ver;\n\n    this.setModules = function (_bits, _ver) {\n        bits = _bits;\n        ver = _ver;\n    }\n}\n\nfunction Mp3Encoder(channels, samplerate, kbps) {\n    if (arguments.length != 3) {\n        console.error('WARN: Mp3Encoder(channels, samplerate, kbps) not specified');\n        channels = 1;\n        samplerate = 44100;\n        kbps = 128;\n    }\n    var lame = new Lame();\n    var gaud = new GetAudio();\n    var ga = new GainAnalysis();\n    var bs = new BitStream();\n    var p = new Presets();\n    var qupvt = new QuantizePVT();\n    var qu = new Quantize();\n    var vbr = new VBRTag();\n    var ver = new Version();\n    var id3 = new ID3Tag();\n    var rv = new Reservoir();\n    var tak = new Takehiro();\n    var parse = new Parse();\n    var mpg = new MPGLib();\n\n    lame.setModules(ga, bs, p, qupvt, qu, vbr, ver, id3, mpg);\n    bs.setModules(ga, mpg, ver, vbr);\n    id3.setModules(bs, ver);\n    p.setModules(lame);\n    qu.setModules(bs, rv, qupvt, tak);\n    qupvt.setModules(tak, rv, lame.enc.psy);\n    rv.setModules(bs);\n    tak.setModules(qupvt);\n    vbr.setModules(lame, bs, ver);\n    gaud.setModules(parse, mpg);\n    parse.setModules(ver, id3, p);\n\n    var gfp = lame.lame_init();\n\n    gfp.num_channels = channels;\n    gfp.in_samplerate = samplerate;\n    gfp.brate = kbps;\n    gfp.mode = MPEGMode.STEREO;\n    gfp.quality = 3;\n    gfp.bWriteVbrTag = false;\n    gfp.disable_reservoir = true;\n    gfp.write_id3tag_automatic = false;\n\n    var retcode = lame.lame_init_params(gfp);\n    assert(0 == retcode);\n    var maxSamples = 1152;\n    var mp3buf_size = 0 | (1.25 * maxSamples + 7200);\n    var mp3buf = new_byte(mp3buf_size);\n\n    this.encodeBuffer = function (left, right) {\n        if (channels == 1) {\n            right = left;\n        }\n        assert(left.length == right.length);\n        if (left.length > maxSamples) {\n            maxSamples = left.length;\n            mp3buf_size = 0 | (1.25 * maxSamples + 7200);\n            mp3buf = new_byte(mp3buf_size);\n        }\n\n        var _sz = lame.lame_encode_buffer(gfp, left, right, left.length, mp3buf, 0, mp3buf_size);\n        return new Int8Array(mp3buf.subarray(0, _sz));\n    };\n\n    this.flush = function () {\n        var _sz = lame.lame_encode_flush(gfp, mp3buf, 0, mp3buf_size);\n        return new Int8Array(mp3buf.subarray(0, _sz));\n    };\n}\n\nfunction WavHeader() {\n    this.dataOffset = 0;\n    this.dataLen = 0;\n    this.channels = 0;\n    this.sampleRate = 0;\n}\n\nfunction fourccToInt(fourcc) {\n    return fourcc.charCodeAt(0) << 24 | fourcc.charCodeAt(1) << 16 | fourcc.charCodeAt(2) << 8 | fourcc.charCodeAt(3);\n}\n\nWavHeader.RIFF = fourccToInt(\"RIFF\");\nWavHeader.WAVE = fourccToInt(\"WAVE\");\nWavHeader.fmt_ = fourccToInt(\"fmt \");\nWavHeader.data = fourccToInt(\"data\");\n\nWavHeader.readHeader = function (dataView) {\n    var w = new WavHeader();\n\n    var header = dataView.getUint32(0, false);\n    if (WavHeader.RIFF != header) {\n        return;\n    }\n    var fileLen = dataView.getUint32(4, true);\n    if (WavHeader.WAVE != dataView.getUint32(8, false)) {\n        return;\n    }\n    if (WavHeader.fmt_ != dataView.getUint32(12, false)) {\n        return;\n    }\n    var fmtLen = dataView.getUint32(16, true);\n    var pos = 16 + 4;\n    switch (fmtLen) {\n        case 16:\n        case 18:\n            w.channels = dataView.getUint16(pos + 2, true);\n            w.sampleRate = dataView.getUint32(pos + 4, true);\n            break;\n        default:\n            throw 'extended fmt chunk not implemented';\n    }\n    pos += fmtLen;\n    var data = WavHeader.data;\n    var len = 0;\n    while (data != header) {\n        header = dataView.getUint32(pos, false);\n        len = dataView.getUint32(pos + 4, true);\n        if (data == header) {\n            break;\n        }\n        pos += (len + 8);\n    }\n    w.dataLen = len;\n    w.dataOffset = pos + 8;\n    return w;\n};\n\nmodule.exports.Mp3Encoder = Mp3Encoder;\nmodule.exports.WavHeader = WavHeader;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/lamejs/src/js/index.js?");

/***/ }),

/***/ "../node_modules/libkss-js/lib/libkss.js":
/*!***********************************************!*\
  !*** ../node_modules/libkss-js/lib/libkss.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process, __dirname, Buffer) {\nvar Module = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  return (\nfunction(Module) {\n  Module = Module || {};\n\nvar Module=typeof Module!==\"undefined\"?Module:{};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram=\"./this.program\";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_HAS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_HAS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";ENVIRONMENT_IS_NODE=ENVIRONMENT_HAS_NODE&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_NODE){scriptDirectory=__dirname+\"/\";var nodeFS;var nodePath;read_=function shell_read(filename,binary){var ret;ret=tryParseAsDataURI(filename);if(!ret){if(!nodeFS)nodeFS=__webpack_require__(/*! fs */ \"../node_modules/node-libs-browser/mock/empty.js\");if(!nodePath)nodePath=__webpack_require__(/*! path */ \"../node_modules/path-browserify/index.js\");filename=nodePath[\"normalize\"](filename);ret=nodeFS[\"readFileSync\"](filename)}return binary?ret:ret.toString()};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",abort);quit_=function(status){process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_SHELL){if(typeof read!=\"undefined\"){read_=function shell_read(f){var data=tryParseAsDataURI(f);if(data){return intArrayToString(data)}return read(f)}}readBinary=function readBinary(f){var data;data=tryParseAsDataURI(f);if(data){return data}if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){arguments_=scriptArgs}else if(typeof arguments!=\"undefined\"){arguments_=arguments}if(typeof quit===\"function\"){quit_=function(status){quit(status)}}if(typeof print!==\"undefined\"){if(typeof console===\"undefined\")console={};console.log=print;console.warn=console.error=typeof printErr!==\"undefined\"?printErr:print}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}read_=function shell_read(url){try{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText}catch(err){var data=tryParseAsDataURI(url);if(data){return intArrayToString(data)}throw err}};if(ENVIRONMENT_IS_WORKER){readBinary=function readBinary(url){try{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}catch(err){var data=tryParseAsDataURI(url);if(data){return data}throw err}}}readAsync=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}var data=tryParseAsDataURI(url);if(data){onload(data.buffer);return}onerror()};xhr.onerror=onerror;xhr.send(null)};setWindowTitle=function(title){document.title=title}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var STACK_ALIGN=16;function dynamicAlloc(size){var ret=HEAP32[DYNAMICTOP_PTR>>2];var end=ret+size+15&-16;if(end>_emscripten_get_heap_size()){abort()}HEAP32[DYNAMICTOP_PTR>>2]=end;return ret}function getNativeTypeSize(type){switch(type){case\"i1\":case\"i8\":return 1;case\"i16\":return 2;case\"i32\":return 4;case\"i64\":return 8;case\"float\":return 4;case\"double\":return 8;default:{if(type[type.length-1]===\"*\"){return 4}else if(type[0]===\"i\"){var bits=parseInt(type.substr(1));assert(bits%8===0,\"getNativeTypeSize invalid bits \"+bits+\", type \"+type);return bits/8}else{return 0}}}}function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;err(text)}}var jsCallStartIndex=1;var functionPointers=new Array(16);function addFunction(func,sig){var base=0;for(var i=base;i<base+16;i++){if(!functionPointers[i]){functionPointers[i]=func;return jsCallStartIndex+i}}throw\"Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.\"}function removeFunction(index){functionPointers[index-jsCallStartIndex]=null}var funcWrappers={};function dynCall(sig,ptr,args){if(args&&args.length){return Module[\"dynCall_\"+sig].apply(null,[ptr].concat(args))}else{return Module[\"dynCall_\"+sig].call(null,ptr)}}var tempRet0=0;var setTempRet0=function(value){tempRet0=value};var getTempRet0=function(){return tempRet0};var GLOBAL_BASE=8;var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime;if(Module[\"noExitRuntime\"])noExitRuntime=Module[\"noExitRuntime\"];function setValue(ptr,value,type,noSafe){type=type||\"i8\";if(type.charAt(type.length-1)===\"*\")type=\"i32\";switch(type){case\"i1\":HEAP8[ptr>>0]=value;break;case\"i8\":HEAP8[ptr>>0]=value;break;case\"i16\":HEAP16[ptr>>1]=value;break;case\"i32\":HEAP32[ptr>>2]=value;break;case\"i64\":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=+1?tempDouble>+0?(Math_min(+Math_floor(tempDouble/+4294967296),+4294967295)|0)>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/+4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case\"float\":HEAPF32[ptr>>2]=value;break;case\"double\":HEAPF64[ptr>>3]=value;break;default:abort(\"invalid type for setValue: \"+type)}}var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}function getCFunc(ident){var func=Module[\"_\"+ident];assert(func,\"Cannot call unknown function \"+ident+\", make sure it is exported\");return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);ret=convertReturnValue(ret);if(stack!==0)stackRestore(stack);return ret}function cwrap(ident,returnType,argTypes,opts){argTypes=argTypes||[];var numericArgs=argTypes.every(function(type){return type===\"number\"});var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}var ALLOC_NONE=3;function allocate(slab,types,allocator,ptr){var zeroinit,size;if(typeof slab===\"number\"){zeroinit=true;size=slab}else{zeroinit=false;size=slab.length}var singleType=typeof types===\"string\"?types:null;var ret;if(allocator==ALLOC_NONE){ret=ptr}else{ret=[_malloc,stackAlloc,dynamicAlloc][allocator](Math.max(size,singleType?1:types.length))}if(zeroinit){var stop;ptr=ret;assert((ret&3)==0);stop=ret+(size&~3);for(;ptr<stop;ptr+=4){HEAP32[ptr>>2]=0}stop=ret+size;while(ptr<stop){HEAP8[ptr++>>0]=0}return ret}if(singleType===\"i8\"){if(slab.subarray||slab.slice){HEAPU8.set(slab,ret)}else{HEAPU8.set(new Uint8Array(slab),ret)}return ret}var i=0,type,typeSize,previousType;while(i<size){var curr=slab[i];type=singleType||types[i];if(type===0){i++;continue}if(type==\"i64\")type=\"i32\";setValue(ret+i,curr,type);if(previousType!==type){typeSize=getNativeTypeSize(type);previousType=type}i+=typeSize}return ret}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(u8Array,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(u8Array[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=u8Array[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|u8Array[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var STACK_BASE=954608,DYNAMIC_BASE=6197488,DYNAMICTOP_PTR=954400;var INITIAL_TOTAL_MEMORY=Module[\"TOTAL_MEMORY\"]||16777216;if(Module[\"buffer\"]){buffer=Module[\"buffer\"]}else{buffer=new ArrayBuffer(INITIAL_TOTAL_MEMORY)}INITIAL_TOTAL_MEMORY=buffer.byteLength;updateGlobalBufferAndViews(buffer);HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback();continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){Module[\"dynCall_v\"](func)}else{Module[\"dynCall_vi\"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;if(!Module[\"noFSInit\"]&&!FS.init.initialized)FS.init();TTY.init();callRuntimeCallbacks(__ATINIT__)}function preMain(){FS.ignorePermissions=false;callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){runtimeExited=true}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var Math_abs=Math.abs;var Math_ceil=Math.ceil;var Math_floor=Math.floor;var Math_min=Math.min;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function getUniqueRunDependency(id){return id}function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what+=\"\";out(what);err(what);ABORT=true;EXITSTATUS=1;throw\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\"}var memoryInitializer=null;var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return String.prototype.startsWith?filename.startsWith(dataURIPrefix):filename.indexOf(dataURIPrefix)===0}var tempDouble;var tempI64;memoryInitializer=\"data:application/octet-stream;base64,\";var tempDoublePtr=954592;function demangle(func){return func}function demangleAll(text){var regex=/\\b__Z[\\w\\d_]+/g;return text.replace(regex,function(x){var y=demangle(x);return x===y?x:y+\" [\"+x+\"]\"})}function jsStackTrace(){var err=new Error;if(!err.stack){try{throw new Error(0)}catch(e){err=e}if(!err.stack){return\"(no stack trace available)\"}}return err.stack.toString()}function stackTrace(){var js=jsStackTrace();if(Module[\"extraStackTrace\"])js+=\"\\n\"+Module[\"extraStackTrace\"]();return demangleAll(js)}function ___assert_fail(condition,filename,line,func){abort(\"Assertion failed: \"+UTF8ToString(condition)+\", at: \"+[filename?UTF8ToString(filename):\"unknown filename\",line,func?UTF8ToString(func):\"unknown function\"])}function ___lock(){}function ___setErrNo(value){if(Module[\"___errno_location\"])HEAP32[Module[\"___errno_location\"]()>>2]=value;return value}var PATH={splitPath:function(filename){var splitPathRe=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;return splitPathRe.exec(filename).slice(1)},normalizeArray:function(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last===\".\"){parts.splice(i,1)}else if(last===\"..\"){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift(\"..\")}}return parts},normalize:function(path){var isAbsolute=path.charAt(0)===\"/\",trailingSlash=path.substr(-1)===\"/\";path=PATH.normalizeArray(path.split(\"/\").filter(function(p){return!!p}),!isAbsolute).join(\"/\");if(!path&&!isAbsolute){path=\".\"}if(path&&trailingSlash){path+=\"/\"}return(isAbsolute?\"/\":\"\")+path},dirname:function(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return\".\"}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir},basename:function(path){if(path===\"/\")return\"/\";var lastSlash=path.lastIndexOf(\"/\");if(lastSlash===-1)return path;return path.substr(lastSlash+1)},extname:function(path){return PATH.splitPath(path)[3]},join:function(){var paths=Array.prototype.slice.call(arguments,0);return PATH.normalize(paths.join(\"/\"))},join2:function(l,r){return PATH.normalize(l+\"/\"+r)}};var PATH_FS={resolve:function(){var resolvedPath=\"\",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!==\"string\"){throw new TypeError(\"Arguments to path.resolve must be strings\")}else if(!path){return\"\"}resolvedPath=path+\"/\"+resolvedPath;resolvedAbsolute=path.charAt(0)===\"/\"}resolvedPath=PATH.normalizeArray(resolvedPath.split(\"/\").filter(function(p){return!!p}),!resolvedAbsolute).join(\"/\");return(resolvedAbsolute?\"/\":\"\")+resolvedPath||\".\"},relative:function(from,to){from=PATH_FS.resolve(from).substr(1);to=PATH_FS.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!==\"\")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!==\"\")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split(\"/\"));var toParts=trim(to.split(\"/\"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push(\"..\")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join(\"/\")}};var TTY={ttys:[],init:function(){},shutdown:function(){},register:function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)},stream_ops:{open:function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(43)}stream.tty=tty;stream.seekable=false},close:function(stream){stream.tty.ops.flush(stream.tty)},flush:function(stream){stream.tty.ops.flush(stream.tty)},read:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(60)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(60)}try{for(var i=0;i<length;i++){stream.tty.ops.put_char(stream.tty,buffer[offset+i])}}catch(e){throw new FS.ErrnoError(29)}if(length){stream.node.timestamp=Date.now()}return i}},default_tty_ops:{get_char:function(tty){if(!tty.input.length){var result=null;if(ENVIRONMENT_IS_NODE){var BUFSIZE=256;var buf=Buffer.alloc?Buffer.alloc(BUFSIZE):new Buffer(BUFSIZE);var bytesRead=0;try{bytesRead=fs.readSync(process.stdin.fd,buf,0,BUFSIZE,null)}catch(e){if(e.toString().indexOf(\"EOF\")!=-1)bytesRead=0;else throw e}if(bytesRead>0){result=buf.slice(0,bytesRead).toString(\"utf-8\")}else{result=null}}else if(typeof window!=\"undefined\"&&typeof window.prompt==\"function\"){result=window.prompt(\"Input: \");if(result!==null){result+=\"\\n\"}}else if(typeof readline==\"function\"){result=readline();if(result!==null){result+=\"\\n\"}}if(!result){return null}tty.input=intArrayFromString(result,true)}return tty.input.shift()},put_char:function(tty,val){if(val===null||val===10){out(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},flush:function(tty){if(tty.output&&tty.output.length>0){out(UTF8ArrayToString(tty.output,0));tty.output=[]}}},default_tty1_ops:{put_char:function(tty,val){if(val===null||val===10){err(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},flush:function(tty){if(tty.output&&tty.output.length>0){err(UTF8ArrayToString(tty.output,0));tty.output=[]}}}};var MEMFS={ops_table:null,mount:function(mount){return MEMFS.createNode(null,\"/\",16384|511,0)},createNode:function(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(63)}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}}}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node}return node},getFileDataAsRegularArray:function(node){if(node.contents&&node.contents.subarray){var arr=[];for(var i=0;i<node.usedBytes;++i)arr.push(node.contents[i]);return arr}return node.contents},getFileDataAsTypedArray:function(node){if(!node.contents)return new Uint8Array;if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)},expandFileStorage:function(node,newCapacity){var prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)|0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0);return},resizeFileStorage:function(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0;return}if(!node.contents||node.contents.subarray){var oldContents=node.contents;node.contents=new Uint8Array(new ArrayBuffer(newSize));if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize;return}if(!node.contents)node.contents=[];if(node.contents.length>newSize)node.contents.length=newSize;else while(node.contents.length<newSize)node.contents.push(0);node.usedBytes=newSize},node_ops:{getattr:function(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr},setattr:function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}},lookup:function(parent,name){throw FS.genericErrors[44]},mknod:function(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)},rename:function(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(55)}}}delete old_node.parent.contents[old_node.name];old_node.name=new_name;new_dir.contents[new_name]=old_node;old_node.parent=new_dir},unlink:function(parent,name){delete parent.contents[name]},rmdir:function(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(55)}delete parent.contents[name]},readdir:function(node){var entries=[\".\",\"..\"];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries},symlink:function(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node},readlink:function(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(28)}return node.link}},stream_ops:{read:function(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size},write:function(stream,buffer,offset,length,position,canOwn){if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=new Uint8Array(buffer.subarray(offset,offset+length));node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray)node.contents.set(buffer.subarray(offset,offset+length),position);else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}}node.usedBytes=Math.max(node.usedBytes,position+length);return length},llseek:function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(28)}return position},allocate:function(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)},mmap:function(stream,buffer,offset,length,position,prot,flags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&(contents.buffer===buffer||contents.buffer===buffer.buffer)){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<stream.node.usedBytes){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;var fromHeap=buffer.buffer==HEAP8.buffer;ptr=_malloc(length);if(!ptr){throw new FS.ErrnoError(48)}(fromHeap?HEAP8:buffer).set(contents,ptr)}return{ptr:ptr,allocated:allocated}},msync:function(stream,buffer,offset,length,mmapFlags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}if(mmapFlags&2){return 0}var bytesWritten=MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0}}};var IDBFS={dbs:{},indexedDB:function(){if(typeof indexedDB!==\"undefined\")return indexedDB;var ret=null;if(typeof window===\"object\")ret=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;assert(ret,\"IDBFS used, but indexedDB not supported\");return ret},DB_VERSION:21,DB_STORE_NAME:\"FILE_DATA\",mount:function(mount){return MEMFS.mount.apply(null,arguments)},syncfs:function(mount,populate,callback){IDBFS.getLocalSet(mount,function(err,local){if(err)return callback(err);IDBFS.getRemoteSet(mount,function(err,remote){if(err)return callback(err);var src=populate?remote:local;var dst=populate?local:remote;IDBFS.reconcile(src,dst,callback)})})},getDB:function(name,callback){var db=IDBFS.dbs[name];if(db){return callback(null,db)}var req;try{req=IDBFS.indexedDB().open(name,IDBFS.DB_VERSION)}catch(e){return callback(e)}if(!req){return callback(\"Unable to connect to IndexedDB\")}req.onupgradeneeded=function(e){var db=e.target.result;var transaction=e.target.transaction;var fileStore;if(db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)){fileStore=transaction.objectStore(IDBFS.DB_STORE_NAME)}else{fileStore=db.createObjectStore(IDBFS.DB_STORE_NAME)}if(!fileStore.indexNames.contains(\"timestamp\")){fileStore.createIndex(\"timestamp\",\"timestamp\",{unique:false})}};req.onsuccess=function(){db=req.result;IDBFS.dbs[name]=db;callback(null,db)};req.onerror=function(e){callback(this.error);e.preventDefault()}},getLocalSet:function(mount,callback){var entries={};function isRealDir(p){return p!==\".\"&&p!==\"..\"}function toAbsolute(root){return function(p){return PATH.join2(root,p)}}var check=FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));while(check.length){var path=check.pop();var stat;try{stat=FS.stat(path)}catch(e){return callback(e)}if(FS.isDir(stat.mode)){check.push.apply(check,FS.readdir(path).filter(isRealDir).map(toAbsolute(path)))}entries[path]={timestamp:stat.mtime}}return callback(null,{type:\"local\",entries:entries})},getRemoteSet:function(mount,callback){var entries={};IDBFS.getDB(mount.mountpoint,function(err,db){if(err)return callback(err);try{var transaction=db.transaction([IDBFS.DB_STORE_NAME],\"readonly\");transaction.onerror=function(e){callback(this.error);e.preventDefault()};var store=transaction.objectStore(IDBFS.DB_STORE_NAME);var index=store.index(\"timestamp\");index.openKeyCursor().onsuccess=function(event){var cursor=event.target.result;if(!cursor){return callback(null,{type:\"remote\",db:db,entries:entries})}entries[cursor.primaryKey]={timestamp:cursor.key};cursor.continue()}}catch(e){return callback(e)}})},loadLocalEntry:function(path,callback){var stat,node;try{var lookup=FS.lookupPath(path);node=lookup.node;stat=FS.stat(path)}catch(e){return callback(e)}if(FS.isDir(stat.mode)){return callback(null,{timestamp:stat.mtime,mode:stat.mode})}else if(FS.isFile(stat.mode)){node.contents=MEMFS.getFileDataAsTypedArray(node);return callback(null,{timestamp:stat.mtime,mode:stat.mode,contents:node.contents})}else{return callback(new Error(\"node type not supported\"))}},storeLocalEntry:function(path,entry,callback){try{if(FS.isDir(entry.mode)){FS.mkdir(path,entry.mode)}else if(FS.isFile(entry.mode)){FS.writeFile(path,entry.contents,{canOwn:true})}else{return callback(new Error(\"node type not supported\"))}FS.chmod(path,entry.mode);FS.utime(path,entry.timestamp,entry.timestamp)}catch(e){return callback(e)}callback(null)},removeLocalEntry:function(path,callback){try{var lookup=FS.lookupPath(path);var stat=FS.stat(path);if(FS.isDir(stat.mode)){FS.rmdir(path)}else if(FS.isFile(stat.mode)){FS.unlink(path)}}catch(e){return callback(e)}callback(null)},loadRemoteEntry:function(store,path,callback){var req=store.get(path);req.onsuccess=function(event){callback(null,event.target.result)};req.onerror=function(e){callback(this.error);e.preventDefault()}},storeRemoteEntry:function(store,path,entry,callback){var req=store.put(entry,path);req.onsuccess=function(){callback(null)};req.onerror=function(e){callback(this.error);e.preventDefault()}},removeRemoteEntry:function(store,path,callback){var req=store.delete(path);req.onsuccess=function(){callback(null)};req.onerror=function(e){callback(this.error);e.preventDefault()}},reconcile:function(src,dst,callback){var total=0;var create=[];Object.keys(src.entries).forEach(function(key){var e=src.entries[key];var e2=dst.entries[key];if(!e2||e.timestamp>e2.timestamp){create.push(key);total++}});var remove=[];Object.keys(dst.entries).forEach(function(key){var e=dst.entries[key];var e2=src.entries[key];if(!e2){remove.push(key);total++}});if(!total){return callback(null)}var errored=false;var db=src.type===\"remote\"?src.db:dst.db;var transaction=db.transaction([IDBFS.DB_STORE_NAME],\"readwrite\");var store=transaction.objectStore(IDBFS.DB_STORE_NAME);function done(err){if(err&&!errored){errored=true;return callback(err)}}transaction.onerror=function(e){done(this.error);e.preventDefault()};transaction.oncomplete=function(e){if(!errored){callback(null)}};create.sort().forEach(function(path){if(dst.type===\"local\"){IDBFS.loadRemoteEntry(store,path,function(err,entry){if(err)return done(err);IDBFS.storeLocalEntry(path,entry,done)})}else{IDBFS.loadLocalEntry(path,function(err,entry){if(err)return done(err);IDBFS.storeRemoteEntry(store,path,entry,done)})}});remove.sort().reverse().forEach(function(path){if(dst.type===\"local\"){IDBFS.removeLocalEntry(path,done)}else{IDBFS.removeRemoteEntry(store,path,done)}})}};var ERRNO_CODES={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135};var NODEFS={isWindows:false,staticInit:function(){NODEFS.isWindows=!!process.platform.match(/^win/);var flags=process[\"binding\"](\"constants\");if(flags[\"fs\"]){flags=flags[\"fs\"]}NODEFS.flagsForNodeMap={1024:flags[\"O_APPEND\"],64:flags[\"O_CREAT\"],128:flags[\"O_EXCL\"],0:flags[\"O_RDONLY\"],2:flags[\"O_RDWR\"],4096:flags[\"O_SYNC\"],512:flags[\"O_TRUNC\"],1:flags[\"O_WRONLY\"]}},bufferFrom:function(arrayBuffer){return Buffer[\"alloc\"]?Buffer.from(arrayBuffer):new Buffer(arrayBuffer)},convertNodeCode:function(e){var code=e.code;assert(code in ERRNO_CODES);return ERRNO_CODES[code]},mount:function(mount){assert(ENVIRONMENT_HAS_NODE);return NODEFS.createNode(null,\"/\",NODEFS.getMode(mount.opts.root),0)},createNode:function(parent,name,mode,dev){if(!FS.isDir(mode)&&!FS.isFile(mode)&&!FS.isLink(mode)){throw new FS.ErrnoError(28)}var node=FS.createNode(parent,name,mode);node.node_ops=NODEFS.node_ops;node.stream_ops=NODEFS.stream_ops;return node},getMode:function(path){var stat;try{stat=fs.lstatSync(path);if(NODEFS.isWindows){stat.mode=stat.mode|(stat.mode&292)>>2}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(NODEFS.convertNodeCode(e))}return stat.mode},realPath:function(node){var parts=[];while(node.parent!==node){parts.push(node.name);node=node.parent}parts.push(node.mount.opts.root);parts.reverse();return PATH.join.apply(null,parts)},flagsForNode:function(flags){flags&=~2097152;flags&=~2048;flags&=~32768;flags&=~524288;var newFlags=0;for(var k in NODEFS.flagsForNodeMap){if(flags&k){newFlags|=NODEFS.flagsForNodeMap[k];flags^=k}}if(!flags){return newFlags}else{throw new FS.ErrnoError(28)}},node_ops:{getattr:function(node){var path=NODEFS.realPath(node);var stat;try{stat=fs.lstatSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(NODEFS.convertNodeCode(e))}if(NODEFS.isWindows&&!stat.blksize){stat.blksize=4096}if(NODEFS.isWindows&&!stat.blocks){stat.blocks=(stat.size+stat.blksize-1)/stat.blksize|0}return{dev:stat.dev,ino:stat.ino,mode:stat.mode,nlink:stat.nlink,uid:stat.uid,gid:stat.gid,rdev:stat.rdev,size:stat.size,atime:stat.atime,mtime:stat.mtime,ctime:stat.ctime,blksize:stat.blksize,blocks:stat.blocks}},setattr:function(node,attr){var path=NODEFS.realPath(node);try{if(attr.mode!==undefined){fs.chmodSync(path,attr.mode);node.mode=attr.mode}if(attr.timestamp!==undefined){var date=new Date(attr.timestamp);fs.utimesSync(path,date,date)}if(attr.size!==undefined){fs.truncateSync(path,attr.size)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(NODEFS.convertNodeCode(e))}},lookup:function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);var mode=NODEFS.getMode(path);return NODEFS.createNode(parent,name,mode)},mknod:function(parent,name,mode,dev){var node=NODEFS.createNode(parent,name,mode,dev);var path=NODEFS.realPath(node);try{if(FS.isDir(node.mode)){fs.mkdirSync(path,node.mode)}else{fs.writeFileSync(path,\"\",{mode:node.mode})}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(NODEFS.convertNodeCode(e))}return node},rename:function(oldNode,newDir,newName){var oldPath=NODEFS.realPath(oldNode);var newPath=PATH.join2(NODEFS.realPath(newDir),newName);try{fs.renameSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(NODEFS.convertNodeCode(e))}},unlink:function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.unlinkSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(NODEFS.convertNodeCode(e))}},rmdir:function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.rmdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(NODEFS.convertNodeCode(e))}},readdir:function(node){var path=NODEFS.realPath(node);try{return fs.readdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(NODEFS.convertNodeCode(e))}},symlink:function(parent,newName,oldPath){var newPath=PATH.join2(NODEFS.realPath(parent),newName);try{fs.symlinkSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(NODEFS.convertNodeCode(e))}},readlink:function(node){var path=NODEFS.realPath(node);try{path=fs.readlinkSync(path);path=NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root),path);return path}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(NODEFS.convertNodeCode(e))}}},stream_ops:{open:function(stream){var path=NODEFS.realPath(stream.node);try{if(FS.isFile(stream.node.mode)){stream.nfd=fs.openSync(path,NODEFS.flagsForNode(stream.flags))}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(NODEFS.convertNodeCode(e))}},close:function(stream){try{if(FS.isFile(stream.node.mode)&&stream.nfd){fs.closeSync(stream.nfd)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(NODEFS.convertNodeCode(e))}},read:function(stream,buffer,offset,length,position){if(length===0)return 0;try{return fs.readSync(stream.nfd,NODEFS.bufferFrom(buffer.buffer),offset,length,position)}catch(e){throw new FS.ErrnoError(NODEFS.convertNodeCode(e))}},write:function(stream,buffer,offset,length,position){try{return fs.writeSync(stream.nfd,NODEFS.bufferFrom(buffer.buffer),offset,length,position)}catch(e){throw new FS.ErrnoError(NODEFS.convertNodeCode(e))}},llseek:function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){try{var stat=fs.fstatSync(stream.nfd);position+=stat.size}catch(e){throw new FS.ErrnoError(NODEFS.convertNodeCode(e))}}}if(position<0){throw new FS.ErrnoError(28)}return position}}};var WORKERFS={DIR_MODE:16895,FILE_MODE:33279,reader:null,mount:function(mount){assert(ENVIRONMENT_IS_WORKER);if(!WORKERFS.reader)WORKERFS.reader=new FileReaderSync;var root=WORKERFS.createNode(null,\"/\",WORKERFS.DIR_MODE,0);var createdParents={};function ensureParent(path){var parts=path.split(\"/\");var parent=root;for(var i=0;i<parts.length-1;i++){var curr=parts.slice(0,i+1).join(\"/\");if(!createdParents[curr]){createdParents[curr]=WORKERFS.createNode(parent,parts[i],WORKERFS.DIR_MODE,0)}parent=createdParents[curr]}return parent}function base(path){var parts=path.split(\"/\");return parts[parts.length-1]}Array.prototype.forEach.call(mount.opts[\"files\"]||[],function(file){WORKERFS.createNode(ensureParent(file.name),base(file.name),WORKERFS.FILE_MODE,0,file,file.lastModifiedDate)});(mount.opts[\"blobs\"]||[]).forEach(function(obj){WORKERFS.createNode(ensureParent(obj[\"name\"]),base(obj[\"name\"]),WORKERFS.FILE_MODE,0,obj[\"data\"])});(mount.opts[\"packages\"]||[]).forEach(function(pack){pack[\"metadata\"].files.forEach(function(file){var name=file.filename.substr(1);WORKERFS.createNode(ensureParent(name),base(name),WORKERFS.FILE_MODE,0,pack[\"blob\"].slice(file.start,file.end))})});return root},createNode:function(parent,name,mode,dev,contents,mtime){var node=FS.createNode(parent,name,mode);node.mode=mode;node.node_ops=WORKERFS.node_ops;node.stream_ops=WORKERFS.stream_ops;node.timestamp=(mtime||new Date).getTime();assert(WORKERFS.FILE_MODE!==WORKERFS.DIR_MODE);if(mode===WORKERFS.FILE_MODE){node.size=contents.size;node.contents=contents}else{node.size=4096;node.contents={}}if(parent){parent.contents[name]=node}return node},node_ops:{getattr:function(node){return{dev:1,ino:undefined,mode:node.mode,nlink:1,uid:0,gid:0,rdev:undefined,size:node.size,atime:new Date(node.timestamp),mtime:new Date(node.timestamp),ctime:new Date(node.timestamp),blksize:4096,blocks:Math.ceil(node.size/4096)}},setattr:function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}},lookup:function(parent,name){throw new FS.ErrnoError(44)},mknod:function(parent,name,mode,dev){throw new FS.ErrnoError(63)},rename:function(oldNode,newDir,newName){throw new FS.ErrnoError(63)},unlink:function(parent,name){throw new FS.ErrnoError(63)},rmdir:function(parent,name){throw new FS.ErrnoError(63)},readdir:function(node){var entries=[\".\",\"..\"];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries},symlink:function(parent,newName,oldPath){throw new FS.ErrnoError(63)},readlink:function(node){throw new FS.ErrnoError(63)}},stream_ops:{read:function(stream,buffer,offset,length,position){if(position>=stream.node.size)return 0;var chunk=stream.node.contents.slice(position,position+length);var ab=WORKERFS.reader.readAsArrayBuffer(chunk);buffer.set(new Uint8Array(ab),offset);return chunk.size},write:function(stream,buffer,offset,length,position){throw new FS.ErrnoError(29)},llseek:function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.size}}if(position<0){throw new FS.ErrnoError(28)}return position}}};var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:\"/\",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:function(e){if(!(e instanceof FS.ErrnoError))throw e+\" : \"+stackTrace();return ___setErrNo(e.errno)},lookupPath:function(path,opts){path=PATH_FS.resolve(FS.cwd(),path);opts=opts||{};if(!path)return{path:\"\",node:null};var defaults={follow_mount:true,recurse_count:0};for(var key in defaults){if(opts[key]===undefined){opts[key]=defaults[key]}}if(opts.recurse_count>8){throw new FS.ErrnoError(32)}var parts=PATH.normalizeArray(path.split(\"/\").filter(function(p){return!!p}),false);var current=FS.root;var current_path=\"/\";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH_FS.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count});current=lookup.node;if(count++>40){throw new FS.ErrnoError(32)}}}}return{path:current_path,node:current}},getPath:function(node){var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!==\"/\"?mount+\"/\"+path:mount+path}path=path?node.name+\"/\"+path:node.name;node=node.parent}},hashName:function(parentid,name){var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length},hashAddNode:function(node){var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node},hashRemoveNode:function(node){var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}},lookupNode:function(parent,name){var err=FS.mayLookup(parent);if(err){throw new FS.ErrnoError(err,parent)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)},createNode:function(parent,name,mode,rdev){if(!FS.FSNode){FS.FSNode=function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev};FS.FSNode.prototype={};var readMode=292|73;var writeMode=146;Object.defineProperties(FS.FSNode.prototype,{read:{get:function(){return(this.mode&readMode)===readMode},set:function(val){val?this.mode|=readMode:this.mode&=~readMode}},write:{get:function(){return(this.mode&writeMode)===writeMode},set:function(val){val?this.mode|=writeMode:this.mode&=~writeMode}},isFolder:{get:function(){return FS.isDir(this.mode)}},isDevice:{get:function(){return FS.isChrdev(this.mode)}}})}var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node},destroyNode:function(node){FS.hashRemoveNode(node)},isRoot:function(node){return node===node.parent},isMountpoint:function(node){return!!node.mounted},isFile:function(mode){return(mode&61440)===32768},isDir:function(mode){return(mode&61440)===16384},isLink:function(mode){return(mode&61440)===40960},isChrdev:function(mode){return(mode&61440)===8192},isBlkdev:function(mode){return(mode&61440)===24576},isFIFO:function(mode){return(mode&61440)===4096},isSocket:function(mode){return(mode&49152)===49152},flagModes:{\"r\":0,\"rs\":1052672,\"r+\":2,\"w\":577,\"wx\":705,\"xw\":705,\"w+\":578,\"wx+\":706,\"xw+\":706,\"a\":1089,\"ax\":1217,\"xa\":1217,\"a+\":1090,\"ax+\":1218,\"xa+\":1218},modeStringToFlags:function(str){var flags=FS.flagModes[str];if(typeof flags===\"undefined\"){throw new Error(\"Unknown file open mode: \"+str)}return flags},flagsToPermissionString:function(flag){var perms=[\"r\",\"w\",\"rw\"][flag&3];if(flag&512){perms+=\"w\"}return perms},nodePermissions:function(node,perms){if(FS.ignorePermissions){return 0}if(perms.indexOf(\"r\")!==-1&&!(node.mode&292)){return 2}else if(perms.indexOf(\"w\")!==-1&&!(node.mode&146)){return 2}else if(perms.indexOf(\"x\")!==-1&&!(node.mode&73)){return 2}return 0},mayLookup:function(dir){var err=FS.nodePermissions(dir,\"x\");if(err)return err;if(!dir.node_ops.lookup)return 2;return 0},mayCreate:function(dir,name){try{var node=FS.lookupNode(dir,name);return 20}catch(e){}return FS.nodePermissions(dir,\"wx\")},mayDelete:function(dir,name,isdir){var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var err=FS.nodePermissions(dir,\"wx\");if(err){return err}if(isdir){if(!FS.isDir(node.mode)){return 54}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return 10}}else{if(FS.isDir(node.mode)){return 31}}return 0},mayOpen:function(node,flags){if(!node){return 44}if(FS.isLink(node.mode)){return 32}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!==\"r\"||flags&512){return 31}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))},MAX_OPEN_FDS:4096,nextfd:function(fd_start,fd_end){fd_start=fd_start||0;fd_end=fd_end||FS.MAX_OPEN_FDS;for(var fd=fd_start;fd<=fd_end;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(33)},getStream:function(fd){return FS.streams[fd]},createStream:function(stream,fd_start,fd_end){if(!FS.FSStream){FS.FSStream=function(){};FS.FSStream.prototype={};Object.defineProperties(FS.FSStream.prototype,{object:{get:function(){return this.node},set:function(val){this.node=val}},isRead:{get:function(){return(this.flags&2097155)!==1}},isWrite:{get:function(){return(this.flags&2097155)!==0}},isAppend:{get:function(){return this.flags&1024}}})}var newStream=new FS.FSStream;for(var p in stream){newStream[p]=stream[p]}stream=newStream;var fd=FS.nextfd(fd_start,fd_end);stream.fd=fd;FS.streams[fd]=stream;return stream},closeStream:function(fd){FS.streams[fd]=null},chrdev_stream_ops:{open:function(stream){var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream)}},llseek:function(){throw new FS.ErrnoError(70)}},major:function(dev){return dev>>8},minor:function(dev){return dev&255},makedev:function(ma,mi){return ma<<8|mi},registerDevice:function(dev,ops){FS.devices[dev]={stream_ops:ops}},getDevice:function(dev){return FS.devices[dev]},getMounts:function(mount){var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return mounts},syncfs:function(populate,callback){if(typeof populate===\"function\"){callback=populate;populate=false}FS.syncFSRequests++;if(FS.syncFSRequests>1){console.log(\"warning: \"+FS.syncFSRequests+\" FS.syncfs operations in flight at once, probably just doing extra work\")}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(err){FS.syncFSRequests--;return callback(err)}function done(err){if(err){if(!done.errored){done.errored=true;return doCallback(err)}return}if(++completed>=mounts.length){doCallback(null)}}mounts.forEach(function(mount){if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)})},mount:function(type,opts,mountpoint){var root=mountpoint===\"/\";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(10)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot},unmount:function(mountpoint){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(28)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach(function(hash){var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.indexOf(current.mount)!==-1){FS.destroyNode(current)}current=next}});node.mounted=null;var idx=node.mount.mounts.indexOf(mount);node.mount.mounts.splice(idx,1)},lookup:function(parent,name){return parent.node_ops.lookup(parent,name)},mknod:function(path,mode,dev){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name===\".\"||name===\"..\"){throw new FS.ErrnoError(28)}var err=FS.mayCreate(parent,name);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(63)}return parent.node_ops.mknod(parent,name,mode,dev)},create:function(path,mode){mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)},mkdir:function(path,mode){mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)},mkdirTree:function(path,mode){var dirs=path.split(\"/\");var d=\"\";for(var i=0;i<dirs.length;++i){if(!dirs[i])continue;d+=\"/\"+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(e.errno!=20)throw e}}},mkdev:function(path,mode,dev){if(typeof dev===\"undefined\"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)},symlink:function(oldpath,newpath){if(!PATH_FS.resolve(oldpath)){throw new FS.ErrnoError(44)}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44)}var newname=PATH.basename(newpath);var err=FS.mayCreate(parent,newname);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(63)}return parent.node_ops.symlink(parent,newname,oldpath)},rename:function(old_path,new_path){var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;try{lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node}catch(e){throw new FS.ErrnoError(10)}if(!old_dir||!new_dir)throw new FS.ErrnoError(44);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(75)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH_FS.relative(old_path,new_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(28)}relative=PATH_FS.relative(new_path,old_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(55)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var err=FS.mayDelete(old_dir,old_name,isdir);if(err){throw new FS.ErrnoError(err)}err=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(err){throw new FS.ErrnoError(err)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(63)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(10)}if(new_dir!==old_dir){err=FS.nodePermissions(old_dir,\"w\");if(err){throw new FS.ErrnoError(err)}}try{if(FS.trackingDelegate[\"willMovePath\"]){FS.trackingDelegate[\"willMovePath\"](old_path,new_path)}}catch(e){console.log(\"FS.trackingDelegate['willMovePath']('\"+old_path+\"', '\"+new_path+\"') threw an exception: \"+e.message)}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}try{if(FS.trackingDelegate[\"onMovePath\"])FS.trackingDelegate[\"onMovePath\"](old_path,new_path)}catch(e){console.log(\"FS.trackingDelegate['onMovePath']('\"+old_path+\"', '\"+new_path+\"') threw an exception: \"+e.message)}},rmdir:function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,true);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}try{if(FS.trackingDelegate[\"willDeletePath\"]){FS.trackingDelegate[\"willDeletePath\"](path)}}catch(e){console.log(\"FS.trackingDelegate['willDeletePath']('\"+path+\"') threw an exception: \"+e.message)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate[\"onDeletePath\"])FS.trackingDelegate[\"onDeletePath\"](path)}catch(e){console.log(\"FS.trackingDelegate['onDeletePath']('\"+path+\"') threw an exception: \"+e.message)}},readdir:function(path){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(54)}return node.node_ops.readdir(node)},unlink:function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,false);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}try{if(FS.trackingDelegate[\"willDeletePath\"]){FS.trackingDelegate[\"willDeletePath\"](path)}}catch(e){console.log(\"FS.trackingDelegate['willDeletePath']('\"+path+\"') threw an exception: \"+e.message)}parent.node_ops.unlink(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate[\"onDeletePath\"])FS.trackingDelegate[\"onDeletePath\"](path)}catch(e){console.log(\"FS.trackingDelegate['onDeletePath']('\"+path+\"') threw an exception: \"+e.message)}},readlink:function(path){var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(44)}if(!link.node_ops.readlink){throw new FS.ErrnoError(28)}return PATH_FS.resolve(FS.getPath(link.parent),link.node_ops.readlink(link))},stat:function(path,dontFollow){var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(44)}if(!node.node_ops.getattr){throw new FS.ErrnoError(63)}return node.node_ops.getattr(node)},lstat:function(path){return FS.stat(path,true)},chmod:function(path,mode,dontFollow){var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})},lchmod:function(path,mode){FS.chmod(path,mode,true)},fchmod:function(fd,mode){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}FS.chmod(stream.node,mode)},chown:function(path,uid,gid,dontFollow){var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{timestamp:Date.now()})},lchown:function(path,uid,gid){FS.chown(path,uid,gid,true)},fchown:function(fd,uid,gid){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}FS.chown(stream.node,uid,gid)},truncate:function(path,len){if(len<0){throw new FS.ErrnoError(28)}var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(31)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(28)}var err=FS.nodePermissions(node,\"w\");if(err){throw new FS.ErrnoError(err)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})},ftruncate:function(fd,len){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(28)}FS.truncate(stream.node,len)},utime:function(path,atime,mtime){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})},open:function(path,flags,mode,fd_start,fd_end){if(path===\"\"){throw new FS.ErrnoError(44)}flags=typeof flags===\"string\"?FS.modeStringToFlags(flags):flags;mode=typeof mode===\"undefined\"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path===\"object\"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(20)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw new FS.ErrnoError(44)}if(FS.isChrdev(node.mode)){flags&=~512}if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}if(!created){var err=FS.mayOpen(node,flags);if(err){throw new FS.ErrnoError(err)}}if(flags&512){FS.truncate(node,0)}flags&=~(128|512);var stream=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,ungotten:[],error:false},fd_start,fd_end);if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module[\"logReadFiles\"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1;console.log(\"FS.trackingDelegate error on read file: \"+path)}}try{if(FS.trackingDelegate[\"onOpenFile\"]){var trackingFlags=0;if((flags&2097155)!==1){trackingFlags|=FS.tracking.openFlags.READ}if((flags&2097155)!==0){trackingFlags|=FS.tracking.openFlags.WRITE}FS.trackingDelegate[\"onOpenFile\"](path,trackingFlags)}}catch(e){console.log(\"FS.trackingDelegate['onOpenFile']('\"+path+\"', flags) threw an exception: \"+e.message)}return stream},close:function(stream){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(stream.getdents)stream.getdents=null;try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}stream.fd=null},isClosed:function(stream){return stream.fd===null},llseek:function(stream,offset,whence){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(70)}if(whence!=0&&whence!=1&&whence!=2){throw new FS.ErrnoError(28)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position},read:function(stream,buffer,offset,length,position){if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.read){throw new FS.ErrnoError(28)}var seeking=typeof position!==\"undefined\";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead},write:function(stream,buffer,offset,length,position,canOwn){if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.write){throw new FS.ErrnoError(28)}if(stream.flags&1024){FS.llseek(stream,0,2)}var seeking=typeof position!==\"undefined\";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;try{if(stream.path&&FS.trackingDelegate[\"onWriteToFile\"])FS.trackingDelegate[\"onWriteToFile\"](stream.path)}catch(e){console.log(\"FS.trackingDelegate['onWriteToFile']('\"+stream.path+\"') threw an exception: \"+e.message)}return bytesWritten},allocate:function(stream,offset,length){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(offset<0||length<=0){throw new FS.ErrnoError(28)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode)){throw new FS.ErrnoError(43)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(138)}stream.stream_ops.allocate(stream,offset,length)},mmap:function(stream,buffer,offset,length,position,prot,flags){if((prot&2)!==0&&(flags&2)===0&&(stream.flags&2097155)!==2){throw new FS.ErrnoError(2)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(2)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(43)}return stream.stream_ops.mmap(stream,buffer,offset,length,position,prot,flags)},msync:function(stream,buffer,offset,length,mmapFlags){if(!stream||!stream.stream_ops.msync){return 0}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags)},munmap:function(stream){return 0},ioctl:function(stream,cmd,arg){if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(59)}return stream.stream_ops.ioctl(stream,cmd,arg)},readFile:function(path,opts){opts=opts||{};opts.flags=opts.flags||\"r\";opts.encoding=opts.encoding||\"binary\";if(opts.encoding!==\"utf8\"&&opts.encoding!==\"binary\"){throw new Error('Invalid encoding type \"'+opts.encoding+'\"')}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding===\"utf8\"){ret=UTF8ArrayToString(buf,0)}else if(opts.encoding===\"binary\"){ret=buf}FS.close(stream);return ret},writeFile:function(path,data,opts){opts=opts||{};opts.flags=opts.flags||\"w\";var stream=FS.open(path,opts.flags,opts.mode);if(typeof data===\"string\"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,undefined,opts.canOwn)}else if(ArrayBuffer.isView(data)){FS.write(stream,data,0,data.byteLength,undefined,opts.canOwn)}else{throw new Error(\"Unsupported data type\")}FS.close(stream)},cwd:function(){return FS.currentPath},chdir:function(path){var lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw new FS.ErrnoError(44)}if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(54)}var err=FS.nodePermissions(lookup.node,\"x\");if(err){throw new FS.ErrnoError(err)}FS.currentPath=lookup.path},createDefaultDirectories:function(){FS.mkdir(\"/tmp\");FS.mkdir(\"/home\");FS.mkdir(\"/home/web_user\")},createDefaultDevices:function(){FS.mkdir(\"/dev\");FS.registerDevice(FS.makedev(1,3),{read:function(){return 0},write:function(stream,buffer,offset,length,pos){return length}});FS.mkdev(\"/dev/null\",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev(\"/dev/tty\",FS.makedev(5,0));FS.mkdev(\"/dev/tty1\",FS.makedev(6,0));var random_device;if(typeof crypto===\"object\"&&typeof crypto[\"getRandomValues\"]===\"function\"){var randomBuffer=new Uint8Array(1);random_device=function(){crypto.getRandomValues(randomBuffer);return randomBuffer[0]}}else if(ENVIRONMENT_IS_NODE){try{var crypto_module=__webpack_require__(/*! crypto */ \"../node_modules/crypto-browserify/index.js\");random_device=function(){return crypto_module[\"randomBytes\"](1)[0]}}catch(e){}}else{}if(!random_device){random_device=function(){abort(\"random_device\")}}FS.createDevice(\"/dev\",\"random\",random_device);FS.createDevice(\"/dev\",\"urandom\",random_device);FS.mkdir(\"/dev/shm\");FS.mkdir(\"/dev/shm/tmp\")},createSpecialDirectories:function(){FS.mkdir(\"/proc\");FS.mkdir(\"/proc/self\");FS.mkdir(\"/proc/self/fd\");FS.mount({mount:function(){var node=FS.createNode(\"/proc/self\",\"fd\",16384|511,73);node.node_ops={lookup:function(parent,name){var fd=+name;var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(8);var ret={parent:null,mount:{mountpoint:\"fake\"},node_ops:{readlink:function(){return stream.path}}};ret.parent=ret;return ret}};return node}},{},\"/proc/self/fd\")},createStandardStreams:function(){if(Module[\"stdin\"]){FS.createDevice(\"/dev\",\"stdin\",Module[\"stdin\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdin\")}if(Module[\"stdout\"]){FS.createDevice(\"/dev\",\"stdout\",null,Module[\"stdout\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdout\")}if(Module[\"stderr\"]){FS.createDevice(\"/dev\",\"stderr\",null,Module[\"stderr\"])}else{FS.symlink(\"/dev/tty1\",\"/dev/stderr\")}var stdin=FS.open(\"/dev/stdin\",\"r\");var stdout=FS.open(\"/dev/stdout\",\"w\");var stderr=FS.open(\"/dev/stderr\",\"w\")},ensureErrnoError:function(){if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.node=node;this.setErrno=function(errno){this.errno=errno};this.setErrno(errno);this.message=\"FS error\"};FS.ErrnoError.prototype=new Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[44].forEach(function(code){FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack=\"<generic error, no stack>\"})},staticInit:function(){FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},\"/\");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={\"MEMFS\":MEMFS,\"IDBFS\":IDBFS,\"NODEFS\":NODEFS,\"WORKERFS\":WORKERFS}},init:function(input,output,error){FS.init.initialized=true;FS.ensureErrnoError();Module[\"stdin\"]=input||Module[\"stdin\"];Module[\"stdout\"]=output||Module[\"stdout\"];Module[\"stderr\"]=error||Module[\"stderr\"];FS.createStandardStreams()},quit:function(){FS.init.initialized=false;var fflush=Module[\"_fflush\"];if(fflush)fflush(0);for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}},getMode:function(canRead,canWrite){var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode},joinPath:function(parts,forceRelative){var path=PATH.join.apply(null,parts);if(forceRelative&&path[0]==\"/\")path=path.substr(1);return path},absolutePath:function(relative,base){return PATH_FS.resolve(base,relative)},standardizePath:function(path){return PATH.normalize(path)},findObject:function(path,dontResolveLastLink){var ret=FS.analyzePath(path,dontResolveLastLink);if(ret.exists){return ret.object}else{___setErrNo(ret.error);return null}},analyzePath:function(path,dontResolveLastLink){try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path===\"/\"}catch(e){ret.error=e.errno}return ret},createFolder:function(parent,name,canRead,canWrite){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.mkdir(path,mode)},createPath:function(parent,path,canRead,canWrite){parent=typeof parent===\"string\"?parent:FS.getPath(parent);var parts=path.split(\"/\").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current},createFile:function(parent,name,properties,canRead,canWrite){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.create(path,mode)},createDataFile:function(parent,name,data,canRead,canWrite,canOwn){var path=name?PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name):parent;var mode=FS.getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data===\"string\"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,\"w\");FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}return node},createDevice:function(parent,name,input,output){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open:function(stream){stream.seekable=false},close:function(stream){if(output&&output.buffer&&output.buffer.length){output(10)}},read:function(stream,buffer,offset,length,pos){var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write:function(stream,buffer,offset,length,pos){for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(29)}}if(length){stream.node.timestamp=Date.now()}return i}});return FS.mkdev(path,mode,dev)},createLink:function(parent,name,target,canRead,canWrite){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);return FS.symlink(target,path)},forceLoadFile:function(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;var success=true;if(typeof XMLHttpRequest!==\"undefined\"){throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\")}else if(read_){try{obj.contents=intArrayFromString(read_(obj.url),true);obj.usedBytes=obj.contents.length}catch(e){success=false}}else{throw new Error(\"Cannot load without read() or XMLHttpRequest.\")}if(!success)___setErrNo(29);return success},createLazyFile:function(parent,name,url,canRead,canWrite){function LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest;xhr.open(\"HEAD\",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);var datalength=Number(xhr.getResponseHeader(\"Content-length\"));var header;var hasByteServing=(header=xhr.getResponseHeader(\"Accept-Ranges\"))&&header===\"bytes\";var usesGzip=(header=xhr.getResponseHeader(\"Content-Encoding\"))&&header===\"gzip\";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=function(from,to){if(from>to)throw new Error(\"invalid range (\"+from+\", \"+to+\") or no bytes requested!\");if(to>datalength-1)throw new Error(\"only \"+datalength+\" bytes available! programmer error!\");var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);if(datalength!==chunkSize)xhr.setRequestHeader(\"Range\",\"bytes=\"+from+\"-\"+to);if(typeof Uint8Array!=\"undefined\")xhr.responseType=\"arraybuffer\";if(xhr.overrideMimeType){xhr.overrideMimeType(\"text/plain; charset=x-user-defined\")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}else{return intArrayFromString(xhr.responseText||\"\",true)}};var lazyArray=this;lazyArray.setDataGetter(function(chunkNum){var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]===\"undefined\"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]===\"undefined\")throw new Error(\"doXHR failed!\");return lazyArray.chunks[chunkNum]});if(usesGzip||!datalength){chunkSize=datalength=1;datalength=this.getter(0).length;chunkSize=datalength;console.log(\"LazyFiles on gzip forces download of the whole file when length is accessed\")}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof XMLHttpRequest!==\"undefined\"){if(!ENVIRONMENT_IS_WORKER)throw\"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";var lazyArray=new LazyUint8Array;Object.defineProperties(lazyArray,{length:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._length}},chunkSize:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize}}});var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperties(node,{usedBytes:{get:function(){return this.contents.length}}});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach(function(key){var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(29)}return fn.apply(null,arguments)}});stream_ops.read=function stream_ops_read(stream,buffer,offset,length,position){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(29)}var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size};node.stream_ops=stream_ops;return node},createPreloadedFile:function(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish){Browser.init();var fullname=name?PATH_FS.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency(\"cp \"+fullname);function processData(byteArray){function finish(byteArray){if(preFinish)preFinish();if(!dontCreateFile){FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}if(onload)onload();removeRunDependency(dep)}var handled=false;Module[\"preloadPlugins\"].forEach(function(plugin){if(handled)return;if(plugin[\"canHandle\"](fullname)){plugin[\"handle\"](byteArray,fullname,finish,function(){if(onerror)onerror();removeRunDependency(dep)});handled=true}});if(!handled)finish(byteArray)}addRunDependency(dep);if(typeof url==\"string\"){Browser.asyncLoad(url,function(byteArray){processData(byteArray)},onerror)}else{processData(url)}},indexedDB:function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},DB_NAME:function(){return\"EM_FS_\"+window.location.pathname},DB_VERSION:20,DB_STORE_NAME:\"FILE_DATA\",saveFilesToDB:function(paths,onload,onerror){onload=onload||function(){};onerror=onerror||function(){};var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=function openRequest_onupgradeneeded(){console.log(\"creating db\");var db=openRequest.result;db.createObjectStore(FS.DB_STORE_NAME)};openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;var transaction=db.transaction([FS.DB_STORE_NAME],\"readwrite\");var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach(function(path){var putRequest=files.put(FS.analyzePath(path).object.contents,path);putRequest.onsuccess=function putRequest_onsuccess(){ok++;if(ok+fail==total)finish()};putRequest.onerror=function putRequest_onerror(){fail++;if(ok+fail==total)finish()}});transaction.onerror=onerror};openRequest.onerror=onerror},loadFilesFromDB:function(paths,onload,onerror){onload=onload||function(){};onerror=onerror||function(){};var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=onerror;openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;try{var transaction=db.transaction([FS.DB_STORE_NAME],\"readonly\")}catch(e){onerror(e);return}var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach(function(path){var getRequest=files.get(path);getRequest.onsuccess=function getRequest_onsuccess(){if(FS.analyzePath(path).exists){FS.unlink(path)}FS.createDataFile(PATH.dirname(path),PATH.basename(path),getRequest.result,true,true,true);ok++;if(ok+fail==total)finish()};getRequest.onerror=function getRequest_onerror(){fail++;if(ok+fail==total)finish()}});transaction.onerror=onerror};openRequest.onerror=onerror}};var SYSCALLS={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:function(dirfd,path){if(path[0]!==\"/\"){var dir;if(dirfd===-100){dir=FS.cwd()}else{var dirstream=FS.getStream(dirfd);if(!dirstream)throw new FS.ErrnoError(8);dir=dirstream.path}path=PATH.join2(dir,path)}return path},doStat:function(func,path,buf){try{var stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){return-54}throw e}HEAP32[buf>>2]=stat.dev;HEAP32[buf+4>>2]=0;HEAP32[buf+8>>2]=stat.ino;HEAP32[buf+12>>2]=stat.mode;HEAP32[buf+16>>2]=stat.nlink;HEAP32[buf+20>>2]=stat.uid;HEAP32[buf+24>>2]=stat.gid;HEAP32[buf+28>>2]=stat.rdev;HEAP32[buf+32>>2]=0;tempI64=[stat.size>>>0,(tempDouble=stat.size,+Math_abs(tempDouble)>=+1?tempDouble>+0?(Math_min(+Math_floor(tempDouble/+4294967296),+4294967295)|0)>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/+4294967296)>>>0:0)],HEAP32[buf+40>>2]=tempI64[0],HEAP32[buf+44>>2]=tempI64[1];HEAP32[buf+48>>2]=4096;HEAP32[buf+52>>2]=stat.blocks;HEAP32[buf+56>>2]=stat.atime.getTime()/1e3|0;HEAP32[buf+60>>2]=0;HEAP32[buf+64>>2]=stat.mtime.getTime()/1e3|0;HEAP32[buf+68>>2]=0;HEAP32[buf+72>>2]=stat.ctime.getTime()/1e3|0;HEAP32[buf+76>>2]=0;tempI64=[stat.ino>>>0,(tempDouble=stat.ino,+Math_abs(tempDouble)>=+1?tempDouble>+0?(Math_min(+Math_floor(tempDouble/+4294967296),+4294967295)|0)>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/+4294967296)>>>0:0)],HEAP32[buf+80>>2]=tempI64[0],HEAP32[buf+84>>2]=tempI64[1];return 0},doMsync:function(addr,stream,len,flags){var buffer=new Uint8Array(HEAPU8.subarray(addr,addr+len));FS.msync(stream,buffer,0,len,flags)},doMkdir:function(path,mode){path=PATH.normalize(path);if(path[path.length-1]===\"/\")path=path.substr(0,path.length-1);FS.mkdir(path,mode,0);return 0},doMknod:function(path,mode,dev){switch(mode&61440){case 32768:case 8192:case 24576:case 4096:case 49152:break;default:return-28}FS.mknod(path,mode,dev);return 0},doReadlink:function(path,buf,bufsize){if(bufsize<=0)return-28;var ret=FS.readlink(path);var len=Math.min(bufsize,lengthBytesUTF8(ret));var endChar=HEAP8[buf+len];stringToUTF8(ret,buf,bufsize+1);HEAP8[buf+len]=endChar;return len},doAccess:function(path,amode){if(amode&~7){return-28}var node;var lookup=FS.lookupPath(path,{follow:true});node=lookup.node;if(!node){return-44}var perms=\"\";if(amode&4)perms+=\"r\";if(amode&2)perms+=\"w\";if(amode&1)perms+=\"x\";if(perms&&FS.nodePermissions(node,perms)){return-2}return 0},doDup:function(path,flags,suggestFD){var suggest=FS.getStream(suggestFD);if(suggest)FS.close(suggest);return FS.open(path,flags,0,suggestFD,suggestFD).fd},doReadv:function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break}return ret},doWritev:function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr}return ret},varargs:0,get:function(varargs){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(){var ret=UTF8ToString(SYSCALLS.get());return ret},getStreamFromFD:function(fd){if(fd===undefined)fd=SYSCALLS.get();var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(8);return stream},get64:function(){var low=SYSCALLS.get(),high=SYSCALLS.get();return low},getZero:function(){SYSCALLS.get()}};function ___syscall221(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),cmd=SYSCALLS.get();switch(cmd){case 0:{var arg=SYSCALLS.get();if(arg<0){return-28}var newStream;newStream=FS.open(stream.path,stream.flags,0,arg);return newStream.fd}case 1:case 2:return 0;case 3:return stream.flags;case 4:{var arg=SYSCALLS.get();stream.flags|=arg;return 0}case 12:{var arg=SYSCALLS.get();var offset=0;HEAP16[arg+offset>>1]=2;return 0}case 13:case 14:return 0;case 16:case 8:return-28;case 9:___setErrNo(28);return-1;default:{return-28}}}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall5(which,varargs){SYSCALLS.varargs=varargs;try{var pathname=SYSCALLS.getStr(),flags=SYSCALLS.get(),mode=SYSCALLS.get();var stream=FS.open(pathname,flags,mode);return stream.fd}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall54(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),op=SYSCALLS.get();switch(op){case 21509:case 21505:{if(!stream.tty)return-59;return 0}case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:{if(!stream.tty)return-59;return 0}case 21519:{if(!stream.tty)return-59;var argp=SYSCALLS.get();HEAP32[argp>>2]=0;return 0}case 21520:{if(!stream.tty)return-59;return-28}case 21531:{var argp=SYSCALLS.get();return FS.ioctl(stream,op,argp)}case 21523:{if(!stream.tty)return-59;return 0}case 21524:{if(!stream.tty)return-59;return 0}default:abort(\"bad ioctl syscall \"+op)}}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___unlock(){}function _fd_close(fd){try{var stream=SYSCALLS.getStreamFromFD(fd);FS.close(stream);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function ___wasi_fd_close(){return _fd_close.apply(null,arguments)}function _fd_read(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=SYSCALLS.doReadv(stream,iov,iovcnt);HEAP32[pnum>>2]=num;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function ___wasi_fd_read(){return _fd_read.apply(null,arguments)}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){try{var stream=SYSCALLS.getStreamFromFD(fd);var HIGH_OFFSET=4294967296;var offset=offset_high*HIGH_OFFSET+(offset_low>>>0);var DOUBLE_LIMIT=9007199254740992;if(offset<=-DOUBLE_LIMIT||offset>=DOUBLE_LIMIT){return-61}FS.llseek(stream,offset,whence);tempI64=[stream.position>>>0,(tempDouble=stream.position,+Math_abs(tempDouble)>=+1?tempDouble>+0?(Math_min(+Math_floor(tempDouble/+4294967296),+4294967295)|0)>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/+4294967296)>>>0:0)],HEAP32[newOffset>>2]=tempI64[0],HEAP32[newOffset+4>>2]=tempI64[1];if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function ___wasi_fd_seek(){return _fd_seek.apply(null,arguments)}function _fd_write(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=SYSCALLS.doWritev(stream,iov,iovcnt);HEAP32[pnum>>2]=num;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function ___wasi_fd_write(){return _fd_write.apply(null,arguments)}function _emscripten_get_heap_size(){return HEAP8.length}function abortOnCannotGrowMemory(requestedSize){abort(\"OOM\")}function _emscripten_resize_heap(requestedSize){abortOnCannotGrowMemory(requestedSize)}function _llvm_exp2_f32(x){return Math.pow(2,x)}function _llvm_exp2_f64(a0){return _llvm_exp2_f32(a0)}function _llvm_log10_f32(x){return Math.log(x)/Math.LN10}function _llvm_log10_f64(a0){return _llvm_log10_f32(a0)}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest)}FS.staticInit();if(ENVIRONMENT_HAS_NODE){var fs=__webpack_require__(/*! fs */ \"../node_modules/node-libs-browser/mock/empty.js\");var NODEJS_PATH=__webpack_require__(/*! path */ \"../node_modules/path-browserify/index.js\");NODEFS.staticInit()}var ASSERTIONS=false;function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}function intArrayToString(array){var ret=[];for(var i=0;i<array.length;i++){var chr=array[i];if(chr>255){if(ASSERTIONS){assert(false,\"Character code \"+chr+\" (\"+String.fromCharCode(chr)+\")  at offset \"+i+\" not in 0x00-0xFF.\")}chr&=255}ret.push(String.fromCharCode(chr))}return ret.join(\"\")}var decodeBase64=typeof atob===\"function\"?atob:function(input){var keyStr=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";var output=\"\";var chr1,chr2,chr3;var enc1,enc2,enc3,enc4;var i=0;input=input.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");do{enc1=keyStr.indexOf(input.charAt(i++));enc2=keyStr.indexOf(input.charAt(i++));enc3=keyStr.indexOf(input.charAt(i++));enc4=keyStr.indexOf(input.charAt(i++));chr1=enc1<<2|enc2>>4;chr2=(enc2&15)<<4|enc3>>2;chr3=(enc3&3)<<6|enc4;output=output+String.fromCharCode(chr1);if(enc3!==64){output=output+String.fromCharCode(chr2)}if(enc4!==64){output=output+String.fromCharCode(chr3)}}while(i<input.length);return output};function intArrayFromBase64(s){if(typeof ENVIRONMENT_IS_NODE===\"boolean\"&&ENVIRONMENT_IS_NODE){var buf;try{buf=Buffer.from(s,\"base64\")}catch(_){buf=new Buffer(s,\"base64\")}return new Uint8Array(buf.buffer,buf.byteOffset,buf.byteLength)}try{var decoded=decodeBase64(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}catch(_){throw new Error(\"Converting base64 string to bytes failed.\")}}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}function jsCall_ii(index,a1){return functionPointers[index](a1)}function jsCall_iidiiii(index,a1,a2,a3,a4,a5,a6){return functionPointers[index](a1,a2,a3,a4,a5,a6)}function jsCall_iii(index,a1,a2){return functionPointers[index](a1,a2)}function jsCall_iiii(index,a1,a2,a3){return functionPointers[index](a1,a2,a3)}function jsCall_iiiii(index,a1,a2,a3,a4){return functionPointers[index](a1,a2,a3,a4)}function jsCall_vii(index,a1,a2){functionPointers[index](a1,a2)}function jsCall_viii(index,a1,a2,a3){functionPointers[index](a1,a2,a3)}var asmGlobalArg={\"Math\":Math,\"Int8Array\":Int8Array,\"Int16Array\":Int16Array,\"Int32Array\":Int32Array,\"Uint8Array\":Uint8Array,\"Uint16Array\":Uint16Array,\"Float32Array\":Float32Array,\"Float64Array\":Float64Array};var asmLibraryArg={\"A\":_fd_seek,\"B\":_fd_write,\"C\":_llvm_exp2_f32,\"D\":_llvm_exp2_f64,\"E\":_llvm_log10_f32,\"F\":_llvm_log10_f64,\"G\":abortOnCannotGrowMemory,\"H\":demangle,\"I\":demangleAll,\"J\":jsStackTrace,\"K\":stackTrace,\"L\":tempDoublePtr,\"a\":abort,\"b\":setTempRet0,\"c\":getTempRet0,\"d\":jsCall_ii,\"e\":jsCall_iidiiii,\"f\":jsCall_iii,\"g\":jsCall_iiii,\"h\":jsCall_iiiii,\"i\":jsCall_vii,\"j\":jsCall_viii,\"k\":___assert_fail,\"l\":___lock,\"m\":___setErrNo,\"n\":___syscall221,\"o\":___syscall5,\"p\":___syscall54,\"q\":___unlock,\"r\":___wasi_fd_close,\"s\":___wasi_fd_read,\"t\":___wasi_fd_seek,\"u\":___wasi_fd_write,\"v\":_emscripten_get_heap_size,\"w\":_emscripten_memcpy_big,\"x\":_emscripten_resize_heap,\"y\":_fd_close,\"z\":_fd_read};// EMSCRIPTEN_START_ASM\nvar asm=(/** @suppress {uselessCode} */ function(global,env,buffer) {\n\"use asm\";var a=new global.Int8Array(buffer),b=new global.Int16Array(buffer),c=new global.Int32Array(buffer),d=new global.Uint8Array(buffer),e=new global.Uint16Array(buffer),f=new global.Float32Array(buffer),g=new global.Float64Array(buffer),h=env.L|0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0.0,q=global.Math.floor,r=global.Math.pow,s=global.Math.cos,t=global.Math.sin,u=global.Math.log,v=global.Math.imul,w=global.Math.clz32,x=env.a,y=env.b,z=env.c,A=env.d,B=env.e,C=env.f,D=env.g,E=env.h,F=env.i,G=env.j,H=env.k,I=env.l,J=env.m,K=env.n,L=env.o,M=env.p,N=env.q,O=env.r,P=env.s,Q=env.t,R=env.u,S=env.v,T=env.w,U=env.x,V=env.y,W=env.z,X=env.A,Y=env.B,Z=env.C,_=env.D,$=env.E,aa=env.F,ba=env.G,ca=env.H,da=env.I,ea=env.J,fa=env.K,ga=954608,ha=6197488,ia=0.0;\n// EMSCRIPTEN_START_FUNCS\nfunction qa(a){a=a|0;var b=0;b=ga;ga=ga+a|0;ga=ga+15&-16;return b|0}function ra(){return ga|0}function sa(a){a=a|0;ga=a}function ta(a,b){a=a|0;b=b|0;ga=a;ha=b}function ua(b,d){b=b|0;d=d|0;var e=0,f=0;e=Ne(356)|0;if(!e){d=0;return d|0}df(e|0,0,356)|0;f=Ne(d)|0;c[e+276>>2]=f;if(!f){Oe(e);d=0;return d|0}else{cf(f|0,b|0,d|0)|0;c[e+280>>2]=d;a[e+268>>0]=0;c[e+284>>2]=0;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;a[e+12>>0]=0;d=e;return d|0}return 0}function va(a){a=a|0;return a+12|0}function wa(a){a=a|0;if(!a)return;Oe(c[a+276>>2]|0);Oe(c[a+284>>2]|0);Oe(c[a+352>>2]|0);Oe(a);return}function xa(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;do if(b>>>0>=4)if(!(Ga(a,b)|0))if(!(Ka(a,b)|0))if(!(Ja(a,b)|0))if((Rd(66116,a,4)|0)!=0?(Rd(66121,a,4)|0)!=0:0)if(!(Oa(a,b)|0))if(!($b(a,b)|0)){if(c|0?(d=Je(c,46)|0,d|0):0){if(!(Pd(d,66126)|0)){d=2;break}if(!(Pd(d,66131)|0)){d=2;break}}d=8}else d=5;else d=6;else d=0;else d=4;else d=3;else d=1;else d=0;while(0);return d|0}function ya(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;a[b>>0]=75;a[b+1>>0]=83;a[b+2>>0]=83;a[b+3>>0]=88;a[b+4>>0]=c;a[b+5>>0]=(c&65535)>>>8;a[b+6>>0]=d;a[b+7>>0]=(d&65535)>>>8;a[b+8>>0]=e;a[b+9>>0]=(e&65535)>>>8;a[b+10>>0]=f;a[b+11>>0]=(f&65535)>>>8;a[b+12>>0]=0;a[b+13>>0]=0;a[b+14>>0]=16;a[b+15>>0]=5;f=b+28|0;a[f>>0]=0;a[f+1>>0]=0;a[f+2>>0]=0;a[f+3>>0]=0;return}function za(f,g,h){f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;if(!f){r=0;return r|0}i=xa(f,g,h)|0;a:do switch(i|0){case 2:{h=Ea(f,g)|0;if(!h){r=0;return r|0}else{Fa(h,f,g);break a}}case 1:{h=Ia(f,g)|0;if(!h){r=0;return r|0}else{Ha(h,f,g);break a}}case 5:{h=bc(f,g)|0;if(!h){r=0;return r|0}else{ac(h,f,g);break a}}case 4:{h=Na(f,g)|0;if(!h){r=0;return r|0}else{La(h,f,g);break a}}case 3:{h=Ma(f,g)|0;if(!h){r=0;return r|0}else{La(h,f,g);break a}}case 6:{h=Qa(f,g)|0;if(!h){r=0;return r|0}else{Pa(h,f,g);break a}}case 0:{h=Ca(f,g)|0;if(!h){r=0;return r|0}else{Aa(h,f,g);break a}}default:{r=0;return r|0}}while(0);c[h>>2]=i;j=h+12|0;b:while(1){i=a[j>>0]|0;switch(i<<24>>24){case 0:break b;case -127:{g=j+1|0;f=a[g>>0]|0;if((f+81&255)<10){a[j>>0]=-121;a[g>>0]=(f&255)+165;i=2}else r=21;break}default:r=21}if((r|0)==21){r=0;i=i&255;i=(i+-224|0)>>>0>28&(i+-129|0)>>>0>30?1:2}j=j+i|0}p=h+276|0;m=c[p>>2]|0;if(!(Rd(66116,m,4)|0)){c[h+288>>2]=0;b[h+328>>1]=d[m+5>>0]<<8|d[m+4>>0];b[h+330>>1]=d[m+7>>0]<<8|d[m+6>>0];b[h+332>>1]=d[m+9>>0]<<8|d[m+8>>0];b[h+334>>1]=d[m+11>>0]<<8|d[m+10>>0];a[h+336>>0]=a[m+12>>0]|0;f=m+13|0;a[h+337>>0]=a[f>>0]&127;a[h+338>>0]=(d[f>>0]|0)>>>7;a[h+339>>0]=a[m+14>>0]|0;f=a[m+15>>0]|0;a[h+340>>0]=f;f=f&255;r=f&2;c[h+304>>2]=r;if(!r){c[h+324>>2]=(f&24|0)==16&1;j=f>>>3&1;c[h+312>>2]=j;i=0;g=f>>>2;j=(j|0)==0?0:f>>>4&1}else{i=1;g=f>>>3;j=f>>>2&1}r=f&1;c[h+296>>2]=r;c[h+300>>2]=r;c[h+316>>2]=j;c[h+308>>2]=g&1;c[h+320>>2]=f>>>6&1;c[h+292>>2]=i;a[h+341>>0]=0;a[h+342>>0]=-1;r=h+343|0;a[r>>0]=-2139062144;a[r+1>>0]=-2139062144>>8;a[r+2>>0]=-2139062144>>16;a[r+3>>0]=-2139062144>>24;r=h;return r|0}if(Rd(66121,m,4)|0){r=h;return r|0}c[h+288>>2]=1;b[h+328>>1]=d[m+5>>0]<<8|d[m+4>>0];b[h+330>>1]=d[m+7>>0]<<8|d[m+6>>0];b[h+332>>1]=d[m+9>>0]<<8|d[m+8>>0];b[h+334>>1]=d[m+11>>0]<<8|d[m+10>>0];a[h+336>>0]=a[m+12>>0]|0;g=m+13|0;a[h+337>>0]=a[g>>0]&127;a[h+338>>0]=(d[g>>0]|0)>>>7;g=m+14|0;f=a[g>>0]|0;a[h+339>>0]=f;j=a[m+15>>0]|0;a[h+340>>0]=j;j=j&255;o=j&2;c[h+304>>2]=o;if(!o){c[h+324>>2]=(j&24|0)==16&1;l=j>>>3&1;c[h+312>>2]=l;i=0;k=j>>>2;l=(l|0)==0?0:j>>>4&1}else{i=1;k=j>>>3;l=j>>>2&1}o=j&1;c[h+296>>2]=o;c[h+300>>2]=o;c[h+316>>2]=l;c[h+308>>2]=k&1;c[h+320>>2]=j>>>6&1;c[h+292>>2]=i;if((d[g>>0]|0)<16){a[h+341>>0]=0;a[h+342>>0]=-1;r=h+343|0;a[r>>0]=-2139062144;a[r+1>>0]=-2139062144>>8;a[r+2>>0]=-2139062144>>16;a[r+3>>0]=-2139062144>>24;r=h;return r|0}a[h+341>>0]=a[m+24>>0]|0;a[h+342>>0]=a[m+26>>0]|0;a[h+343>>0]=a[m+28>>0]|0;a[h+344>>0]=a[m+29>>0]|0;a[h+345>>0]=a[m+30>>0]|0;a[h+346>>0]=a[m+31>>0]|0;o=d[m+18>>0]<<16|d[m+19>>0]<<24|d[m+17>>0]<<8|d[m+16>>0];j=(f&255)+16+o|0;if(!o){r=h;return r|0}o=h+280|0;g=c[o>>2]|0;if((j+25|0)>>>0>g>>>0){r=h;return r|0}if(Qd(m+j|0,66136,4)|0){r=h;return r|0}i=d[m+(j+9)>>0]<<8|d[m+(j+8)>>0];f=i&65535;n=h+348|0;b[n>>1]=f;if(!i){r=h;return r|0}l=i*272|0;i=Ne(l)|0;m=h+352|0;c[m>>2]=i;df(i|0,0,l|0)|0;if(f<<16>>16==0|(j+20|0)>>>0>g>>>0){r=h;return r|0}f=g;g=j+16|0;j=0;while(1){l=c[p>>2]|0;c[i+(j*272|0)>>2]=d[l+g>>0];c[i+(j*272|0)+4>>2]=d[l+(g+1)>>0];k=l+(g+2)|0;c[i+(j*272|0)+264>>2]=d[k+2>>0]<<16|d[k+3>>0]<<24|d[k+1>>0]<<8|d[k>>0];l=l+(g+6)|0;c[i+(j*272|0)+268>>2]=d[l+2>>0]<<16|d[l+3>>0]<<24|d[l+1>>0]<<8|d[l>>0];l=g+10|0;k=0;while(1){g=l+1|0;if(l>>>0<f>>>0)f=a[(c[p>>2]|0)+l>>0]|0;else f=0;a[i+(j*272|0)+8+k>>0]=f;i=c[m>>2]|0;if(!(a[i+(j*272|0)+8+k>>0]|0))break;q=k+1|0;if(q>>>0>=255){r=46;break}f=c[o>>2]|0;l=g;k=q}if((r|0)==46?(r=0,(q|0)!=255):0){r=49;break}j=j+1|0;if(j>>>0>=(e[n>>1]|0)>>>0){r=49;break}f=c[o>>2]|0;if((l+5|0)>>>0>f>>>0){r=49;break}}if((r|0)==49)return h|0;return 0}function Aa(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0;if(f>>>0<16)return;h=(d[e+14>>0]|0)+16|0;Ba(b,e+h|0,f-h|0);h=b+12|0;g=a[h>>0]|0;if(f>>>0>8201&g<<24>>24==0){Ba(b,e+8201|0,f+-8201|0);g=a[h>>0]|0}if(!(g<<24>>24))Ba(b,e,f);a[b+268>>0]=a[e>>0]|0;a[b+269>>0]=a[e+1>>0]|0;a[b+270>>0]=a[e+2>>0]|0;a[b+271>>0]=a[e+3>>0]|0;a[b+272>>0]=0;c[b+8>>2]=0;c[b+4>>2]=0;c[b>>2]=0;return}function Ba(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if(!b)return;f=xa(d,e,0)|0;c[b>>2]=f;switch(f|0){case 1:{Ha(b,d,e);return}case 3:case 4:{La(b,d,e);return}case 5:{ac(b,d,e);return}case 6:{Pa(b,d,e);return}default:{if(e>>>0>256?(Rd(d,66141,3)|0)==0:0){a[b+12>>0]=a[d+16>>0]|0;a[b+13>>0]=a[d+17>>0]|0;a[b+14>>0]=a[d+18>>0]|0;a[b+15>>0]=a[d+19>>0]|0;a[b+16>>0]=a[d+20>>0]|0;a[b+17>>0]=a[d+21>>0]|0;a[b+18>>0]=a[d+22>>0]|0;a[b+19>>0]=a[d+23>>0]|0;a[b+20>>0]=a[d+24>>0]|0;a[b+21>>0]=a[d+25>>0]|0;a[b+22>>0]=a[d+26>>0]|0;a[b+23>>0]=a[d+27>>0]|0;a[b+24>>0]=a[d+28>>0]|0;a[b+25>>0]=a[d+29>>0]|0;a[b+26>>0]=a[d+30>>0]|0;a[b+27>>0]=a[d+31>>0]|0;a[b+28>>0]=a[d+32>>0]|0;a[b+29>>0]=a[d+33>>0]|0;a[b+30>>0]=a[d+34>>0]|0;a[b+31>>0]=a[d+35>>0]|0;a[b+32>>0]=a[d+36>>0]|0;a[b+33>>0]=a[d+37>>0]|0;a[b+34>>0]=a[d+38>>0]|0;a[b+35>>0]=a[d+39>>0]|0;a[b+36>>0]=a[d+40>>0]|0;a[b+37>>0]=a[d+41>>0]|0;a[b+38>>0]=a[d+42>>0]|0;a[b+39>>0]=a[d+43>>0]|0;a[b+40>>0]=a[d+44>>0]|0;a[b+41>>0]=a[d+45>>0]|0;a[b+42>>0]=a[d+46>>0]|0;a[b+43>>0]=a[d+47>>0]|0;a[b+44>>0]=a[d+48>>0]|0;a[b+45>>0]=a[d+49>>0]|0;a[b+46>>0]=a[d+50>>0]|0;a[b+47>>0]=a[d+51>>0]|0;a[b+48>>0]=a[d+52>>0]|0;a[b+49>>0]=a[d+53>>0]|0;a[b+50>>0]=a[d+54>>0]|0;a[b+51>>0]=a[d+55>>0]|0;a[b+52>>0]=0;return}a[b+12>>0]=0;return}}}function Ca(a,b){a=a|0;b=b|0;if(b>>>0<16)a=0;else a=ua(a,b)|0;return a|0}function Da(){var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;b=c[16464]|0;d=16+b|0;a:do if((b|0)>4){j=16;while(1){if(!(Qd(66148,j,4)|0))break;if((j+5|0)>>>0<d>>>0)j=j+1|0;else break a}c[238428]=j;i=16-j+b|0;c[16464]=i;h=j+i|0;if((i|0)<=7){l=1;return l|0}b=j;while(1){if(!(Qd(66152,b,7)|0))break;if((b+8|0)>>>0<h>>>0)b=b+1|0;else{k=1;l=18;break}}if((l|0)==18)return k|0;g=a[b+7>>0]|0;e=a[b+8>>0]|0;if((i|0)<=8){l=1;return l|0}b=j;while(1){if(!(Qd(66159,b,8)|0))break;if((b+9|0)>>>0<h>>>0)b=b+1|0;else{k=1;l=18;break}}if((l|0)==18)return k|0;f=a[b+8>>0]|0;b=a[b+9>>0]|0;d=j;while(1){if(!(Qd(66167,d,8)|0))break;if((d+9|0)>>>0<h>>>0)d=d+1|0;else{k=1;l=18;break}}if((l|0)==18)return k|0;k=a[d+8>>0]|0;l=a[d+9>>0]|0;a[j>>0]=i;a[j+1>>0]=i>>>8;a[j+2>>0]=0;a[j+3>>0]=0;a[j+4>>0]=-61;a[j+5>>0]=g;a[j+6>>0]=e;a[j+7>>0]=0;a[j+8>>0]=-61;a[j+9>>0]=k;a[j+10>>0]=l;a[j+11>>0]=0;a[j+12>>0]=-61;a[j+13>>0]=f;a[j+14>>0]=b;a[j+15>>0]=0;l=0;return l|0}while(0);c[238428]=0;l=1;return l|0}function Ea(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=c[238428]|0;if(!((c[16464]|0)<1|(e|0)!=0)){Da()|0;e=c[238428]|0}if(!e){d=0;return d|0}c[238429]=0;e=Ae(66800,66145)|0;if(!e){c[238429]=0;e=Ae(67312,66145)|0;if(!e){c[238429]=0;e=Ae(67824,66145)|0;if(!e){c[238429]=0;e=Ae(68336,66145)|0;if(!e)k=c[238429]|0;else f=6}else f=6}else f=6}else f=6;if((f|0)==6){Le(68848,1,32824,e)|0;Ge(e)|0;c[238429]=32824;k=32824}e=(k|0)==0;i=c[238428]|0;a[i+8>>0]=e?-55:-61;j=c[16464]|0;h=j+(e?512:568)|0;a[5014]=h;a[5015]=h>>>8;a[5020]=e?6:4;a[5021]=e?1:3;e=2+-1|0;if(e>>>0<3){f=3289649>>>(e<<3&16777215)&255;g=1903877>>>(e<<3&16777215)&255;e=6114629>>>(e<<3&16777215)&255}else{f=48;g=12;e=76}a[5023]=g;a[5043]=f;if(false){}e=5096;c[e>>2]=0;c[e+4>>2]=0;e=5056;f=b+207|0;g=e+40|0;do{a[e>>0]=a[f>>0]|0;e=e+1|0;f=f+1|0}while((e|0)<(g|0));e=j+544|0;f=e+k|0;g=f+d|0;h=Ne(g)|0;if(!h){d=0;return d|0}cf(h|0,5008,544)|0;cf(h+544|0,i|0,j|0)|0;cf(h+e|0,68848,k|0)|0;cf(h+f|0,b|0,d|0)|0;d=ua(h,g)|0;Oe(h);return d|0}function Fa(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if(e>>>0<512)return;e=b+268|0;a[e>>0]=77;a[e+1>>0]=66;a[e+2>>0]=77;a[e+3>>0]=0;a[b+12>>0]=a[d+207>>0]|0;a[b+13>>0]=a[d+208>>0]|0;a[b+14>>0]=a[d+209>>0]|0;a[b+15>>0]=a[d+210>>0]|0;a[b+16>>0]=a[d+211>>0]|0;a[b+17>>0]=a[d+212>>0]|0;a[b+18>>0]=a[d+213>>0]|0;a[b+19>>0]=a[d+214>>0]|0;a[b+20>>0]=a[d+215>>0]|0;a[b+21>>0]=a[d+216>>0]|0;a[b+22>>0]=a[d+217>>0]|0;a[b+23>>0]=a[d+218>>0]|0;a[b+24>>0]=a[d+219>>0]|0;a[b+25>>0]=a[d+220>>0]|0;a[b+26>>0]=a[d+221>>0]|0;a[b+27>>0]=a[d+222>>0]|0;a[b+28>>0]=a[d+223>>0]|0;a[b+29>>0]=a[d+224>>0]|0;a[b+30>>0]=a[d+225>>0]|0;a[b+31>>0]=a[d+226>>0]|0;a[b+32>>0]=a[d+227>>0]|0;a[b+33>>0]=a[d+228>>0]|0;a[b+34>>0]=a[d+229>>0]|0;a[b+35>>0]=a[d+230>>0]|0;a[b+36>>0]=a[d+231>>0]|0;a[b+37>>0]=a[d+232>>0]|0;a[b+38>>0]=a[d+233>>0]|0;a[b+39>>0]=a[d+234>>0]|0;a[b+40>>0]=a[d+235>>0]|0;a[b+41>>0]=a[d+236>>0]|0;a[b+42>>0]=a[d+237>>0]|0;a[b+43>>0]=a[d+238>>0]|0;a[b+44>>0]=a[d+239>>0]|0;a[b+45>>0]=a[d+240>>0]|0;a[b+46>>0]=a[d+241>>0]|0;a[b+47>>0]=a[d+242>>0]|0;a[b+48>>0]=a[d+243>>0]|0;a[b+49>>0]=a[d+244>>0]|0;a[b+50>>0]=a[d+245>>0]|0;a[b+51>>0]=a[d+246>>0]|0;a[b+52>>0]=0;e=b+284|0;if(!(c[e>>2]|0)){h=Ne(64)|0;c[e>>2]=h;e=h;f=66175;g=e+9|0;do{a[e>>0]=a[f>>0]|0;e=e+1|0;f=f+1|0}while((e|0)<(g|0));a[h+9>>0]=a[d+320>>0]|0;a[h+10>>0]=a[d+321>>0]|0;a[h+11>>0]=a[d+322>>0]|0;a[h+12>>0]=a[d+323>>0]|0;a[h+13>>0]=a[d+324>>0]|0;a[h+14>>0]=a[d+325>>0]|0;a[h+15>>0]=a[d+326>>0]|0;a[h+16>>0]=a[d+327>>0]|0;a[h+17>>0]=0;if(!(c[238429]|0)){e=h+(te(h)|0)|0;f=66185;g=e+21|0;do{a[e>>0]=a[f>>0]|0;e=e+1|0;f=f+1|0}while((e|0)<(g|0))}}c[b+8>>2]=0;c[b+4>>2]=0;return}function Ga(a,b){a=a|0;b=b|0;if(b>>>0>32?(Rd(a,66206,3)|0)==0:0){b=1;return b|0}b=0;return b|0}function Ha(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;a[b+268>>0]=a[d>>0]|0;a[b+269>>0]=a[d+1>>0]|0;a[b+270>>0]=a[d+2>>0]|0;a[b+271>>0]=a[d+3>>0]|0;a[b+272>>0]=a[d+4>>0]|0;a[b+273>>0]=a[d+5>>0]|0;a[b+274>>0]=0;e=0;while(1){f=a[d+(e+8)>>0]|0;if(f<<24>>24==13){f=4;break}a[b+12+e>>0]=f<<24>>24==9?32:f;e=e+1|0;if(e>>>0>=128){e=128;f=4;break}}if((f|0)==4){a[b+12+e>>0]=0;c[b+8>>2]=1;c[b+4>>2]=1;return}}function Ia(a,b){a=a|0;b=b|0;var c=0;if(false){}c=Ne(32800)|0;if(!c){b=0;return b|0}ya(c,512,-32768,-32768,-32512);cf(c+32|0,a|0,b|0)|0;cf(c+24096|0,5565,8192)|0;cf(c+32288|0,13744,256)|0;cf(c+32544|0,14e3,256)|0;b=ua(c,32800)|0;Oe(c);return b|0}function Ja(b,d){b=b|0;d=d|0;var e=0,f=0;f=ga;ga=ga+16|0;e=f;c[e>>2]=0;if(d>>>0<=5){e=0;ga=f;return e|0}if(Rd(b,66210,3)|0){e=0;ga=f;return e|0}a[e>>0]=a[b+3>>0]|0;a[e+1>>0]=a[b+4>>0]|0;a[e+2>>0]=a[b+5>>0]|0;e=(Me(e)|0)<104&1;ga=f;return e|0}function Ka(b,d){b=b|0;d=d|0;var e=0,f=0;f=ga;ga=ga+16|0;e=f;c[e>>2]=0;if(d>>>0<=5){e=0;ga=f;return e|0}if(Rd(b,66210,3)|0){e=0;ga=f;return e|0}a[e>>0]=a[b+3>>0]|0;a[e+1>>0]=a[b+4>>0]|0;a[e+2>>0]=a[b+5>>0]|0;e=(Me(e)|0)>103&1;ga=f;return e|0}function La(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=ga;ga=ga+16|0;k=l;a[b+268>>0]=a[d>>0]|0;a[b+269>>0]=a[d+1>>0]|0;a[b+270>>0]=a[d+2>>0]|0;a[b+271>>0]=a[d+3>>0]|0;a[b+272>>0]=a[d+4>>0]|0;a[b+273>>0]=a[d+5>>0]|0;a[b+274>>0]=0;f=a[d+8>>0]|0;g=b+12|0;if(f<<24>>24!=13&e>>>0>8){h=0;while(1){a[g>>0]=f;i=h+1|0;j=h+9|0;f=a[d+j>>0]|0;g=b+12+i|0;if(!(f<<24>>24!=13&(i>>>0<255&j>>>0<e>>>0))){f=i;break}else h=i}}else f=0;a[g>>0]=0;if((a[d+(f+9)>>0]|0)!=10){ga=l;return}i=0;j=8;do{j=f+2+j|0;f=a[d+j>>0]|0;g=101680+(i<<8)|0;if(j>>>0<e>>>0&f<<24>>24!=13){h=f;f=0;do{a[g>>0]=h;f=f+1|0;m=f+j|0;h=a[d+m>>0]|0;g=101680+(i<<8)+f|0}while(m>>>0<e>>>0&(f>>>0<255&h<<24>>24!=13))}else f=0;a[g>>0]=0;i=i+1|0}while(i>>>0<3?(a[d+(f+j+1)>>0]|0)==10:0);m=te(101680)|0;f=te(101936)|0;f=Ne(m+256+f+(te(102192)|0)|0)|0;c[b+284>>2]=f;if(!f){ga=l;return}c[k>>2]=101680;c[k+4>>2]=101936;c[k+8>>2]=102192;Td(f,66214,k)|0;c[b+8>>2]=1;c[b+4>>2]=1;ga=l;return}function Ma(b,c){b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;if(c>>>0<16|8192==0){c=0;return c|0}h=c>>>0<15872;f=h?512:25088;g=h?512:16384;h=h?24576:c+8704&65535;d=(h&65535)+32|0;e=Ne(d)|0;if(!e){c=0;return c|0}ya(e,g,h,24576,24832);h=g&65535;g=0-h|0;cf(e+16416+g|0,14256,8192)|0;cf(e+24608+g|0,30640,256)|0;cf(e+24864+g|0,30896,256)|0;cf(e+32+f+g|0,b|0,c|0)|0;a[e+(24622-h)>>0]=0;a[e+(24623-h)>>0]=f>>>8;c=ua(e,d)|0;Oe(e);return c|0}function Na(b,c){b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0;if(c>>>0<16|8192==0){c=0;return c|0}h=c>>>0<15872;f=h?512:25088;g=h?512:16384;h=h?24576:c+8704&65535;d=(h&65535)+32|0;e=Ne(d)|0;if(!e){c=0;return c|0}ya(e,g,h,24576,24832);a[e+15>>0]=5;h=g&65535;g=0-h|0;cf(e+16416+g|0,22448,8192)|0;i=e+17284+g|0;a[i>>0]=a[66245]|0;a[i+1>>0]=a[66246]|0;a[i+2>>0]=a[66247]|0;cf(e+24608+g|0,31152,256)|0;cf(e+24864+g|0,30896,256)|0;cf(e+32+f+g|0,b|0,c|0)|0;a[e+(24614-h)>>0]=0;a[e+(24615-h)>>0]=f>>>8;c=ua(e,d)|0;Oe(e);return c|0}function Oa(b,c){b=b|0;c=c|0;if(c>>>0>160?(a[b+125>>0]|0)==26:0){c=1;return c|0}c=0;return c|0}function Pa(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=b+268|0;a[f>>0]=79;a[f+1>>0]=80;a[f+2>>0]=88;a[f+3>>0]=0;f=b+12|0;if(e>>>0<128){g=66249;h=f+16|0;do{a[f>>0]=a[g>>0]|0;f=f+1|0;g=g+1|0}while((f|0)<(h|0));return}g=d;h=f+53|0;do{a[f>>0]=a[g>>0]|0;f=f+1|0;g=g+1|0}while((f|0)<(h|0));e=52;while(1){f=b+12+e|0;if((a[f>>0]|0)!=32)break;a[f>>0]=0;if(!e)break;else e=e+-1|0}a[b+65>>0]=0;e=Ne(71)|0;c[b+284>>2]=e;if(e|0){f=e;g=d+55|0;h=f+55|0;do{a[f>>0]=a[g>>0]|0;f=f+1|0;g=g+1|0}while((f|0)<(h|0));f=e+55|0;g=d+110|0;h=f+15|0;do{a[f>>0]=a[g>>0]|0;f=f+1|0;g=g+1|0}while((f|0)<(h|0));a[e+70>>0]=0}c[b+8>>2]=1;c[b+4>>2]=1;return}function Qa(b,c){b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;d=c+32512|0;if(c>>>0<16|16384==0){c=0;return c|0}g=(d&65535)+32|0;h=Ne(g)|0;if(!h){c=0;return c|0}ya(h,256,d&65535,262,259);cf(h+32|0,31408,16384)|0;if(true){df(h+16160|0,0,16384)|0;d=h+16188|0;a[d>>0]=79;a[d+1>>0]=80;a[d+2>>0]=76;a[d+3>>0]=76;cf(h+19232|0,47792,512)|0;d=h+25100|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+25132|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+25164|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+25196|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+25228|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+25260|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+25292|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+25324|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+25356|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+25388|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+25420|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+25452|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+25484|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+25516|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+25548|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+25580|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+25612|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+25644|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+25676|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+25708|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+25740|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+25772|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+25804|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+25836|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+25868|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+25900|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+25932|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+25964|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+25996|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+26028|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+26060|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+26092|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+26124|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+26156|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+26188|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+26220|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+26252|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+26284|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+26316|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+26348|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+26380|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+26412|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+26444|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+26476|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+26508|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+26540|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+26572|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+26604|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+26636|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+26668|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+26700|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+26732|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+26764|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+26796|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+26828|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+26860|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+26892|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+26924|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+26956|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+26988|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+27020|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0));d=h+27052|0;e=66265;f=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(f|0))}cf(h+32544|0,b|0,c|0)|0;c=ua(h,g)|0;Oe(h);return c|0}function Ra(b,f){b=b|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;if((c[f+288>>2]|0)!=0?(g=a[f+339>>0]|0,g<<24>>24!=0):0){c[b+44>>2]=d[f+343>>0]<<1;c[b+48>>2]=d[f+344>>0]<<1;c[b+52>>2]=d[f+345>>0]<<1;c[b+56>>2]=d[f+346>>0]<<1;h=(g&255)+16|0}else{h=b+44|0;c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;h=16}g=f+338|0;i=f+330|0;k=f+276|0;j=Qe(c[k>>2]|0,h+(e[i>>1]|0)+(d[f+337>>0]<<((a[g>>0]|0)==0?14:13))|0)|0;c[k>>2]=j;c[b>>2]=f;h=j+h|0;c[b+4>>2]=h;c[b+8>>2]=h+(e[i>>1]|0);switch(c[f>>2]|0){case 2:{g=1;break}case 0:{if(!(a[g>>0]|0))g=c[f+308>>2]|0;else g=0;break}default:g=0}k=c[b+12>>2]|0;c[k+2016>>2]=g;c[k+2036>>2]=c[f+324>>2];return 0}function Sa(a,b,f){a=a|0;b=b|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=c[a>>2]|0;if(!g)return;o=a+188|0;c[o>>2]=f;q=a+192|0;if(!(c[q>>2]|0))c[q>>2]=(c[g+320>>2]|0)==0?60:50;p=a+12|0;Kb(c[p>>2]|0,c[g+308>>2]|0,e[g+328>>1]|0,e[g+330>>1]|0,c[a+4>>2]|0);h=c[a>>2]|0;Lb(c[p>>2]|0,d[h+338>>0]|0,d[h+337>>0]|0,d[h+336>>0]|0,c[a+8>>2]|0);h=a+92|0;f=c[h>>2]|0;g=c[p>>2]|0;if((((g|0)!=0?(Bb(g,f),c[h>>2]=f,i=c[p>>2]|0,m=a+96|0,k=c[m>>2]|0,(i|0)!=0):0)?(Ab(i,k),c[m>>2]=k,j=c[p>>2]|0,n=a+100|0,l=c[n>>2]|0,(j|0)!=0):0)?(Cb(j,l),c[n>>2]=l,(c[p>>2]|0)!=0):0)f=c[p>>2]|0;else f=0;zb(f);h=c[p>>2]|0;f=c[o>>2]|0;if(!f){f=c[a>>2]|0;if(!(c[f+296>>2]|0)){g=f;f=(c[f+312>>2]|0)==0?3579545:7159090}else{g=f;f=7159090}}else{g=c[a>>2]|0;f=f>>>0<5?3579545<<f+-1:3579545}Db(h,f,e[g+332>>1]|0,e[g+334>>1]|0,c[q>>2]|0,b,c[g+324>>2]|0);c[a+164>>2]=0;c[a+172>>2]=0;f=c[p>>2]|0;p=c[f+1996>>2]|0;b=c[a+16>>2]|0;q=(p>>>0)/(b>>>0)|0;c[a+28>>2]=q;c[a+32>>2]=p-(v(q,b)|0);c[a+36>>2]=0;c[a+184>>2]=0;c[a+176>>2]=0;if((c[c[a>>2]>>2]|0)!=1)return;yb(f,68,19);return}function Ta(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;i=ga;ga=ga+128|0;h=i;e=h;f=e+128|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));g=(d[b+784>>0]|0)<<8|(d[b+783>>0]|0);if(!g){ga=i;return 0}f=b+708|0;e=0;do{b=rb(c[f>>2]|0,e+g|0)|0;a[h+e>>0]=b;if(!(b&255))break;e=e+1|0}while(e>>>0<127);a[h+e>>0]=0;e=0;while(1){f=a[h+e>>0]|0;if(!(f<<24>>24))break;switch(f<<24>>24|0){case 2:{e=e+1|0;c[238430]=((d[h+e>>0]|0)%80|0)&255;break}case 3:{e=e+1|0;c[238430]=((d[h+e>>0]|0)%80|0)&255;break}case 1:{c[238430]=0;break}default:c[238430]=(c[238430]|0)+1}if((e|0)<126)e=e+1|0;else{j=14;break}}if((j|0)==14){ga=i;return 0}ga=i;return 0}function Ua(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0.0;if(!(c[29708]|0)){e=-256;do{f=~~(+_(+(+(e|0)*.03125))*4096.0);c[118832+(((e|0)>-1?e:e+512|0)<<2)>>2]=f;e=e+1|0}while((e|0)!=256)}if(b>>>0>2|(d|0)!=16){f=0;return f|0}d=Ne(204)|0;if(!d){f=0;return f|0}df(d|0,0,204)|0;f=vb(a)|0;c[d+12>>2]=f;if(!f){Oe(d);f=0;return f|0}else{c[d+16>>2]=a;c[d+20>>2]=b;c[d+24>>2]=16;c[d+180>>2]=5e3;g=+(a>>>0);f=Sb()|0;c[d+108>>2]=f;Tb(f);f=Sb()|0;c[d+112>>2]=f;Tb(f);f=Sb()|0;c[d+116>>2]=f;Tb(f);f=Sb()|0;c[d+120>>2]=f;Tb(f);f=Wb()|0;c[d+140>>2]=f;_b(f);f=Ob()|0;c[d+148>>2]=f;Rb(f,g);f=Sb()|0;c[d+124>>2]=f;Tb(f);f=Sb()|0;c[d+128>>2]=f;Tb(f);f=Sb()|0;c[d+132>>2]=f;Tb(f);f=Sb()|0;c[d+136>>2]=f;Tb(f);f=Wb()|0;c[d+144>>2]=f;_b(f);f=Ob()|0;c[d+152>>2]=f;Rb(f,g);f=d;return f|0}return 0}function Va(a,b,d){a=a|0;b=b|0;d=d|0;switch(b|0){case 0:{a=a+12|0;cc(c[(c[a>>2]|0)+2048>>2]|0,d);_c(c[(c[a>>2]|0)+2064>>2]|0,d);return}case 1:{mc(c[(c[a+12>>2]|0)+2052>>2]|0,d);return}case 2:return;default:return}}function Wa(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,g=0.0,h=0;e=c[a+140>>2]|0;if((b|0)!=0&(d|0)!=0){h=a+16|0;g=+(b>>>0);f=+(d>>>0)/1.0e9;Xb(e,+((c[h>>2]|0)>>>0),g,f);Xb(c[a+144>>2]|0,+((c[h>>2]|0)>>>0),g,f);return}else{_b(e);_b(c[a+144>>2]|0);return}}function Xa(a){a=a|0;if(!a)return;wb(c[a+12>>2]|0);Vb(c[a+108>>2]|0);Vb(c[a+112>>2]|0);Vb(c[a+116>>2]|0);Vb(c[a+120>>2]|0);Zb(c[a+140>>2]|0);Qb(c[a+148>>2]|0);Vb(c[a+124>>2]|0);Vb(c[a+128>>2]|0);Vb(c[a+132>>2]|0);Vb(c[a+136>>2]|0);Zb(c[a+144>>2]|0);Qb(c[a+152>>2]|0);Oe(a);return}function Ya(a){a=a|0;return c[a+172>>2]|0}function Za(a,b){a=a|0;b=b|0;var d=0;d=a+164|0;if(!b){c[d>>2]=0;b=2;a=a+172|0;c[a>>2]=b;return}else{c[d>>2]=-2147483648;b=~~(2147483648.0/+((((v(c[a+16>>2]|0,b)|0)>>>0)/1e3|0)>>>0))>>>0;b=b>>>((c[a+20>>2]|0)+-1|0);c[a+168>>2]=(b|0)==0?1:b;b=1;a=a+172|0;c[a>>2]=b;return}}function _a(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;V=ga;ga=ga+16|0;P=V;if((c[a+20>>2]|0)==1){f=c[a+40>>2]|0;h=(c[a+44>>2]|0)+f|0;h=(h|0)>-256?h:-256;i=(c[a+48>>2]|0)+f|0;i=(i|0)>-256?i:-256;g=(c[a+52>>2]|0)+f|0;g=(g|0)>-256?g:-256;f=(c[a+56>>2]|0)+f|0;f=(f|0)>-256?f:-256;if(!e){d=a+184|0;U=c[d>>2]|0;U=U+e|0;c[d>>2]=U;d=a+12|0;d=c[d>>2]|0;d=d+712|0;d=c[d>>2]|0;U=U*1e3|0;e=a+16|0;e=c[e>>2]|0;e=(U>>>0)/(e>>>0)|0;mb(d,e,3e4,1e3)|0;ga=V;return}G=a+32|0;F=a+36|0;D=a+16|0;H=a+12|0;E=a+28|0;z=a+72|0;C=a+60|0;B=a+68|0;A=a+120|0;u=118832+((((f|0)<255?f:255)&511)<<2)|0;x=a+108|0;y=a+64|0;w=a+116|0;t=118832+((((g|0)<255?g:255)&511)<<2)|0;r=118832+((((h|0)<255?h:255)&511)<<2)|0;s=a+112|0;i=118832+((((i|0)<255?i:255)&511)<<2)|0;l=a+156|0;q=a+176|0;j=a+148|0;n=a+172|0;k=a+140|0;m=a+164|0;o=a+168|0;p=0;do{g=(c[F>>2]|0)+(c[G>>2]|0)|0;c[F>>2]=g;f=c[D>>2]|0;if(g>>>0<f>>>0)xb(c[H>>2]|0,c[E>>2]|0);else{c[F>>2]=g-f;xb(c[H>>2]|0,(c[E>>2]|0)+1|0)}f=c[a>>2]|0;if((c[f+312>>2]|0)!=0?(c[z>>2]|0)==0:0){g=c[A>>2]|0;g=Ub(g,(Oc(c[(c[H>>2]|0)+2060>>2]|0)|0)<<16>>16)|0;g=(v(c[u>>2]|0,g)|0)>>12;f=c[a>>2]|0}else g=0;if((c[f+296>>2]|0)!=0?(c[B>>2]|0)==0:0){f=c[w>>2]|0;f=Ub(f,(Gc(c[(c[H>>2]|0)+2056>>2]|0)|0)<<16>>16)|0;f=((v(c[t>>2]|0,f)|0)>>12)+g|0}else f=g;if(!(c[C>>2]|0)){h=c[x>>2]|0;g=c[H>>2]|0;if(!(c[(c[a>>2]|0)+304>>2]|0)){g=(kc(c[g+2048>>2]|0)|0)<<16>>16;g=(c[(c[H>>2]|0)+2040>>2]|0)+g|0}else g=(dd(c[g+2064>>2]|0)|0)<<16>>16;U=Ub(h,g)|0;f=((v(c[r>>2]|0,U)|0)>>12)+f|0}if(!(c[y>>2]|0)){T=c[s>>2]|0;U=(qc(c[(c[H>>2]|0)+2052>>2]|0)|0)<<16>>16;U=Ub(T,(c[(c[H>>2]|0)+2044>>2]|0)+U|0)|0;f=((v(c[i>>2]|0,U)|0)>>12)+f|0}if((c[l>>2]|0)==(f|0))g=(c[q>>2]|0)+1|0;else{c[l>>2]=f;g=0}c[q>>2]=g;f=Pb(c[j>>2]|0,f)|0;a:do switch(c[n>>2]|0){case 1:{g=c[m>>2]|0;h=c[o>>2]|0;if(g>>>0>h>>>0){U=g-h|0;c[m>>2]=U;f=(v(U>>>23,f)|0)>>8;break a}else{c[m>>2]=0;c[n>>2]=2;f=0;break a}}case 2:{f=0;break}default:{}}while(0);f=Yb(c[k>>2]|0,f)|0;if((f|0)<-26214)f=(f+26214>>2)+-26214|0;else f=(f|0)>26214?(f+-26214>>2)+26214|0:f;U=(f|0)<32767?f:32767;b[d+(p<<1)>>1]=(U|0)>-32767?U:-32767;p=p+1|0}while((p|0)!=(e|0));d=a+184|0;U=c[d>>2]|0;U=U+e|0;c[d>>2]=U;d=a+12|0;d=c[d>>2]|0;d=d+712|0;d=c[d>>2]|0;U=U*1e3|0;e=a+16|0;e=c[e>>2]|0;e=(U>>>0)/(e>>>0)|0;mb(d,e,3e4,1e3)|0;ga=V;return}g=c[a+40>>2]|0;i=(c[a+44>>2]|0)+g|0;k=c[a+76>>2]|0;h=((k|0)<0?k:0)+i|0;h=(h|0)>-256?h:-256;i=((k|0)>0?0-k|0:0)+i|0;i=(i|0)>-256?i:-256;k=(c[a+48>>2]|0)+g|0;m=c[a+80>>2]|0;j=((m|0)<0?m:0)+k|0;j=(j|0)>-256?j:-256;k=((m|0)>0?0-m|0:0)+k|0;k=(k|0)>-256?k:-256;m=(c[a+52>>2]|0)+g|0;U=c[a+84>>2]|0;l=((U|0)<0?U:0)+m|0;l=(l|0)>-256?l:-256;m=((U|0)>0?0-U|0:0)+m|0;m=(m|0)>-256?m:-256;g=(c[a+56>>2]|0)+g|0;U=c[a+88>>2]|0;f=((U|0)<0?U:0)+g|0;f=(f|0)>-256?f:-256;g=((U|0)>0?0-U|0:0)+g|0;g=(g|0)>-256?g:-256;b:do if(e|0){T=a+32|0;S=a+36|0;Q=a+16|0;U=a+12|0;R=a+28|0;M=a+72|0;L=a+60|0;O=a+68|0;N=a+120|0;K=118832+((((f|0)<255?f:255)&511)<<2)|0;G=118832+((((g|0)<255?g:255)&511)<<2)|0;I=a+64|0;J=a+200|0;H=a+108|0;F=118832+((((h|0)<255?h:255)&511)<<2)|0;D=118832+((((i|0)<255?i:255)&511)<<2)|0;E=a+112|0;C=118832+((((j|0)<255?j:255)&511)<<2)|0;z=118832+((((k|0)<255?k:255)&511)<<2)|0;A=a+156|0;B=a+116|0;y=118832+((((l|0)<255?l:255)&511)<<2)|0;j=118832+((((m|0)<255?m:255)&511)<<2)|0;q=a+132|0;r=P+4|0;k=a+124|0;l=a+160|0;m=a+148|0;t=a+172|0;x=a+176|0;n=a+152|0;s=a+164|0;u=a+168|0;o=a+140|0;p=a+144|0;w=0;while(1){g=(c[S>>2]|0)+(c[T>>2]|0)|0;c[S>>2]=g;f=c[Q>>2]|0;if(g>>>0<f>>>0)xb(c[U>>2]|0,c[R>>2]|0);else{c[S>>2]=g-f;xb(c[U>>2]|0,(c[R>>2]|0)+1|0)}f=c[a>>2]|0;if((c[f+312>>2]|0)!=0?(c[M>>2]|0)==0:0){h=c[N>>2]|0;h=Ub(h,(Oc(c[(c[U>>2]|0)+2060>>2]|0)|0)<<16>>16)|0;g=(v(c[K>>2]|0,h)|0)>>12;h=(v(c[G>>2]|0,h)|0)>>12;f=c[a>>2]|0}else{g=0;h=0}do if((c[f+296>>2]|0)!=0?(c[O>>2]|0)==0:0)if(!(c[J>>2]|0)){i=c[B>>2]|0;i=Ub(i,(Gc(c[(c[U>>2]|0)+2056>>2]|0)|0)<<16>>16)|0;g=((v(c[y>>2]|0,i)|0)>>12)+g|0;h=((v(c[j>>2]|0,i)|0)>>12)+h|0;break}else{Ic(c[(c[U>>2]|0)+2056>>2]|0,P);i=Ub(c[B>>2]|0,c[P>>2]|0)|0;g=((v(c[y>>2]|0,i)|0)>>12)+g|0;i=Ub(c[q>>2]|0,c[r>>2]|0)|0;h=((v(c[j>>2]|0,i)|0)>>12)+h|0;break}while(0);if(!(c[L>>2]|0)){f=c[a>>2]|0;do if(c[f+304>>2]|0)if(!(c[f+316>>2]|0)){f=c[H>>2]|0;f=Ub(f,(dd(c[(c[U>>2]|0)+2064>>2]|0)|0)<<16>>16)|0;i=f;f=v(c[F>>2]|0,f)|0;break}else{fd(c[(c[U>>2]|0)+2064>>2]|0,P);f=Ub(c[H>>2]|0,c[P>>2]|0)|0;f=v(c[F>>2]|0,f)|0;i=Ub(c[k>>2]|0,c[r>>2]|0)|0;break}else{i=c[H>>2]|0;f=(kc(c[(c[U>>2]|0)+2048>>2]|0)|0)<<16>>16;f=Ub(i,(c[(c[U>>2]|0)+2040>>2]|0)+f|0)|0;i=f;f=v(c[F>>2]|0,f)|0}while(0);g=(f>>12)+g|0;f=((v(c[D>>2]|0,i)|0)>>12)+h|0}else f=h;if(!(c[I>>2]|0)){h=c[E>>2]|0;i=(qc(c[(c[U>>2]|0)+2052>>2]|0)|0)<<16>>16;i=Ub(h,(c[(c[U>>2]|0)+2044>>2]|0)+i|0)|0;g=((v(c[C>>2]|0,i)|0)>>12)+g|0;f=((v(c[z>>2]|0,i)|0)>>12)+f|0}if((c[A>>2]|0)==(g|0)?(c[l>>2]|0)==(f|0):0)h=(c[x>>2]|0)+1|0;else{c[A>>2]=g;c[l>>2]=f;h=0}c[x>>2]=h;i=Pb(c[m>>2]|0,g)|0;c:do switch(c[t>>2]|0){case 1:{g=c[s>>2]|0;h=c[u>>2]|0;if(g>>>0>h>>>0){h=g-h|0;c[s>>2]=h;i=(v(h>>>23,i)|0)>>8;break c}else{c[s>>2]=0;c[t>>2]=2;i=0;break c}}case 2:{i=0;break}default:{}}while(0);h=Pb(c[n>>2]|0,f)|0;d:do switch(c[t>>2]|0){case 1:{f=c[s>>2]|0;g=c[u>>2]|0;if(f>>>0>g>>>0){g=f-g|0;c[s>>2]=g;h=(v(g>>>23,h)|0)>>8;break d}else{c[s>>2]=0;c[t>>2]=2;h=0;break d}}case 2:{h=0;break}default:{}}while(0);f=Yb(c[o>>2]|0,i)|0;if((f|0)<-26214)f=(f+26214>>2)+-26214|0;else f=(f|0)>26214?(f+-26214>>2)+26214|0:f;f=(f|0)<32767?f:32767;g=w<<1;b[d+(g<<1)>>1]=(f|0)>-32767?f:-32767;f=Yb(c[p>>2]|0,h)|0;if((f|0)<-26214)f=(f+26214>>2)+-26214|0;else f=(f|0)>26214?(f+-26214>>2)+26214|0:f;i=(f|0)<32767?f:32767;b[d+((g|1)<<1)>>1]=(i|0)>-32767?i:-32767;w=w+1|0;if((w|0)==(e|0))break b}}while(0);d=a+184|0;U=c[d>>2]|0;U=U+e|0;c[d>>2]=U;d=a+12|0;d=c[d>>2]|0;d=d+712|0;d=c[d>>2]|0;U=U*1e3|0;e=a+16|0;e=c[e>>2]|0;e=(U>>>0)/(e>>>0)|0;mb(d,e,3e4,1e3)|0;ga=V;return}function $a(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;if(!b){e=a+16|0;d=a+12|0}else{k=a+32|0;j=a+36|0;e=a+16|0;d=a+12|0;i=a+28|0;h=0;do{g=(c[j>>2]|0)+(c[k>>2]|0)|0;c[j>>2]=g;f=c[e>>2]|0;if(g>>>0<f>>>0)xb(c[d>>2]|0,c[i>>2]|0);else{c[j>>2]=g-f;xb(c[d>>2]|0,(c[i>>2]|0)+1|0)}h=h+1|0}while((h|0)!=(b|0))}k=a+184|0;g=(c[k>>2]|0)+b|0;c[k>>2]=g;mb(c[(c[d>>2]|0)+712>>2]|0,((g*1e3|0)>>>0)/((c[e>>2]|0)>>>0)|0,3e4,1e3)|0;g=a+172|0;if((c[g>>2]|0)!=1)return;f=a+164|0;e=c[f>>2]|0;d=v(c[a+168>>2]|0,b)|0;if(e>>>0>d>>>0){c[f>>2]=e-d;return}else{c[f>>2]=0;c[g>>2]=2;return}}function ab(a){a=a|0;var b=0;b=c[a+12>>2]|0;if(!(c[c[a>>2]>>2]|0)){a=lb(c[b+712>>2]|0,(((c[a+184>>2]|0)*1e3|0)>>>0)/((c[a+16>>2]|0)>>>0)|0)|0;return a|0}else{a=d[b+782>>0]|0;return a|0}return 0}function bb(a){a=a|0;var b=0;b=c[a+180>>2]|0;if(b|0?((((c[a+176>>2]|0)*1e3|0)>>>0)/((c[a+16>>2]|0)>>>0)|0)>>>0>b>>>0:0){b=1;return b|0}b=d[(c[a+12>>2]|0)+781>>0]|0;return b|0}function cb(a,b){a=a|0;b=b|0;c[a+180>>2]=b;return}function db(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=c[a+12>>2]|0;c[e+2072>>2]=(b|0)==0?a:b;c[e+2076>>2]=d;return}function eb(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=c[a+12>>2]|0;c[e+2080>>2]=(b|0)==0?a:b;c[e+2084>>2]=d;return}function fb(a,b,d){a=a|0;b=b|0;d=d|0;Nb(c[a+12>>2]|0,b,d);return}function gb(a,b,d){a=a|0;b=b|0;d=d|0;Mb(c[a+12>>2]|0,b,d);return}function hb(){var a=0,b=0;a=Ne(44)|0;b=a+16|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;c[b+20>>2]=0;c[b+24>>2]=0;c[a>>2]=65536;c[a+4>>2]=65535;c[a+8>>2]=Ne(262144)|0;c[a+12>>2]=Ne(262144)|0;return a|0}function ib(a){a=a|0;if(!a)return;Oe(c[a+8>>2]|0);Oe(c[a+12>>2]|0);Oe(a);return}function jb(a){a=a|0;var b=0,d=0,e=0;if((c[a>>2]|0)>0){b=c[a+8>>2]|0;d=c[a+12>>2]|0;e=0;do{c[b+(e<<2)>>2]=0-e;c[d+(e<<2)>>2]=0;e=e+1|0}while((e|0)<(c[a>>2]|0))}e=a+16|0;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;c[a+32>>2]=-1;c[a+36>>2]=-1;c[a+40>>2]=1;return}function kb(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;c[a+40>>2]=0;e=a+16|0;c[(c[a+12>>2]|0)+(c[e>>2]<<2)>>2]=c[a+28>>2];c[(c[a+8>>2]|0)+(c[e>>2]<<2)>>2]=b<<8&16776960|d&255;c[e>>2]=(c[e>>2]|0)+1&c[a+4>>2];return 0}function lb(a,b){a=a|0;b=b|0;var d=0;d=c[a+36>>2]|0;a=d-(c[a+32>>2]|0)|0;if((d|0)>(b|0)|(a|0)<1){b=0;return b|0}b=((b-d|0)/(a|0)|0)+1|0;return b|0}function mb(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;l=a+32|0;if((c[l>>2]|0)>-1){l=1;return l|0}f=a+28|0;if((b-(c[f>>2]|0)|0)<(e|0)){l=0;return l|0}c[f>>2]=b;k=c[a+16>>2]|0;g=a+20|0;f=c[g>>2]|0;if((k|0)<=(f|0)){l=0;return l|0}h=a+24|0;b=c[h>>2]|0;f=k-f|0;if(b)f=(f+b|0)/2|0;c[h>>2]=f;c[g>>2]=k;d=(v(f,d)|0)/(e|0)|0;i=(c[a>>2]|0)-d|0;if((i|0)<=0){l=0;return l|0}j=i+k|0;h=a+4|0;a:do if((d|0)<=0){b=(d|0)==0;f=0;while(1){if(b){g=16;break}f=f+1|0;if((f|0)>=(i|0)){f=0;g=19;break}}if((g|0)==16){b=c[h>>2]|0;f=f+k|0;break}else if((g|0)==19)return f|0}else{e=c[a+8>>2]|0;b=c[h>>2]|0;h=0;while(1){f=h+k|0;g=0;do{if((c[e+((b&j+g)<<2)>>2]|0)!=(c[e+((b&f+g)<<2)>>2]|0))break;g=g+1|0}while((g|0)<(d|0));if((g|0)==(d|0))break a;h=h+1|0;if((h|0)>=(i|0)){f=0;break}}return f|0}while(0);k=c[a+12>>2]|0;c[l>>2]=c[k+((b&f)<<2)>>2];c[a+36>>2]=c[k+((b&j)<<2)>>2];l=1;return l|0}function nb(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;if(b>>>0>=16)H(66298,66310,67,66368);if(d>>>0>=256)H(66387,66310,68,66368);f=c[a+(b<<10)+(d<<2)>>2]|0;if(f|0)c[f+8>>2]=e;if((c[a+16448>>2]|0)==(b|0)?(c[a+16480>>2]|0)==(d|0):0)ob(a,0,b,d);if((c[a+16452>>2]|0)==(b|0)?(c[a+16484>>2]|0)==(d|0):0)ob(a,1,b,d);if((c[a+16456>>2]|0)==(b|0)?(c[a+16488>>2]|0)==(d|0):0)ob(a,2,b,d);if((c[a+16460>>2]|0)==(b|0)?(c[a+16492>>2]|0)==(d|0):0)ob(a,3,b,d);if((c[a+16464>>2]|0)==(b|0)?(c[a+16496>>2]|0)==(d|0):0)ob(a,4,b,d);if((c[a+16468>>2]|0)==(b|0)?(c[a+16500>>2]|0)==(d|0):0)ob(a,5,b,d);if((c[a+16472>>2]|0)==(b|0)?(c[a+16504>>2]|0)==(d|0):0)ob(a,6,b,d);if((c[a+16476>>2]|0)!=(b|0))return;if((c[a+16508>>2]|0)!=(d|0))return;ob(a,7,b,d);return}function ob(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;if(d>>>0>=16)H(66298,66310,136,66400);if(e>>>0>=256)H(66387,66310,137,66400);g=a+(d<<10)+(e<<2)|0;f=c[g>>2]|0;if(!f){c[a+16384+(b<<2)>>2]=120880;c[a+16416+(b<<2)>>2]=129072;c[a+16448+(b<<2)>>2]=d;d=b;d=a+16480+(d<<2)|0;c[d>>2]=e;return}switch(c[f+4>>2]|0){case 0:{b=b&6;if(!(c[f+8>>2]&1)){c[a+16384+(b<<2)>>2]=120880;f=120880}else{c[a+16384+(b<<2)>>2]=c[f+12>>2];f=(c[(c[g>>2]|0)+12>>2]|0)+8192|0}c[a+16384+((b|1)<<2)>>2]=f;f=c[g>>2]|0;if(!(c[f+8>>2]&2)){c[a+16416+(b<<2)>>2]=129072;f=129072}else{c[a+16416+(b<<2)>>2]=c[f+12>>2];f=(c[(c[g>>2]|0)+12>>2]|0)+8192|0}g=b|1;c[a+16416+(g<<2)>>2]=f;c[a+16448+(g<<2)>>2]=d;c[a+16448+(b<<2)>>2]=d;c[a+16480+(g<<2)>>2]=e;d=b;d=a+16480+(d<<2)|0;c[d>>2]=e;return}case 1:{if(!(c[f+8>>2]&1))c[a+16384+(b<<2)>>2]=120880;else c[a+16384+(b<<2)>>2]=c[f+12>>2];f=c[g>>2]|0;if(!(c[f+8>>2]&2))c[a+16416+(b<<2)>>2]=129072;else c[a+16416+(b<<2)>>2]=c[f+12>>2];c[a+16448+(b<<2)>>2]=d;d=b;d=a+16480+(d<<2)|0;c[d>>2]=e;return}default:H(66591,66310,182,66400)}}function pb(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;if(b>>>0>=16)H(66298,66310,80,66417);if(d>>>0>=256)H(66387,66310,81,66417);g=a+(b<<10)+(d<<2)|0;if(c[g>>2]|0)qb(a,b,d);switch(e|0){case 0:{h=16384;break}case 1:{h=8192;break}default:{c[g>>2]=0;H(66591,66310,86,66417)}}d=Ne(16)|0;if(!d){c[g>>2]=0;H(66591,66310,86,66417)}b=Ne(h)|0;c[d+12>>2]=b;if(!b){Oe(d);c[g>>2]=0;H(66591,66310,86,66417)}c[d+4>>2]=e;c[d>>2]=0;c[d+8>>2]=1;if(f|0)cf(b|0,f|0,h|0)|0;c[g>>2]=d;ob(a,0,c[a+16448>>2]|0,c[a+16480>>2]|0);ob(a,1,c[a+16452>>2]|0,c[a+16484>>2]|0);ob(a,2,c[a+16456>>2]|0,c[a+16488>>2]|0);ob(a,3,c[a+16460>>2]|0,c[a+16492>>2]|0);ob(a,4,c[a+16464>>2]|0,c[a+16496>>2]|0);ob(a,5,c[a+16468>>2]|0,c[a+16500>>2]|0);ob(a,6,c[a+16472>>2]|0,c[a+16504>>2]|0);ob(a,7,c[a+16476>>2]|0,c[a+16508>>2]|0);return}function qb(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;if(b>>>0>=16)H(66298,66310,98,66436);if(d>>>0>=256)H(66387,66310,99,66436);e=a+(b<<10)+(d<<2)|0;d=c[e>>2]|0;if(d|0){b=c[d>>2]|0;if(!b){Oe(c[d+12>>2]|0);Oe(d)}else c[d>>2]=b+-1;c[e>>2]=0}ob(a,0,c[a+16448>>2]|0,c[a+16480>>2]|0);ob(a,1,c[a+16452>>2]|0,c[a+16484>>2]|0);ob(a,2,c[a+16456>>2]|0,c[a+16488>>2]|0);ob(a,3,c[a+16460>>2]|0,c[a+16492>>2]|0);ob(a,4,c[a+16464>>2]|0,c[a+16496>>2]|0);ob(a,5,c[a+16468>>2]|0,c[a+16500>>2]|0);ob(a,6,c[a+16472>>2]|0,c[a+16504>>2]|0);ob(a,7,c[a+16476>>2]|0,c[a+16508>>2]|0);return}function rb(a,b){a=a|0;b=b|0;if(b>>>0<65536)return d[(c[a+16384+(b>>>13<<2)>>2]|0)+(b&8191)>>0]|0|0;else H(66452,66310,187,66466);return 0}function sb(b,d,e){b=b|0;d=d|0;e=e|0;if(d>>>0<65536){a[(c[b+16416+(d>>>13<<2)>>2]|0)+(d&8191)>>0]=e;return}else H(66452,66310,192,66483)}function tb(){var a=0;a=Ne(16512)|0;if(!a){a=0;return a|0}df(a|0,0,16512)|0;ob(a,0,0,0);ob(a,1,0,1);ob(a,2,0,2);ob(a,3,0,3);ob(a,4,0,4);ob(a,5,0,5);ob(a,6,0,6);ob(a,7,0,7);return a|0}function ub(a){a=a|0;var b=0;b=0;do{qb(a,0,b);b=b+1|0}while((b|0)!=256);b=0;do{qb(a,1,b);b=b+1|0}while((b|0)!=256);b=0;do{qb(a,2,b);b=b+1|0}while((b|0)!=256);b=0;do{qb(a,3,b);b=b+1|0}while((b|0)!=256);b=0;do{qb(a,4,b);b=b+1|0}while((b|0)!=256);b=0;do{qb(a,5,b);b=b+1|0}while((b|0)!=256);b=0;do{qb(a,6,b);b=b+1|0}while((b|0)!=256);b=0;do{qb(a,7,b);b=b+1|0}while((b|0)!=256);b=0;do{qb(a,8,b);b=b+1|0}while((b|0)!=256);b=0;do{qb(a,9,b);b=b+1|0}while((b|0)!=256);b=0;do{qb(a,10,b);b=b+1|0}while((b|0)!=256);b=0;do{qb(a,11,b);b=b+1|0}while((b|0)!=256);b=0;do{qb(a,12,b);b=b+1|0}while((b|0)!=256);b=0;do{qb(a,13,b);b=b+1|0}while((b|0)!=256);b=0;do{qb(a,14,b);b=b+1|0}while((b|0)!=256);b=0;do{qb(a,15,b);b=b+1|0}while((b|0)!=256);Oe(a);return}function vb(a){a=a|0;var b=0;b=Ne(2088)|0;if(!b){a=0;return a|0}df(b|0,0,2088)|0;c[b+2064>>2]=$c(3579545,a)|0;c[b+2048>>2]=dc(3579545,a)|0;c[b+2052>>2]=nc(3579545,a)|0;c[b+2056>>2]=wc(3579545,a)|0;c[b+2060>>2]=Jc(3579545,a)|0;a=tb()|0;c[b+708>>2]=a;c[b+712>>2]=hb()|0;c[b+2012>>2]=0;c[b+2036>>2]=0;c[b+2e3>>2]=0;c[b+2020>>2]=0;c[b+2024>>2]=0;c[b+2028>>2]=0;if(!a)H(66501,66510,204,66566);else{a=b;return a|0}return 0}function wb(a){a=a|0;ub(c[a+708>>2]|0);ib(c[a+712>>2]|0);bd(c[a+2064>>2]|0);gc(c[a+2048>>2]|0);pc(c[a+2052>>2]|0);Dc(c[a+2056>>2]|0);Nc(c[a+2060>>2]|0);jd(a+172|0,c[a+684>>2]|0);Oe(a);return}function xb(a,b){a=a|0;b=b|0;td(a,b)|0;return}function yb(a,b,d){a=a|0;b=b|0;d=d|0;c[a+972+(b<<2)>>2]=d;return}function zb(a){a=a|0;var b=0,d=0,e=0;d=a+2048|0;fc(c[d>>2]|0);e=a+2020|0;b=c[e>>2]|0;d=c[d>>2]|0;if(d|0){switch(b|0){case 0:{ec(d,1);break}case 1:{ec(d,1);break}case 2:{ec(d,0);break}default:{}}c[e>>2]=b}oc(c[a+2052>>2]|0);Ab(a,c[a+2024>>2]|0);d=a+2056|0;yc(c[d>>2]|0);e=a+2028|0;b=c[e>>2]|0;d=c[d>>2]|0;if(!d){e=a+2060|0;e=c[e>>2]|0;Mc(e);a=a+2064|0;a=c[a>>2]|0;ad(a);return}switch(b|0){case 0:{Cc(d,0);break}case 1:{Cc(d,1);break}case 2:{Cc(d,2);break}default:{}}c[e>>2]=b;e=a+2060|0;e=c[e>>2]|0;Mc(e);a=a+2064|0;a=c[a>>2]|0;ad(a);return}function Ab(a,b){a=a|0;b=b|0;var d=0,e=0;e=a+2052|0;d=c[e>>2]|0;if(!d)return;switch(b|0){case 0:{uc(d,1);tc(c[e>>2]|0,36864,63);break}case 1:{uc(d,0);tc(c[e>>2]|0,36864,63);break}case 2:{uc(d,1);tc(c[e>>2]|0,49150,32);tc(c[e>>2]|0,45056,128);break}default:{}}c[a+2024>>2]=b;return}function Bb(a,b){a=a|0;b=b|0;var d=0;d=c[a+2048>>2]|0;if(!d)return;switch(b|0){case 0:{ec(d,1);break}case 1:{ec(d,1);break}case 2:{ec(d,0);break}default:{}}c[a+2020>>2]=b;return}function Cb(a,b){a=a|0;b=b|0;var d=0;d=c[a+2056>>2]|0;if(!d)return;switch(b|0){case 0:{Cc(d,0);break}case 1:{Cc(d,1);break}case 2:{Cc(d,2);break}default:{}}c[a+2028>>2]=b;return}function Db(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0;od(b);jb(c[b+712>>2]|0);c[b+2040>>2]=0;df(b+716|0,0,512)|0;c[b+2036>>2]=i;c[b+136>>2]=b;c[b+140>>2]=17;c[b+144>>2]=17;c[b+148>>2]=18;c[b+152>>2]=18;c[b+156>>2]=19;a[b+21>>0]=2;a[b+7>>0]=h;h=b+20|0;a[h>>0]=0;c[b+120>>2]=3;a[b+15>>0]=0;a[b+16>>0]=0;a[b+19>>0]=0;a[b+17>>0]=1;i=b+1996|0;c[i>>2]=d;j=b+708|0;sb(c[j>>2]|0,62335,0);sb(c[j>>2]|0,62334,254);sb(c[j>>2]|0,62333,24);sb(c[j>>2]|0,62332,118);sb(c[j>>2]|0,62331,243);sb(c[j>>2]|0,62330,124);c[b+28>>2]=62330;c[b+32>>2]=e;a[h>>0]=0;c[b+704>>2]=f;e=b+172|0;hd(e);f=id(e)|0;h=b+684|0;c[h>>2]=f;md(e,f,19,b);c[b+168>>2]=e;c[i>>2]=d;c[b+700>>2]=g;f=(d>>>0)/(g>>>0)|0;c[b+688>>2]=f;c[b+696>>2]=0;c[b+692>>2]=d-(v(f,g)|0);kd(e,c[h>>2]|0,f);return}function Eb(a,b){a=a|0;b=b|0;return rb(c[a+708>>2]|0,b)|0}function Fb(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;g=b>>>13;e=c[a+2084>>2]|0;if(e|0)pa[e&31](c[a+2080>>2]|0,b,d);a:do if(!(c[a+2016>>2]|0)){b:do if(!(c[a+2024>>2]|0)){c:do if((b|0)>=45056)if((b|0)<49150)switch(b|0){case 45056:break c;default:break b}else switch(b|0){case 49150:break c;default:break b}else switch(b|0){case 36864:break;default:break b}while(0);e=c[a+2052>>2]|0;if((b|0)==36864&(d|0)!=0){tc(e,36864,63);break a}else{tc(e,b,d);f=11;break a}}while(0);e=b&-256;if((e|0)<47104)switch(e|0){case 38912:break;default:{f=11;break a}}else switch(e|0){case 47104:break;default:{f=11;break a}}tc(c[a+2052>>2]|0,b,d);kb(c[a+712>>2]|0,b,d)|0;f=11}else f=11;while(0);if((f|0)==11?(b&-4096|0)==20480&(c[a+2036>>2]|0)!=0:0){f=a+2044|0;c[f>>2]=(d<<3&2040)+-1024+(c[f>>2]>>1);kb(c[a+712>>2]|0,b,d)|0}e=a+708|0;if(!((b|8192|0)==45056?(c[a+2e3>>2]|0)==1:0)){a=c[e>>2]|0;sb(a,b,d);return}ob(c[e>>2]|0,g,1,d);a=c[e>>2]|0;sb(a,b,d);return}function Gb(a,b){a=a|0;b=b|0;var d=0;d=c[a+2048>>2]|0;if((b&255|0)==162&(d|0)!=0){a=(hc(d)|0)&255;return a|0}switch((b&255)<<24>>24){case -63:{a=Rc(c[a+2060>>2]|0)|0;return a|0}case -64:{a=Tc(c[a+2060>>2]|0)|0;return a|0}default:{a=255;return a|0}}return 0}function Hb(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;h=d&255;f=c[b+2076>>2]|0;if(f|0)pa[f&31](c[b+2072>>2]|0,h,e);if((h+-65|0)>>>0<4?(a[b+780>>0]|0)!=127:0)return;g=e&255;a[b+716+h>>0]=g;f=c[b+972+(h<<2)>>2]|0;if(f|0)ma[f&31](b,h,e)|0;switch((d&255)<<24>>24){case 6:{f=c[b+2064>>2]|0;if(f|0){gd(f,e);kb(c[b+712>>2]|0,h,e)|0}break}case -95:case -96:{f=c[b+2048>>2]|0;if(f|0){ic(f,h,e);kb(c[b+712>>2]|0,h,e)|0}break}case -86:{g=b+2040|0;c[g>>2]=(c[g>>2]>>1)+(e<<4&2048);kb(c[b+712>>2]|0,h,e)|0;break}case -85:{g=b+2040|0;c[g>>2]=(c[g>>2]>>1)+(e<<11&2048);kb(c[b+712>>2]|0,h,e)|0;break}case 127:case 126:{f=c[b+2064>>2]|0;if(f|0){cd(f,e);kb(c[b+712>>2]|0,h,e)|0}break}case -15:case -16:case 125:case 124:{f=c[b+2056>>2]|0;if(f|0){Fc(f,h,g);kb(c[b+712>>2]|0,h,e)|0}break}case -63:case -64:{f=c[b+2060>>2]|0;if(f|0){Sc(f,h,e);kb(c[b+712>>2]|0,h,e)|0}break}default:{}}if(!((h|0)==254&(c[b+2e3>>2]|0)==0))return;if((c[b+2004>>2]|0)>>>0<=e>>>0?(c[b+2008>>2]|0)>>>0>e>>>0:0){ob(c[b+708>>2]|0,4,1,e);return}ob(c[b+708>>2]|0,4,0,2);return}function Ib(a,b){a=a|0;b=b|0;return 56}function Jb(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;f=e+696|0;b=(c[f>>2]|0)+(c[e+692>>2]|0)|0;c[f>>2]=b;d=c[e+700>>2]|0;if(b>>>0<d>>>0)kd(e+172|0,c[e+684>>2]|0,c[e+688>>2]|0);else{c[f>>2]=b-d;kd(e+172|0,c[e+684>>2]|0,(c[e+688>>2]|0)+1|0)}d=e+20|0;if(!(a[d>>0]|0))return;f=c[e+704>>2]|0;b=e+708|0;sb(c[b>>2]|0,62335,0);sb(c[b>>2]|0,62334,254);sb(c[b>>2]|0,62333,24);sb(c[b>>2]|0,62332,118);sb(c[b>>2]|0,62331,243);sb(c[b>>2]|0,62330,124);c[e+28>>2]=62330;c[e+32>>2]=f;a[d>>0]=0;return}function Kb(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0;if(!b)H(66573,66510,341,66576);i=b+708|0;h=c[i>>2]|0;if(!h)H(66501,66510,342,66576);c[b+2012>>2]=d;b=Ne(65536)|0;if(!b)H(66591,66510,347,66576);df(b|0,-55,16384)|0;j=b+147|0;a[j>>0]=a[66593]|0;a[j+1>>0]=a[66594]|0;a[j+2>>0]=a[66595]|0;a[j+3>>0]=a[66596]|0;a[j+4>>0]=a[66597]|0;a[j+5>>0]=a[66598]|0;j=b+1|0;k=j;a[k>>0]=211;a[k+1>>0]=160;a[k+2>>0]=245;a[k+3>>0]=123;j=j+4|0;a[j>>0]=-906911277;a[j+1>>0]=-906911277>>8;a[j+2>>0]=-906911277>>16;a[j+3>>0]=-906911277>>24;j=b+9|0;a[j>>0]=a[66600]|0;a[j+1>>0]=a[66601]|0;a[j+2>>0]=a[66602]|0;a[j+3>>0]=a[66603]|0;a[j+4>>0]=a[66604]|0;j=b+16384|0;df(j|0,0,49152)|0;cf(b+e|0,g|0,((f+e|0)>>>0>65536?65536-e|0:f)|0)|0;pb(h,0,0,0,b);nb(c[i>>2]|0,0,0,3);ob(c[i>>2]|0,0,0,0);pb(c[i>>2]|0,0,1,0,j);nb(c[i>>2]|0,0,1,3);ob(c[i>>2]|0,2,0,1);pb(c[i>>2]|0,0,2,0,b+32768|0);nb(c[i>>2]|0,0,2,3);ob(c[i>>2]|0,4,0,2);pb(c[i>>2]|0,0,3,0,b+49152|0);nb(c[i>>2]|0,0,3,3);ob(c[i>>2]|0,6,0,3);if(d|0){Oe(b);return}nb(c[i>>2]|0,0,2,1);Oe(b);return}function Lb(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;if(!a)H(66573,66510,375,66606);h=a+708|0;g=c[h>>2]|0;if(!g)H(66501,66510,376,66606);c[a+2e3>>2]=b;c[a+2004>>2]=e;c[a+2008>>2]=e+d;switch(b|0){case 0:{if(!d)return;pb(g,1,e,0,f);if((d|0)==1)return;g=1;do{pb(c[h>>2]|0,1,g+e|0,0,f+(g<<14)|0);g=g+1|0}while((g|0)!=(d|0));return}case 1:{if(!d)return;pb(g,1,e,1,f);if((d|0)==1)return;g=1;do{pb(c[h>>2]|0,1,g+e|0,1,f+(g<<13)|0);g=g+1|0}while((g|0)!=(d|0));return}default:H(66591,66510,391,66606)}}function Mb(a,b,c){a=a|0;b=b|0;c=c|0;Fb(a,b,c);return}function Nb(a,b,c){a=a|0;b=b|0;c=c|0;Hb(a,b,c);return}function Ob(){return Ne(32)|0}function Pb(a,b){a=a|0;b=b|0;var d=0.0,e=0.0,f=0;if(!(c[a>>2]|0)){a=b;return a|0}f=a+24|0;e=+(b|0);b=a+16|0;d=+g[a+8>>3]*(+g[f>>3]+e-+g[b>>3]);g[f>>3]=d;g[b>>3]=e;a=~~d;return a|0}function Qb(a){a=a|0;Oe(a);return}function Rb(a,b){a=a|0;b=+b;g[a+8>>3]=1.0/(1.0/b/.047+1.0);a=a+16|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;return}function Sb(){var a=0;a=Ne(800)|0;if(!a)return a|0;df(a+520|0,0,260)|0;c[a+792>>2]=0;return a|0}function Tb(a){a=a|0;df(a+520|0,0,260)|0;c[a+792>>2]=0;return}function Ub(a,b){a=a|0;b=b|0;var d=0,e=0.0,f=0,h=0;f=c[a+792>>2]|0;if(!f){a=b;return a|0}d=f<<1;if(d|0)do{h=d;d=d+-1|0;c[a+520+(h<<2)>>2]=c[a+520+(d<<2)>>2]}while((d|0)!=0);c[a+520>>2]=b;d=1;e=+g[a>>3]*+(c[a+520+(f<<2)>>2]|0);do{e=e+ +g[a+(d<<3)>>3]*+((c[a+520+(f-d<<2)>>2]|0)+(c[a+520+(d+f<<2)>>2]|0)|0);d=d+1|0}while(f>>>0>=d>>>0);h=~~e;return h|0}function Vb(a){a=a|0;if(!a)return;Oe(a);return}function Wb(){return Ne(24)|0}function Xb(a,b,d,e){a=a|0;b=+b;d=+d;e=+e;g[a+16>>3]=1.0/d/e/b;g[a+8>>3]=0.0;c[a>>2]=1;return}function Yb(a,b){a=a|0;b=b|0;var d=0.0,e=0;if(!(c[a>>2]|0))return b|0;e=a+8|0;d=+g[e>>3];d=d+ +g[a+16>>3]*(+(b|0)-d);g[e>>3]=d;b=~~d;return b|0}function Zb(a){a=a|0;Oe(a);return}function _b(a){a=a|0;c[a>>2]=0;return}function $b(b,c){b=b|0;c=c|0;var e=0;if(c>>>0>7&(a[b>>0]|0)==-2){if(c>>>0>95?(Rd(b+80|0,66619,3)|0)==0:0){c=1;return c|0}e=d[b+2>>0]<<8|d[b+1>>0];if((8-e+(d[b+4>>0]<<8|d[b+3>>0])|0)>>>0<=c>>>0?(d[b+7>>0]|0)<2:0){c=1;return c|0}if((e|0)==42423?(d[b+7>>0]|0)<2:0){c=1;return c|0}}c=0;return c|0}function ac(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;if(f>>>0>96?(Rd(e+80|0,66619,3)|0)==0:0){j=b+268|0;a[j>>0]=66;a[j+1>>0]=84;a[j+2>>0]=79;a[j+3>>0]=0;j=e+89|0;k=e+90|0;i=((d[e+92>>0]|0)<<8|(d[e+91>>0]|0))+7-((d[k>>0]|0)<<8|(d[j>>0]|0))|0;g=0;while(1){h=i+g|0;if(h>>>0>=f>>>0)break;h=a[e+h>>0]|0;if((h&255)<32)break;a[b+12+g>>0]=h;g=g+1|0;if(g>>>0>=255){g=255;break}}a[b+12+g>>0]=0;i=((d[e+94>>0]|0)<<8|(d[e+93>>0]|0))+7-((d[k>>0]|0)<<8|(d[j>>0]|0))|0;g=0;while(1){h=i+g|0;if(h>>>0>=f>>>0)break;h=a[e+h>>0]|0;if((h&255)<32)break;a[137264+g>>0]=h;g=g+1|0;if(g>>>0>=255){g=255;break}}a[137264+g>>0]=0;g=Ne((te(137264)|0)+1|0)|0;c[b+284>>2]=g;if(!g){f=b+8|0;c[f>>2]=1;b=b+4|0;c[b>>2]=1;return}we(g,137264)|0;f=b+8|0;c[f>>2]=1;b=b+4|0;c[b>>2]=1;return}a[b+12>>0]=0;c[b+284>>2]=0;f=b+8|0;c[f>>2]=1;b=b+4|0;c[b>>2]=1;return}function bc(b,c){b=b|0;c=c|0;var d=0,e=0,f=0;f=c+8192|0;if(c>>>0<16|8192==0){f=0;return f|0}d=(f&65535)+32|0;e=Ne(d)|0;if(!e){f=0;return f|0}ya(e,24576,f&65535,32256,32512);a[e+15>>0]=1;cf(e+32|0,48311,8192+-7|0)|0;cf(e+7712|0,56496,256)|0;cf(e+7968|0,56752,256)|0;cf(e+8224|0,b|0,c|0)|0;f=ua(e,d)|0;Oe(e);return f|0}function cc(a,b){a=a|0;b=b|0;var d=0;c[a+52>>2]=b;if(!b){d=~~(+((c[a+40>>2]|0)>>>0)*16777216.0/+(c[a+44>>2]<<4>>>0))>>>0;b=a+48|0;c[b>>2]=d;return}else{c[a+192>>2]=2147483648/((c[a+44>>2]|0)>>>0)|0;c[a+200>>2]=2147483648/((c[a+40>>2]|0)>>>4>>>0)|0;c[a+196>>2]=0;b=16777216;d=a+48|0;c[d>>2]=b;return}}function dc(a,b){a=a|0;b=b|0;var d=0;d=Ne(216)|0;if(!d){b=0;return b|0}c[d>>2]=57008;c[d+40>>2]=a;b=(b|0)==0?44100:b;c[d+44>>2]=b;c[d+52>>2]=0;c[d+48>>2]=~~(+(a>>>0)*16777216.0/+(b<<4>>>0))>>>0;b=d;return b|0}function ec(a,b){a=a|0;b=b|0;c[a>>2]=(b|0)==1?57008:57136;return}function fc(d){d=d|0;var e=0,f=0;c[d+132>>2]=0;c[d+56>>2]=4096;c[d+80>>2]=0;c[d+92>>2]=0;c[d+68>>2]=0;b[d+208>>1]=0;c[d+60>>2]=4096;c[d+84>>2]=0;c[d+96>>2]=0;c[d+72>>2]=0;b[d+210>>1]=0;c[d+64>>2]=4096;c[d+88>>2]=0;c[d+100>>2]=0;c[d+76>>2]=0;b[d+212>>1]=0;c[d+128>>2]=0;e=d+4|0;f=e+16|0;do{a[e>>0]=0;e=e+1|0}while((e|0)<(f|0));c[d+204>>2]=0;c[d+180>>2]=65535;c[d+184>>2]=64;c[d+188>>2]=0;c[d+136>>2]=0;c[d+140>>2]=0;c[d+172>>2]=0;c[d+176>>2]=0;c[d+164>>2]=1;c[d+36>>2]=0;return}function gc(a){a=a|0;Oe(a);return}function hc(b){b=b|0;return a[(c[b+204>>2]|0)+(b+4)>>0]|0}function ic(a,b,d){a=a|0;b=b|0;d=d|0;if(!(b&1)){c[a+204>>2]=d&31;return}else{jc(a,c[a+204>>2]|0,d);return}}function jc(b,e,f){b=b|0;e=e|0;f=f|0;if(e>>>0>15)return;f=(d[57264+e>>0]|0)&f;a[b+4+e>>0]=f;switch(e|0){case 5:case 3:case 1:case 4:case 2:case 0:{c[b+80+(e>>>1<<2)>>2]=(a[(e|1)+(b+4)>>0]&15)<<8|(d[(e&-2)+(b+4)>>0]|0);return}case 6:{c[b+188>>2]=f<<1&62;return}case 7:{c[b+104>>2]=f&1;c[b+108>>2]=f&2;c[b+112>>2]=f&4;c[b+116>>2]=f&8;c[b+120>>2]=f&16;c[b+124>>2]=f&32;return}case 10:case 9:case 8:{c[b+68+(e+-8<<2)>>2]=f<<1;return}case 12:case 11:{c[b+172>>2]=(d[b+16>>0]|0)<<8|(d[b+15>>0]|0);return}case 13:{c[b+148>>2]=f>>>3&1;e=f>>>2&1;c[b+152>>2]=e;c[b+156>>2]=f>>>1&1;c[b+160>>2]=f&1;c[b+144>>2]=e;c[b+164>>2]=0;c[b+176>>2]=65536-(c[b+172>>2]|0);c[b+140>>2]=(e|0)==0?31:0;return}default:return}}function kc(a){a=a|0;var d=0,e=0,f=0,g=0,h=0;if(!(c[a+52>>2]|0))lc(a);else{g=a+192|0;d=c[g>>2]|0;h=a+196|0;e=c[h>>2]|0;if(e>>>0<d>>>0){f=a+200|0;d=e;while(1){c[h>>2]=(c[f>>2]|0)+d;lc(a);d=c[g>>2]|0;e=c[h>>2]|0;if(e>>>0<d>>>0)d=e;else break}}c[h>>2]=e-d}h=(b[a+210>>1]|0)+(b[a+208>>1]|0)+(b[a+212>>1]|0)|0;c[a+36>>2]=h;return h&65535|0}function lc(a){a=a|0;var d=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;k=a+132|0;f=(c[k>>2]|0)+(c[a+48>>2]|0)|0;p=f>>>24;c[k>>2]=f&16777215;k=a+176|0;f=(c[k>>2]|0)+p|0;c[k>>2]=f;if(f>>>0>65535?(h=c[a+172>>2]|0,n=a+164|0,l=a+144|0,o=a+140|0,j=a+148|0,i=a+156|0,m=a+160|0,h|0):0){d=c[n>>2]|0;do{do if(!d){g=c[o>>2]|0;if(!(c[l>>2]|0)){g=g+63&63;c[o>>2]=g;break}else{g=g+1&63;c[o>>2]=g;break}}else g=c[o>>2]|0;while(0);if(g&32){if(!(c[j>>2]|0)){c[n>>2]=1;d=1;g=0}else{g=c[m>>2]|0;if((c[i>>2]|0)!=(g|0))c[l>>2]=c[l>>2]^1;if(g){c[n>>2]=1;d=1}g=(c[l>>2]|0)==0?31:0}c[o>>2]=g}f=f-h|0}while(f>>>0>65535);c[k>>2]=f}g=a+184|0;f=(c[g>>2]|0)+p|0;c[g>>2]=f;h=a+180|0;d=c[h>>2]|0;if(f&64){if(d&1){d=d^147456;c[h>>2]=d}d=d>>>1;c[h>>2]=d;o=c[a+188>>2]|0;c[g>>2]=f-((o|0)==0?2:o)}j=d&1;i=a+128|0;k=a+140|0;g=a+56|0;f=(c[g>>2]|0)+p|0;c[g>>2]=f;do if(f&4096|0){d=c[a+80>>2]|0;h=a+92|0;if(d>>>0>1){c[h>>2]=(c[h>>2]|0)==0&1;c[g>>2]=f-d;break}else{c[h>>2]=1;break}}while(0);i=c[i>>2]|0;if(!(i&1)){if(!((c[a+104>>2]|0)==0?!(c[a+92>>2]|0):0))q=31;do if((q|0)==31?c[a+116>>2]|j|0:0){d=c[a+68>>2]|0;f=c[a>>2]|0;if(!(d&32)){o=a+208|0;b[o>>1]=(c[f+((d&31)<<2)>>2]<<4)+(e[o>>1]|0);break}else{o=a+208|0;b[o>>1]=(c[f+(c[k>>2]<<2)>>2]<<4)+(e[o>>1]|0);break}}while(0);o=a+208|0;b[o>>1]=b[o>>1]>>1}g=a+60|0;f=(c[g>>2]|0)+p|0;c[g>>2]=f;do if(f&4096|0){d=c[a+84>>2]|0;h=a+96|0;if(d>>>0>1){c[h>>2]=(c[h>>2]|0)==0&1;c[g>>2]=f-d;break}else{c[h>>2]=1;break}}while(0);if(!(i&2)){if(!((c[a+108>>2]|0)==0?!(c[a+96>>2]|0):0))q=43;do if((q|0)==43?c[a+120>>2]|j|0:0){d=c[a+72>>2]|0;f=c[a>>2]|0;if(!(d&32)){o=a+210|0;b[o>>1]=(c[f+((d&31)<<2)>>2]<<4)+(e[o>>1]|0);break}else{o=a+210|0;b[o>>1]=(c[f+(c[k>>2]<<2)>>2]<<4)+(e[o>>1]|0);break}}while(0);o=a+210|0;b[o>>1]=b[o>>1]>>1}h=a+64|0;f=(c[h>>2]|0)+p|0;c[h>>2]=f;do if(f&4096|0){d=c[a+88>>2]|0;g=a+100|0;if(d>>>0>1){c[g>>2]=(c[g>>2]|0)==0&1;c[h>>2]=f-d;break}else{c[g>>2]=1;break}}while(0);if(i&4|0)return;if(!((c[a+112>>2]|0)==0?!(c[a+100>>2]|0):0))q=55;do if((q|0)==55?c[a+124>>2]|j|0:0){d=c[a+76>>2]|0;f=c[a>>2]|0;if(!(d&32)){q=a+212|0;b[q>>1]=(c[f+((d&31)<<2)>>2]<<4)+(e[q>>1]|0);break}else{q=a+212|0;b[q>>1]=(c[f+(c[k>>2]<<2)>>2]<<4)+(e[q>>1]|0);break}}while(0);a=a+212|0;b[a>>1]=b[a>>1]>>1;return}function mc(a,b){a=a|0;b=b|0;c[a+12>>2]=b;if(!b){b=~~(+((c[a>>2]|0)>>>0)*4194304.0/+((c[a+4>>2]|0)>>>0))>>>0;a=a+8|0;c[a>>2]=b;return}else{c[a+40>>2]=2147483648/((c[a+4>>2]|0)>>>0)|0;c[a+48>>2]=2147483648/((c[a>>2]|0)>>>1>>>0)|0;c[a+44>>2]=0;b=8388608;a=a+8|0;c[a>>2]=b;return}}function nc(a,b){a=a|0;b=b|0;var d=0;d=Ne(448)|0;if(!d){b=0;return b|0}df(d+16|0,0,432)|0;c[d>>2]=a;b=(b|0)==0?44100:b;c[d+4>>2]=b;c[d+12>>2]=0;c[d+8>>2]=~~(+(a>>>0)*4194304.0/+(b>>>0))>>>0;c[d+20>>2]=1;b=d;return b|0}function oc(d){d=d|0;var e=0,f=0;if(!d)return;c[d+24>>2]=0;c[d+28>>2]=0;c[d+32>>2]=36864;e=d+72|0;a[e>>0]=0;a[e+1>>0]=0;a[e+2>>0]=0;a[e+3>>0]=0;a[e+4>>0]=0;e=d+416|0;f=d+104|0;a[f>>0]=0;a[f+1>>0]=0;a[f+2>>0]=0;a[f+3>>0]=0;a[f+4>>0]=0;f=d+136|0;a[f>>0]=0;a[f+1>>0]=0;a[f+2>>0]=0;a[f+3>>0]=0;a[f+4>>0]=0;f=d+168|0;a[f>>0]=0;a[f+1>>0]=0;a[f+2>>0]=0;a[f+3>>0]=0;a[f+4>>0]=0;f=d+200|0;a[f>>0]=0;a[f+1>>0]=0;a[f+2>>0]=0;a[f+3>>0]=0;a[f+4>>0]=0;c[d+36>>2]=0;df(d+232|0,0,164)|0;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;c[e+16>>2]=0;c[e+20>>2]=0;c[e+24>>2]=0;b[e+28>>1]=0;c[d+396>>2]=255;c[d+400>>2]=255;c[d+404>>2]=0;c[d+408>>2]=0;c[d+412>>2]=0;b[d+16>>1]=0;return}function pc(a){a=a|0;if(!a)return;Oe(a);return}function qc(a){a=a|0;var d=0,f=0,g=0,h=0,i=0;if(!(c[a+12>>2]|0))rc(a);else{h=a+40|0;d=c[h>>2]|0;i=a+44|0;f=c[i>>2]|0;if(f>>>0<d>>>0){g=a+48|0;d=f;while(1){c[i>>2]=(c[g>>2]|0)+d;rc(a);d=c[h>>2]|0;f=c[i>>2]|0;if(f>>>0<d>>>0)d=f;else break}}c[i>>2]=f-d}i=(e[a+438>>1]|0)+(e[a+436>>1]|0)+(e[a+440>>1]|0)+(e[a+442>>1]|0)+(e[a+444>>1]|0)&65535;b[a+16>>1]=i;return i|0}function rc(d){d=d|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;l=d+396|0;m=d+400|0;n=d+36|0;g=d+232|0;f=(c[d+52>>2]|0)+(c[g>>2]|0)|0;c[g>>2]=f;if(!(f&134217728))g=c[l>>2]|0;else{f=f&134217727;c[g>>2]=f;g=d+312|0;c[g>>2]=(c[g>>2]|0)+31&c[d+416>>2];g=c[m>>2]&1|c[l>>2]&-2;c[l>>2]=g}if(g&1|0?(h=(f>>>22)+(c[d+312>>2]|0)&31,c[d+272>>2]=h,(c[n>>2]&1|0)==0):0){f=(v(c[d+292>>2]|0,a[d+72+h>>0]|0)|0)&65520;h=d+436|0;b[h>>1]=f+(e[h>>1]|0)}h=d+436|0;b[h>>1]=b[h>>1]>>1;h=d+236|0;f=(c[d+56>>2]|0)+(c[h>>2]|0)|0;c[h>>2]=f;if(f&134217728){f=f&134217727;c[h>>2]=f;h=d+316|0;c[h>>2]=(c[h>>2]|0)+31&c[d+420>>2];g=c[m>>2]&2|g&-3;c[l>>2]=g}if(g&2|0?(i=(f>>>22)+(c[d+316>>2]|0)&31,c[d+276>>2]=i,(c[n>>2]&2|0)==0):0){h=(v(c[d+296>>2]|0,a[d+104+i>>0]|0)|0)&65520;i=d+438|0;b[i>>1]=h+(e[i>>1]|0)}h=d+438|0;b[h>>1]=b[h>>1]>>1;h=d+240|0;f=(c[d+60>>2]|0)+(c[h>>2]|0)|0;c[h>>2]=f;if(f&134217728){f=f&134217727;c[h>>2]=f;i=d+320|0;c[i>>2]=(c[i>>2]|0)+31&c[d+424>>2];g=c[m>>2]&4|g&-5;c[l>>2]=g}if(g&4|0?(j=(f>>>22)+(c[d+320>>2]|0)&31,c[d+280>>2]=j,(c[n>>2]&4|0)==0):0){i=(v(c[d+300>>2]|0,a[d+136+j>>0]|0)|0)&65520;j=d+440|0;b[j>>1]=i+(e[j>>1]|0)}h=d+440|0;b[h>>1]=b[h>>1]>>1;h=d+244|0;f=(c[d+64>>2]|0)+(c[h>>2]|0)|0;c[h>>2]=f;if(f&134217728){f=f&134217727;c[h>>2]=f;j=d+324|0;c[j>>2]=(c[j>>2]|0)+31&c[d+428>>2];g=c[m>>2]&8|g&-9;c[l>>2]=g}if(g&8|0?(k=(f>>>22)+(c[d+324>>2]|0)&31,c[d+284>>2]=k,(c[n>>2]&8|0)==0):0){j=(v(c[d+304>>2]|0,a[d+168+k>>0]|0)|0)&65520;k=d+442|0;b[k>>1]=j+(e[k>>1]|0)}h=d+442|0;b[h>>1]=b[h>>1]>>1;h=d+248|0;f=(c[d+68>>2]|0)+(c[h>>2]|0)|0;c[h>>2]=f;if(f&134217728){f=f&134217727;c[h>>2]=f;k=d+328|0;c[k>>2]=(c[k>>2]|0)+31&c[d+432>>2];g=c[m>>2]&16|g&-17;c[l>>2]=g}if(!(g&16)){d=d+444|0;n=b[d>>1]|0;n=n<<16>>16;n=n>>1;n=n&65535;b[d>>1]=n;return}f=(f>>>22)+(c[d+328>>2]|0)&31;c[d+288>>2]=f;if(c[n>>2]&16|0){d=d+444|0;n=b[d>>1]|0;n=n<<16>>16;n=n>>1;n=n&65535;b[d>>1]=n;return}m=(v(c[d+308>>2]|0,a[d+200+f>>0]|0)|0)&65520;n=d+444|0;b[n>>1]=m+(e[n>>1]|0);d=d+444|0;n=b[d>>1]|0;n=n<<16>>16;n=n>>1;n=n&65535;b[d>>1]=n;return}function sc(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=d&255;if(f>>>0<160){h=d>>>5&7;if(c[b+416+(h<<2)>>2]|0)return;g=e&255;f=d&31;a[b+72+(h<<5)+f>>0]=g;if(!((h|0)==3&(c[b+24>>2]|0)==0))return;a[b+200+f>>0]=g;return}g=f+-192|0;if(g>>>0<10){a[b+332+g>>0]=e;g=d>>>1&7;if(!(d&1)){d=b+252+(g<<2)|0;f=c[d>>2]&3840|e&255;c[d>>2]=f}else{d=b+252+(g<<2)|0;f=c[d>>2]&255|e<<8&3840;c[d>>2]=f}if(c[b+412>>2]|0)c[b+232+(g<<2)>>2]=0;f=(c[b+408>>2]|0)==0?f:f&255;f=(c[b+404>>2]|0)==0?f:f>>>8;if(f>>>0<9){c[b+52+(g<<2)>>2]=0;return}else{c[b+52+(g<<2)>>2]=((c[b+8>>2]|0)>>>0)/((f+1|0)>>>0)|0;return}}if((f+-208|0)>>>0<5){a[b+332+g>>0]=e;c[b+292+((d&15)<<2)>>2]=e&15;return}switch((d&255)<<24>>24){case -32:{a[b+332+g>>0]=e;c[b+24>>2]=e&1;return}case -31:{a[b+332+g>>0]=e;c[b+400>>2]=e&31;return}case -30:{a[b+332+g>>0]=e;c[b+404>>2]=e&1;c[b+408>>2]=e&2;c[b+412>>2]=e&32;f=b+416|0;if(!(e&64)){c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;c[f+16>>2]=0}else{c[f>>2]=31;c[b+420>>2]=31;c[b+424>>2]=31;c[b+428>>2]=31;c[b+432>>2]=31}if(!(e&128))return;c[b+432>>2]=31;c[b+428>>2]=31;return}default:return}}function tc(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;i=e&255;g=c[b+20>>2]|0;h=(g|0)==1;if((d&65534|0)==49150&h){c[b+32>>2]=e<<8&8192|36864;return}f=c[b+32>>2]|0;if(f>>>0>d>>>0)return;d=d-f|0;if(!d){if((i|0)==63){c[b+24>>2]=0;c[b+28>>2]=1;return}f=b+24|0;if((e&128|0)==0|h^1){c[f>>2]=0;c[b+28>>2]=0;return}else{c[f>>2]=1;c[b+28>>2]=1;return}}if((d&-256|0)!=2048|(c[b+28>>2]|0)==0)return;switch(g|0){case 0:{f=d&255;if(f>>>0<128){sc(b,f,i);return}if(f>>>0<138){sc(b,f+64|0,i);return}if(f>>>0<143){sc(b,f+70|0,i);return}if((f|0)==143){a[b+365>>0]=e;c[b+400>>2]=e&31;return}if(f>>>0<=223)return;a[b+366>>0]=e;c[b+404>>2]=e&1;c[b+408>>2]=e&2;c[b+412>>2]=e&32;f=b+416|0;if(!(e&64)){c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;c[f+16>>2]=0}else{c[f>>2]=31;c[b+420>>2]=31;c[b+424>>2]=31;c[b+428>>2]=31;c[b+432>>2]=31}if(!(e&128))return;c[b+432>>2]=31;c[b+428>>2]=31;return}case 1:{f=d&255;if(!(c[b+24>>2]|0)){if(f>>>0<128){sc(b,f,i);return}if(f>>>0<138){sc(b,f+64|0,i);return}if(f>>>0<143){sc(b,f+70|0,i);return}if((f|0)==143){a[b+365>>0]=e;c[b+400>>2]=e&31;return}if(f>>>0<=223)return;a[b+366>>0]=e;c[b+404>>2]=e&1;c[b+408>>2]=e&2;c[b+412>>2]=e&32;f=b+416|0;if(!(e&64)){c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;c[f+16>>2]=0}else{c[f>>2]=31;c[b+420>>2]=31;c[b+424>>2]=31;c[b+428>>2]=31;c[b+432>>2]=31}if(!(e&128))return;c[b+432>>2]=31;c[b+428>>2]=31;return}else{if(f>>>0<160){sc(b,f,i);return}if(f>>>0<170){sc(b,f+32|0,i);return}if(f>>>0<175){sc(b,f+38|0,i);return}if((f|0)==175){a[b+365>>0]=e;c[b+400>>2]=e&31;return}if((d&224|0)!=192)return;a[b+366>>0]=e;c[b+404>>2]=e&1;c[b+408>>2]=e&2;c[b+412>>2]=e&32;f=b+416|0;if(!(e&64)){c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;c[f+16>>2]=0}else{c[f>>2]=31;c[b+420>>2]=31;c[b+424>>2]=31;c[b+428>>2]=31;c[b+432>>2]=31}if(!(e&128))return;c[b+432>>2]=31;c[b+428>>2]=31;return}}default:return}}function uc(a,b){a=a|0;b=b|0;c[a+20>>2]=b;return}function vc(a,d,e){a=+a;d=+d;e=e|0;var f=0,h=0,i=0.0,j=0,k=0.0;j=Ne(32)|0;c[j>>2]=e;i=a/d;g[j+16>>3]=i;f=Ne(e<<2)|0;c[j+28>>2]=f;if((e|0)>0){h=0;do{c[f+(h<<2)>>2]=Ne(32)|0;h=h+1|0}while((h|0)!=(e|0))}e=Ne(4096)|0;c[j+24>>2]=e;if(d<a){f=0;do{k=+(f|0)*.00390625/i;d=k*.5*.125+.5;d=+s(+(d*12.566370614359172))*.08+(.42-+s(+(d*6.283185307179586))*.5);a=k*3.141592653589793;a=+t(+a)/a;b[e+(f<<1)>>1]=~~((k==0.0?1.0:a)*d*4096.0/i);f=f+1|0}while((f|0)!=2048);return j|0}else{f=0;do{d=+(f|0)*.00390625;k=d*.5*.125+.5;k=+s(+(k*12.566370614359172))*.08+(.42-+s(+(k*6.283185307179586))*.5);i=d*3.141592653589793;i=+t(+i)/i;b[e+(f<<1)>>1]=~~((d==0.0?1.0:i)*k*4096.0);f=f+1|0}while((f|0)!=2048);return j|0}return 0}function wc(d,e){d=d|0;e=e|0;var f=0,h=0,i=0,j=0,k=0,l=0.0,m=0,n=0,o=0;if(!(a[954372]|0)){m=0;do{l=+g[57280+(m<<3)>>3];k=0;do{n=k<<4|m;f=~~(l-+(7-k|0)*6.0);h=~~(+(f>>>2|0)/.375)>>>0;i=~~(+(f>>>1|0)/.375)>>>0;j=~~(+(f|0)/.375)>>>0;if((f|0)<1){f=0;do{j=f<<1;c[137520+(n<<10)+(f<<4)>>2]=j;c[137520+(n<<10)+(f<<4)+4>>2]=j;c[137520+(n<<10)+(f<<4)+8>>2]=j;c[137520+(n<<10)+(f<<4)+12>>2]=j;f=f+1|0}while((f|0)!=64)}else{f=0;do{o=f<<1;c[137520+(n<<10)+(f<<4)>>2]=o;c[137520+(n<<10)+(f<<4)+4>>2]=o+h;c[137520+(n<<10)+(f<<4)+8>>2]=o+i;c[137520+(n<<10)+(f<<4)+12>>2]=o+j;f=f+1|0}while((f|0)!=64)}k=k+1|0}while((k|0)!=8);m=m+1|0}while((m|0)!=16);c[67149]=0;c[67148]=0;c[67153]=2;c[67152]=0;c[67157]=4;c[67156]=1;c[67161]=6;c[67160]=1;c[67165]=8;c[67164]=2;c[67169]=10;c[67168]=2;c[67173]=12;c[67172]=3;c[67177]=14;c[67176]=3;c[67151]=1;c[67150]=0;c[67155]=3;c[67154]=0;c[67159]=5;c[67158]=1;c[67163]=7;c[67162]=1;c[67167]=9;c[67166]=2;c[67171]=11;c[67170]=2;c[67175]=13;c[67174]=3;c[67179]=15;c[67178]=3;f=0;do{b[57408+(f+256<<1)>>1]=b[57408+(255-f<<1)>>1]|0;f=f+1|0}while((f|0)!=256);f=0;do{b[57408+(f+512<<1)>>1]=b[57408+(f<<1)>>1]|-32768;f=f+1|0}while((f|0)!=512);cf(268720,57408,1024)|0;f=512;do{b[268720+(f<<1)>>1]=4095;f=f+1|0}while((f|0)!=1024);xc(59456,270768);xc(59464,270872);xc(59472,270976);xc(59480,271080);xc(59488,271184);xc(59496,271288);xc(59504,271392);xc(59512,271496);xc(59520,271600);xc(59528,271704);xc(59536,271808);xc(59544,271912);xc(59552,272016);xc(59560,272120);xc(59568,272224);xc(59576,272328);xc(59584,272432);xc(59592,272536);xc(59600,272640);xc(59608,272744);xc(59616,272848);xc(59624,272952);xc(59632,273056);xc(59640,273160);xc(59648,273264);xc(59656,273368);xc(59664,273472);xc(59672,273576);xc(59680,273680);xc(59688,273784);xc(59696,273888);xc(59704,273992);xc(59712,274096);xc(59720,274200);xc(59728,274304);xc(59736,274408);xc(59744,274512);xc(59752,274616);xc(59760,274720);xc(59768,274824);xc(59776,274928);xc(59784,275032);xc(59792,275136);xc(59800,275240);xc(59808,275344);xc(59816,275448);xc(59824,275552);xc(59832,275656);xc(59840,275760);xc(59848,275864);xc(59856,275968);xc(59864,276072);xc(59872,276176);xc(59880,276280);xc(59888,276384);xc(59896,276488);xc(59904,276592);a[954372]=1}f=Pe(3296,1)|0;if(!f){o=0;return o|0}h=f+1252|0;i=h;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+1304|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+1356|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+1408|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+1460|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+1512|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+1564|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+1616|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+1668|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+1720|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+1772|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+1824|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+1876|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+1928|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+1980|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2032|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2084|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2136|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2188|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2240|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2292|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2344|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2396|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2448|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2500|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2552|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2604|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2656|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2708|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2760|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2812|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2864|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2916|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2968|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+3020|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+3072|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+3124|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+3176|0;j=953724;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));c[f>>2]=d;c[f+4>>2]=e;yc(f);i=h;j=270768;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+1304|0;j=270820;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+1356|0;j=270872;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+1408|0;j=270924;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+1460|0;j=270976;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+1512|0;j=271028;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+1564|0;j=271080;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+1616|0;j=271132;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+1668|0;j=271184;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+1720|0;j=271236;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+1772|0;j=271288;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+1824|0;j=271340;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+1876|0;j=271392;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+1928|0;j=271444;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+1980|0;j=271496;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2032|0;j=271548;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2084|0;j=271600;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2136|0;j=271652;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2188|0;j=271704;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2240|0;j=271756;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2292|0;j=271808;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2344|0;j=271860;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2396|0;j=271912;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2448|0;j=271964;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2500|0;j=272016;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2552|0;j=272068;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2604|0;j=272120;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2656|0;j=272172;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2708|0;j=272224;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2760|0;j=272276;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2812|0;j=272328;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2864|0;j=272380;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2916|0;j=272432;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+2968|0;j=272484;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+3020|0;j=272536;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+3072|0;j=272588;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+3124|0;j=272640;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));i=f+3176|0;j=272692;k=i+52|0;do{c[i>>2]=c[j>>2];i=i+4|0;j=j+4|0}while((i|0)<(k|0));o=f;return o|0}function xc(b,e){b=b|0;e=e|0;var f=0,g=0;c[e+40>>2]=(d[b>>0]|0)>>>7;f=b+1|0;c[e+92>>2]=(d[f>>0]|0)>>>7;c[e+44>>2]=(d[b>>0]|0)>>>6&1;c[e+96>>2]=(d[f>>0]|0)>>>6&1;c[e+8>>2]=(d[b>>0]|0)>>>5&1;c[e+60>>2]=(d[f>>0]|0)>>>5&1;c[e+32>>2]=(d[b>>0]|0)>>>4&1;c[e+84>>2]=(d[f>>0]|0)>>>4&1;c[e+12>>2]=a[b>>0]&15;c[e+64>>2]=a[f>>0]&15;f=b+2|0;c[e+36>>2]=(d[f>>0]|0)>>>6;g=b+3|0;c[e+88>>2]=(d[g>>0]|0)>>>6;c[e>>2]=a[f>>0]&63;c[e+52>>2]=0;c[e+4>>2]=a[g>>0]&7;c[e+56>>2]=0;c[e+48>>2]=(d[g>>0]|0)>>>3&1;c[e+100>>2]=(d[g>>0]|0)>>>4&1;g=b+4|0;c[e+16>>2]=(d[g>>0]|0)>>>4;f=b+5|0;c[e+68>>2]=(d[f>>0]|0)>>>4;c[e+20>>2]=a[g>>0]&15;c[e+72>>2]=a[f>>0]&15;f=b+6|0;c[e+24>>2]=(d[f>>0]|0)>>>4;b=b+7|0;c[e+76>>2]=(d[b>>0]|0)>>>4;c[e+28>>2]=a[f>>0]&15;c[e+80>>2]=a[b>>0]&15;return}function yc(d){d=d|0;var e=0,f=0,h=0,i=0,j=0.0,k=0.0,l=0,m=0;if(!d)return;c[d+12>>2]=0;c[d+108>>2]=0;c[d+116>>2]=0;c[d+128>>2]=65535;c[d+3252>>2]=0;a[d+100>>0]=0;c[d+96>>2]=0;c[d+104>>2]=0;l=c[d+4>>2]|0;j=+(l>>>0);i=((c[d>>2]|0)>>>0)/72|0;k=+(i>>>0);c[d+24>>2]=0;c[d+20>>2]=i<<8;c[d+16>>2]=l<<8;l=d+3292|0;i=c[l>>2]|0;if(i|0){h=i+28|0;e=c[h>>2]|0;if((c[i>>2]|0)>0){f=0;do{Oe(c[e+(f<<2)>>2]|0);f=f+1|0;e=c[h>>2]|0}while((f|0)<(c[i>>2]|0))}Oe(e);Oe(c[i+24>>2]|0);Oe(i);c[l>>2]=0}if(((+q(+k)!=j?+q(+(k+.5))!=j:0)?(m=vc(k,j,2)|0,c[l>>2]=m,m|0):0)?(g[m+8>>3]=0.0,(c[m>>2]|0)>0):0){e=m+28|0;f=0;do{h=c[(c[e>>2]|0)+(f<<2)>>2]|0;i=h+32|0;do{b[h>>1]=0;h=h+2|0}while((h|0)<(i|0));f=f+1|0}while((f|0)<(c[m>>2]|0))}e=0;do{a[d+172+(e*60|0)>>0]=e;a[d+172+(e*60|0)+1>>0]=e&1;a[d+172+(e*60|0)+28>>0]=0;c[d+172+(e*60|0)+16>>2]=57408;c[d+172+(e*60|0)+20>>2]=0;c[d+172+(e*60|0)+8>>2]=0;c[d+172+(e*60|0)+12>>2]=0;a[d+172+(e*60|0)+35>>0]=3;c[d+172+(e*60|0)+48>>2]=0;a[d+172+(e*60|0)+44>>0]=0;b[d+172+(e*60|0)+42>>1]=0;a[d+172+(e*60|0)+40>>0]=0;m=d+172+(e*60|0)+30|0;c[d+172+(e*60|0)+36>>2]=0;c[d+172+(e*60|0)+24>>2]=0;b[m>>1]=0;b[m+2>>1]=0;a[m+4>>0]=0;c[d+172+(e*60|0)+52>>2]=127;c[d+172+(e*60|0)+4>>2]=953724;e=e+1|0}while((e|0)!=18);e=d+1252|0;f=d+1304|0;h=d+136|0;i=h+36|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(i|0));c[d+176>>2]=e;c[d+236>>2]=f;m=d+228|0;c[m>>2]=c[m>>2]|255;m=d+288|0;c[m>>2]=c[m>>2]|255;c[d+296>>2]=e;c[d+356>>2]=f;m=d+348|0;c[m>>2]=c[m>>2]|255;m=d+408|0;c[m>>2]=c[m>>2]|255;c[d+416>>2]=e;c[d+476>>2]=f;m=d+468|0;c[m>>2]=c[m>>2]|255;m=d+528|0;c[m>>2]=c[m>>2]|255;c[d+536>>2]=e;c[d+596>>2]=f;m=d+588|0;c[m>>2]=c[m>>2]|255;m=d+648|0;c[m>>2]=c[m>>2]|255;c[d+656>>2]=e;c[d+716>>2]=f;m=d+708|0;c[m>>2]=c[m>>2]|255;m=d+768|0;c[m>>2]=c[m>>2]|255;c[d+776>>2]=e;c[d+836>>2]=f;m=d+828|0;c[m>>2]=c[m>>2]|255;m=d+888|0;c[m>>2]=c[m>>2]|255;c[d+896>>2]=e;c[d+956>>2]=f;m=d+948|0;c[m>>2]=c[m>>2]|255;m=d+1008|0;c[m>>2]=c[m>>2]|255;c[d+1016>>2]=e;c[d+1076>>2]=f;m=d+1068|0;c[m>>2]=c[m>>2]|255;m=d+1128|0;c[m>>2]=c[m>>2]|255;c[d+1136>>2]=e;c[d+1196>>2]=f;e=d+1188|0;c[e>>2]=c[e>>2]|255;e=d+1248|0;c[e>>2]=c[e>>2]|255;e=0;do{zc(d,e,0);e=e+1|0}while((e|0)!=64);c[d+112>>2]=512;h=d+3236|0;i=h+15|0;do{a[h>>0]=3;h=h+1|0}while((h|0)<(i|0));h=d+3256|0;i=h+30|0;do{b[h>>1]=0;h=h+2|0}while((h|0)<(i|0));return}function zc(e,f,g){e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;i=f&63;i=i>>>0>56|((i+-25|0)>>>0<7|(i+-41|0)>>>0<7)?i+-9|0:i;a[e+28+i>>0]=g;do switch(i|0){case 0:{f=g&255;c[e+1292>>2]=f>>>7;c[e+1296>>2]=f>>>6&1;c[e+1260>>2]=f>>>5&1;c[e+1284>>2]=f>>>4&1;c[e+1264>>2]=f&15;f=e+228|0;if(!(c[e+136>>2]|0))c[f>>2]=c[f>>2]|12;f=e+348|0;if(!(c[e+140>>2]|0))c[f>>2]=c[f>>2]|12;f=e+468|0;if(!(c[e+144>>2]|0))c[f>>2]=c[f>>2]|12;f=e+588|0;if(!(c[e+148>>2]|0))c[f>>2]=c[f>>2]|12;f=e+708|0;if(!(c[e+152>>2]|0))c[f>>2]=c[f>>2]|12;f=e+828|0;if(!(c[e+156>>2]|0))c[f>>2]=c[f>>2]|12;f=e+948|0;if(!(c[e+160>>2]|0))c[f>>2]=c[f>>2]|12;f=e+1068|0;if(!(c[e+164>>2]|0))c[f>>2]=c[f>>2]|12;f=e+1188|0;if(c[e+168>>2]|0)return;c[f>>2]=c[f>>2]|12;return}case 1:{f=g&255;c[e+1344>>2]=f>>>7;c[e+1348>>2]=f>>>6&1;c[e+1312>>2]=f>>>5&1;c[e+1336>>2]=f>>>4&1;c[e+1316>>2]=f&15;f=e+288|0;if(!(c[e+136>>2]|0))c[f>>2]=c[f>>2]|12;f=e+408|0;if(!(c[e+140>>2]|0))c[f>>2]=c[f>>2]|12;f=e+528|0;if(!(c[e+144>>2]|0))c[f>>2]=c[f>>2]|12;f=e+648|0;if(!(c[e+148>>2]|0))c[f>>2]=c[f>>2]|12;f=e+768|0;if(!(c[e+152>>2]|0))c[f>>2]=c[f>>2]|12;f=e+888|0;if(!(c[e+156>>2]|0))c[f>>2]=c[f>>2]|12;f=e+1008|0;if(!(c[e+160>>2]|0))c[f>>2]=c[f>>2]|12;f=e+1128|0;if(!(c[e+164>>2]|0))c[f>>2]=c[f>>2]|12;f=e+1248|0;if(c[e+168>>2]|0)return;c[f>>2]=c[f>>2]|12;return}case 2:{f=g&255;c[e+1288>>2]=f>>>6;c[e+1252>>2]=f&63;f=e+228|0;if(!(c[e+136>>2]|0))c[f>>2]=c[f>>2]|2;f=e+348|0;if(!(c[e+140>>2]|0))c[f>>2]=c[f>>2]|2;f=e+468|0;if(!(c[e+144>>2]|0))c[f>>2]=c[f>>2]|2;f=e+588|0;if(!(c[e+148>>2]|0))c[f>>2]=c[f>>2]|2;f=e+708|0;if(!(c[e+152>>2]|0))c[f>>2]=c[f>>2]|2;f=e+828|0;if(!(c[e+156>>2]|0))c[f>>2]=c[f>>2]|2;f=e+948|0;if(!(c[e+160>>2]|0))c[f>>2]=c[f>>2]|2;f=e+1068|0;if(!(c[e+164>>2]|0))c[f>>2]=c[f>>2]|2;f=e+1188|0;if(c[e+168>>2]|0)return;c[f>>2]=c[f>>2]|2;return}case 3:{j=g&255;c[e+1340>>2]=j>>>6;c[e+1352>>2]=j>>>4&1;c[e+1300>>2]=j>>>3&1;c[e+1256>>2]=j&7;if(!(c[e+136>>2]|0)){j=e+228|0;c[j>>2]=c[j>>2]|1;j=e+288|0;c[j>>2]=c[j>>2]|3}if(!(c[e+140>>2]|0)){j=e+348|0;c[j>>2]=c[j>>2]|1;j=e+408|0;c[j>>2]=c[j>>2]|3}if(!(c[e+144>>2]|0)){j=e+468|0;c[j>>2]=c[j>>2]|1;j=e+528|0;c[j>>2]=c[j>>2]|3}if(!(c[e+148>>2]|0)){j=e+588|0;c[j>>2]=c[j>>2]|1;j=e+648|0;c[j>>2]=c[j>>2]|3}if(!(c[e+152>>2]|0)){j=e+708|0;c[j>>2]=c[j>>2]|1;j=e+768|0;c[j>>2]=c[j>>2]|3}if(!(c[e+156>>2]|0)){j=e+828|0;c[j>>2]=c[j>>2]|1;j=e+888|0;c[j>>2]=c[j>>2]|3}if(!(c[e+160>>2]|0)){j=e+948|0;c[j>>2]=c[j>>2]|1;j=e+1008|0;c[j>>2]=c[j>>2]|3}if(!(c[e+164>>2]|0)){j=e+1068|0;c[j>>2]=c[j>>2]|1;j=e+1128|0;c[j>>2]=c[j>>2]|3}if(c[e+168>>2]|0)return;j=e+1188|0;c[j>>2]=c[j>>2]|1;e=e+1248|0;c[e>>2]=c[e>>2]|3;return}case 4:{f=g&255;c[e+1268>>2]=f>>>4;c[e+1272>>2]=f&15;f=e+228|0;if(!(c[e+136>>2]|0))c[f>>2]=c[f>>2]|8;f=e+348|0;if(!(c[e+140>>2]|0))c[f>>2]=c[f>>2]|8;f=e+468|0;if(!(c[e+144>>2]|0))c[f>>2]=c[f>>2]|8;f=e+588|0;if(!(c[e+148>>2]|0))c[f>>2]=c[f>>2]|8;f=e+708|0;if(!(c[e+152>>2]|0))c[f>>2]=c[f>>2]|8;f=e+828|0;if(!(c[e+156>>2]|0))c[f>>2]=c[f>>2]|8;f=e+948|0;if(!(c[e+160>>2]|0))c[f>>2]=c[f>>2]|8;f=e+1068|0;if(!(c[e+164>>2]|0))c[f>>2]=c[f>>2]|8;f=e+1188|0;if(c[e+168>>2]|0)return;c[f>>2]=c[f>>2]|8;return}case 5:{f=g&255;c[e+1320>>2]=f>>>4;c[e+1324>>2]=f&15;f=e+288|0;if(!(c[e+136>>2]|0))c[f>>2]=c[f>>2]|8;f=e+408|0;if(!(c[e+140>>2]|0))c[f>>2]=c[f>>2]|8;f=e+528|0;if(!(c[e+144>>2]|0))c[f>>2]=c[f>>2]|8;f=e+648|0;if(!(c[e+148>>2]|0))c[f>>2]=c[f>>2]|8;f=e+768|0;if(!(c[e+152>>2]|0))c[f>>2]=c[f>>2]|8;f=e+888|0;if(!(c[e+156>>2]|0))c[f>>2]=c[f>>2]|8;f=e+1008|0;if(!(c[e+160>>2]|0))c[f>>2]=c[f>>2]|8;f=e+1128|0;if(!(c[e+164>>2]|0))c[f>>2]=c[f>>2]|8;f=e+1248|0;if(c[e+168>>2]|0)return;c[f>>2]=c[f>>2]|8;return}case 6:{f=g&255;c[e+1276>>2]=f>>>4;c[e+1280>>2]=f&15;f=e+228|0;if(!(c[e+136>>2]|0))c[f>>2]=c[f>>2]|8;f=e+348|0;if(!(c[e+140>>2]|0))c[f>>2]=c[f>>2]|8;f=e+468|0;if(!(c[e+144>>2]|0))c[f>>2]=c[f>>2]|8;f=e+588|0;if(!(c[e+148>>2]|0))c[f>>2]=c[f>>2]|8;f=e+708|0;if(!(c[e+152>>2]|0))c[f>>2]=c[f>>2]|8;f=e+828|0;if(!(c[e+156>>2]|0))c[f>>2]=c[f>>2]|8;f=e+948|0;if(!(c[e+160>>2]|0))c[f>>2]=c[f>>2]|8;f=e+1068|0;if(!(c[e+164>>2]|0))c[f>>2]=c[f>>2]|8;f=e+1188|0;if(c[e+168>>2]|0)return;c[f>>2]=c[f>>2]|8;return}case 7:{f=g&255;c[e+1328>>2]=f>>>4;c[e+1332>>2]=f&15;f=e+288|0;if(!(c[e+136>>2]|0))c[f>>2]=c[f>>2]|8;f=e+408|0;if(!(c[e+140>>2]|0))c[f>>2]=c[f>>2]|8;f=e+528|0;if(!(c[e+144>>2]|0))c[f>>2]=c[f>>2]|8;f=e+648|0;if(!(c[e+148>>2]|0))c[f>>2]=c[f>>2]|8;f=e+768|0;if(!(c[e+152>>2]|0))c[f>>2]=c[f>>2]|8;f=e+888|0;if(!(c[e+156>>2]|0))c[f>>2]=c[f>>2]|8;f=e+1008|0;if(!(c[e+160>>2]|0))c[f>>2]=c[f>>2]|8;f=e+1128|0;if(!(c[e+164>>2]|0))c[f>>2]=c[f>>2]|8;f=e+1248|0;if(c[e+168>>2]|0)return;c[f>>2]=c[f>>2]|8;return}case 14:{if((a[e+8>>0]|0)==1)return;Ac(e);Bc(e);return}case 15:{a[e+92>>0]=g;return}case 24:case 23:case 22:case 21:case 20:case 19:case 18:case 17:case 16:{h=(a[i+16+(e+28)>>0]&1)<<8|g&255;j=(i<<1)+-32|0;g=j|1;i=h&65535;b[e+172+(g*60|0)+32>>1]=i;f=e+172+(g*60|0)+30|0;b[f>>1]=h|b[f>>1]&3584;b[e+172+(j*60|0)+32>>1]=i;i=e+172+(j*60|0)+30|0;b[i>>1]=h|b[i>>1]&3584;g=e+172+(g*60|0)+56|0;c[g>>2]=c[g>>2]|14;e=e+172+(j*60|0)+56|0;c[e>>2]=c[e>>2]|14;return}case 40:case 39:case 38:case 37:case 36:case 35:case 34:case 33:case 32:{f=g&255;o=f<<8&256|d[i+-16+(e+28)>>0];i=(i<<1)+-64|0;l=i|1;j=o&65535;b[e+172+(l*60|0)+32>>1]=j;b[e+172+(i*60|0)+32>>1]=j;j=e+172+(l*60|0)+56|0;k=c[j>>2]|14;g=e+172+(i*60|0)+56|0;h=c[g>>2]|14;m=f>>>1;n=m&7;a[e+172+(l*60|0)+34>>0]=n;m=(o|m<<9&3584)&65535;b[e+172+(l*60|0)+30>>1]=m;a[e+172+(i*60|0)+34>>0]=n;b[e+172+(i*60|0)+30>>1]=m;c[g>>2]=h;f=f>>>5&1;a[e+172+(l*60|0)+40>>0]=f;c[j>>2]=k;if(a[e+172+(i*60|0)+1>>0]&1){a[e+172+(i*60|0)+40>>0]=f;c[g>>2]=h}Bc(e);Ac(e);return}case 56:case 55:case 54:case 53:case 52:case 51:case 50:case 49:case 48:{a:do if(i>>>0>53&(a[e+42>>0]&32)!=0)switch(i|0){case 55:{c[e+1048>>2]=(g&255)>>>4<<2;f=2;h=14;j=38;break a}case 56:{c[e+1168>>2]=(g&255)>>>4<<2;f=2;h=16;j=38;break a}default:break a}else{f=i+-48|0;j=(g&255)>>>4;c[e+136+(f<<2)>>2]=j;j=j<<1;f=f<<1;c[e+172+(f*60|0)+4>>2]=e+1252+(j*52|0);h=f|1;c[e+172+(h*60|0)+4>>2]=e+1252+((j|1)*52|0);f=e+172+(f*60|0)+56|0;c[f>>2]=c[f>>2]|255;f=255;j=38}while(0);if((j|0)==38){o=e+172+(h*60|0)+56|0;c[o>>2]=c[o>>2]|f}o=(i<<1)+-96|1;c[e+172+(o*60|0)+36>>2]=g<<2&60;o=e+172+(o*60|0)+56|0;c[o>>2]=c[o>>2]|2;return}default:return}while(0)}function Ac(b){b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0;g=(d[b+42>>0]|0)>>>5&1;h=g&255;f=c[b+96>>2]|0;e=b+160|0;if(!(c[e>>2]&16)){if(h<<24>>24){c[e>>2]=16;a[b+927>>0]=3;c[b+944>>2]=127;a[b+987>>0]=3;c[b+1004>>2]=127;c[b+896>>2]=b+2916;e=b+948|0;c[e>>2]=c[e>>2]|255;c[b+956>>2]=b+2968;e=b+1008|0;c[e>>2]=c[e>>2]|255}}else if(!(f>>>13&1|g)){a[b+927>>0]=3;c[b+944>>2]=127;a[b+987>>0]=3;c[b+1004>>2]=127;i=(d[b+82>>0]|0)>>>4;c[e>>2]=i;e=i<<1;c[b+896>>2]=b+1252+(e*52|0);c[b+956>>2]=b+1252+((e|1)*52|0);e=b+948|0;c[e>>2]=c[e>>2]|255;e=b+1008|0;c[e>>2]=c[e>>2]|255}e=b+164|0;if(!(c[e>>2]&16)){if(h<<24>>24){c[e>>2]=17;a[b+1013>>0]=3;a[b+1040>>0]=1;a[b+1047>>0]=3;c[b+1064>>2]=127;a[b+1073>>0]=3;a[b+1107>>0]=3;c[b+1124>>2]=127;c[b+1016>>2]=b+3020;i=b+1068|0;e=c[i>>2]|255;c[b+1076>>2]=b+3072;j=b+1128|0;c[j>>2]=c[j>>2]|255;c[b+1048>>2]=(d[b+83>>0]|0)>>>4<<2;c[i>>2]=e}}else if(!(((f&16384|0)==0?0:f>>>15&1)|g)){a[b+1013>>0]=0;a[b+1040>>0]=0;a[b+1047>>0]=3;c[b+1064>>2]=127;a[b+1073>>0]=1;a[b+1107>>0]=3;c[b+1124>>2]=127;j=(d[b+83>>0]|0)>>>4;c[e>>2]=j;j=j<<1;c[b+1016>>2]=b+1252+(j*52|0);c[b+1076>>2]=b+1252+((j|1)*52|0);j=b+1068|0;c[j>>2]=c[j>>2]|255;j=b+1128|0;c[j>>2]=c[j>>2]|255}e=b+168|0;if(!(c[e>>2]&16)){if(!(h<<24>>24)){j=b+100|0;a[j>>0]=h;return}c[e>>2]=18;a[b+1133>>0]=3;a[b+1167>>0]=3;c[b+1184>>2]=127;a[b+1193>>0]=3;a[b+1220>>0]=1;a[b+1227>>0]=3;c[b+1244>>2]=127;c[b+1136>>2]=b+3124;j=b+1188|0;i=c[j>>2]|255;c[b+1196>>2]=b+3176;g=b+1248|0;c[g>>2]=c[g>>2]|255;c[b+1168>>2]=(d[b+84>>0]|0)>>>4<<2;c[j>>2]=i;j=b+100|0;a[j>>0]=h;return}else{if(((f&131072|0)==0?0:f>>>16&1)|g|0){j=b+100|0;a[j>>0]=h;return}a[b+1133>>0]=0;a[b+1167>>0]=3;c[b+1184>>2]=127;a[b+1193>>0]=1;a[b+1220>>0]=0;a[b+1227>>0]=3;c[b+1244>>2]=127;j=(d[b+84>>0]|0)>>>4;c[e>>2]=j;j=j<<1;c[b+1136>>2]=b+1252+(j*52|0);c[b+1196>>2]=b+1252+((j|1)*52|0);j=b+1188|0;c[j>>2]=c[j>>2]|255;j=b+1248|0;c[j>>2]=c[j>>2]|255;j=b+100|0;a[j>>0]=h;return}}function Bc(b){b=b|0;var e=0,f=0,g=0,h=0,i=0;e=d[b+42>>0]|0;f=((a[b+68>>0]&16)==0?0:196608)|(((a[b+67>>0]&16)==0?0:49152)|(((a[b+66>>0]&16)==0?0:12288)|(((a[b+65>>0]&16)==0?0:3072)|(((a[b+64>>0]&16)==0?0:768)|(((a[b+63>>0]&16)==0?0:192)|(((a[b+62>>0]&16)==0?0:48)|(((a[b+61>>0]&16)==0?0:12)|((a[b+60>>0]&16)==0?0:3))))))));if(e&32){i=e<<14;f=e<<12&32768|i&16384|i&65536|e<<16&131072|((e&16|0)==0?f:f|12288)}h=b+96|0;i=c[h>>2]^f;if(!i){c[h>>2]=f;return}g=0;do{e=1<<g;do if(e&i|0){if(e&f|0){a[b+172+(g*60|0)+35>>0]=4;e=b+172+(g*60|0)+56|0;c[e>>2]=c[e>>2]|8;break}e=b+172+(g*60|0)+56|0;if(a[b+172+(g*60|0)+1>>0]&1){a[b+172+(g*60|0)+35>>0]=3;c[e>>2]=c[e>>2]|8}}while(0);g=g+1|0}while((g|0)!=18);c[h>>2]=f;return}function Cc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;b=(b|0)%3|0;d=a+1252|0;e=270768+(b*1976|0)|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+1304|0;e=270768+(b*1976|0)+52|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+1356|0;e=270768+(b*1976|0)+104|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+1408|0;e=270768+(b*1976|0)+156|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+1460|0;e=270768+(b*1976|0)+208|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+1512|0;e=270768+(b*1976|0)+260|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+1564|0;e=270768+(b*1976|0)+312|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+1616|0;e=270768+(b*1976|0)+364|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+1668|0;e=270768+(b*1976|0)+416|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+1720|0;e=270768+(b*1976|0)+468|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+1772|0;e=270768+(b*1976|0)+520|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+1824|0;e=270768+(b*1976|0)+572|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+1876|0;e=270768+(b*1976|0)+624|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+1928|0;e=270768+(b*1976|0)+676|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+1980|0;e=270768+(b*1976|0)+728|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+2032|0;e=270768+(b*1976|0)+780|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+2084|0;e=270768+(b*1976|0)+832|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+2136|0;e=270768+(b*1976|0)+884|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+2188|0;e=270768+(b*1976|0)+936|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+2240|0;e=270768+(b*1976|0)+988|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+2292|0;e=270768+(b*1976|0)+1040|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+2344|0;e=270768+(b*1976|0)+1092|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+2396|0;e=270768+(b*1976|0)+1144|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+2448|0;e=270768+(b*1976|0)+1196|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+2500|0;e=270768+(b*1976|0)+1248|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+2552|0;e=270768+(b*1976|0)+1300|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+2604|0;e=270768+(b*1976|0)+1352|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+2656|0;e=270768+(b*1976|0)+1404|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+2708|0;e=270768+(b*1976|0)+1456|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+2760|0;e=270768+(b*1976|0)+1508|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+2812|0;e=270768+(b*1976|0)+1560|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+2864|0;e=270768+(b*1976|0)+1612|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+2916|0;e=270768+(b*1976|0)+1664|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+2968|0;e=270768+(b*1976|0)+1716|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+3020|0;e=270768+(b*1976|0)+1768|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+3072|0;e=270768+(b*1976|0)+1820|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+3124|0;e=270768+(b*1976|0)+1872|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));d=a+3176|0;e=270768+(b*1976|0)+1924|0;f=d+52|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));return}function Dc(a){a=a|0;var b=0,d=0,e=0,f=0;f=c[a+3292>>2]|0;if(!f){Oe(a);return}e=f+28|0;b=c[e>>2]|0;if((c[f>>2]|0)>0){d=0;do{Oe(c[b+(d<<2)>>2]|0);d=d+1|0;b=c[e>>2]|0}while((d|0)<(c[f>>2]|0))}Oe(b);Oe(c[f+24>>2]|0);Oe(f);Oe(a);return}function Ec(a,b){a=a|0;b=b|0;return}function Fc(a,b,d){a=a|0;b=b|0;d=d|0;if(!(b&1)){c[a+12>>2]=d&255;return}else{zc(a,c[a+12>>2]|0,d);return}}function Gc(a){a=a|0;var d=0,f=0,h=0,i=0,j=0.0,k=0,l=0,m=0,n=0,o=0,p=0,r=0,s=0,t=0,u=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;D=a+20|0;d=c[D>>2]|0;E=a+24|0;h=c[E>>2]|0;if(h>>>0<d>>>0){C=a+16|0;z=a+3256|0;i=a+3258|0;p=a+3260|0;r=a+3262|0;s=a+3264|0;t=a+3266|0;u=a+3268|0;w=a+3270|0;x=a+3272|0;y=a+3274|0;k=a+3276|0;l=a+3278|0;m=a+3280|0;n=a+3282|0;o=a+3284|0;B=a+3292|0;A=a+3286|0;do{c[E>>2]=(c[C>>2]|0)+h;Hc(a);h=(e[i>>1]|0)+(e[z>>1]|0)+(e[p>>1]|0)+(e[r>>1]|0)+(e[s>>1]|0)+(e[t>>1]|0)+(e[u>>1]|0)+(e[w>>1]|0)+(e[x>>1]|0)+(e[y>>1]|0)+(e[k>>1]|0)+(e[l>>1]|0)+(e[m>>1]|0)+(e[n>>1]|0)+(e[o>>1]|0)&65535;f=c[B>>2]|0;if(!f)d=A;else{d=c[c[f+28>>2]>>2]|0;G=d+2|0;b[d>>1]=b[G>>1]|0;F=d+4|0;b[G>>1]=b[F>>1]|0;G=d+6|0;b[F>>1]=b[G>>1]|0;F=d+8|0;b[G>>1]=b[F>>1]|0;G=d+10|0;b[F>>1]=b[G>>1]|0;F=d+12|0;b[G>>1]=b[F>>1]|0;G=d+14|0;b[F>>1]=b[G>>1]|0;F=d+16|0;b[G>>1]=b[F>>1]|0;G=d+18|0;b[F>>1]=b[G>>1]|0;F=d+20|0;b[G>>1]=b[F>>1]|0;G=d+22|0;b[F>>1]=b[G>>1]|0;F=d+24|0;b[G>>1]=b[F>>1]|0;G=d+26|0;b[F>>1]=b[G>>1]|0;F=d+28|0;b[G>>1]=b[F>>1]|0;d=d+30|0;b[F>>1]=b[d>>1]|0}b[d>>1]=h;d=c[D>>2]|0;h=c[E>>2]|0}while(h>>>0<d>>>0)}else f=c[a+3292>>2]|0;c[E>>2]=h-d;if(!f){G=b[a+3286>>1]|0;return G|0}i=c[c[f+28>>2]>>2]|0;d=f+8|0;j=+g[f+16>>3]+ +g[d>>3];j=j-+q(+j);g[d>>3]=j;d=c[f+24>>2]|0;f=0;h=0;do{G=~~((+(f+-7|0)-j)*256.0);G=(G<<16>>16<0?0-(G&65535)&65535:G)<<16>>16;h=(v(b[d+(((G|0)<2047?G:2047)<<1)>>1]|0,b[i+(f<<1)>>1]|0)|0)+h|0;f=f+1|0}while((f|0)!=16);G=h>>>12&65535;b[a+3286>>1]=G;return G|0}\nfunction Hc(f){f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;j=a[f+92>>0]|0;F=j&255;i=(F&8|0)!=0;g=c[f+112>>2]|0;h=f+108|0;if(!(F&2)){k=(c[h>>2]|0)+(i?g<<10:g)&4194303;c[h>>2]=k;F=f+116|0;g=(c[F>>2]|0)+(i?64:1)|0;c[F>>2]=g;g=(g>>6>>>0)%210|0}else{c[h>>2]=0;c[f+116>>2]=0;k=0;g=0}A=a[59920+g>>0]|0;a[f+124>>0]=A;i=f+128|0;g=c[i>>2]|0;h=g^134230048;if(g&1){c[i>>2]=h;g=h}C=g>>>1;c[i>>2]=C;C=C&1;a[f+132>>0]=C;D=f+1036|0;t=c[D>>2]|0;F=f+1216|0;z=c[F>>2]|0;E=z>>>5&1;E=(E^t>>>3&1|(t>>>2^t>>>7)&1|z>>>3&1^E)&255;a[f+133>>0]=E;z=f+104|0;t=(c[z>>2]|0)+1|0;c[z>>2]=t;z=(j&1)==0;y=t&65535;x=t&65532;w=(j&4)==0;u=t>>>1&6;t=u|t&1;q=k>>>19;r=0;do{g=a[f+172+(r*60|0)+1>>0]|0;s=r;r=r+1|0;o=g<<24>>24==1?f+172+((s+-1|0)*60|0)|0:g<<24>>24==0?f+172+(r*60|0)|0:0;p=f+172+(s*60|0)+56|0;i=c[p>>2]|0;a:do if(!i)i=0;else{if(i&1|0)c[f+172+(s*60|0)+16>>2]=c[65860+(c[(c[f+172+(s*60|0)+4>>2]|0)+48>>2]<<2)>>2];if(i&2|0){if(!(g&1)){h=c[f+172+(s*60|0)+4>>2]|0;g=h}else{g=f+172+(s*60|0)+36|0;h=c[f+172+(s*60|0)+4>>2]|0}b[f+172+(s*60|0)+42>>1]=c[137520+((e[f+172+(s*60|0)+30>>1]|0)>>>5<<10)+(c[g>>2]<<4)+(c[h+36>>2]<<2)>>2]}if(i&4|0)a[f+172+(s*60|0)+44>>0]=c[268592+((e[f+172+(s*60|0)+30>>1]|0)>>>8<<3)+(c[(c[f+172+(s*60|0)+4>>2]|0)+32>>2]<<2)>>2];do if(i&12|0){h=a[f+172+(s*60|0)+35>>0]|0;switch(h<<24>>24){case 0:{g=(c[f+172+(s*60|0)+4>>2]|0)+16|0;B=26;break}case 1:{g=(c[f+172+(s*60|0)+4>>2]|0)+20|0;B=26;break}case 2:{g=c[f+172+(s*60|0)+4>>2]|0;if(!(c[g+8>>2]|0)){g=g+28|0;B=26}else B=27;break}case 3:{if(!(a[f+172+(s*60|0)+40>>0]|0)){g=c[f+172+(s*60|0)+4>>2]|0;if(!(c[g+8>>2]|0)){g=7;B=28}else{g=g+28|0;B=26}}else{g=5;B=28}break}case 4:{g=12;B=28;break}default:B=27}if((B|0)==26){g=c[g>>2]|0;if(!g)B=27;else B=28}if((B|0)==27){B=0;c[f+172+(s*60|0)+48>>2]=0;a[f+172+(s*60|0)+45>>0]=0;a[f+172+(s*60|0)+46>>0]=0;break a}else if((B|0)==28){B=0;l=a[f+172+(s*60|0)+44>>0]|0;n=((l&255)>>>2)+g|0;n=(n|0)<15?n:15;m=n&255;a[f+172+(s*60|0)+45>>0]=m;a[f+172+(s*60|0)+46>>0]=l&3;c[f+172+(s*60|0)+48>>2]=(h<<24>>24==0?(m+-1&255)<11:(m&255)<13)?13-(n&255)|0:0;break}}while(0);c[p>>2]=0;i=0}while(0);m=c[f+172+(s*60|0)+48>>2]|0;k=(1<<m)+-1|0;n=f+172+(s*60|0)+35|0;l=a[n>>0]|0;b:do if(l<<24>>24){g=a[f+172+(s*60|0)+45>>0]|0;if((k&y|0)==0&g<<24>>24!=0){k=f+172+(s*60|0)+52|0;j=c[k>>2]|0;switch(g<<24>>24){case 15:{h=2;break}case 13:{h=a[60144+(d[f+172+(s*60|0)+46>>0]<<3)+t>>0]|0;break}case 14:{h=(d[60144+(d[f+172+(s*60|0)+46>>0]<<3)+u>>0]|0)+1&255;break}default:h=a[(y>>>m&7)+(60144+(d[f+172+(s*60|0)+46>>0]<<3))>>0]|0}if((j+(h&255)|0)>>>0>127)g=127;else{switch(g<<24>>24){case 0:break;case 13:{g=a[60144+(d[f+172+(s*60|0)+46>>0]<<3)+t>>0]|0;break}case 14:{g=(d[60144+(d[f+172+(s*60|0)+46>>0]<<3)+u>>0]|0)+1&255;break}case 15:{g=2;break}default:g=a[(y>>>m&7)+(60144+(d[f+172+(s*60|0)+46>>0]<<3))>>0]|0}g=j+(g&255)|0}c[k>>2]=g}switch(l<<24>>24){case 4:break;case 1:{if(((c[f+172+(s*60|0)+52>>2]|0)>>>3|0)!=(c[(c[f+172+(s*60|0)+4>>2]|0)+24>>2]|0))break b;a[n>>0]=2;c[p>>2]=i|8;break b}default:break b}g=f+172+(s*60|0)+52|0;if((c[g>>2]|0)>>>0>123){m=(((d[f+172+(s*60|0)+44>>0]|0)>>>2)+(c[(c[f+172+(s*60|0)+4>>2]|0)+16>>2]|0)|0)>>>0>14;a[n>>0]=m&1;c[g>>2]=m?0:127;if(!(a[f+172+(s*60|0)+28>>0]|0))c[f+172+(s*60|0)+20>>2]=0;c[p>>2]=i|8;if(o|0?(a[o+28>>0]|0)==0:0)c[o+20>>2]=0}}else{j=f+172+(s*60|0)+52|0;h=c[j>>2]|0;if(h|0){g=a[f+172+(s*60|0)+45>>0]|0;if(!((x&k|0)==0&g<<24>>24!=0))break;switch(g<<24>>24){case 15:break b;case 12:{g=4;B=38;break}case 13:{g=3;B=38;break}case 14:{g=2;B=38;break}default:{if(!(a[(y>>>m&7)+(60144+(d[f+172+(s*60|0)+46>>0]<<3))>>0]|0))break b;g=h>>>4}}if((B|0)==38){B=0;g=g-(d[60144+(d[f+172+(s*60|0)+46>>0]<<3)+u>>0]|0)|0;if(!((g&255)<<24>>24))break;else g=h>>>(g&255)}o=h+-1-g|0;c[j>>2]=o;if(o|0)break}a[n>>0]=1;c[p>>2]=i|8}while(0);if(!z)c[f+172+(s*60|0)+52>>2]=0;g=c[f+172+(s*60|0)+4>>2]|0;if(!(c[g+44>>2]|0))i=0;else i=a[60176+(((e[f+172+(s*60|0)+32>>1]|0)>>>6&7)<<3)+q>>0]|0;j=f+172+(s*60|0)+20|0;if(w)h=c[j>>2]|0;else{c[j>>2]=0;h=0}p=v((b[f+172+(s*60|0)+32>>1]<<1&1022)+(i<<24>>24)|0,c[60816+(c[g+12>>2]<<2)>>2]|0)|0;p=(p<<d[f+172+(s*60|0)+34>>0]>>>2)+h&524287;c[j>>2]=p;c[f+172+(s*60|0)+24>>2]=p>>>9}while((r|0)!=18);n=A&255;m=c[f+3252>>2]|0;if(!(m&1)){h=c[f+176>>2]|0;g=c[h+4>>2]|0;if(!g){l=f+180|0;i=c[l>>2]|0;j=f+184|0;k=0}else{k=f+184|0;l=f+180|0;B=c[l>>2]|0;i=B;j=k;k=B+(c[k>>2]|0)>>8-g<<16>>16}h=c[h+40>>2]|0;c[j>>2]=i;g=c[f+224>>2]|0;if(g>>>0>123)j=0;else{j=g+((h|0)==0?0:n)+(e[f+214>>1]|0)|0;j=(j>>>0>127?2032:j<<4)+(e[(c[f+188>>2]|0)+(((c[f+196>>2]|0)+k&1023)<<1)>>1]|0)|0;j=((e[60240+((j&255^255)<<1)>>1]<<16)+67108864>>16>>(j>>>8&127)^j<<16>>31)<<17>>17}c[l>>2]=j;g=c[(c[f+236>>2]|0)+40>>2]|0;i=f+240|0;c[f+244>>2]=c[i>>2];h=c[f+284>>2]|0;if(h>>>0>123)g=0;else{g=h+((g|0)==0?0:n)+(e[f+274>>1]|0)|0;g=(g>>>0>127?2032:g<<4)+(e[(c[f+248>>2]|0)+(((c[f+256>>2]|0)+(j<<1)&1023)<<1)>>1]|0)|0;g=((e[60240+((g&255^255)<<1)>>1]<<16)+67108864>>16>>(g>>>8&127)^g<<16>>31)<<17}B=g>>16;c[i>>2]=B;b[f+3256>>1]=(0-B|0)>>>1}if(!(m&2)){h=c[f+296>>2]|0;g=c[h+4>>2]|0;if(!g){l=f+300|0;i=c[l>>2]|0;j=f+304|0;k=0}else{k=f+304|0;l=f+300|0;B=c[l>>2]|0;i=B;j=k;k=B+(c[k>>2]|0)>>8-g<<16>>16}h=c[h+40>>2]|0;c[j>>2]=i;g=c[f+344>>2]|0;if(g>>>0>123)j=0;else{j=g+((h|0)==0?0:n)+(e[f+334>>1]|0)|0;j=(j>>>0>127?2032:j<<4)+(e[(c[f+308>>2]|0)+(((c[f+316>>2]|0)+k&1023)<<1)>>1]|0)|0;j=((e[60240+((j&255^255)<<1)>>1]<<16)+67108864>>16>>(j>>>8&127)^j<<16>>31)<<17>>17}c[l>>2]=j;g=c[(c[f+356>>2]|0)+40>>2]|0;i=f+360|0;c[f+364>>2]=c[i>>2];h=c[f+404>>2]|0;if(h>>>0>123)g=0;else{g=h+((g|0)==0?0:n)+(e[f+394>>1]|0)|0;g=(g>>>0>127?2032:g<<4)+(e[(c[f+368>>2]|0)+(((c[f+376>>2]|0)+(j<<1)&1023)<<1)>>1]|0)|0;g=((e[60240+((g&255^255)<<1)>>1]<<16)+67108864>>16>>(g>>>8&127)^g<<16>>31)<<17}B=g>>16;c[i>>2]=B;b[f+3258>>1]=(0-B|0)>>>1}if(!(m&4)){h=c[f+416>>2]|0;g=c[h+4>>2]|0;if(!g){l=f+420|0;i=c[l>>2]|0;j=f+424|0;k=0}else{k=f+424|0;l=f+420|0;B=c[l>>2]|0;i=B;j=k;k=B+(c[k>>2]|0)>>8-g<<16>>16}h=c[h+40>>2]|0;c[j>>2]=i;g=c[f+464>>2]|0;if(g>>>0>123)j=0;else{j=g+((h|0)==0?0:n)+(e[f+454>>1]|0)|0;j=(j>>>0>127?2032:j<<4)+(e[(c[f+428>>2]|0)+(((c[f+436>>2]|0)+k&1023)<<1)>>1]|0)|0;j=((e[60240+((j&255^255)<<1)>>1]<<16)+67108864>>16>>(j>>>8&127)^j<<16>>31)<<17>>17}c[l>>2]=j;g=c[(c[f+476>>2]|0)+40>>2]|0;i=f+480|0;c[f+484>>2]=c[i>>2];h=c[f+524>>2]|0;if(h>>>0>123)g=0;else{g=h+((g|0)==0?0:n)+(e[f+514>>1]|0)|0;g=(g>>>0>127?2032:g<<4)+(e[(c[f+488>>2]|0)+(((c[f+496>>2]|0)+(j<<1)&1023)<<1)>>1]|0)|0;g=((e[60240+((g&255^255)<<1)>>1]<<16)+67108864>>16>>(g>>>8&127)^g<<16>>31)<<17}B=g>>16;c[i>>2]=B;b[f+3260>>1]=(0-B|0)>>>1}if(!(m&8)){h=c[f+536>>2]|0;g=c[h+4>>2]|0;if(!g){l=f+540|0;i=c[l>>2]|0;j=f+544|0;k=0}else{k=f+544|0;l=f+540|0;B=c[l>>2]|0;i=B;j=k;k=B+(c[k>>2]|0)>>8-g<<16>>16}h=c[h+40>>2]|0;c[j>>2]=i;g=c[f+584>>2]|0;if(g>>>0>123)j=0;else{j=g+((h|0)==0?0:n)+(e[f+574>>1]|0)|0;j=(j>>>0>127?2032:j<<4)+(e[(c[f+548>>2]|0)+(((c[f+556>>2]|0)+k&1023)<<1)>>1]|0)|0;j=((e[60240+((j&255^255)<<1)>>1]<<16)+67108864>>16>>(j>>>8&127)^j<<16>>31)<<17>>17}c[l>>2]=j;g=c[(c[f+596>>2]|0)+40>>2]|0;i=f+600|0;c[f+604>>2]=c[i>>2];h=c[f+644>>2]|0;if(h>>>0>123)g=0;else{g=h+((g|0)==0?0:n)+(e[f+634>>1]|0)|0;g=(g>>>0>127?2032:g<<4)+(e[(c[f+608>>2]|0)+(((c[f+616>>2]|0)+(j<<1)&1023)<<1)>>1]|0)|0;g=((e[60240+((g&255^255)<<1)>>1]<<16)+67108864>>16>>(g>>>8&127)^g<<16>>31)<<17}B=g>>16;c[i>>2]=B;b[f+3262>>1]=(0-B|0)>>>1}if(!(m&16)){h=c[f+656>>2]|0;g=c[h+4>>2]|0;if(!g){l=f+660|0;i=c[l>>2]|0;j=f+664|0;k=0}else{k=f+664|0;l=f+660|0;B=c[l>>2]|0;i=B;j=k;k=B+(c[k>>2]|0)>>8-g<<16>>16}h=c[h+40>>2]|0;c[j>>2]=i;g=c[f+704>>2]|0;if(g>>>0>123)j=0;else{j=g+((h|0)==0?0:n)+(e[f+694>>1]|0)|0;j=(j>>>0>127?2032:j<<4)+(e[(c[f+668>>2]|0)+(((c[f+676>>2]|0)+k&1023)<<1)>>1]|0)|0;j=((e[60240+((j&255^255)<<1)>>1]<<16)+67108864>>16>>(j>>>8&127)^j<<16>>31)<<17>>17}c[l>>2]=j;g=c[(c[f+716>>2]|0)+40>>2]|0;i=f+720|0;c[f+724>>2]=c[i>>2];h=c[f+764>>2]|0;if(h>>>0>123)g=0;else{g=h+((g|0)==0?0:n)+(e[f+754>>1]|0)|0;g=(g>>>0>127?2032:g<<4)+(e[(c[f+728>>2]|0)+(((c[f+736>>2]|0)+(j<<1)&1023)<<1)>>1]|0)|0;g=((e[60240+((g&255^255)<<1)>>1]<<16)+67108864>>16>>(g>>>8&127)^g<<16>>31)<<17}B=g>>16;c[i>>2]=B;b[f+3264>>1]=(0-B|0)>>>1}if(!(m&32)){h=c[f+776>>2]|0;g=c[h+4>>2]|0;if(!g){l=f+780|0;i=c[l>>2]|0;j=f+784|0;k=0}else{k=f+784|0;l=f+780|0;B=c[l>>2]|0;i=B;j=k;k=B+(c[k>>2]|0)>>8-g<<16>>16}h=c[h+40>>2]|0;c[j>>2]=i;g=c[f+824>>2]|0;if(g>>>0>123)j=0;else{j=g+((h|0)==0?0:n)+(e[f+814>>1]|0)|0;j=(j>>>0>127?2032:j<<4)+(e[(c[f+788>>2]|0)+(((c[f+796>>2]|0)+k&1023)<<1)>>1]|0)|0;j=((e[60240+((j&255^255)<<1)>>1]<<16)+67108864>>16>>(j>>>8&127)^j<<16>>31)<<17>>17}c[l>>2]=j;g=c[(c[f+836>>2]|0)+40>>2]|0;i=f+840|0;c[f+844>>2]=c[i>>2];h=c[f+884>>2]|0;if(h>>>0>123)g=0;else{g=h+((g|0)==0?0:n)+(e[f+874>>1]|0)|0;g=(g>>>0>127?2032:g<<4)+(e[(c[f+848>>2]|0)+(((c[f+856>>2]|0)+(j<<1)&1023)<<1)>>1]|0)|0;g=((e[60240+((g&255^255)<<1)>>1]<<16)+67108864>>16>>(g>>>8&127)^g<<16>>31)<<17}B=g>>16;c[i>>2]=B;b[f+3266>>1]=(0-B|0)>>>1}if((c[f+160>>2]|0)<16){if(!(m&64)){h=c[f+896>>2]|0;g=c[h+4>>2]|0;if(!g){l=f+900|0;i=c[l>>2]|0;j=f+904|0;k=0}else{k=f+904|0;l=f+900|0;B=c[l>>2]|0;i=B;j=k;k=B+(c[k>>2]|0)>>8-g<<16>>16}h=c[h+40>>2]|0;c[j>>2]=i;g=c[f+944>>2]|0;if(g>>>0>123)j=0;else{j=g+((h|0)==0?0:n)+(e[f+934>>1]|0)|0;j=(j>>>0>127?2032:j<<4)+(e[(c[f+908>>2]|0)+(((c[f+916>>2]|0)+k&1023)<<1)>>1]|0)|0;j=((e[60240+((j&255^255)<<1)>>1]<<16)+67108864>>16>>(j>>>8&127)^j<<16>>31)<<17>>17}c[l>>2]=j;g=c[(c[f+956>>2]|0)+40>>2]|0;i=f+960|0;c[f+964>>2]=c[i>>2];h=c[f+1004>>2]|0;if(h>>>0>123)g=0;else{g=h+((g|0)==0?0:n)+(e[f+994>>1]|0)|0;g=(g>>>0>127?2032:g<<4)+(e[(c[f+968>>2]|0)+(((c[f+976>>2]|0)+(j<<1)&1023)<<1)>>1]|0)|0;g=((e[60240+((g&255^255)<<1)>>1]<<16)+67108864>>16>>(g>>>8&127)^g<<16>>31)<<17}B=g>>16;c[i>>2]=B;b[f+3268>>1]=(0-B|0)>>>1}}else if(!(m&8192)){h=c[f+896>>2]|0;g=c[h+4>>2]|0;if(!g){l=f+900|0;i=c[l>>2]|0;j=f+904|0;k=0}else{k=f+904|0;l=f+900|0;B=c[l>>2]|0;i=B;j=k;k=B+(c[k>>2]|0)>>8-g<<16>>16}h=c[h+40>>2]|0;c[j>>2]=i;g=c[f+944>>2]|0;if(g>>>0>123)j=0;else{j=g+((h|0)==0?0:n)+(e[f+934>>1]|0)|0;j=(j>>>0>127?2032:j<<4)+(e[(c[f+908>>2]|0)+(((c[f+916>>2]|0)+k&1023)<<1)>>1]|0)|0;j=((e[60240+((j&255^255)<<1)>>1]<<16)+67108864>>16>>(j>>>8&127)^j<<16>>31)<<17>>17}c[l>>2]=j;g=c[(c[f+956>>2]|0)+40>>2]|0;i=f+960|0;c[f+964>>2]=c[i>>2];h=c[f+1004>>2]|0;if(h>>>0>123)g=0;else{g=h+((g|0)==0?0:n)+(e[f+994>>1]|0)|0;g=(g>>>0>127?2032:g<<4)+(e[(c[f+968>>2]|0)+(((c[f+976>>2]|0)+(j<<1)&1023)<<1)>>1]|0)|0;g=((e[60240+((g&255^255)<<1)>>1]<<16)+67108864>>16>>(g>>>8&127)^g<<16>>31)<<1&65535}c[i>>2]=g<<16>>16;b[f+3274>>1]=g}if((c[f+164>>2]|0)<16){if(!(m&128)){h=c[f+1016>>2]|0;g=c[h+4>>2]|0;if(!g){l=f+1020|0;i=c[l>>2]|0;j=f+1024|0;k=0}else{k=f+1024|0;l=f+1020|0;C=c[l>>2]|0;i=C;j=k;k=C+(c[k>>2]|0)>>8-g<<16>>16}h=c[h+40>>2]|0;c[j>>2]=i;g=c[f+1064>>2]|0;if(g>>>0>123)j=0;else{j=g+((h|0)==0?0:n)+(e[f+1054>>1]|0)|0;j=(j>>>0>127?2032:j<<4)+(e[(c[f+1028>>2]|0)+(((c[D>>2]|0)+k&1023)<<1)>>1]|0)|0;j=((e[60240+((j&255^255)<<1)>>1]<<16)+67108864>>16>>(j>>>8&127)^j<<16>>31)<<17>>17}c[l>>2]=j;g=c[(c[f+1076>>2]|0)+40>>2]|0;i=f+1080|0;c[f+1084>>2]=c[i>>2];h=c[f+1124>>2]|0;if(h>>>0>123)g=0;else{g=h+((g|0)==0?0:n)+(e[f+1114>>1]|0)|0;g=(g>>>0>127?2032:g<<4)+(e[(c[f+1088>>2]|0)+(((c[f+1096>>2]|0)+(j<<1)&1023)<<1)>>1]|0)|0;g=((e[60240+((g&255^255)<<1)>>1]<<16)+67108864>>16>>(g>>>8&127)^g<<16>>31)<<17>>16}c[i>>2]=g;b[f+3270>>1]=(0-g|0)>>>1}}else{if(!(m&512)){h=C<<24>>24!=0;g=c[f+1064>>2]|0;if(g>>>0>123)g=0;else{g=g+(e[f+1054>>1]|0)|0;g=(g>>>0>127?2032:g<<4)+(e[(c[f+1028>>2]|0)+((E<<24>>24==0?(h?52:208):h?720:564)<<1)>>1]|0)|0;g=((e[60240+((g&255^255)<<1)>>1]<<16)+67108864>>16>>(g>>>8&127)^g<<16>>31)<<1&65535}b[f+3276>>1]=g}if(!(m&4096)){h=C<<24>>24!=0;g=c[f+1124>>2]|0;if(g>>>0>123)g=0;else{g=g+(e[f+1114>>1]|0)|0;g=(g>>>0>127?2032:g<<4)+(e[(c[f+1088>>2]|0)+(((c[f+1096>>2]&256|0)==0?(h?0:256):h?768:512)<<1)>>1]|0)|0;g=((e[60240+((g&255^255)<<1)>>1]<<16)+67108864>>16>>(g>>>8&127)^g<<16>>31)<<1&65535}b[f+3278>>1]=g}}if((c[f+168>>2]|0)>=16){if(!(m&2048)){g=c[f+1184>>2]|0;if(g>>>0>123)g=0;else{g=g+(e[f+1174>>1]|0)|0;g=(g>>>0>127?2032:g<<4)+(e[(c[f+1148>>2]|0)+(c[f+1156>>2]<<1)>>1]|0)|0;g=((e[60240+((g&255^255)<<1)>>1]<<16)+67108864>>16>>(g>>>8&127)^g<<16>>31)<<1&65535}b[f+3280>>1]=g}if(m&1024|0)return;g=c[f+1244>>2]|0;if(g>>>0>123)g=0;else{g=g+(e[f+1234>>1]|0)|0;g=(g>>>0>127?2032:g<<4)+(e[(c[f+1208>>2]|0)+((E<<24>>24==0?256:768)<<1)>>1]|0)|0;g=((e[60240+((g&255^255)<<1)>>1]<<16)+67108864>>16>>(g>>>8&127)^g<<16>>31)<<1&65535}b[f+3282>>1]=g;return}if(m&256|0)return;h=c[f+1136>>2]|0;g=c[h+4>>2]|0;if(!g){l=f+1140|0;i=c[l>>2]|0;j=f+1144|0;k=0}else{k=f+1144|0;l=f+1140|0;E=c[l>>2]|0;i=E;j=k;k=E+(c[k>>2]|0)>>8-g<<16>>16}h=c[h+40>>2]|0;c[j>>2]=i;g=c[f+1184>>2]|0;if(g>>>0>123)j=0;else{j=g+((h|0)==0?0:n)+(e[f+1174>>1]|0)|0;j=(j>>>0>127?2032:j<<4)+(e[(c[f+1148>>2]|0)+(((c[f+1156>>2]|0)+k&1023)<<1)>>1]|0)|0;j=((e[60240+((j&255^255)<<1)>>1]<<16)+67108864>>16>>(j>>>8&127)^j<<16>>31)<<17>>17}c[l>>2]=j;g=c[(c[f+1196>>2]|0)+40>>2]|0;i=f+1200|0;c[f+1204>>2]=c[i>>2];h=c[f+1244>>2]|0;if(h>>>0>123)g=0;else{g=h+((g|0)==0?0:n)+(e[f+1234>>1]|0)|0;g=(g>>>0>127?2032:g<<4)+(e[(c[f+1208>>2]|0)+(((c[F>>2]|0)+(j<<1)&1023)<<1)>>1]|0)|0;g=((e[60240+((g&255^255)<<1)>>1]<<16)+67108864>>16>>(g>>>8&127)^g<<16>>31)<<17>>16}c[i>>2]=g;b[f+3272>>1]=(0-g|0)>>>1;return}function Ic(d,f){d=d|0;f=f|0;var h=0,i=0,j=0.0,k=0,l=0,m=0,n=0.0,o=0,p=0,r=0,s=0,t=0,u=0,w=0;t=d+20|0;h=c[t>>2]|0;u=d+24|0;i=c[u>>2]|0;if(i>>>0<h>>>0){s=d+16|0;o=d+3286|0;p=d+3288|0;r=d+3292|0;do{c[u>>2]=(c[s>>2]|0)+i;Hc(d);b[p>>1]=0;b[o>>1]=0;h=0;k=0;m=0;do{l=d+3236+m|0;i=a[l>>0]|0;if(i&1){k=(e[d+3256+(m<<1)>>1]|0)+(k&65535)&65535;b[p>>1]=k;i=a[l>>0]|0}if(i&2){h=(e[d+3256+(m<<1)>>1]|0)+(h&65535)&65535;b[o>>1]=h}m=m+1|0}while((m|0)!=15);m=c[r>>2]|0;if(m|0){l=c[m+28>>2]|0;k=c[l>>2]|0;w=k+2|0;b[k>>1]=b[w>>1]|0;i=k+4|0;b[w>>1]=b[i>>1]|0;w=k+6|0;b[i>>1]=b[w>>1]|0;i=k+8|0;b[w>>1]=b[i>>1]|0;w=k+10|0;b[i>>1]=b[w>>1]|0;i=k+12|0;b[w>>1]=b[i>>1]|0;w=k+14|0;b[i>>1]=b[w>>1]|0;i=k+16|0;b[w>>1]=b[i>>1]|0;w=k+18|0;b[i>>1]=b[w>>1]|0;i=k+20|0;b[w>>1]=b[i>>1]|0;w=k+22|0;b[i>>1]=b[w>>1]|0;i=k+24|0;b[w>>1]=b[i>>1]|0;w=k+26|0;b[i>>1]=b[w>>1]|0;i=k+28|0;b[w>>1]=b[i>>1]|0;k=k+30|0;b[i>>1]=b[k>>1]|0;b[k>>1]=h;k=b[p>>1]|0;l=c[l+4>>2]|0;h=l+2|0;b[l>>1]=b[h>>1]|0;i=l+4|0;b[h>>1]=b[i>>1]|0;h=l+6|0;b[i>>1]=b[h>>1]|0;i=l+8|0;b[h>>1]=b[i>>1]|0;h=l+10|0;b[i>>1]=b[h>>1]|0;i=l+12|0;b[h>>1]=b[i>>1]|0;h=l+14|0;b[i>>1]=b[h>>1]|0;i=l+16|0;b[h>>1]=b[i>>1]|0;h=l+18|0;b[i>>1]=b[h>>1]|0;i=l+20|0;b[h>>1]=b[i>>1]|0;h=l+22|0;b[i>>1]=b[h>>1]|0;i=l+24|0;b[h>>1]=b[i>>1]|0;h=l+26|0;b[i>>1]=b[h>>1]|0;i=l+28|0;b[h>>1]=b[i>>1]|0;l=l+30|0;b[i>>1]=b[l>>1]|0;b[l>>1]=k}h=c[t>>2]|0;i=c[u>>2]|0}while(i>>>0<h>>>0)}else m=c[d+3292>>2]|0;c[u>>2]=i-h;if(!m){c[f>>2]=b[d+3286>>1];u=b[d+3288>>1]|0;w=f+4|0;c[w>>2]=u;return}k=c[m+28>>2]|0;l=c[k>>2]|0;j=+g[m+16>>3];o=m+8|0;n=j+ +g[o>>3];n=n-+q(+n);g[o>>3]=n;m=c[m+24>>2]|0;h=0;i=0;do{w=~~((+(h+-7|0)-n)*256.0);w=(w<<16>>16<0?0-(w&65535)&65535:w)<<16>>16;i=(v(b[m+(((w|0)<2047?w:2047)<<1)>>1]|0,b[l+(h<<1)>>1]|0)|0)+i|0;h=h+1|0}while((h|0)!=16);c[f>>2]=i<<4>>16;k=c[k+4>>2]|0;j=j+n;j=j-+q(+j);g[o>>3]=j;h=0;i=0;do{w=~~((+(h+-7|0)-j)*256.0);w=(w<<16>>16<0?0-(w&65535)&65535:w)<<16>>16;i=(v(b[m+(((w|0)<2047?w:2047)<<1)>>1]|0,b[k+(h<<1)>>1]|0)|0)+i|0;h=h+1|0}while((h|0)!=16);u=i<<4>>16;w=f+4|0;c[w>>2]=u;return}function Jc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0.0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=ga;ga=ga+48|0;m=o;if((c[238444]|0)!=(a|0)){c[238444]=a;d=0;do{c[276704+(d<<2)>>2]=~~(+_(+(+t(+(+(d|0)*6.283185307179586*.00390625))*6.875/1200.0))*256.0);d=d+1|0}while((d|0)!=256);d=0;do{c[277728+(d<<2)>>2]=~~(+_(+(+t(+(+(d|0)*6.283185307179586*.00390625))*13.75/1200.0))*256.0);d=d+1|0}while((d|0)!=256);d=0;do{c[278752+(d<<2)>>2]=~~((+t(+(+(d|0)*6.283185307179586*.00390625))+1.0)*2.6666666666666665);d=d+1|0}while((d|0)!=256);d=0;do{c[279776+(d<<2)>>2]=~~((+t(+(+(d|0)*6.283185307179586*.00390625))+1.0)*12.799999999999999);d=d+1|0}while((d|0)!=256);d=0;do{l=~~(+r(10.0,+(+(d|0)*-.1875/20.0))*2047.0);l=d>>>0>511?0:l;c[280800+(d<<2)>>2]=l;c[280800+(d+1024<<2)>>2]=0-l;d=d+1|0}while((d|0)!=1024);c[72248]=512;d=1;do{c[288992+(d<<2)>>2]=~~(511.0-+u(+(+(d|0)))*512.0/6.238324625039508)>>>0>>>1;d=d+1|0}while((d|0)!=512);k=0;do{i=c[60752+(k<<2)>>2]|0;j=0;do{l=(v(7-j|0,-6)|0)+i|0;e=~~(+(l>>>2|0)/.1875)>>>0;f=~~(+(l>>>1|0)/.1875)>>>0;h=~~(+(l|0)/.1875)>>>0;if((l|0)<1){d=0;do{l=d<<2;c[291040+(k<<13)+(j<<10)+(d<<4)>>2]=l;c[291040+(k<<13)+(j<<10)+(d<<4)+4>>2]=l;c[291040+(k<<13)+(j<<10)+(d<<4)+8>>2]=l;c[291040+(k<<13)+(j<<10)+(d<<4)+12>>2]=l;d=d+1|0}while((d|0)!=64)}else{d=0;do{l=d<<2;c[291040+(k<<13)+(j<<10)+(d<<4)>>2]=l;c[291040+(k<<13)+(j<<10)+(d<<4)+4>>2]=l+e;c[291040+(k<<13)+(j<<10)+(d<<4)+8>>2]=l+f;c[291040+(k<<13)+(j<<10)+(d<<4)+12>>2]=l+h;d=d+1|0}while((d|0)!=64)}j=j+1|0}while((j|0)!=8);k=k+1|0}while((k|0)!=16);c[105528]=0;c[105529]=0;c[105530]=0;c[105531]=2;c[105532]=1;c[105533]=4;c[105534]=1;c[105535]=6;c[105536]=2;c[105537]=8;c[105538]=2;c[105539]=10;c[105540]=3;c[105541]=12;c[105542]=3;c[105543]=14;c[105544]=0;c[105545]=1;c[105546]=0;c[105547]=3;c[105548]=1;c[105549]=5;c[105550]=1;c[105551]=7;c[105552]=2;c[105553]=9;c[105554]=2;c[105555]=11;c[105556]=3;c[105557]=13;c[105558]=3;c[105559]=15;e=0;do{g=+t(+(+(e|0)*6.283185307179586*.0009765625));if(g==0.0)d=511;else{d=0-~~(+aa(+g)*20.0/.1875)|0;d=(d|0)<511?d:511}c[422240+(e<<2)>>2]=d;e=e+1|0}while((e|0)!=256);d=0;do{c[422240+(511-d<<2)>>2]=c[422240+(d<<2)>>2];d=d+1|0}while((d|0)!=256);d=0;do{c[422240+(d+512<<2)>>2]=(c[422240+(d<<2)>>2]|0)+1024;d=d+1|0}while((d|0)!=512)}if((c[238445]|0)!=(b|0)){c[238445]=b;Kc()}l=Pe(520,1)|0;if(!l){n=0;ga=o;return n|0}k=0;while(1){d=Ne(52)|0;if(!d)break;j=Ne(88)|0;if(!j){n=37;break}e=j+84|0;c[e>>2]=d;f=Ne(52)|0;if(!f){n=42;break}i=Ne(88)|0;if(!i){n=40;break}h=i+84|0;c[h>>2]=f;e=Ne(16)|0;if(!e){n=43;break}c[j>>2]=1;c[i>>2]=1;c[e+8>>2]=j;c[e+12>>2]=i;Lc(j);Lc(i);c[e>>2]=0;c[e+4>>2]=0;c[m+(k<<2)>>2]=e;d=k+1|0;if(d>>>0<9)k=d;else{n=49;break}}if((n|0)==37)Oe(d);else if((n|0)==40){Oe(f);d=c[e>>2]|0;n=42}else if((n|0)==43){Oe(d);Oe(j);Oe(c[h>>2]|0);Oe(i)}else if((n|0)==49){n=c[m>>2]|0;c[l+376>>2]=n;c[l+412>>2]=c[n+8>>2];c[l+416>>2]=c[n+12>>2];n=c[m+4>>2]|0;c[l+380>>2]=n;c[l+420>>2]=c[n+8>>2];c[l+424>>2]=c[n+12>>2];n=c[m+8>>2]|0;c[l+384>>2]=n;c[l+428>>2]=c[n+8>>2];c[l+432>>2]=c[n+12>>2];n=c[m+12>>2]|0;c[l+388>>2]=n;c[l+436>>2]=c[n+8>>2];c[l+440>>2]=c[n+12>>2];n=c[m+16>>2]|0;c[l+392>>2]=n;c[l+444>>2]=c[n+8>>2];c[l+448>>2]=c[n+12>>2];n=c[m+20>>2]|0;c[l+396>>2]=n;c[l+452>>2]=c[n+8>>2];c[l+456>>2]=c[n+12>>2];n=c[m+24>>2]|0;c[l+400>>2]=n;c[l+460>>2]=c[n+8>>2];c[l+464>>2]=c[n+12>>2];n=c[m+28>>2]|0;c[l+404>>2]=n;c[l+468>>2]=c[n+8>>2];c[l+472>>2]=c[n+12>>2];n=c[m+32>>2]|0;c[l+408>>2]=n;c[l+476>>2]=c[n+8>>2];c[l+480>>2]=c[n+12>>2];c[l+484>>2]=0;c[l+12>>2]=Uc(a,b)|0;Mc(l);n=l;ga=o;return n|0}if((n|0)==42){Oe(d);Oe(j)}c[m+(k<<2)>>2]=0;if(!k){Oe(l);n=0;ga=o;return n|0}else{d=c[m+(k+-1<<2)>>2]|0;f=d+8|0;e=d+12|0;while(1){o=c[f>>2]|0;Oe(c[o+84>>2]|0);Oe(o);o=c[e>>2]|0;Oe(c[o+84>>2]|0);Oe(o);Oe(d)}}return 0}function Kc(){var a=0,b=0,d=0,e=0,f=0.0,g=0.0,h=0.0;e=c[238444]|0;f=+(e>>>0);g=+((c[238445]|0)>>>0);d=0;do{a=0;do{c[426336+(d<<9)+(a<<2)>>2]=~~(f*+((v(c[60816+(a<<2)>>2]|0,d)|0)>>>2>>>0)/72.0/g+.5)>>>0;a=a+1|0}while((a|0)!=16);a=0;do{c[426336+(d<<9)+64+(a<<2)>>2]=~~(f*+(((v(c[60816+(a<<2)>>2]|0,d)|0)>>>1&1073741823)>>>0)/72.0/g+.5)>>>0;a=a+1|0}while((a|0)!=16);a=0;do{c[426336+(d<<9)+128+(a<<2)>>2]=~~(f*+(((v(c[60816+(a<<2)>>2]|0,d)|0)&1073741823)>>>0)/72.0/g+.5)>>>0;a=a+1|0}while((a|0)!=16);b=d<<1;a=0;do{c[426336+(d<<9)+192+(a<<2)>>2]=~~(f*+(((v(b,c[60816+(a<<2)>>2]|0)|0)&1073741822)>>>0)/72.0/g+.5)>>>0;a=a+1|0}while((a|0)!=16);b=d<<2;a=0;do{c[426336+(d<<9)+256+(a<<2)>>2]=~~(f*+(((v(b,c[60816+(a<<2)>>2]|0)|0)&1073741820)>>>0)/72.0/g+.5)>>>0;a=a+1|0}while((a|0)!=16);b=d<<3;a=0;do{c[426336+(d<<9)+320+(a<<2)>>2]=~~(f*+(((v(b,c[60816+(a<<2)>>2]|0)|0)&1073741816)>>>0)/72.0/g+.5)>>>0;a=a+1|0}while((a|0)!=16);b=d<<4;a=0;do{c[426336+(d<<9)+384+(a<<2)>>2]=~~(f*+(((v(b,c[60816+(a<<2)>>2]|0)|0)&1073741808)>>>0)/72.0/g+.5)>>>0;a=a+1|0}while((a|0)!=16);b=d<<5;a=0;do{c[426336+(d<<9)+448+(a<<2)>>2]=~~(f*+(((v(b,c[60816+(a<<2)>>2]|0)|0)&1073741792)>>>0)/72.0/g+.5)>>>0;a=a+1|0}while((a|0)!=16);d=d+1|0}while((d|0)!=1024);b=0;do{a=950624+(b<<6)|0;switch(b&2147483647|0){case 0:{d=a+64|0;do{c[a>>2]=0;a=a+4|0}while((a|0)<(d|0));break}case 15:{c[a>>2]=8388608;c[950624+(b<<6)+4>>2]=8388608;c[950624+(b<<6)+8>>2]=8388608;c[950624+(b<<6)+12>>2]=8388608;c[950624+(b<<6)+16>>2]=8388608;c[950624+(b<<6)+20>>2]=8388608;c[950624+(b<<6)+24>>2]=8388608;c[950624+(b<<6)+28>>2]=8388608;c[950624+(b<<6)+32>>2]=8388608;c[950624+(b<<6)+36>>2]=8388608;c[950624+(b<<6)+40>>2]=8388608;c[950624+(b<<6)+44>>2]=8388608;c[950624+(b<<6)+48>>2]=8388608;c[950624+(b<<6)+52>>2]=8388608;c[950624+(b<<6)+56>>2]=8388608;c[950624+(b<<6)+60>>2]=8388608;break}default:{a=0;do{d=(a>>>2)+b|0;c[950624+(b<<6)+(a<<2)>>2]=~~(f*+((a&3|4)*3<<(d>>>0<15?d:15)+1|0)/72.0/g+.5)>>>0;a=a+1|0}while((a|0)!=16)}}b=b+1|0}while((b|0)!=16);b=0;do{if(!b){a=951648;d=a+64|0;do{c[a>>2]=0;a=a+4|0}while((a|0)<(d|0))}else{a=0;do{d=(a>>>2)+b|0;c[951648+(b<<6)+(a<<2)>>2]=~~(f*+((a&3|4)<<(d>>>0<15?d:15)+-1|0)/72.0/g+.5)>>>0;a=a+1|0}while((a|0)!=16)}b=b+1|0}while((b|0)!=16);h=+(((e>>>0)/72|0)>>>0);c[238446]=~~(419430.4/h*f/72.0/g+.5)>>>0;c[238447]=~~(242483.2/h*f/72.0/g+.5)>>>0;return}function Lc(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;c[a+28>>2]=422240;c[a+32>>2]=0;g=a+36|0;c[a+8>>2]=0;c[a+12>>2]=0;c[a+4>>2]=0;i=a+60|0;c[i>>2]=6;c[a+64>>2]=8388608;k=a+68|0;c[k>>2]=0;j=a+56|0;h=a+52|0;f=a+44|0;e=a+48|0;b=a+40|0;c[a+72>>2]=0;a=a+84|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;b=c[a>>2]|0;d=b+52|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(d|0));d=c[f>>2]|0;f=c[e>>2]|0;b=c[a>>2]|0;c[g>>2]=c[426336+(d<<9)+(f<<6)+(c[b+12>>2]<<2)>>2];c[h>>2]=c[291040+(d>>6<<13)+(f<<10)+(c[b>>2]<<4)+(c[b+36>>2]<<2)>>2];a=c[422112+(d>>9<<6)+(f<<3)+(c[b+32>>2]<<2)>>2]|0;c[j>>2]=a;a:do switch(c[i>>2]|0){case 1:{a=950624+(c[b+16>>2]<<6)+(a<<2)|0;break}case 2:{a=951648+(c[b+20>>2]<<6)+(a<<2)|0;break}case 5:if(!(c[b+8>>2]|0)){a=952096+(a<<2)|0;break a}else{a=951648+(c[b+28>>2]<<6)+(a<<2)|0;break a}case 4:{a=951648+(c[b+28>>2]<<6)+(a<<2)|0;break}default:{j=0;c[k>>2]=j;return}}while(0);j=c[a>>2]|0;c[k>>2]=j;return}function Mc(a){a=a|0;var d=0,e=0;if(!a)return;d=c[a+376>>2]|0;Lc(c[d+8>>2]|0);Lc(c[d+12>>2]|0);c[d>>2]=0;c[d+4>>2]=0;d=c[a+380>>2]|0;Lc(c[d+8>>2]|0);Lc(c[d+12>>2]|0);c[d>>2]=0;c[d+4>>2]=0;d=c[a+384>>2]|0;Lc(c[d+8>>2]|0);Lc(c[d+12>>2]|0);c[d>>2]=0;c[d+4>>2]=0;d=c[a+388>>2]|0;Lc(c[d+8>>2]|0);Lc(c[d+12>>2]|0);c[d>>2]=0;c[d+4>>2]=0;d=c[a+392>>2]|0;Lc(c[d+8>>2]|0);Lc(c[d+12>>2]|0);c[d>>2]=0;c[d+4>>2]=0;d=c[a+396>>2]|0;Lc(c[d+8>>2]|0);Lc(c[d+12>>2]|0);c[d>>2]=0;c[d+4>>2]=0;d=c[a+400>>2]|0;Lc(c[d+8>>2]|0);Lc(c[d+12>>2]|0);c[d>>2]=0;c[d+4>>2]=0;d=c[a+404>>2]|0;Lc(c[d+8>>2]|0);Lc(c[d+12>>2]|0);c[d>>2]=0;c[d+4>>2]=0;d=c[a+408>>2]|0;Lc(c[d+8>>2]|0);Lc(c[d+12>>2]|0);c[d>>2]=0;c[d+4>>2]=0;c[a+20>>2]=0;d=a+352|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;c[d+16>>2]=0;c[a+372>>2]=65535;df(a+24|0,0,255)|0;d=a+280|0;e=d+72|0;do{c[d>>2]=0;d=d+4|0}while((d|0)<(e|0));e=a+488|0;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;c[e+16>>2]=0;c[e+20>>2]=0;c[e+24>>2]=0;b[e+28>>1]=0;Vc(c[a+12>>2]|0);return}function Nc(a){a=a|0;var b=0,d=0;Wc(c[a+12>>2]|0);b=c[a+376>>2]|0;d=c[b+8>>2]|0;Oe(c[d+84>>2]|0);Oe(d);d=c[b+12>>2]|0;Oe(c[d+84>>2]|0);Oe(d);Oe(b);b=c[a+380>>2]|0;d=c[b+8>>2]|0;Oe(c[d+84>>2]|0);Oe(d);d=c[b+12>>2]|0;Oe(c[d+84>>2]|0);Oe(d);Oe(b);b=c[a+384>>2]|0;d=c[b+8>>2]|0;Oe(c[d+84>>2]|0);Oe(d);d=c[b+12>>2]|0;Oe(c[d+84>>2]|0);Oe(d);Oe(b);b=c[a+388>>2]|0;d=c[b+8>>2]|0;Oe(c[d+84>>2]|0);Oe(d);d=c[b+12>>2]|0;Oe(c[d+84>>2]|0);Oe(d);Oe(b);b=c[a+392>>2]|0;d=c[b+8>>2]|0;Oe(c[d+84>>2]|0);Oe(d);d=c[b+12>>2]|0;Oe(c[d+84>>2]|0);Oe(d);Oe(b);b=c[a+396>>2]|0;d=c[b+8>>2]|0;Oe(c[d+84>>2]|0);Oe(d);d=c[b+12>>2]|0;Oe(c[d+84>>2]|0);Oe(d);Oe(b);b=c[a+400>>2]|0;d=c[b+8>>2]|0;Oe(c[d+84>>2]|0);Oe(d);d=c[b+12>>2]|0;Oe(c[d+84>>2]|0);Oe(d);Oe(b);b=c[a+404>>2]|0;d=c[b+8>>2]|0;Oe(c[d+84>>2]|0);Oe(d);d=c[b+12>>2]|0;Oe(c[d+84>>2]|0);Oe(d);Oe(b);b=c[a+408>>2]|0;d=c[b+8>>2]|0;Oe(c[d+84>>2]|0);Oe(d);d=c[b+12>>2]|0;Oe(c[d+84>>2]|0);Oe(d);Oe(b);Oe(a);return}function Oc(a){a=a|0;var d=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;p=a+360|0;s=(c[238446]|0)+(c[p>>2]|0)&65535;c[p>>2]=s;p=a+368|0;u=(c[238447]|0)+(c[p>>2]|0)&65535;c[p>>2]=u;c[238448]=c[278752+(c[a+364>>2]<<10)+(u>>>8<<2)>>2];s=c[276704+(c[a+356>>2]<<10)+(s>>>8<<2)>>2]|0;u=a+372|0;p=c[u>>2]|0;c[u>>2]=p>>>12&1^p>>>15|p<<1&65534;u=a+484|0;p=0;do{do if((c[u>>2]&1<<p|0)==0?(o=a+376+(p<<2)|0,m=c[o>>2]|0,n=c[m+12>>2]|0,(c[n+60>>2]|0)!=6):0)if(!(c[m+4>>2]|0)){k=c[m+8>>2]|0;i=k+8|0;j=k+12|0;c[j>>2]=c[i>>2];h=Pc(k)|0;c[k+72>>2]=h;g=c[k+84>>2]|0;d=c[k+36>>2]|0;if(!(c[g+44>>2]|0)){f=k+32|0;d=(c[f>>2]|0)+d|0;c[f>>2]=d}else{d=(v(d,s)|0)>>>8;f=k+32|0;d=(c[f>>2]|0)+d|0;c[f>>2]=d}l=d&524287;c[f>>2]=l;f=l>>>9;c[k+40>>2]=f;if(h>>>0>510)d=0;else{d=c[g+4>>2]|0;if(!d)d=(c[k+28>>2]|0)+(f<<2)|0;else d=(c[k+28>>2]|0)+(((c[k+4>>2]>>7-d)+f&1023)<<2)|0;d=c[280800+((c[d>>2]|0)+h<<2)>>2]|0}c[i>>2]=d;h=(c[j>>2]|0)+d|0;c[k+4>>2]=h>>1;g=Pc(n)|0;c[n+72>>2]=g;d=c[n+36>>2]|0;if(!(c[(c[n+84>>2]|0)+44>>2]|0)){f=n+32|0;d=(c[f>>2]|0)+d|0;c[f>>2]=d}else{d=(v(d,s)|0)>>>8;f=n+32|0;d=(c[f>>2]|0)+d|0;c[f>>2]=d}d=d&524287;c[f>>2]=d;d=d>>>9;c[n+40>>2]=d;if(g>>>0>510)d=0;else d=c[280800+((c[(c[n+28>>2]|0)+((d+(h&1022)&1023)<<2)>>2]|0)+g<<2)>>2]|0;l=a+488+(p<<1)|0;b[l>>1]=d+(e[l>>1]|0);break}else{g=Pc(n)|0;c[n+72>>2]=g;d=c[n+36>>2]|0;if(!(c[(c[n+84>>2]|0)+44>>2]|0)){f=n+32|0;d=(c[f>>2]|0)+d|0;c[f>>2]=d}else{d=(v(d,s)|0)>>>8;f=n+32|0;d=(c[f>>2]|0)+d|0;c[f>>2]=d}d=d&524287;c[f>>2]=d;d=d>>>9;c[n+40>>2]=d;if(g>>>0>510)l=0;else l=c[280800+((c[(c[n+28>>2]|0)+(d<<2)>>2]|0)+g<<2)>>2]|0;i=c[(c[o>>2]|0)+8>>2]|0;j=i+8|0;k=i+12|0;c[k>>2]=c[j>>2];h=Pc(i)|0;c[i+72>>2]=h;g=c[i+84>>2]|0;d=c[i+36>>2]|0;if(!(c[g+44>>2]|0)){f=i+32|0;d=(c[f>>2]|0)+d|0;c[f>>2]=d}else{d=(v(d,s)|0)>>>8;f=i+32|0;d=(c[f>>2]|0)+d|0;c[f>>2]=d}d=d&524287;c[f>>2]=d;f=d>>>9;c[i+40>>2]=f;if(h>>>0>510)d=0;else{d=c[g+4>>2]|0;if(!d)d=(c[i+28>>2]|0)+(f<<2)|0;else d=(c[i+28>>2]|0)+(((c[i+4>>2]>>7-d)+f&1023)<<2)|0;d=c[280800+((c[d>>2]|0)+h<<2)>>2]|0}c[j>>2]=d;j=(c[k>>2]|0)+d>>1;c[i+4>>2]=j;k=a+488+(p<<1)|0;b[k>>1]=j+l+(e[k>>1]|0);break}while(0);l=a+488+(p<<1)|0;b[l>>1]=b[l>>1]>>1;p=p+1|0}while((p|0)!=6);if(!(c[a+352>>2]|0)){m=6;do{do if((c[u>>2]&1<<m|0)==0?(t=a+376+(m<<2)|0,q=c[t>>2]|0,r=c[q+12>>2]|0,(c[r+60>>2]|0)!=6):0)if(!(c[q+4>>2]|0)){k=c[q+8>>2]|0;i=k+8|0;j=k+12|0;c[j>>2]=c[i>>2];h=Pc(k)|0;c[k+72>>2]=h;g=c[k+84>>2]|0;d=c[k+36>>2]|0;if(!(c[g+44>>2]|0)){f=k+32|0;d=(c[f>>2]|0)+d|0;c[f>>2]=d}else{d=(v(d,s)|0)>>>8;f=k+32|0;d=(c[f>>2]|0)+d|0;c[f>>2]=d}p=d&524287;c[f>>2]=p;f=p>>>9;c[k+40>>2]=f;if(h>>>0>510)d=0;else{d=c[g+4>>2]|0;if(!d)d=(c[k+28>>2]|0)+(f<<2)|0;else d=(c[k+28>>2]|0)+(((c[k+4>>2]>>7-d)+f&1023)<<2)|0;d=c[280800+((c[d>>2]|0)+h<<2)>>2]|0}c[i>>2]=d;h=(c[j>>2]|0)+d|0;c[k+4>>2]=h>>1;g=Pc(r)|0;c[r+72>>2]=g;d=c[r+36>>2]|0;if(!(c[(c[r+84>>2]|0)+44>>2]|0)){f=r+32|0;d=(c[f>>2]|0)+d|0;c[f>>2]=d}else{d=(v(d,s)|0)>>>8;f=r+32|0;d=(c[f>>2]|0)+d|0;c[f>>2]=d}d=d&524287;c[f>>2]=d;d=d>>>9;c[r+40>>2]=d;if(g>>>0>510)d=0;else d=c[280800+((c[(c[r+28>>2]|0)+((d+(h&1022)&1023)<<2)>>2]|0)+g<<2)>>2]|0;p=a+488+(m<<1)|0;b[p>>1]=d+(e[p>>1]|0);break}else{g=Pc(r)|0;c[r+72>>2]=g;d=c[r+36>>2]|0;if(!(c[(c[r+84>>2]|0)+44>>2]|0)){f=r+32|0;d=(c[f>>2]|0)+d|0;c[f>>2]=d}else{d=(v(d,s)|0)>>>8;f=r+32|0;d=(c[f>>2]|0)+d|0;c[f>>2]=d}d=d&524287;c[f>>2]=d;d=d>>>9;c[r+40>>2]=d;if(g>>>0>510)l=0;else l=c[280800+((c[(c[r+28>>2]|0)+(d<<2)>>2]|0)+g<<2)>>2]|0;i=c[(c[t>>2]|0)+8>>2]|0;j=i+8|0;k=i+12|0;c[k>>2]=c[j>>2];h=Pc(i)|0;c[i+72>>2]=h;g=c[i+84>>2]|0;d=c[i+36>>2]|0;if(!(c[g+44>>2]|0)){f=i+32|0;d=(c[f>>2]|0)+d|0;c[f>>2]=d}else{d=(v(d,s)|0)>>>8;f=i+32|0;d=(c[f>>2]|0)+d|0;c[f>>2]=d}p=d&524287;c[f>>2]=p;f=p>>>9;c[i+40>>2]=f;if(h>>>0>510)d=0;else{d=c[g+4>>2]|0;if(!d)d=(c[i+28>>2]|0)+(f<<2)|0;else d=(c[i+28>>2]|0)+(((c[i+4>>2]>>7-d)+f&1023)<<2)|0;d=c[280800+((c[d>>2]|0)+h<<2)>>2]|0}c[j>>2]=d;o=(c[k>>2]|0)+d>>1;c[i+4>>2]=o;p=a+488+(m<<1)|0;b[p>>1]=o+l+(e[p>>1]|0);break}while(0);p=a+488+(m<<1)|0;b[p>>1]=b[p>>1]>>1;m=m+1|0}while((m|0)!=9)}if(!(c[u>>2]&16384)){h=(Xc(c[a+12>>2]|0)|0)&65535;i=a+516|0;h=(e[i>>1]|0)+h&65535;b[i>>1]=h;h=h<<16>>16;h=h>>1;j=h&65535;b[i>>1]=j;i=a+488|0;i=b[i>>1]|0;i=i<<16>>16;j=a+490|0;j=b[j>>1]|0;j=j<<16>>16;k=a+492|0;k=b[k>>1]|0;k=k<<16>>16;l=a+494|0;l=b[l>>1]|0;l=l<<16>>16;m=a+496|0;m=b[m>>1]|0;m=m<<16>>16;n=a+498|0;n=b[n>>1]|0;n=n<<16>>16;o=a+500|0;o=b[o>>1]|0;o=o<<16>>16;p=a+502|0;p=b[p>>1]|0;p=p<<16>>16;q=a+504|0;q=b[q>>1]|0;q=q<<16>>16;r=a+506|0;r=b[r>>1]|0;r=r<<16>>16;s=a+508|0;s=b[s>>1]|0;s=s&65535;t=a+510|0;t=b[t>>1]|0;t=t&65535;u=a+512|0;u=b[u>>1]|0;u=u&65535;a=a+514|0;a=b[a>>1]|0;a=a&65535;i=h+i|0;j=i+j|0;k=j+k|0;l=k+l|0;m=l+m|0;n=m+n|0;o=n+o|0;p=o+p|0;q=p+q|0;r=q+r|0;s=r+s|0;t=s+t|0;u=t+u|0;a=u+a|0;a=a&65535;return a|0}else{i=a+516|0;h=b[i>>1]|0;h=h<<16>>16;h=h>>1;j=h&65535;b[i>>1]=j;i=a+488|0;i=b[i>>1]|0;i=i<<16>>16;j=a+490|0;j=b[j>>1]|0;j=j<<16>>16;k=a+492|0;k=b[k>>1]|0;k=k<<16>>16;l=a+494|0;l=b[l>>1]|0;l=l<<16>>16;m=a+496|0;m=b[m>>1]|0;m=m<<16>>16;n=a+498|0;n=b[n>>1]|0;n=n<<16>>16;o=a+500|0;o=b[o>>1]|0;o=o<<16>>16;p=a+502|0;p=b[p>>1]|0;p=p<<16>>16;q=a+504|0;q=b[q>>1]|0;q=q<<16>>16;r=a+506|0;r=b[r>>1]|0;r=r<<16>>16;s=a+508|0;s=b[s>>1]|0;s=s&65535;t=a+510|0;t=b[t>>1]|0;t=t&65535;u=a+512|0;u=b[u>>1]|0;u=u&65535;a=a+514|0;a=b[a>>1]|0;a=a&65535;i=h+i|0;j=i+j|0;k=j+k|0;l=k+l|0;m=l+m|0;n=m+n|0;o=n+o|0;p=o+p|0;q=p+q|0;r=q+r|0;s=r+s|0;t=s+t|0;u=t+u|0;a=u+a|0;a=a&65535;return a|0}return 0}function Pc(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;h=a+60|0;a:do switch(c[h>>2]|0){case 1:{d=a+68|0;e=a+64|0;b=(c[e>>2]|0)+(c[d>>2]|0)|0;c[e>>2]=b;if(!(b&8388608)){b=c[288992+(b>>>14<<2)>>2]|0;break a}else{c[e>>2]=0;c[h>>2]=2;c[d>>2]=c[951648+(c[(c[a+84>>2]|0)+20>>2]<<6)+(c[a+56>>2]<<2)>>2];b=0;break a}}case 2:{g=a+68|0;e=a+64|0;d=(c[e>>2]|0)+(c[g>>2]|0)|0;c[e>>2]=d;b=c[a+84>>2]|0;f=c[60880+(c[b+24>>2]<<2)>>2]|0;if(d>>>0<f>>>0)b=d>>>14;else{d=(c[b+8>>2]|0)==0;c[e>>2]=f;if(d){c[h>>2]=4;b=c[951648+(c[b+28>>2]<<6)+(c[a+56>>2]<<2)>>2]|0}else{c[h>>2]=3;b=0}c[g>>2]=b;b=f>>>14}break}case 3:{b=(c[a+64>>2]|0)>>>14;d=c[a+84>>2]|0;if(!(c[d+8>>2]|0)){c[h>>2]=4;c[a+68>>2]=c[951648+(c[d+28>>2]<<6)+(c[a+56>>2]<<2)>>2]}break}case 5:case 4:{g=a+64|0;b=(c[g>>2]|0)+(c[a+68>>2]|0)|0;c[g>>2]=b;if(b>>>0>8388607){c[h>>2]=6;b=511}else b=b>>>14;break}default:b=511}while(0);a=(c[a+52>>2]|0)+b+((c[(c[a+84>>2]|0)+40>>2]|0)==0?0:c[238448]|0)|0;return (a>>>0<511?a:511)|0}function Qc(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=f&255;q=e&255;if((q+-7|0)>>>0<12){Yc(c[b+12>>2]|0,q,g);f=f&255;b=b+24+q|0;a[b>>0]=f;return}switch(((e&224)+-32|0)>>>5&134217727|0){case 0:{e=q+-32|0;if(!(4144959>>>e&1)){f=f&255;b=b+24+q|0;a[b>>0]=f;return}i=c[b+412+(c[60944+(e<<2)>>2]<<2)>>2]|0;g=c[i+84>>2]|0;c[g+40>>2]=f>>>7&1;c[g+44>>2]=f>>>6&1;h=f>>>5&1;c[g+8>>2]=h;e=f>>>4&1;c[g+32>>2]=e;m=f&15;c[g+12>>2]=m;n=c[i+44>>2]|0;o=c[i+48>>2]|0;c[i+36>>2]=c[426336+(n<<9)+(o<<6)+(m<<2)>>2];c[i+52>>2]=c[291040+(n>>6<<13)+(o<<10)+(c[g>>2]<<4)+(c[g+36>>2]<<2)>>2];e=c[422112+(n>>9<<6)+(o<<3)+(e<<2)>>2]|0;c[i+56>>2]=e;a:do switch(c[i+60>>2]|0){case 1:{e=950624+(c[g+16>>2]<<6)+(e<<2)|0;p=12;break}case 2:{e=951648+(c[g+20>>2]<<6)+(e<<2)|0;p=12;break}case 5:if(!h){e=952096+(e<<2)|0;p=12;break a}else{e=951648+(c[g+28>>2]<<6)+(e<<2)|0;p=12;break a}case 4:{e=951648+(c[g+28>>2]<<6)+(e<<2)|0;p=12;break}default:e=0}while(0);if((p|0)==12)e=c[e>>2]|0;c[i+68>>2]=e;f=f&255;b=b+24+q|0;a[b>>0]=f;return}case 1:{e=q+-64|0;if(!(4144959>>>e&1)){f=f&255;b=b+24+q|0;a[b>>0]=f;return}n=f>>>6&3;h=c[b+412+(c[60944+(e<<2)>>2]<<2)>>2]|0;e=c[h+84>>2]|0;c[e+36>>2]=n;m=f&63;c[e>>2]=m;o=c[h+44>>2]|0;g=c[h+48>>2]|0;c[h+36>>2]=c[426336+(o<<9)+(g<<6)+(c[e+12>>2]<<2)>>2];c[h+52>>2]=c[291040+(o>>6<<13)+(g<<10)+(m<<4)+(n<<2)>>2];g=c[422112+(o>>9<<6)+(g<<3)+(c[e+32>>2]<<2)>>2]|0;c[h+56>>2]=g;b:do switch(c[h+60>>2]|0){case 1:{e=950624+(c[e+16>>2]<<6)+(g<<2)|0;p=22;break}case 2:{e=951648+(c[e+20>>2]<<6)+(g<<2)|0;p=22;break}case 5:if(!(c[e+8>>2]|0)){e=952096+(g<<2)|0;p=22;break b}else{e=951648+(c[e+28>>2]<<6)+(g<<2)|0;p=22;break b}case 4:{e=951648+(c[e+28>>2]<<6)+(g<<2)|0;p=22;break}default:e=0}while(0);if((p|0)==22)e=c[e>>2]|0;c[h+68>>2]=e;f=f&255;b=b+24+q|0;a[b>>0]=f;return}case 2:{e=q+-96|0;if(!(4144959>>>e&1)){f=f&255;b=b+24+q|0;a[b>>0]=f;return}h=f>>>4&15;i=c[b+412+(c[60944+(e<<2)>>2]<<2)>>2]|0;e=c[i+84>>2]|0;c[e+16>>2]=h;g=f&15;c[e+20>>2]=g;c:do switch(c[i+60>>2]|0){case 1:{e=950624+(h<<6)+(c[i+56>>2]<<2)|0;p=32;break}case 2:{e=951648+(g<<6)+(c[i+56>>2]<<2)|0;p=32;break}case 5:if(!(c[e+8>>2]|0)){e=952096+(c[i+56>>2]<<2)|0;p=32;break c}else{e=951648+(c[e+28>>2]<<6)+(c[i+56>>2]<<2)|0;p=32;break c}case 4:{e=951648+(c[e+28>>2]<<6)+(c[i+56>>2]<<2)|0;p=32;break}default:e=0}while(0);if((p|0)==32)e=c[e>>2]|0;c[i+68>>2]=e;f=f&255;b=b+24+q|0;a[b>>0]=f;return}case 3:{e=q+-128|0;if(!(4144959>>>e&1)){f=f&255;b=b+24+q|0;a[b>>0]=f;return}i=c[b+412+(c[60944+(e<<2)>>2]<<2)>>2]|0;g=c[i+84>>2]|0;c[g+24>>2]=f>>>4&15;h=f&15;c[g+28>>2]=h;d:do switch(c[i+60>>2]|0){case 1:{e=950624+(c[g+16>>2]<<6)+(c[i+56>>2]<<2)|0;p=42;break}case 2:{e=951648+(c[g+20>>2]<<6)+(c[i+56>>2]<<2)|0;p=42;break}case 5:{e=c[i+56>>2]|0;if(!(c[g+8>>2]|0)){e=952096+(e<<2)|0;p=42;break d}else{e=951648+(h<<6)+(e<<2)|0;p=42;break d}}case 4:{e=951648+(h<<6)+(c[i+56>>2]<<2)|0;p=42;break}default:e=0}while(0);if((p|0)==42)e=c[e>>2]|0;c[i+68>>2]=e;f=f&255;b=b+24+q|0;a[b>>0]=f;return}default:{e=q+-160|0;if(e>>>0<9){j=a[q+16+(b+24)>>0]&3;i=j<<8|g;k=c[b+376+(e<<2)>>2]|0;h=c[k+12>>2]|0;o=h+44|0;c[o>>2]=i;k=c[k+8>>2]|0;c[k+44>>2]=i;o=c[o>>2]|0;g=c[h+48>>2]|0;e=c[h+84>>2]|0;c[h+36>>2]=c[426336+(o<<9)+(g<<6)+(c[e+12>>2]<<2)>>2];c[h+52>>2]=c[291040+(o>>6<<13)+(g<<10)+(c[e>>2]<<4)+(c[e+36>>2]<<2)>>2];g=c[422112+(o>>9<<6)+(g<<3)+(c[e+32>>2]<<2)>>2]|0;c[h+56>>2]=g;e:do switch(c[h+60>>2]|0){case 1:{e=950624+(c[e+16>>2]<<6)+(g<<2)|0;p=52;break}case 2:{e=951648+(c[e+20>>2]<<6)+(g<<2)|0;p=52;break}case 5:if(!(c[e+8>>2]|0)){e=952096+(g<<2)|0;p=52;break e}else{e=951648+(c[e+28>>2]<<6)+(g<<2)|0;p=52;break e}case 4:{e=951648+(c[e+28>>2]<<6)+(g<<2)|0;p=52;break}default:e=0}while(0);if((p|0)==52)e=c[e>>2]|0;c[h+68>>2]=e;e=c[k+48>>2]|0;g=c[k+84>>2]|0;c[k+36>>2]=c[426336+(i<<9)+(e<<6)+(c[g+12>>2]<<2)>>2];c[k+52>>2]=c[291040+(i>>>6<<13)+(e<<10)+(c[g>>2]<<4)+(c[g+36>>2]<<2)>>2];e=c[422112+(j>>>1<<6)+(e<<3)+(c[g+32>>2]<<2)>>2]|0;c[k+56>>2]=e;f:do switch(c[k+60>>2]|0){case 1:{e=950624+(c[g+16>>2]<<6)+(e<<2)|0;p=60;break}case 2:{e=951648+(c[g+20>>2]<<6)+(e<<2)|0;p=60;break}case 5:if(!(c[g+8>>2]|0)){e=952096+(e<<2)|0;p=60;break f}else{e=951648+(c[g+28>>2]<<6)+(e<<2)|0;p=60;break f}case 4:{e=951648+(c[g+28>>2]<<6)+(e<<2)|0;p=60;break}default:e=0}while(0);if((p|0)==60)e=c[e>>2]|0;c[k+68>>2]=e;f=f&255;b=b+24+q|0;a[b>>0]=f;return}e=q+-176|0;if(e>>>0>=9){e=q+-192|0;if(e>>>0<9){c[(c[(c[b+412+(e<<1<<2)>>2]|0)+84>>2]|0)+4>>2]=f>>>1&7;c[(c[b+376+(e<<2)>>2]|0)+4>>2]=f&1;f=f&255;b=b+24+q|0;a[b>>0]=f;return}if((q|0)!=189){f=f&255;b=b+24+q|0;a[b>>0]=f;return}c[b+352>>2]=f&32;c[b+364>>2]=f>>>7&1;c[b+356>>2]=f>>>6&1;f=f&255;b=b+24+q|0;a[b>>0]=f;return}k=f<<8&768;i=k|(d[q+-16+(b+24)>>0]|0);g=c[b+376+(e<<2)>>2]|0;o=c[g+12>>2]|0;n=o+44|0;c[n>>2]=i;l=c[g+8>>2]|0;c[l+44>>2]=i;h=f>>>2&7;m=o+48|0;c[m>>2]=h;c[l+48>>2]=h;e=(f&32|0)==0;j=l+60|0;if(e|(a[b+24+q>>0]&32)!=0){if(e){if((c[j>>2]|0)==1){p=l+64|0;c[p>>2]=c[288992+((c[p>>2]|0)>>>14<<2)>>2]<<14}c[j>>2]=5;e=o+60|0;if((c[e>>2]|0)==1){p=o+64|0;c[p>>2]=c[288992+((c[p>>2]|0)>>>14<<2)>>2]<<14}c[e>>2]=5;e=0;p=71}}else{c[j>>2]=1;c[l+32>>2]=0;c[l+64>>2]=0;c[o+60>>2]=1;c[o+32>>2]=0;c[o+64>>2]=0;e=1;p=71}if((p|0)==71)c[g>>2]=e;g=c[l+84>>2]|0;c[l+36>>2]=c[426336+(i<<9)+(h<<6)+(c[g+12>>2]<<2)>>2];c[l+52>>2]=c[291040+(i>>>6<<13)+(h<<10)+(c[g>>2]<<4)+(c[g+36>>2]<<2)>>2];e=c[422112+(k>>>9<<6)+(h<<3)+(c[g+32>>2]<<2)>>2]|0;c[l+56>>2]=e;g:do switch(c[j>>2]|0){case 1:{e=950624+(c[g+16>>2]<<6)+(e<<2)|0;p=79;break}case 2:{e=951648+(c[g+20>>2]<<6)+(e<<2)|0;p=79;break}case 5:if(!(c[g+8>>2]|0)){e=952096+(e<<2)|0;p=79;break g}else{e=951648+(c[g+28>>2]<<6)+(e<<2)|0;p=79;break g}case 4:{e=951648+(c[g+28>>2]<<6)+(e<<2)|0;p=79;break}default:e=0}while(0);if((p|0)==79)e=c[e>>2]|0;c[l+68>>2]=e;n=c[n>>2]|0;g=c[m>>2]|0;e=c[o+84>>2]|0;c[o+36>>2]=c[426336+(n<<9)+(g<<6)+(c[e+12>>2]<<2)>>2];c[o+52>>2]=c[291040+(n>>6<<13)+(g<<10)+(c[e>>2]<<4)+(c[e+36>>2]<<2)>>2];g=c[422112+(n>>9<<6)+(g<<3)+(c[e+32>>2]<<2)>>2]|0;c[o+56>>2]=g;h:do switch(c[o+60>>2]|0){case 1:{e=950624+(c[e+16>>2]<<6)+(g<<2)|0;p=87;break}case 2:{e=951648+(c[e+20>>2]<<6)+(g<<2)|0;p=87;break}case 5:if(!(c[e+8>>2]|0)){e=952096+(g<<2)|0;p=87;break h}else{e=951648+(c[e+28>>2]<<6)+(g<<2)|0;p=87;break h}case 4:{e=951648+(c[e+28>>2]<<6)+(g<<2)|0;p=87;break}default:e=0}while(0);if((p|0)==87)e=c[e>>2]|0;c[o+68>>2]=e;f=f&255;b=b+24+q|0;a[b>>0]=f;return}}}function Rc(a){a=a|0;return d[(c[a+16>>2]|0)+(a+24)>>0]|0|0}function Sc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=a+16|0;if(!(b&1)){c[e>>2]=d;return}else{Qc(a,c[e>>2]|0,d);return}}function Tc(a){a=a|0;return Zc(c[a+12>>2]|0)|0}function Uc(b,d){b=b|0;d=d|0;var e=0,f=0;f=Ne(112)|0;if(!f){f=0;return f|0}c[f>>2]=b;c[f+4>>2]=(d|0)==0?44100:d;d=Ne(262144)|0;c[f+44>>2]=d;e=d;if(!d){Oe(f);f=0;return f|0}df(d|0,0,262144)|0;b=Ne(262144)|0;c[f+48>>2]=b;if(!b){Oe(d);Oe(f);f=0;return f|0}else{df(b|0,0,262144)|0;b=f+8|0;d=b+32|0;do{a[b>>0]=0;b=b+1|0}while((b|0)<(d|0));c[f+80>>2]=0;a[f+52>>0]=0;d=f+56|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;c[d+16>>2]=0;c[f+40>>2]=e;c[f+76>>2]=524287;c[f+88>>2]=0;c[f+84>>2]=0;a[f+12>>0]=24;return f|0}return 0}function Vc(b){b=b|0;var d=0,e=0;d=b+8|0;e=d+32|0;do{a[d>>0]=0;d=d+1|0}while((d|0)<(e|0));c[b+80>>2]=0;a[b+52>>0]=0;e=b+56|0;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;c[e+16>>2]=0;c[b+40>>2]=c[b+44>>2];c[b+76>>2]=524287;c[b+88>>2]=0;c[b+84>>2]=0;a[b+12>>0]=24;return}function Wc(a){a=a|0;if(!a)return;Oe(c[a+44>>2]|0);Oe(c[a+48>>2]|0);Oe(a);return}function Xc(b){b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;h=a[b+15>>0]|0;if(h&8){b=0;return b|0}i=b+80|0;if(c[i>>2]|0?(f=b+68|0,e=(c[f>>2]|0)+(c[b+72>>2]|0)|0,c[f>>2]=e,e&1073741824|0):0){c[f>>2]=e&1073741823;g=b+64|0;f=c[b+76>>2]|0;e=(c[g>>2]|0)+1&f;c[g>>2]=e;do if((e|0)==(c[b+60>>2]&f|0))if(!(h&16)){c[i>>2]=0;i=b+52|0;a[i>>0]=a[i>>0]|-112;break}else{e=c[b+56>>2]&f;c[g>>2]=e;break}else a[b+23>>0]=a[(c[b+40>>2]|0)+(e>>>1)>>0]|0;while(0);k=d[b+23>>0]|0;k=(e&1|0)==0?k>>>4:k&15;f=b+84|0;e=c[f>>2]|0;c[b+88>>2]=e;i=b+92|0;h=c[i>>2]|0;g=k&7;j=(v(g<<1|1,h)|0)>>>3;e=((k&8|0)==0?j:0-j|0)+e|0;e=(e|0)<32767?e:32767;c[f>>2]=(e|0)>-32768?e:-32768;h=v(c[61072+(g<<2)>>2]|0,h)|0;c[i>>2]=h>>>0<8128?127:h>>>0>1572863?24575:h>>>6}k=(v((c[b+88>>2]|0)+(c[b+84>>2]|0)|0,d[b+26>>0]|0)|0)>>>13&65535;return k|0}function Yc(b,e,f){b=b|0;e=e|0;f=f|0;var g=0;g=e&31;do switch(e&31){case 0:{a[b+8>>0]=f;return}case 1:{a[b+9>>0]=f;return}case 2:{a[b+10>>0]=f;return}case 3:{a[b+11>>0]=f;return}case 4:{if(!(f&128)){e=f&255;a[b+12>>0]=e}else{e=b+52|0;a[e>>0]=f&120&(d[e>>0]|0);e=a[b+12>>0]|0}if(e<<24>>24>-1)return;else H(66623,66654,243,66725);break}case 5:{a[b+13>>0]=f;return}case 6:{a[b+14>>0]=f;return}case 7:{if(f&1|0){c[b+80>>2]=0;return}if(f&128|0){c[b+80>>2]=1;c[b+64>>2]=c[b+76>>2]&c[b+56>>2];c[b+68>>2]=0;c[b+84>>2]=0;c[b+88>>2]=0;c[b+92>>2]=127}a[b+15>>0]=f;return}case 8:{g=f&255;a[b+16>>0]=g;c[b+40>>2]=c[((f&1|0)==0?b+44|0:b+48|0)>>2];c[b+76>>2]=(g&2)==0?524287:131071;return}case 10:case 9:{a[b+8+g>>0]=f;c[b+56>>2]=((d[b+18>>0]|0)<<8|(d[b+17>>0]|0))<<3;return}case 12:case 11:{a[b+8+g>>0]=f;c[b+60>>2]=((d[b+20>>0]|0)<<8|(d[b+19>>0]|0))<<3;return}case 13:{a[b+21>>0]=f;return}case 14:{a[b+22>>0]=f;return}case 15:{e=f&255;a[b+23>>0]=e;if((a[b+15>>0]&96)==96){f=b+64|0;a[(c[b+40>>2]|0)+((c[f>>2]|0)>>>1)>>0]=e;c[f>>2]=(c[f>>2]|0)+2&c[b+76>>2]}b=b+52|0;a[b>>0]=a[b>>0]|-120;return}case 17:case 16:{a[b+8+g>>0]=f;c[b+72>>2]=~~(+((c[b>>2]|0)>>>0)*+(((d[b+25>>0]|0)<<8|(d[b+24>>0]|0))<<14|0)/72.0/+((c[b+4>>2]|0)>>>0)+.5)>>>0;return}case 18:{a[b+26>>0]=f;return}default:return}while(0)}function Zc(a){a=a|0;return d[a+52>>0]|0|0}function _c(a,b){a=a|0;b=b|0;c[a+16>>2]=b;if(!b){b=~~(+((c[a+4>>2]|0)>>>0)*16777216.0/+(c[a+8>>2]<<4>>>0))>>>0;a=a+12|0;c[a>>2]=b;return}else{c[a+108>>2]=2147483648/((c[a+8>>2]|0)>>>0)|0;c[a+116>>2]=2147483648/((c[a+4>>2]|0)>>>4>>>0)|0;c[a+112>>2]=0;b=16777216;a=a+12|0;c[a>>2]=b;return}}function $c(a,b){a=a|0;b=b|0;var d=0;d=Ne(136)|0;if(!d){b=0;return b|0}c[d+4>>2]=a;b=(b|0)==0?44100:b;c[d+8>>2]=b;c[d+16>>2]=0;c[d+12>>2]=~~(+(a>>>0)*16777216.0/+(b<<4>>>0))>>>0;b=d;return b|0}function ad(a){a=a|0;var b=0;c[a+104>>2]=0;b=a+20|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[a+44>>2]=0;c[a+56>>2]=0;c[a+32>>2]=15;c[a+68>>2]=0;c[a+48>>2]=0;c[a+60>>2]=0;c[a+36>>2]=15;c[a+72>>2]=0;c[a+52>>2]=0;c[a+64>>2]=0;c[a+40>>2]=15;c[a+76>>2]=0;c[a+120>>2]=0;c[a+80>>2]=32768;c[a+84>>2]=0;c[a+88>>2]=0;c[a+92>>2]=15;c[a+96>>2]=0;c[a+100>>2]=0;c[a>>2]=0;c[a+124>>2]=255;a=a+128|0;c[a>>2]=0;c[a+4>>2]=0;return}function bd(a){a=a|0;Oe(a);return}function cd(a,b){a=a|0;b=b|0;var d=0,e=0;if(!(b&128)){a=a+44+((c[a+120>>2]|0)>>>1<<2)|0;c[a>>2]=c[a>>2]&15|b<<4&1008;return}e=b>>>4;d=e&7;c[a+120>>2]=d;switch(e&7){case 4:case 2:case 0:{a=a+44+(d>>>1<<2)|0;c[a>>2]=c[a>>2]&1008|b&15;return}case 5:case 3:case 1:{c[a+32+((d+-1|0)>>>1<<2)>>2]=b&15;return}case 6:{c[a+96>>2]=b>>>2&1;d=b&3;if((d|0)==3){e=1;d=c[a+52>>2]|0}else{e=0;d=32<<d}b=a+88|0;c[b>>2]=d;c[a+100>>2]=e;if(!d)c[b>>2]=1;c[a+80>>2]=32768;return}case 7:{c[a+92>>2]=b&15;return}default:{}}}function dd(a){a=a|0;var d=0,e=0,f=0,g=0,h=0;if(!(c[a+16>>2]|0))ed(a);else{g=a+108|0;d=c[g>>2]|0;h=a+112|0;e=c[h>>2]|0;if(e>>>0<d>>>0){f=a+116|0;d=e;while(1){c[h>>2]=(c[f>>2]|0)+d;ed(a);d=c[g>>2]|0;e=c[h>>2]|0;if(e>>>0<d>>>0)d=e;else break}}c[h>>2]=e-d}h=(b[a+130>>1]|0)+(b[a+128>>1]|0)+(b[a+132>>1]|0)+(b[a+134>>1]|0)|0;c[a>>2]=h;return h&65535|0}function ed(a){a=a|0;var d=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;g=a+104|0;f=(c[g>>2]|0)+(c[a+12>>2]|0)|0;l=f>>>24;c[g>>2]=f&16777215;g=a+84|0;f=(c[g>>2]|0)+l|0;c[g>>2]=f;do if(f&256){i=a+80|0;d=c[i>>2]|0;d=(d^((c[a+96>>2]|0)==0?0:d>>>3))<<15&32768|d>>>1;c[i>>2]=d;if(!(c[a+100>>2]|0)){c[g>>2]=f-(c[a+88>>2]|0);break}else{c[g>>2]=f-(c[a+52>>2]|0);break}}else d=c[a+80>>2]|0;while(0);if(!(d&1)){f=a+134|0;d=b[f>>1]|0}else{f=a+134|0;d=(c[61104+(c[a+92>>2]<<2)>>2]<<4)+(e[f>>1]|0)&65535;b[f>>1]=d}b[f>>1]=d<<16>>16>>1;g=a+20|0;f=(c[g>>2]|0)+l|0;c[g>>2]=f;do if(f&1024){d=c[a+44>>2]|0;h=a+56|0;if(d>>>0>1){j=(c[h>>2]|0)==0&1;c[h>>2]=j;c[g>>2]=f-d;i=14;break}else{c[h>>2]=1;i=15;break}}else{j=c[a+56>>2]|0;i=14}while(0);if((i|0)==14?j|0:0)i=15;if((i|0)==15?(c[a+68>>2]|0)==0:0){j=a+128|0;b[j>>1]=(c[61104+(c[a+32>>2]<<2)>>2]<<4)+(e[j>>1]|0)}g=a+128|0;b[g>>1]=b[g>>1]>>1;g=a+24|0;f=(c[g>>2]|0)+l|0;c[g>>2]=f;do if(f&1024){d=c[a+48>>2]|0;h=a+60|0;if(d>>>0>1){k=(c[h>>2]|0)==0&1;c[h>>2]=k;c[g>>2]=f-d;i=22;break}else{c[h>>2]=1;i=23;break}}else{k=c[a+60>>2]|0;i=22}while(0);if((i|0)==22?k|0:0)i=23;if((i|0)==23?(c[a+72>>2]|0)==0:0){k=a+130|0;b[k>>1]=(c[61104+(c[a+36>>2]<<2)>>2]<<4)+(e[k>>1]|0)}h=a+130|0;b[h>>1]=b[h>>1]>>1;h=a+28|0;f=(c[h>>2]|0)+l|0;c[h>>2]=f;do if(f&1024){d=c[a+52>>2]|0;g=a+64|0;if(d>>>0>1){m=(c[g>>2]|0)==0&1;c[g>>2]=m;c[h>>2]=f-d;i=30;break}else{c[g>>2]=1;break}}else{m=c[a+64>>2]|0;i=30}while(0);if((i|0)==30?(m|0)==0:0){a=a+132|0;m=b[a>>1]|0;m=m<<16>>16;m=m>>1;m=m&65535;b[a>>1]=m;return}if(c[a+76>>2]|0){a=a+132|0;m=b[a>>1]|0;m=m<<16>>16;m=m>>1;m=m&65535;b[a>>1]=m;return}m=a+132|0;b[m>>1]=(c[61104+(c[a+40>>2]<<2)>>2]<<4)+(e[m>>1]|0);a=a+132|0;m=b[a>>1]|0;m=m<<16>>16;m=m>>1;m=m&65535;b[a>>1]=m;return}function fd(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;if(!(c[a+16>>2]|0)){ed(a);i=d+4|0;c[i>>2]=0;c[d>>2]=0;h=a+124|0;e=c[h>>2]|0;if(!(e&128))g=0;else{g=b[a+134>>1]|0;c[d>>2]=g;e=c[h>>2]|0}if(!(e&8))f=0;else{f=b[a+134>>1]|0;c[i>>2]=f;e=c[h>>2]|0}if(e&16){g=g+(b[a+128>>1]|0)|0;c[d>>2]=g;e=c[h>>2]|0}if(e&1){f=f+(b[a+128>>1]|0)|0;c[i>>2]=f;e=c[h>>2]|0}if(e&32){g=g+(b[a+130>>1]|0)|0;c[d>>2]=g;e=c[h>>2]|0}if(e&2){f=f+(b[a+130>>1]|0)|0;c[i>>2]=f;e=c[h>>2]|0}if(e&64){c[d>>2]=g+(b[a+132>>1]|0);e=c[h>>2]|0}if(!(e&4))return;c[i>>2]=f+(b[a+132>>1]|0);return}h=a+108|0;e=c[h>>2]|0;i=a+112|0;f=c[i>>2]|0;if(f>>>0<e>>>0){g=a+116|0;e=f;while(1){c[i>>2]=(c[g>>2]|0)+e;ed(a);e=c[h>>2]|0;f=c[i>>2]|0;if(f>>>0<e>>>0)e=f;else break}}c[i>>2]=f-e;i=d+4|0;c[i>>2]=0;c[d>>2]=0;h=a+124|0;e=c[h>>2]|0;if(!(e&128))g=0;else{g=b[a+134>>1]|0;c[d>>2]=g;e=c[h>>2]|0}if(!(e&8))f=0;else{f=b[a+134>>1]|0;c[i>>2]=f;e=c[h>>2]|0}if(e&16){g=g+(b[a+128>>1]|0)|0;c[d>>2]=g;e=c[h>>2]|0}if(e&1){f=f+(b[a+128>>1]|0)|0;c[i>>2]=f;e=c[h>>2]|0}if(e&32){g=g+(b[a+130>>1]|0)|0;c[d>>2]=g;e=c[h>>2]|0}if(e&2){f=f+(b[a+130>>1]|0)|0;c[i>>2]=f;e=c[h>>2]|0}if(e&64){c[d>>2]=g+(b[a+132>>1]|0);e=c[h>>2]|0}if(!(e&4))return;c[i>>2]=f+(b[a+132>>1]|0);return}function gd(a,b){a=a|0;b=b|0;c[a+124>>2]=b;return}function hd(b){b=b|0;var d=0,e=0;a[b+14>>0]=0;a[b+30>>0]=0;a[b+46>>0]=0;a[b+62>>0]=0;a[b+78>>0]=0;a[b+94>>0]=0;a[b+110>>0]=0;a[b+126>>0]=0;a[b+142>>0]=0;a[b+158>>0]=0;a[b+174>>0]=0;a[b+190>>0]=0;a[b+206>>0]=0;a[b+222>>0]=0;a[b+238>>0]=0;a[b+254>>0]=0;a[b+270>>0]=0;a[b+286>>0]=0;a[b+302>>0]=0;a[b+318>>0]=0;a[b+334>>0]=0;a[b+350>>0]=0;a[b+366>>0]=0;a[b+382>>0]=0;a[b+398>>0]=0;a[b+414>>0]=0;a[b+430>>0]=0;a[b+446>>0]=0;a[b+462>>0]=0;a[b+478>>0]=0;a[b+494>>0]=0;a[b+510>>0]=0;c[b+8>>2]=0;a[b+14>>0]=0;c[b+8>>2]=0;a[b+13>>0]=0;a[b+12>>0]=0;d=1;do{a[b+(d<<4)+14>>0]=a[b+(d<<4)+14>>0]&127;c[b+(d<<4)+8>>2]=0;e=d&255;a[b+(d<<4)+13>>0]=e;a[b+(d<<4)+12>>0]=e;d=d+1|0}while((d|0)!=32);return}function id(b){b=b|0;var c=0;c=b+30|0;do if(a[c>>0]|0){c=b+46|0;if(a[c>>0]|0){c=b+62|0;if(a[c>>0]|0){c=b+78|0;if(a[c>>0]|0){c=b+94|0;if(a[c>>0]|0){c=b+110|0;if(a[c>>0]|0){c=b+126|0;if(a[c>>0]|0){c=b+142|0;if(a[c>>0]|0){c=b+158|0;if(a[c>>0]|0){c=b+174|0;if(a[c>>0]|0){c=b+190|0;if(a[c>>0]|0){c=b+206|0;if(a[c>>0]|0){c=b+222|0;if(a[c>>0]|0){c=b+238|0;if(a[c>>0]|0){c=b+254|0;if(a[c>>0]|0){c=b+270|0;if(a[c>>0]|0){c=b+286|0;if(a[c>>0]|0){c=b+302|0;if(a[c>>0]|0){c=b+318|0;if(!(a[c>>0]|0))b=19;else{c=b+334|0;if(!(a[c>>0]|0)){b=20;break}c=b+350|0;if(!(a[c>>0]|0)){b=21;break}c=b+366|0;if(!(a[c>>0]|0)){b=22;break}c=b+382|0;if(!(a[c>>0]|0)){b=23;break}c=b+398|0;if(!(a[c>>0]|0)){b=24;break}c=b+414|0;if(!(a[c>>0]|0)){b=25;break}c=b+430|0;if(!(a[c>>0]|0)){b=26;break}c=b+446|0;if(!(a[c>>0]|0)){b=27;break}c=b+462|0;if(!(a[c>>0]|0)){b=28;break}c=b+478|0;if(!(a[c>>0]|0)){b=29;break}c=b+494|0;if(!(a[c>>0]|0)){b=30;break}c=b+510|0;if(!(a[c>>0]|0)){b=31;break}else c=0;return c|0}}else b=18}else b=17}else b=16}else b=15}else b=14}else b=13}else b=12}else b=11}else b=10}else b=9}else b=8}else b=7}else b=6}else b=5}else b=4}else b=3}else b=2}else b=1;while(0);a[c>>0]=-128;return b|0}function jd(b,c){b=b|0;c=c|0;var d=0,e=0;e=a[b+(c<<4)+13>>0]|0;d=a[b+(c<<4)+12>>0]|0;a[b+((e&255)<<4)+12>>0]=d;a[b+((d&255)<<4)+13>>0]=e;a[b+(c<<4)+14>>0]=0;return}function kd(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;g=b+(d<<4)+13|0;i=a[g>>0]|0;h=b+(d<<4)+12|0;f=a[h>>0]|0;a[b+((i&255)<<4)+12>>0]=f;a[b+((f&255)<<4)+13>>0]=i;if(!e){c[b+(d<<4)+8>>2]=0;return}f=(c[b+8>>2]|0)+e|0;c[b+(d<<4)+8>>2]=f;if(!f)return;e=a[b+13>>0]|0;a:do if(e<<24>>24){e=e&255;while(1){i=c[b+(e<<4)+8>>2]|0;if((i|0)!=0&i>>>0>f>>>0)break;e=a[b+(e<<4)+13>>0]|0;if(!(e<<24>>24))break a;else e=e&255}i=b+(e<<4)+12|0;f=a[i>>0]|0;a[g>>0]=e;a[h>>0]=f;h=d&255;a[b+((f&255)<<4)+13>>0]=h;a[i>>0]=h;return}while(0);i=b+12|0;f=a[i>>0]|0;a[g>>0]=0;a[h>>0]=f;h=d&255;a[b+((f&255)<<4)+13>>0]=h;a[i>>0]=h;return}function ld(a,b,e){a=a|0;b=b|0;e=e|0;if(!b)b=d[a+13>>0]|0;b=c[a+(b<<4)+8>>2]|0;if(!b){e=0;return e|0}if(!e){e=1;return e|0}c[e>>2]=b-(c[a+8>>2]|0);e=1;return e|0}function md(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;c[a+(b<<4)+4>>2]=d;c[a+(b<<4)>>2]=e;return}function nd(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;k=b+8|0;f=(c[k>>2]|0)+e|0;c[k>>2]=f;j=b+13|0;e=a[j>>0]|0;if(!(e<<24>>24)){c[k>>2]=0;return}g=c[b+((e&255)<<4)+8>>2]|0;if((g+-1|0)>>>0>=f>>>0)return;h=e;i=g;while(1){e=h&255;h=h<<24>>24==0;if(!h){g=e;while(1){m=b+(g<<4)+14|0;a[m>>0]=a[m>>0]&-4;g=a[b+(g<<4)+13>>0]|0;if(!(g<<24>>24))break;else g=g&255}c[k>>2]=f-i;if(!h){h=e;while(1){g=b+(h<<4)+8|0;f=c[g>>2]|0;if(f|0?(m=f-i|0,c[g>>2]=m,l=b+(h<<4)+14|0,(m|0)==0):0)a[l>>0]=a[l>>0]|1;f=a[b+(h<<4)+13>>0]|0;if(!(f<<24>>24))break;else h=f&255}while(1){g=b+(e<<4)+14|0;f=d[g>>0]|0;if((f&2|0)==0?(a[g>>0]=f|2,(f&1|0)!=0):0){pa[c[b+(e<<4)+4>>2]&31](b,e,c[b+(e<<4)>>2]|0);e=0}e=a[b+(e<<4)+13>>0]|0;if(!(e<<24>>24))break;else e=e&255}}}else c[k>>2]=f-i;h=a[j>>0]|0;i=c[b+((h&255)<<4)+8>>2]|0;if(!i){e=22;break}f=c[k>>2]|0;if(f>>>0<i>>>0){e=22;break}}if((e|0)==22)return}function od(b){b=b|0;rd(b);c[b+120>>2]=1;a[b+21>>0]=1;a[b+22>>0]=3;a[b+23>>0]=4;c[b+76>>2]=64032;c[b+80>>2]=65056;c[b+84>>2]=61168;c[b+88>>2]=62192;c[b+128>>2]=20;c[b+132>>2]=20;return}function pd(a,b){a=a|0;b=b|0;var e=0;e=a+72|0;c[e>>2]=(c[e>>2]|0)+(d[a+22>>0]|0);return la[c[a+140>>2]&31](c[a+136>>2]|0,b)|0}function qd(a,b,e){a=a|0;b=b|0;e=e|0;var f=0;f=a+72|0;c[f>>2]=(c[f>>2]|0)+(d[a+22>>0]|0);pa[c[a+144>>2]&31](c[a+136>>2]|0,b,e);return}function rd(d){d=d|0;var e=0,f=0,g=0;a[d+25>>0]=0;a[d+24>>0]=0;e=d+15|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;b[d+12>>1]=0;a[e>>0]=0;a[e+1>>0]=0;a[e+2>>0]=0;a[e+3>>0]=0;a[e+4>>0]=0;a[e+5>>0]=0;a[e+6>>0]=0;a[d+22>>0]=3;a[d+23>>0]=4;c[d+92>>2]=0;c[d+116>>2]=0;c[d+120>>2]=0;e=d+124|0;f=d+28|0;g=f+48|0;do{c[f>>2]=0;f=f+4|0}while((f|0)<(g|0));c[e>>2]=26;c[d+168>>2]=0;c[d+160>>2]=0;c[d+164>>2]=0;return}function sd(a){a=a|0;var b=0;b=a+60|0;a=la[c[a+128>>2]&31](a,c[b>>2]|0)|0;c[b>>2]=(c[b>>2]|0)+1&65535;return a|0}function td(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ha=0,ia=0,ka=0,ma=0,na=0,oa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0;ya=ga;ga=ga+16|0;Z=ya+4|0;X=ya;xa=b+72|0;c[xa>>2]=0;wa=b+136|0;if(!e){wa=0;c[xa>>2]=0;ga=ya;return wa|0}Q=b+160|0;ca=b+32|0;va=b+60|0;q=b+24|0;E=b+12|0;K=b+21|0;na=b+124|0;R=b+88|0;_=b+76|0;ma=b+28|0;ra=b+68|0;w=b+7|0;A=b+1|0;D=b+3|0;H=b+2|0;I=b+5|0;J=b+4|0;F=b+25|0;ua=b+64|0;G=b+6|0;oa=b+128|0;B=b+13|0;C=b+16|0;ta=b+52|0;L=b+8|0;M=b+9|0;sa=b+56|0;fa=b+36|0;ha=b+40|0;ia=b+44|0;ka=b+48|0;qa=b+132|0;S=b+120|0;r=b+15|0;ea=b+116|0;s=b+23|0;T=b+148|0;U=b+152|0;t=b+20|0;u=b+17|0;aa=b+84|0;ba=b+164|0;N=b+10|0;O=b+11|0;p=Z+2|0;da=Z+1|0;$=b+80|0;Y=Z+3|0;x=b+18|0;y=b+19|0;W=b+168|0;z=b+22|0;P=b+156|0;f=0;V=0;while(1){g=c[Q>>2]|0;if(g){k=(la[g&31](c[wa>>2]|0,b)|0)==0;f=c[xa>>2]|0;if(!k){l=268;break}}c[va>>2]=c[ca>>2];a[q>>0]=0;a[E>>0]=(a[E>>0]|0)+1<<24>>24;c[xa>>2]=f+(d[K>>0]|0);k=ja[c[na>>2]&31](b)|0;c[xa>>2]=(c[xa>>2]|0)+(d[(c[R>>2]|0)+k>>0]|0);h=a[q>>0]|0;f=k;k=(c[_>>2]|0)+(k<<2)|0;while(1){g=h&-2;a[q>>0]=g;i=k+2|0;a:do switch(a[i>>0]|0){case 14:{c[ra>>2]=c[ma>>2];break}case 1:{c[ra>>2]=(ja[c[na>>2]&31](b)|0)+(d[w>>0]<<8);break}case 2:{c[ra>>2]=ja[c[na>>2]&31](b)|0;c[ra>>2]=((ja[c[na>>2]&31](b)|0)<<8)+(c[ra>>2]|0);break}case 3:{c[ra>>2]=d[b>>0]<<8|d[A>>0];break}case 4:{c[ra>>2]=d[H>>0]<<8|d[D>>0];break}case 5:{c[ra>>2]=d[J>>0]<<8|d[I>>0];break}case 6:{g=g&255;do if(!(g&2))if(!(g&4)){g=J;h=d[I>>0]|0;break}else{g=O;h=d[N>>0]|0;break}else{g=M;h=d[L>>0]|0}while(0);c[ra>>2]=d[g>>0]<<8|h;break}case 7:{g=g&255;if(g&2|0){j=ja[c[na>>2]&31](b)|0;j=(j^128)+65408+(d[M>>0]<<8|d[L>>0])&65535;c[sa>>2]=j;c[ra>>2]=j;break a}if(!(g&4)){c[ra>>2]=d[J>>0]<<8|d[I>>0];break a}else{j=ja[c[na>>2]&31](b)|0;j=(j^128)+65408+(d[O>>0]<<8|d[N>>0])&65535;c[sa>>2]=j;c[ra>>2]=j;break a}}case 8:{c[ra>>2]=ja[c[na>>2]&31](b)|0;break}case 9:{c[ra>>2]=d[A>>0];break}case 10:{h=a[I>>0]|0;j=d[J>>0]<<8|h&255;c[ra>>2]=j;a[I>>0]=h+1<<24>>24;a[J>>0]=(j+1|0)>>>8;break}case 11:{h=a[I>>0]|0;j=d[J>>0]<<8|h&255;c[ra>>2]=j;a[I>>0]=h+-1<<24>>24;a[J>>0]=(j+65535|0)>>>8;break}case 12:{c[ra>>2]=(ja[c[na>>2]&31](b)|0)+65280;break}case 13:{c[ra>>2]=d[A>>0]|65280;break}default:{}}while(0);j=k+1|0;g=a[j>>0]|0;do switch(g<<24>>24){case 25:{h=d[w>>0]<<8|a[F>>0]&15;c[ua>>2]=h;g=a[G>>0]|0;h=h|g<<1&255&-128&255|g<<5&64;za=(g&16)==0;h=za?h:h|32;if((g&66)!=0|za^1)c[ua>>2]=h;if(g&1)c[ua>>2]=h+16;break}case 8:case 6:case 5:case 4:case 3:case 2:case 1:{c[ua>>2]=d[b+((g&255)+-1)>>0];break}case 7:{c[ua>>2]=la[c[oa>>2]&31](b,c[ra>>2]|0)|0;break}case 9:{c[ua>>2]=d[b>>0]<<8|d[A>>0];break}case 10:{c[ua>>2]=d[H>>0]<<8|d[D>>0];break}case 11:{c[ua>>2]=d[J>>0]<<8|d[I>>0];break}case 12:{c[ua>>2]=d[w>>0]<<8|d[G>>0];break}case 13:{c[ua>>2]=c[ma>>2];break}case 14:{c[ua>>2]=la[c[oa>>2]&31](b,c[ra>>2]|0)|0;c[ua>>2]=((la[c[oa>>2]&31](b,(c[ra>>2]|0)+1&65535)|0)<<8)+(c[ua>>2]|0);break}case 15:{c[ua>>2]=ja[c[na>>2]&31](b)|0;break}case 16:{c[ua>>2]=ja[c[na>>2]&31](b)|0;c[ua>>2]=((ja[c[na>>2]&31](b)|0)<<8)+(c[ua>>2]|0);break}case 17:{g=d[q>>0]|0;do if(!(g&2))if(!(g&4)){g=J;h=d[I>>0]|0;break}else{g=O;h=d[N>>0]|0;break}else{g=M;h=d[L>>0]|0}while(0);c[ua>>2]=d[g>>0]<<8|h;break}case 18:{g=d[q>>0]|0;if(!(g&2))g=(g&4|0)==0?J:O;else g=M;c[ua>>2]=d[g>>0];break}case 19:{g=d[q>>0]|0;if(!(g&2))g=(g&4|0)==0?I:N;else g=L;c[ua>>2]=d[g>>0];break}case 20:{za=d[B>>0]|0;c[ua>>2]=za;za=((a[C>>0]|0)==0?0:4)|(a[63488+za>>0]&-24|a[G>>0]&1)&255;c[ta>>2]=za;a[G>>0]=za;break}case 21:{za=(a[B>>0]&-128|a[E>>0]&127)&255;c[ua>>2]=za;za=((a[C>>0]|0)==0?0:4)|(a[63488+za>>0]&-24|a[G>>0]&1)&255;c[ta>>2]=za;a[G>>0]=za;break}case 22:{c[ua>>2]=0;break}case 23:{c[ua>>2]=la[c[oa>>2]&31](b,c[ma>>2]|0)|0;c[ua>>2]=((la[c[oa>>2]&31](b,(c[ma>>2]|0)+1&65535)|0)<<8)+(c[ua>>2]|0);c[ma>>2]=(c[ma>>2]|0)+2&65535;break}case 24:{c[ua>>2]=((ja[c[na>>2]&31](b)|0)^128)+65408&65535;break}default:{}}while(0);do switch(a[k+3>>0]|0){case 85:{l=c[ua>>2]|0;l=l>>>4&15|l<<4&240;c[ua>>2]=l;l=(l|0)==0?64:0;c[ta>>2]=l;a[G>>0]=l;l=184;break}case 1:{l=c[ua>>2]|0;c[ua>>2]=c[fa>>2];c[fa>>2]=l;l=184;break}case 2:{l=d[b>>0]<<8|d[A>>0];za=c[ha>>2]|0;a[A>>0]=za;a[b>>0]=za>>>8;c[ha>>2]=l;l=d[H>>0]<<8|d[D>>0];za=c[ia>>2]|0;a[D>>0]=za;a[H>>0]=za>>>8;c[ia>>2]=l;l=d[J>>0]<<8|d[I>>0];za=c[ka>>2]|0;a[I>>0]=za;a[J>>0]=za>>>8;c[ka>>2]=l;l=184;break}case 3:{a[D>>0]=a[I>>0]|0;a[H>>0]=a[J>>0]|0;l=c[ua>>2]|0;a[I>>0]=l;a[J>>0]=l>>>8;l=184;break}case 4:{l=(la[c[oa>>2]&31](b,c[ma>>2]|0)|0)+((la[c[oa>>2]&31](b,(c[ma>>2]|0)+1&65535)|0)<<8)|0;pa[c[qa>>2]&31](b,c[ma>>2]|0,c[ua>>2]&255);pa[c[qa>>2]&31](b,(c[ma>>2]|0)+1&65535,(c[ua>>2]|0)>>>8&255);c[ua>>2]=l;l=184;break}case 5:{za=d[w>>0]|0;j=c[ua>>2]|0;l=j^za;j=j+za|0;c[ua>>2]=j;l=(j^l)&16|a[63488+j>>0]&-23&255|((j^za)&(l^128))>>>5&4;c[ta>>2]=l;a[G>>0]=l;l=184;break}case 6:{za=d[w>>0]|0;j=c[ua>>2]|0;l=j^za;j=za+(a[G>>0]&1)+j|0;c[ua>>2]=j;l=(j^l)&16|a[63488+j>>0]&-23&255|((j^za)&(l^128))>>>5&4;c[ta>>2]=l;a[G>>0]=l;l=184;break}case 7:{j=c[ua>>2]^255;za=d[w>>0]|0;l=j^za;j=j+1+za|0;c[ua>>2]=j;l=((j^l)&16|a[63488+j>>0]&-21&255|((j^za)&(l^128))>>>5&4)^1;c[ta>>2]=l;a[G>>0]=l;l=184;break}case 8:{j=c[ua>>2]^255;za=d[w>>0]|0;l=j^za;j=j+((a[G>>0]&1^1)&255)+za|0;c[ua>>2]=j;l=((j^l)&16|a[63488+j>>0]&-21&255|((j^za)&(l^128))>>>5&4)^1;c[ta>>2]=l;a[G>>0]=l;l=184;break}case 9:{l=c[ua>>2]&d[w>>0];c[ua>>2]=l;l=a[63488+l>>0]&-4;c[ta>>2]=l&255;a[G>>0]=l;l=184;break}case 10:{l=c[ua>>2]|d[w>>0];c[ua>>2]=l;l=a[63488+l>>0]&-20;c[ta>>2]=l&255;a[G>>0]=l;l=184;break}case 11:{l=c[ua>>2]^d[w>>0];c[ua>>2]=l;l=a[63488+l>>0]&-20;c[ta>>2]=l&255;a[G>>0]=l;l=184;break}case 12:{i=c[ua>>2]^255;l=a[w>>0]|0;j=l&255;za=i^j;i=i+1+j|0;c[ua>>2]=i;za=((i^za)&16|a[63488+i>>0]&-61&255|((i^j)&(za^128))>>>5&4)^1;c[ta>>2]=za;a[G>>0]=za|l&40;l=184;break}case 13:{za=c[ua>>2]|0;l=za+1|0;c[ua>>2]=l;l=(l&(za^128))>>>5&4|(l^za)&16|a[63488+l>>0]&-23&255;c[ta>>2]=l;a[G>>0]=l&252|a[G>>0]&1;l=184;break}case 14:{za=c[ua>>2]|0;l=za+255|0;c[ua>>2]=l;l=(za&0-za)>>>5&4|(za^16^l)&16|a[63488+l>>0]&-21&255;c[ta>>2]=l^1;a[G>>0]=l&254|a[G>>0]&1;l=184;break}case 15:{if(!(c[S>>2]&1)){g=d[G>>0]|0;c[ta>>2]=g}else g=c[ta>>2]|0;h=a[G>>0]|0;i=g&1;if(!(h&2)){c[ta>>2]=0;if((h&16)==0?(n=c[ua>>2]|0,(n&14)>>>0<=9):0){h=n;g=0}else{h=(c[ua>>2]|0)+6|0;c[ua>>2]=h;c[ta>>2]=16;g=16}if((i|0)!=0|h>>>0>153){h=h+96|0;c[ua>>2]=h;g=g|1;c[ta>>2]=g}}else{c[ta>>2]=2;if((h&16)==0?(m=c[ua>>2]|0,(m&14)>>>0<=9):0){h=m;g=2}else{h=(c[ua>>2]|0)+250^256;c[ua>>2]=h;c[ta>>2]=18;g=18}if((i|0)!=0|h>>>0>153){h=h+160^256;c[ua>>2]=h;g=g|1;c[ta>>2]=g}}a[G>>0]=g+(a[63488+h>>0]&-20&255);l=184;break}case 16:{l=c[ua>>2]^255;c[ua>>2]=l;l=a[63488+l>>0]&58|a[G>>0]&-59;c[ta>>2]=l&255;a[G>>0]=l;l=184;break}case 17:{j=c[ua>>2]|0;za=j^255;a[w>>0]=0;l=za+1|0;c[ua>>2]=l;l=((l&j)>>>5&4|(l^za)&16|a[63488+l>>0]&-21&255)^1;c[ta>>2]=l;a[G>>0]=l;l=184;break}case 18:{za=c[ra>>2]|0;c[sa>>2]=za;j=c[ua>>2]|0;l=j+za|0;c[ua>>2]=l;l=(l^(j^za))>>>8&16|a[63488+(l>>>8)>>0]&41|a[G>>0]&-60&255;c[ta>>2]=l;a[G>>0]=l;l=184;break}case 19:{i=a[G>>0]&1;za=c[ra>>2]|0;c[sa>>2]=za;j=c[ua>>2]|0;l=j^za;j=za+i+j|0;c[ua>>2]=j;l=(j^l)>>>8&16|a[63488+(j>>>8)>>0]&-87&255|((j&65535|0)==0?64:0)|((j^za)&(l^32768))>>>13&4;c[ta>>2]=l;a[G>>0]=l;l=184;break}case 20:{j=(a[G>>0]&1^1)&255;i=c[ua>>2]^65535;za=c[ra>>2]|0;c[sa>>2]=za;l=za^i;j=i+j+za|0;c[ua>>2]=j;l=((j^l)>>>8&16|a[63488+(j>>>8)>>0]&-85&255|((j&65535|0)==0?64:0)|((j^za)&(l^32768))>>>13&4)^1;c[ta>>2]=l;a[G>>0]=l;l=184;break}case 21:{c[ua>>2]=(c[ua>>2]|0)+1&65535;l=184;break}case 22:{c[ua>>2]=(c[ua>>2]|0)+65535&65535;l=184;break}case 23:{c[ta>>2]=a[G>>0]&-63&255;za=la[c[oa>>2]&31](b,d[J>>0]<<8|d[I>>0])|0;c[ua>>2]=za;pa[c[qa>>2]&31](b,d[H>>0]<<8|d[D>>0],za);za=(c[ua>>2]|0)+(d[w>>0]|0)|0;c[ua>>2]=za;l=(d[J>>0]<<8|d[I>>0])+1|0;a[I>>0]=l;a[J>>0]=l>>>8;l=(d[H>>0]<<8|d[D>>0])+1|0;a[D>>0]=l;a[H>>0]=l>>>8;l=(d[b>>0]<<8|d[A>>0])+-1|0;a[A>>0]=l;a[b>>0]=l>>>8;a[G>>0]=za<<4&32|za&8|a[G>>0]&-63&255|((l&65535|0)==0?0:4);l=184;break}case 24:{c[ta>>2]=a[G>>0]&-63&255;za=la[c[oa>>2]&31](b,d[J>>0]<<8|d[I>>0])|0;c[ua>>2]=za;pa[c[qa>>2]&31](b,d[H>>0]<<8|d[D>>0],za);za=(c[ua>>2]|0)+(d[w>>0]|0)|0;c[ua>>2]=za;l=(d[J>>0]<<8|d[I>>0])+-1|0;a[I>>0]=l;a[J>>0]=l>>>8;l=(d[H>>0]<<8|d[D>>0])+-1|0;a[D>>0]=l;a[H>>0]=l>>>8;l=(d[b>>0]<<8|d[A>>0])+-1|0;a[A>>0]=l;a[b>>0]=l>>>8;a[G>>0]=za<<4&32|za&8|a[G>>0]&-63&255|((l&65535|0)==0?0:4);l=184;break}case 25:{c[ta>>2]=1;l=(la[c[oa>>2]&31](b,d[J>>0]<<8|d[I>>0])|0)^255;h=d[w>>0]|0;i=l^h;l=l+h+(c[ta>>2]&1)|0;za=l^i;j=za&16|a[63488+l>>0]&-62&255;c[ta>>2]=((l^h)&(i^128))>>>5&4|j;za=l-(za>>>4&1)|0;c[ua>>2]=za;l=(d[J>>0]<<8|d[I>>0])+1|0;a[I>>0]=l;a[J>>0]=l>>>8;l=(d[b>>0]<<8|d[A>>0])+-1|0;a[A>>0]=l;a[b>>0]=l>>>8;a[G>>0]=za&8|j|za<<4&32|a[G>>0]&1|((l&65535|0)==0?0:4);l=184;break}case 26:{c[ta>>2]=1;l=(la[c[oa>>2]&31](b,d[J>>0]<<8|d[I>>0])|0)^255;h=d[w>>0]|0;i=l^h;l=l+h+(c[ta>>2]&1)|0;za=l^i;j=za&16|a[63488+l>>0]&-62&255;c[ta>>2]=((l^h)&(i^128))>>>5&4|j;za=l-(za>>>4&1)|0;c[ua>>2]=za;l=(d[J>>0]<<8|d[I>>0])+-1|0;a[I>>0]=l;a[J>>0]=l>>>8;l=(d[b>>0]<<8|d[A>>0])+-1|0;a[A>>0]=l;a[b>>0]=l>>>8;a[G>>0]=za&8|j|za<<4&32|a[G>>0]&1|((l&65535|0)==0?0:4);l=184;break}case 27:{c[va>>2]=c[ua>>2];l=184;break}case 28:{if(!(ja[c[64e3+((f>>>3&3)<<2)>>2]&31](b)|0))l=184;else{c[xa>>2]=(c[xa>>2]|0)+(d[(c[R>>2]|0)+1286>>0]|0);c[va>>2]=c[ua>>2];l=184}break}case 29:{if(!(ja[c[64016+((f>>>3&3)<<2)>>2]&31](b)|0))l=184;else{c[xa>>2]=(c[xa>>2]|0)+(d[(c[R>>2]|0)+1286>>0]|0);c[va>>2]=c[ua>>2];l=184}break}case 30:{l=(c[va>>2]|0)+65408+(c[ua>>2]^128)&65535;c[sa>>2]=l;c[va>>2]=l;l=184;break}case 31:{if(!(ja[c[64e3+((f>>>3&3)<<2)>>2]&31](b)|0))l=184;else{c[xa>>2]=(c[xa>>2]|0)+(d[(c[R>>2]|0)+1284>>0]|0);l=(c[va>>2]|0)+65408+(c[ua>>2]^128)&65535;c[sa>>2]=l;c[va>>2]=l;l=184}break}case 32:{za=(a[b>>0]|0)+-1<<24>>24;a[b>>0]=za;if(!(za<<24>>24))l=184;else{c[xa>>2]=(c[xa>>2]|0)+(d[(c[R>>2]|0)+1280>>0]|0);l=(c[va>>2]|0)+65408+(c[ua>>2]^128)&65535;c[sa>>2]=l;c[va>>2]=l;l=184}break}case 33:{l=(c[ma>>2]|0)+65534&65535;c[ma>>2]=l;pa[c[qa>>2]&31](b,l,c[va>>2]&255);pa[c[qa>>2]&31](b,(c[ma>>2]|0)+1&65535,(c[va>>2]|0)>>>8&255);c[va>>2]=c[ua>>2];l=184;break}case 34:{if(!(ja[c[64e3+((f>>>3&3)<<2)>>2]&31](b)|0))l=184;else{c[xa>>2]=(c[xa>>2]|0)+(d[(c[R>>2]|0)+1282>>0]|0);l=(c[ma>>2]|0)+65534&65535;c[ma>>2]=l;pa[c[qa>>2]&31](b,l,c[va>>2]&255);pa[c[qa>>2]&31](b,(c[ma>>2]|0)+1&65535,(c[va>>2]|0)>>>8&255);c[va>>2]=c[ua>>2];l=184}break}case 35:{if(!(ja[c[64016+((f>>>3&3)<<2)>>2]&31](b)|0))l=184;else{c[xa>>2]=(c[xa>>2]|0)+(d[(c[R>>2]|0)+1282>>0]|0);l=(c[ma>>2]|0)+65534&65535;c[ma>>2]=l;pa[c[qa>>2]&31](b,l,c[va>>2]&255);pa[c[qa>>2]&31](b,(c[ma>>2]|0)+1&65535,(c[va>>2]|0)>>>8&255);c[va>>2]=c[ua>>2];l=184}break}case 36:{if(!(ja[c[64e3+((f>>>3&3)<<2)>>2]&31](b)|0))l=184;else{c[xa>>2]=(c[xa>>2]|0)+(d[(c[R>>2]|0)+1288>>0]|0);c[va>>2]=la[c[oa>>2]&31](b,c[ma>>2]|0)|0;l=(la[c[oa>>2]&31](b,(c[ma>>2]|0)+1&65535)|0)<<8;c[va>>2]=(c[va>>2]|0)+l;c[ma>>2]=(c[ma>>2]|0)+2&65535;l=184}break}case 37:{if(!(ja[c[64016+((f>>>3&3)<<2)>>2]&31](b)|0))l=184;else{c[xa>>2]=(c[xa>>2]|0)+(d[(c[R>>2]|0)+1288>>0]|0);c[va>>2]=la[c[oa>>2]&31](b,c[ma>>2]|0)|0;l=(la[c[oa>>2]&31](b,(c[ma>>2]|0)+1&65535)|0)<<8;c[va>>2]=(c[va>>2]|0)+l;c[ma>>2]=(c[ma>>2]|0)+2&65535;l=184}break}case 39:case 38:{c[va>>2]=c[ua>>2];a[r>>0]=a[C>>0]|0;l=184;break}case 40:{l=(c[ma>>2]|0)+65534&65535;c[ma>>2]=l;pa[c[qa>>2]&31](b,l,c[va>>2]&255);pa[c[qa>>2]&31](b,(c[ma>>2]|0)+1&65535,(c[va>>2]|0)>>>8&255);c[va>>2]=(c[ea>>2]|0)+(f&56);l=184;break}case 41:{l=c[ua>>2]|0;l=l>>>7&1|l<<1;c[ua>>2]=l;l=a[63488+l>>0]&41|a[G>>0]&-44;c[ta>>2]=l&255;a[G>>0]=l;l=184;break}case 42:{za=c[ua>>2]|0;l=za&1;l=(l<<7)+(za>>>1)+(l<<8)|0;c[ua>>2]=l;l=a[63488+l>>0]&41|a[G>>0]&-44;c[ta>>2]=l&255;a[G>>0]=l;l=184;break}case 43:{l=a[G>>0]|0;za=c[ua>>2]<<1|l&1;c[ua>>2]=za;l=a[63488+za>>0]&41|l&-44;c[ta>>2]=l&255;a[G>>0]=l;l=184;break}case 44:{za=c[ua>>2]|0;l=a[G>>0]|0;za=(za<<8&256)+(za>>>1)+(l<<7&255)|0;c[ua>>2]=za;l=a[63488+za>>0]&41|l&-44;c[ta>>2]=l&255;a[G>>0]=l;l=184;break}case 45:{l=c[ua>>2]|0;l=l>>>7&1|l<<1;c[ua>>2]=l;l=a[63488+l>>0]&-19;c[ta>>2]=l&255;a[G>>0]=l;l=184;break}case 46:{za=c[ua>>2]|0;l=za&1;l=(l<<7)+(za>>>1)+(l<<8)|0;c[ua>>2]=l;l=a[63488+l>>0]&-19;c[ta>>2]=l&255;a[G>>0]=l;l=184;break}case 47:{l=c[ua>>2]<<1|a[G>>0]&1;c[ua>>2]=l;l=a[63488+l>>0]&-19;c[ta>>2]=l&255;a[G>>0]=l;l=184;break}case 48:{l=c[ua>>2]|0;l=(l<<8&256)+(l>>>1)+(a[G>>0]<<7&255)|0;c[ua>>2]=l;l=a[63488+l>>0]&-19;c[ta>>2]=l&255;a[G>>0]=l;l=184;break}case 49:{l=c[ua>>2]<<1;c[ua>>2]=l;l=a[63488+l>>0]&-19;c[ta>>2]=l&255;a[G>>0]=l;l=184;break}case 50:{l=c[ua>>2]|0;l=(l>>>1)+(l&128)+(l<<8&256)|0;c[ua>>2]=l;l=a[63488+l>>0]&-19;c[ta>>2]=l&255;a[G>>0]=l;l=184;break}case 51:{l=c[ua>>2]<<1|1;c[ua>>2]=l;l=a[63488+l>>0]&-19;c[ta>>2]=l&255;a[G>>0]=l;l=184;break}case 52:{l=c[ua>>2]|0;l=(l<<8&256)+(l>>>1)|0;c[ua>>2]=l;l=a[63488+l>>0]&-19;c[ta>>2]=l&255;a[G>>0]=l;l=184;break}case 53:{j=c[ua>>2]|0;za=a[w>>0]|0;l=j>>>4&15|za&-16&255;a[w>>0]=l;c[ua>>2]=j<<4&240|za&15;l=a[63488+l>>0]&-20|a[G>>0]&1;c[ta>>2]=l&255;a[G>>0]=l;l=184;break}case 54:{l=a[w>>0]|0;za=((l&255)<<8)+(c[ua>>2]|0)|0;l=za&15|l&-16&255;a[w>>0]=l;c[ua>>2]=za>>>4&255;l=a[63488+l>>0]&-20|a[G>>0]&1;c[ta>>2]=l&255;a[G>>0]=l;l=184;break}case 55:{i=c[ua>>2]&1<<(f>>>3&7);g=((i|0)==0?68:0)|a[G>>0]&1;c[ta>>2]=g;if((a[j>>0]|0)==7){h=g|i&128;g=(c[sa>>2]|0)>>>8&40}else{h=g;g=i&168}a[G>>0]=h|g;l=184;break}case 56:{c[ua>>2]=c[ua>>2]&~(1<<(f>>>3&7));l=184;break}case 57:{c[ua>>2]=c[ua>>2]|1<<(f>>>3&7);l=184;break}case 58:{c[xa>>2]=(c[xa>>2]|0)+(d[s>>0]|0);g=la[c[T>>2]&31](c[wa>>2]|0,c[ra>>2]|0)|0;c[ua>>2]=g;if((a[i>>0]|0)==1)l=184;else{l=a[63488+g>>0]&-20|a[G>>0]&1;c[ta>>2]=l&255;a[G>>0]=l;l=184}break}case 59:{c[xa>>2]=(c[xa>>2]|0)+(d[s>>0]|0);pa[c[U>>2]&31](c[wa>>2]|0,c[ra>>2]|0,c[ua>>2]|0);l=184;break}case 60:{c[xa>>2]=(c[xa>>2]|0)+(d[s>>0]|0);l=la[c[T>>2]&31](c[wa>>2]|0,c[ra>>2]|0)|0;c[ua>>2]=l;pa[c[qa>>2]&31](b,d[J>>0]<<8|d[I>>0],l);ud(b,1);l=184;break}case 62:{c[xa>>2]=(c[xa>>2]|0)+(d[s>>0]|0);l=la[c[T>>2]&31](c[wa>>2]|0,c[ra>>2]|0)|0;c[ua>>2]=l;pa[c[qa>>2]&31](b,d[J>>0]<<8|d[I>>0],l);ud(b,-1);l=184;break}case 61:{l=la[c[oa>>2]&31](b,d[J>>0]<<8|d[I>>0])|0;c[ua>>2]=l;c[xa>>2]=(c[xa>>2]|0)+(d[s>>0]|0);pa[c[U>>2]&31](c[wa>>2]|0,c[ra>>2]|0,l);ud(b,1);l=184;break}case 63:{l=la[c[oa>>2]&31](b,d[J>>0]<<8|d[I>>0])|0;c[ua>>2]=l;c[xa>>2]=(c[xa>>2]|0)+(d[s>>0]|0);pa[c[U>>2]&31](c[wa>>2]|0,c[ra>>2]|0,l);ud(b,-1);l=184;break}case 64:{l=d[G>>0]|0;l=(l&197|a[w>>0]&40|l<<4&16)^1;c[ta>>2]=l;a[G>>0]=l;l=184;break}case 65:{l=a[G>>0]&-60|a[w>>0]&40|1;c[ta>>2]=l&255;a[G>>0]=l;l=184;break}case 66:{c[va>>2]=c[ca>>2];a[t>>0]=1;l=184;break}case 67:{c[va>>2]=c[ca>>2];a[t>>0]=2;l=184;break}case 68:{a[C>>0]=0;a[r>>0]=0;c[ca>>2]=c[va>>2];a[q>>0]=1;a[E>>0]=(a[E>>0]|0)+1<<24>>24;c[xa>>2]=(c[xa>>2]|0)+(d[K>>0]|0);g=ja[c[na>>2]&31](b)|0;c[xa>>2]=(c[xa>>2]|0)+(d[(c[R>>2]|0)+g>>0]|0);f=g;g=(c[_>>2]|0)+(g<<2)|0;break}case 69:{a[C>>0]=1;a[r>>0]=1;c[ca>>2]=c[va>>2];a[q>>0]=1;a[E>>0]=(a[E>>0]|0)+1<<24>>24;c[xa>>2]=(c[xa>>2]|0)+(d[K>>0]|0);g=ja[c[na>>2]&31](b)|0;c[xa>>2]=(c[xa>>2]|0)+(d[(c[R>>2]|0)+g>>0]|0);f=g;g=(c[_>>2]|0)+(g<<2)|0;break}case 70:{if((d[u>>0]|0)<3){a[u>>0]=0;l=184}else l=184;break}case 71:{if((d[u>>0]|0)<3){a[u>>0]=1;l=184}else l=184;break}case 72:{if((d[u>>0]|0)<3){a[u>>0]=2;l=184}else l=184;break}case 73:{f=d[q>>0]|0;b:do if(!(f&2)){if(!(f&4)){c[ra>>2]=d[J>>0]<<8|d[I>>0];a[E>>0]=(a[E>>0]|0)+1<<24>>24;c[xa>>2]=(c[xa>>2]|0)+(d[K>>0]|0);f=ja[c[na>>2]&31](b)|0;c[xa>>2]=(c[xa>>2]|0)+(d[(c[R>>2]|0)+(f+512)>>0]|0);a[p>>0]=0;za=(f&7)+1&255;a[da>>0]=za;k=a[(c[$>>2]|0)+(f>>>3&31)>>0]|0;a[Y>>0]=k;a[Z>>0]=k<<24>>24==55?0:za;break}f=ja[c[na>>2]&31](b)|0;f=(f^128)+65408+(d[O>>0]<<8|d[N>>0])&65535;c[sa>>2]=f;c[ra>>2]=f;f=ja[c[na>>2]&31](b)|0;c[xa>>2]=(c[xa>>2]|0)+(d[(c[R>>2]|0)+(f+768)>>0]|0);a[p>>0]=0;a[da>>0]=7;za=a[(c[$>>2]|0)+(f>>>3&31)>>0]|0;a[Y>>0]=za;za=za<<24>>24==55?0:(f&7)+1|0;a[Z>>0]=za;switch(za&15){case 7:case 0:break b;default:{}}a[q>>0]=a[q>>0]|8}else{f=ja[c[na>>2]&31](b)|0;f=(f^128)+65408+(d[M>>0]<<8|d[L>>0])&65535;c[sa>>2]=f;c[ra>>2]=f;f=ja[c[na>>2]&31](b)|0;c[xa>>2]=(c[xa>>2]|0)+(d[(c[R>>2]|0)+(f+768)>>0]|0);a[p>>0]=0;a[da>>0]=7;za=a[(c[$>>2]|0)+(f>>>3&31)>>0]|0;a[Y>>0]=za;za=za<<24>>24==55?0:(f&7)+1|0;a[Z>>0]=za;switch(za&15){case 7:case 0:break b;default:{}}a[q>>0]=a[q>>0]|8}while(0);a[q>>0]=a[q>>0]|1;g=Z;break}case 74:{c[ca>>2]=(c[va>>2]|0)+65535&65535;a[q>>0]=3;a[E>>0]=(a[E>>0]|0)+1<<24>>24;c[xa>>2]=(c[xa>>2]|0)+(d[K>>0]|0);g=ja[c[na>>2]&31](b)|0;c[xa>>2]=(c[xa>>2]|0)+(d[(c[R>>2]|0)+(g+256)>>0]|0);f=g;g=(c[_>>2]|0)+(g<<2)|0;break}case 75:{c[ca>>2]=(c[va>>2]|0)+65535&65535;a[q>>0]=1;a[E>>0]=(a[E>>0]|0)+1<<24>>24;c[xa>>2]=(c[xa>>2]|0)+(d[K>>0]|0);g=ja[c[na>>2]&31](b)|0;c[xa>>2]=(c[xa>>2]|0)+(d[(c[R>>2]|0)+(g+1024)>>0]|0);f=g;g=(c[aa>>2]|0)+(g<<2)|0;break}case 76:{c[ca>>2]=(c[va>>2]|0)+65535&65535;a[q>>0]=5;a[E>>0]=(a[E>>0]|0)+1<<24>>24;c[xa>>2]=(c[xa>>2]|0)+(d[K>>0]|0);g=ja[c[na>>2]&31](b)|0;c[xa>>2]=(c[xa>>2]|0)+(d[(c[R>>2]|0)+(g+256)>>0]|0);f=g;g=(c[_>>2]|0)+(g<<2)|0;break}case 77:{g=c[ba>>2]|0;if(!g)l=184;else{la[g&31](c[wa>>2]|0,b)|0;l=184}break}case 78:{l=c[ua>>2]&d[w>>0];c[ua>>2]=l;l=a[63488+l>>0]&-4;c[ta>>2]=l&255;a[G>>0]=l;l=184;break}case 79:{c[xa>>2]=(c[xa>>2]|0)+(d[s>>0]|0);l=c[ua>>2]&(la[c[T>>2]&31](c[wa>>2]|0,c[ra>>2]|0)|0);c[ua>>2]=l;l=a[63488+l>>0]&-4;c[ta>>2]=l&255;a[G>>0]=l;l=184;break}case 80:{l=la[c[oa>>2]&31](b,d[J>>0]<<8|d[I>>0])|0;c[ua>>2]=l;c[xa>>2]=(c[xa>>2]|0)+(d[s>>0]|0);pa[c[U>>2]&31](c[wa>>2]|0,c[ra>>2]|0,l);l=(d[J>>0]<<8|d[I>>0])+1|0;a[I>>0]=l;a[J>>0]=l>>>8;a[A>>0]=(a[A>>0]|0)+1<<24>>24;l=a[b>>0]|0;za=l&255;l=l+-1<<24>>24;a[b>>0]=l;l=((za+31^za)&16|(c[ua>>2]|0)>>>6&2|a[63488+(l&255)>>0]&-19&255)^16;c[ta>>2]=l;a[G>>0]=l;l=184;break}case 81:{l=la[c[oa>>2]&31](b,d[J>>0]<<8|d[I>>0])|0;c[ua>>2]=l;c[xa>>2]=(c[xa>>2]|0)+(d[s>>0]|0);pa[c[U>>2]&31](c[wa>>2]|0,c[ra>>2]|0,l);l=(d[J>>0]<<8|d[I>>0])+-1|0;a[I>>0]=l;a[J>>0]=l>>>8;a[A>>0]=(a[A>>0]|0)+1<<24>>24;l=a[b>>0]|0;za=l&255;l=l+-1<<24>>24;a[b>>0]=l;l=((za+31^za)&16|(c[ua>>2]|0)>>>6&2|a[63488+(l&255)>>0]&-19&255)^16;c[ta>>2]=l;a[G>>0]=l;l=184;break}case 82:{l=c[ua>>2]|0;c[ua>>2]=v(l>>>8&255,l&255)|0;l=184;break}case 83:{l=v(c[ua>>2]|0,d[w>>0]|0)|0;c[ua>>2]=l;l=a[G>>0]&20|l>>>0>255|((l|0)==0&1)<<6;c[ta>>2]=l;a[G>>0]=l;l=184;break}case 84:{l=v(c[ra>>2]|0,c[ua>>2]|0)|0;c[ua>>2]=l;l=((l|0)==0&1)<<6|l>>>0>65535|a[G>>0]&20;c[ta>>2]=l;a[G>>0]=l;l=184;break}default:l=184}while(0);if((l|0)==184){l=0;g=a[k>>0]|0;c:do switch(g<<24>>24){case 25:{i=c[ua>>2]|0;a[F>>0]=i&15;a[w>>0]=i>>>8;g=i>>>5&2|i>>>1&64;Aa=(i&32|0)==0;h=g|16;j=Aa?g:h;i=(i&16|0)==0;za=j|1;c[ta>>2]=i?(Aa?g:h):za;a[G>>0]=i?j:za;break}case 8:case 6:case 5:case 4:case 3:case 2:case 1:{a[b+((g&255)+-1)>>0]=c[ua>>2];break}case 7:{pa[c[qa>>2]&31](b,c[ra>>2]|0,c[ua>>2]|0);break}case 9:{Aa=c[ua>>2]|0;a[A>>0]=Aa;a[b>>0]=Aa>>>8;break}case 10:{Aa=c[ua>>2]|0;a[D>>0]=Aa;a[H>>0]=Aa>>>8;break}case 11:{Aa=c[ua>>2]|0;a[I>>0]=Aa;a[J>>0]=Aa>>>8;break}case 12:{Aa=c[ua>>2]|0;a[G>>0]=Aa;a[w>>0]=Aa>>>8;break}case 13:{c[ma>>2]=c[ua>>2]&65535;break}case 14:{pa[c[qa>>2]&31](b,c[ra>>2]|0,c[ua>>2]&255);pa[c[qa>>2]&31](b,(c[ra>>2]|0)+1&65535,(c[ua>>2]|0)>>>8&255);break}case 15:{h=d[q>>0]|0;if(h&2|0){Aa=c[ua>>2]|0;a[L>>0]=Aa;a[M>>0]=Aa>>>8;break c}g=c[ua>>2]|0;i=g&255;if(!(h&4)){a[I>>0]=i;a[J>>0]=g>>>8;break c}else{a[N>>0]=i;a[O>>0]=g>>>8;break c}}case 16:{g=d[q>>0]|0;if(g&2|0){a[M>>0]=c[ua>>2];break c}h=c[ua>>2]&255;if(!(g&4)){a[J>>0]=h;break c}else{a[O>>0]=h;break c}}case 17:{g=d[q>>0]|0;if(g&2|0){a[L>>0]=c[ua>>2];break c}h=c[ua>>2]&255;if(!(g&4)){a[I>>0]=h;break c}else{a[N>>0]=h;break c}}case 18:{a[B>>0]=c[ua>>2];break}case 19:{Aa=c[ua>>2]|0;a[E>>0]=Aa&127;a[B>>0]=Aa&128;break}case 20:{if(!(a[b>>0]|0)){Aa=a[G>>0]&42|68;c[ta>>2]=Aa&255;a[G>>0]=Aa;break c}if(!(a[x>>0]|0)){if(a[r>>0]|0?a[y>>0]|0:0)break c;c[va>>2]=c[ca>>2]}break}case 21:{if(a[b>>0]|0){c[va>>2]=c[ca>>2];c[xa>>2]=(c[xa>>2]|0)+(d[(c[R>>2]|0)+1290>>0]|0)}break}case 22:{if(d[b>>0]<<8|d[A>>0]|0){c[va>>2]=c[ca>>2];c[xa>>2]=(c[xa>>2]|0)+(d[(c[R>>2]|0)+1290>>0]|0)}break}case 23:{if(d[b>>0]<<8|d[A>>0]|0?(a[G>>0]&64)==0:0){c[va>>2]=c[ca>>2];c[xa>>2]=(c[xa>>2]|0)+(d[(c[R>>2]|0)+1290>>0]|0)}break}case 24:{Aa=(c[ma>>2]|0)+65534&65535;c[ma>>2]=Aa;pa[c[qa>>2]&31](b,Aa,c[ua>>2]&255);pa[c[qa>>2]&31](b,(c[ma>>2]|0)+1&65535,(c[ua>>2]|0)>>>8&255);break}default:{}}while(0);g=d[q>>0]|0;if(g&8|0){a[q>>0]=g&247;pa[c[qa>>2]&31](b,c[ra>>2]|0,c[ua>>2]&255)}c[ca>>2]=c[va>>2];g=k}h=a[q>>0]|0;if(!(h&1))break;else k=g}f=c[W>>2]|0;if(f|0){if(((a[t>>0]|0)!=0?(a[x>>0]|0)==0:0)?(a[y>>0]|0)==0:0){if(!(ld(f,0,X)|0))f=e;else{f=(c[X>>2]|0)+(c[xa>>2]|0)|0;f=f>>>0<e>>>0?f:e}c[xa>>2]=f;f=c[W>>2]|0}nd(f,(c[xa>>2]|0)-V|0)}V=c[xa>>2]|0;f=a[x>>0]|0;d:do if(!(f<<24>>24)){if(a[r>>0]|0?(o=a[y>>0]|0,o<<24>>24):0){f=a[t>>0]|0;if(f<<24>>24){c[ca>>2]=(c[ca>>2]|0)+(f&255)&65535;a[t>>0]=0}switch(a[u>>0]|0){case 0:{if(c[S>>2]&2|0)a[y>>0]=o&-2;a[r>>0]=0;a[C>>0]=0;c[na>>2]=27;c[xa>>2]=V+2;break d}case 1:{if(c[S>>2]&2|0)a[y>>0]=o&-2;a[r>>0]=0;a[C>>0]=0;Aa=(c[ma>>2]|0)+65534&65535;c[ma>>2]=Aa;pa[c[qa>>2]&31](b,Aa,c[ca>>2]&255);pa[c[qa>>2]&31](b,(c[ma>>2]|0)+1&65535,(c[ca>>2]|0)>>>8&255);c[ca>>2]=56;a[E>>0]=(a[E>>0]|0)+1<<24>>24;Aa=(c[xa>>2]|0)+(d[K>>0]|0)|0;c[xa>>2]=Aa;c[xa>>2]=Aa+2+(d[z>>0]|0)+(d[(c[R>>2]|0)+255>>0]|0);break d}case 2:{if(c[S>>2]&2|0)a[y>>0]=o&-2;a[r>>0]=0;a[C>>0]=0;Aa=(c[ma>>2]|0)+65534&65535;c[ma>>2]=Aa;pa[c[qa>>2]&31](b,Aa,c[ca>>2]&255);pa[c[qa>>2]&31](b,(c[ma>>2]|0)+1&65535,(c[ca>>2]|0)>>>8&255);Aa=(d[B>>0]<<8)+(la[c[P>>2]&31](c[wa>>2]|0,2)|0)|0;c[ra>>2]=Aa;c[ca>>2]=la[c[oa>>2]&31](b,Aa)|0;c[ca>>2]=((la[c[oa>>2]&31](b,(c[ra>>2]|0)+1&65535)|0)<<8)+(c[ca>>2]|0);a[E>>0]=(a[E>>0]|0)+1<<24>>24;Aa=(c[xa>>2]|0)+(d[K>>0]|0)|0;c[xa>>2]=Aa;c[xa>>2]=Aa+2+(d[z>>0]|0)+(d[(c[R>>2]|0)+255>>0]|0);break d}case 3:{a[r>>0]=0;a[C>>0]=0;f=(c[ma>>2]|0)+65534&65535;c[ma>>2]=f;pa[c[qa>>2]&31](b,f,c[ca>>2]&255);pa[c[qa>>2]&31](b,(c[ma>>2]|0)+1&65535,(c[ca>>2]|0)>>>8&255);f=d[y>>0]|0;if(!(f&1))if(!(f&2))if(!(f&4))if(!(f&8))if(!(f&16))break d;else{g=96;h=239}else{g=88;h=247}else{g=80;h=251}else{g=72;h=253}else{g=64;h=254}if(c[S>>2]&2|0)a[y>>0]=h&f;c[ca>>2]=g;break d}case 4:{a[r>>0]=0;a[C>>0]=0;l=261;break}case 5:{l=261;break}case 6:{f=o;break}default:break d}if((l|0)==261){l=0;f=(c[ma>>2]|0)+65534&65535;c[ma>>2]=f;pa[c[qa>>2]&31](b,f,c[ca>>2]&255);pa[c[qa>>2]&31](b,(c[ma>>2]|0)+1&65535,(c[ca>>2]|0)>>>8&255);f=a[y>>0]|0}f=f&255;if(!(f&1))if(!(f&2))if(!(f&4))if(!(f&8))if(!(f&16))break;else{g=4;h=239}else{g=3;h=247}else{g=2;h=251}else{g=1;h=253}else{g=0;h=254}if(c[S>>2]&2|0)a[y>>0]=h&f;c[ca>>2]=c[b+96+(g<<2)>>2]}}else{g=a[t>>0]|0;if(g<<24>>24){c[ca>>2]=(c[ca>>2]|0)+(g&255)&65535;a[t>>0]=0}a[x>>0]=f&-2;a[C>>0]=a[r>>0]|0;a[r>>0]=0;Aa=(c[ma>>2]|0)+65534&65535;c[ma>>2]=Aa;pa[c[qa>>2]&31](b,Aa,c[ua>>2]&255);pa[c[qa>>2]&31](b,(c[ma>>2]|0)+1&65535,(c[ua>>2]|0)>>>8&255);c[ca>>2]=102;a[E>>0]=(a[E>>0]|0)+1<<24>>24;Aa=(c[xa>>2]|0)+(d[K>>0]|0)|0;c[xa>>2]=Aa;c[xa>>2]=Aa+(d[z>>0]|0)+(d[(c[R>>2]|0)+255>>0]|0)}while(0);f=c[xa>>2]|0;if(f>>>0>=e>>>0){l=268;break}}if((l|0)==268){c[xa>>2]=0;ga=ya;return f|0}return 0}function ud(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;i=b+5|0;j=b+4|0;f=((d[j>>0]|0)<<8|(d[i>>0]|0))+e|0;a[i>>0]=f;a[j>>0]=f>>>8;j=(a[b>>0]|0)+-1<<24>>24;a[b>>0]=j;f=a[b+1>>0]|0;i=f&255;g=c[b+64>>2]|0;k=b+52|0;j=j&255;l=a[63488+j>>0]|0;h=g>>>6&2|l&-24&255|0-(((i+e&255)+g|0)>>>8&1)&17;c[k>>2]=h;f=((e|0)>0?168520:112272)>>>(g&3|f<<2&12);e=l&255;if(!(j&15)){l=j>>>2;j=j>>>4&~(j>>>3);l=j|l;j=g^i;j=j^e;j=j^f;l=j^l;l=l&4;l=l|h;c[k>>2]=l;k=l&255;l=b+6|0;a[l>>0]=k;return}else{l=j<<2;j=(j<<1^254)&j;l=j|l;j=g^i;j=j^e;j=j^f;l=j^l;l=l&4;l=l|h;c[k>>2]=l;k=l&255;l=b+6|0;a[l>>0]=k;return}}function vd(a){a=a|0;var b=0;b=a+72|0;c[b>>2]=(c[b>>2]|0)+(d[a+23>>0]|0);b=la[c[a+156>>2]&31](c[a+136>>2]|0,0)|0;if(b&256|0)c[a+124>>2]=26;if(!(b&512)){a=b;a=a&255;return a|0}b=a+60|0;a=la[c[a+128>>2]&31](a,c[b>>2]|0)|0;c[b>>2]=(c[b>>2]|0)+1&65535;a=a&255;return a|0}function wd(a){a=a|0;return ((d[a+6>>0]|0)>>>2&1^1)&255|0}function xd(b){b=b|0;return a[b+6>>0]&4|0}function yd(a){a=a|0;return ((d[a+6>>0]|0)>>>7^1)&255|0}function zd(b){b=b|0;return a[b+6>>0]&-128&255|0}function Ad(a){a=a|0;return ((d[a+6>>0]|0)>>>6&1^1)&255|0}function Bd(b){b=b|0;return a[b+6>>0]&64|0}function Cd(b){b=b|0;return (a[b+6>>0]&1^1)&255|0}function Dd(b){b=b|0;return a[b+6>>0]&1|0}function Ed(a){a=a|0;return (O(Jd(c[a+60>>2]|0)|0)|0)&65535|0}function Fd(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;l=ga;ga=ga+32|0;g=l;i=l+16|0;j=a+28|0;f=c[j>>2]|0;c[g>>2]=f;k=a+20|0;f=(c[k>>2]|0)-f|0;c[g+4>>2]=f;c[g+8>>2]=b;c[g+12>>2]=d;e=a+60|0;h=2;f=f+d|0;while(1){if(!(Hd(R(c[e>>2]|0,g|0,h|0,i|0)|0)|0))b=c[i>>2]|0;else{c[i>>2]=-1;b=-1}if((f|0)==(b|0)){b=6;break}if((b|0)<0){b=8;break}p=c[g+4>>2]|0;m=b>>>0>p>>>0;n=m?g+8|0:g;p=b-(m?p:0)|0;c[n>>2]=(c[n>>2]|0)+p;o=n+4|0;c[o>>2]=(c[o>>2]|0)-p;g=n;h=h+(m<<31>>31)|0;f=f-b|0}if((b|0)==6){p=c[a+44>>2]|0;c[a+16>>2]=p+(c[a+48>>2]|0);c[j>>2]=p;c[k>>2]=p}else if((b|0)==8){c[a+16>>2]=0;c[j>>2]=0;c[k>>2]=0;c[a>>2]=c[a>>2]|32;if((h|0)==2)d=0;else d=d-(c[g+4>>2]|0)|0}ga=l;return d|0}function Gd(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;g=ga;ga=ga+16|0;f=g;if(!(Hd(Q(c[a+60>>2]|0,b|0,d|0,e&255|0,f|0)|0)|0)){d=f;b=c[d+4>>2]|0;d=c[d>>2]|0}else{b=f;c[b>>2]=-1;c[b+4>>2]=-1;b=-1;d=-1}y(b|0);ga=g;return d|0}function Hd(a){a=a|0;if(!(a<<16>>16))a=0;else{c[(Id()|0)>>2]=a&65535;a=-1}return a|0}function Id(){return 953860}function Jd(a){a=a|0;return a|0}function Kd(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=ga;ga=ga+32|0;i=l;f=l+16|0;c[i>>2]=d;g=i+4|0;j=b+48|0;m=c[j>>2]|0;c[g>>2]=e-((m|0)!=0&1);h=b+44|0;c[i+8>>2]=c[h>>2];c[i+12>>2]=m;if(!(Hd(P(c[b+60>>2]|0,i|0,2,f|0)|0)|0)){f=c[f>>2]|0;if((f|0)>=1){i=c[g>>2]|0;if(f>>>0>i>>>0){g=c[h>>2]|0;h=b+4|0;c[h>>2]=g;c[b+8>>2]=g+(f-i);if(!(c[j>>2]|0))f=e;else{c[h>>2]=g+1;a[d+(e+-1)>>0]=a[g>>0]|0;f=e}}}else k=4}else{c[f>>2]=-1;f=-1;k=4}if((k|0)==4)c[b>>2]=f&48^16|c[b>>2];ga=l;return f|0}function Ld(a){a=a|0;return 0}function Md(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;y(0);return 0}function Nd(a){a=a|0;return ((a|0)==32|(a+-9|0)>>>0<5)&1|0}function Od(b){b=b|0;var d=0,e=0;e=b+74|0;d=a[e>>0]|0;a[e>>0]=d+255|d;e=b+20|0;d=b+28|0;if((c[e>>2]|0)>>>0>(c[d>>2]|0)>>>0)ma[c[b+36>>2]&31](b,0,0)|0;c[b+16>>2]=0;c[d>>2]=0;c[e>>2]=0;d=c[b>>2]|0;if(!(d&4)){e=(c[b+44>>2]|0)+(c[b+48>>2]|0)|0;c[b+8>>2]=e;c[b+4>>2]=e;d=d<<27>>31}else{c[b>>2]=d|32;d=-1}return d|0}function Pd(b,c){b=b|0;c=c|0;var d=0,e=0;d=a[b>>0]|0;e=a[c>>0]|0;if(!(d<<24>>24==0?1:d<<24>>24!=e<<24>>24))do{b=b+1|0;c=c+1|0;d=a[b>>0]|0;e=a[c>>0]|0}while(!(d<<24>>24==0?1:d<<24>>24!=e<<24>>24));return (d&255)-(e&255)|0}function Qd(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0;a:do if(!d)b=0;else{while(1){e=a[b>>0]|0;f=a[c>>0]|0;if(e<<24>>24!=f<<24>>24)break;d=d+-1|0;if(!d){b=0;break a}else{b=b+1|0;c=c+1|0}}b=(e&255)-(f&255)|0}while(0);return b|0}function Rd(b,c,e){b=b|0;c=c|0;e=e|0;var f=0,g=0;if(!e)c=0;else{f=a[b>>0]|0;a:do if(!(f<<24>>24))f=0;else while(1){e=e+-1|0;g=a[c>>0]|0;if(!(f<<24>>24==g<<24>>24&((e|0)!=0&g<<24>>24!=0)))break a;b=b+1|0;c=c+1|0;f=a[b>>0]|0;if(!(f<<24>>24)){f=0;break}}while(0);c=(f&255)-(d[c>>0]|0)|0}return c|0}function Sd(a){a=a|0;return (a+-48|0)>>>0<10|0}function Td(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=ga;ga=ga+16|0;f=e;c[f>>2]=d;d=Ud(a,b,f)|0;ga=e;return d|0}function Ud(a,b,c){a=a|0;b=b|0;c=c|0;return Vd(a,2147483647,b,c)|0}function Vd(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;j=ga;ga=ga+160|0;g=j+144|0;i=j;cf(i|0,65712,144)|0;if((d+-1|0)>>>0>2147483646)if(!d){d=1;h=4}else{c[(Id()|0)>>2]=61;d=-1}else{g=b;h=4}if((h|0)==4){h=-2-g|0;h=d>>>0>h>>>0?h:d;c[i+48>>2]=h;b=i+20|0;c[b>>2]=g;c[i+44>>2]=g;d=g+h|0;g=i+16|0;c[g>>2]=d;c[i+28>>2]=d;d=Wd(i,e,f)|0;if(h){e=c[b>>2]|0;a[e+(((e|0)==(c[g>>2]|0))<<31>>31)>>0]=0}}ga=j;return d|0}function Wd(a,b,c){a=a|0;b=b|0;c=c|0;return Zd(a,b,c,17,17)|0}\nfunction Xd(b,e,f,g,h,i){b=b|0;e=+e;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0,t=0,u=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;H=ga;ga=ga+560|0;m=H+32|0;t=H+536|0;G=H;F=G;l=H+540|0;c[t>>2]=0;E=l+12|0;pe(e)|0;j=z()|0;if((j|0)<0){e=-e;pe(e)|0;j=z()|0;D=1;B=66757}else{D=(h&2049|0)!=0&1;B=(h&2048|0)==0?((h&1|0)==0?66758:66763):66760}do if(0==0&(j&2146435072|0)==2146435072){G=(i&32|0)!=0;j=D+3|0;ie(b,32,f,j,h&-65537);be(b,B,D);be(b,e!=e|0.0!=0.0?(G?66784:66788):G?66776:66780,3);ie(b,32,f,j,h^8192)}else{r=+qe(e,t)*2.0;j=r!=0.0;if(j)c[t>>2]=(c[t>>2]|0)+-1;w=i|32;if((w|0)==97){o=i&32;q=(o|0)==0?B:B+9|0;p=D|2;j=12-g|0;do if(!(g>>>0>11|(j|0)==0)){e=8.0;do{j=j+-1|0;e=e*16.0}while((j|0)!=0);if((a[q>>0]|0)==45){e=-(e+(-r-e));break}else{e=r+e-e;break}}else e=r;while(0);k=c[t>>2]|0;j=(k|0)<0?0-k|0:k;j=ge(j,((j|0)<0)<<31>>31,E)|0;if((j|0)==(E|0)){j=l+11|0;a[j>>0]=48}a[j+-1>>0]=(k>>31&2)+43;n=j+-2|0;a[n>>0]=i+15;k=(g|0)<1;l=(h&8|0)==0;j=G;while(1){D=~~e;m=j+1|0;a[j>>0]=o|d[65552+D>>0];e=(e-+(D|0))*16.0;if((m-F|0)==1?!(l&(k&e==0.0)):0){a[m>>0]=46;m=j+2|0}if(!(e!=0.0))break;else j=m}if((g|0)!=0?(-2-F+m|0)<(g|0):0){k=E;l=n;j=g+2+k-l|0}else{k=E;l=n;j=k-F-l+m|0}E=j+p|0;ie(b,32,f,E,h);be(b,q,p);ie(b,48,f,E,h^65536);F=m-F|0;be(b,G,F);G=k-l|0;ie(b,48,j-(F+G)|0,0,0);be(b,n,G);ie(b,32,f,E,h^8192);j=E;break}k=(g|0)<0?6:g;if(j){l=(c[t>>2]|0)+-28|0;c[t>>2]=l;e=r*268435456.0}else{l=c[t>>2]|0;e=r}C=(l|0)<0?m:m+288|0;m=C;do{y=~~e>>>0;c[m>>2]=y;m=m+4|0;e=(e-+(y>>>0))*1.0e9}while(e!=0.0);y=C;if((l|0)>0){j=C;do{o=(l|0)<29?l:29;l=m+-4|0;if(l>>>0>=j>>>0){n=0;do{s=af(c[l>>2]|0,0,o|0)|0;s=We(s|0,z()|0,n|0,0)|0;u=z()|0;n=_e(s|0,u|0,1e9,0)|0;x=Ve(n|0,z()|0,1e9,0)|0;x=Xe(s|0,u|0,x|0,z()|0)|0;z()|0;c[l>>2]=x;l=l+-4|0}while(l>>>0>=j>>>0);if(n){j=j+-4|0;c[j>>2]=n}}a:do if(m>>>0>j>>>0)while(1){l=m+-4|0;if(c[l>>2]|0)break a;if(l>>>0>j>>>0)m=l;else{m=l;break}}while(0);l=(c[t>>2]|0)-o|0;c[t>>2]=l}while((l|0)>0)}else j=C;if((l|0)<0){g=((k+25|0)/9|0)+1|0;s=(w|0)==102;do{q=0-l|0;q=(q|0)<9?q:9;if(j>>>0<m>>>0){o=(1<<q)+-1|0;n=1e9>>>q;p=0;l=j;do{x=c[l>>2]|0;c[l>>2]=(x>>>q)+p;p=v(x&o,n)|0;l=l+4|0}while(l>>>0<m>>>0);j=(c[j>>2]|0)==0?j+4|0:j;if(p){c[m>>2]=p;m=m+4|0}}else j=(c[j>>2]|0)==0?j+4|0:j;l=s?C:j;m=(m-l>>2|0)>(g|0)?l+(g<<2)|0:m;l=(c[t>>2]|0)+q|0;c[t>>2]=l}while((l|0)<0);s=m}else s=m;if(j>>>0<s>>>0){l=(y-j>>2)*9|0;n=c[j>>2]|0;if(n>>>0>=10){m=10;do{m=m*10|0;l=l+1|0}while(n>>>0>=m>>>0)}}else l=0;t=(w|0)==103;u=(k|0)!=0;m=k-((w|0)==102?0:l)+((u&t)<<31>>31)|0;if((m|0)<(((s-y>>2)*9|0)+-9|0)){x=m+9216|0;m=(x|0)/9|0;g=C+4+(m+-1024<<2)|0;m=x-(m*9|0)|0;if((m|0)<8){n=10;while(1){n=n*10|0;if((m|0)<7)m=m+1|0;else break}}else n=10;p=c[g>>2]|0;m=(p>>>0)/(n>>>0)|0;q=p-(v(m,n)|0)|0;o=(g+4|0)==(s|0);if(!(o&(q|0)==0)){r=(m&1|0)==0?9007199254740992.0:9007199254740994.0;x=n>>>1;e=q>>>0<x>>>0?.5:o&(q|0)==(x|0)?1.0:1.5;if(D){x=(a[B>>0]|0)==45;r=x?-r:r;e=x?-e:e}m=p-q|0;c[g>>2]=m;if(r+e!=r){x=m+n|0;c[g>>2]=x;if(x>>>0>999999999){l=g;while(1){m=l+-4|0;c[l>>2]=0;if(m>>>0<j>>>0){j=j+-4|0;c[j>>2]=0}x=(c[m>>2]|0)+1|0;c[m>>2]=x;if(x>>>0>999999999)l=m;else break}}else m=g;l=(y-j>>2)*9|0;o=c[j>>2]|0;if(o>>>0>=10){n=10;do{n=n*10|0;l=l+1|0}while(o>>>0>=n>>>0)}}else m=g}else m=g;w=m+4|0;x=j;j=s>>>0>w>>>0?w:s}else{x=j;j=s}q=0-l|0;b:do if(j>>>0>x>>>0)while(1){m=j+-4|0;if(c[m>>2]|0){s=1;w=j;break b}if(m>>>0>x>>>0)j=m;else{s=0;w=m;break}}else{s=0;w=j}while(0);do if(t){j=k+((u^1)&1)|0;if((j|0)>(l|0)&(l|0)>-5){k=j+-1-l|0;n=i+-1|0}else{k=j+-1|0;n=i+-2|0}if(!(h&8)){if(s?(A=c[w+-4>>2]|0,(A|0)!=0):0)if(!((A>>>0)%10|0)){j=10;m=0;do{j=j*10|0;m=m+1|0}while(!((A>>>0)%(j>>>0)|0|0))}else m=0;else m=9;j=((w-y>>2)*9|0)+-9|0;if((n|32|0)==102){i=j-m|0;i=(i|0)>0?i:0;k=(k|0)<(i|0)?k:i;break}else{i=j+l-m|0;i=(i|0)>0?i:0;k=(k|0)<(i|0)?k:i;break}}}else n=i;while(0);g=(k|0)!=0;o=g?1:h>>>3&1;p=(n|32|0)==102;if(p){u=0;j=(l|0)>0?l:0}else{j=(l|0)<0?q:l;j=ge(j,((j|0)<0)<<31>>31,E)|0;m=E;if((m-j|0)<2)do{j=j+-1|0;a[j>>0]=48}while((m-j|0)<2);a[j+-1>>0]=(l>>31&2)+43;j=j+-2|0;a[j>>0]=n;u=j;j=m-j|0}j=D+1+k+o+j|0;ie(b,32,f,j,h);be(b,B,D);ie(b,48,f,j,h^65536);if(p){o=x>>>0>C>>>0?C:x;q=G+9|0;p=q;n=G+8|0;m=o;do{l=ge(c[m>>2]|0,0,q)|0;if((m|0)==(o|0)){if((l|0)==(q|0)){a[n>>0]=48;l=n}}else if(l>>>0>G>>>0){df(G|0,48,l-F|0)|0;do l=l+-1|0;while(l>>>0>G>>>0)}be(b,l,p-l|0);m=m+4|0}while(m>>>0<=C>>>0);if(!((h&8|0)==0&(g^1)))be(b,66792,1);if(m>>>0<w>>>0&(k|0)>0)while(1){l=ge(c[m>>2]|0,0,q)|0;if(l>>>0>G>>>0){df(G|0,48,l-F|0)|0;do l=l+-1|0;while(l>>>0>G>>>0)}be(b,l,(k|0)<9?k:9);m=m+4|0;l=k+-9|0;if(!(m>>>0<w>>>0&(k|0)>9)){k=l;break}else k=l}ie(b,48,k+9|0,9,0)}else{g=s?w:x+4|0;if(x>>>0<g>>>0&(k|0)>-1){q=G+9|0;t=(h&8|0)==0;s=q;n=0-F|0;p=G+8|0;o=x;do{l=ge(c[o>>2]|0,0,q)|0;if((l|0)==(q|0)){a[p>>0]=48;l=p}do if((o|0)==(x|0)){m=l+1|0;be(b,l,1);if(t&(k|0)<1){l=m;break}be(b,66792,1);l=m}else{if(l>>>0<=G>>>0)break;df(G|0,48,l+n|0)|0;do l=l+-1|0;while(l>>>0>G>>>0)}while(0);F=s-l|0;be(b,l,(k|0)>(F|0)?F:k);k=k-F|0;o=o+4|0}while(o>>>0<g>>>0&(k|0)>-1)}ie(b,48,k+18|0,18,0);be(b,u,E-u|0)}ie(b,32,f,j,h^8192)}while(0);ga=H;return ((j|0)<(f|0)?f:j)|0}function Yd(a,b){a=a|0;b=b|0;var d=0.0,e=0;e=(c[b>>2]|0)+(8-1)&~(8-1);d=+g[e>>3];c[b>>2]=e+8;g[a>>3]=d;return}function Zd(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;t=ga;ga=ga+224|0;o=t+208|0;s=t+160|0;r=t+80|0;q=t;h=s;i=h+40|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(i|0));c[o>>2]=c[e>>2];if((_d(0,d,o,r,s,f,g)|0)<0)e=-1;else{if((c[b+76>>2]|0)>-1)p=$d(b)|0;else p=0;e=c[b>>2]|0;n=e&32;if((a[b+74>>0]|0)<1)c[b>>2]=e&-33;j=b+48|0;if(!(c[j>>2]|0)){i=b+44|0;e=c[i>>2]|0;c[i>>2]=q;k=b+28|0;c[k>>2]=q;m=b+20|0;c[m>>2]=q;c[j>>2]=80;l=b+16|0;c[l>>2]=q+80;h=_d(b,d,o,r,s,f,g)|0;if(e){ma[c[b+36>>2]&31](b,0,0)|0;h=(c[m>>2]|0)==0?-1:h;c[i>>2]=e;c[j>>2]=0;c[l>>2]=0;c[k>>2]=0;c[m>>2]=0}}else h=_d(b,d,o,r,s,f,g)|0;e=c[b>>2]|0;c[b>>2]=e|n;if(p|0)ae(b);e=(e&32|0)==0?h:-1}ga=t;return e|0}function _d(d,e,f,h,i,j,k){d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;J=ga;ga=ga+64|0;H=J+56|0;F=J+40|0;y=J;I=J+48|0;G=J+60|0;c[H>>2]=e;C=(d|0)!=0;x=y+40|0;B=x;y=y+39|0;A=I+4|0;e=0;l=0;o=0;a:while(1){do{do if((e|0)>-1)if((l|0)>(2147483647-e|0)){c[(Id()|0)>>2]=61;e=-1;break}else{e=l+e|0;break}while(0);s=c[H>>2]|0;l=a[s>>0]|0;if(!(l<<24>>24)){w=92;break a}m=s;b:while(1){switch(l<<24>>24){case 37:{w=10;break b}case 0:{l=m;break b}default:{}}v=m+1|0;c[H>>2]=v;l=a[v>>0]|0;m=v}c:do if((w|0)==10){w=0;n=m;l=m;do{if((a[n+1>>0]|0)!=37)break c;l=l+1|0;n=n+2|0;c[H>>2]=n}while((a[n>>0]|0)==37)}while(0);l=l-s|0;if(C)be(d,s,l)}while((l|0)!=0);v=(Sd(a[(c[H>>2]|0)+1>>0]|0)|0)==0;l=c[H>>2]|0;if(!v?(a[l+2>>0]|0)==36:0){m=3;q=(a[l+1>>0]|0)+-48|0;p=1}else{m=1;q=-1;p=o}m=l+m|0;c[H>>2]=m;l=a[m>>0]|0;n=(l<<24>>24)+-32|0;if(n>>>0>31|(1<<n&75913|0)==0)o=0;else{l=0;while(1){o=1<<n|l;m=m+1|0;c[H>>2]=m;l=a[m>>0]|0;n=(l<<24>>24)+-32|0;if(n>>>0>31|(1<<n&75913|0)==0)break;else l=o}}if(l<<24>>24==42){if((Sd(a[m+1>>0]|0)|0)!=0?(D=c[H>>2]|0,(a[D+2>>0]|0)==36):0){l=D+1|0;c[i+((a[l>>0]|0)+-48<<2)>>2]=10;n=1;m=D+3|0;l=c[h+((a[l>>0]|0)+-48<<3)>>2]|0}else{if(p|0){e=-1;break}if(C){v=(c[f>>2]|0)+(4-1)&~(4-1);l=c[v>>2]|0;c[f>>2]=v+4}else l=0;n=0;m=(c[H>>2]|0)+1|0}c[H>>2]=m;u=(l|0)<0;o=u?o|8192:o;v=n;u=u?0-l|0:l}else{l=ce(H)|0;if((l|0)<0){e=-1;break}m=c[H>>2]|0;v=p;u=l}do if((a[m>>0]|0)==46){l=m+1|0;if((a[l>>0]|0)!=42){c[H>>2]=l;t=ce(H)|0;l=c[H>>2]|0;break}if(Sd(a[m+2>>0]|0)|0?(E=c[H>>2]|0,(a[E+3>>0]|0)==36):0){t=E+2|0;c[i+((a[t>>0]|0)+-48<<2)>>2]=10;t=c[h+((a[t>>0]|0)+-48<<3)>>2]|0;l=E+4|0;c[H>>2]=l;break}if(v|0){e=-1;break a}if(C){t=(c[f>>2]|0)+(4-1)&~(4-1);m=c[t>>2]|0;c[f>>2]=t+4}else m=0;l=(c[H>>2]|0)+2|0;c[H>>2]=l;t=m}else{l=m;t=-1}while(0);r=0;while(1){if(((a[l>>0]|0)+-65|0)>>>0>57){e=-1;break a}m=l;l=l+1|0;c[H>>2]=l;m=a[(a[m>>0]|0)+-65+(65088+(r*58|0))>>0]|0;p=m&255;if((p+-1|0)>>>0>=8)break;else r=p}if(!(m<<24>>24)){e=-1;break}n=(q|0)>-1;do if(m<<24>>24==19)if(n){e=-1;break a}else w=54;else{if(n){c[i+(q<<2)>>2]=p;p=h+(q<<3)|0;q=c[p+4>>2]|0;w=F;c[w>>2]=c[p>>2];c[w+4>>2]=q;w=54;break}if(!C){e=0;break a}de(F,p,f,k);l=c[H>>2]|0;w=55}while(0);if((w|0)==54){w=0;if(C)w=55;else l=0}d:do if((w|0)==55){w=0;n=a[l+-1>>0]|0;n=(r|0)!=0&(n&15|0)==3?n&-33:n;l=o&-65537;q=(o&8192|0)==0?o:l;e:do switch(n|0){case 110:switch((r&255)<<24>>24){case 0:{c[c[F>>2]>>2]=e;l=0;break d}case 1:{c[c[F>>2]>>2]=e;l=0;break d}case 2:{l=c[F>>2]|0;c[l>>2]=e;c[l+4>>2]=((e|0)<0)<<31>>31;l=0;break d}case 3:{b[c[F>>2]>>1]=e;l=0;break d}case 4:{a[c[F>>2]>>0]=e;l=0;break d}case 6:{c[c[F>>2]>>2]=e;l=0;break d}case 7:{l=c[F>>2]|0;c[l>>2]=e;c[l+4>>2]=((e|0)<0)<<31>>31;l=0;break d}default:{l=0;break d}}case 112:{l=q|8;m=t>>>0>8?t:8;n=120;w=67;break}case 88:case 120:{l=q;m=t;w=67;break}case 111:{o=F;o=fe(c[o>>2]|0,c[o+4>>2]|0,x)|0;m=B-o|0;l=q;m=(q&8|0)==0|(t|0)>(m|0)?t:m+1|0;r=0;p=66740;w=73;break}case 105:case 100:{m=F;l=c[m>>2]|0;m=c[m+4>>2]|0;if((m|0)<0){l=Xe(0,0,l|0,m|0)|0;m=z()|0;n=F;c[n>>2]=l;c[n+4>>2]=m;n=1;p=66740;w=72;break e}else{n=(q&2049|0)!=0&1;p=(q&2048|0)==0?((q&1|0)==0?66740:66742):66741;w=72;break e}}case 117:{m=F;l=c[m>>2]|0;m=c[m+4>>2]|0;n=0;p=66740;w=72;break}case 99:{a[y>>0]=c[F>>2];s=y;q=l;o=1;n=0;m=66740;l=B;break}case 115:{p=c[F>>2]|0;p=(p|0)==0?66750:p;r=he(p,0,t)|0;K=(r|0)==0;s=p;q=l;o=K?t:r-p|0;n=0;m=66740;l=K?p+t|0:r;break}case 67:{c[I>>2]=c[F>>2];c[A>>2]=0;c[F>>2]=I;o=-1;w=79;break}case 83:{if(!t){ie(d,32,u,0,q);l=0;w=89}else{o=t;w=79}break}case 65:case 71:case 70:case 69:case 97:case 103:case 102:case 101:{l=ka[j&31](d,+g[F>>3],u,t,q,n)|0;break d}default:{o=t;n=0;m=66740;l=B}}while(0);f:do if((w|0)==67){o=F;o=ee(c[o>>2]|0,c[o+4>>2]|0,x,n&32)|0;p=F;p=(l&8|0)==0|(c[p>>2]|0)==0&(c[p+4>>2]|0)==0;r=p?0:2;p=p?66740:66740+(n>>>4)|0;w=73}else if((w|0)==72){o=ge(l,m,x)|0;l=q;m=t;r=n;w=73}else if((w|0)==79){w=0;l=0;p=c[F>>2]|0;while(1){m=c[p>>2]|0;if(!m)break;m=je(G,m)|0;n=(m|0)<0;if(n|m>>>0>(o-l|0)>>>0){w=83;break}l=m+l|0;if(o>>>0>l>>>0)p=p+4|0;else break}if((w|0)==83){w=0;if(n){e=-1;break a}}ie(d,32,u,l,q);if(!l){l=0;w=89}else{n=0;o=c[F>>2]|0;while(1){m=c[o>>2]|0;if(!m){w=89;break f}m=je(G,m)|0;n=m+n|0;if((n|0)>(l|0)){w=89;break f}be(d,G,m);if(n>>>0>=l>>>0){w=89;break}else o=o+4|0}}}while(0);if((w|0)==73){w=0;n=F;n=(c[n>>2]|0)!=0|(c[n+4>>2]|0)!=0;K=(m|0)!=0|n;n=B-o+((n^1)&1)|0;s=K?o:x;q=(m|0)>-1?l&-65537:l;o=K?((m|0)>(n|0)?m:n):0;n=r;m=p;l=B}else if((w|0)==89){w=0;ie(d,32,u,l,q^8192);l=(u|0)>(l|0)?u:l;break}t=l-s|0;r=(o|0)<(t|0)?t:o;K=r+n|0;l=(u|0)<(K|0)?K:u;ie(d,32,l,K,q);be(d,m,n);ie(d,48,l,K,q^65536);ie(d,48,r,t,0);be(d,s,t);ie(d,32,l,K,q^8192)}while(0);o=v}g:do if((w|0)==92)if(!d)if(!o)e=0;else{e=1;while(1){l=c[i+(e<<2)>>2]|0;if(!l)break;de(h+(e<<3)|0,l,f,k);e=e+1|0;if(e>>>0>=10){e=1;break g}}while(1){if(c[i+(e<<2)>>2]|0){e=-1;break g}e=e+1|0;if(e>>>0>=10){e=1;break}}}while(0);ga=J;return e|0}function $d(a){a=a|0;return 1}function ae(a){a=a|0;return}function be(a,b,d){a=a|0;b=b|0;d=d|0;if(!(c[a>>2]&32))ne(b,d,a)|0;return}function ce(b){b=b|0;var d=0,e=0;if(!(Sd(a[c[b>>2]>>0]|0)|0))d=0;else{d=0;do{e=c[b>>2]|0;d=(d*10|0)+-48+(a[e>>0]|0)|0;e=e+1|0;c[b>>2]=e}while((Sd(a[e>>0]|0)|0)!=0)}return d|0}function de(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0;a:do if(b>>>0<=20)do switch(b|0){case 9:{e=(c[d>>2]|0)+(4-1)&~(4-1);b=c[e>>2]|0;c[d>>2]=e+4;c[a>>2]=b;break a}case 10:{b=(c[d>>2]|0)+(4-1)&~(4-1);e=c[b>>2]|0;c[d>>2]=b+4;b=a;c[b>>2]=e;c[b+4>>2]=((e|0)<0)<<31>>31;break a}case 11:{b=(c[d>>2]|0)+(4-1)&~(4-1);e=c[b>>2]|0;c[d>>2]=b+4;b=a;c[b>>2]=e;c[b+4>>2]=0;break a}case 12:{b=(c[d>>2]|0)+(8-1)&~(8-1);e=b;f=c[e>>2]|0;e=c[e+4>>2]|0;c[d>>2]=b+8;b=a;c[b>>2]=f;c[b+4>>2]=e;break a}case 13:{f=(c[d>>2]|0)+(4-1)&~(4-1);b=c[f>>2]|0;c[d>>2]=f+4;b=(b&65535)<<16>>16;f=a;c[f>>2]=b;c[f+4>>2]=((b|0)<0)<<31>>31;break a}case 14:{f=(c[d>>2]|0)+(4-1)&~(4-1);b=c[f>>2]|0;c[d>>2]=f+4;f=a;c[f>>2]=b&65535;c[f+4>>2]=0;break a}case 15:{f=(c[d>>2]|0)+(4-1)&~(4-1);b=c[f>>2]|0;c[d>>2]=f+4;b=(b&255)<<24>>24;f=a;c[f>>2]=b;c[f+4>>2]=((b|0)<0)<<31>>31;break a}case 16:{f=(c[d>>2]|0)+(4-1)&~(4-1);b=c[f>>2]|0;c[d>>2]=f+4;f=a;c[f>>2]=b&255;c[f+4>>2]=0;break a}case 17:{f=(c[d>>2]|0)+(8-1)&~(8-1);h=+g[f>>3];c[d>>2]=f+8;g[a>>3]=h;break a}case 18:{oa[e&31](a,d);break a}default:break a}while(0);while(0);return}function ee(b,c,e,f){b=b|0;c=c|0;e=e|0;f=f|0;if(!((b|0)==0&(c|0)==0))do{e=e+-1|0;a[e>>0]=d[65552+(b&15)>>0]|0|f;b=$e(b|0,c|0,4)|0;c=z()|0}while(!((b|0)==0&(c|0)==0));return e|0}function fe(b,c,d){b=b|0;c=c|0;d=d|0;if(!((b|0)==0&(c|0)==0))do{d=d+-1|0;a[d>>0]=b&7|48;b=$e(b|0,c|0,3)|0;c=z()|0}while(!((b|0)==0&(c|0)==0));return d|0}function ge(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;if(c>>>0>0|(c|0)==0&b>>>0>4294967295)do{e=b;b=_e(b|0,c|0,10,0)|0;f=c;c=z()|0;g=Ve(b|0,c|0,10,0)|0;g=Xe(e|0,f|0,g|0,z()|0)|0;z()|0;d=d+-1|0;a[d>>0]=g&255|48}while(f>>>0>9|(f|0)==9&e>>>0>4294967295);if(b)do{g=b;b=(b>>>0)/10|0;d=d+-1|0;a[d>>0]=g-(b*10|0)|48}while(g>>>0>=10);return d|0}function he(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;h=d&255;f=(e|0)!=0;a:do if(f&(b&3|0)!=0){g=d&255;while(1){if((a[b>>0]|0)==g<<24>>24){i=6;break a}b=b+1|0;e=e+-1|0;f=(e|0)!=0;if(!(f&(b&3|0)!=0)){i=5;break}}}else i=5;while(0);if((i|0)==5)if(f)i=6;else i=16;b:do if((i|0)==6){g=d&255;if((a[b>>0]|0)==g<<24>>24)if(!e){i=16;break}else break;f=v(h,16843009)|0;c:do if(e>>>0>3)while(1){h=c[b>>2]^f;if((h&-2139062144^-2139062144)&h+-16843009|0)break c;b=b+4|0;e=e+-4|0;if(e>>>0<=3){i=11;break}}else i=11;while(0);if((i|0)==11)if(!e){i=16;break}while(1){if((a[b>>0]|0)==g<<24>>24)break b;e=e+-1|0;if(!e){i=16;break}else b=b+1|0}}while(0);if((i|0)==16)b=0;return b|0}function ie(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;g=ga;ga=ga+256|0;f=g;if((c|0)>(d|0)&(e&73728|0)==0){e=c-d|0;df(f|0,b<<24>>24|0,(e>>>0<256?e:256)|0)|0;if(e>>>0>255){b=c-d|0;do{be(a,f,256);e=e+-256|0}while(e>>>0>255);e=b&255}be(a,f,e)}ga=g;return}function je(a,b){a=a|0;b=b|0;if(!a)a=0;else a=ke(a,b,0)|0;return a|0}function ke(b,d,e){b=b|0;d=d|0;e=e|0;do if(b){if(d>>>0<128){a[b>>0]=d;b=1;break}if(!(c[c[(le()|0)+188>>2]>>2]|0))if((d&-128|0)==57216){a[b>>0]=d;b=1;break}else{c[(Id()|0)>>2]=25;b=-1;break}if(d>>>0<2048){a[b>>0]=d>>>6|192;a[b+1>>0]=d&63|128;b=2;break}if(d>>>0<55296|(d&-8192|0)==57344){a[b>>0]=d>>>12|224;a[b+1>>0]=d>>>6&63|128;a[b+2>>0]=d&63|128;b=3;break}if((d+-65536|0)>>>0<1048576){a[b>>0]=d>>>18|240;a[b+1>>0]=d>>>12&63|128;a[b+2>>0]=d>>>6&63|128;a[b+3>>0]=d&63|128;b=4;break}else{c[(Id()|0)>>2]=25;b=-1;break}}else b=1;while(0);return b|0}function le(){return me()|0}function me(){return 65872}function ne(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;g=e+16|0;f=c[g>>2]|0;if(!f)if(!(oe(e)|0)){f=c[g>>2]|0;h=5}else f=0;else h=5;a:do if((h|0)==5){j=e+20|0;i=c[j>>2]|0;g=i;if((f-i|0)>>>0<d>>>0){f=ma[c[e+36>>2]&31](e,b,d)|0;break}b:do if((a[e+75>>0]|0)<0|(d|0)==0){h=g;e=0;g=d;f=b}else{i=d;while(1){f=i+-1|0;if((a[b+f>>0]|0)==10)break;if(!f){h=g;e=0;g=d;f=b;break b}else i=f}f=ma[c[e+36>>2]&31](e,b,i)|0;if(f>>>0<i>>>0)break a;h=c[j>>2]|0;e=i;g=d-i|0;f=b+i|0}while(0);cf(h|0,f|0,g|0)|0;c[j>>2]=(c[j>>2]|0)+g;f=e+g|0}while(0);return f|0}function oe(b){b=b|0;var d=0,e=0;d=b+74|0;e=a[d>>0]|0;a[d>>0]=e+255|e;d=c[b>>2]|0;if(!(d&8)){c[b+8>>2]=0;c[b+4>>2]=0;d=c[b+44>>2]|0;c[b+28>>2]=d;c[b+20>>2]=d;c[b+16>>2]=d+(c[b+48>>2]|0);d=0}else{c[b>>2]=d|32;d=-1}return d|0}function pe(a){a=+a;var b=0;g[h>>3]=a;b=c[h>>2]|0;y(c[h+4>>2]|0);return b|0}function qe(a,b){a=+a;b=b|0;var d=0,e=0,f=0;g[h>>3]=a;d=c[h>>2]|0;e=c[h+4>>2]|0;f=$e(d|0,e|0,52)|0;z()|0;switch(f&2047){case 0:{if(a!=0.0){a=+qe(a*18446744073709551616.0,b);d=(c[b>>2]|0)+-64|0}else d=0;c[b>>2]=d;break}case 2047:break;default:{c[b>>2]=(f&2047)+-1022;c[h>>2]=d;c[h+4>>2]=e&-2146435073|1071644672;a=+g[h>>3]}}return +a}function re(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=a+20|0;f=c[e>>2]|0;a=(c[a+16>>2]|0)-f|0;a=a>>>0>d>>>0?d:a;cf(f|0,b|0,a|0)|0;c[e>>2]=(c[e>>2]|0)+a;return d|0}function se(a){a=a|0;if(a>>>0>4294963200){c[(Id()|0)>>2]=0-a;a=-1}return a|0}function te(b){b=b|0;var d=0,e=0,f=0;f=b;a:do if(!(f&3)){d=b;e=5}else{d=f;while(1){if(!(a[b>>0]|0))break a;b=b+1|0;d=b;if(!(d&3)){d=b;e=5;break}}}while(0);if((e|0)==5){while(1){b=c[d>>2]|0;if(!((b&-2139062144^-2139062144)&b+-16843009))d=d+4|0;else break}if((b&255)<<24>>24)do d=d+1|0;while((a[d>>0]|0)!=0)}return d-f|0}function ue(b,c){b=b|0;c=c|0;b=ve(b,c)|0;return ((a[b>>0]|0)==(c&255)<<24>>24?b:0)|0}function ve(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;f=d&255;a:do if(!f)b=b+(te(b)|0)|0;else{if(b&3){e=d&255;do{g=a[b>>0]|0;if(g<<24>>24==0?1:g<<24>>24==e<<24>>24)break a;b=b+1|0}while((b&3|0)!=0)}f=v(f,16843009)|0;e=c[b>>2]|0;b:do if(!((e&-2139062144^-2139062144)&e+-16843009))do{g=e^f;if((g&-2139062144^-2139062144)&g+-16843009|0)break b;b=b+4|0;e=c[b>>2]|0}while(!((e&-2139062144^-2139062144)&e+-16843009|0));while(0);e=d&255;while(1){g=a[b>>0]|0;if(g<<24>>24==0?1:g<<24>>24==e<<24>>24)break;else b=b+1|0}}while(0);return b|0}function we(a,b){a=a|0;b=b|0;xe(a,b)|0;return a|0}function xe(b,d){b=b|0;d=d|0;var e=0,f=0;e=d;a:do if(!((e^b)&3)){if(!(e&3))e=d;else while(1){e=a[d>>0]|0;a[b>>0]=e;if(!(e<<24>>24))break a;d=d+1|0;b=b+1|0;if(!(d&3)){e=d;break}}d=c[e>>2]|0;if(!((d&-2139062144^-2139062144)&d+-16843009)){f=b;b=e;while(1){e=b+4|0;b=f+4|0;c[f>>2]=d;d=c[e>>2]|0;if((d&-2139062144^-2139062144)&d+-16843009|0){d=e;break}else{f=b;b=e}}}else d=e;f=10}else f=10;while(0);if((f|0)==10){f=a[d>>0]|0;a[b>>0]=f;if(f<<24>>24)do{d=d+1|0;b=b+1|0;f=a[d>>0]|0;a[b>>0]=f}while(f<<24>>24!=0)}return b|0}function ye(a){a=a|0;var b=0;if(c[a+68>>2]|0){b=c[a+132>>2]|0;a=a+128|0;if(b|0)c[b+128>>2]=c[a>>2];a=c[a>>2]|0;if(!a)a=(ze()|0)+232|0;else a=a+132|0;c[a>>2]=b}return}function ze(){return me()|0}function Ae(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;h=ga;ga=ga+32|0;g=h+16|0;e=h;if(ue(66794,a[d>>0]|0)|0){f=Be(d)|0;c[e>>2]=b;c[e+4>>2]=f|32768;c[e+8>>2]=438;e=se(L(5,e|0)|0)|0;if((e|0)>=0){if(f&524288|0){c[g>>2]=e;c[g+4>>2]=2;c[g+8>>2]=1;K(221,g|0)|0}b=Ce(e,d)|0;if(!b){O(e|0)|0;b=0}}else b=0}else{c[(Id()|0)>>2]=28;b=0}ga=h;return b|0}function Be(b){b=b|0;var c=0,d=0,e=0;d=(ue(b,43)|0)==0;c=a[b>>0]|0;d=d?c<<24>>24!=114&1:2;e=(ue(b,120)|0)==0;d=e?d:d|128;b=(ue(b,101)|0)==0;b=b?d:d|524288;b=c<<24>>24==114?b:b|64;b=c<<24>>24==119?b|512:b;return (c<<24>>24==97?b|1024:b)|0}function Ce(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;k=ga;ga=ga+64|0;i=k+40|0;h=k+24|0;g=k+16|0;f=k;j=k+56|0;if(ue(66794,a[d>>0]|0)|0){e=Ne(1176)|0;if(!e)e=0;else{df(e|0,0,144)|0;if(!(ue(d,43)|0))c[e>>2]=(a[d>>0]|0)==114?8:4;if(ue(d,101)|0){c[f>>2]=b;c[f+4>>2]=2;c[f+8>>2]=1;K(221,f|0)|0}if((a[d>>0]|0)==97){c[g>>2]=b;c[g+4>>2]=3;d=K(221,g|0)|0;if(!(d&1024)){c[h>>2]=b;c[h+4>>2]=4;c[h+8>>2]=d|1024;K(221,h|0)|0}f=c[e>>2]|128;c[e>>2]=f}else f=c[e>>2]|0;c[e+60>>2]=b;c[e+44>>2]=e+152;c[e+48>>2]=1024;d=e+75|0;a[d>>0]=-1;if((f&8|0)==0?(c[i>>2]=b,c[i+4>>2]=21523,c[i+8>>2]=j,(M(54,i|0)|0)==0):0)a[d>>0]=10;c[e+32>>2]=20;c[e+36>>2]=17;c[e+40>>2]=18;c[e+12>>2]=28;if(!(c[238450]|0))c[e+76>>2]=-1;De(e)|0}}else{c[(Id()|0)>>2]=28;e=0}ga=k;return e|0}function De(a){a=a|0;var b=0,d=0;d=Ee()|0;c[a+56>>2]=c[d>>2];b=c[d>>2]|0;if(b|0)c[b+52>>2]=a;c[d>>2]=a;Fe();return a|0}function Ee(){I(953864);return 953872}function Fe(){N(953864);return}function Ge(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;if((c[a+76>>2]|0)>-1)f=$d(a)|0;else f=0;ye(a);g=(c[a>>2]&1|0)!=0;if(!g){e=Ee()|0;d=c[a+52>>2]|0;b=a+56|0;if(d|0)c[d+56>>2]=c[b>>2];b=c[b>>2]|0;if(b|0)c[b+52>>2]=d;if((c[e>>2]|0)==(a|0))c[e>>2]=b;Fe()}d=He(a)|0;d=ja[c[a+12>>2]&31](a)|0|d;b=c[a+96>>2]|0;if(b|0)Oe(b);if(g){if(f|0)ae(a)}else Oe(a);return d|0}function He(a){a=a|0;var b=0,d=0;do if(a){if((c[a+76>>2]|0)<=-1){b=Ie(a)|0;break}d=($d(a)|0)==0;b=Ie(a)|0;if(!d)ae(a)}else{if(!(c[16467]|0))b=0;else b=He(c[16467]|0)|0;a=c[(Ee()|0)>>2]|0;if(a)do{if((c[a+76>>2]|0)>-1)d=$d(a)|0;else d=0;if((c[a+20>>2]|0)>>>0>(c[a+28>>2]|0)>>>0)b=Ie(a)|0|b;if(d|0)ae(a);a=c[a+56>>2]|0}while((a|0)!=0);Fe()}while(0);return b|0}function Ie(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;h=a+20|0;g=a+28|0;if((c[h>>2]|0)>>>0>(c[g>>2]|0)>>>0?(ma[c[a+36>>2]&31](a,0,0)|0,(c[h>>2]|0)==0):0)b=-1;else{f=a+4|0;b=c[f>>2]|0;e=a+8|0;d=c[e>>2]|0;if(b>>>0<d>>>0){d=b-d|0;na[c[a+40>>2]&31](a,d,((d|0)<0)<<31>>31,1)|0;z()|0}c[a+16>>2]=0;c[g>>2]=0;c[h>>2]=0;c[e>>2]=0;c[f>>2]=0;b=0}return b|0}function Je(a,b){a=a|0;b=b|0;return Ke(a,b,(te(a)|0)+1|0)|0}function Ke(b,c,d){b=b|0;c=c|0;d=d|0;var e=0;a:do if(!d)c=0;else{e=c&255;c=d;while(1){c=c+-1|0;if((a[b+c>>0]|0)==e<<24>>24)break;if(!c){c=0;break a}}c=b+c|0}while(0);return c|0}function Le(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;k=v(e,d)|0;e=(d|0)==0?0:e;if((c[f+76>>2]|0)>-1)j=$d(f)|0;else j=0;h=f+74|0;g=a[h>>0]|0;a[h>>0]=g+255|g;h=f+4|0;g=c[h>>2]|0;i=(c[f+8>>2]|0)-g|0;if((i|0)>0){i=i>>>0<k>>>0?i:k;cf(b|0,g|0,i|0)|0;c[h>>2]=(c[h>>2]|0)+i;b=b+i|0;g=k-i|0}else g=k;a:do if(!g)l=13;else{i=f+32|0;while(1){if(Od(f)|0)break;h=ma[c[i>>2]&31](f,b,g)|0;if((h+1|0)>>>0<2)break;g=g-h|0;if(!g){l=13;break a}else b=b+h|0}if(j|0)ae(f);e=((k-g|0)>>>0)/(d>>>0)|0}while(0);if((l|0)==13)if(j)ae(f);return e|0}function Me(b){b=b|0;var c=0,d=0,e=0,f=0;while(1){d=b+1|0;if(!(Nd(a[b>>0]|0)|0))break;else b=d}c=a[b>>0]|0;switch(c|0){case 45:{b=1;e=5;break}case 43:{b=0;e=5;break}default:{f=0;d=b}}if((e|0)==5){c=a[d>>0]|0;f=b}if(!(Sd(c)|0))b=0;else{b=0;c=d;do{b=(b*10|0)+48-(a[c>>0]|0)|0;c=c+1|0}while((Sd(a[c>>0]|0)|0)!=0)}return ((f|0)==0?0-b|0:b)|0}function Ne(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;w=ga;ga=ga+16|0;n=w;do if(a>>>0<245){k=a>>>0<11?16:a+11&-8;a=k>>>3;m=c[238469]|0;d=m>>>a;if(d&3|0){e=(d&1^1)+a|0;f=953916+(e<<1<<2)|0;b=f+8|0;a=c[b>>2]|0;g=a+8|0;d=c[g>>2]|0;if((d|0)==(f|0))c[238469]=m&~(1<<e);else{c[d+12>>2]=f;c[b>>2]=d}v=e<<3;c[a+4>>2]=v|3;v=a+v+4|0;c[v>>2]=c[v>>2]|1;v=g;ga=w;return v|0}l=c[238471]|0;if(k>>>0>l>>>0){if(d|0){i=2<<a;d=d<<a&(i|0-i);d=(d&0-d)+-1|0;i=d>>>12&16;d=d>>>i;a=d>>>5&8;d=d>>>a;g=d>>>2&4;d=d>>>g;b=d>>>1&2;d=d>>>b;e=d>>>1&1;e=(a|i|g|b|e)+(d>>>e)|0;d=953916+(e<<1<<2)|0;b=d+8|0;g=c[b>>2]|0;i=g+8|0;a=c[i>>2]|0;if((a|0)==(d|0)){a=m&~(1<<e);c[238469]=a}else{c[a+12>>2]=d;c[b>>2]=a;a=m}v=e<<3;h=v-k|0;c[g+4>>2]=k|3;f=g+k|0;c[f+4>>2]=h|1;c[g+v>>2]=h;if(l|0){e=c[238474]|0;b=l>>>3;d=953916+(b<<1<<2)|0;b=1<<b;if(!(a&b)){c[238469]=a|b;b=d+8|0;a=d}else{a=d+8|0;b=a;a=c[a>>2]|0}c[b>>2]=e;c[a+12>>2]=e;c[e+8>>2]=a;c[e+12>>2]=d}c[238471]=h;c[238474]=f;v=i;ga=w;return v|0}g=c[238470]|0;if(g){i=(g&0-g)+-1|0;f=i>>>12&16;i=i>>>f;e=i>>>5&8;i=i>>>e;h=i>>>2&4;i=i>>>h;d=i>>>1&2;i=i>>>d;j=i>>>1&1;j=c[954180+((e|f|h|d|j)+(i>>>j)<<2)>>2]|0;i=(c[j+4>>2]&-8)-k|0;d=j;while(1){a=c[d+16>>2]|0;if(!a){a=c[d+20>>2]|0;if(!a)break}d=(c[a+4>>2]&-8)-k|0;h=d>>>0<i>>>0;i=h?d:i;d=a;j=h?a:j}h=j+k|0;if(h>>>0>j>>>0){f=c[j+24>>2]|0;b=c[j+12>>2]|0;do if((b|0)==(j|0)){a=j+20|0;b=c[a>>2]|0;if(!b){a=j+16|0;b=c[a>>2]|0;if(!b){d=0;break}}while(1){e=b+20|0;d=c[e>>2]|0;if(!d){e=b+16|0;d=c[e>>2]|0;if(!d)break;else{b=d;a=e}}else{b=d;a=e}}c[a>>2]=0;d=b}else{d=c[j+8>>2]|0;c[d+12>>2]=b;c[b+8>>2]=d;d=b}while(0);do if(f|0){b=c[j+28>>2]|0;a=954180+(b<<2)|0;if((j|0)==(c[a>>2]|0)){c[a>>2]=d;if(!d){c[238470]=g&~(1<<b);break}}else{v=f+16|0;c[((c[v>>2]|0)==(j|0)?v:f+20|0)>>2]=d;if(!d)break}c[d+24>>2]=f;b=c[j+16>>2]|0;if(b|0){c[d+16>>2]=b;c[b+24>>2]=d}b=c[j+20>>2]|0;if(b|0){c[d+20>>2]=b;c[b+24>>2]=d}}while(0);if(i>>>0<16){v=i+k|0;c[j+4>>2]=v|3;v=j+v+4|0;c[v>>2]=c[v>>2]|1}else{c[j+4>>2]=k|3;c[h+4>>2]=i|1;c[h+i>>2]=i;if(l|0){e=c[238474]|0;b=l>>>3;d=953916+(b<<1<<2)|0;b=1<<b;if(!(b&m)){c[238469]=b|m;b=d+8|0;a=d}else{a=d+8|0;b=a;a=c[a>>2]|0}c[b>>2]=e;c[a+12>>2]=e;c[e+8>>2]=a;c[e+12>>2]=d}c[238471]=i;c[238474]=h}v=j+8|0;ga=w;return v|0}else m=k}else m=k}else m=k}else if(a>>>0<=4294967231){a=a+11|0;k=a&-8;e=c[238470]|0;if(e){d=0-k|0;a=a>>>8;if(a)if(k>>>0>16777215)j=31;else{m=(a+1048320|0)>>>16&8;q=a<<m;i=(q+520192|0)>>>16&4;q=q<<i;j=(q+245760|0)>>>16&2;j=14-(i|m|j)+(q<<j>>>15)|0;j=k>>>(j+7|0)&1|j<<1}else j=0;a=c[954180+(j<<2)>>2]|0;a:do if(!a){f=0;a=0;q=61}else{f=0;h=k<<((j|0)==31?0:25-(j>>>1)|0);i=a;a=0;while(1){g=(c[i+4>>2]&-8)-k|0;if(g>>>0<d>>>0)if(!g){d=0;f=i;a=i;q=65;break a}else{d=g;a=i}q=c[i+20>>2]|0;i=c[i+16+(h>>>31<<2)>>2]|0;f=(q|0)==0|(q|0)==(i|0)?f:q;if(!i){q=61;break}else h=h<<1}}while(0);if((q|0)==61){if((f|0)==0&(a|0)==0){a=2<<j;a=(a|0-a)&e;if(!a){m=k;break}a=(a&0-a)+-1|0;i=a>>>12&16;a=a>>>i;h=a>>>5&8;a=a>>>h;j=a>>>2&4;a=a>>>j;m=a>>>1&2;a=a>>>m;f=a>>>1&1;f=c[954180+((h|i|j|m|f)+(a>>>f)<<2)>>2]|0;a=0}if(!f){i=d;g=a}else q=65}if((q|0)==65)while(1){m=(c[f+4>>2]&-8)-k|0;g=m>>>0<d>>>0;d=g?m:d;g=g?f:a;a=c[f+16>>2]|0;if(!a)a=c[f+20>>2]|0;if(!a){i=d;break}else{f=a;a=g}}if(((g|0)!=0?i>>>0<((c[238471]|0)-k|0)>>>0:0)?(l=g+k|0,l>>>0>g>>>0):0){h=c[g+24>>2]|0;b=c[g+12>>2]|0;do if((b|0)==(g|0)){a=g+20|0;b=c[a>>2]|0;if(!b){a=g+16|0;b=c[a>>2]|0;if(!b){b=0;break}}while(1){f=b+20|0;d=c[f>>2]|0;if(!d){f=b+16|0;d=c[f>>2]|0;if(!d)break;else{b=d;a=f}}else{b=d;a=f}}c[a>>2]=0}else{v=c[g+8>>2]|0;c[v+12>>2]=b;c[b+8>>2]=v}while(0);do if(h){a=c[g+28>>2]|0;d=954180+(a<<2)|0;if((g|0)==(c[d>>2]|0)){c[d>>2]=b;if(!b){e=e&~(1<<a);c[238470]=e;break}}else{v=h+16|0;c[((c[v>>2]|0)==(g|0)?v:h+20|0)>>2]=b;if(!b)break}c[b+24>>2]=h;a=c[g+16>>2]|0;if(a|0){c[b+16>>2]=a;c[a+24>>2]=b}a=c[g+20>>2]|0;if(a){c[b+20>>2]=a;c[a+24>>2]=b}}while(0);b:do if(i>>>0<16){v=i+k|0;c[g+4>>2]=v|3;v=g+v+4|0;c[v>>2]=c[v>>2]|1}else{c[g+4>>2]=k|3;c[l+4>>2]=i|1;c[l+i>>2]=i;b=i>>>3;if(i>>>0<256){d=953916+(b<<1<<2)|0;a=c[238469]|0;b=1<<b;if(!(a&b)){c[238469]=a|b;b=d+8|0;a=d}else{a=d+8|0;b=a;a=c[a>>2]|0}c[b>>2]=l;c[a+12>>2]=l;c[l+8>>2]=a;c[l+12>>2]=d;break}b=i>>>8;if(b)if(i>>>0>16777215)d=31;else{u=(b+1048320|0)>>>16&8;v=b<<u;t=(v+520192|0)>>>16&4;v=v<<t;d=(v+245760|0)>>>16&2;d=14-(t|u|d)+(v<<d>>>15)|0;d=i>>>(d+7|0)&1|d<<1}else d=0;b=954180+(d<<2)|0;c[l+28>>2]=d;a=l+16|0;c[a+4>>2]=0;c[a>>2]=0;a=1<<d;if(!(e&a)){c[238470]=e|a;c[b>>2]=l;c[l+24>>2]=b;c[l+12>>2]=l;c[l+8>>2]=l;break}b=c[b>>2]|0;c:do if((c[b+4>>2]&-8|0)!=(i|0)){e=i<<((d|0)==31?0:25-(d>>>1)|0);while(1){d=b+16+(e>>>31<<2)|0;a=c[d>>2]|0;if(!a)break;if((c[a+4>>2]&-8|0)==(i|0)){b=a;break c}else{e=e<<1;b=a}}c[d>>2]=l;c[l+24>>2]=b;c[l+12>>2]=l;c[l+8>>2]=l;break b}while(0);u=b+8|0;v=c[u>>2]|0;c[v+12>>2]=l;c[u>>2]=l;c[l+8>>2]=v;c[l+12>>2]=b;c[l+24>>2]=0}while(0);v=g+8|0;ga=w;return v|0}else m=k}else m=k}else m=-1;while(0);d=c[238471]|0;if(d>>>0>=m>>>0){a=d-m|0;b=c[238474]|0;if(a>>>0>15){v=b+m|0;c[238474]=v;c[238471]=a;c[v+4>>2]=a|1;c[b+d>>2]=a;c[b+4>>2]=m|3}else{c[238471]=0;c[238474]=0;c[b+4>>2]=d|3;v=b+d+4|0;c[v>>2]=c[v>>2]|1}v=b+8|0;ga=w;return v|0}h=c[238472]|0;if(h>>>0>m>>>0){t=h-m|0;c[238472]=t;v=c[238475]|0;u=v+m|0;c[238475]=u;c[u+4>>2]=t|1;c[v+4>>2]=m|3;v=v+8|0;ga=w;return v|0}if(!(c[238587]|0)){c[238589]=4096;c[238588]=4096;c[238590]=-1;c[238591]=-1;c[238592]=0;c[238580]=0;c[238587]=n&-16^1431655768;a=4096}else a=c[238589]|0;i=m+48|0;j=m+47|0;g=a+j|0;e=0-a|0;k=g&e;if(k>>>0<=m>>>0){v=0;ga=w;return v|0}a=c[238579]|0;if(a|0?(l=c[238577]|0,n=l+k|0,n>>>0<=l>>>0|n>>>0>a>>>0):0){v=0;ga=w;return v|0}d:do if(!(c[238580]&4)){d=c[238475]|0;e:do if(d){f=954324;while(1){n=c[f>>2]|0;if(n>>>0<=d>>>0?(n+(c[f+4>>2]|0)|0)>>>0>d>>>0:0)break;a=c[f+8>>2]|0;if(!a){q=128;break e}else f=a}b=g-h&e;if(b>>>0<2147483647){a=Te(b)|0;if((a|0)==((c[f>>2]|0)+(c[f+4>>2]|0)|0)){if((a|0)!=(-1|0)){h=a;g=b;q=145;break d}}else{e=a;q=136}}else b=0}else q=128;while(0);do if((q|0)==128){d=Te(0)|0;if((d|0)!=(-1|0)?(b=d,o=c[238588]|0,p=o+-1|0,b=((p&b|0)==0?0:(p+b&0-o)-b|0)+k|0,o=c[238577]|0,p=b+o|0,b>>>0>m>>>0&b>>>0<2147483647):0){n=c[238579]|0;if(n|0?p>>>0<=o>>>0|p>>>0>n>>>0:0){b=0;break}a=Te(b)|0;if((a|0)==(d|0)){h=d;g=b;q=145;break d}else{e=a;q=136}}else b=0}while(0);do if((q|0)==136){d=0-b|0;if(!(i>>>0>b>>>0&(b>>>0<2147483647&(e|0)!=(-1|0))))if((e|0)==(-1|0)){b=0;break}else{h=e;g=b;q=145;break d}a=c[238589]|0;a=j-b+a&0-a;if(a>>>0>=2147483647){h=e;g=b;q=145;break d}if((Te(a)|0)==(-1|0)){Te(d)|0;b=0;break}else{h=e;g=a+b|0;q=145;break d}}while(0);c[238580]=c[238580]|4;q=143}else{b=0;q=143}while(0);if(((q|0)==143?k>>>0<2147483647:0)?(r=Te(k)|0,p=Te(0)|0,t=p-r|0,s=t>>>0>(m+40|0)>>>0,!((r|0)==(-1|0)|s^1|r>>>0<p>>>0&((r|0)!=(-1|0)&(p|0)!=(-1|0))^1)):0){h=r;g=s?t:b;q=145}if((q|0)==145){b=(c[238577]|0)+g|0;c[238577]=b;if(b>>>0>(c[238578]|0)>>>0)c[238578]=b;j=c[238475]|0;f:do if(j){e=954324;while(1){b=c[e>>2]|0;a=c[e+4>>2]|0;if((h|0)==(b+a|0)){q=154;break}d=c[e+8>>2]|0;if(!d)break;else e=d}if(((q|0)==154?(u=e+4|0,(c[e+12>>2]&8|0)==0):0)?h>>>0>j>>>0&b>>>0<=j>>>0:0){c[u>>2]=a+g;v=(c[238472]|0)+g|0;t=j+8|0;t=(t&7|0)==0?0:0-t&7;u=j+t|0;t=v-t|0;c[238475]=u;c[238472]=t;c[u+4>>2]=t|1;c[j+v+4>>2]=40;c[238476]=c[238591];break}if(h>>>0<(c[238473]|0)>>>0)c[238473]=h;d=h+g|0;a=954324;while(1){if((c[a>>2]|0)==(d|0)){q=162;break}b=c[a+8>>2]|0;if(!b)break;else a=b}if((q|0)==162?(c[a+12>>2]&8|0)==0:0){c[a>>2]=h;l=a+4|0;c[l>>2]=(c[l>>2]|0)+g;l=h+8|0;l=h+((l&7|0)==0?0:0-l&7)|0;b=d+8|0;b=d+((b&7|0)==0?0:0-b&7)|0;k=l+m|0;i=b-l-m|0;c[l+4>>2]=m|3;g:do if((j|0)==(b|0)){v=(c[238472]|0)+i|0;c[238472]=v;c[238475]=k;c[k+4>>2]=v|1}else{if((c[238474]|0)==(b|0)){v=(c[238471]|0)+i|0;c[238471]=v;c[238474]=k;c[k+4>>2]=v|1;c[k+v>>2]=v;break}a=c[b+4>>2]|0;if((a&3|0)==1){h=a&-8;e=a>>>3;h:do if(a>>>0<256){a=c[b+8>>2]|0;d=c[b+12>>2]|0;if((d|0)==(a|0)){c[238469]=c[238469]&~(1<<e);break}else{c[a+12>>2]=d;c[d+8>>2]=a;break}}else{g=c[b+24>>2]|0;a=c[b+12>>2]|0;do if((a|0)==(b|0)){e=b+16|0;d=e+4|0;a=c[d>>2]|0;if(!a){a=c[e>>2]|0;if(!a){a=0;break}else d=e}while(1){f=a+20|0;e=c[f>>2]|0;if(!e){f=a+16|0;e=c[f>>2]|0;if(!e)break;else{a=e;d=f}}else{a=e;d=f}}c[d>>2]=0}else{v=c[b+8>>2]|0;c[v+12>>2]=a;c[a+8>>2]=v}while(0);if(!g)break;d=c[b+28>>2]|0;e=954180+(d<<2)|0;do if((c[e>>2]|0)!=(b|0)){v=g+16|0;c[((c[v>>2]|0)==(b|0)?v:g+20|0)>>2]=a;if(!a)break h}else{c[e>>2]=a;if(a|0)break;c[238470]=c[238470]&~(1<<d);break h}while(0);c[a+24>>2]=g;e=b+16|0;d=c[e>>2]|0;if(d|0){c[a+16>>2]=d;c[d+24>>2]=a}d=c[e+4>>2]|0;if(!d)break;c[a+20>>2]=d;c[d+24>>2]=a}while(0);b=b+h|0;f=h+i|0}else f=i;b=b+4|0;c[b>>2]=c[b>>2]&-2;c[k+4>>2]=f|1;c[k+f>>2]=f;b=f>>>3;if(f>>>0<256){d=953916+(b<<1<<2)|0;a=c[238469]|0;b=1<<b;if(!(a&b)){c[238469]=a|b;b=d+8|0;a=d}else{a=d+8|0;b=a;a=c[a>>2]|0}c[b>>2]=k;c[a+12>>2]=k;c[k+8>>2]=a;c[k+12>>2]=d;break}b=f>>>8;do if(!b)e=0;else{if(f>>>0>16777215){e=31;break}u=(b+1048320|0)>>>16&8;v=b<<u;t=(v+520192|0)>>>16&4;v=v<<t;e=(v+245760|0)>>>16&2;e=14-(t|u|e)+(v<<e>>>15)|0;e=f>>>(e+7|0)&1|e<<1}while(0);a=954180+(e<<2)|0;c[k+28>>2]=e;b=k+16|0;c[b+4>>2]=0;c[b>>2]=0;b=c[238470]|0;d=1<<e;if(!(b&d)){c[238470]=b|d;c[a>>2]=k;c[k+24>>2]=a;c[k+12>>2]=k;c[k+8>>2]=k;break}b=c[a>>2]|0;i:do if((c[b+4>>2]&-8|0)!=(f|0)){e=f<<((e|0)==31?0:25-(e>>>1)|0);while(1){d=b+16+(e>>>31<<2)|0;a=c[d>>2]|0;if(!a)break;if((c[a+4>>2]&-8|0)==(f|0)){b=a;break i}else{e=e<<1;b=a}}c[d>>2]=k;c[k+24>>2]=b;c[k+12>>2]=k;c[k+8>>2]=k;break g}while(0);u=b+8|0;v=c[u>>2]|0;c[v+12>>2]=k;c[u>>2]=k;c[k+8>>2]=v;c[k+12>>2]=b;c[k+24>>2]=0}while(0);v=l+8|0;ga=w;return v|0}a=954324;while(1){b=c[a>>2]|0;if(b>>>0<=j>>>0?(v=b+(c[a+4>>2]|0)|0,v>>>0>j>>>0):0)break;a=c[a+8>>2]|0}f=v+-47|0;a=f+8|0;a=f+((a&7|0)==0?0:0-a&7)|0;f=j+16|0;a=a>>>0<f>>>0?j:a;b=a+8|0;d=g+-40|0;t=h+8|0;t=(t&7|0)==0?0:0-t&7;u=h+t|0;t=d-t|0;c[238475]=u;c[238472]=t;c[u+4>>2]=t|1;c[h+d+4>>2]=40;c[238476]=c[238591];d=a+4|0;c[d>>2]=27;c[b>>2]=c[238581];c[b+4>>2]=c[238582];c[b+8>>2]=c[238583];c[b+12>>2]=c[238584];c[238581]=h;c[238582]=g;c[238584]=0;c[238583]=b;b=a+24|0;do{u=b;b=b+4|0;c[b>>2]=7}while((u+8|0)>>>0<v>>>0);if((a|0)!=(j|0)){g=a-j|0;c[d>>2]=c[d>>2]&-2;c[j+4>>2]=g|1;c[a>>2]=g;b=g>>>3;if(g>>>0<256){d=953916+(b<<1<<2)|0;a=c[238469]|0;b=1<<b;if(!(a&b)){c[238469]=a|b;b=d+8|0;a=d}else{a=d+8|0;b=a;a=c[a>>2]|0}c[b>>2]=j;c[a+12>>2]=j;c[j+8>>2]=a;c[j+12>>2]=d;break}b=g>>>8;if(b)if(g>>>0>16777215)e=31;else{u=(b+1048320|0)>>>16&8;v=b<<u;t=(v+520192|0)>>>16&4;v=v<<t;e=(v+245760|0)>>>16&2;e=14-(t|u|e)+(v<<e>>>15)|0;e=g>>>(e+7|0)&1|e<<1}else e=0;d=954180+(e<<2)|0;c[j+28>>2]=e;c[j+20>>2]=0;c[f>>2]=0;b=c[238470]|0;a=1<<e;if(!(b&a)){c[238470]=b|a;c[d>>2]=j;c[j+24>>2]=d;c[j+12>>2]=j;c[j+8>>2]=j;break}b=c[d>>2]|0;j:do if((c[b+4>>2]&-8|0)!=(g|0)){e=g<<((e|0)==31?0:25-(e>>>1)|0);while(1){d=b+16+(e>>>31<<2)|0;a=c[d>>2]|0;if(!a)break;if((c[a+4>>2]&-8|0)==(g|0)){b=a;break j}else{e=e<<1;b=a}}c[d>>2]=j;c[j+24>>2]=b;c[j+12>>2]=j;c[j+8>>2]=j;break f}while(0);u=b+8|0;v=c[u>>2]|0;c[v+12>>2]=j;c[u>>2]=j;c[j+8>>2]=v;c[j+12>>2]=b;c[j+24>>2]=0}}else{v=c[238473]|0;if((v|0)==0|h>>>0<v>>>0)c[238473]=h;c[238581]=h;c[238582]=g;c[238584]=0;c[238478]=c[238587];c[238477]=-1;c[238482]=953916;c[238481]=953916;c[238484]=953924;c[238483]=953924;c[238486]=953932;c[238485]=953932;c[238488]=953940;c[238487]=953940;c[238490]=953948;c[238489]=953948;c[238492]=953956;c[238491]=953956;c[238494]=953964;c[238493]=953964;c[238496]=953972;c[238495]=953972;c[238498]=953980;c[238497]=953980;c[238500]=953988;c[238499]=953988;c[238502]=953996;c[238501]=953996;c[238504]=954004;c[238503]=954004;c[238506]=954012;c[238505]=954012;c[238508]=954020;c[238507]=954020;c[238510]=954028;c[238509]=954028;c[238512]=954036;c[238511]=954036;c[238514]=954044;c[238513]=954044;c[238516]=954052;c[238515]=954052;c[238518]=954060;c[238517]=954060;c[238520]=954068;c[238519]=954068;c[238522]=954076;c[238521]=954076;c[238524]=954084;c[238523]=954084;c[238526]=954092;c[238525]=954092;c[238528]=954100;c[238527]=954100;c[238530]=954108;c[238529]=954108;c[238532]=954116;c[238531]=954116;c[238534]=954124;c[238533]=954124;c[238536]=954132;c[238535]=954132;c[238538]=954140;c[238537]=954140;c[238540]=954148;c[238539]=954148;c[238542]=954156;c[238541]=954156;c[238544]=954164;c[238543]=954164;v=g+-40|0;t=h+8|0;t=(t&7|0)==0?0:0-t&7;u=h+t|0;t=v-t|0;c[238475]=u;c[238472]=t;c[u+4>>2]=t|1;c[h+v+4>>2]=40;c[238476]=c[238591]}while(0);b=c[238472]|0;if(b>>>0>m>>>0){t=b-m|0;c[238472]=t;v=c[238475]|0;u=v+m|0;c[238475]=u;c[u+4>>2]=t|1;c[v+4>>2]=m|3;v=v+8|0;ga=w;return v|0}}c[(Id()|0)>>2]=48;v=0;ga=w;return v|0}function Oe(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;if(!a)return;d=a+-8|0;e=c[238473]|0;a=c[a+-4>>2]|0;b=a&-8;k=d+b|0;do if(!(a&1)){f=c[d>>2]|0;if(!(a&3))return;g=d+(0-f)|0;h=f+b|0;if(g>>>0<e>>>0)return;if((c[238474]|0)==(g|0)){b=k+4|0;a=c[b>>2]|0;if((a&3|0)!=3){i=g;j=g;b=h;break}c[238471]=h;c[b>>2]=a&-2;c[g+4>>2]=h|1;c[g+h>>2]=h;return}d=f>>>3;if(f>>>0<256){a=c[g+8>>2]|0;b=c[g+12>>2]|0;if((b|0)==(a|0)){c[238469]=c[238469]&~(1<<d);i=g;j=g;b=h;break}else{c[a+12>>2]=b;c[b+8>>2]=a;i=g;j=g;b=h;break}}f=c[g+24>>2]|0;a=c[g+12>>2]|0;do if((a|0)==(g|0)){d=g+16|0;b=d+4|0;a=c[b>>2]|0;if(!a){a=c[d>>2]|0;if(!a){d=0;break}else b=d}while(1){e=a+20|0;d=c[e>>2]|0;if(!d){e=a+16|0;d=c[e>>2]|0;if(!d)break;else{a=d;b=e}}else{a=d;b=e}}c[b>>2]=0;d=a}else{d=c[g+8>>2]|0;c[d+12>>2]=a;c[a+8>>2]=d;d=a}while(0);if(f){a=c[g+28>>2]|0;b=954180+(a<<2)|0;if((c[b>>2]|0)==(g|0)){c[b>>2]=d;if(!d){c[238470]=c[238470]&~(1<<a);i=g;j=g;b=h;break}}else{j=f+16|0;c[((c[j>>2]|0)==(g|0)?j:f+20|0)>>2]=d;if(!d){i=g;j=g;b=h;break}}c[d+24>>2]=f;b=g+16|0;a=c[b>>2]|0;if(a|0){c[d+16>>2]=a;c[a+24>>2]=d}a=c[b+4>>2]|0;if(a){c[d+20>>2]=a;c[a+24>>2]=d;i=g;j=g;b=h}else{i=g;j=g;b=h}}else{i=g;j=g;b=h}}else{i=d;j=d}while(0);if(i>>>0>=k>>>0)return;a=k+4|0;d=c[a>>2]|0;if(!(d&1))return;if(!(d&2)){if((c[238475]|0)==(k|0)){k=(c[238472]|0)+b|0;c[238472]=k;c[238475]=j;c[j+4>>2]=k|1;if((j|0)!=(c[238474]|0))return;c[238474]=0;c[238471]=0;return}if((c[238474]|0)==(k|0)){k=(c[238471]|0)+b|0;c[238471]=k;c[238474]=i;c[j+4>>2]=k|1;c[i+k>>2]=k;return}f=(d&-8)+b|0;e=d>>>3;do if(d>>>0<256){b=c[k+8>>2]|0;a=c[k+12>>2]|0;if((a|0)==(b|0)){c[238469]=c[238469]&~(1<<e);break}else{c[b+12>>2]=a;c[a+8>>2]=b;break}}else{g=c[k+24>>2]|0;a=c[k+12>>2]|0;do if((a|0)==(k|0)){d=k+16|0;b=d+4|0;a=c[b>>2]|0;if(!a){a=c[d>>2]|0;if(!a){d=0;break}else b=d}while(1){e=a+20|0;d=c[e>>2]|0;if(!d){e=a+16|0;d=c[e>>2]|0;if(!d)break;else{a=d;b=e}}else{a=d;b=e}}c[b>>2]=0;d=a}else{d=c[k+8>>2]|0;c[d+12>>2]=a;c[a+8>>2]=d;d=a}while(0);if(g|0){a=c[k+28>>2]|0;b=954180+(a<<2)|0;if((c[b>>2]|0)==(k|0)){c[b>>2]=d;if(!d){c[238470]=c[238470]&~(1<<a);break}}else{h=g+16|0;c[((c[h>>2]|0)==(k|0)?h:g+20|0)>>2]=d;if(!d)break}c[d+24>>2]=g;b=k+16|0;a=c[b>>2]|0;if(a|0){c[d+16>>2]=a;c[a+24>>2]=d}a=c[b+4>>2]|0;if(a|0){c[d+20>>2]=a;c[a+24>>2]=d}}}while(0);c[j+4>>2]=f|1;c[i+f>>2]=f;if((j|0)==(c[238474]|0)){c[238471]=f;return}}else{c[a>>2]=d&-2;c[j+4>>2]=b|1;c[i+b>>2]=b;f=b}a=f>>>3;if(f>>>0<256){d=953916+(a<<1<<2)|0;b=c[238469]|0;a=1<<a;if(!(b&a)){c[238469]=b|a;a=d+8|0;b=d}else{b=d+8|0;a=b;b=c[b>>2]|0}c[a>>2]=j;c[b+12>>2]=j;c[j+8>>2]=b;c[j+12>>2]=d;return}a=f>>>8;if(a)if(f>>>0>16777215)e=31;else{i=(a+1048320|0)>>>16&8;k=a<<i;h=(k+520192|0)>>>16&4;k=k<<h;e=(k+245760|0)>>>16&2;e=14-(h|i|e)+(k<<e>>>15)|0;e=f>>>(e+7|0)&1|e<<1}else e=0;b=954180+(e<<2)|0;c[j+28>>2]=e;c[j+20>>2]=0;c[j+16>>2]=0;a=c[238470]|0;d=1<<e;a:do if(!(a&d)){c[238470]=a|d;c[b>>2]=j;c[j+24>>2]=b;c[j+12>>2]=j;c[j+8>>2]=j}else{a=c[b>>2]|0;b:do if((c[a+4>>2]&-8|0)!=(f|0)){e=f<<((e|0)==31?0:25-(e>>>1)|0);while(1){d=a+16+(e>>>31<<2)|0;b=c[d>>2]|0;if(!b)break;if((c[b+4>>2]&-8|0)==(f|0)){a=b;break b}else{e=e<<1;a=b}}c[d>>2]=j;c[j+24>>2]=a;c[j+12>>2]=j;c[j+8>>2]=j;break a}while(0);i=a+8|0;k=c[i>>2]|0;c[k+12>>2]=j;c[i>>2]=j;c[j+8>>2]=k;c[j+12>>2]=a;c[j+24>>2]=0}while(0);k=(c[238477]|0)+-1|0;c[238477]=k;if(k|0)return;a=954332;while(1){a=c[a>>2]|0;if(!a)break;else a=a+8|0}c[238477]=-1;return}function Pe(a,b){a=a|0;b=b|0;var d=0;if(a){d=v(b,a)|0;if((b|a)>>>0>65535)d=((d>>>0)/(a>>>0)|0|0)==(b|0)?d:-1}else d=0;b=Ne(d)|0;if(!b)return b|0;if(!(c[b+-4>>2]&3))return b|0;df(b|0,0,d|0)|0;return b|0}function Qe(a,b){a=a|0;b=b|0;var d=0,e=0;if(!a){a=Ne(b)|0;return a|0}if(b>>>0>4294967231){c[(Id()|0)>>2]=48;a=0;return a|0}d=Re(a+-8|0,b>>>0<11?16:b+11&-8)|0;if(d|0){a=d+8|0;return a|0}d=Ne(b)|0;if(!d){a=0;return a|0}e=c[a+-4>>2]|0;e=(e&-8)-((e&3|0)==0?8:4)|0;cf(d|0,a|0,(e>>>0<b>>>0?e:b)|0)|0;Oe(a);a=d;return a|0}function Re(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;m=a+4|0;l=c[m>>2]|0;d=l&-8;i=a+d|0;if(!(l&3)){if(b>>>0<256){a=0;return a|0}if(d>>>0>=(b+4|0)>>>0?(d-b|0)>>>0<=c[238589]<<1>>>0:0)return a|0;a=0;return a|0}if(d>>>0>=b>>>0){d=d-b|0;if(d>>>0<=15)return a|0;k=a+b|0;c[m>>2]=l&1|b|2;c[k+4>>2]=d|3;b=i+4|0;c[b>>2]=c[b>>2]|1;Se(k,d);return a|0}if((c[238475]|0)==(i|0)){k=(c[238472]|0)+d|0;e=k-b|0;d=a+b|0;if(k>>>0<=b>>>0){a=0;return a|0}c[m>>2]=l&1|b|2;c[d+4>>2]=e|1;c[238475]=d;c[238472]=e;return a|0}if((c[238474]|0)==(i|0)){e=(c[238471]|0)+d|0;if(e>>>0<b>>>0){a=0;return a|0}d=e-b|0;if(d>>>0>15){k=a+b|0;e=a+e|0;c[m>>2]=l&1|b|2;c[k+4>>2]=d|1;c[e>>2]=d;e=e+4|0;c[e>>2]=c[e>>2]&-2;e=k}else{c[m>>2]=l&1|e|2;e=a+e+4|0;c[e>>2]=c[e>>2]|1;e=0;d=0}c[238471]=d;c[238474]=e;return a|0}e=c[i+4>>2]|0;if(e&2|0){a=0;return a|0}j=(e&-8)+d|0;if(j>>>0<b>>>0){a=0;return a|0}k=j-b|0;f=e>>>3;do if(e>>>0<256){e=c[i+8>>2]|0;d=c[i+12>>2]|0;if((d|0)==(e|0)){c[238469]=c[238469]&~(1<<f);break}else{c[e+12>>2]=d;c[d+8>>2]=e;break}}else{h=c[i+24>>2]|0;d=c[i+12>>2]|0;do if((d|0)==(i|0)){f=i+16|0;e=f+4|0;d=c[e>>2]|0;if(!d){d=c[f>>2]|0;if(!d){f=0;break}else e=f}while(1){g=d+20|0;f=c[g>>2]|0;if(!f){g=d+16|0;f=c[g>>2]|0;if(!f)break;else{d=f;e=g}}else{d=f;e=g}}c[e>>2]=0;f=d}else{f=c[i+8>>2]|0;c[f+12>>2]=d;c[d+8>>2]=f;f=d}while(0);if(h|0){d=c[i+28>>2]|0;e=954180+(d<<2)|0;if((c[e>>2]|0)==(i|0)){c[e>>2]=f;if(!f){c[238470]=c[238470]&~(1<<d);break}}else{g=h+16|0;c[((c[g>>2]|0)==(i|0)?g:h+20|0)>>2]=f;if(!f)break}c[f+24>>2]=h;e=i+16|0;d=c[e>>2]|0;if(d|0){c[f+16>>2]=d;c[d+24>>2]=f}d=c[e+4>>2]|0;if(d|0){c[f+20>>2]=d;c[d+24>>2]=f}}}while(0);if(k>>>0<16){c[m>>2]=l&1|j|2;b=a+j+4|0;c[b>>2]=c[b>>2]|1;return a|0}else{i=a+b|0;c[m>>2]=l&1|b|2;c[i+4>>2]=k|3;b=a+j+4|0;c[b>>2]=c[b>>2]|1;Se(i,k);return a|0}return 0}function Se(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;j=a+b|0;d=c[a+4>>2]|0;do if(!(d&1)){e=c[a>>2]|0;if(!(d&3))return;g=a+(0-e)|0;h=e+b|0;if((c[238474]|0)==(g|0)){a=j+4|0;d=c[a>>2]|0;if((d&3|0)!=3){i=g;a=h;break}c[238471]=h;c[a>>2]=d&-2;c[g+4>>2]=h|1;c[j>>2]=h;return}b=e>>>3;if(e>>>0<256){d=c[g+8>>2]|0;a=c[g+12>>2]|0;if((a|0)==(d|0)){c[238469]=c[238469]&~(1<<b);i=g;a=h;break}else{c[d+12>>2]=a;c[a+8>>2]=d;i=g;a=h;break}}f=c[g+24>>2]|0;d=c[g+12>>2]|0;do if((d|0)==(g|0)){b=g+16|0;a=b+4|0;d=c[a>>2]|0;if(!d){d=c[b>>2]|0;if(!d){b=0;break}else a=b}while(1){e=d+20|0;b=c[e>>2]|0;if(!b){e=d+16|0;b=c[e>>2]|0;if(!b)break;else{d=b;a=e}}else{d=b;a=e}}c[a>>2]=0;b=d}else{b=c[g+8>>2]|0;c[b+12>>2]=d;c[d+8>>2]=b;b=d}while(0);if(f){d=c[g+28>>2]|0;a=954180+(d<<2)|0;if((c[a>>2]|0)==(g|0)){c[a>>2]=b;if(!b){c[238470]=c[238470]&~(1<<d);i=g;a=h;break}}else{i=f+16|0;c[((c[i>>2]|0)==(g|0)?i:f+20|0)>>2]=b;if(!b){i=g;a=h;break}}c[b+24>>2]=f;a=g+16|0;d=c[a>>2]|0;if(d|0){c[b+16>>2]=d;c[d+24>>2]=b}d=c[a+4>>2]|0;if(d){c[b+20>>2]=d;c[d+24>>2]=b;i=g;a=h}else{i=g;a=h}}else{i=g;a=h}}else{i=a;a=b}while(0);d=j+4|0;b=c[d>>2]|0;if(!(b&2)){if((c[238475]|0)==(j|0)){j=(c[238472]|0)+a|0;c[238472]=j;c[238475]=i;c[i+4>>2]=j|1;if((i|0)!=(c[238474]|0))return;c[238474]=0;c[238471]=0;return}if((c[238474]|0)==(j|0)){j=(c[238471]|0)+a|0;c[238471]=j;c[238474]=i;c[i+4>>2]=j|1;c[i+j>>2]=j;return}g=(b&-8)+a|0;e=b>>>3;do if(b>>>0<256){a=c[j+8>>2]|0;d=c[j+12>>2]|0;if((d|0)==(a|0)){c[238469]=c[238469]&~(1<<e);break}else{c[a+12>>2]=d;c[d+8>>2]=a;break}}else{f=c[j+24>>2]|0;d=c[j+12>>2]|0;do if((d|0)==(j|0)){b=j+16|0;a=b+4|0;d=c[a>>2]|0;if(!d){d=c[b>>2]|0;if(!d){b=0;break}else a=b}while(1){e=d+20|0;b=c[e>>2]|0;if(!b){e=d+16|0;b=c[e>>2]|0;if(!b)break;else{d=b;a=e}}else{d=b;a=e}}c[a>>2]=0;b=d}else{b=c[j+8>>2]|0;c[b+12>>2]=d;c[d+8>>2]=b;b=d}while(0);if(f|0){d=c[j+28>>2]|0;a=954180+(d<<2)|0;if((c[a>>2]|0)==(j|0)){c[a>>2]=b;if(!b){c[238470]=c[238470]&~(1<<d);break}}else{h=f+16|0;c[((c[h>>2]|0)==(j|0)?h:f+20|0)>>2]=b;if(!b)break}c[b+24>>2]=f;a=j+16|0;d=c[a>>2]|0;if(d|0){c[b+16>>2]=d;c[d+24>>2]=b}d=c[a+4>>2]|0;if(d|0){c[b+20>>2]=d;c[d+24>>2]=b}}}while(0);c[i+4>>2]=g|1;c[i+g>>2]=g;if((i|0)==(c[238474]|0)){c[238471]=g;return}else a=g}else{c[d>>2]=b&-2;c[i+4>>2]=a|1;c[i+a>>2]=a}d=a>>>3;if(a>>>0<256){b=953916+(d<<1<<2)|0;a=c[238469]|0;d=1<<d;if(!(a&d)){c[238469]=a|d;d=b+8|0;a=b}else{a=b+8|0;d=a;a=c[a>>2]|0}c[d>>2]=i;c[a+12>>2]=i;c[i+8>>2]=a;c[i+12>>2]=b;return}d=a>>>8;if(d)if(a>>>0>16777215)f=31;else{h=(d+1048320|0)>>>16&8;j=d<<h;g=(j+520192|0)>>>16&4;j=j<<g;f=(j+245760|0)>>>16&2;f=14-(g|h|f)+(j<<f>>>15)|0;f=a>>>(f+7|0)&1|f<<1}else f=0;b=954180+(f<<2)|0;c[i+28>>2]=f;c[i+20>>2]=0;c[i+16>>2]=0;d=c[238470]|0;e=1<<f;if(!(d&e)){c[238470]=d|e;c[b>>2]=i;c[i+24>>2]=b;c[i+12>>2]=i;c[i+8>>2]=i;return}d=c[b>>2]|0;a:do if((c[d+4>>2]&-8|0)!=(a|0)){f=a<<((f|0)==31?0:25-(f>>>1)|0);while(1){e=d+16+(f>>>31<<2)|0;b=c[e>>2]|0;if(!b)break;if((c[b+4>>2]&-8|0)==(a|0)){d=b;break a}else{f=f<<1;d=b}}c[e>>2]=i;c[i+24>>2]=d;c[i+12>>2]=i;c[i+8>>2]=i;return}while(0);h=d+8|0;j=c[h>>2]|0;c[j+12>>2]=i;c[h>>2]=i;c[i+8>>2]=j;c[i+12>>2]=d;c[i+24>>2]=0;return}function Te(a){a=a|0;var b=0,d=0;d=bf()|0;b=c[d>>2]|0;a=b+a|0;if(a>>>0>(S()|0)>>>0?(U(a|0)|0)==0:0){c[(Id()|0)>>2]=48;d=-1;return d|0}c[d>>2]=a;d=b;return d|0}function Ue(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;f=a&65535;e=b&65535;c=v(e,f)|0;d=a>>>16;a=(c>>>16)+(v(e,d)|0)|0;e=b>>>16;b=v(e,f)|0;return (y((a>>>16)+(v(e,d)|0)+(((a&65535)+b|0)>>>16)|0),a+b<<16|c&65535|0)|0}function Ve(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a;f=c;c=Ue(e,f)|0;a=z()|0;return (y((v(b,f)|0)+(v(d,e)|0)+a|a&0|0),c|0|0)|0}function We(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;c=a+c>>>0;return (y(b+d+(c>>>0<a>>>0|0)>>>0|0),c|0)|0}function Xe(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;d=b-d-(c>>>0>a>>>0|0)>>>0;return (y(d|0),a-c>>>0|0)|0}function Ye(a){a=a|0;return (a?31-(w(a^a-1)|0)|0:32)|0}function Ze(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;l=a;j=b;k=j;h=d;n=e;i=n;if(!k){g=(f|0)!=0;if(!i){if(g){c[f>>2]=(l>>>0)%(h>>>0);c[f+4>>2]=0}n=0;f=(l>>>0)/(h>>>0)>>>0;return (y(n|0),f)|0}else{if(!g){n=0;f=0;return (y(n|0),f)|0}c[f>>2]=a|0;c[f+4>>2]=b&0;n=0;f=0;return (y(n|0),f)|0}}g=(i|0)==0;do if(h){if(!g){g=(w(i|0)|0)-(w(k|0)|0)|0;if(g>>>0<=31){m=g+1|0;i=31-g|0;b=g-31>>31;h=m;a=l>>>(m>>>0)&b|k<<i;b=k>>>(m>>>0)&b;g=0;i=l<<i;break}if(!f){n=0;f=0;return (y(n|0),f)|0}c[f>>2]=a|0;c[f+4>>2]=j|b&0;n=0;f=0;return (y(n|0),f)|0}g=h-1|0;if(g&h|0){i=(w(h|0)|0)+33-(w(k|0)|0)|0;p=64-i|0;m=32-i|0;j=m>>31;o=i-32|0;b=o>>31;h=i;a=m-1>>31&k>>>(o>>>0)|(k<<m|l>>>(i>>>0))&b;b=b&k>>>(i>>>0);g=l<<p&j;i=(k<<p|l>>>(o>>>0))&j|l<<m&i-33>>31;break}if(f|0){c[f>>2]=g&l;c[f+4>>2]=0}if((h|0)==1){o=j|b&0;p=a|0|0;return (y(o|0),p)|0}else{p=Ye(h|0)|0;o=k>>>(p>>>0)|0;p=k<<32-p|l>>>(p>>>0)|0;return (y(o|0),p)|0}}else{if(g){if(f|0){c[f>>2]=(k>>>0)%(h>>>0);c[f+4>>2]=0}o=0;p=(k>>>0)/(h>>>0)>>>0;return (y(o|0),p)|0}if(!l){if(f|0){c[f>>2]=0;c[f+4>>2]=(k>>>0)%(i>>>0)}o=0;p=(k>>>0)/(i>>>0)>>>0;return (y(o|0),p)|0}g=i-1|0;if(!(g&i)){if(f|0){c[f>>2]=a|0;c[f+4>>2]=g&k|b&0}o=0;p=k>>>((Ye(i|0)|0)>>>0);return (y(o|0),p)|0}g=(w(i|0)|0)-(w(k|0)|0)|0;if(g>>>0<=30){b=g+1|0;i=31-g|0;h=b;a=k<<i|l>>>(b>>>0);b=k>>>(b>>>0);g=0;i=l<<i;break}if(!f){o=0;p=0;return (y(o|0),p)|0}c[f>>2]=a|0;c[f+4>>2]=j|b&0;o=0;p=0;return (y(o|0),p)|0}while(0);if(!h){k=i;j=0;i=0}else{m=d|0|0;l=n|e&0;k=We(m|0,l|0,-1,-1)|0;d=z()|0;j=i;i=0;do{e=j;j=g>>>31|j<<1;g=i|g<<1;e=a<<1|e>>>31|0;n=a>>>31|b<<1|0;Xe(k|0,d|0,e|0,n|0)|0;p=z()|0;o=p>>31|((p|0)<0?-1:0)<<1;i=o&1;a=Xe(e|0,n|0,o&m|0,(((p|0)<0?-1:0)>>31|((p|0)<0?-1:0)<<1)&l|0)|0;b=z()|0;h=h-1|0}while((h|0)!=0);k=j;j=0}h=0;if(f|0){c[f>>2]=a;c[f+4>>2]=b}o=(g|0)>>>31|(k|h)<<1|(h<<1|g>>>31)&0|j;p=(g<<1|0>>>31)&-2|i;return (y(o|0),p)|0}function _e(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return Ze(a,b,c,d,0)|0}function $e(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){y(b>>>c|0);return a>>>c|(b&(1<<c)-1)<<32-c}y(0);return b>>>c-32|0}function af(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){y(b<<c|(a&(1<<c)-1<<32-c)>>>32-c|0);return a<<c}y(a<<c-32|0);return 0}function bf(){return 954400}function cf(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if((e|0)>=8192){T(b|0,d|0,e|0)|0;return b|0}h=b|0;g=b+e|0;if((b&3)==(d&3)){while(b&3){if(!e)return h|0;a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;e=e-1|0}e=g&-4|0;f=e-64|0;while((b|0)<=(f|0)){c[b>>2]=c[d>>2];c[b+4>>2]=c[d+4>>2];c[b+8>>2]=c[d+8>>2];c[b+12>>2]=c[d+12>>2];c[b+16>>2]=c[d+16>>2];c[b+20>>2]=c[d+20>>2];c[b+24>>2]=c[d+24>>2];c[b+28>>2]=c[d+28>>2];c[b+32>>2]=c[d+32>>2];c[b+36>>2]=c[d+36>>2];c[b+40>>2]=c[d+40>>2];c[b+44>>2]=c[d+44>>2];c[b+48>>2]=c[d+48>>2];c[b+52>>2]=c[d+52>>2];c[b+56>>2]=c[d+56>>2];c[b+60>>2]=c[d+60>>2];b=b+64|0;d=d+64|0}while((b|0)<(e|0)){c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0}}else{e=g-4|0;while((b|0)<(e|0)){a[b>>0]=a[d>>0]|0;a[b+1>>0]=a[d+1>>0]|0;a[b+2>>0]=a[d+2>>0]|0;a[b+3>>0]=a[d+3>>0]|0;b=b+4|0;d=d+4|0}}while((b|0)<(g|0)){a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0}return h|0}function df(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;h=b+e|0;d=d&255;if((e|0)>=67){while(b&3){a[b>>0]=d;b=b+1|0}f=h&-4|0;i=d|d<<8|d<<16|d<<24;g=f-64|0;while((b|0)<=(g|0)){c[b>>2]=i;c[b+4>>2]=i;c[b+8>>2]=i;c[b+12>>2]=i;c[b+16>>2]=i;c[b+20>>2]=i;c[b+24>>2]=i;c[b+28>>2]=i;c[b+32>>2]=i;c[b+36>>2]=i;c[b+40>>2]=i;c[b+44>>2]=i;c[b+48>>2]=i;c[b+52>>2]=i;c[b+56>>2]=i;c[b+60>>2]=i;b=b+64|0}while((b|0)<(f|0)){c[b>>2]=i;b=b+4|0}}while((b|0)<(h|0)){a[b>>0]=d;b=b+1|0}return h-e|0}function ef(a,b){a=a|0;b=b|0;return ja[a&31](b|0)|0}function ff(a){a=a|0;return A(0,a|0)|0}function gf(a){a=a|0;return A(1,a|0)|0}function hf(a){a=a|0;return A(2,a|0)|0}function jf(a){a=a|0;return A(3,a|0)|0}function kf(a){a=a|0;return A(4,a|0)|0}function lf(a){a=a|0;return A(5,a|0)|0}function mf(a){a=a|0;return A(6,a|0)|0}function nf(a){a=a|0;return A(7,a|0)|0}function of(a){a=a|0;return A(8,a|0)|0}function pf(a){a=a|0;return A(9,a|0)|0}function qf(a){a=a|0;return A(10,a|0)|0}function rf(a){a=a|0;return A(11,a|0)|0}function sf(a){a=a|0;return A(12,a|0)|0}function tf(a){a=a|0;return A(13,a|0)|0}function uf(a){a=a|0;return A(14,a|0)|0}function vf(a){a=a|0;return A(15,a|0)|0}function wf(a,b,c,d,e,f,g){a=a|0;b=b|0;c=+c;d=d|0;e=e|0;f=f|0;g=g|0;return ka[a&31](b|0,+c,d|0,e|0,f|0,g|0)|0}function xf(a,b,c,d,e,f){a=a|0;b=+b;c=c|0;d=d|0;e=e|0;f=f|0;return B(0,a|0,+b,c|0,d|0,e|0,f|0)|0}function yf(a,b,c,d,e,f){a=a|0;b=+b;c=c|0;d=d|0;e=e|0;f=f|0;return B(1,a|0,+b,c|0,d|0,e|0,f|0)|0}function zf(a,b,c,d,e,f){a=a|0;b=+b;c=c|0;d=d|0;e=e|0;f=f|0;return B(2,a|0,+b,c|0,d|0,e|0,f|0)|0}function Af(a,b,c,d,e,f){a=a|0;b=+b;c=c|0;d=d|0;e=e|0;f=f|0;return B(3,a|0,+b,c|0,d|0,e|0,f|0)|0}function Bf(a,b,c,d,e,f){a=a|0;b=+b;c=c|0;d=d|0;e=e|0;f=f|0;return B(4,a|0,+b,c|0,d|0,e|0,f|0)|0}function Cf(a,b,c,d,e,f){a=a|0;b=+b;c=c|0;d=d|0;e=e|0;f=f|0;return B(5,a|0,+b,c|0,d|0,e|0,f|0)|0}function Df(a,b,c,d,e,f){a=a|0;b=+b;c=c|0;d=d|0;e=e|0;f=f|0;return B(6,a|0,+b,c|0,d|0,e|0,f|0)|0}function Ef(a,b,c,d,e,f){a=a|0;b=+b;c=c|0;d=d|0;e=e|0;f=f|0;return B(7,a|0,+b,c|0,d|0,e|0,f|0)|0}function Ff(a,b,c,d,e,f){a=a|0;b=+b;c=c|0;d=d|0;e=e|0;f=f|0;return B(8,a|0,+b,c|0,d|0,e|0,f|0)|0}function Gf(a,b,c,d,e,f){a=a|0;b=+b;c=c|0;d=d|0;e=e|0;f=f|0;return B(9,a|0,+b,c|0,d|0,e|0,f|0)|0}function Hf(a,b,c,d,e,f){a=a|0;b=+b;c=c|0;d=d|0;e=e|0;f=f|0;return B(10,a|0,+b,c|0,d|0,e|0,f|0)|0}function If(a,b,c,d,e,f){a=a|0;b=+b;c=c|0;d=d|0;e=e|0;f=f|0;return B(11,a|0,+b,c|0,d|0,e|0,f|0)|0}function Jf(a,b,c,d,e,f){a=a|0;b=+b;c=c|0;d=d|0;e=e|0;f=f|0;return B(12,a|0,+b,c|0,d|0,e|0,f|0)|0}function Kf(a,b,c,d,e,f){a=a|0;b=+b;c=c|0;d=d|0;e=e|0;f=f|0;return B(13,a|0,+b,c|0,d|0,e|0,f|0)|0}function Lf(a,b,c,d,e,f){a=a|0;b=+b;c=c|0;d=d|0;e=e|0;f=f|0;return B(14,a|0,+b,c|0,d|0,e|0,f|0)|0}function Mf(a,b,c,d,e,f){a=a|0;b=+b;c=c|0;d=d|0;e=e|0;f=f|0;return B(15,a|0,+b,c|0,d|0,e|0,f|0)|0}function Nf(a,b,c){a=a|0;b=b|0;c=c|0;return la[a&31](b|0,c|0)|0}function Of(a,b){a=a|0;b=b|0;return C(0,a|0,b|0)|0}function Pf(a,b){a=a|0;b=b|0;return C(1,a|0,b|0)|0}function Qf(a,b){a=a|0;b=b|0;return C(2,a|0,b|0)|0}function Rf(a,b){a=a|0;b=b|0;return C(3,a|0,b|0)|0}function Sf(a,b){a=a|0;b=b|0;return C(4,a|0,b|0)|0}function Tf(a,b){a=a|0;b=b|0;return C(5,a|0,b|0)|0}function Uf(a,b){a=a|0;b=b|0;return C(6,a|0,b|0)|0}function Vf(a,b){a=a|0;b=b|0;return C(7,a|0,b|0)|0}function Wf(a,b){a=a|0;b=b|0;return C(8,a|0,b|0)|0}function Xf(a,b){a=a|0;b=b|0;return C(9,a|0,b|0)|0}function Yf(a,b){a=a|0;b=b|0;return C(10,a|0,b|0)|0}function Zf(a,b){a=a|0;b=b|0;return C(11,a|0,b|0)|0}function _f(a,b){a=a|0;b=b|0;return C(12,a|0,b|0)|0}function $f(a,b){a=a|0;b=b|0;return C(13,a|0,b|0)|0}function ag(a,b){a=a|0;b=b|0;return C(14,a|0,b|0)|0}function bg(a,b){a=a|0;b=b|0;return C(15,a|0,b|0)|0}function cg(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return ma[a&31](b|0,c|0,d|0)|0}function dg(a,b,c){a=a|0;b=b|0;c=c|0;return D(0,a|0,b|0,c|0)|0}function eg(a,b,c){a=a|0;b=b|0;c=c|0;return D(1,a|0,b|0,c|0)|0}function fg(a,b,c){a=a|0;b=b|0;c=c|0;return D(2,a|0,b|0,c|0)|0}function gg(a,b,c){a=a|0;b=b|0;c=c|0;return D(3,a|0,b|0,c|0)|0}function hg(a,b,c){a=a|0;b=b|0;c=c|0;return D(4,a|0,b|0,c|0)|0}function ig(a,b,c){a=a|0;b=b|0;c=c|0;return D(5,a|0,b|0,c|0)|0}function jg(a,b,c){a=a|0;b=b|0;c=c|0;return D(6,a|0,b|0,c|0)|0}function kg(a,b,c){a=a|0;b=b|0;c=c|0;return D(7,a|0,b|0,c|0)|0}function lg(a,b,c){a=a|0;b=b|0;c=c|0;return D(8,a|0,b|0,c|0)|0}function mg(a,b,c){a=a|0;b=b|0;c=c|0;return D(9,a|0,b|0,c|0)|0}function ng(a,b,c){a=a|0;b=b|0;c=c|0;return D(10,a|0,b|0,c|0)|0}function og(a,b,c){a=a|0;b=b|0;c=c|0;return D(11,a|0,b|0,c|0)|0}function pg(a,b,c){a=a|0;b=b|0;c=c|0;return D(12,a|0,b|0,c|0)|0}function qg(a,b,c){a=a|0;b=b|0;c=c|0;return D(13,a|0,b|0,c|0)|0}function rg(a,b,c){a=a|0;b=b|0;c=c|0;return D(14,a|0,b|0,c|0)|0}function sg(a,b,c){a=a|0;b=b|0;c=c|0;return D(15,a|0,b|0,c|0)|0}function tg(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return na[a&31](b|0,c|0,d|0,e|0)|0}function ug(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return E(0,a|0,b|0,c|0,d|0)|0}function vg(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return E(1,a|0,b|0,c|0,d|0)|0}function wg(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return E(2,a|0,b|0,c|0,d|0)|0}function xg(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return E(3,a|0,b|0,c|0,d|0)|0}function yg(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return E(4,a|0,b|0,c|0,d|0)|0}function zg(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return E(5,a|0,b|0,c|0,d|0)|0}function Ag(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return E(6,a|0,b|0,c|0,d|0)|0}function Bg(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return E(7,a|0,b|0,c|0,d|0)|0}function Cg(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return E(8,a|0,b|0,c|0,d|0)|0}function Dg(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return E(9,a|0,b|0,c|0,d|0)|0}function Eg(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return E(10,a|0,b|0,c|0,d|0)|0}function Fg(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return E(11,a|0,b|0,c|0,d|0)|0}function Gg(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return E(12,a|0,b|0,c|0,d|0)|0}function Hg(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return E(13,a|0,b|0,c|0,d|0)|0}function Ig(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return E(14,a|0,b|0,c|0,d|0)|0}function Jg(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return E(15,a|0,b|0,c|0,d|0)|0}function Kg(a,b,c){a=a|0;b=b|0;c=c|0;oa[a&31](b|0,c|0)}function Lg(a,b){a=a|0;b=b|0;F(0,a|0,b|0)}function Mg(a,b){a=a|0;b=b|0;F(1,a|0,b|0)}function Ng(a,b){a=a|0;b=b|0;F(2,a|0,b|0)}function Og(a,b){a=a|0;b=b|0;F(3,a|0,b|0)}function Pg(a,b){a=a|0;b=b|0;F(4,a|0,b|0)}function Qg(a,b){a=a|0;b=b|0;F(5,a|0,b|0)}function Rg(a,b){a=a|0;b=b|0;F(6,a|0,b|0)}function Sg(a,b){a=a|0;b=b|0;F(7,a|0,b|0)}function Tg(a,b){a=a|0;b=b|0;F(8,a|0,b|0)}function Ug(a,b){a=a|0;b=b|0;F(9,a|0,b|0)}function Vg(a,b){a=a|0;b=b|0;F(10,a|0,b|0)}function Wg(a,b){a=a|0;b=b|0;F(11,a|0,b|0)}function Xg(a,b){a=a|0;b=b|0;F(12,a|0,b|0)}function Yg(a,b){a=a|0;b=b|0;F(13,a|0,b|0)}function Zg(a,b){a=a|0;b=b|0;F(14,a|0,b|0)}function _g(a,b){a=a|0;b=b|0;F(15,a|0,b|0)}function $g(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;pa[a&31](b|0,c|0,d|0)}function ah(a,b,c){a=a|0;b=b|0;c=c|0;G(0,a|0,b|0,c|0)}function bh(a,b,c){a=a|0;b=b|0;c=c|0;G(1,a|0,b|0,c|0)}function ch(a,b,c){a=a|0;b=b|0;c=c|0;G(2,a|0,b|0,c|0)}function dh(a,b,c){a=a|0;b=b|0;c=c|0;G(3,a|0,b|0,c|0)}function eh(a,b,c){a=a|0;b=b|0;c=c|0;G(4,a|0,b|0,c|0)}function fh(a,b,c){a=a|0;b=b|0;c=c|0;G(5,a|0,b|0,c|0)}function gh(a,b,c){a=a|0;b=b|0;c=c|0;G(6,a|0,b|0,c|0)}function hh(a,b,c){a=a|0;b=b|0;c=c|0;G(7,a|0,b|0,c|0)}function ih(a,b,c){a=a|0;b=b|0;c=c|0;G(8,a|0,b|0,c|0)}function jh(a,b,c){a=a|0;b=b|0;c=c|0;G(9,a|0,b|0,c|0)}function kh(a,b,c){a=a|0;b=b|0;c=c|0;G(10,a|0,b|0,c|0)}function lh(a,b,c){a=a|0;b=b|0;c=c|0;G(11,a|0,b|0,c|0)}function mh(a,b,c){a=a|0;b=b|0;c=c|0;G(12,a|0,b|0,c|0)}function nh(a,b,c){a=a|0;b=b|0;c=c|0;G(13,a|0,b|0,c|0)}function oh(a,b,c){a=a|0;b=b|0;c=c|0;G(14,a|0,b|0,c|0)}function ph(a,b,c){a=a|0;b=b|0;c=c|0;G(15,a|0,b|0,c|0)}function qh(a){a=a|0;x(0);return 0}function rh(a,b,c,d,e,f){a=a|0;b=+b;c=c|0;d=d|0;e=e|0;f=f|0;x(1);return 0}function sh(a,b){a=a|0;b=b|0;x(2);return 0}function th(a,b,c){a=a|0;b=b|0;c=c|0;x(3);return 0}function uh(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;x(4);return 0}function vh(a,b){a=a|0;b=b|0;x(5)}function wh(a,b,c){a=a|0;b=b|0;c=c|0;x(6)}\n\n// EMSCRIPTEN_END_FUNCS\nvar ja=[qh,ff,gf,hf,jf,kf,lf,mf,nf,of,pf,qf,rf,sf,tf,uf,vf,Ad,Bd,Cd,Dd,wd,xd,yd,zd,Ld,sd,vd,Ed,qh,qh,qh];var ka=[rh,xf,yf,zf,Af,Bf,Cf,Df,Ef,Ff,Gf,Hf,If,Jf,Kf,Lf,Mf,Xd,rh,rh,rh,rh,rh,rh,rh,rh,rh,rh,rh,rh,rh,rh];var la=[sh,Of,Pf,Qf,Rf,Sf,Tf,Uf,Vf,Wf,Xf,Yf,Zf,_f,$f,ag,bg,Eb,Gb,Ib,pd,sh,sh,sh,sh,sh,sh,sh,sh,sh,sh,sh];var ma=[th,dg,eg,fg,gg,hg,ig,jg,kg,lg,mg,ng,og,pg,qg,rg,sg,Fd,re,Ta,Kd,th,th,th,th,th,th,th,th,th,th,th];var na=[uh,ug,vg,wg,xg,yg,zg,Ag,Bg,Cg,Dg,Eg,Fg,Gg,Hg,Ig,Jg,Md,Gd,uh,uh,uh,uh,uh,uh,uh,uh,uh,uh,uh,uh,uh];var oa=[vh,Lg,Mg,Ng,Og,Pg,Qg,Rg,Sg,Tg,Ug,Vg,Wg,Xg,Yg,Zg,_g,Yd,vh,vh,vh,vh,vh,vh,vh,vh,vh,vh,vh,vh,vh,vh];var pa=[wh,ah,bh,ch,dh,eh,fh,gh,hh,ih,jh,kh,lh,mh,nh,oh,ph,Fb,Hb,Jb,qd,wh,wh,wh,wh,wh,wh,wh,wh,wh,wh,wh];return{_KSSPLAY_calc:_a,_KSSPLAY_calc_silent:$a,_KSSPLAY_delete:Xa,_KSSPLAY_fade_start:Za,_KSSPLAY_get_fade_flag:Ya,_KSSPLAY_get_loop_count:ab,_KSSPLAY_get_stop_flag:bb,_KSSPLAY_new:Ua,_KSSPLAY_reset:Sa,_KSSPLAY_set_data:Ra,_KSSPLAY_set_device_quality:Va,_KSSPLAY_set_iowrite_handler:db,_KSSPLAY_set_memwrite_handler:eb,_KSSPLAY_set_rcf:Wa,_KSSPLAY_set_silent_limit:cb,_KSSPLAY_write_io:fb,_KSSPLAY_write_memory:gb,_KSS_bin2kss:za,_KSS_delete:wa,_KSS_get_title:va,_KSS_new:ua,___errno_location:Id,___muldi3:Ve,___udivdi3:_e,_bitshift64Lshr:$e,_bitshift64Shl:af,_emscripten_get_sbrk_ptr:bf,_free:Oe,_i64Add:We,_i64Subtract:Xe,_malloc:Ne,_memcpy:cf,_memset:df,dynCall_ii:ef,dynCall_iidiiii:wf,dynCall_iii:Nf,dynCall_iiii:cg,dynCall_iiiii:tg,dynCall_vii:Kg,dynCall_viii:$g,establishStackSpace:ta,stackAlloc:qa,stackRestore:sa,stackSave:ra}})\n\n\n// EMSCRIPTEN_END_ASM\n(asmGlobalArg,asmLibraryArg,buffer);var _KSSPLAY_calc=Module[\"_KSSPLAY_calc\"]=asm[\"_KSSPLAY_calc\"];var _KSSPLAY_calc_silent=Module[\"_KSSPLAY_calc_silent\"]=asm[\"_KSSPLAY_calc_silent\"];var _KSSPLAY_delete=Module[\"_KSSPLAY_delete\"]=asm[\"_KSSPLAY_delete\"];var _KSSPLAY_fade_start=Module[\"_KSSPLAY_fade_start\"]=asm[\"_KSSPLAY_fade_start\"];var _KSSPLAY_get_fade_flag=Module[\"_KSSPLAY_get_fade_flag\"]=asm[\"_KSSPLAY_get_fade_flag\"];var _KSSPLAY_get_loop_count=Module[\"_KSSPLAY_get_loop_count\"]=asm[\"_KSSPLAY_get_loop_count\"];var _KSSPLAY_get_stop_flag=Module[\"_KSSPLAY_get_stop_flag\"]=asm[\"_KSSPLAY_get_stop_flag\"];var _KSSPLAY_new=Module[\"_KSSPLAY_new\"]=asm[\"_KSSPLAY_new\"];var _KSSPLAY_reset=Module[\"_KSSPLAY_reset\"]=asm[\"_KSSPLAY_reset\"];var _KSSPLAY_set_data=Module[\"_KSSPLAY_set_data\"]=asm[\"_KSSPLAY_set_data\"];var _KSSPLAY_set_device_quality=Module[\"_KSSPLAY_set_device_quality\"]=asm[\"_KSSPLAY_set_device_quality\"];var _KSSPLAY_set_iowrite_handler=Module[\"_KSSPLAY_set_iowrite_handler\"]=asm[\"_KSSPLAY_set_iowrite_handler\"];var _KSSPLAY_set_memwrite_handler=Module[\"_KSSPLAY_set_memwrite_handler\"]=asm[\"_KSSPLAY_set_memwrite_handler\"];var _KSSPLAY_set_rcf=Module[\"_KSSPLAY_set_rcf\"]=asm[\"_KSSPLAY_set_rcf\"];var _KSSPLAY_set_silent_limit=Module[\"_KSSPLAY_set_silent_limit\"]=asm[\"_KSSPLAY_set_silent_limit\"];var _KSSPLAY_write_io=Module[\"_KSSPLAY_write_io\"]=asm[\"_KSSPLAY_write_io\"];var _KSSPLAY_write_memory=Module[\"_KSSPLAY_write_memory\"]=asm[\"_KSSPLAY_write_memory\"];var _KSS_bin2kss=Module[\"_KSS_bin2kss\"]=asm[\"_KSS_bin2kss\"];var _KSS_delete=Module[\"_KSS_delete\"]=asm[\"_KSS_delete\"];var _KSS_get_title=Module[\"_KSS_get_title\"]=asm[\"_KSS_get_title\"];var _KSS_new=Module[\"_KSS_new\"]=asm[\"_KSS_new\"];var ___errno_location=Module[\"___errno_location\"]=asm[\"___errno_location\"];var ___muldi3=Module[\"___muldi3\"]=asm[\"___muldi3\"];var ___udivdi3=Module[\"___udivdi3\"]=asm[\"___udivdi3\"];var _bitshift64Lshr=Module[\"_bitshift64Lshr\"]=asm[\"_bitshift64Lshr\"];var _bitshift64Shl=Module[\"_bitshift64Shl\"]=asm[\"_bitshift64Shl\"];var _emscripten_get_sbrk_ptr=Module[\"_emscripten_get_sbrk_ptr\"]=asm[\"_emscripten_get_sbrk_ptr\"];var _free=Module[\"_free\"]=asm[\"_free\"];var _i64Add=Module[\"_i64Add\"]=asm[\"_i64Add\"];var _i64Subtract=Module[\"_i64Subtract\"]=asm[\"_i64Subtract\"];var _malloc=Module[\"_malloc\"]=asm[\"_malloc\"];var _memcpy=Module[\"_memcpy\"]=asm[\"_memcpy\"];var _memset=Module[\"_memset\"]=asm[\"_memset\"];var establishStackSpace=Module[\"establishStackSpace\"]=asm[\"establishStackSpace\"];var stackAlloc=Module[\"stackAlloc\"]=asm[\"stackAlloc\"];var stackRestore=Module[\"stackRestore\"]=asm[\"stackRestore\"];var stackSave=Module[\"stackSave\"]=asm[\"stackSave\"];var dynCall_ii=Module[\"dynCall_ii\"]=asm[\"dynCall_ii\"];var dynCall_iidiiii=Module[\"dynCall_iidiiii\"]=asm[\"dynCall_iidiiii\"];var dynCall_iii=Module[\"dynCall_iii\"]=asm[\"dynCall_iii\"];var dynCall_iiii=Module[\"dynCall_iiii\"]=asm[\"dynCall_iiii\"];var dynCall_iiiii=Module[\"dynCall_iiiii\"]=asm[\"dynCall_iiiii\"];var dynCall_vii=Module[\"dynCall_vii\"]=asm[\"dynCall_vii\"];var dynCall_viii=Module[\"dynCall_viii\"]=asm[\"dynCall_viii\"];Module[\"asm\"]=asm;Module[\"ccall\"]=ccall;Module[\"cwrap\"]=cwrap;Module[\"addFunction\"]=addFunction;Module[\"removeFunction\"]=removeFunction;if(memoryInitializer){if(!isDataURI(memoryInitializer)){memoryInitializer=locateFile(memoryInitializer)}if(ENVIRONMENT_IS_NODE||ENVIRONMENT_IS_SHELL){var data=readBinary(memoryInitializer);HEAPU8.set(data,GLOBAL_BASE)}else{addRunDependency(\"memory initializer\");var applyMemoryInitializer=function(data){if(data.byteLength)data=new Uint8Array(data);HEAPU8.set(data,GLOBAL_BASE);if(Module[\"memoryInitializerRequest\"])delete Module[\"memoryInitializerRequest\"].response;removeRunDependency(\"memory initializer\")};var doBrowserLoad=function(){readAsync(memoryInitializer,applyMemoryInitializer,function(){throw\"could not load memory initializer \"+memoryInitializer})};var memoryInitializerBytes=tryParseAsDataURI(memoryInitializer);if(memoryInitializerBytes){applyMemoryInitializer(memoryInitializerBytes.buffer)}else if(Module[\"memoryInitializerRequest\"]){var useRequest=function(){var request=Module[\"memoryInitializerRequest\"];var response=request.response;if(request.status!==200&&request.status!==0){var data=tryParseAsDataURI(Module[\"memoryInitializerRequestURL\"]);if(data){response=data.buffer}else{console.warn(\"a problem seems to have happened with Module.memoryInitializerRequest, status: \"+request.status+\", retrying \"+memoryInitializer);doBrowserLoad();return}}applyMemoryInitializer(response)};if(Module[\"memoryInitializerRequest\"].response){setTimeout(useRequest,0)}else{Module[\"memoryInitializerRequest\"].addEventListener(\"load\",useRequest)}}else{doBrowserLoad()}}}var calledRun;Module[\"then\"]=function(func){if(calledRun){func(Module)}else{var old=Module[\"onRuntimeInitialized\"];Module[\"onRuntimeInitialized\"]=function(){if(old)old();func(Module)}}return Module};function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0)return;function doRun(){if(calledRun)return;calledRun=true;if(ABORT)return;initRuntime();preMain();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}noExitRuntime=true;run();\n\n\n\n  return Module\n}\n);\n})();\nif (true)\n      module.exports = Module;\n    else {}\n    \n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ \"../node_modules/process/browser.js\"), \"/\", __webpack_require__(/*! ./../../buffer/index.js */ \"../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/libkss-js/lib/libkss.js?");

/***/ }),

/***/ "../node_modules/libkss-js/src/index.js":
/*!**********************************************!*\
  !*** ../node_modules/libkss-js/src/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("(function() {\n  \"use strict\";\n\n  var LIB = function() {};\n  LIB.KSS = __webpack_require__(/*! ./kss */ \"../node_modules/libkss-js/src/kss.js\");\n  LIB.KSSPlay = __webpack_require__(/*! ./kssplay */ \"../node_modules/libkss-js/src/kssplay.js\");\n\n  if (true) {\n    module.exports = LIB;\n  } else {}\n})();\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/libkss-js/src/index.js?");

/***/ }),

/***/ "../node_modules/libkss-js/src/kss.js":
/*!********************************************!*\
  !*** ../node_modules/libkss-js/src/kss.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("(function() {\n  \"use strict\";\n\n  var Module = __webpack_require__(/*! ./module */ \"../node_modules/libkss-js/src/module.js\");\n  var encoding = __webpack_require__(/*! encoding-japanese */ \"../node_modules/encoding-japanese/src/index.js\");\n  var crypto = __webpack_require__(/*! crypto */ \"../node_modules/crypto-browserify/index.js\");\n  var alg = \"sha1\";\n\n  /**\n   * Create a new KSS object.\n   * @name KSS\n   * @constructor\n   * @param {UInt8Array} data the KSS file binary.\n   * @param {string} filename the name of the KSS file (used only for determine file type).\n   * @param {number} [song=0] internal song index. (0 to 255)\n   */\n  var KSS = function(data, filename, song) {\n    song = song || 0;\n    if (256 * 65536 < data.length) {\n      throw new Error(\"Wrong data format.\");\n    }\n\n    var buf = Module._malloc(data.length);\n    Module.HEAPU8.set(data, buf);\n    this.obj = Module.ccall(\"KSS_bin2kss\", \"number\", [\"number\", \"number\", \"string\"], [buf, data.length, filename]);\n    if (this.obj == 0) {\n      throw new Error(\"Can't create KSS object.\");\n    }\n    this.song = song;\n    Module._free(buf);\n  };\n\n  KSS.hashMap = {};\n  /**\n   * Destory all the cached KSS instances that generated from this library.\n   * @memberof KSS\n   * @static\n   */\n  KSS.releaseAll = function() {\n    for (var key in KSS.hashMap) {\n      KSS.hashMap[key].release();\n    }\n  };\n\n  /**\n   * Create a unique KSS object. If the same data is given, this function returns the same KSS instance.\n   * @param {UInt8Array} data the KSS file binary.\n   * @param {string} filename the name of the KSS file.\n   * @param {number} [song=0] internal song index.\n   * @returns A KSS instance.\n   * @memberof KSS\n   * @static\n   */\n  KSS.createUniqueInstance = function(data, filename, song) {\n    song = song || 0;\n    var hash = crypto.createHash(alg);\n    hash.update(data);\n    var hashHex = alg + \":\" + hash.digest(\"hex\") + \":\" + song;\n\n    var kss = KSS.hashMap[hashHex];\n    if (kss) {\n      return kss;\n    }\n\n    kss = new KSS(data, filename, song);\n    kss.hash = hashHex;\n    KSS.hashMap[kss.hash] = kss;\n\n    // KSCC\n    if (data[0] == 75 && data[1] == 83 && data[2] == 67 && data[3] == 67) {\n      kss.hasMultiSongs = true;\n    }\n\n    // KSSX\n    if (data[0] == 75 && data[1] == 83 && data[2] == 83 && data[3] == 88) {\n      kss.hasMultiSongs = true;\n    }\n\n    return kss;\n  };\n\n  /**\n   * Load KSS file from URL.\n   * @param {string} url\n   * @param {Function} [complete] - callback for load completion.\n   * @memberof KSS\n   * @static\n   */\n  KSS.loadFromUrl = function(url, complete) {\n    var xhr = new XMLHttpRequest();\n\n    xhr.open(\"GET\", url, true);\n    xhr.responseType = \"arraybuffer\";\n\n    var err;\n\n    xhr.addEventListener(\"load\", function() {\n      if (xhr.status == 200 || xhr.status == 304 || xhr.status == 0) {\n        try {\n          var kss = KSS.createUniqueInstance(new Uint8Array(xhr.response), url);\n          if (complete) complete(kss, url);\n        } catch (e) {\n          if (complete) complete(e, url);\n        }\n      } else if (xhr.status == 404) {\n        err = new Error(\"File Not Found: \" + url);\n        if (complete) complete(err, url);\n      } else {\n        err = new Error(xhr.statusText);\n        if (complete) complete(err, url);\n      }\n    });\n\n    xhr.addEventListener(\"error\", function() {\n      var err = new Error(\n        'Load Error: Check \"Access-Control-Allow-Origin\" header is present for the target resource. See browser\\'s development panel for detail. If you run this script local Chrome, `--allow-file-access-from-files` option is required.'\n      );\n      if (complete) complete(err, url);\n    });\n    xhr.send();\n  };\n\n  /**\n   * get title string of the KSS file. This function assumes the title string of KSS is simple ASCII or SJIS encoded.\n   * @method\n   * @memberof KSS\n   * @returns The title string if exists.\n   */\n  KSS.prototype.getTitle = function() {\n    var ptr = Module.ccall(\"KSS_get_title\", \"number\", [\"number\"], [this.obj]);\n    var i;\n    for (i = 0; i < 256; i++) {\n      if (Module.HEAPU8[ptr + i] == 0) break;\n    }\n    return encoding.convert(new Uint8Array(Module.HEAPU8.buffer, ptr, i), {\n      to: \"UNICODE\",\n      from: \"SJIS\",\n      type: \"String\"\n    });\n  };\n\n  /**\n   * Release the object. Without calling this method will cause memory-leak.\n   * @method\n   * @memberof KSS\n   */\n  KSS.prototype.release = function() {\n    if (this.obj) {\n      Module.ccall(\"KSS_delete\", null, [\"number\"], [this.obj]);\n      this.obj = null;\n      delete KSS.hashMap[this.hash];\n    } else {\n      throw new Error(\"KSS double-release: \" + this.hash);\n    }\n  };\n\n  if (true) {\n    module.exports = KSS;\n  } else {}\n})();\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/libkss-js/src/kss.js?");

/***/ }),

/***/ "../node_modules/libkss-js/src/kssplay.js":
/*!************************************************!*\
  !*** ../node_modules/libkss-js/src/kssplay.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("(function() {\n  \"use strict\";\n\n  var Module = __webpack_require__(/*! ./module */ \"../node_modules/libkss-js/src/module.js\");\n\n  /**\n   * Create a new KSS player instance.\n   * @name KSSPlay\n   * @constructor\n   * @param {number} [rate=44100] - The audio playback rate.\n   */\n  var KSSPlay = function(rate) {\n    this._kssplay = Module.ccall(\"KSSPLAY_new\", \"number\", [\"number\", \"number\", \"number\"], [rate || 44100, 1, 16]);\n    this._buffer = null;\n    this._song = 0;\n  };\n\n  function deviceNameToId(name) {\n    if (name === \"psg\" || name === \"ym2149\" || name === \"ay-3-8910\") {\n      return 0;\n    }\n    if (name === \"scc\" || name === \"scc+\") {\n      return 1;\n    }\n    if (name === \"ym2413\" || name == \"opll\") {\n      return 2;\n    }\n    if (name === \"y8950\" || name == \"opl\") {\n      return 3;\n    }\n    return -1;\n  }\n\n  KSSPlay._emscriptenModule = Module;\n\n  /**\n   * Delegate of the malloc function on the emscripten heap.\n   * @static\n   * @memberof KSSPlay\n   * @param {number} [size]\n   * @returns {number} The pointer to the allocated buffer.\n   */\n  KSSPlay._malloc = function(size) {\n    return Module._malloc(size);\n  };\n\n  /**\n   * Delegate of the free function on the emscripten heap.\n   * @static\n   * @memberof KSSPlay\n   * @param {number} [ptr] The pointer to the allocated buffer.\n   */\n  KSSPlay._free = function(ptr) {\n    Module._free(ptr);\n  };\n\n  /**\n   * Make Int16Array from the pointer of the allocated memory on emuscripten heap.\n   * @static\n   * @memberof KSSPlay\n   * @param {number} [ptr] The pointer to the allocated buffer.\n   * @param {number} [size] The size of Int16Array.\n   * @returns {Int16Array}\n   */\n  KSSPlay.toInt16Array = function(ptr, size) {\n    return new Int16Array(Module.HEAPU8.buffer, ptr, size);\n  };\n\n  /**\n   * Specify the playback quality of the devices.\n   * @method\n   * @memberof KSSPlay\n   * @param {Object} config\n   * @param {number} [config.psg] - 0:low 1:high\n   * @param {number} [config.scc] - 0:low 1:high\n   * @param {number} [config.opll] - 0:low 1:high\n   * @param {number} [config.opl] - 0:low 1:high\n   */\n  KSSPlay.prototype.setDeviceQuality = function(config) {\n    config = config || {};\n    for (var key in config) {\n      var devId = deviceNameToId(key);\n      var quality = config[key];\n      if (0 <= devId) {\n        Module.ccall(\n          \"KSSPLAY_set_device_quality\",\n          null,\n          [\"number\", \"number\", \"number\"],\n          [this._kssplay, devId, quality]\n        );\n      }\n    }\n  };\n\n  /**\n   * Set the kss object for playing.\n   * @method\n   * @memberof KSSPlay\n   * @param {KSS} kss - kss instance.\n   */\n  KSSPlay.prototype.setData = function(kss) {\n    this._song = kss.song;\n    Module.ccall(\"KSSPLAY_set_data\", null, [\"number\", \"number\"], [this._kssplay, kss.obj]);\n  };\n\n  /**\n   * Resets the player.\n   * @method\n   * @memberof KSSPlay\n   * @param {number} [song=0|null] The song number to play. If null, song index stored in KSS object is used.\n   * @param {number} [cpuSpeed=0] 0:auto, <=1: cpu speed factor.\n   */\n\n  KSSPlay.prototype.reset = function(song, cpuSpeed) {\n    Module.ccall(\n      \"KSSPLAY_reset\",\n      null,\n      [\"number\", \"number\", \"number\"],\n      [this._kssplay, song || this._song, cpuSpeed || 0]\n    );\n  };\n\n  KSSPlay.prototype._ensureBufferSize = function(size) {\n    if (this._buffer != null && this._buffer.length < size) {\n      Module._free(this._buffer);\n      this._buffer = null;\n    }\n    if (this._buffer == null) {\n      this._buffer = Module._malloc(size);\n    }\n  };\n\n  /**\n   * Calculate specified length of wave samples.\n   * @method\n   * @memberof KSSPlay\n   * @param {number} samples The number of samples to render.\n   * @returns {Int16Array} The generated samples.\n   */\n  KSSPlay.prototype.calc = function(samples) {\n    this._ensureBufferSize(samples * 2);\n    this.calcToBuffer(this._buffer, samples);\n    return new Int16Array(Module.HEAPU8.buffer, this._buffer, samples).slice();\n  };\n\n  /**\n   * @method\n   * @memberof KSSPlay\n   * @param {number} buffer The pointer to the sample buffer.\n   * @param {number} samples The number of samples to render.\n   */\n  KSSPlay.prototype.calcToBuffer = function(buffer, samples) {\n    Module.ccall(\"KSSPLAY_calc\", null, [\"number\", \"number\", \"number\"], [this._kssplay, buffer, samples]);\n  };\n\n  /**\n   * Calculate specified length without rendering wave.\n   * @method\n   * @memberof KSSPlay\n   * @param {number} samples The number of samples to calculate.\n   */\n  KSSPlay.prototype.calcSilent = function(samples) {\n    Module.ccall(\"KSSPLAY_calc_silent\", null, [\"number\", \"number\"], [this._kssplay, samples]);\n  };\n\n  /**\n   * Get the number of loops of the current playing music.\n   * @method\n   * @memberof KSSPlay\n   * @returns The number of the current loop counts.\n   */\n  KSSPlay.prototype.getLoopCount = function() {\n    return Module.ccall(\"KSSPLAY_get_loop_count\", \"number\", [\"number\"], [this._kssplay]);\n  };\n\n  /**\n   * Get progress of the fading-out.\n   * @returns 0: Not started, 1: In progress, 3: Completed.\n   */\n  KSSPlay.prototype.getFadeFlag = function() {\n    return Module.ccall(\"KSSPLAY_get_fade_flag\", \"number\", [\"number\"], [this._kssplay]);\n  };\n\n  /**\n   * Set the limit of the slient length. The player automatically stops if it detects silent longer than this limit.\n   * @method\n   * @memberof KSSPlay\n   * @param {number} time maximum silent span in millis.\n   */\n  KSSPlay.prototype.setSilentLimit = function(time) {\n    Module.ccall(\"KSSPLAY_set_silent_limit\", null, [\"number\", \"number\"], [this._kssplay, time]);\n  };\n\n  /**\n   * Starts the fade-out.\n   * @method\n   * @memberof KSSPlay\n   * @param {number} duration fade-out duration in millis.\n   */\n  KSSPlay.prototype.fadeStart = function(duration) {\n    Module.ccall(\"KSSPLAY_fade_start\", null, [\"number\", \"number\"], [this._kssplay, duration]);\n  };\n\n  /**\n   * Check the player is stopped or not.\n   * @method\n   * @memberof KSSPlay\n   * @returns 0: not stopped, 1: stopped.\n   */\n  KSSPlay.prototype.getStopFlag = function() {\n    return Module.ccall(\"KSSPLAY_get_stop_flag\", \"number\", [\"number\"], [this._kssplay]);\n  };\n\n  /**\n   * Set RC low-pass filter params.\n   * @method\n   * @memberof KSSPlay\n   * @param {number} r - Registor (OM)\n   * @param {number} c - Capacitor (nF)\n   */\n  KSSPlay.prototype.setRCF = function(r, c) {\n    return Module.ccall(\"KSSPLAY_set_rcf\", null, [\"number\", \"number\"], [this._kssplay, r, c]);\n  };\n\n  /**\n   * Release the object. Without calling this method will cause memory-leak.\n   * @method\n   * @memberof KSSPlay\n   */\n  KSSPlay.prototype.release = function() {\n    Module.ccall(\"KSSPLAY_delete\", null, [\"number\"], [this._kssplay]);\n    if (this._memwrite_handler) {\n      Module.removeFunction(this._memwrite_handler);\n      this._memwrite_handler = null;\n    }\n    if (this._iowrite_handler) {\n      Module.removeFunction(this._iowrite_handler);\n      this._iowrite_handler = null;\n    }\n    this._kssplay = null;\n    if (this._buffer != null) {\n      Module._free(this._buffer);\n      this._buffer = null;\n    }\n  };\n\n  /**\n   * @callback KSSPlay~IOWriteHandler\n   * @param {KSSPlay} context\n   * @param {number} adr\n   * @param {number} data\n   */\n\n  /**\n   * Set I/O write handler\n   * @method\n   * @memberof KSSPlay\n   * @param {KSSPlay~IOWriteHandler} callback\n   */\n  KSSPlay.prototype.setIOWriteHandler = function(callback) {\n    if (this._iowrite_handler) {\n      Module.removeFunction(this._iowrite_handler);\n    }\n\n    this._iowrite_handler = Module.addFunction((_, a, d) => callback(this, a, d), \"viii\");\n\n    Module.ccall(\n      \"KSSPLAY_set_iowrite_handler\",\n      null,\n      [\"number\", \"number\", \"number\"],\n      [this._kssplay, 0, this._iowrite_handler]\n    );\n  };\n\n  /**\n   * @callback KSSPlay~MemWriteHandler\n   * @param {KSSPlay} context\n   * @param {number} adr\n   * @param {number} data\n   */\n\n  /**\n   * Set memory write handler\n   * @method\n   * @memberof KSSPlay\n   * @param {KSSPlay~MemWriteHandler} callback\n   */\n  KSSPlay.prototype.setMemWriteHandler = function(callback) {\n    if (this._memwrite_handler) {\n      Module.removeFunction(this._memwrite_handler);\n    }\n    this._memwrite_handler = Module.addFunction((_, a, d) => callback(this, a, d), \"viii\");\n    Module.ccall(\n      \"KSSPLAY_set_memwrite_handler\",\n      null,\n      [\"number\", \"number\", \"number\"],\n      [this._kssplay, 0, this._memwrite_handler]\n    );\n  };\n\n  KSSPlay.prototype.writeIO = function(a, d) {\n    Module.ccall(\"KSSPLAY_write_io\", null, [\"number\", \"number\", \"number\"], [this._kssplay, a, d]);\n  };\n\n  KSSPlay.prototype.writeMemory = function(a, d) {\n    Module.ccall(\"KSSPLAY_write_io\", null, [\"number\", \"number\", \"number\"], [this._kssplay, a, d]);\n  };\n\n  if (true) {\n    module.exports = KSSPlay;\n  } else {}\n})();\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/libkss-js/src/kssplay.js?");

/***/ }),

/***/ "../node_modules/libkss-js/src/module.js":
/*!***********************************************!*\
  !*** ../node_modules/libkss-js/src/module.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("(function() {\n  var m = __webpack_require__(/*! ../lib/libkss */ \"../node_modules/libkss-js/lib/libkss.js\")();\n  if (true) {\n    module.exports = m;\n  } else {}\n})();\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/libkss-js/src/module.js?");

/***/ }),

/***/ "../node_modules/md5.js/index.js":
/*!***************************************!*\
  !*** ../node_modules/md5.js/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\nvar HashBase = __webpack_require__(/*! hash-base */ \"../node_modules/hash-base/index.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\n\nvar ARRAY16 = new Array(16)\n\nfunction MD5 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n}\n\ninherits(MD5, HashBase)\n\nMD5.prototype._update = function () {\n  var M = ARRAY16\n  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)\n\n  var a = this._a\n  var b = this._b\n  var c = this._c\n  var d = this._d\n\n  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)\n  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)\n  c = fnF(c, d, a, b, M[2], 0x242070db, 17)\n  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)\n  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)\n  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)\n  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)\n  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)\n  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)\n  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)\n  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)\n  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)\n  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)\n  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)\n  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)\n  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)\n\n  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)\n  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)\n  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)\n  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)\n  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)\n  d = fnG(d, a, b, c, M[10], 0x02441453, 9)\n  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)\n  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)\n  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)\n  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)\n  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)\n  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)\n  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)\n  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)\n  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)\n  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)\n\n  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)\n  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)\n  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)\n  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)\n  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)\n  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)\n  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)\n  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)\n  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)\n  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)\n  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)\n  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)\n  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)\n  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)\n  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)\n  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)\n\n  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)\n  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)\n  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)\n  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)\n  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)\n  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)\n  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)\n  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)\n  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)\n  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)\n  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)\n  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)\n  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)\n  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)\n  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)\n  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)\n\n  this._a = (this._a + a) | 0\n  this._b = (this._b + b) | 0\n  this._c = (this._c + c) | 0\n  this._d = (this._d + d) | 0\n}\n\nMD5.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.allocUnsafe(16)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fnF (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnG (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnH (a, b, c, d, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnI (a, b, c, d, m, k, s) {\n  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0\n}\n\nmodule.exports = MD5\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/md5.js/index.js?");

/***/ }),

/***/ "../node_modules/mgsc-js/lib/libmgsc.js":
/*!**********************************************!*\
  !*** ../node_modules/mgsc-js/lib/libmgsc.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process, __dirname, Buffer) {\nvar Module = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  return (\nfunction(Module) {\n  Module = Module || {};\n\nvar Module=typeof Module!==\"undefined\"?Module:{};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram=\"./this.program\";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_HAS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_HAS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";ENVIRONMENT_IS_NODE=ENVIRONMENT_HAS_NODE&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_NODE){scriptDirectory=__dirname+\"/\";var nodeFS;var nodePath;read_=function shell_read(filename,binary){var ret;ret=tryParseAsDataURI(filename);if(!ret){if(!nodeFS)nodeFS=__webpack_require__(/*! fs */ \"../node_modules/node-libs-browser/mock/empty.js\");if(!nodePath)nodePath=__webpack_require__(/*! path */ \"../node_modules/path-browserify/index.js\");filename=nodePath[\"normalize\"](filename);ret=nodeFS[\"readFileSync\"](filename)}return binary?ret:ret.toString()};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",abort);quit_=function(status){process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_SHELL){if(typeof read!=\"undefined\"){read_=function shell_read(f){var data=tryParseAsDataURI(f);if(data){return intArrayToString(data)}return read(f)}}readBinary=function readBinary(f){var data;data=tryParseAsDataURI(f);if(data){return data}if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){arguments_=scriptArgs}else if(typeof arguments!=\"undefined\"){arguments_=arguments}if(typeof quit===\"function\"){quit_=function(status){quit(status)}}if(typeof print!==\"undefined\"){if(typeof console===\"undefined\")console={};console.log=print;console.warn=console.error=typeof printErr!==\"undefined\"?printErr:print}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}read_=function shell_read(url){try{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText}catch(err){var data=tryParseAsDataURI(url);if(data){return intArrayToString(data)}throw err}};if(ENVIRONMENT_IS_WORKER){readBinary=function readBinary(url){try{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}catch(err){var data=tryParseAsDataURI(url);if(data){return data}throw err}}}readAsync=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}var data=tryParseAsDataURI(url);if(data){onload(data.buffer);return}onerror()};xhr.onerror=onerror;xhr.send(null)};setWindowTitle=function(title){document.title=title}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var STACK_ALIGN=16;function dynamicAlloc(size){var ret=HEAP32[DYNAMICTOP_PTR>>2];var end=ret+size+15&-16;if(end>_emscripten_get_heap_size()){abort()}HEAP32[DYNAMICTOP_PTR>>2]=end;return ret}function getNativeTypeSize(type){switch(type){case\"i1\":case\"i8\":return 1;case\"i16\":return 2;case\"i32\":return 4;case\"i64\":return 8;case\"float\":return 4;case\"double\":return 8;default:{if(type[type.length-1]===\"*\"){return 4}else if(type[0]===\"i\"){var bits=parseInt(type.substr(1));assert(bits%8===0,\"getNativeTypeSize invalid bits \"+bits+\", type \"+type);return bits/8}else{return 0}}}}function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;err(text)}}var jsCallStartIndex=1;var functionPointers=new Array(0);var funcWrappers={};function dynCall(sig,ptr,args){if(args&&args.length){return Module[\"dynCall_\"+sig].apply(null,[ptr].concat(args))}else{return Module[\"dynCall_\"+sig].call(null,ptr)}}var tempRet0=0;var setTempRet0=function(value){tempRet0=value};var getTempRet0=function(){return tempRet0};var GLOBAL_BASE=8;var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime;if(Module[\"noExitRuntime\"])noExitRuntime=Module[\"noExitRuntime\"];function setValue(ptr,value,type,noSafe){type=type||\"i8\";if(type.charAt(type.length-1)===\"*\")type=\"i32\";switch(type){case\"i1\":HEAP8[ptr>>0]=value;break;case\"i8\":HEAP8[ptr>>0]=value;break;case\"i16\":HEAP16[ptr>>1]=value;break;case\"i32\":HEAP32[ptr>>2]=value;break;case\"i64\":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=+1?tempDouble>+0?(Math_min(+Math_floor(tempDouble/+4294967296),+4294967295)|0)>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/+4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case\"float\":HEAPF32[ptr>>2]=value;break;case\"double\":HEAPF64[ptr>>3]=value;break;default:abort(\"invalid type for setValue: \"+type)}}var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}function getCFunc(ident){var func=Module[\"_\"+ident];assert(func,\"Cannot call unknown function \"+ident+\", make sure it is exported\");return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);ret=convertReturnValue(ret);if(stack!==0)stackRestore(stack);return ret}function cwrap(ident,returnType,argTypes,opts){argTypes=argTypes||[];var numericArgs=argTypes.every(function(type){return type===\"number\"});var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}var ALLOC_NONE=3;function allocate(slab,types,allocator,ptr){var zeroinit,size;if(typeof slab===\"number\"){zeroinit=true;size=slab}else{zeroinit=false;size=slab.length}var singleType=typeof types===\"string\"?types:null;var ret;if(allocator==ALLOC_NONE){ret=ptr}else{ret=[_malloc,stackAlloc,dynamicAlloc][allocator](Math.max(size,singleType?1:types.length))}if(zeroinit){var stop;ptr=ret;assert((ret&3)==0);stop=ret+(size&~3);for(;ptr<stop;ptr+=4){HEAP32[ptr>>2]=0}stop=ret+size;while(ptr<stop){HEAP8[ptr++>>0]=0}return ret}if(singleType===\"i8\"){if(slab.subarray||slab.slice){HEAPU8.set(slab,ret)}else{HEAPU8.set(new Uint8Array(slab),ret)}return ret}var i=0,type,typeSize,previousType;while(i<size){var curr=slab[i];type=singleType||types[i];if(type===0){i++;continue}if(type==\"i64\")type=\"i32\";setValue(ret+i,curr,type);if(previousType!==type){typeSize=getNativeTypeSize(type);previousType=type}i+=typeSize}return ret}function AsciiToString(ptr){var str=\"\";while(1){var ch=HEAPU8[ptr++>>0];if(!ch)return str;str+=String.fromCharCode(ch)}}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(u8Array,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(u8Array[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=u8Array[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|u8Array[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function allocateUTF8(str){var size=lengthBytesUTF8(str)+1;var ret=_malloc(size);if(ret)stringToUTF8Array(str,HEAP8,ret,size);return ret}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var STACK_BASE=109520,DYNAMIC_BASE=5352400,DYNAMICTOP_PTR=109312;var INITIAL_TOTAL_MEMORY=Module[\"TOTAL_MEMORY\"]||16777216;if(Module[\"buffer\"]){buffer=Module[\"buffer\"]}else{buffer=new ArrayBuffer(INITIAL_TOTAL_MEMORY)}INITIAL_TOTAL_MEMORY=buffer.byteLength;updateGlobalBufferAndViews(buffer);HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback();continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){Module[\"dynCall_v\"](func)}else{Module[\"dynCall_vi\"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;if(!Module[\"noFSInit\"]&&!FS.init.initialized)FS.init();TTY.init();callRuntimeCallbacks(__ATINIT__)}function preMain(){FS.ignorePermissions=false;callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){runtimeExited=true}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var Math_abs=Math.abs;var Math_ceil=Math.ceil;var Math_floor=Math.floor;var Math_min=Math.min;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function getUniqueRunDependency(id){return id}function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what+=\"\";out(what);err(what);ABORT=true;EXITSTATUS=1;throw\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\"}var memoryInitializer=null;var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return String.prototype.startsWith?filename.startsWith(dataURIPrefix):filename.indexOf(dataURIPrefix)===0}var tempDouble;var tempI64;__ATINIT__.push({func:function(){globalCtors()}});memoryInitializer=\"data:application/octet-stream;base64,\";var tempDoublePtr=109504;function demangle(func){return func}function demangleAll(text){var regex=/\\b__Z[\\w\\d_]+/g;return text.replace(regex,function(x){var y=demangle(x);return x===y?x:y+\" [\"+x+\"]\"})}function jsStackTrace(){var err=new Error;if(!err.stack){try{throw new Error(0)}catch(e){err=e}if(!err.stack){return\"(no stack trace available)\"}}return err.stack.toString()}function stackTrace(){var js=jsStackTrace();if(Module[\"extraStackTrace\"])js+=\"\\n\"+Module[\"extraStackTrace\"]();return demangleAll(js)}function ___assert_fail(condition,filename,line,func){abort(\"Assertion failed: \"+UTF8ToString(condition)+\", at: \"+[filename?UTF8ToString(filename):\"unknown filename\",line,func?UTF8ToString(func):\"unknown function\"])}function ___cxa_allocate_exception(size){return _malloc(size)}var ___exception_infos={};var ___exception_caught=[];function ___exception_addRef(ptr){if(!ptr)return;var info=___exception_infos[ptr];info.refcount++}function ___exception_deAdjust(adjusted){if(!adjusted||___exception_infos[adjusted])return adjusted;for(var key in ___exception_infos){var ptr=+key;var adj=___exception_infos[ptr].adjusted;var len=adj.length;for(var i=0;i<len;i++){if(adj[i]===adjusted){return ptr}}}return adjusted}function ___cxa_begin_catch(ptr){var info=___exception_infos[ptr];if(info&&!info.caught){info.caught=true;__ZSt18uncaught_exceptionv.uncaught_exceptions--}if(info)info.rethrown=false;___exception_caught.push(ptr);___exception_addRef(___exception_deAdjust(ptr));return ptr}var ___exception_last=0;function ___cxa_throw(ptr,type,destructor){___exception_infos[ptr]={ptr:ptr,adjusted:[ptr],type:type,destructor:destructor,refcount:0,caught:false,rethrown:false};___exception_last=ptr;if(!(\"uncaught_exception\"in __ZSt18uncaught_exceptionv)){__ZSt18uncaught_exceptionv.uncaught_exceptions=1}else{__ZSt18uncaught_exceptionv.uncaught_exceptions++}throw ptr}function ___gxx_personality_v0(){}function ___lock(){}function ___setErrNo(value){if(Module[\"___errno_location\"])HEAP32[Module[\"___errno_location\"]()>>2]=value;return value}function ___map_file(pathname,size){___setErrNo(63);return-1}var PATH={splitPath:function(filename){var splitPathRe=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;return splitPathRe.exec(filename).slice(1)},normalizeArray:function(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last===\".\"){parts.splice(i,1)}else if(last===\"..\"){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift(\"..\")}}return parts},normalize:function(path){var isAbsolute=path.charAt(0)===\"/\",trailingSlash=path.substr(-1)===\"/\";path=PATH.normalizeArray(path.split(\"/\").filter(function(p){return!!p}),!isAbsolute).join(\"/\");if(!path&&!isAbsolute){path=\".\"}if(path&&trailingSlash){path+=\"/\"}return(isAbsolute?\"/\":\"\")+path},dirname:function(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return\".\"}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir},basename:function(path){if(path===\"/\")return\"/\";var lastSlash=path.lastIndexOf(\"/\");if(lastSlash===-1)return path;return path.substr(lastSlash+1)},extname:function(path){return PATH.splitPath(path)[3]},join:function(){var paths=Array.prototype.slice.call(arguments,0);return PATH.normalize(paths.join(\"/\"))},join2:function(l,r){return PATH.normalize(l+\"/\"+r)}};var PATH_FS={resolve:function(){var resolvedPath=\"\",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!==\"string\"){throw new TypeError(\"Arguments to path.resolve must be strings\")}else if(!path){return\"\"}resolvedPath=path+\"/\"+resolvedPath;resolvedAbsolute=path.charAt(0)===\"/\"}resolvedPath=PATH.normalizeArray(resolvedPath.split(\"/\").filter(function(p){return!!p}),!resolvedAbsolute).join(\"/\");return(resolvedAbsolute?\"/\":\"\")+resolvedPath||\".\"},relative:function(from,to){from=PATH_FS.resolve(from).substr(1);to=PATH_FS.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!==\"\")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!==\"\")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split(\"/\"));var toParts=trim(to.split(\"/\"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push(\"..\")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join(\"/\")}};var TTY={ttys:[],init:function(){},shutdown:function(){},register:function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)},stream_ops:{open:function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(43)}stream.tty=tty;stream.seekable=false},close:function(stream){stream.tty.ops.flush(stream.tty)},flush:function(stream){stream.tty.ops.flush(stream.tty)},read:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(60)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(60)}try{for(var i=0;i<length;i++){stream.tty.ops.put_char(stream.tty,buffer[offset+i])}}catch(e){throw new FS.ErrnoError(29)}if(length){stream.node.timestamp=Date.now()}return i}},default_tty_ops:{get_char:function(tty){if(!tty.input.length){var result=null;if(ENVIRONMENT_IS_NODE){var BUFSIZE=256;var buf=Buffer.alloc?Buffer.alloc(BUFSIZE):new Buffer(BUFSIZE);var bytesRead=0;try{bytesRead=fs.readSync(process.stdin.fd,buf,0,BUFSIZE,null)}catch(e){if(e.toString().indexOf(\"EOF\")!=-1)bytesRead=0;else throw e}if(bytesRead>0){result=buf.slice(0,bytesRead).toString(\"utf-8\")}else{result=null}}else if(typeof window!=\"undefined\"&&typeof window.prompt==\"function\"){result=window.prompt(\"Input: \");if(result!==null){result+=\"\\n\"}}else if(typeof readline==\"function\"){result=readline();if(result!==null){result+=\"\\n\"}}if(!result){return null}tty.input=intArrayFromString(result,true)}return tty.input.shift()},put_char:function(tty,val){if(val===null||val===10){out(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},flush:function(tty){if(tty.output&&tty.output.length>0){out(UTF8ArrayToString(tty.output,0));tty.output=[]}}},default_tty1_ops:{put_char:function(tty,val){if(val===null||val===10){err(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},flush:function(tty){if(tty.output&&tty.output.length>0){err(UTF8ArrayToString(tty.output,0));tty.output=[]}}}};var MEMFS={ops_table:null,mount:function(mount){return MEMFS.createNode(null,\"/\",16384|511,0)},createNode:function(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(63)}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}}}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node}return node},getFileDataAsRegularArray:function(node){if(node.contents&&node.contents.subarray){var arr=[];for(var i=0;i<node.usedBytes;++i)arr.push(node.contents[i]);return arr}return node.contents},getFileDataAsTypedArray:function(node){if(!node.contents)return new Uint8Array;if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)},expandFileStorage:function(node,newCapacity){var prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)|0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0);return},resizeFileStorage:function(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0;return}if(!node.contents||node.contents.subarray){var oldContents=node.contents;node.contents=new Uint8Array(new ArrayBuffer(newSize));if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize;return}if(!node.contents)node.contents=[];if(node.contents.length>newSize)node.contents.length=newSize;else while(node.contents.length<newSize)node.contents.push(0);node.usedBytes=newSize},node_ops:{getattr:function(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr},setattr:function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}},lookup:function(parent,name){throw FS.genericErrors[44]},mknod:function(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)},rename:function(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(55)}}}delete old_node.parent.contents[old_node.name];old_node.name=new_name;new_dir.contents[new_name]=old_node;old_node.parent=new_dir},unlink:function(parent,name){delete parent.contents[name]},rmdir:function(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(55)}delete parent.contents[name]},readdir:function(node){var entries=[\".\",\"..\"];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries},symlink:function(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node},readlink:function(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(28)}return node.link}},stream_ops:{read:function(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size},write:function(stream,buffer,offset,length,position,canOwn){if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=new Uint8Array(buffer.subarray(offset,offset+length));node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray)node.contents.set(buffer.subarray(offset,offset+length),position);else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}}node.usedBytes=Math.max(node.usedBytes,position+length);return length},llseek:function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(28)}return position},allocate:function(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)},mmap:function(stream,buffer,offset,length,position,prot,flags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&(contents.buffer===buffer||contents.buffer===buffer.buffer)){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<stream.node.usedBytes){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;var fromHeap=buffer.buffer==HEAP8.buffer;ptr=_malloc(length);if(!ptr){throw new FS.ErrnoError(48)}(fromHeap?HEAP8:buffer).set(contents,ptr)}return{ptr:ptr,allocated:allocated}},msync:function(stream,buffer,offset,length,mmapFlags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}if(mmapFlags&2){return 0}var bytesWritten=MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0}}};var IDBFS={dbs:{},indexedDB:function(){if(typeof indexedDB!==\"undefined\")return indexedDB;var ret=null;if(typeof window===\"object\")ret=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;assert(ret,\"IDBFS used, but indexedDB not supported\");return ret},DB_VERSION:21,DB_STORE_NAME:\"FILE_DATA\",mount:function(mount){return MEMFS.mount.apply(null,arguments)},syncfs:function(mount,populate,callback){IDBFS.getLocalSet(mount,function(err,local){if(err)return callback(err);IDBFS.getRemoteSet(mount,function(err,remote){if(err)return callback(err);var src=populate?remote:local;var dst=populate?local:remote;IDBFS.reconcile(src,dst,callback)})})},getDB:function(name,callback){var db=IDBFS.dbs[name];if(db){return callback(null,db)}var req;try{req=IDBFS.indexedDB().open(name,IDBFS.DB_VERSION)}catch(e){return callback(e)}if(!req){return callback(\"Unable to connect to IndexedDB\")}req.onupgradeneeded=function(e){var db=e.target.result;var transaction=e.target.transaction;var fileStore;if(db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)){fileStore=transaction.objectStore(IDBFS.DB_STORE_NAME)}else{fileStore=db.createObjectStore(IDBFS.DB_STORE_NAME)}if(!fileStore.indexNames.contains(\"timestamp\")){fileStore.createIndex(\"timestamp\",\"timestamp\",{unique:false})}};req.onsuccess=function(){db=req.result;IDBFS.dbs[name]=db;callback(null,db)};req.onerror=function(e){callback(this.error);e.preventDefault()}},getLocalSet:function(mount,callback){var entries={};function isRealDir(p){return p!==\".\"&&p!==\"..\"}function toAbsolute(root){return function(p){return PATH.join2(root,p)}}var check=FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));while(check.length){var path=check.pop();var stat;try{stat=FS.stat(path)}catch(e){return callback(e)}if(FS.isDir(stat.mode)){check.push.apply(check,FS.readdir(path).filter(isRealDir).map(toAbsolute(path)))}entries[path]={timestamp:stat.mtime}}return callback(null,{type:\"local\",entries:entries})},getRemoteSet:function(mount,callback){var entries={};IDBFS.getDB(mount.mountpoint,function(err,db){if(err)return callback(err);try{var transaction=db.transaction([IDBFS.DB_STORE_NAME],\"readonly\");transaction.onerror=function(e){callback(this.error);e.preventDefault()};var store=transaction.objectStore(IDBFS.DB_STORE_NAME);var index=store.index(\"timestamp\");index.openKeyCursor().onsuccess=function(event){var cursor=event.target.result;if(!cursor){return callback(null,{type:\"remote\",db:db,entries:entries})}entries[cursor.primaryKey]={timestamp:cursor.key};cursor.continue()}}catch(e){return callback(e)}})},loadLocalEntry:function(path,callback){var stat,node;try{var lookup=FS.lookupPath(path);node=lookup.node;stat=FS.stat(path)}catch(e){return callback(e)}if(FS.isDir(stat.mode)){return callback(null,{timestamp:stat.mtime,mode:stat.mode})}else if(FS.isFile(stat.mode)){node.contents=MEMFS.getFileDataAsTypedArray(node);return callback(null,{timestamp:stat.mtime,mode:stat.mode,contents:node.contents})}else{return callback(new Error(\"node type not supported\"))}},storeLocalEntry:function(path,entry,callback){try{if(FS.isDir(entry.mode)){FS.mkdir(path,entry.mode)}else if(FS.isFile(entry.mode)){FS.writeFile(path,entry.contents,{canOwn:true})}else{return callback(new Error(\"node type not supported\"))}FS.chmod(path,entry.mode);FS.utime(path,entry.timestamp,entry.timestamp)}catch(e){return callback(e)}callback(null)},removeLocalEntry:function(path,callback){try{var lookup=FS.lookupPath(path);var stat=FS.stat(path);if(FS.isDir(stat.mode)){FS.rmdir(path)}else if(FS.isFile(stat.mode)){FS.unlink(path)}}catch(e){return callback(e)}callback(null)},loadRemoteEntry:function(store,path,callback){var req=store.get(path);req.onsuccess=function(event){callback(null,event.target.result)};req.onerror=function(e){callback(this.error);e.preventDefault()}},storeRemoteEntry:function(store,path,entry,callback){var req=store.put(entry,path);req.onsuccess=function(){callback(null)};req.onerror=function(e){callback(this.error);e.preventDefault()}},removeRemoteEntry:function(store,path,callback){var req=store.delete(path);req.onsuccess=function(){callback(null)};req.onerror=function(e){callback(this.error);e.preventDefault()}},reconcile:function(src,dst,callback){var total=0;var create=[];Object.keys(src.entries).forEach(function(key){var e=src.entries[key];var e2=dst.entries[key];if(!e2||e.timestamp>e2.timestamp){create.push(key);total++}});var remove=[];Object.keys(dst.entries).forEach(function(key){var e=dst.entries[key];var e2=src.entries[key];if(!e2){remove.push(key);total++}});if(!total){return callback(null)}var errored=false;var db=src.type===\"remote\"?src.db:dst.db;var transaction=db.transaction([IDBFS.DB_STORE_NAME],\"readwrite\");var store=transaction.objectStore(IDBFS.DB_STORE_NAME);function done(err){if(err&&!errored){errored=true;return callback(err)}}transaction.onerror=function(e){done(this.error);e.preventDefault()};transaction.oncomplete=function(e){if(!errored){callback(null)}};create.sort().forEach(function(path){if(dst.type===\"local\"){IDBFS.loadRemoteEntry(store,path,function(err,entry){if(err)return done(err);IDBFS.storeLocalEntry(path,entry,done)})}else{IDBFS.loadLocalEntry(path,function(err,entry){if(err)return done(err);IDBFS.storeRemoteEntry(store,path,entry,done)})}});remove.sort().reverse().forEach(function(path){if(dst.type===\"local\"){IDBFS.removeLocalEntry(path,done)}else{IDBFS.removeRemoteEntry(store,path,done)}})}};var ERRNO_CODES={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135};var NODEFS={isWindows:false,staticInit:function(){NODEFS.isWindows=!!process.platform.match(/^win/);var flags=process[\"binding\"](\"constants\");if(flags[\"fs\"]){flags=flags[\"fs\"]}NODEFS.flagsForNodeMap={1024:flags[\"O_APPEND\"],64:flags[\"O_CREAT\"],128:flags[\"O_EXCL\"],0:flags[\"O_RDONLY\"],2:flags[\"O_RDWR\"],4096:flags[\"O_SYNC\"],512:flags[\"O_TRUNC\"],1:flags[\"O_WRONLY\"]}},bufferFrom:function(arrayBuffer){return Buffer[\"alloc\"]?Buffer.from(arrayBuffer):new Buffer(arrayBuffer)},convertNodeCode:function(e){var code=e.code;assert(code in ERRNO_CODES);return ERRNO_CODES[code]},mount:function(mount){assert(ENVIRONMENT_HAS_NODE);return NODEFS.createNode(null,\"/\",NODEFS.getMode(mount.opts.root),0)},createNode:function(parent,name,mode,dev){if(!FS.isDir(mode)&&!FS.isFile(mode)&&!FS.isLink(mode)){throw new FS.ErrnoError(28)}var node=FS.createNode(parent,name,mode);node.node_ops=NODEFS.node_ops;node.stream_ops=NODEFS.stream_ops;return node},getMode:function(path){var stat;try{stat=fs.lstatSync(path);if(NODEFS.isWindows){stat.mode=stat.mode|(stat.mode&292)>>2}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(NODEFS.convertNodeCode(e))}return stat.mode},realPath:function(node){var parts=[];while(node.parent!==node){parts.push(node.name);node=node.parent}parts.push(node.mount.opts.root);parts.reverse();return PATH.join.apply(null,parts)},flagsForNode:function(flags){flags&=~2097152;flags&=~2048;flags&=~32768;flags&=~524288;var newFlags=0;for(var k in NODEFS.flagsForNodeMap){if(flags&k){newFlags|=NODEFS.flagsForNodeMap[k];flags^=k}}if(!flags){return newFlags}else{throw new FS.ErrnoError(28)}},node_ops:{getattr:function(node){var path=NODEFS.realPath(node);var stat;try{stat=fs.lstatSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(NODEFS.convertNodeCode(e))}if(NODEFS.isWindows&&!stat.blksize){stat.blksize=4096}if(NODEFS.isWindows&&!stat.blocks){stat.blocks=(stat.size+stat.blksize-1)/stat.blksize|0}return{dev:stat.dev,ino:stat.ino,mode:stat.mode,nlink:stat.nlink,uid:stat.uid,gid:stat.gid,rdev:stat.rdev,size:stat.size,atime:stat.atime,mtime:stat.mtime,ctime:stat.ctime,blksize:stat.blksize,blocks:stat.blocks}},setattr:function(node,attr){var path=NODEFS.realPath(node);try{if(attr.mode!==undefined){fs.chmodSync(path,attr.mode);node.mode=attr.mode}if(attr.timestamp!==undefined){var date=new Date(attr.timestamp);fs.utimesSync(path,date,date)}if(attr.size!==undefined){fs.truncateSync(path,attr.size)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(NODEFS.convertNodeCode(e))}},lookup:function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);var mode=NODEFS.getMode(path);return NODEFS.createNode(parent,name,mode)},mknod:function(parent,name,mode,dev){var node=NODEFS.createNode(parent,name,mode,dev);var path=NODEFS.realPath(node);try{if(FS.isDir(node.mode)){fs.mkdirSync(path,node.mode)}else{fs.writeFileSync(path,\"\",{mode:node.mode})}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(NODEFS.convertNodeCode(e))}return node},rename:function(oldNode,newDir,newName){var oldPath=NODEFS.realPath(oldNode);var newPath=PATH.join2(NODEFS.realPath(newDir),newName);try{fs.renameSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(NODEFS.convertNodeCode(e))}},unlink:function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.unlinkSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(NODEFS.convertNodeCode(e))}},rmdir:function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.rmdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(NODEFS.convertNodeCode(e))}},readdir:function(node){var path=NODEFS.realPath(node);try{return fs.readdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(NODEFS.convertNodeCode(e))}},symlink:function(parent,newName,oldPath){var newPath=PATH.join2(NODEFS.realPath(parent),newName);try{fs.symlinkSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(NODEFS.convertNodeCode(e))}},readlink:function(node){var path=NODEFS.realPath(node);try{path=fs.readlinkSync(path);path=NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root),path);return path}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(NODEFS.convertNodeCode(e))}}},stream_ops:{open:function(stream){var path=NODEFS.realPath(stream.node);try{if(FS.isFile(stream.node.mode)){stream.nfd=fs.openSync(path,NODEFS.flagsForNode(stream.flags))}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(NODEFS.convertNodeCode(e))}},close:function(stream){try{if(FS.isFile(stream.node.mode)&&stream.nfd){fs.closeSync(stream.nfd)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(NODEFS.convertNodeCode(e))}},read:function(stream,buffer,offset,length,position){if(length===0)return 0;try{return fs.readSync(stream.nfd,NODEFS.bufferFrom(buffer.buffer),offset,length,position)}catch(e){throw new FS.ErrnoError(NODEFS.convertNodeCode(e))}},write:function(stream,buffer,offset,length,position){try{return fs.writeSync(stream.nfd,NODEFS.bufferFrom(buffer.buffer),offset,length,position)}catch(e){throw new FS.ErrnoError(NODEFS.convertNodeCode(e))}},llseek:function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){try{var stat=fs.fstatSync(stream.nfd);position+=stat.size}catch(e){throw new FS.ErrnoError(NODEFS.convertNodeCode(e))}}}if(position<0){throw new FS.ErrnoError(28)}return position}}};var WORKERFS={DIR_MODE:16895,FILE_MODE:33279,reader:null,mount:function(mount){assert(ENVIRONMENT_IS_WORKER);if(!WORKERFS.reader)WORKERFS.reader=new FileReaderSync;var root=WORKERFS.createNode(null,\"/\",WORKERFS.DIR_MODE,0);var createdParents={};function ensureParent(path){var parts=path.split(\"/\");var parent=root;for(var i=0;i<parts.length-1;i++){var curr=parts.slice(0,i+1).join(\"/\");if(!createdParents[curr]){createdParents[curr]=WORKERFS.createNode(parent,parts[i],WORKERFS.DIR_MODE,0)}parent=createdParents[curr]}return parent}function base(path){var parts=path.split(\"/\");return parts[parts.length-1]}Array.prototype.forEach.call(mount.opts[\"files\"]||[],function(file){WORKERFS.createNode(ensureParent(file.name),base(file.name),WORKERFS.FILE_MODE,0,file,file.lastModifiedDate)});(mount.opts[\"blobs\"]||[]).forEach(function(obj){WORKERFS.createNode(ensureParent(obj[\"name\"]),base(obj[\"name\"]),WORKERFS.FILE_MODE,0,obj[\"data\"])});(mount.opts[\"packages\"]||[]).forEach(function(pack){pack[\"metadata\"].files.forEach(function(file){var name=file.filename.substr(1);WORKERFS.createNode(ensureParent(name),base(name),WORKERFS.FILE_MODE,0,pack[\"blob\"].slice(file.start,file.end))})});return root},createNode:function(parent,name,mode,dev,contents,mtime){var node=FS.createNode(parent,name,mode);node.mode=mode;node.node_ops=WORKERFS.node_ops;node.stream_ops=WORKERFS.stream_ops;node.timestamp=(mtime||new Date).getTime();assert(WORKERFS.FILE_MODE!==WORKERFS.DIR_MODE);if(mode===WORKERFS.FILE_MODE){node.size=contents.size;node.contents=contents}else{node.size=4096;node.contents={}}if(parent){parent.contents[name]=node}return node},node_ops:{getattr:function(node){return{dev:1,ino:undefined,mode:node.mode,nlink:1,uid:0,gid:0,rdev:undefined,size:node.size,atime:new Date(node.timestamp),mtime:new Date(node.timestamp),ctime:new Date(node.timestamp),blksize:4096,blocks:Math.ceil(node.size/4096)}},setattr:function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}},lookup:function(parent,name){throw new FS.ErrnoError(44)},mknod:function(parent,name,mode,dev){throw new FS.ErrnoError(63)},rename:function(oldNode,newDir,newName){throw new FS.ErrnoError(63)},unlink:function(parent,name){throw new FS.ErrnoError(63)},rmdir:function(parent,name){throw new FS.ErrnoError(63)},readdir:function(node){var entries=[\".\",\"..\"];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries},symlink:function(parent,newName,oldPath){throw new FS.ErrnoError(63)},readlink:function(node){throw new FS.ErrnoError(63)}},stream_ops:{read:function(stream,buffer,offset,length,position){if(position>=stream.node.size)return 0;var chunk=stream.node.contents.slice(position,position+length);var ab=WORKERFS.reader.readAsArrayBuffer(chunk);buffer.set(new Uint8Array(ab),offset);return chunk.size},write:function(stream,buffer,offset,length,position){throw new FS.ErrnoError(29)},llseek:function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.size}}if(position<0){throw new FS.ErrnoError(28)}return position}}};var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:\"/\",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:function(e){if(!(e instanceof FS.ErrnoError))throw e+\" : \"+stackTrace();return ___setErrNo(e.errno)},lookupPath:function(path,opts){path=PATH_FS.resolve(FS.cwd(),path);opts=opts||{};if(!path)return{path:\"\",node:null};var defaults={follow_mount:true,recurse_count:0};for(var key in defaults){if(opts[key]===undefined){opts[key]=defaults[key]}}if(opts.recurse_count>8){throw new FS.ErrnoError(32)}var parts=PATH.normalizeArray(path.split(\"/\").filter(function(p){return!!p}),false);var current=FS.root;var current_path=\"/\";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH_FS.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count});current=lookup.node;if(count++>40){throw new FS.ErrnoError(32)}}}}return{path:current_path,node:current}},getPath:function(node){var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!==\"/\"?mount+\"/\"+path:mount+path}path=path?node.name+\"/\"+path:node.name;node=node.parent}},hashName:function(parentid,name){var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length},hashAddNode:function(node){var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node},hashRemoveNode:function(node){var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}},lookupNode:function(parent,name){var err=FS.mayLookup(parent);if(err){throw new FS.ErrnoError(err,parent)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)},createNode:function(parent,name,mode,rdev){if(!FS.FSNode){FS.FSNode=function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev};FS.FSNode.prototype={};var readMode=292|73;var writeMode=146;Object.defineProperties(FS.FSNode.prototype,{read:{get:function(){return(this.mode&readMode)===readMode},set:function(val){val?this.mode|=readMode:this.mode&=~readMode}},write:{get:function(){return(this.mode&writeMode)===writeMode},set:function(val){val?this.mode|=writeMode:this.mode&=~writeMode}},isFolder:{get:function(){return FS.isDir(this.mode)}},isDevice:{get:function(){return FS.isChrdev(this.mode)}}})}var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node},destroyNode:function(node){FS.hashRemoveNode(node)},isRoot:function(node){return node===node.parent},isMountpoint:function(node){return!!node.mounted},isFile:function(mode){return(mode&61440)===32768},isDir:function(mode){return(mode&61440)===16384},isLink:function(mode){return(mode&61440)===40960},isChrdev:function(mode){return(mode&61440)===8192},isBlkdev:function(mode){return(mode&61440)===24576},isFIFO:function(mode){return(mode&61440)===4096},isSocket:function(mode){return(mode&49152)===49152},flagModes:{\"r\":0,\"rs\":1052672,\"r+\":2,\"w\":577,\"wx\":705,\"xw\":705,\"w+\":578,\"wx+\":706,\"xw+\":706,\"a\":1089,\"ax\":1217,\"xa\":1217,\"a+\":1090,\"ax+\":1218,\"xa+\":1218},modeStringToFlags:function(str){var flags=FS.flagModes[str];if(typeof flags===\"undefined\"){throw new Error(\"Unknown file open mode: \"+str)}return flags},flagsToPermissionString:function(flag){var perms=[\"r\",\"w\",\"rw\"][flag&3];if(flag&512){perms+=\"w\"}return perms},nodePermissions:function(node,perms){if(FS.ignorePermissions){return 0}if(perms.indexOf(\"r\")!==-1&&!(node.mode&292)){return 2}else if(perms.indexOf(\"w\")!==-1&&!(node.mode&146)){return 2}else if(perms.indexOf(\"x\")!==-1&&!(node.mode&73)){return 2}return 0},mayLookup:function(dir){var err=FS.nodePermissions(dir,\"x\");if(err)return err;if(!dir.node_ops.lookup)return 2;return 0},mayCreate:function(dir,name){try{var node=FS.lookupNode(dir,name);return 20}catch(e){}return FS.nodePermissions(dir,\"wx\")},mayDelete:function(dir,name,isdir){var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var err=FS.nodePermissions(dir,\"wx\");if(err){return err}if(isdir){if(!FS.isDir(node.mode)){return 54}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return 10}}else{if(FS.isDir(node.mode)){return 31}}return 0},mayOpen:function(node,flags){if(!node){return 44}if(FS.isLink(node.mode)){return 32}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!==\"r\"||flags&512){return 31}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))},MAX_OPEN_FDS:4096,nextfd:function(fd_start,fd_end){fd_start=fd_start||0;fd_end=fd_end||FS.MAX_OPEN_FDS;for(var fd=fd_start;fd<=fd_end;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(33)},getStream:function(fd){return FS.streams[fd]},createStream:function(stream,fd_start,fd_end){if(!FS.FSStream){FS.FSStream=function(){};FS.FSStream.prototype={};Object.defineProperties(FS.FSStream.prototype,{object:{get:function(){return this.node},set:function(val){this.node=val}},isRead:{get:function(){return(this.flags&2097155)!==1}},isWrite:{get:function(){return(this.flags&2097155)!==0}},isAppend:{get:function(){return this.flags&1024}}})}var newStream=new FS.FSStream;for(var p in stream){newStream[p]=stream[p]}stream=newStream;var fd=FS.nextfd(fd_start,fd_end);stream.fd=fd;FS.streams[fd]=stream;return stream},closeStream:function(fd){FS.streams[fd]=null},chrdev_stream_ops:{open:function(stream){var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream)}},llseek:function(){throw new FS.ErrnoError(70)}},major:function(dev){return dev>>8},minor:function(dev){return dev&255},makedev:function(ma,mi){return ma<<8|mi},registerDevice:function(dev,ops){FS.devices[dev]={stream_ops:ops}},getDevice:function(dev){return FS.devices[dev]},getMounts:function(mount){var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return mounts},syncfs:function(populate,callback){if(typeof populate===\"function\"){callback=populate;populate=false}FS.syncFSRequests++;if(FS.syncFSRequests>1){console.log(\"warning: \"+FS.syncFSRequests+\" FS.syncfs operations in flight at once, probably just doing extra work\")}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(err){FS.syncFSRequests--;return callback(err)}function done(err){if(err){if(!done.errored){done.errored=true;return doCallback(err)}return}if(++completed>=mounts.length){doCallback(null)}}mounts.forEach(function(mount){if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)})},mount:function(type,opts,mountpoint){var root=mountpoint===\"/\";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(10)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot},unmount:function(mountpoint){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(28)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach(function(hash){var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.indexOf(current.mount)!==-1){FS.destroyNode(current)}current=next}});node.mounted=null;var idx=node.mount.mounts.indexOf(mount);node.mount.mounts.splice(idx,1)},lookup:function(parent,name){return parent.node_ops.lookup(parent,name)},mknod:function(path,mode,dev){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name===\".\"||name===\"..\"){throw new FS.ErrnoError(28)}var err=FS.mayCreate(parent,name);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(63)}return parent.node_ops.mknod(parent,name,mode,dev)},create:function(path,mode){mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)},mkdir:function(path,mode){mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)},mkdirTree:function(path,mode){var dirs=path.split(\"/\");var d=\"\";for(var i=0;i<dirs.length;++i){if(!dirs[i])continue;d+=\"/\"+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(e.errno!=20)throw e}}},mkdev:function(path,mode,dev){if(typeof dev===\"undefined\"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)},symlink:function(oldpath,newpath){if(!PATH_FS.resolve(oldpath)){throw new FS.ErrnoError(44)}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44)}var newname=PATH.basename(newpath);var err=FS.mayCreate(parent,newname);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(63)}return parent.node_ops.symlink(parent,newname,oldpath)},rename:function(old_path,new_path){var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;try{lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node}catch(e){throw new FS.ErrnoError(10)}if(!old_dir||!new_dir)throw new FS.ErrnoError(44);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(75)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH_FS.relative(old_path,new_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(28)}relative=PATH_FS.relative(new_path,old_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(55)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var err=FS.mayDelete(old_dir,old_name,isdir);if(err){throw new FS.ErrnoError(err)}err=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(err){throw new FS.ErrnoError(err)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(63)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(10)}if(new_dir!==old_dir){err=FS.nodePermissions(old_dir,\"w\");if(err){throw new FS.ErrnoError(err)}}try{if(FS.trackingDelegate[\"willMovePath\"]){FS.trackingDelegate[\"willMovePath\"](old_path,new_path)}}catch(e){console.log(\"FS.trackingDelegate['willMovePath']('\"+old_path+\"', '\"+new_path+\"') threw an exception: \"+e.message)}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}try{if(FS.trackingDelegate[\"onMovePath\"])FS.trackingDelegate[\"onMovePath\"](old_path,new_path)}catch(e){console.log(\"FS.trackingDelegate['onMovePath']('\"+old_path+\"', '\"+new_path+\"') threw an exception: \"+e.message)}},rmdir:function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,true);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}try{if(FS.trackingDelegate[\"willDeletePath\"]){FS.trackingDelegate[\"willDeletePath\"](path)}}catch(e){console.log(\"FS.trackingDelegate['willDeletePath']('\"+path+\"') threw an exception: \"+e.message)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate[\"onDeletePath\"])FS.trackingDelegate[\"onDeletePath\"](path)}catch(e){console.log(\"FS.trackingDelegate['onDeletePath']('\"+path+\"') threw an exception: \"+e.message)}},readdir:function(path){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(54)}return node.node_ops.readdir(node)},unlink:function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,false);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}try{if(FS.trackingDelegate[\"willDeletePath\"]){FS.trackingDelegate[\"willDeletePath\"](path)}}catch(e){console.log(\"FS.trackingDelegate['willDeletePath']('\"+path+\"') threw an exception: \"+e.message)}parent.node_ops.unlink(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate[\"onDeletePath\"])FS.trackingDelegate[\"onDeletePath\"](path)}catch(e){console.log(\"FS.trackingDelegate['onDeletePath']('\"+path+\"') threw an exception: \"+e.message)}},readlink:function(path){var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(44)}if(!link.node_ops.readlink){throw new FS.ErrnoError(28)}return PATH_FS.resolve(FS.getPath(link.parent),link.node_ops.readlink(link))},stat:function(path,dontFollow){var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(44)}if(!node.node_ops.getattr){throw new FS.ErrnoError(63)}return node.node_ops.getattr(node)},lstat:function(path){return FS.stat(path,true)},chmod:function(path,mode,dontFollow){var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})},lchmod:function(path,mode){FS.chmod(path,mode,true)},fchmod:function(fd,mode){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}FS.chmod(stream.node,mode)},chown:function(path,uid,gid,dontFollow){var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{timestamp:Date.now()})},lchown:function(path,uid,gid){FS.chown(path,uid,gid,true)},fchown:function(fd,uid,gid){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}FS.chown(stream.node,uid,gid)},truncate:function(path,len){if(len<0){throw new FS.ErrnoError(28)}var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(31)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(28)}var err=FS.nodePermissions(node,\"w\");if(err){throw new FS.ErrnoError(err)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})},ftruncate:function(fd,len){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(28)}FS.truncate(stream.node,len)},utime:function(path,atime,mtime){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})},open:function(path,flags,mode,fd_start,fd_end){if(path===\"\"){throw new FS.ErrnoError(44)}flags=typeof flags===\"string\"?FS.modeStringToFlags(flags):flags;mode=typeof mode===\"undefined\"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path===\"object\"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(20)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw new FS.ErrnoError(44)}if(FS.isChrdev(node.mode)){flags&=~512}if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}if(!created){var err=FS.mayOpen(node,flags);if(err){throw new FS.ErrnoError(err)}}if(flags&512){FS.truncate(node,0)}flags&=~(128|512);var stream=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,ungotten:[],error:false},fd_start,fd_end);if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module[\"logReadFiles\"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1;console.log(\"FS.trackingDelegate error on read file: \"+path)}}try{if(FS.trackingDelegate[\"onOpenFile\"]){var trackingFlags=0;if((flags&2097155)!==1){trackingFlags|=FS.tracking.openFlags.READ}if((flags&2097155)!==0){trackingFlags|=FS.tracking.openFlags.WRITE}FS.trackingDelegate[\"onOpenFile\"](path,trackingFlags)}}catch(e){console.log(\"FS.trackingDelegate['onOpenFile']('\"+path+\"', flags) threw an exception: \"+e.message)}return stream},close:function(stream){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(stream.getdents)stream.getdents=null;try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}stream.fd=null},isClosed:function(stream){return stream.fd===null},llseek:function(stream,offset,whence){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(70)}if(whence!=0&&whence!=1&&whence!=2){throw new FS.ErrnoError(28)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position},read:function(stream,buffer,offset,length,position){if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.read){throw new FS.ErrnoError(28)}var seeking=typeof position!==\"undefined\";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead},write:function(stream,buffer,offset,length,position,canOwn){if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.write){throw new FS.ErrnoError(28)}if(stream.flags&1024){FS.llseek(stream,0,2)}var seeking=typeof position!==\"undefined\";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;try{if(stream.path&&FS.trackingDelegate[\"onWriteToFile\"])FS.trackingDelegate[\"onWriteToFile\"](stream.path)}catch(e){console.log(\"FS.trackingDelegate['onWriteToFile']('\"+stream.path+\"') threw an exception: \"+e.message)}return bytesWritten},allocate:function(stream,offset,length){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(offset<0||length<=0){throw new FS.ErrnoError(28)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode)){throw new FS.ErrnoError(43)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(138)}stream.stream_ops.allocate(stream,offset,length)},mmap:function(stream,buffer,offset,length,position,prot,flags){if((prot&2)!==0&&(flags&2)===0&&(stream.flags&2097155)!==2){throw new FS.ErrnoError(2)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(2)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(43)}return stream.stream_ops.mmap(stream,buffer,offset,length,position,prot,flags)},msync:function(stream,buffer,offset,length,mmapFlags){if(!stream||!stream.stream_ops.msync){return 0}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags)},munmap:function(stream){return 0},ioctl:function(stream,cmd,arg){if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(59)}return stream.stream_ops.ioctl(stream,cmd,arg)},readFile:function(path,opts){opts=opts||{};opts.flags=opts.flags||\"r\";opts.encoding=opts.encoding||\"binary\";if(opts.encoding!==\"utf8\"&&opts.encoding!==\"binary\"){throw new Error('Invalid encoding type \"'+opts.encoding+'\"')}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding===\"utf8\"){ret=UTF8ArrayToString(buf,0)}else if(opts.encoding===\"binary\"){ret=buf}FS.close(stream);return ret},writeFile:function(path,data,opts){opts=opts||{};opts.flags=opts.flags||\"w\";var stream=FS.open(path,opts.flags,opts.mode);if(typeof data===\"string\"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,undefined,opts.canOwn)}else if(ArrayBuffer.isView(data)){FS.write(stream,data,0,data.byteLength,undefined,opts.canOwn)}else{throw new Error(\"Unsupported data type\")}FS.close(stream)},cwd:function(){return FS.currentPath},chdir:function(path){var lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw new FS.ErrnoError(44)}if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(54)}var err=FS.nodePermissions(lookup.node,\"x\");if(err){throw new FS.ErrnoError(err)}FS.currentPath=lookup.path},createDefaultDirectories:function(){FS.mkdir(\"/tmp\");FS.mkdir(\"/home\");FS.mkdir(\"/home/web_user\")},createDefaultDevices:function(){FS.mkdir(\"/dev\");FS.registerDevice(FS.makedev(1,3),{read:function(){return 0},write:function(stream,buffer,offset,length,pos){return length}});FS.mkdev(\"/dev/null\",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev(\"/dev/tty\",FS.makedev(5,0));FS.mkdev(\"/dev/tty1\",FS.makedev(6,0));var random_device;if(typeof crypto===\"object\"&&typeof crypto[\"getRandomValues\"]===\"function\"){var randomBuffer=new Uint8Array(1);random_device=function(){crypto.getRandomValues(randomBuffer);return randomBuffer[0]}}else if(ENVIRONMENT_IS_NODE){try{var crypto_module=__webpack_require__(/*! crypto */ \"../node_modules/crypto-browserify/index.js\");random_device=function(){return crypto_module[\"randomBytes\"](1)[0]}}catch(e){}}else{}if(!random_device){random_device=function(){abort(\"random_device\")}}FS.createDevice(\"/dev\",\"random\",random_device);FS.createDevice(\"/dev\",\"urandom\",random_device);FS.mkdir(\"/dev/shm\");FS.mkdir(\"/dev/shm/tmp\")},createSpecialDirectories:function(){FS.mkdir(\"/proc\");FS.mkdir(\"/proc/self\");FS.mkdir(\"/proc/self/fd\");FS.mount({mount:function(){var node=FS.createNode(\"/proc/self\",\"fd\",16384|511,73);node.node_ops={lookup:function(parent,name){var fd=+name;var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(8);var ret={parent:null,mount:{mountpoint:\"fake\"},node_ops:{readlink:function(){return stream.path}}};ret.parent=ret;return ret}};return node}},{},\"/proc/self/fd\")},createStandardStreams:function(){if(Module[\"stdin\"]){FS.createDevice(\"/dev\",\"stdin\",Module[\"stdin\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdin\")}if(Module[\"stdout\"]){FS.createDevice(\"/dev\",\"stdout\",null,Module[\"stdout\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdout\")}if(Module[\"stderr\"]){FS.createDevice(\"/dev\",\"stderr\",null,Module[\"stderr\"])}else{FS.symlink(\"/dev/tty1\",\"/dev/stderr\")}var stdin=FS.open(\"/dev/stdin\",\"r\");var stdout=FS.open(\"/dev/stdout\",\"w\");var stderr=FS.open(\"/dev/stderr\",\"w\")},ensureErrnoError:function(){if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.node=node;this.setErrno=function(errno){this.errno=errno};this.setErrno(errno);this.message=\"FS error\"};FS.ErrnoError.prototype=new Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[44].forEach(function(code){FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack=\"<generic error, no stack>\"})},staticInit:function(){FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},\"/\");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={\"MEMFS\":MEMFS,\"IDBFS\":IDBFS,\"NODEFS\":NODEFS,\"WORKERFS\":WORKERFS}},init:function(input,output,error){FS.init.initialized=true;FS.ensureErrnoError();Module[\"stdin\"]=input||Module[\"stdin\"];Module[\"stdout\"]=output||Module[\"stdout\"];Module[\"stderr\"]=error||Module[\"stderr\"];FS.createStandardStreams()},quit:function(){FS.init.initialized=false;var fflush=Module[\"_fflush\"];if(fflush)fflush(0);for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}},getMode:function(canRead,canWrite){var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode},joinPath:function(parts,forceRelative){var path=PATH.join.apply(null,parts);if(forceRelative&&path[0]==\"/\")path=path.substr(1);return path},absolutePath:function(relative,base){return PATH_FS.resolve(base,relative)},standardizePath:function(path){return PATH.normalize(path)},findObject:function(path,dontResolveLastLink){var ret=FS.analyzePath(path,dontResolveLastLink);if(ret.exists){return ret.object}else{___setErrNo(ret.error);return null}},analyzePath:function(path,dontResolveLastLink){try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path===\"/\"}catch(e){ret.error=e.errno}return ret},createFolder:function(parent,name,canRead,canWrite){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.mkdir(path,mode)},createPath:function(parent,path,canRead,canWrite){parent=typeof parent===\"string\"?parent:FS.getPath(parent);var parts=path.split(\"/\").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current},createFile:function(parent,name,properties,canRead,canWrite){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.create(path,mode)},createDataFile:function(parent,name,data,canRead,canWrite,canOwn){var path=name?PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name):parent;var mode=FS.getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data===\"string\"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,\"w\");FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}return node},createDevice:function(parent,name,input,output){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open:function(stream){stream.seekable=false},close:function(stream){if(output&&output.buffer&&output.buffer.length){output(10)}},read:function(stream,buffer,offset,length,pos){var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write:function(stream,buffer,offset,length,pos){for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(29)}}if(length){stream.node.timestamp=Date.now()}return i}});return FS.mkdev(path,mode,dev)},createLink:function(parent,name,target,canRead,canWrite){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);return FS.symlink(target,path)},forceLoadFile:function(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;var success=true;if(typeof XMLHttpRequest!==\"undefined\"){throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\")}else if(read_){try{obj.contents=intArrayFromString(read_(obj.url),true);obj.usedBytes=obj.contents.length}catch(e){success=false}}else{throw new Error(\"Cannot load without read() or XMLHttpRequest.\")}if(!success)___setErrNo(29);return success},createLazyFile:function(parent,name,url,canRead,canWrite){function LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest;xhr.open(\"HEAD\",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);var datalength=Number(xhr.getResponseHeader(\"Content-length\"));var header;var hasByteServing=(header=xhr.getResponseHeader(\"Accept-Ranges\"))&&header===\"bytes\";var usesGzip=(header=xhr.getResponseHeader(\"Content-Encoding\"))&&header===\"gzip\";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=function(from,to){if(from>to)throw new Error(\"invalid range (\"+from+\", \"+to+\") or no bytes requested!\");if(to>datalength-1)throw new Error(\"only \"+datalength+\" bytes available! programmer error!\");var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);if(datalength!==chunkSize)xhr.setRequestHeader(\"Range\",\"bytes=\"+from+\"-\"+to);if(typeof Uint8Array!=\"undefined\")xhr.responseType=\"arraybuffer\";if(xhr.overrideMimeType){xhr.overrideMimeType(\"text/plain; charset=x-user-defined\")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}else{return intArrayFromString(xhr.responseText||\"\",true)}};var lazyArray=this;lazyArray.setDataGetter(function(chunkNum){var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]===\"undefined\"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]===\"undefined\")throw new Error(\"doXHR failed!\");return lazyArray.chunks[chunkNum]});if(usesGzip||!datalength){chunkSize=datalength=1;datalength=this.getter(0).length;chunkSize=datalength;console.log(\"LazyFiles on gzip forces download of the whole file when length is accessed\")}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof XMLHttpRequest!==\"undefined\"){if(!ENVIRONMENT_IS_WORKER)throw\"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";var lazyArray=new LazyUint8Array;Object.defineProperties(lazyArray,{length:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._length}},chunkSize:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize}}});var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperties(node,{usedBytes:{get:function(){return this.contents.length}}});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach(function(key){var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(29)}return fn.apply(null,arguments)}});stream_ops.read=function stream_ops_read(stream,buffer,offset,length,position){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(29)}var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size};node.stream_ops=stream_ops;return node},createPreloadedFile:function(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish){Browser.init();var fullname=name?PATH_FS.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency(\"cp \"+fullname);function processData(byteArray){function finish(byteArray){if(preFinish)preFinish();if(!dontCreateFile){FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}if(onload)onload();removeRunDependency(dep)}var handled=false;Module[\"preloadPlugins\"].forEach(function(plugin){if(handled)return;if(plugin[\"canHandle\"](fullname)){plugin[\"handle\"](byteArray,fullname,finish,function(){if(onerror)onerror();removeRunDependency(dep)});handled=true}});if(!handled)finish(byteArray)}addRunDependency(dep);if(typeof url==\"string\"){Browser.asyncLoad(url,function(byteArray){processData(byteArray)},onerror)}else{processData(url)}},indexedDB:function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},DB_NAME:function(){return\"EM_FS_\"+window.location.pathname},DB_VERSION:20,DB_STORE_NAME:\"FILE_DATA\",saveFilesToDB:function(paths,onload,onerror){onload=onload||function(){};onerror=onerror||function(){};var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=function openRequest_onupgradeneeded(){console.log(\"creating db\");var db=openRequest.result;db.createObjectStore(FS.DB_STORE_NAME)};openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;var transaction=db.transaction([FS.DB_STORE_NAME],\"readwrite\");var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach(function(path){var putRequest=files.put(FS.analyzePath(path).object.contents,path);putRequest.onsuccess=function putRequest_onsuccess(){ok++;if(ok+fail==total)finish()};putRequest.onerror=function putRequest_onerror(){fail++;if(ok+fail==total)finish()}});transaction.onerror=onerror};openRequest.onerror=onerror},loadFilesFromDB:function(paths,onload,onerror){onload=onload||function(){};onerror=onerror||function(){};var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=onerror;openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;try{var transaction=db.transaction([FS.DB_STORE_NAME],\"readonly\")}catch(e){onerror(e);return}var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach(function(path){var getRequest=files.get(path);getRequest.onsuccess=function getRequest_onsuccess(){if(FS.analyzePath(path).exists){FS.unlink(path)}FS.createDataFile(PATH.dirname(path),PATH.basename(path),getRequest.result,true,true,true);ok++;if(ok+fail==total)finish()};getRequest.onerror=function getRequest_onerror(){fail++;if(ok+fail==total)finish()}});transaction.onerror=onerror};openRequest.onerror=onerror}};var SYSCALLS={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:function(dirfd,path){if(path[0]!==\"/\"){var dir;if(dirfd===-100){dir=FS.cwd()}else{var dirstream=FS.getStream(dirfd);if(!dirstream)throw new FS.ErrnoError(8);dir=dirstream.path}path=PATH.join2(dir,path)}return path},doStat:function(func,path,buf){try{var stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){return-54}throw e}HEAP32[buf>>2]=stat.dev;HEAP32[buf+4>>2]=0;HEAP32[buf+8>>2]=stat.ino;HEAP32[buf+12>>2]=stat.mode;HEAP32[buf+16>>2]=stat.nlink;HEAP32[buf+20>>2]=stat.uid;HEAP32[buf+24>>2]=stat.gid;HEAP32[buf+28>>2]=stat.rdev;HEAP32[buf+32>>2]=0;tempI64=[stat.size>>>0,(tempDouble=stat.size,+Math_abs(tempDouble)>=+1?tempDouble>+0?(Math_min(+Math_floor(tempDouble/+4294967296),+4294967295)|0)>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/+4294967296)>>>0:0)],HEAP32[buf+40>>2]=tempI64[0],HEAP32[buf+44>>2]=tempI64[1];HEAP32[buf+48>>2]=4096;HEAP32[buf+52>>2]=stat.blocks;HEAP32[buf+56>>2]=stat.atime.getTime()/1e3|0;HEAP32[buf+60>>2]=0;HEAP32[buf+64>>2]=stat.mtime.getTime()/1e3|0;HEAP32[buf+68>>2]=0;HEAP32[buf+72>>2]=stat.ctime.getTime()/1e3|0;HEAP32[buf+76>>2]=0;tempI64=[stat.ino>>>0,(tempDouble=stat.ino,+Math_abs(tempDouble)>=+1?tempDouble>+0?(Math_min(+Math_floor(tempDouble/+4294967296),+4294967295)|0)>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/+4294967296)>>>0:0)],HEAP32[buf+80>>2]=tempI64[0],HEAP32[buf+84>>2]=tempI64[1];return 0},doMsync:function(addr,stream,len,flags){var buffer=new Uint8Array(HEAPU8.subarray(addr,addr+len));FS.msync(stream,buffer,0,len,flags)},doMkdir:function(path,mode){path=PATH.normalize(path);if(path[path.length-1]===\"/\")path=path.substr(0,path.length-1);FS.mkdir(path,mode,0);return 0},doMknod:function(path,mode,dev){switch(mode&61440){case 32768:case 8192:case 24576:case 4096:case 49152:break;default:return-28}FS.mknod(path,mode,dev);return 0},doReadlink:function(path,buf,bufsize){if(bufsize<=0)return-28;var ret=FS.readlink(path);var len=Math.min(bufsize,lengthBytesUTF8(ret));var endChar=HEAP8[buf+len];stringToUTF8(ret,buf,bufsize+1);HEAP8[buf+len]=endChar;return len},doAccess:function(path,amode){if(amode&~7){return-28}var node;var lookup=FS.lookupPath(path,{follow:true});node=lookup.node;if(!node){return-44}var perms=\"\";if(amode&4)perms+=\"r\";if(amode&2)perms+=\"w\";if(amode&1)perms+=\"x\";if(perms&&FS.nodePermissions(node,perms)){return-2}return 0},doDup:function(path,flags,suggestFD){var suggest=FS.getStream(suggestFD);if(suggest)FS.close(suggest);return FS.open(path,flags,0,suggestFD,suggestFD).fd},doReadv:function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break}return ret},doWritev:function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr}return ret},varargs:0,get:function(varargs){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(){var ret=UTF8ToString(SYSCALLS.get());return ret},getStreamFromFD:function(fd){if(fd===undefined)fd=SYSCALLS.get();var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(8);return stream},get64:function(){var low=SYSCALLS.get(),high=SYSCALLS.get();return low},getZero:function(){SYSCALLS.get()}};function __emscripten_syscall_munmap(addr,len){if(addr===-1||len===0){return-28}var info=SYSCALLS.mappings[addr];if(!info)return 0;if(len===info.len){var stream=FS.getStream(info.fd);SYSCALLS.doMsync(addr,stream,len,info.flags);FS.munmap(stream);SYSCALLS.mappings[addr]=null;if(info.allocated){_free(info.malloc)}}return 0}function ___syscall91(which,varargs){SYSCALLS.varargs=varargs;try{var addr=SYSCALLS.get(),len=SYSCALLS.get();return __emscripten_syscall_munmap(addr,len)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___unlock(){}function _fd_close(fd){try{var stream=SYSCALLS.getStreamFromFD(fd);FS.close(stream);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function ___wasi_fd_close(){return _fd_close.apply(null,arguments)}function _fd_read(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=SYSCALLS.doReadv(stream,iov,iovcnt);HEAP32[pnum>>2]=num;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function ___wasi_fd_read(){return _fd_read.apply(null,arguments)}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){try{var stream=SYSCALLS.getStreamFromFD(fd);var HIGH_OFFSET=4294967296;var offset=offset_high*HIGH_OFFSET+(offset_low>>>0);var DOUBLE_LIMIT=9007199254740992;if(offset<=-DOUBLE_LIMIT||offset>=DOUBLE_LIMIT){return-61}FS.llseek(stream,offset,whence);tempI64=[stream.position>>>0,(tempDouble=stream.position,+Math_abs(tempDouble)>=+1?tempDouble>+0?(Math_min(+Math_floor(tempDouble/+4294967296),+4294967295)|0)>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/+4294967296)>>>0:0)],HEAP32[newOffset>>2]=tempI64[0],HEAP32[newOffset+4>>2]=tempI64[1];if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function ___wasi_fd_seek(){return _fd_seek.apply(null,arguments)}function _fd_write(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=SYSCALLS.doWritev(stream,iov,iovcnt);HEAP32[pnum>>2]=num;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function ___wasi_fd_write(){return _fd_write.apply(null,arguments)}function _abort(){abort()}function _emscripten_get_heap_size(){return HEAP8.length}function abortOnCannotGrowMemory(requestedSize){abort(\"OOM\")}function _emscripten_resize_heap(requestedSize){abortOnCannotGrowMemory(requestedSize)}var ENV={};function _getenv(name){if(name===0)return 0;name=UTF8ToString(name);if(!ENV.hasOwnProperty(name))return 0;if(_getenv.ret)_free(_getenv.ret);_getenv.ret=allocateUTF8(ENV[name]);return _getenv.ret}function _llvm_stackrestore(p){var self=_llvm_stacksave;var ret=self.LLVM_SAVEDSTACKS[p];self.LLVM_SAVEDSTACKS.splice(p,1);stackRestore(ret)}function _llvm_stacksave(){var self=_llvm_stacksave;if(!self.LLVM_SAVEDSTACKS){self.LLVM_SAVEDSTACKS=[]}self.LLVM_SAVEDSTACKS.push(stackSave());return self.LLVM_SAVEDSTACKS.length-1}function _llvm_trap(){abort(\"trap!\")}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest)}function __isLeapYear(year){return year%4===0&&(year%100!==0||year%400===0)}function __arraySum(array,index){var sum=0;for(var i=0;i<=index;sum+=array[i++]);return sum}var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date,days){var newDate=new Date(date.getTime());while(days>0){var leap=__isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1)}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1)}}else{newDate.setDate(newDate.getDate()+days);return newDate}}return newDate}function _strftime(s,maxsize,format,tm){var tm_zone=HEAP32[tm+40>>2];var date={tm_sec:HEAP32[tm>>2],tm_min:HEAP32[tm+4>>2],tm_hour:HEAP32[tm+8>>2],tm_mday:HEAP32[tm+12>>2],tm_mon:HEAP32[tm+16>>2],tm_year:HEAP32[tm+20>>2],tm_wday:HEAP32[tm+24>>2],tm_yday:HEAP32[tm+28>>2],tm_isdst:HEAP32[tm+32>>2],tm_gmtoff:HEAP32[tm+36>>2],tm_zone:tm_zone?UTF8ToString(tm_zone):\"\"};var pattern=UTF8ToString(format);var EXPANSION_RULES_1={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_1[rule])}var WEEKDAYS=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];var MONTHS=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];function leadingSomething(value,digits,character){var str=typeof value===\"number\"?value.toString():value||\"\";while(str.length<digits){str=character[0]+str}return str}function leadingNulls(value,digits){return leadingSomething(value,digits,\"0\")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate())}}return compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var thisDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1}else{return thisDate.getFullYear()}}else{return thisDate.getFullYear()-1}}var EXPANSION_RULES_2={\"%a\":function(date){return WEEKDAYS[date.tm_wday].substring(0,3)},\"%A\":function(date){return WEEKDAYS[date.tm_wday]},\"%b\":function(date){return MONTHS[date.tm_mon].substring(0,3)},\"%B\":function(date){return MONTHS[date.tm_mon]},\"%C\":function(date){var year=date.tm_year+1900;return leadingNulls(year/100|0,2)},\"%d\":function(date){return leadingNulls(date.tm_mday,2)},\"%e\":function(date){return leadingSomething(date.tm_mday,2,\" \")},\"%g\":function(date){return getWeekBasedYear(date).toString().substring(2)},\"%G\":function(date){return getWeekBasedYear(date)},\"%H\":function(date){return leadingNulls(date.tm_hour,2)},\"%I\":function(date){var twelveHour=date.tm_hour;if(twelveHour==0)twelveHour=12;else if(twelveHour>12)twelveHour-=12;return leadingNulls(twelveHour,2)},\"%j\":function(date){return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900)?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,date.tm_mon-1),3)},\"%m\":function(date){return leadingNulls(date.tm_mon+1,2)},\"%M\":function(date){return leadingNulls(date.tm_min,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(date){if(date.tm_hour>=0&&date.tm_hour<12){return\"AM\"}else{return\"PM\"}},\"%S\":function(date){return leadingNulls(date.tm_sec,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(date){return date.tm_wday||7},\"%U\":function(date){var janFirst=new Date(date.tm_year+1900,0,1);var firstSunday=janFirst.getDay()===0?janFirst:__addDays(janFirst,7-janFirst.getDay());var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstSunday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstSundayUntilEndJanuary=31-firstSunday.getDate();var days=firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2)}return compareByDay(firstSunday,janFirst)===0?\"01\":\"00\"},\"%V\":function(date){var janFourthThisYear=new Date(date.tm_year+1900,0,4);var janFourthNextYear=new Date(date.tm_year+1901,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);var endDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);if(compareByDay(endDate,firstWeekStartThisYear)<0){return\"53\"}if(compareByDay(firstWeekStartNextYear,endDate)<=0){return\"01\"}var daysDifference;if(firstWeekStartThisYear.getFullYear()<date.tm_year+1900){daysDifference=date.tm_yday+32-firstWeekStartThisYear.getDate()}else{daysDifference=date.tm_yday+1-firstWeekStartThisYear.getDate()}return leadingNulls(Math.ceil(daysDifference/7),2)},\"%w\":function(date){return date.tm_wday},\"%W\":function(date){var janFirst=new Date(date.tm_year,0,1);var firstMonday=janFirst.getDay()===1?janFirst:__addDays(janFirst,janFirst.getDay()===0?1:7-janFirst.getDay()+1);var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstMonday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstMondayUntilEndJanuary=31-firstMonday.getDate();var days=firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2)}return compareByDay(firstMonday,janFirst)===0?\"01\":\"00\"},\"%y\":function(date){return(date.tm_year+1900).toString().substring(2)},\"%Y\":function(date){return date.tm_year+1900},\"%z\":function(date){var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;off=off/60*100+off%60;return(ahead?\"+\":\"-\")+String(\"0000\"+off).slice(-4)},\"%Z\":function(date){return date.tm_zone},\"%%\":function(){return\"%\"}};for(var rule in EXPANSION_RULES_2){if(pattern.indexOf(rule)>=0){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_2[rule](date))}}var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0}writeArrayToMemory(bytes,s);return bytes.length-1}function _strftime_l(s,maxsize,format,tm){return _strftime(s,maxsize,format,tm)}FS.staticInit();if(ENVIRONMENT_HAS_NODE){var fs=__webpack_require__(/*! fs */ \"../node_modules/node-libs-browser/mock/empty.js\");var NODEJS_PATH=__webpack_require__(/*! path */ \"../node_modules/path-browserify/index.js\");NODEFS.staticInit()}var ASSERTIONS=false;function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}function intArrayToString(array){var ret=[];for(var i=0;i<array.length;i++){var chr=array[i];if(chr>255){if(ASSERTIONS){assert(false,\"Character code \"+chr+\" (\"+String.fromCharCode(chr)+\")  at offset \"+i+\" not in 0x00-0xFF.\")}chr&=255}ret.push(String.fromCharCode(chr))}return ret.join(\"\")}var decodeBase64=typeof atob===\"function\"?atob:function(input){var keyStr=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";var output=\"\";var chr1,chr2,chr3;var enc1,enc2,enc3,enc4;var i=0;input=input.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");do{enc1=keyStr.indexOf(input.charAt(i++));enc2=keyStr.indexOf(input.charAt(i++));enc3=keyStr.indexOf(input.charAt(i++));enc4=keyStr.indexOf(input.charAt(i++));chr1=enc1<<2|enc2>>4;chr2=(enc2&15)<<4|enc3>>2;chr3=(enc3&3)<<6|enc4;output=output+String.fromCharCode(chr1);if(enc3!==64){output=output+String.fromCharCode(chr2)}if(enc4!==64){output=output+String.fromCharCode(chr3)}}while(i<input.length);return output};function intArrayFromBase64(s){if(typeof ENVIRONMENT_IS_NODE===\"boolean\"&&ENVIRONMENT_IS_NODE){var buf;try{buf=Buffer.from(s,\"base64\")}catch(_){buf=new Buffer(s,\"base64\")}return new Uint8Array(buf.buffer,buf.byteOffset,buf.byteLength)}try{var decoded=decodeBase64(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}catch(_){throw new Error(\"Converting base64 string to bytes failed.\")}}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}var asmGlobalArg={\"Math\":Math,\"Int8Array\":Int8Array,\"Int16Array\":Int16Array,\"Int32Array\":Int32Array,\"Uint8Array\":Uint8Array,\"Uint16Array\":Uint16Array,\"Float32Array\":Float32Array,\"Float64Array\":Float64Array,\"NaN\":NaN,Infinity:Infinity};var asmLibraryArg={\"A\":_emscripten_resize_heap,\"B\":_fd_close,\"C\":_fd_read,\"D\":_fd_seek,\"E\":_fd_write,\"F\":_getenv,\"G\":_llvm_stackrestore,\"H\":_llvm_stacksave,\"I\":_llvm_trap,\"J\":_strftime,\"K\":_strftime_l,\"L\":abortOnCannotGrowMemory,\"M\":demangle,\"N\":demangleAll,\"O\":jsStackTrace,\"P\":stackTrace,\"Q\":tempDoublePtr,\"a\":abort,\"b\":setTempRet0,\"c\":getTempRet0,\"d\":___assert_fail,\"e\":___cxa_allocate_exception,\"f\":___cxa_begin_catch,\"g\":___cxa_throw,\"h\":___exception_addRef,\"i\":___exception_deAdjust,\"j\":___gxx_personality_v0,\"k\":___lock,\"l\":___map_file,\"m\":___setErrNo,\"n\":___syscall91,\"o\":___unlock,\"p\":___wasi_fd_close,\"q\":___wasi_fd_read,\"r\":___wasi_fd_seek,\"s\":___wasi_fd_write,\"t\":__addDays,\"u\":__arraySum,\"v\":__emscripten_syscall_munmap,\"w\":__isLeapYear,\"x\":_abort,\"y\":_emscripten_get_heap_size,\"z\":_emscripten_memcpy_big};// EMSCRIPTEN_START_ASM\nvar asm=(/** @suppress {uselessCode} */ function(global,env,buffer) {\n\"use asm\";var a=new global.Int8Array(buffer),b=new global.Int16Array(buffer),c=new global.Int32Array(buffer),d=new global.Uint8Array(buffer),e=new global.Uint16Array(buffer),f=new global.Float32Array(buffer),g=new global.Float64Array(buffer),h=env.Q|0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0.0,q=global.NaN,r=global.Infinity,s=global.Math.abs,t=global.Math.imul,u=global.Math.clz32,v=env.a,w=env.b,x=env.c,y=env.d,z=env.e,A=env.f,B=env.g,C=env.h,D=env.i,E=env.j,F=env.k,G=env.l,H=env.m,I=env.n,J=env.o,K=env.p,L=env.q,M=env.r,N=env.s,O=env.t,P=env.u,Q=env.v,R=env.w,S=env.x,T=env.y,U=env.z,V=env.A,W=env.B,X=env.C,Y=env.D,Z=env.E,_=env.F,$=env.G,aa=env.H,ba=env.I,ca=env.J,da=env.K,ea=env.L,fa=env.M,ga=env.N,ha=env.O,ia=env.P,ja=109520,ka=5352400,la=0.0;\n// EMSCRIPTEN_START_FUNCS\nfunction Ea(){wt();xt()}function Fa(a){a=a|0;var b=0;b=ja;ja=ja+a|0;ja=ja+15&-16;return b|0}function Ga(){return ja|0}function Ha(a){a=a|0;ja=a}function Ia(a,b){a=a|0;b=b|0;ja=a;ka=b}function Ja(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ma=0,Oa=0,Pa=0,Qa=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,nb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0;Rb=ja;ja=ja+68176|0;Jb=Rb+68164|0;Db=Rb+68160|0;Fb=Rb+68156|0;Hb=Rb+68152|0;zb=Rb+68148|0;yb=Rb+68144|0;Eb=Rb+68140|0;Gb=Rb+68136|0;Ib=Rb+68132|0;Ab=Rb+68128|0;Bb=Rb+68124|0;Cb=Rb+68120|0;ub=Rb+68116|0;vb=Rb+68112|0;xb=Rb+68108|0;wb=Rb+68104|0;fb=Rb+68100|0;ib=Rb+68096|0;lb=Rb+68092|0;hb=Rb+68088|0;kb=Rb+68084|0;nb=Rb+68080|0;eb=Rb+68076|0;gb=Rb+68072|0;jb=Rb+68068|0;db=Rb+68064|0;cb=Rb+68060|0;ab=Rb+68056|0;Wa=Rb+68052|0;Ya=Rb+68048|0;_a=Rb+68044|0;Sa=Rb+68040|0;Qa=Rb+68036|0;Xa=Rb+68032|0;Za=Rb+68028|0;$a=Rb+68024|0;Ta=Rb+68020|0;Ua=Rb+68016|0;Va=Rb+68012|0;Ja=Rb+68008|0;Ma=Rb+68004|0;Pa=Rb+68e3|0;Oa=Rb+67996|0;Ea=Rb+67992|0;Ga=Rb+67988|0;Ia=Rb+67984|0;xa=Rb+67980|0;ya=Rb+67976|0;Ba=Rb+67972|0;Ha=Rb+67968|0;Ca=Rb+67964|0;Da=Rb+67960|0;Fa=Rb+67956|0;pa=Rb+67952|0;za=Rb+67948|0;ta=Rb+67944|0;wa=Rb+67940|0;fa=Rb+67936|0;_=Rb+67932|0;ka=Rb+67928|0;ua=Rb+67924|0;$=Rb+67920|0;oa=Rb+67916|0;va=Rb+67912|0;aa=Rb+67908|0;ia=Rb+67904|0;ma=Rb+67900|0;ra=Rb+67896|0;ca=Rb+67892|0;ha=Rb+67888|0;na=Rb+67884|0;sa=Rb+67880|0;Y=Rb+67876|0;Z=Rb+67872|0;da=Rb+67868|0;qa=Rb+67864|0;ea=Rb+67860|0;ga=Rb+67856|0;la=Rb+67852|0;Q=Rb+67848|0;ba=Rb+67844|0;U=Rb+67840|0;X=Rb+67836|0;H=Rb+67832|0;A=Rb+67828|0;L=Rb+67824|0;V=Rb+67820|0;B=Rb+67816|0;P=Rb+67812|0;W=Rb+67808|0;C=Rb+67804|0;J=Rb+67800|0;N=Rb+67796|0;R=Rb+67792|0;E=Rb+67788|0;K=Rb+67784|0;O=Rb+67780|0;T=Rb+67776|0;y=Rb+67772|0;z=Rb+67768|0;F=Rb+67764|0;S=Rb+67760|0;G=Rb+67756|0;I=Rb+67752|0;M=Rb+67748|0;s=Rb+67744|0;D=Rb+67740|0;t=Rb+67736|0;x=Rb+67732|0;n=Rb+67728|0;h=Rb+67724|0;p=Rb+67720|0;v=Rb+67716|0;i=Rb+67712|0;r=Rb+67708|0;w=Rb+67704|0;j=Rb+67700|0;o=Rb+67696|0;q=Rb+67692|0;u=Rb+67688|0;l=Rb+67684|0;Sb=Rb+67680|0;Tb=Rb+67676|0;Ub=Rb+67672|0;f=Rb+67668|0;g=Rb+67664|0;Vb=Rb+67656|0;Wb=Rb+67652|0;Xb=Rb+67648|0;Yb=Rb+67644|0;Zb=Rb+67640|0;k=Rb+67636|0;$b=Rb+67632|0;ac=Rb+67628|0;bc=Rb+67624|0;cc=Rb+67620|0;ec=Rb+67616|0;fc=Rb+67612|0;dc=Rb+67608|0;ic=Rb+67604|0;hc=Rb+67600|0;gc=Rb+67596|0;jc=Rb+67592|0;kc=Rb+67588|0;lc=Rb+67584|0;_b=Rb+67580|0;m=Rb+67576|0;sb=Rb+67572|0;Aa=Rb+67568|0;Kb=Rb+67424|0;Pb=Rb+67280|0;Mb=Rb+328|0;Lb=Rb+184|0;Nb=Rb+40|0;bb=Rb+28|0;Ob=Rb+24|0;tb=Rb+12|0;Qb=Rb;c[m>>2]=a;c[sb>>2]=b;c[Aa>>2]=e;c[lc>>2]=Kb;c[_b>>2]=24;a=c[lc>>2]|0;c[kc>>2]=a+64;e=c[kc>>2]|0;c[jc>>2]=e;c[c[jc>>2]>>2]=24856;c[e>>2]=24840;c[a>>2]=21124;c[a+64>>2]=21164;c[a+8>>2]=21144;c[ic>>2]=a;c[hc>>2]=21176;c[gc>>2]=a+12;e=c[ic>>2]|0;b=c[hc>>2]|0;gc=c[gc>>2]|0;c[ec>>2]=e;c[fc>>2]=b+4;c[dc>>2]=gc;ec=c[ec>>2]|0;fc=c[fc>>2]|0;c[ec>>2]=c[fc>>2];c[ec+(c[(c[ec>>2]|0)+-12>>2]|0)>>2]=c[fc+4>>2];c[ec+4>>2]=0;dc=c[dc>>2]|0;c[bc>>2]=ec+(c[(c[ec>>2]|0)+-12>>2]|0);c[cc>>2]=dc;bc=c[bc>>2]|0;it(bc,c[cc>>2]|0);c[bc+72>>2]=0;c[bc+76>>2]=Ra()|0;c[$b>>2]=e+8;c[ac>>2]=b+12;$b=c[$b>>2]|0;ac=c[ac>>2]|0;c[$b>>2]=c[ac>>2];c[$b+(c[(c[$b>>2]|0)+-12>>2]|0)>>2]=c[ac+4>>2];c[e>>2]=c[b>>2];c[e+(c[(c[e>>2]|0)+-12>>2]|0)>>2]=c[b+20>>2];c[e+8>>2]=c[b+24>>2];c[a>>2]=21124;c[a+64>>2]=21164;c[a+8>>2]=21144;e=c[_b>>2]|0;c[Zb>>2]=a+12;c[k>>2]=e;e=c[Zb>>2]|0;lt(e);c[e>>2]=21220;c[Yb>>2]=e+32;a=c[Yb>>2]|0;c[Xb>>2]=a;b=c[Xb>>2]|0;c[Wb>>2]=b;Wb=c[Wb>>2]|0;c[Wb>>2]=0;c[Wb+4>>2]=0;c[Wb+8>>2]=0;c[Vb>>2]=b;c[Rb+67660>>2]=c[Vb>>2];c[Ub>>2]=a;c[Tb>>2]=c[Ub>>2];c[Sb>>2]=c[Tb>>2];c[f>>2]=c[Sb>>2];c[g>>2]=0;while(1){if((c[g>>2]|0)>>>0>=3)break;c[(c[f>>2]|0)+(c[g>>2]<<2)>>2]=0;c[g>>2]=(c[g>>2]|0)+1}c[e+44>>2]=0;c[e+48>>2]=c[k>>2];Ka(Kb+8|0,c[m>>2]|0)|0;c[u>>2]=Pb;c[l>>2]=24;lc=c[u>>2]|0;c[q>>2]=lc+64;e=c[q>>2]|0;c[o>>2]=e;c[c[o>>2]>>2]=24856;c[e>>2]=24840;c[lc>>2]=21124;c[lc+64>>2]=21164;c[lc+8>>2]=21144;c[r>>2]=lc;c[w>>2]=21176;c[j>>2]=lc+12;e=c[r>>2]|0;kc=c[w>>2]|0;ic=c[j>>2]|0;c[p>>2]=e;c[v>>2]=kc+4;c[i>>2]=ic;ic=c[p>>2]|0;jc=c[v>>2]|0;c[ic>>2]=c[jc>>2];c[ic+(c[(c[ic>>2]|0)+-12>>2]|0)>>2]=c[jc+4>>2];c[ic+4>>2]=0;jc=c[i>>2]|0;c[n>>2]=ic+(c[(c[ic>>2]|0)+-12>>2]|0);c[h>>2]=jc;jc=c[n>>2]|0;it(jc,c[h>>2]|0);c[jc+72>>2]=0;c[jc+76>>2]=Ra()|0;c[t>>2]=e+8;c[x>>2]=kc+12;jc=c[t>>2]|0;ic=c[x>>2]|0;c[jc>>2]=c[ic>>2];c[jc+(c[(c[jc>>2]|0)+-12>>2]|0)>>2]=c[ic+4>>2];c[e>>2]=c[kc>>2];c[e+(c[(c[e>>2]|0)+-12>>2]|0)>>2]=c[kc+20>>2];c[e+8>>2]=c[kc+24>>2];c[lc>>2]=21124;c[lc+64>>2]=21164;c[lc+8>>2]=21144;e=c[l>>2]|0;c[s>>2]=lc+12;c[D>>2]=e;e=c[s>>2]|0;lt(e);c[e>>2]=21220;c[M>>2]=e+32;lc=c[M>>2]|0;c[I>>2]=lc;kc=c[I>>2]|0;c[G>>2]=kc;jc=c[G>>2]|0;c[jc>>2]=0;c[jc+4>>2]=0;c[jc+8>>2]=0;c[S>>2]=kc;c[F>>2]=c[S>>2];c[T>>2]=lc;c[O>>2]=c[T>>2];c[K>>2]=c[O>>2];c[y>>2]=c[K>>2];c[z>>2]=0;while(1){if((c[z>>2]|0)>>>0>=3)break;c[(c[y>>2]|0)+(c[z>>2]<<2)>>2]=0;c[z>>2]=(c[z>>2]|0)+1}c[e+44>>2]=0;c[e+48>>2]=c[D>>2];La(Kb,Pb);ob(Mb);c[R>>2]=Lb;c[E>>2]=24;lc=c[R>>2]|0;c[N>>2]=lc+64;e=c[N>>2]|0;c[J>>2]=e;c[c[J>>2]>>2]=24856;c[e>>2]=24840;c[lc>>2]=21124;c[lc+64>>2]=21164;c[lc+8>>2]=21144;c[P>>2]=lc;c[W>>2]=21176;c[C>>2]=lc+12;e=c[P>>2]|0;kc=c[W>>2]|0;ic=c[C>>2]|0;c[L>>2]=e;c[V>>2]=kc+4;c[B>>2]=ic;ic=c[L>>2]|0;jc=c[V>>2]|0;c[ic>>2]=c[jc>>2];c[ic+(c[(c[ic>>2]|0)+-12>>2]|0)>>2]=c[jc+4>>2];c[ic+4>>2]=0;jc=c[B>>2]|0;c[H>>2]=ic+(c[(c[ic>>2]|0)+-12>>2]|0);c[A>>2]=jc;jc=c[H>>2]|0;it(jc,c[A>>2]|0);c[jc+72>>2]=0;c[jc+76>>2]=Ra()|0;c[U>>2]=e+8;c[X>>2]=kc+12;jc=c[U>>2]|0;ic=c[X>>2]|0;c[jc>>2]=c[ic>>2];c[jc+(c[(c[jc>>2]|0)+-12>>2]|0)>>2]=c[ic+4>>2];c[e>>2]=c[kc>>2];c[e+(c[(c[e>>2]|0)+-12>>2]|0)>>2]=c[kc+20>>2];c[e+8>>2]=c[kc+24>>2];c[lc>>2]=21124;c[lc+64>>2]=21164;c[lc+8>>2]=21144;e=c[E>>2]|0;c[Q>>2]=lc+12;c[ba>>2]=e;e=c[Q>>2]|0;lt(e);c[e>>2]=21220;c[la>>2]=e+32;lc=c[la>>2]|0;c[ga>>2]=lc;kc=c[ga>>2]|0;c[ea>>2]=kc;jc=c[ea>>2]|0;c[jc>>2]=0;c[jc+4>>2]=0;c[jc+8>>2]=0;c[qa>>2]=kc;c[da>>2]=c[qa>>2];c[sa>>2]=lc;c[na>>2]=c[sa>>2];c[ha>>2]=c[na>>2];c[Y>>2]=c[ha>>2];c[Z>>2]=0;while(1){if((c[Z>>2]|0)>>>0>=3)break;c[(c[Y>>2]|0)+(c[Z>>2]<<2)>>2]=0;c[Z>>2]=(c[Z>>2]|0)+1}c[e+44>>2]=0;c[e+48>>2]=c[ba>>2];qb(Mb,107300,(Lb|0)==0?0:Lb+8|0);c[ra>>2]=Nb;c[ca>>2]=24;lc=c[ra>>2]|0;c[ma>>2]=lc+64;e=c[ma>>2]|0;c[ia>>2]=e;c[c[ia>>2]>>2]=24856;c[e>>2]=24840;c[lc>>2]=21124;c[lc+64>>2]=21164;c[lc+8>>2]=21144;c[oa>>2]=lc;c[va>>2]=21176;c[aa>>2]=lc+12;e=c[oa>>2]|0;kc=c[va>>2]|0;ic=c[aa>>2]|0;c[ka>>2]=e;c[ua>>2]=kc+4;c[$>>2]=ic;ic=c[ka>>2]|0;jc=c[ua>>2]|0;c[ic>>2]=c[jc>>2];c[ic+(c[(c[ic>>2]|0)+-12>>2]|0)>>2]=c[jc+4>>2];c[ic+4>>2]=0;jc=c[$>>2]|0;c[fa>>2]=ic+(c[(c[ic>>2]|0)+-12>>2]|0);c[_>>2]=jc;jc=c[fa>>2]|0;it(jc,c[_>>2]|0);c[jc+72>>2]=0;c[jc+76>>2]=Ra()|0;c[ta>>2]=e+8;c[wa>>2]=kc+12;jc=c[ta>>2]|0;ic=c[wa>>2]|0;c[jc>>2]=c[ic>>2];c[jc+(c[(c[jc>>2]|0)+-12>>2]|0)>>2]=c[ic+4>>2];c[e>>2]=c[kc>>2];c[e+(c[(c[e>>2]|0)+-12>>2]|0)>>2]=c[kc+20>>2];c[e+8>>2]=c[kc+24>>2];c[lc>>2]=21124;c[lc+64>>2]=21164;c[lc+8>>2]=21144;e=c[ca>>2]|0;c[pa>>2]=lc+12;c[za>>2]=e;e=c[pa>>2]|0;lt(e);c[e>>2]=21220;c[Fa>>2]=e+32;lc=c[Fa>>2]|0;c[Da>>2]=lc;kc=c[Da>>2]|0;c[Ca>>2]=kc;jc=c[Ca>>2]|0;c[jc>>2]=0;c[jc+4>>2]=0;c[jc+8>>2]=0;c[Ha>>2]=kc;c[Ba>>2]=c[Ha>>2];c[Ia>>2]=lc;c[Ga>>2]=c[Ia>>2];c[Ea>>2]=c[Ga>>2];c[xa>>2]=c[Ea>>2];c[ya>>2]=0;while(1){if((c[ya>>2]|0)>>>0>=3)break;c[(c[xa>>2]|0)+(c[ya>>2]<<2)>>2]=0;c[ya>>2]=(c[ya>>2]|0)+1}c[e+44>>2]=0;c[e+48>>2]=c[za>>2];rb(Mb,Pb,Nb,1)|0;b=c[Aa>>2]|0;c[Oa>>2]=Lb;mb(bb,(c[Oa>>2]|0)+12|0);c[Pa>>2]=bb;c[Ma>>2]=c[Pa>>2];c[Ja>>2]=c[Ma>>2];e=c[Ja>>2]|0;c[Va>>2]=e;c[Ua>>2]=c[Va>>2];c[Ta>>2]=c[Ua>>2];if((d[(c[Ta>>2]|0)+11>>0]|0)&128|0){c[_a>>2]=e;c[Ya>>2]=c[_a>>2];c[Wa>>2]=c[Ya>>2];e=c[c[Wa>>2]>>2]|0}else{c[$a>>2]=e;c[Za>>2]=c[$a>>2];c[Xa>>2]=c[Za>>2];c[Qa>>2]=c[Xa>>2];c[Sa>>2]=c[Qa>>2];e=c[Sa>>2]|0}c[ab>>2]=e;ve(b,c[ab>>2]|0)|0;OC(bb);c[cb>>2]=Nb;mb(tb,(c[cb>>2]|0)+12|0);c[db>>2]=tb;e=c[db>>2]|0;c[jb>>2]=e;c[gb>>2]=c[jb>>2];c[eb>>2]=c[gb>>2];if((d[(c[eb>>2]|0)+11>>0]|0)&128|0){c[lb>>2]=e;c[ib>>2]=c[lb>>2];c[fb>>2]=c[ib>>2];e=c[(c[fb>>2]|0)+4>>2]|0}else{c[nb>>2]=e;c[kb>>2]=c[nb>>2];c[hb>>2]=c[kb>>2];e=d[(c[hb>>2]|0)+11>>0]|0}OC(tb);c[Ob>>2]=e;if(0>=(c[Ob>>2]|0)>>>0){lc=c[Ob>>2]|0;Na(Nb);Na(Lb);pb(Mb);Na(Pb);Na(Kb);ja=Rb;return lc|0}b=c[sb>>2]|0;c[wb>>2]=Nb;mb(Qb,(c[wb>>2]|0)+12|0);c[xb>>2]=Qb;c[vb>>2]=c[xb>>2];c[ub>>2]=c[vb>>2];e=c[ub>>2]|0;c[Cb>>2]=e;c[Bb>>2]=c[Cb>>2];c[Ab>>2]=c[Bb>>2];if((d[(c[Ab>>2]|0)+11>>0]|0)&128|0){c[Hb>>2]=e;c[Fb>>2]=c[Hb>>2];c[Db>>2]=c[Fb>>2];e=c[c[Db>>2]>>2]|0}else{c[Ib>>2]=e;c[Gb>>2]=c[Ib>>2];c[Eb>>2]=c[Gb>>2];c[yb>>2]=c[Eb>>2];c[zb>>2]=c[yb>>2];e=c[zb>>2]|0}c[Jb>>2]=e;yD(b|0,c[Jb>>2]|0,c[Ob>>2]|0)|0;OC(Qb);lc=c[Ob>>2]|0;Na(Nb);Na(Lb);pb(Mb);Na(Pb);Na(Kb);ja=Rb;return lc|0}function Ka(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=ja;ja=ja+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;a=c[f>>2]|0;b=c[e>>2]|0;b=Xa(a,b,lb(c[e>>2]|0)|0)|0;ja=d;return b|0}function La(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;w=ja;ja=ja+128|0;q=w+108|0;t=w+104|0;o=w+96|0;u=w+92|0;r=w+88|0;g=w+113|0;j=w+84|0;s=w+80|0;f=w+112|0;n=w+76|0;i=w+72|0;k=w+68|0;x=w+64|0;y=w+60|0;z=w+56|0;e=w+52|0;h=w+48|0;A=w+40|0;B=w+36|0;C=w+32|0;D=w+28|0;m=w+24|0;p=w+20|0;l=w+8|0;v=w;c[m>>2]=b;c[p>>2]=d;c[D>>2]=l;d=c[D>>2]|0;c[C>>2]=d;b=c[C>>2]|0;c[B>>2]=b;B=c[B>>2]|0;c[B>>2]=0;c[B+4>>2]=0;c[B+8>>2]=0;c[A>>2]=b;c[w+44>>2]=c[A>>2];c[z>>2]=d;c[y>>2]=c[z>>2];c[x>>2]=c[y>>2];c[e>>2]=c[x>>2];c[h>>2]=0;while(1){if((c[h>>2]|0)>>>0>=3)break;c[(c[e>>2]|0)+(c[h>>2]<<2)>>2]=0;c[h>>2]=(c[h>>2]|0)+1}while(1){c[i>>2]=c[m>>2];c[k>>2]=l;B=c[i>>2]|0;C=c[k>>2]|0;A=c[i>>2]|0;c[s>>2]=A+(c[(c[A>>2]|0)+-12>>2]|0);a[f>>0]=10;jt(n,c[s>>2]|0);c[j>>2]=n;A=Bu(c[j>>2]|0,108348)|0;D=a[f>>0]|0;c[r>>2]=A;a[g>>0]=D;D=c[r>>2]|0;D=oa[c[(c[D>>2]|0)+28>>2]&63](D,a[g>>0]|0)|0;Cu(n);D=Pa(B,C,D)|0;c[u>>2]=D+(c[(c[D>>2]|0)+-12>>2]|0);c[t>>2]=c[u>>2];c[q>>2]=c[t>>2];D=(c[(c[q>>2]|0)+16>>2]&5|0)!=0^1;c[o>>2]=D?182:0;c[o+4>>2]=D?0:0;D=c[o+4>>2]|0;c[v>>2]=c[o>>2];c[v+4>>2]=D;if(!(c[v>>2]|0?1:(c[v+4>>2]&1|0)!=0))break;Ka(Oa((c[p>>2]|0)+8|0,l)|0,28132)|0}OC(l);ja=w;return}function Ma(a){a=a|0;A(a|0)|0;$f()}function Na(a){a=a|0;var b=0,d=0;b=ja;ja=ja+16|0;d=b;c[d>>2]=a;a=c[d>>2]|0;Za(a,21172);Xr(a+64|0);ja=b;return}function Oa(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;z=ja;ja=ja+112|0;r=z+100|0;u=z+96|0;x=z+92|0;t=z+88|0;w=z+84|0;y=z+80|0;q=z+76|0;s=z+72|0;v=z+68|0;p=z+64|0;n=z+60|0;g=z+56|0;i=z+52|0;k=z+48|0;f=z+44|0;e=z+40|0;h=z+36|0;j=z+32|0;l=z+28|0;A=z+24|0;B=z+20|0;C=z+16|0;D=z+12|0;E=z+8|0;m=z+4|0;o=z;c[m>>2]=a;c[o>>2]=b;m=c[m>>2]|0;c[E>>2]=c[o>>2];c[D>>2]=c[E>>2];a=c[D>>2]|0;c[C>>2]=a;c[B>>2]=c[C>>2];c[A>>2]=c[B>>2];if((d[(c[A>>2]|0)+11>>0]|0)&128|0){c[k>>2]=a;c[i>>2]=c[k>>2];c[g>>2]=c[i>>2];a=c[c[g>>2]>>2]|0}else{c[l>>2]=a;c[j>>2]=c[l>>2];c[h>>2]=c[j>>2];c[e>>2]=c[h>>2];c[f>>2]=c[e>>2];a=c[f>>2]|0}c[n>>2]=a;b=c[n>>2]|0;c[p>>2]=c[o>>2];a=c[p>>2]|0;c[v>>2]=a;c[s>>2]=c[v>>2];c[q>>2]=c[s>>2];if((d[(c[q>>2]|0)+11>>0]|0)&128|0){c[x>>2]=a;c[u>>2]=c[x>>2];c[r>>2]=c[u>>2];E=c[(c[r>>2]|0)+4>>2]|0;E=Xa(m,b,E)|0;ja=z;return E|0}else{c[y>>2]=a;c[w>>2]=c[y>>2];c[t>>2]=c[w>>2];E=d[(c[t>>2]|0)+11>>0]|0;E=Xa(m,b,E)|0;ja=z;return E|0}return 0}function Pa(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ka=0,la=0,na=0,oa=0;la=ja;ja=ja+224|0;ba=la+212|0;M=la+208|0;ia=la+204|0;L=la+200|0;U=la+196|0;D=la+192|0;P=la;C=la+188|0;O=la+221|0;S=la+184|0;X=la+180|0;aa=la+176|0;ha=la+172|0;K=la+168|0;T=la+164|0;Y=la+160|0;ca=la+156|0;V=la+152|0;_=la+148|0;ga=la+144|0;R=la+140|0;W=la+136|0;$=la+132|0;fa=la+128|0;Q=la+124|0;ea=la+120|0;Z=la+116|0;da=la+112|0;r=la+108|0;v=la+104|0;z=la+100|0;q=la+96|0;u=la+92|0;y=la+88|0;j=la+84|0;k=la+80|0;h=la+76|0;p=la+72|0;t=la+68|0;x=la+64|0;s=la+60|0;w=la+56|0;B=la+52|0;o=la+48|0;n=la+44|0;A=la+40|0;i=la+36|0;g=la+28|0;l=la+220|0;m=la+219|0;na=la+24|0;J=la+20|0;N=la+16|0;F=la+218|0;oa=la+217|0;G=la+12|0;H=la+8|0;I=la+4|0;E=la+216|0;c[J>>2]=b;c[N>>2]=e;a[F>>0]=f;nt(oa,c[J>>2]|0,1);c[na>>2]=oa;if(!(a[c[na>>2]>>0]&1)){oa=c[J>>2]|0;ja=la;return oa|0}c[g>>2]=c[N>>2];f=c[g>>2]|0;c[la+32>>2]=f;c[B>>2]=f;c[w>>2]=c[B>>2];c[s>>2]=c[w>>2];if((d[(c[s>>2]|0)+11>>0]|0)&128|0){c[z>>2]=f;c[v>>2]=c[z>>2];c[r>>2]=c[v>>2];oa=c[c[r>>2]>>2]|0;a[l>>0]=0;Ua(oa,l);c[y>>2]=f;c[j>>2]=0;oa=c[j>>2]|0;c[u>>2]=c[y>>2];c[q>>2]=c[u>>2];c[(c[q>>2]|0)+4>>2]=oa}else{c[x>>2]=f;c[t>>2]=c[x>>2];c[p>>2]=c[t>>2];c[h>>2]=c[p>>2];c[k>>2]=c[h>>2];oa=c[k>>2]|0;a[m>>0]=0;Ua(oa,m);c[A>>2]=f;c[i>>2]=0;oa=c[i>>2]&255;c[n>>2]=c[A>>2];c[o>>2]=c[n>>2];a[(c[o>>2]|0)+11>>0]=oa}c[G>>2]=0;c[H>>2]=0;while(1){f=c[J>>2]|0;c[da>>2]=f+(c[(c[f>>2]|0)+-12>>2]|0);c[Z>>2]=c[da>>2];c[ea>>2]=c[(c[Z>>2]|0)+24>>2];f=c[ea>>2]|0;if((c[f+12>>2]|0)==(c[f+16>>2]|0))c[Q>>2]=ma[c[(c[f>>2]|0)+40>>2]&127](f)|0;else{na=f+12|0;oa=c[na>>2]|0;c[na>>2]=oa+1;c[Q>>2]=Va(a[oa>>0]|0)|0}c[I>>2]=c[Q>>2];oa=c[I>>2]|0;if(Qa(oa,Ra()|0)|0){ka=10;break}c[H>>2]=(c[H>>2]|0)+1;a[E>>0]=Sa(c[I>>2]|0)|0;if(Ta(a[E>>0]|0,a[F>>0]|0)|0)break;XC(c[N>>2]|0,a[E>>0]|0);c[fa>>2]=c[N>>2];f=c[fa>>2]|0;c[$>>2]=f;c[W>>2]=c[$>>2];c[R>>2]=c[W>>2];if((d[(c[R>>2]|0)+11>>0]|0)&128|0){c[ca>>2]=f;c[Y>>2]=c[ca>>2];c[T>>2]=c[Y>>2];f=c[(c[T>>2]|0)+4>>2]|0}else{c[ga>>2]=f;c[_>>2]=c[ga>>2];c[V>>2]=c[_>>2];f=d[(c[V>>2]|0)+11>>0]|0}c[ha>>2]=c[N>>2];c[aa>>2]=c[ha>>2];c[X>>2]=c[aa>>2];c[S>>2]=c[X>>2];c[C>>2]=c[S>>2];oa=c[C>>2]|0;a[P>>0]=a[O>>0]|0;c[D>>2]=oa;c[U>>2]=c[D>>2];c[K>>2]=-1;if((f|0)==((c[K>>2]|0)-16|0)){ka=16;break}}if((ka|0)==10)c[G>>2]=c[G>>2]|2;else if((ka|0)==16)c[G>>2]=c[G>>2]|4;if(!(c[H>>2]|0))c[G>>2]=c[G>>2]|4;na=c[J>>2]|0;oa=c[G>>2]|0;c[ia>>2]=na+(c[(c[na>>2]|0)+-12>>2]|0);c[L>>2]=oa;oa=c[L>>2]|0;c[ba>>2]=c[ia>>2];c[M>>2]=oa;oa=c[ba>>2]|0;ht(oa,c[oa+16>>2]|c[M>>2]);oa=c[J>>2]|0;ja=la;return oa|0}function Qa(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;f=ja;ja=ja+16|0;e=f+4|0;d=f;c[e>>2]=a;c[d>>2]=b;ja=f;return (c[e>>2]|0)==(c[d>>2]|0)|0}function Ra(){return -1}function Sa(a){a=a|0;var b=0,d=0;d=ja;ja=ja+16|0;b=d;c[b>>2]=a;ja=d;return c[b>>2]&255|0}function Ta(b,c){b=b|0;c=c|0;var d=0,e=0,f=0;f=ja;ja=ja+16|0;e=f+1|0;d=f;a[e>>0]=b;a[d>>0]=c;ja=f;return (a[e>>0]|0)==(a[d>>0]|0)|0}function Ua(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=ja;ja=ja+16|0;f=e+4|0;g=e;c[f>>2]=b;c[g>>2]=d;a[c[f>>2]>>0]=a[c[g>>2]>>0]|0;ja=e;return}function Va(b){b=b|0;var c=0,e=0;e=ja;ja=ja+16|0;c=e;a[c>>0]=b;ja=e;return d[c>>0]|0|0}function Wa(a){a=a|0;var b=0;b=ja;ja=ja+16|0;c[b>>2]=a;ja=b;return}function Xa(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;D=ja;ja=ja+112|0;v=D+92|0;y=D+88|0;o=D+97|0;p=D+84|0;A=D+80|0;n=D+96|0;x=D+76|0;m=D+72|0;C=D+68|0;j=D+64|0;z=D+60|0;t=D+56|0;B=D+52|0;s=D+48|0;h=D+44|0;g=D+40|0;i=D+36|0;f=D+32|0;E=D+28|0;q=D+24|0;l=D+20|0;k=D+16|0;r=D+8|0;u=D+4|0;w=D;c[q>>2]=b;c[l>>2]=d;c[k>>2]=e;pt(r,c[q>>2]|0);c[E>>2]=r;if(!(a[c[E>>2]>>0]&1)){qt(r);E=c[q>>2]|0;ja=D;return E|0}d=c[q>>2]|0;c[i>>2]=u;c[f>>2]=d;d=c[i>>2]|0;f=c[f>>2]|0;c[g>>2]=f+(c[(c[f>>2]|0)+-12>>2]|0);c[h>>2]=c[g>>2];c[d>>2]=c[(c[h>>2]|0)+24>>2];g=c[l>>2]|0;d=c[q>>2]|0;c[j>>2]=d+(c[(c[d>>2]|0)+-12>>2]|0);d=(c[(c[j>>2]|0)+4>>2]&176|0)==32?(c[l>>2]|0)+(c[k>>2]|0)|0:c[l>>2]|0;f=(c[l>>2]|0)+(c[k>>2]|0)|0;b=c[q>>2]|0;b=b+(c[(c[b>>2]|0)+-12>>2]|0)|0;e=c[q>>2]|0;c[m>>2]=e+(c[(c[e>>2]|0)+-12>>2]|0);e=c[m>>2]|0;E=Ra()|0;if(Qa(E,c[e+76>>2]|0)|0){c[A>>2]=e;a[n>>0]=32;jt(x,c[A>>2]|0);c[p>>2]=x;A=Bu(c[p>>2]|0,108348)|0;E=a[n>>0]|0;c[y>>2]=A;a[o>>0]=E;E=c[y>>2]|0;E=oa[c[(c[E>>2]|0)+28>>2]&63](E,a[o>>0]|0)|0;Cu(x);c[e+76>>2]=E<<24>>24}E=c[e+76>>2]&255;c[v>>2]=c[u>>2];c[w>>2]=Ya(v,g,d,f,b,E)|0;c[C>>2]=w;if(c[c[C>>2]>>2]|0){qt(r);E=c[q>>2]|0;ja=D;return E|0}E=c[q>>2]|0;c[B>>2]=E+(c[(c[E>>2]|0)+-12>>2]|0);c[s>>2]=5;E=c[s>>2]|0;c[z>>2]=c[B>>2];c[t>>2]=E;E=c[z>>2]|0;ht(E,c[E+16>>2]|c[t>>2]);qt(r);E=c[q>>2]|0;ja=D;return E|0}function Ya(b,e,f,g,h,i){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0;aa=ja;ja=ja+192|0;$=aa+176|0;U=aa+172|0;M=aa+168|0;_=aa+164|0;T=aa+160|0;L=aa+156|0;Z=aa+152|0;W=aa+148|0;S=aa+144|0;R=aa+140|0;D=aa+136|0;G=aa+132|0;I=aa+128|0;A=aa+124|0;z=aa+120|0;E=aa+116|0;H=aa+112|0;J=aa+108|0;B=aa+104|0;C=aa+100|0;F=aa+96|0;x=aa+92|0;y=aa+88|0;t=aa+84|0;u=aa+80|0;s=aa+76|0;r=aa+72|0;w=aa+68|0;m=aa+64|0;j=aa+181|0;v=aa+60|0;o=aa+56|0;l=aa+52|0;q=aa+48|0;Y=aa+44|0;n=aa+40|0;Q=aa+36|0;P=aa+32|0;K=aa+28|0;k=aa+180|0;p=aa+24|0;O=aa+20|0;N=aa+16|0;V=aa+4|0;X=aa;c[n>>2]=e;c[Q>>2]=f;c[P>>2]=g;c[K>>2]=h;a[k>>0]=i;if(!(c[b>>2]|0)){c[Y>>2]=c[b>>2];$=c[Y>>2]|0;ja=aa;return $|0}c[p>>2]=(c[P>>2]|0)-(c[n>>2]|0);c[q>>2]=c[K>>2];c[O>>2]=c[(c[q>>2]|0)+12>>2];if((c[O>>2]|0)>(c[p>>2]|0))c[O>>2]=(c[O>>2]|0)-(c[p>>2]|0);else c[O>>2]=0;c[N>>2]=(c[Q>>2]|0)-(c[n>>2]|0);if((c[N>>2]|0)>0?(p=c[n>>2]|0,q=c[N>>2]|0,c[v>>2]=c[b>>2],c[o>>2]=p,c[l>>2]=q,v=c[v>>2]|0,v=pa[c[(c[v>>2]|0)+48>>2]&31](v,c[o>>2]|0,c[l>>2]|0)|0,(v|0)!=(c[N>>2]|0)):0){c[b>>2]=0;c[Y>>2]=c[b>>2];$=c[Y>>2]|0;ja=aa;return $|0}if((c[O>>2]|0)>0){v=c[O>>2]|0;i=a[k>>0]|0;c[w>>2]=V;c[m>>2]=v;a[j>>0]=i;i=c[w>>2]|0;c[r>>2]=i;w=c[r>>2]|0;c[s>>2]=w;v=c[s>>2]|0;c[v>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;c[u>>2]=w;c[t>>2]=c[u>>2];MC(i,c[m>>2]|0,a[j>>0]|0);i=c[b>>2]|0;c[y>>2]=V;c[x>>2]=c[y>>2];j=c[x>>2]|0;c[F>>2]=j;c[C>>2]=c[F>>2];c[B>>2]=c[C>>2];if((d[(c[B>>2]|0)+11>>0]|0)&128|0){c[I>>2]=j;c[G>>2]=c[I>>2];c[D>>2]=c[G>>2];j=c[c[D>>2]>>2]|0}else{c[J>>2]=j;c[H>>2]=c[J>>2];c[E>>2]=c[H>>2];c[z>>2]=c[E>>2];c[A>>2]=c[z>>2];j=c[A>>2]|0}c[R>>2]=j;J=c[R>>2]|0;R=c[O>>2]|0;c[$>>2]=i;c[U>>2]=J;c[M>>2]=R;$=c[$>>2]|0;$=pa[c[(c[$>>2]|0)+48>>2]&31]($,c[U>>2]|0,c[M>>2]|0)|0;if(($|0)!=(c[O>>2]|0)){c[b>>2]=0;c[Y>>2]=c[b>>2];c[X>>2]=1}else c[X>>2]=0;OC(V);if((c[X>>2]|0)>>>0>=1){$=c[Y>>2]|0;ja=aa;return $|0}}c[N>>2]=(c[P>>2]|0)-(c[Q>>2]|0);if((c[N>>2]|0)>0?(X=c[Q>>2]|0,$=c[N>>2]|0,c[_>>2]=c[b>>2],c[T>>2]=X,c[L>>2]=$,$=c[_>>2]|0,$=pa[c[(c[$>>2]|0)+48>>2]&31]($,c[T>>2]|0,c[L>>2]|0)|0,($|0)!=(c[N>>2]|0)):0){c[b>>2]=0;c[Y>>2]=c[b>>2];$=c[Y>>2]|0;ja=aa;return $|0}c[Z>>2]=c[K>>2];c[W>>2]=0;$=c[Z>>2]|0;c[S>>2]=c[$+12>>2];c[$+12>>2]=c[W>>2];c[Y>>2]=c[b>>2];$=c[Y>>2]|0;ja=aa;return $|0}function Za(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=ja;ja=ja+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;a=c[f>>2]|0;b=c[e>>2]|0;c[a>>2]=c[b>>2];c[a+(c[(c[a>>2]|0)+-12>>2]|0)>>2]=c[b+32>>2];c[a+8>>2]=c[b+36>>2];db(a+12|0);gt(a,b+4|0);ja=d;return}function _a(a){a=a|0;var b=0,d=0;b=ja;ja=ja+16|0;d=b;c[d>>2]=a;Na((c[d>>2]|0)+-8|0);ja=b;return}function $a(a){a=a|0;var b=0,d=0;b=ja;ja=ja+16|0;d=b;c[d>>2]=a;a=c[d>>2]|0;Na(a+(c[(c[a>>2]|0)+-12>>2]|0)|0);ja=b;return}function ab(a){a=a|0;var b=0,d=0;b=ja;ja=ja+16|0;d=b;c[d>>2]=a;a=c[d>>2]|0;Na(a);Gf(a);ja=b;return}function bb(a){a=a|0;var b=0,d=0;b=ja;ja=ja+16|0;d=b;c[d>>2]=a;ab((c[d>>2]|0)+-8|0);ja=b;return}function cb(a){a=a|0;var b=0,d=0;b=ja;ja=ja+16|0;d=b;c[d>>2]=a;a=c[d>>2]|0;ab(a+(c[(c[a>>2]|0)+-12>>2]|0)|0);ja=b;return}function db(a){a=a|0;var b=0,d=0;b=ja;ja=ja+16|0;d=b;c[d>>2]=a;a=c[d>>2]|0;c[a>>2]=21220;OC(a+32|0);bs(a);ja=b;return}function eb(a){a=a|0;var b=0,d=0;b=ja;ja=ja+16|0;d=b;c[d>>2]=a;a=c[d>>2]|0;db(a);Gf(a);ja=b;return}function fb(a,b,e,f,g,h){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ka=0,la=0;ia=ja;ja=ja+256|0;m=ia+252|0;l=ia+248|0;j=ia+64|0;k=ia+244|0;i=ia+56|0;B=ia+240|0;u=ia+236|0;w=ia+232|0;z=ia+228|0;q=ia+224|0;p=ia+220|0;v=ia+216|0;y=ia+212|0;A=ia+208|0;t=ia+204|0;s=ia+200|0;r=ia+196|0;n=ia+192|0;o=ia+188|0;Y=ia+184|0;X=ia+180|0;W=ia+176|0;V=ia+172|0;U=ia+168|0;M=ia+48|0;T=ia+164|0;L=ia+40|0;S=ia+160|0;ha=ia+156|0;K=ia+32|0;ga=ia+152|0;fa=ia+148|0;N=ia+24|0;ea=ia+144|0;da=ia+140|0;ca=ia+136|0;C=ia+132|0;E=ia+128|0;D=ia+124|0;ba=ia+120|0;aa=ia+116|0;$=ia+112|0;O=ia+108|0;P=ia+104|0;_=ia+100|0;G=ia+96|0;Z=ia+92|0;J=ia+16|0;ka=ia+88|0;la=ia+84|0;I=ia+8|0;Q=ia+80|0;R=ia+76|0;F=ia+72|0;H=ia;c[la>>2]=b;b=I;c[b>>2]=e;c[b+4>>2]=f;c[Q>>2]=g;c[R>>2]=h;g=c[la>>2]|0;b=c[g+44>>2]|0;c[ka>>2]=g;if(b>>>0<(c[(c[ka>>2]|0)+24>>2]|0)>>>0){c[m>>2]=g;c[g+44>>2]=c[(c[m>>2]|0)+24>>2]}if(!(c[R>>2]&24)){c[l>>2]=a;la=j;c[la>>2]=-1;c[la+4>>2]=-1;la=c[l>>2]|0;c[la>>2]=0;c[la+4>>2]=0;ha=j;ka=c[ha+4>>2]|0;la=la+8|0;c[la>>2]=c[ha>>2];c[la+4>>2]=ka;ja=ia;return}if((c[Q>>2]|0)==1?(c[R>>2]&24|0)==24:0){c[k>>2]=a;la=i;c[la>>2]=-1;c[la+4>>2]=-1;la=c[k>>2]|0;c[la>>2]=0;c[la+4>>2]=0;ha=i;ka=c[ha+4>>2]|0;la=la+8|0;c[la>>2]=c[ha>>2];c[la+4>>2]=ka;ja=ia;return}if(!(c[g+44>>2]|0))e=0;else{f=c[g+44>>2]|0;c[o>>2]=g+32;c[n>>2]=c[o>>2];e=c[n>>2]|0;c[r>>2]=e;c[s>>2]=c[r>>2];c[t>>2]=c[s>>2];if((d[(c[t>>2]|0)+11>>0]|0)&128|0){c[z>>2]=e;c[w>>2]=c[z>>2];c[u>>2]=c[w>>2];e=c[c[u>>2]>>2]|0}else{c[A>>2]=e;c[y>>2]=c[A>>2];c[v>>2]=c[y>>2];c[p>>2]=c[v>>2];c[q>>2]=c[p>>2];e=c[q>>2]|0}c[B>>2]=e;e=f-(c[B>>2]|0)|0}c[F>>2]=e;a:do switch(c[Q>>2]|0){case 0:{la=H;c[la>>2]=0;c[la+4>>2]=0;break}case 1:if(c[R>>2]&8|0){c[Y>>2]=g;ka=c[(c[Y>>2]|0)+12>>2]|0;c[X>>2]=g;ka=ka-(c[(c[X>>2]|0)+8>>2]|0)|0;la=H;c[la>>2]=ka;c[la+4>>2]=((ka|0)<0)<<31>>31;break a}else{c[W>>2]=g;ka=c[(c[W>>2]|0)+24>>2]|0;c[V>>2]=g;ka=ka-(c[(c[V>>2]|0)+20>>2]|0)|0;la=H;c[la>>2]=ka;c[la+4>>2]=((ka|0)<0)<<31>>31;break a}case 2:{ka=c[F>>2]|0;la=H;c[la>>2]=ka;c[la+4>>2]=((ka|0)<0)<<31>>31;break}default:{c[U>>2]=a;la=M;c[la>>2]=-1;c[la+4>>2]=-1;la=c[U>>2]|0;c[la>>2]=0;c[la+4>>2]=0;ha=M;ka=c[ha+4>>2]|0;la=la+8|0;c[la>>2]=c[ha>>2];c[la+4>>2]=ka;ja=ia;return}}while(0);Y=I;ka=H;Y=qD(c[ka>>2]|0,c[ka+4>>2]|0,c[Y>>2]|0,c[Y+4>>2]|0)|0;ka=x()|0;la=H;c[la>>2]=Y;c[la+4>>2]=ka;if((c[H+4>>2]|0)>=0?(ka=c[F>>2]|0,X=((ka|0)<0)<<31>>31,la=H,Y=c[la+4>>2]|0,!((X|0)<(Y|0)|((X|0)==(Y|0)?ka>>>0<(c[la>>2]|0)>>>0:0))):0){la=H;if((c[la>>2]|0)!=0|(c[la+4>>2]|0)!=0){if(c[R>>2]&8|0?(c[S>>2]=g,(c[(c[S>>2]|0)+12>>2]|0)==0):0){c[ha>>2]=a;la=K;c[la>>2]=-1;c[la+4>>2]=-1;la=c[ha>>2]|0;c[la>>2]=0;c[la+4>>2]=0;ha=K;ka=c[ha+4>>2]|0;la=la+8|0;c[la>>2]=c[ha>>2];c[la+4>>2]=ka;ja=ia;return}if(c[R>>2]&16|0?(c[ga>>2]=g,(c[(c[ga>>2]|0)+24>>2]|0)==0):0){c[fa>>2]=a;la=N;c[la>>2]=-1;c[la+4>>2]=-1;la=c[fa>>2]|0;c[la>>2]=0;c[la+4>>2]=0;ha=N;ka=c[ha+4>>2]|0;la=la+8|0;c[la>>2]=c[ha>>2];c[la+4>>2]=ka;ja=ia;return}}if(c[R>>2]&8|0){c[ea>>2]=g;ha=c[(c[ea>>2]|0)+8>>2]|0;c[da>>2]=g;ka=(c[(c[da>>2]|0)+8>>2]|0)+(c[H>>2]|0)|0;la=c[g+44>>2]|0;c[ca>>2]=g;c[C>>2]=ha;c[E>>2]=ka;c[D>>2]=la;la=c[ca>>2]|0;c[la+8>>2]=c[C>>2];c[la+12>>2]=c[E>>2];c[la+16>>2]=c[D>>2]}if(c[R>>2]&16|0){c[ba>>2]=g;ka=c[(c[ba>>2]|0)+20>>2]|0;c[aa>>2]=g;la=c[(c[aa>>2]|0)+28>>2]|0;c[$>>2]=g;c[O>>2]=ka;c[P>>2]=la;la=c[$>>2]|0;ka=c[O>>2]|0;c[la+24>>2]=ka;c[la+20>>2]=ka;c[la+28>>2]=c[P>>2];la=c[H>>2]|0;c[_>>2]=g;c[G>>2]=la;la=(c[_>>2]|0)+24|0;c[la>>2]=(c[la>>2]|0)+(c[G>>2]|0)}ha=H;ka=c[ha>>2]|0;ha=c[ha+4>>2]|0;c[Z>>2]=a;la=J;c[la>>2]=ka;c[la+4>>2]=ha;la=c[Z>>2]|0;c[la>>2]=0;c[la+4>>2]=0;ha=J;ka=c[ha+4>>2]|0;la=la+8|0;c[la>>2]=c[ha>>2];c[la+4>>2]=ka;ja=ia;return}c[T>>2]=a;la=L;c[la>>2]=-1;c[la+4>>2]=-1;la=c[T>>2]|0;c[la>>2]=0;c[la+4>>2]=0;ha=L;ka=c[ha+4>>2]|0;la=la+8|0;c[la>>2]=c[ha>>2];c[la+4>>2]=ka;ja=ia;return}function gb(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=ja;ja=ja+16|0;i=f+8|0;h=f+4|0;g=f;c[h>>2]=b;c[g>>2]=e;e=c[h>>2]|0;h=c[(c[e>>2]|0)+16>>2]|0;c[i>>2]=d;b=(c[i>>2]|0)+8|0;Da[h&15](a,e,c[b>>2]|0,c[b+4>>2]|0,0,c[g>>2]|0);ja=f;return}function hb(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;p=ja;ja=ja+64|0;o=p+52|0;n=p+48|0;m=p+44|0;d=p+40|0;f=p+36|0;e=p+32|0;l=p+28|0;k=p+24|0;j=p+20|0;i=p+16|0;h=p+12|0;q=p+8|0;g=p+4|0;r=p;c[r>>2]=b;b=c[r>>2]|0;r=c[b+44>>2]|0;c[q>>2]=b;if(r>>>0<(c[(c[q>>2]|0)+24>>2]|0)>>>0){c[h>>2]=b;c[b+44>>2]=c[(c[h>>2]|0)+24>>2]}if(c[b+48>>2]&8|0){c[i>>2]=b;if((c[(c[i>>2]|0)+16>>2]|0)>>>0<(c[b+44>>2]|0)>>>0){c[o>>2]=b;o=c[(c[o>>2]|0)+8>>2]|0;c[n>>2]=b;q=c[(c[n>>2]|0)+12>>2]|0;r=c[b+44>>2]|0;c[m>>2]=b;c[d>>2]=o;c[f>>2]=q;c[e>>2]=r;r=c[m>>2]|0;c[r+8>>2]=c[d>>2];c[r+12>>2]=c[f>>2];c[r+16>>2]=c[e>>2]}c[l>>2]=b;r=c[(c[l>>2]|0)+12>>2]|0;c[k>>2]=b;if(r>>>0<(c[(c[k>>2]|0)+16>>2]|0)>>>0){c[j>>2]=b;c[g>>2]=Va(a[c[(c[j>>2]|0)+12>>2]>>0]|0)|0;r=c[g>>2]|0;ja=p;return r|0}}c[g>>2]=Ra()|0;r=c[g>>2]|0;ja=p;return r|0}function ib(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;x=ja;ja=ja+96|0;w=x+80|0;g=x+76|0;k=x+72|0;i=x+68|0;v=x+64|0;u=x+60|0;t=x+56|0;s=x+52|0;r=x+48|0;q=x+44|0;p=x+40|0;f=x+36|0;j=x+32|0;h=x+28|0;o=x+24|0;n=x+20|0;m=x+16|0;y=x+12|0;l=x+8|0;z=x+4|0;e=x;c[z>>2]=b;c[e>>2]=d;d=c[z>>2]|0;b=c[d+44>>2]|0;c[y>>2]=d;if(b>>>0<(c[(c[y>>2]|0)+24>>2]|0)>>>0){c[m>>2]=d;c[d+44>>2]=c[(c[m>>2]|0)+24>>2]}c[o>>2]=d;z=c[(c[o>>2]|0)+8>>2]|0;c[s>>2]=d;do if(z>>>0<(c[(c[s>>2]|0)+12>>2]|0)>>>0){z=c[e>>2]|0;if(Qa(z,Ra()|0)|0){c[u>>2]=d;u=c[(c[u>>2]|0)+8>>2]|0;c[v>>2]=d;y=(c[(c[v>>2]|0)+12>>2]|0)+-1|0;z=c[d+44>>2]|0;c[w>>2]=d;c[g>>2]=u;c[k>>2]=y;c[i>>2]=z;z=c[w>>2]|0;c[z+8>>2]=c[g>>2];c[z+12>>2]=c[k>>2];c[z+16>>2]=c[i>>2];c[l>>2]=kb(c[e>>2]|0)|0;z=c[l>>2]|0;ja=x;return z|0}if((c[d+48>>2]&16|0)==0?(z=Sa(c[e>>2]|0)|0,c[t>>2]=d,!(Ta(z,a[(c[(c[t>>2]|0)+12>>2]|0)+-1>>0]|0)|0)):0)break;c[r>>2]=d;w=c[(c[r>>2]|0)+8>>2]|0;c[q>>2]=d;y=(c[(c[q>>2]|0)+12>>2]|0)+-1|0;z=c[d+44>>2]|0;c[p>>2]=d;c[f>>2]=w;c[j>>2]=y;c[h>>2]=z;z=c[p>>2]|0;c[z+8>>2]=c[f>>2];c[z+12>>2]=c[j>>2];c[z+16>>2]=c[h>>2];z=Sa(c[e>>2]|0)|0;c[n>>2]=d;a[c[(c[n>>2]|0)+12>>2]>>0]=z;c[l>>2]=c[e>>2];z=c[l>>2]|0;ja=x;return z|0}while(0);c[l>>2]=Ra()|0;z=c[l>>2]|0;ja=x;return z|0}function jb(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ka=0,la=0,ma=0,na=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0;Na=ja;ja=ja+352|0;p=Na+332|0;r=Na+328|0;s=Na+324|0;n=Na+320|0;o=Na+316|0;q=Na+312|0;h=Na+308|0;g=Na+304|0;w=Na+300|0;t=Na+296|0;I=Na+292|0;C=Na+288|0;E=Na+284|0;G=Na+280|0;y=Na+276|0;x=Na+272|0;D=Na+268|0;F=Na+264|0;H=Na+260|0;z=Na+256|0;A=Na+252|0;B=Na+248|0;u=Na+244|0;v=Na+240|0;M=Na+236|0;P=Na+232|0;S=Na+228|0;N=Na+224|0;Q=Na+220|0;T=Na+216|0;L=Na+212|0;O=Na+208|0;R=Na+204|0;K=Na+200|0;na=Na+196|0;$=Na+192|0;aa=Na+188|0;ma=Na+184|0;Z=Na+180|0;la=Na+176|0;m=Na+172|0;ka=Na+168|0;ha=Na+164|0;ba=Na+160|0;ca=Na+156|0;V=Na+152|0;X=Na+148|0;ea=Na;U=Na+144|0;W=Na+140|0;da=Na+337|0;Ga=Na+136|0;va=Na+132|0;xa=Na+128|0;za=Na+124|0;ra=Na+120|0;qa=Na+116|0;wa=Na+112|0;ya=Na+108|0;Aa=Na+104|0;ua=Na+100|0;ta=Na+96|0;sa=Na+92|0;ga=Na+88|0;ia=Na+84|0;Ja=Na+80|0;Ca=Na+76|0;Ea=Na+72|0;Da=Na+68|0;l=Na+64|0;k=Na+60|0;j=Na+56|0;Ma=Na+52|0;Ia=Na+48|0;Ka=Na+336|0;i=Na+44|0;f=Na+40|0;La=Na+36|0;pa=Na+32|0;Ba=Na+28|0;Fa=Na+24|0;_=Na+20|0;Y=Na+16|0;J=Na+12|0;fa=Na+8|0;Ha=Na+4|0;c[pa>>2]=b;c[Ba>>2]=e;pa=c[pa>>2]|0;b=c[Ba>>2]|0;if(Qa(b,Ra()|0)|0){c[La>>2]=kb(c[Ba>>2]|0)|0;Ma=c[La>>2]|0;ja=Na;return Ma|0}c[f>>2]=pa;f=c[(c[f>>2]|0)+12>>2]|0;c[i>>2]=pa;c[Fa>>2]=f-(c[(c[i>>2]|0)+8>>2]|0);c[j>>2]=pa;j=c[(c[j>>2]|0)+24>>2]|0;c[k>>2]=pa;if((j|0)==(c[(c[k>>2]|0)+28>>2]|0)){if(!(c[pa+48>>2]&16)){c[La>>2]=Ra()|0;Ma=c[La>>2]|0;ja=Na;return Ma|0}c[l>>2]=pa;e=c[(c[l>>2]|0)+24>>2]|0;c[m>>2]=pa;c[_>>2]=e-(c[(c[m>>2]|0)+20>>2]|0);e=c[pa+44>>2]|0;c[g>>2]=pa;c[Y>>2]=e-(c[(c[g>>2]|0)+20>>2]|0);XC(pa+32|0,0);c[h>>2]=pa+32;e=c[h>>2]|0;c[q>>2]=e;c[o>>2]=c[q>>2];c[n>>2]=c[o>>2];if((d[(c[n>>2]|0)+11>>0]|0)&128|0){c[s>>2]=e;c[r>>2]=c[s>>2];c[p>>2]=c[r>>2];e=c[(c[p>>2]|0)+8>>2]&2147483647}else e=11;c[w>>2]=pa+32;c[t>>2]=e-1;TC(c[w>>2]|0,c[t>>2]|0,0);c[v>>2]=pa+32;c[u>>2]=c[v>>2];e=c[u>>2]|0;c[B>>2]=e;c[A>>2]=c[B>>2];c[z>>2]=c[A>>2];if((d[(c[z>>2]|0)+11>>0]|0)&128|0){c[G>>2]=e;c[E>>2]=c[G>>2];c[C>>2]=c[E>>2];e=c[c[C>>2]>>2]|0}else{c[H>>2]=e;c[F>>2]=c[H>>2];c[D>>2]=c[F>>2];c[x>>2]=c[D>>2];c[y>>2]=c[x>>2];e=c[y>>2]|0}c[I>>2]=e;c[J>>2]=c[I>>2];f=c[J>>2]|0;b=c[J>>2]|0;c[K>>2]=pa+32;e=c[K>>2]|0;c[R>>2]=e;c[O>>2]=c[R>>2];c[L>>2]=c[O>>2];if((d[(c[L>>2]|0)+11>>0]|0)&128|0){c[S>>2]=e;c[P>>2]=c[S>>2];c[M>>2]=c[P>>2];e=c[(c[M>>2]|0)+4>>2]|0}else{c[T>>2]=e;c[Q>>2]=c[T>>2];c[N>>2]=c[Q>>2];e=d[(c[N>>2]|0)+11>>0]|0}c[na>>2]=pa;c[$>>2]=f;c[aa>>2]=b+e;na=c[na>>2]|0;$=c[$>>2]|0;c[na+24>>2]=$;c[na+20>>2]=$;c[na+28>>2]=c[aa>>2];na=c[_>>2]|0;c[ma>>2]=pa;c[Z>>2]=na;na=(c[ma>>2]|0)+24|0;c[na>>2]=(c[na>>2]|0)+(c[Z>>2]|0);c[la>>2]=pa;c[pa+44>>2]=(c[(c[la>>2]|0)+20>>2]|0)+(c[Y>>2]|0)}c[ka>>2]=pa;c[fa>>2]=(c[(c[ka>>2]|0)+24>>2]|0)+1;c[U>>2]=fa;c[W>>2]=pa+44;na=c[U>>2]|0;ma=c[W>>2]|0;a[ea>>0]=a[da>>0]|0;c[V>>2]=na;c[X>>2]=ma;ma=c[V>>2]|0;na=c[X>>2]|0;c[ha>>2]=ea;c[ba>>2]=ma;c[ca>>2]=na;c[pa+44>>2]=c[((c[c[ba>>2]>>2]|0)>>>0<(c[c[ca>>2]>>2]|0)>>>0?c[X>>2]|0:c[V>>2]|0)>>2];if(c[pa+48>>2]&8|0){c[ia>>2]=pa+32;c[ga>>2]=c[ia>>2];e=c[ga>>2]|0;c[sa>>2]=e;c[ta>>2]=c[sa>>2];c[ua>>2]=c[ta>>2];if((d[(c[ua>>2]|0)+11>>0]|0)&128|0){c[za>>2]=e;c[xa>>2]=c[za>>2];c[va>>2]=c[xa>>2];e=c[c[va>>2]>>2]|0}else{c[Aa>>2]=e;c[ya>>2]=c[Aa>>2];c[wa>>2]=c[ya>>2];c[qa>>2]=c[wa>>2];c[ra>>2]=c[qa>>2];e=c[ra>>2]|0}c[Ga>>2]=e;c[Ha>>2]=c[Ga>>2];Aa=c[Ha>>2]|0;Ga=(c[Ha>>2]|0)+(c[Fa>>2]|0)|0;Ha=c[pa+44>>2]|0;c[Ja>>2]=pa;c[Ca>>2]=Aa;c[Ea>>2]=Ga;c[Da>>2]=Ha;Ja=c[Ja>>2]|0;c[Ja+8>>2]=c[Ca>>2];c[Ja+12>>2]=c[Ea>>2];c[Ja+16>>2]=c[Da>>2]}e=c[Ba>>2]&255;c[Ia>>2]=pa;a[Ka>>0]=e;e=c[Ia>>2]|0;if((c[e+24>>2]|0)==(c[e+28>>2]|0)){Ja=c[(c[e>>2]|0)+52>>2]|0;Ka=Va(a[Ka>>0]|0)|0;c[Ma>>2]=oa[Ja&63](e,Ka)|0}else{Ia=a[Ka>>0]|0;Ha=e+24|0;Ja=c[Ha>>2]|0;c[Ha>>2]=Ja+1;a[Ja>>0]=Ia;c[Ma>>2]=Va(a[Ka>>0]|0)|0}c[La>>2]=c[Ma>>2];Ma=c[La>>2]|0;ja=Na;return Ma|0}function kb(a){a=a|0;var b=0,d=0;d=ja;ja=ja+16|0;b=d;c[b>>2]=a;a=c[b>>2]|0;if(Qa(a,Ra()|0)|0){b=~(Ra()|0);ja=d;return b|0}else{b=c[b>>2]|0;ja=d;return b|0}return 0}function lb(a){a=a|0;var b=0,d=0;b=ja;ja=ja+16|0;d=b;c[d>>2]=a;a=he(c[d>>2]|0)|0;ja=b;return a|0}function mb(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0;ta=ja;ja=ja+272|0;U=ta+256|0;Z=ta+252|0;da=ta+248|0;sa=ta+244|0;ra=ta+240|0;s=ta+236|0;q=ta+232|0;ia=ta+228|0;C=ta+64|0;Y=ta+224|0;ca=ta+220|0;w=ta+271|0;H=ta+56|0;K=ta+48|0;qa=ta+216|0;j=ta+212|0;m=ta+208|0;g=ta+204|0;y=ta+270|0;E=ta+269|0;pa=ta+200|0;oa=ta+196|0;T=ta+192|0;X=ta+188|0;ba=ta+184|0;ma=ta+180|0;la=ta+176|0;r=ta+172|0;p=ta+168|0;ha=ta+164|0;B=ta+40|0;W=ta+160|0;$=ta+156|0;v=ta+268|0;G=ta+32|0;J=ta+24|0;ka=ta+152|0;i=ta+148|0;l=ta+144|0;f=ta+140|0;x=ta+267|0;D=ta+266|0;S=ta+136|0;V=ta+132|0;_=ta+128|0;fa=ta+124|0;R=ta+120|0;aa=ta+116|0;na=ta+112|0;h=ta+108|0;k=ta+104|0;n=ta+100|0;o=ta+96|0;ga=ta+92|0;A=ta+16|0;Q=ta+88|0;P=ta+84|0;u=ta+265|0;F=ta+8|0;I=ta;ea=ta+80|0;e=ta+76|0;t=ta+264|0;z=ta+263|0;O=ta+72|0;ua=ta+68|0;L=ta+262|0;M=ta+261|0;N=ta+260|0;c[ua>>2]=d;d=c[ua>>2]|0;if(c[d+48>>2]&16|0){ua=c[d+44>>2]|0;c[O>>2]=d;if(ua>>>0<(c[(c[O>>2]|0)+24>>2]|0)>>>0){c[la>>2]=d;c[d+44>>2]=c[(c[la>>2]|0)+24>>2]}c[ra>>2]=d;ra=c[(c[ra>>2]|0)+20>>2]|0;ua=c[d+44>>2]|0;c[sa>>2]=d+32;c[da>>2]=c[sa>>2];c[Z>>2]=c[da>>2];c[U>>2]=c[Z>>2];c[qa>>2]=b;c[j>>2]=ra;c[m>>2]=ua;c[g>>2]=L;ua=c[qa>>2]|0;a[H>>0]=a[E>>0]|0;a[K>>0]=a[y>>0]|0;c[ca>>2]=ua;sa=c[ca>>2]|0;c[Y>>2]=sa;ra=c[Y>>2]|0;c[ra>>2]=0;c[ra+4>>2]=0;c[ra+8>>2]=0;c[s>>2]=H;a[C>>0]=a[w>>0]|0;c[ia>>2]=sa;c[q>>2]=C;nb(ua,c[j>>2]|0,c[m>>2]|0);ja=ta;return}if(c[d+48>>2]&8|0){c[pa>>2]=d;sa=c[(c[pa>>2]|0)+8>>2]|0;c[oa>>2]=d;ua=c[(c[oa>>2]|0)+16>>2]|0;c[ma>>2]=d+32;c[ba>>2]=c[ma>>2];c[X>>2]=c[ba>>2];c[T>>2]=c[X>>2];c[ka>>2]=b;c[i>>2]=sa;c[l>>2]=ua;c[f>>2]=M;ua=c[ka>>2]|0;a[G>>0]=a[D>>0]|0;a[J>>0]=a[x>>0]|0;c[$>>2]=ua;sa=c[$>>2]|0;c[W>>2]=sa;ra=c[W>>2]|0;c[ra>>2]=0;c[ra+4>>2]=0;c[ra+8>>2]=0;c[r>>2]=G;a[B>>0]=a[v>>0]|0;c[ha>>2]=sa;c[p>>2]=B;nb(ua,c[i>>2]|0,c[l>>2]|0);ja=ta;return}c[fa>>2]=d+32;c[_>>2]=c[fa>>2];c[V>>2]=c[_>>2];c[S>>2]=c[V>>2];c[ea>>2]=b;c[e>>2]=N;ua=c[ea>>2]|0;a[F>>0]=a[z>>0]|0;a[I>>0]=a[t>>0]|0;c[P>>2]=ua;sa=c[P>>2]|0;c[Q>>2]=sa;ra=c[Q>>2]|0;c[ra>>2]=0;c[ra+4>>2]=0;c[ra+8>>2]=0;c[n>>2]=F;a[A>>0]=a[u>>0]|0;c[ga>>2]=sa;c[o>>2]=A;c[na>>2]=ua;c[aa>>2]=c[na>>2];c[R>>2]=c[aa>>2];c[h>>2]=c[R>>2];c[k>>2]=0;while(1){if((c[k>>2]|0)>>>0>=3)break;c[(c[h>>2]|0)+(c[k>>2]<<2)>>2]=0;c[k>>2]=(c[k>>2]|0)+1}ja=ta;return}function nb(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0;V=ja;ja=ja+240|0;p=V+224|0;w=V+220|0;s=V+216|0;j=V+212|0;D=V+208|0;K=V+204|0;Q=V+200|0;v=V+196|0;n=V+192|0;C=V+188|0;J=V+184|0;P=V+180|0;t=V+176|0;h=V+172|0;B=V+168|0;I=V+164|0;l=V+160|0;f=V+156|0;g=V+152|0;k=V+148|0;A=V+144|0;H=V+140|0;O=V+136|0;m=V+132|0;z=V+128|0;G=V+124|0;N=V+120|0;r=V+116|0;y=V+112|0;F=V+108|0;M=V+104|0;q=V+100|0;x=V+96|0;E=V+92|0;L=V+88|0;o=V+84|0;X=V+76|0;Y=V+72|0;Z=V+68|0;_=V+64|0;$=V+60|0;aa=V+56|0;W=V+52|0;ba=V+48|0;ca=V+44|0;ea=V+40|0;da=V+36|0;fa=V+32|0;R=V+28|0;S=V+24|0;u=V+20|0;T=V+16|0;i=V+12|0;U=V+228|0;c[fa>>2]=b;c[R>>2]=d;c[S>>2]=e;e=c[fa>>2]|0;d=c[S>>2]|0;c[ea>>2]=c[R>>2];c[da>>2]=d;d=c[ea>>2]|0;b=c[da>>2]|0;a[V>>0]=a[V+229>>0]|0;c[ba>>2]=d;c[ca>>2]=b;c[u>>2]=(c[ca>>2]|0)-(c[ba>>2]|0);b=c[u>>2]|0;c[aa>>2]=e;c[$>>2]=c[aa>>2];c[_>>2]=c[$>>2];c[Z>>2]=c[_>>2];c[Y>>2]=c[Z>>2];d=c[Y>>2]|0;a[V+8>>0]=a[V+230>>0]|0;c[X>>2]=d;c[V+80>>2]=c[X>>2];c[W>>2]=-1;if(b>>>0>((c[W>>2]|0)-16|0)>>>0)JC(e);d=c[u>>2]|0;if((c[u>>2]|0)>>>0<11){c[L>>2]=e;c[o>>2]=d;fa=c[o>>2]&255;c[E>>2]=c[L>>2];c[x>>2]=c[E>>2];a[(c[x>>2]|0)+11>>0]=fa;c[P>>2]=e;c[J>>2]=c[P>>2];c[C>>2]=c[J>>2];c[n>>2]=c[C>>2];c[v>>2]=c[n>>2];c[T>>2]=c[v>>2]}else{c[s>>2]=d;if((c[s>>2]|0)>>>0<11)c[w>>2]=10;else{c[p>>2]=(c[s>>2]|0)+1;c[j>>2]=((c[p>>2]|0)+15&-16)-1;if((c[j>>2]|0)==11)c[j>>2]=(c[j>>2]|0)+1;c[w>>2]=c[j>>2]}c[i>>2]=c[w>>2];c[Q>>2]=e;c[K>>2]=c[Q>>2];c[D>>2]=c[K>>2];fa=(c[i>>2]|0)+1|0;c[g>>2]=c[D>>2];c[k>>2]=fa;fa=c[k>>2]|0;c[I>>2]=c[g>>2];c[l>>2]=fa;c[f>>2]=0;c[B>>2]=c[I>>2];c[t>>2]=c[l>>2];c[h>>2]=1;c[T>>2]=Mr(c[t>>2]|0)|0;fa=c[T>>2]|0;c[O>>2]=e;c[m>>2]=fa;fa=c[m>>2]|0;c[H>>2]=c[O>>2];c[A>>2]=c[H>>2];c[c[A>>2]>>2]=fa;fa=(c[i>>2]|0)+1|0;c[N>>2]=e;c[r>>2]=fa;fa=c[r>>2]|-2147483648;c[G>>2]=c[N>>2];c[z>>2]=c[G>>2];c[(c[z>>2]|0)+8>>2]=fa;fa=c[u>>2]|0;c[M>>2]=e;c[q>>2]=fa;fa=c[q>>2]|0;c[F>>2]=c[M>>2];c[y>>2]=c[F>>2];c[(c[y>>2]|0)+4>>2]=fa}while(1){d=c[T>>2]|0;if((c[R>>2]|0)==(c[S>>2]|0))break;Ua(d,c[R>>2]|0);c[R>>2]=(c[R>>2]|0)+1;c[T>>2]=(c[T>>2]|0)+1}a[U>>0]=0;Ua(d,U);ja=V;return}function ob(b){b=b|0;var d=0,e=0;d=ja;ja=ja+16|0;e=d;c[e>>2]=b;b=c[e>>2]|0;fc(b);uc(b+832|0);Eb(b+66372|0);a[b+66440>>0]=0;ja=d;return}function pb(a){a=a|0;var b=0,d=0;b=ja;ja=ja+16|0;d=b;c[d>>2]=a;a=c[d>>2]|0;Gb(a+66372|0);vc(a+832|0);hc(a);ja=b;return}function qb(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=ja;ja=ja+16|0;h=e+8|0;g=e+4|0;f=e;c[h>>2]=a;c[g>>2]=b;c[f>>2]=d;Nb((c[h>>2]|0)+66372|0,c[g>>2]|0,c[f>>2]|0);ja=e;return}function rb(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;H=ja;ja=ja+160|0;G=H+16|0;F=H+8|0;A=H+148|0;E=H+144|0;B=H+140|0;C=H+136|0;D=H+132|0;x=H+128|0;w=H+120|0;s=H+116|0;t=H+112|0;u=H+108|0;h=H+104|0;v=H+96|0;r=H+92|0;q=H+88|0;p=H+84|0;g=H+80|0;z=H+152|0;I=H+76|0;j=H+72|0;i=H+68|0;k=H+64|0;o=H+60|0;n=H+56|0;l=H+44|0;m=H+32|0;y=H+20|0;c[I>>2]=b;c[j>>2]=d;c[i>>2]=e;c[k>>2]=f;d=c[I>>2]|0;if(false){}Lb(d+66372|0);I=c[j>>2]|0;c[p>>2]=l;c[g>>2]=28294;p=c[p>>2]|0;c[q>>2]=p;q=c[q>>2]|0;c[r>>2]=q;r=c[r>>2]|0;c[r>>2]=0;c[r+4>>2]=0;c[r+8>>2]=0;c[v>>2]=q;c[H+100>>2]=c[v>>2];v=c[g>>2]|0;LC(p,v,lb(c[g>>2]|0)|0);c[(sb(d+66372+56|0,l)|0)>>2]=I;OC(l);I=c[i>>2]|0;c[u>>2]=m;c[h>>2]=28303;v=c[u>>2]|0;c[t>>2]=v;u=c[t>>2]|0;c[s>>2]=u;t=c[s>>2]|0;c[t>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;c[w>>2]=u;c[H+124>>2]=c[w>>2];w=c[h>>2]|0;LC(v,w,lb(c[h>>2]|0)|0);c[(sb(d+66372+56|0,m)|0)>>2]=I;OC(m);jc(d,d+832|0,0);rc(d+832|0);wc(d+832|0,8256,0,256)|0;if(c[k>>2]&1|0){sc(d+832|0,144,45,0)|0;sc(d+832|0,145,84,0)|0}wc(d+832|0,16,256,8240)|0;Yb(d);Zb(d,61440,118,0)|0;Zb(d,61441,201,0)|0;c[o>>2]=62336;I=(c[o>>2]|0)+-1|0;c[o>>2]=I;Zb(d,I,0,0)|0;I=(c[o>>2]|0)+-1|0;c[o>>2]=I;Zb(d,I,254,0)|0;I=(c[o>>2]|0)+-1|0;c[o>>2]=I;Zb(d,I,24,0)|0;I=(c[o>>2]|0)+-1|0;c[o>>2]=I;Zb(d,I,118,0)|0;c[n>>2]=c[o>>2];I=(c[o>>2]|0)+-1|0;c[o>>2]=I;Zb(d,I,(c[n>>2]|0)>>>8,0)|0;I=(c[o>>2]|0)+-1|0;c[o>>2]=I;Zb(d,I,c[n>>2]&255,0)|0;mc(d,c[o>>2]|0);nc(d,256);pc(d,20,0);while(1){ic(d,128);if(!(qc(d,20)|0))continue;if(!(oc(d)|0)){e=17;break}if((oc(d)|0)==56){nc(d,(oc(d)|0)+1|0);pc(d,20,0)}else{if((oc(d)|0)!=61440){e=15;break}if(!(Pb(d+66372|0,d)|0)){e=14;break}pc(d,5,qc(d,7)|0);pc(d,4,qc(d,0)|0);nc(d,(oc(d)|0)+1|0);pc(d,20,0)}}if((e|0)==14){c[F>>2]=qc(d,1)|0;nd(d+66440|0,28312,F)|0;a[z>>0]=0;I=a[z>>0]|0;I=I&1;ja=H;return I|0}else if((e|0)==15){c[G>>2]=oc(d)|0;nd(d+66440|0,28351,G)|0;a[z>>0]=0;I=a[z>>0]|0;I=I&1;ja=H;return I|0}else if((e|0)==17){c[D>>2]=y;c[x>>2]=28303;G=c[D>>2]|0;c[C>>2]=G;I=c[C>>2]|0;c[B>>2]=I;F=c[B>>2]|0;c[F>>2]=0;c[F+4>>2]=0;c[F+8>>2]=0;c[E>>2]=I;c[A>>2]=c[E>>2];I=c[x>>2]|0;LC(G,I,lb(c[x>>2]|0)|0);ot((c[(sb(d+66372+56|0,y)|0)>>2]|0)+8|0)|0;OC(y);a[z>>0]=1;I=a[z>>0]|0;I=I&1;ja=H;return I|0}return 0}function sb(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0;Db=ja;ja=ja+560|0;Sa=Db+548|0;Ua=Db+544|0;Ra=Db+540|0;Ta=Db+536|0;qb=Db+532|0;Cb=Db+528|0;Xa=Db+524|0;hb=Db+520|0;yb=Db+48|0;_a=Db+516|0;jb=Db+512|0;sb=Db+555|0;Wa=Db+508|0;gb=Db+504|0;xb=Db+40|0;Za=Db+500|0;ib=Db+496|0;rb=Db+554|0;pb=Db+492|0;kb=Db+488|0;nb=Db+484|0;$a=Db+480|0;lb=Db+476|0;ob=Db+472|0;ab=Db+468|0;zb=Db+464|0;db=Db+460|0;bb=Db+456|0;Ya=Db+452|0;eb=Db+448|0;cb=Db+444|0;Ab=Db+440|0;Va=Db+436|0;fb=Db+432|0;Pa=Db+428|0;Qa=Db+424|0;Fa=Db+420|0;Na=Db+416|0;Oa=Db+412|0;Ka=Db+408|0;Ga=Db+404|0;Ma=Db+400|0;Ca=Db+396|0;Ea=Db+392|0;Ja=Db+388|0;ta=Db+384|0;Ba=Db+380|0;Da=Db+376|0;Ia=Db+372|0;T=Db+368|0;V=Db+364|0;S=Db+360|0;U=Db+356|0;va=Db+352|0;La=Db+348|0;Y=Db+344|0;la=Db+340|0;za=Db+32|0;$=Db+336|0;na=Db+332|0;xa=Db+553|0;X=Db+328|0;ka=Db+324|0;ya=Db+24|0;_=Db+320|0;ma=Db+316|0;wa=Db+552|0;ua=Db+312|0;pa=Db+308|0;ra=Db+304|0;aa=Db+300|0;qa=Db+296|0;sa=Db+292|0;ba=Db+288|0;Aa=Db+284|0;ga=Db+280|0;ea=Db+276|0;Z=Db+272|0;ha=Db+268|0;fa=Db+264|0;Ha=Db+260|0;W=Db+256|0;ia=Db+252|0;Q=Db+248|0;R=Db+244|0;E=Db+240|0;O=Db+236|0;P=Db+232|0;N=Db+228|0;Bb=Db+224|0;D=Db+220|0;K=Db+216|0;A=Db+212|0;C=Db+208|0;J=Db+204|0;m=Db+200|0;I=Db+196|0;z=Db+192|0;F=Db+188|0;G=Db+184|0;j=Db+180|0;k=Db+176|0;L=Db+172|0;f=Db+168|0;l=Db+164|0;i=Db+160|0;y=Db+156|0;s=Db+16|0;h=Db+152|0;M=Db+148|0;n=Db+144|0;q=Db+136|0;t=Db+8|0;B=Db+132|0;H=Db+128|0;p=Db+120|0;r=Db;x=Db+112|0;g=Db+108|0;u=Db+104|0;w=Db+100|0;Eb=Db+96|0;e=Db+92|0;oa=Db+88|0;ca=Db+84|0;mb=Db+80|0;da=Db+68|0;o=Db+64|0;v=Db+52|0;c[Eb>>2]=b;c[e>>2]=d;b=c[Eb>>2]|0;c[ca>>2]=tb(b,oa,c[e>>2]|0)|0;c[mb>>2]=c[c[ca>>2]>>2];if(c[c[ca>>2]>>2]|0){Eb=c[mb>>2]|0;Eb=Eb+16|0;c[Bb>>2]=Eb;Eb=c[Bb>>2]|0;Eb=Eb+12|0;ja=Db;return Eb|0}ub(v,b,c[e>>2]|0);c[w>>2]=v;Eb=c[w>>2]|0;c[x>>2]=u;c[g>>2]=Eb;c[c[x>>2]>>2]=c[g>>2];c[o>>2]=c[u>>2];a[r>>0]=a[o>>0]|0;a[r+1>>0]=a[o+1>>0]|0;a[r+2>>0]=a[o+2>>0]|0;a[r+3>>0]=a[o+3>>0]|0;c[H>>2]=da;Eb=c[H>>2]|0;c[B>>2]=r;c[J>>2]=c[c[B>>2]>>2];d=c[J>>2]|0;c[C>>2]=d;c[A>>2]=c[C>>2];c[m>>2]=c[c[A>>2]>>2];c[K>>2]=d;c[D>>2]=c[K>>2];c[c[D>>2]>>2]=0;d=c[m>>2]|0;c[I>>2]=r;c[G>>2]=c[c[I>>2]>>2];c[F>>2]=c[G>>2];c[z>>2]=(c[F>>2]|0)+4;c[j>>2]=c[z>>2];K=c[j>>2]|0;c[p>>2]=c[K>>2];c[p+4>>2]=c[K+4>>2];a[t>>0]=a[p>>0]|0;a[t+1>>0]=a[p+1>>0]|0;a[t+2>>0]=a[p+2>>0]|0;a[t+3>>0]=a[p+3>>0]|0;a[t+4>>0]=a[p+4>>0]|0;a[t+5>>0]=a[p+5>>0]|0;a[t+6>>0]=a[p+6>>0]|0;a[t+7>>0]=a[p+7>>0]|0;c[M>>2]=Eb;c[n>>2]=d;d=c[M>>2]|0;c[h>>2]=n;Eb=c[c[h>>2]>>2]|0;c[L>>2]=d;c[f>>2]=Eb;Eb=c[L>>2]|0;c[k>>2]=f;c[Eb>>2]=c[c[k>>2]>>2];c[l>>2]=t;Eb=c[l>>2]|0;c[q>>2]=c[Eb>>2];c[q+4>>2]=c[Eb+4>>2];a[s>>0]=a[q>>0]|0;a[s+1>>0]=a[q+1>>0]|0;a[s+2>>0]=a[q+2>>0]|0;a[s+3>>0]=a[q+3>>0]|0;a[s+4>>0]=a[q+4>>0]|0;a[s+5>>0]=a[q+5>>0]|0;a[s+6>>0]=a[q+6>>0]|0;a[s+7>>0]=a[q+7>>0]|0;c[y>>2]=d+4;d=c[y>>2]|0;c[i>>2]=s;Eb=c[i>>2]|0;c[d>>2]=c[Eb>>2];c[d+4>>2]=c[Eb+4>>2];c[N>>2]=v;c[E>>2]=c[N>>2];c[O>>2]=0;d=c[E>>2]|0;c[R>>2]=d;c[Q>>2]=c[R>>2];c[P>>2]=c[c[Q>>2]>>2];Eb=c[O>>2]|0;c[U>>2]=d;c[S>>2]=c[U>>2];c[c[S>>2]>>2]=Eb;if(c[P>>2]|0){c[V>>2]=d;c[T>>2]=(c[V>>2]|0)+4;d=c[P>>2]|0;c[W>>2]=c[T>>2];c[ia>>2]=d;d=c[W>>2]|0;if(a[d+5>>0]&1){Eb=c[d>>2]|0;c[Ha>>2]=(c[ia>>2]|0)+16;c[ua>>2]=(c[Ha>>2]|0)+12;Ha=c[ua>>2]|0;c[_>>2]=Eb;c[ma>>2]=Ha;Ha=c[_>>2]|0;Eb=c[ma>>2]|0;a[ya>>0]=a[wa>>0]|0;c[X>>2]=Ha;c[ka>>2]=Eb}if(a[d+4>>0]&1){Eb=c[d>>2]|0;c[La>>2]=(c[ia>>2]|0)+16;c[va>>2]=c[La>>2];La=c[va>>2]|0;c[$>>2]=Eb;c[na>>2]=La;La=c[$>>2]|0;Eb=c[na>>2]|0;a[za>>0]=a[xa>>0]|0;c[Y>>2]=La;c[la>>2]=Eb;OC(c[la>>2]|0)}if(c[ia>>2]|0){Eb=c[ia>>2]|0;c[Z>>2]=c[d>>2];c[ha>>2]=Eb;c[fa>>2]=1;Eb=c[ha>>2]|0;La=c[fa>>2]|0;c[Aa>>2]=c[Z>>2];c[ga>>2]=Eb;c[ea>>2]=La;La=c[ea>>2]<<5;c[qa>>2]=c[ga>>2];c[sa>>2]=La;c[ba>>2]=4;La=c[sa>>2]|0;Eb=c[ba>>2]|0;c[pa>>2]=c[qa>>2];c[ra>>2]=La;c[aa>>2]=Eb;vb(c[pa>>2]|0,c[ra>>2]|0)}}Eb=c[oa>>2]|0;d=c[ca>>2]|0;c[Ia>>2]=da;c[Da>>2]=c[Ia>>2];c[Ba>>2]=c[Da>>2];wb(b,Eb,d,c[c[Ba>>2]>>2]|0);c[Ja>>2]=da;d=c[Ja>>2]|0;c[Ea>>2]=d;c[Ca>>2]=c[Ea>>2];c[ta>>2]=c[c[Ca>>2]>>2];c[Ma>>2]=d;c[Ga>>2]=c[Ma>>2];c[c[Ga>>2]>>2]=0;c[mb>>2]=c[ta>>2];c[Ka>>2]=da;c[Fa>>2]=c[Ka>>2];c[Na>>2]=0;d=c[Fa>>2]|0;c[Qa>>2]=d;c[Pa>>2]=c[Qa>>2];c[Oa>>2]=c[c[Pa>>2]>>2];Eb=c[Na>>2]|0;c[Ta>>2]=d;c[Ra>>2]=c[Ta>>2];c[c[Ra>>2]>>2]=Eb;if(!(c[Oa>>2]|0)){Eb=c[mb>>2]|0;Eb=Eb+16|0;c[Bb>>2]=Eb;Eb=c[Bb>>2]|0;Eb=Eb+12|0;ja=Db;return Eb|0}c[Ua>>2]=d;c[Sa>>2]=(c[Ua>>2]|0)+4;d=c[Oa>>2]|0;c[Va>>2]=c[Sa>>2];c[fb>>2]=d;d=c[Va>>2]|0;if(a[d+5>>0]&1){Eb=c[d>>2]|0;c[Ab>>2]=(c[fb>>2]|0)+16;c[pb>>2]=(c[Ab>>2]|0)+12;Ab=c[pb>>2]|0;c[Za>>2]=Eb;c[ib>>2]=Ab;Ab=c[Za>>2]|0;Eb=c[ib>>2]|0;a[xb>>0]=a[rb>>0]|0;c[Wa>>2]=Ab;c[gb>>2]=Eb}if(a[d+4>>0]&1){Eb=c[d>>2]|0;c[Cb>>2]=(c[fb>>2]|0)+16;c[qb>>2]=c[Cb>>2];Cb=c[qb>>2]|0;c[_a>>2]=Eb;c[jb>>2]=Cb;Cb=c[_a>>2]|0;Eb=c[jb>>2]|0;a[yb>>0]=a[sb>>0]|0;c[Xa>>2]=Cb;c[hb>>2]=Eb;OC(c[hb>>2]|0)}if(!(c[fb>>2]|0)){Eb=c[mb>>2]|0;Eb=Eb+16|0;c[Bb>>2]=Eb;Eb=c[Bb>>2]|0;Eb=Eb+12|0;ja=Db;return Eb|0}Eb=c[fb>>2]|0;c[Ya>>2]=c[d>>2];c[eb>>2]=Eb;c[cb>>2]=1;Eb=c[eb>>2]|0;Cb=c[cb>>2]|0;c[zb>>2]=c[Ya>>2];c[db>>2]=Eb;c[bb>>2]=Cb;Cb=c[bb>>2]<<5;c[lb>>2]=c[db>>2];c[ob>>2]=Cb;c[ab>>2]=4;Cb=c[ob>>2]|0;Eb=c[ab>>2]|0;c[kb>>2]=c[lb>>2];c[nb>>2]=Cb;c[$a>>2]=Eb;vb(c[kb>>2]|0,c[nb>>2]|0);Eb=c[mb>>2]|0;Eb=Eb+16|0;c[Bb>>2]=Eb;Eb=c[Bb>>2]|0;Eb=Eb+12|0;ja=Db;return Eb|0}function tb(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0;Za=ja;ja=ja+432|0;ga=Za+428|0;ta=Za+424|0;Ha=Za+420|0;F=Za+416|0;fa=Za+412|0;sa=Za+408|0;Ga=Za+404|0;la=Za+400|0;za=Za+396|0;Ra=Za+392|0;aa=Za+388|0;oa=Za+384|0;Ba=Za+380|0;Ta=Za+376|0;Ka=Za+372|0;w=Za+368|0;m=Za+364|0;q=Za+360|0;da=Za+356|0;qa=Za+352|0;Ea=Za+348|0;D=Za+344|0;s=Za+340|0;ka=Za+336|0;ya=Za+332|0;Qa=Za+328|0;U=Za+324|0;V=Za+320|0;W=Za+316|0;X=Za+312|0;Y=Za+308|0;Z=Za+304|0;ba=Za+300|0;y=Za+296|0;N=Za+288|0;o=Za+284|0;u=Za+280|0;La=Za+276|0;E=Za+272|0;K=Za+268|0;Ca=Za+264|0;Ua=Za+260|0;H=Za+256|0;L=Za+252|0;ma=Za+248|0;va=Za+244|0;Na=Za+240|0;ea=Za+236|0;ra=Za+232|0;Fa=Za+228|0;ha=Za+224|0;wa=Za+220|0;Oa=Za+216|0;$=Za+212|0;na=Za+208|0;Aa=Za+204|0;Sa=Za+200|0;Ja=Za+196|0;v=Za+192|0;l=Za+188|0;p=Za+184|0;ca=Za+180|0;pa=Za+176|0;Da=Za+172|0;C=Za+168|0;r=Za+164|0;ia=Za+160|0;xa=Za+156|0;Pa=Za+152|0;T=Za+148|0;S=Za+144|0;R=Za+140|0;Q=Za+136|0;P=Za+132|0;O=Za+128|0;_=Za+124|0;x=Za+120|0;M=Za+112|0;n=Za+104|0;t=Za+100|0;Ia=Za+96|0;B=Za+92|0;J=Za+88|0;ua=Za+84|0;Ma=Za+80|0;G=Za+76|0;I=Za+72|0;A=Za+68|0;g=Za+64|0;f=Za+60|0;h=Za+56|0;i=Za+52|0;j=Za+48|0;_a=Za+44|0;$a=Za+40|0;ab=Za+36|0;bb=Za+32|0;cb=Za+28|0;db=Za+24|0;Ya=Za+20|0;k=Za+16|0;Xa=Za+12|0;z=Za+8|0;Va=Za+4|0;Wa=Za;c[k>>2]=a;c[Xa>>2]=b;c[z>>2]=e;k=c[k>>2]|0;c[db>>2]=k;c[cb>>2]=c[db>>2];c[bb>>2]=(c[cb>>2]|0)+4;c[ab>>2]=c[bb>>2];c[$a>>2]=c[ab>>2];c[_a>>2]=c[$a>>2];c[Va>>2]=c[c[_a>>2]>>2];c[Wa>>2]=Bb(k)|0;if(!(c[Va>>2]|0)){c[j>>2]=k;c[i>>2]=(c[j>>2]|0)+4;c[h>>2]=c[i>>2];c[f>>2]=c[h>>2];c[g>>2]=c[f>>2];c[c[Xa>>2]>>2]=c[g>>2];c[Ya>>2]=c[c[Xa>>2]>>2];db=c[Ya>>2]|0;ja=Za;return db|0}while(1){c[Na>>2]=k;c[va>>2]=(c[Na>>2]|0)+8;c[ma>>2]=c[va>>2];a=c[z>>2]|0;b=(c[Va>>2]|0)+16|0;c[Ua>>2]=c[ma>>2];c[H>>2]=a;c[L>>2]=b;b=c[Ua>>2]|0;a=c[H>>2]|0;c[Ca>>2]=c[L>>2];f=c[Ca>>2]|0;c[La>>2]=b;c[E>>2]=a;c[K>>2]=f;f=c[K>>2]|0;c[o>>2]=c[E>>2];c[u>>2]=f;f=c[u>>2]|0;c[ba>>2]=c[o>>2];c[y>>2]=f;f=c[ba>>2]|0;c[Z>>2]=c[y>>2];a=c[Z>>2]|0;c[Y>>2]=a;c[X>>2]=c[Y>>2];b=c[X>>2]|0;c[W>>2]=b;c[V>>2]=c[W>>2];c[U>>2]=c[V>>2];if((d[(c[U>>2]|0)+11>>0]|0)&128|0){c[Ea>>2]=b;c[qa>>2]=c[Ea>>2];c[da>>2]=c[qa>>2];b=c[c[da>>2]>>2]|0}else{c[Qa>>2]=b;c[ya>>2]=c[Qa>>2];c[ka>>2]=c[ya>>2];c[s>>2]=c[ka>>2];c[D>>2]=c[s>>2];b=c[D>>2]|0}c[q>>2]=b;e=c[q>>2]|0;c[Ta>>2]=a;b=c[Ta>>2]|0;c[Ba>>2]=b;c[oa>>2]=c[Ba>>2];c[aa>>2]=c[oa>>2];if((d[(c[aa>>2]|0)+11>>0]|0)&128|0){c[Ga>>2]=b;c[sa>>2]=c[Ga>>2];c[fa>>2]=c[sa>>2];b=c[(c[fa>>2]|0)+4>>2]|0}else{c[Ra>>2]=b;c[za>>2]=c[Ra>>2];c[la>>2]=c[za>>2];b=d[(c[la>>2]|0)+11>>0]|0}c[Ka>>2]=N;c[w>>2]=e;c[m>>2]=b;db=c[Ka>>2]|0;c[db>>2]=c[w>>2];c[db+4>>2]=c[m>>2];if((Cb(f,N)|0)<0){e=c[Va>>2]|0;if(!(c[c[Va>>2]>>2]|0)){b=12;break}c[F>>2]=e;c[Wa>>2]=c[F>>2];c[Va>>2]=c[c[Va>>2]>>2]}else{c[Ha>>2]=k;c[ta>>2]=(c[Ha>>2]|0)+8;c[ga>>2]=c[ta>>2];a=(c[Va>>2]|0)+16|0;b=c[z>>2]|0;c[Ma>>2]=c[ga>>2];c[G>>2]=a;c[I>>2]=b;b=c[Ma>>2]|0;c[ua>>2]=c[G>>2];a=c[ua>>2]|0;f=c[I>>2]|0;c[Ia>>2]=b;c[B>>2]=a;c[J>>2]=f;f=c[J>>2]|0;c[n>>2]=c[B>>2];c[t>>2]=f;f=c[t>>2]|0;c[_>>2]=c[n>>2];c[x>>2]=f;f=c[_>>2]|0;c[O>>2]=c[x>>2];a=c[O>>2]|0;c[P>>2]=a;c[Q>>2]=c[P>>2];b=c[Q>>2]|0;c[R>>2]=b;c[S>>2]=c[R>>2];c[T>>2]=c[S>>2];if((d[(c[T>>2]|0)+11>>0]|0)&128|0){c[Da>>2]=b;c[pa>>2]=c[Da>>2];c[ca>>2]=c[pa>>2];b=c[c[ca>>2]>>2]|0}else{c[Pa>>2]=b;c[xa>>2]=c[Pa>>2];c[ia>>2]=c[xa>>2];c[r>>2]=c[ia>>2];c[C>>2]=c[r>>2];b=c[C>>2]|0}c[p>>2]=b;e=c[p>>2]|0;c[Sa>>2]=a;b=c[Sa>>2]|0;c[Aa>>2]=b;c[na>>2]=c[Aa>>2];c[$>>2]=c[na>>2];if((d[(c[$>>2]|0)+11>>0]|0)&128|0){c[Fa>>2]=b;c[ra>>2]=c[Fa>>2];c[ea>>2]=c[ra>>2];b=c[(c[ea>>2]|0)+4>>2]|0}else{c[Oa>>2]=b;c[wa>>2]=c[Oa>>2];c[ha>>2]=c[wa>>2];b=d[(c[ha>>2]|0)+11>>0]|0}c[Ja>>2]=M;c[v>>2]=e;c[l>>2]=b;db=c[Ja>>2]|0;c[db>>2]=c[v>>2];c[db+4>>2]=c[l>>2];db=(Cb(f,M)|0)<0;e=c[Va>>2]|0;if(!db){b=23;break}a=c[Va>>2]|0;if(!(c[e+4>>2]|0)){b=22;break}c[A>>2]=a+4;c[Wa>>2]=c[A>>2];c[Va>>2]=c[(c[Va>>2]|0)+4>>2]}}if((b|0)==12){c[c[Xa>>2]>>2]=e;c[Ya>>2]=c[c[Xa>>2]>>2];db=c[Ya>>2]|0;ja=Za;return db|0}else if((b|0)==22){c[c[Xa>>2]>>2]=a;c[Ya>>2]=(c[Va>>2]|0)+4;db=c[Ya>>2]|0;ja=Za;return db|0}else if((b|0)==23){c[c[Xa>>2]>>2]=e;c[Ya>>2]=c[Wa>>2];db=c[Ya>>2]|0;ja=Za;return db|0}return 0}function ub(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0,Tc=0,Uc=0,Vc=0,Wc=0,Xc=0,Yc=0,Zc=0,_c=0,$c=0,ad=0,bd=0,cd=0,dd=0,ed=0,fd=0,gd=0,hd=0,id=0,jd=0,kd=0,ld=0,md=0,nd=0,od=0,pd=0,qd=0,rd=0,sd=0,td=0,ud=0,vd=0,wd=0,xd=0,yd=0,zd=0,Ad=0,Bd=0,Cd=0,Dd=0,Ed=0,Fd=0,Gd=0,Hd=0,Id=0,Jd=0,Kd=0,Ld=0,Md=0,Nd=0,Od=0,Pd=0,Qd=0,Rd=0,Sd=0,Td=0,Ud=0,Vd=0,Wd=0,Xd=0,Yd=0,Zd=0,_d=0,$d=0,ae=0,be=0,ce=0,de=0,ee=0,fe=0,ge=0,he=0,ie=0,je=0,ke=0,le=0,me=0,ne=0,oe=0;he=ja;ja=ja+1248|0;Cd=he+1236|0;Ed=he+1232|0;Bd=he+1228|0;Dd=he+1224|0;$d=he+1220|0;ge=he+1216|0;Hd=he+1212|0;Td=he+1208|0;de=he+144|0;Kd=he+1204|0;Vd=he+1200|0;be=he+1246|0;Gd=he+1196|0;Sd=he+1192|0;ce=he+136|0;Jd=he+1188|0;Ud=he+1184|0;ae=he+1245|0;_d=he+1180|0;Wd=he+1176|0;Yd=he+1172|0;Ld=he+1168|0;Xd=he+1164|0;Zd=he+1160|0;Md=he+1156|0;ee=he+1152|0;Pd=he+1148|0;Nd=he+1144|0;Id=he+1140|0;Qd=he+1136|0;Od=he+1132|0;fe=he+1128|0;Fd=he+1124|0;Rd=he+1120|0;zd=he+1116|0;Ad=he+1112|0;td=he+1108|0;xd=he+1104|0;yd=he+1100|0;wd=he+1096|0;Pc=he+1092|0;Rc=he+1088|0;Oc=he+1084|0;Qc=he+1080|0;nd=he+1076|0;vd=he+1072|0;Uc=he+1068|0;fd=he+1064|0;rd=he+128|0;Xc=he+1060|0;hd=he+1056|0;pd=he+1244|0;Tc=he+1052|0;ed=he+1048|0;qd=he+120|0;Wc=he+1044|0;gd=he+1040|0;od=he+1243|0;md=he+1036|0;id=he+1032|0;kd=he+1028|0;Yc=he+1024|0;jd=he+1020|0;ld=he+1016|0;Zc=he+1012|0;sd=he+1008|0;bd=he+1004|0;$c=he+1e3|0;Vc=he+996|0;cd=he+992|0;ad=he+988|0;ud=he+984|0;Sc=he+980|0;dd=he+976|0;Mc=he+972|0;Nc=he+968|0;wc=he+964|0;Kc=he+960|0;Lc=he+956|0;Gc=he+952|0;xc=he+948|0;Hc=he+944|0;rc=he+940|0;tc=he+936|0;Cc=he+932|0;$b=he+928|0;Bc=he+924|0;qc=he+920|0;zc=he+916|0;Ac=he+912|0;Yb=he+908|0;Zb=he+904|0;Ic=he+900|0;Mb=he+896|0;_b=he+892|0;Vb=he+888|0;sc=he+884|0;lc=he+112|0;Wb=he+880|0;Jc=he+876|0;ac=he+872|0;ec=he+864|0;mc=he+104|0;vc=he+860|0;Ec=he+856|0;fc=he+848|0;kc=he+96|0;uc=he+844|0;Xb=he+840|0;nc=he+836|0;Dc=he+832|0;wb=he+828|0;yb=he+824|0;ub=he+820|0;xb=he+816|0;cc=he+812|0;Fc=he+808|0;Bb=he+804|0;Ob=he+800|0;ic=he+88|0;Eb=he+796|0;Qb=he+792|0;gc=he+1242|0;Ab=he+788|0;Nb=he+784|0;hc=he+80|0;Db=he+780|0;Pb=he+776|0;dc=he+1241|0;bc=he+772|0;Rb=he+768|0;Tb=he+764|0;Fb=he+760|0;Sb=he+756|0;Ub=he+752|0;Gb=he+748|0;pc=he+744|0;Jb=he+740|0;Hb=he+736|0;Cb=he+732|0;Kb=he+728|0;Ib=he+724|0;yc=he+720|0;zb=he+716|0;Lb=he+712|0;sb=he+708|0;tb=he+704|0;Ea=he+700|0;qb=he+696|0;rb=he+692|0;Va=he+688|0;Na=he+684|0;fb=he+680|0;wa=he+676|0;Ga=he+672|0;Za=he+668|0;S=he+664|0;Xa=he+660|0;ua=he+656|0;Sa=he+652|0;Ua=he+648|0;J=he+644|0;M=he+640|0;kb=he+636|0;q=he+632|0;Q=he+628|0;E=he+624|0;Ba=he+620|0;la=he+72|0;G=he+616|0;mb=he+612|0;V=he+608|0;ba=he+600|0;oa=he+64|0;Oa=he+596|0;gb=he+592|0;da=he+584|0;ga=he+56|0;Ja=he+580|0;I=he+576|0;pa=he+572|0;$a=he+568|0;Ma=he+564|0;eb=he+560|0;va=he+556|0;Fa=he+552|0;Ya=he+548|0;R=he+544|0;Wa=he+540|0;sa=he+536|0;Ra=he+532|0;Ta=he+528|0;F=he+524|0;L=he+520|0;jb=he+516|0;p=he+512|0;P=he+508|0;C=he+504|0;ta=he+500|0;ka=he+48|0;D=he+496|0;lb=he+492|0;U=he+488|0;$=he+480|0;na=he+40|0;ya=he+476|0;hb=he+472|0;aa=he+464|0;fa=he+32|0;Ia=he+460|0;H=he+456|0;w=he+452|0;ca=he+448|0;qa=he+436|0;ea=he+432|0;xa=he+428|0;Ha=he+424|0;_a=he+420|0;s=he+412|0;X=he+408|0;pb=he+404|0;Da=he+400|0;Qa=he+396|0;ob=he+392|0;Ca=he+388|0;Pa=he+384|0;nb=he+380|0;r=he+372|0;h=he+368|0;f=he+364|0;t=he+360|0;g=he+356|0;W=he+352|0;db=he+348|0;Aa=he+344|0;La=he+340|0;cb=he+336|0;N=he+332|0;K=he+328|0;ib=he+324|0;o=he+320|0;O=he+316|0;A=he+312|0;za=he+308|0;ia=he+16|0;y=he+304|0;Ka=he+300|0;T=he+296|0;_=he+288|0;ha=he+8|0;x=he+280|0;bb=he+276|0;n=he+272|0;Z=he+264|0;ma=he;ab=he+260|0;m=he+256|0;ra=he+252|0;u=he+248|0;j=he+244|0;v=he+240|0;ie=he+228|0;k=he+224|0;je=he+216|0;ke=he+212|0;le=he+208|0;me=he+204|0;ne=he+200|0;oe=he+196|0;i=he+192|0;l=he+188|0;_c=he+176|0;Y=he+168|0;jc=he+160|0;oc=he+148|0;c[oe>>2]=d;c[i>>2]=e;c[ne>>2]=c[oe>>2];c[me>>2]=(c[ne>>2]|0)+4;c[le>>2]=c[me>>2];c[l>>2]=c[le>>2];c[je>>2]=c[l>>2];c[ke>>2]=1;d=c[ke>>2]|0;c[ie>>2]=c[je>>2];c[k>>2]=d;c[he+220>>2]=0;d=c[k>>2]|0;c[he+232>>2]=c[ie>>2];if(d>>>0>134217727){c[j>>2]=28371;oe=z(8)|0;ne=c[j>>2]|0;c[ra>>2]=oe;c[u>>2]=ne;ne=c[ra>>2]|0;IC(ne,c[u>>2]|0);c[ne>>2]=24780;B(oe|0,19632,99)}c[v>>2]=c[k>>2]<<5;c[he+236>>2]=4;oe=Mr(c[v>>2]|0)|0;me=c[l>>2]|0;c[ab>>2]=Y;c[m>>2]=me;me=c[ab>>2]|0;c[me>>2]=c[m>>2];a[me+4>>0]=0;a[me+5>>0]=0;a[ma>>0]=a[Y>>0]|0;a[ma+1>>0]=a[Y+1>>0]|0;a[ma+2>>0]=a[Y+2>>0]|0;a[ma+3>>0]=a[Y+3>>0]|0;a[ma+4>>0]=a[Y+4>>0]|0;a[ma+5>>0]=a[Y+5>>0]|0;a[ma+6>>0]=a[Y+6>>0]|0;a[ma+7>>0]=a[Y+7>>0]|0;c[bb>>2]=_c;c[n>>2]=oe;oe=c[bb>>2]|0;c[x>>2]=n;me=c[c[x>>2]>>2]|0;c[N>>2]=ma;ne=c[N>>2]|0;c[Z>>2]=c[ne>>2];c[Z+4>>2]=c[ne+4>>2];a[ha>>0]=a[Z>>0]|0;a[ha+1>>0]=a[Z+1>>0]|0;a[ha+2>>0]=a[Z+2>>0]|0;a[ha+3>>0]=a[Z+3>>0]|0;a[ha+4>>0]=a[Z+4>>0]|0;a[ha+5>>0]=a[Z+5>>0]|0;a[ha+6>>0]=a[Z+6>>0]|0;a[ha+7>>0]=a[Z+7>>0]|0;c[Ka>>2]=oe;c[T>>2]=me;me=c[Ka>>2]|0;c[y>>2]=T;oe=c[c[y>>2]>>2]|0;c[ib>>2]=me;c[o>>2]=oe;oe=c[ib>>2]|0;c[K>>2]=o;c[oe>>2]=c[c[K>>2]>>2];c[O>>2]=ha;oe=c[O>>2]|0;c[_>>2]=c[oe>>2];c[_+4>>2]=c[oe+4>>2];a[ia>>0]=a[_>>0]|0;a[ia+1>>0]=a[_+1>>0]|0;a[ia+2>>0]=a[_+2>>0]|0;a[ia+3>>0]=a[_+3>>0]|0;a[ia+4>>0]=a[_+4>>0]|0;a[ia+5>>0]=a[_+5>>0]|0;a[ia+6>>0]=a[_+6>>0]|0;a[ia+7>>0]=a[_+7>>0]|0;c[za>>2]=me+4;me=c[za>>2]|0;c[A>>2]=ia;oe=c[A>>2]|0;c[me>>2]=c[oe>>2];c[me+4>>2]=c[oe+4>>2];me=c[l>>2]|0;c[cb>>2]=_c;c[La>>2]=c[cb>>2];c[Aa>>2]=c[La>>2];c[db>>2]=(c[c[Aa>>2]>>2]|0)+16;c[W>>2]=c[db>>2];oe=c[W>>2]|0;ne=c[i>>2]|0;c[f>>2]=me;c[t>>2]=oe;c[g>>2]=ne;ne=c[f>>2]|0;f=c[t>>2]|0;oe=c[g>>2]|0;a[he+24>>0]=a[he+1240>>0]|0;c[he+376>>2]=ne;c[r>>2]=f;c[h>>2]=oe;KC(c[r>>2]|0,c[h>>2]|0);c[nb>>2]=_c;c[Pa>>2]=c[nb>>2];c[Ca>>2]=(c[Pa>>2]|0)+4;a[(c[Ca>>2]|0)+4>>0]=1;oe=c[l>>2]|0;c[ob>>2]=_c;c[Qa>>2]=c[ob>>2];c[Da>>2]=c[Qa>>2];c[pb>>2]=(c[c[Da>>2]>>2]|0)+16;c[X>>2]=(c[pb>>2]|0)+12;f=c[X>>2]|0;c[he+416>>2]=oe;c[s>>2]=f;c[c[s>>2]>>2]=0;c[_a>>2]=_c;c[Ha>>2]=c[_a>>2];c[xa>>2]=(c[Ha>>2]|0)+4;a[(c[xa>>2]|0)+5>>0]=1;c[w>>2]=_c;f=c[w>>2]|0;c[Ia>>2]=ea;c[H>>2]=f;c[c[Ia>>2]>>2]=c[H>>2];a[fa>>0]=a[ea>>0]|0;a[fa+1>>0]=a[ea+1>>0]|0;a[fa+2>>0]=a[ea+2>>0]|0;a[fa+3>>0]=a[ea+3>>0]|0;c[hb>>2]=qa;f=c[hb>>2]|0;c[ya>>2]=fa;c[Ya>>2]=c[c[ya>>2]>>2];oe=c[Ya>>2]|0;c[Fa>>2]=oe;c[va>>2]=c[Fa>>2];c[R>>2]=c[c[va>>2]>>2];c[eb>>2]=oe;c[Ma>>2]=c[eb>>2];c[c[Ma>>2]>>2]=0;oe=c[R>>2]|0;c[Wa>>2]=fa;c[Ta>>2]=c[c[Wa>>2]>>2];c[Ra>>2]=c[Ta>>2];c[sa>>2]=(c[Ra>>2]|0)+4;c[F>>2]=c[sa>>2];ne=c[F>>2]|0;c[aa>>2]=c[ne>>2];c[aa+4>>2]=c[ne+4>>2];a[na>>0]=a[aa>>0]|0;a[na+1>>0]=a[aa+1>>0]|0;a[na+2>>0]=a[aa+2>>0]|0;a[na+3>>0]=a[aa+3>>0]|0;a[na+4>>0]=a[aa+4>>0]|0;a[na+5>>0]=a[aa+5>>0]|0;a[na+6>>0]=a[aa+6>>0]|0;a[na+7>>0]=a[aa+7>>0]|0;c[lb>>2]=f;c[U>>2]=oe;oe=c[lb>>2]|0;c[D>>2]=U;f=c[c[D>>2]>>2]|0;c[jb>>2]=oe;c[p>>2]=f;f=c[jb>>2]|0;c[L>>2]=p;c[f>>2]=c[c[L>>2]>>2];c[P>>2]=na;f=c[P>>2]|0;c[$>>2]=c[f>>2];c[$+4>>2]=c[f+4>>2];a[ka>>0]=a[$>>0]|0;a[ka+1>>0]=a[$+1>>0]|0;a[ka+2>>0]=a[$+2>>0]|0;a[ka+3>>0]=a[$+3>>0]|0;a[ka+4>>0]=a[$+4>>0]|0;a[ka+5>>0]=a[$+5>>0]|0;a[ka+6>>0]=a[$+6>>0]|0;a[ka+7>>0]=a[$+7>>0]|0;c[ta>>2]=oe+4;oe=c[ta>>2]|0;c[C>>2]=ka;f=c[C>>2]|0;c[oe>>2]=c[f>>2];c[oe+4>>2]=c[f+4>>2];c[$a>>2]=qa;oe=c[$a>>2]|0;c[Ja>>2]=pa;c[I>>2]=oe;c[c[Ja>>2]>>2]=c[I>>2];c[ca>>2]=c[pa>>2];a[ga>>0]=a[ca>>0]|0;a[ga+1>>0]=a[ca+1>>0]|0;a[ga+2>>0]=a[ca+2>>0]|0;a[ga+3>>0]=a[ca+3>>0]|0;c[gb>>2]=oc;oe=c[gb>>2]|0;c[Oa>>2]=ga;c[Za>>2]=c[c[Oa>>2]>>2];f=c[Za>>2]|0;c[Ga>>2]=f;c[wa>>2]=c[Ga>>2];c[S>>2]=c[c[wa>>2]>>2];c[fb>>2]=f;c[Na>>2]=c[fb>>2];c[c[Na>>2]>>2]=0;f=c[S>>2]|0;c[Xa>>2]=ga;c[Ua>>2]=c[c[Xa>>2]>>2];c[Sa>>2]=c[Ua>>2];c[ua>>2]=(c[Sa>>2]|0)+4;c[J>>2]=c[ua>>2];ne=c[J>>2]|0;c[da>>2]=c[ne>>2];c[da+4>>2]=c[ne+4>>2];a[oa>>0]=a[da>>0]|0;a[oa+1>>0]=a[da+1>>0]|0;a[oa+2>>0]=a[da+2>>0]|0;a[oa+3>>0]=a[da+3>>0]|0;a[oa+4>>0]=a[da+4>>0]|0;a[oa+5>>0]=a[da+5>>0]|0;a[oa+6>>0]=a[da+6>>0]|0;a[oa+7>>0]=a[da+7>>0]|0;c[mb>>2]=oe;c[V>>2]=f;f=c[mb>>2]|0;c[G>>2]=V;oe=c[c[G>>2]>>2]|0;c[kb>>2]=f;c[q>>2]=oe;oe=c[kb>>2]|0;c[M>>2]=q;c[oe>>2]=c[c[M>>2]>>2];c[Q>>2]=oa;oe=c[Q>>2]|0;c[ba>>2]=c[oe>>2];c[ba+4>>2]=c[oe+4>>2];a[la>>0]=a[ba>>0]|0;a[la+1>>0]=a[ba+1>>0]|0;a[la+2>>0]=a[ba+2>>0]|0;a[la+3>>0]=a[ba+3>>0]|0;a[la+4>>0]=a[ba+4>>0]|0;a[la+5>>0]=a[ba+5>>0]|0;a[la+6>>0]=a[ba+6>>0]|0;a[la+7>>0]=a[ba+7>>0]|0;c[Ba>>2]=f+4;f=c[Ba>>2]|0;c[E>>2]=la;oe=c[E>>2]|0;c[f>>2]=c[oe>>2];c[f+4>>2]=c[oe+4>>2];c[Va>>2]=qa;c[Ea>>2]=c[Va>>2];c[qb>>2]=0;f=c[Ea>>2]|0;c[tb>>2]=f;c[sb>>2]=c[tb>>2];c[rb>>2]=c[c[sb>>2]>>2];oe=c[qb>>2]|0;c[xb>>2]=f;c[ub>>2]=c[xb>>2];c[c[ub>>2]>>2]=oe;if(c[rb>>2]|0){c[yb>>2]=f;c[wb>>2]=(c[yb>>2]|0)+4;f=c[rb>>2]|0;c[zb>>2]=c[wb>>2];c[Lb>>2]=f;f=c[zb>>2]|0;if(a[f+5>>0]&1){oe=c[f>>2]|0;c[yc>>2]=(c[Lb>>2]|0)+16;c[bc>>2]=(c[yc>>2]|0)+12;ne=c[bc>>2]|0;c[Db>>2]=oe;c[Pb>>2]=ne;ne=c[Db>>2]|0;oe=c[Pb>>2]|0;a[hc>>0]=a[dc>>0]|0;c[Ab>>2]=ne;c[Nb>>2]=oe}if(a[f+4>>0]&1){oe=c[f>>2]|0;c[Fc>>2]=(c[Lb>>2]|0)+16;c[cc>>2]=c[Fc>>2];ne=c[cc>>2]|0;c[Eb>>2]=oe;c[Qb>>2]=ne;ne=c[Eb>>2]|0;oe=c[Qb>>2]|0;a[ic>>0]=a[gc>>0]|0;c[Bb>>2]=ne;c[Ob>>2]=oe;OC(c[Ob>>2]|0)}if(c[Lb>>2]|0){oe=c[Lb>>2]|0;c[Cb>>2]=c[f>>2];c[Kb>>2]=oe;c[Ib>>2]=1;oe=c[Kb>>2]|0;ne=c[Ib>>2]|0;c[pc>>2]=c[Cb>>2];c[Jb>>2]=oe;c[Hb>>2]=ne;ne=c[Hb>>2]<<5;c[Sb>>2]=c[Jb>>2];c[Ub>>2]=ne;c[Gb>>2]=4;ne=c[Ub>>2]|0;oe=c[Gb>>2]|0;c[Rb>>2]=c[Sb>>2];c[Tb>>2]=ne;c[Fb>>2]=oe;vb(c[Rb>>2]|0,c[Tb>>2]|0)}}c[Dc>>2]=oc;oe=c[Dc>>2]|0;c[uc>>2]=nc;c[Xb>>2]=oe;c[c[uc>>2]>>2]=c[Xb>>2];c[jc>>2]=c[nc>>2];a[kc>>0]=a[jc>>0]|0;a[kc+1>>0]=a[jc+1>>0]|0;a[kc+2>>0]=a[jc+2>>0]|0;a[kc+3>>0]=a[jc+3>>0]|0;c[Ec>>2]=b;oe=c[Ec>>2]|0;c[vc>>2]=kc;c[Cc>>2]=c[c[vc>>2]>>2];f=c[Cc>>2]|0;c[tc>>2]=f;c[rc>>2]=c[tc>>2];c[$b>>2]=c[c[rc>>2]>>2];c[Hc>>2]=f;c[xc>>2]=c[Hc>>2];c[c[xc>>2]>>2]=0;f=c[$b>>2]|0;c[Bc>>2]=kc;c[Ac>>2]=c[c[Bc>>2]>>2];c[zc>>2]=c[Ac>>2];c[qc>>2]=(c[zc>>2]|0)+4;c[Yb>>2]=c[qc>>2];ne=c[Yb>>2]|0;c[fc>>2]=c[ne>>2];c[fc+4>>2]=c[ne+4>>2];a[mc>>0]=a[fc>>0]|0;a[mc+1>>0]=a[fc+1>>0]|0;a[mc+2>>0]=a[fc+2>>0]|0;a[mc+3>>0]=a[fc+3>>0]|0;a[mc+4>>0]=a[fc+4>>0]|0;a[mc+5>>0]=a[fc+5>>0]|0;a[mc+6>>0]=a[fc+6>>0]|0;a[mc+7>>0]=a[fc+7>>0]|0;c[Jc>>2]=oe;c[ac>>2]=f;f=c[Jc>>2]|0;c[Wb>>2]=ac;oe=c[c[Wb>>2]>>2]|0;c[Ic>>2]=f;c[Mb>>2]=oe;oe=c[Ic>>2]|0;c[Zb>>2]=Mb;c[oe>>2]=c[c[Zb>>2]>>2];c[_b>>2]=mc;oe=c[_b>>2]|0;c[ec>>2]=c[oe>>2];c[ec+4>>2]=c[oe+4>>2];a[lc>>0]=a[ec>>0]|0;a[lc+1>>0]=a[ec+1>>0]|0;a[lc+2>>0]=a[ec+2>>0]|0;a[lc+3>>0]=a[ec+3>>0]|0;a[lc+4>>0]=a[ec+4>>0]|0;a[lc+5>>0]=a[ec+5>>0]|0;a[lc+6>>0]=a[ec+6>>0]|0;a[lc+7>>0]=a[ec+7>>0]|0;c[sc>>2]=f+4;f=c[sc>>2]|0;c[Vb>>2]=lc;oe=c[Vb>>2]|0;c[f>>2]=c[oe>>2];c[f+4>>2]=c[oe+4>>2];c[Gc>>2]=oc;c[wc>>2]=c[Gc>>2];c[Kc>>2]=0;f=c[wc>>2]|0;c[Nc>>2]=f;c[Mc>>2]=c[Nc>>2];c[Lc>>2]=c[c[Mc>>2]>>2];oe=c[Kc>>2]|0;c[Qc>>2]=f;c[Oc>>2]=c[Qc>>2];c[c[Oc>>2]>>2]=oe;if(c[Lc>>2]|0){c[Rc>>2]=f;c[Pc>>2]=(c[Rc>>2]|0)+4;f=c[Lc>>2]|0;c[Sc>>2]=c[Pc>>2];c[dd>>2]=f;f=c[Sc>>2]|0;if(a[f+5>>0]&1){oe=c[f>>2]|0;c[ud>>2]=(c[dd>>2]|0)+16;c[md>>2]=(c[ud>>2]|0)+12;ne=c[md>>2]|0;c[Wc>>2]=oe;c[gd>>2]=ne;ne=c[Wc>>2]|0;oe=c[gd>>2]|0;a[qd>>0]=a[od>>0]|0;c[Tc>>2]=ne;c[ed>>2]=oe}if(a[f+4>>0]&1){oe=c[f>>2]|0;c[vd>>2]=(c[dd>>2]|0)+16;c[nd>>2]=c[vd>>2];ne=c[nd>>2]|0;c[Xc>>2]=oe;c[hd>>2]=ne;ne=c[Xc>>2]|0;oe=c[hd>>2]|0;a[rd>>0]=a[pd>>0]|0;c[Uc>>2]=ne;c[fd>>2]=oe;OC(c[fd>>2]|0)}if(c[dd>>2]|0){oe=c[dd>>2]|0;c[Vc>>2]=c[f>>2];c[cd>>2]=oe;c[ad>>2]=1;oe=c[cd>>2]|0;ne=c[ad>>2]|0;c[sd>>2]=c[Vc>>2];c[bd>>2]=oe;c[$c>>2]=ne;ne=c[$c>>2]<<5;c[jd>>2]=c[bd>>2];c[ld>>2]=ne;c[Zc>>2]=4;ne=c[ld>>2]|0;oe=c[Zc>>2]|0;c[id>>2]=c[jd>>2];c[kd>>2]=ne;c[Yc>>2]=oe;vb(c[id>>2]|0,c[kd>>2]|0)}}c[wd>>2]=_c;c[td>>2]=c[wd>>2];c[xd>>2]=0;f=c[td>>2]|0;c[Ad>>2]=f;c[zd>>2]=c[Ad>>2];c[yd>>2]=c[c[zd>>2]>>2];oe=c[xd>>2]|0;c[Dd>>2]=f;c[Bd>>2]=c[Dd>>2];c[c[Bd>>2]>>2]=oe;if(!(c[yd>>2]|0)){ja=he;return}c[Ed>>2]=f;c[Cd>>2]=(c[Ed>>2]|0)+4;f=c[yd>>2]|0;c[Fd>>2]=c[Cd>>2];c[Rd>>2]=f;f=c[Fd>>2]|0;if(a[f+5>>0]&1){oe=c[f>>2]|0;c[fe>>2]=(c[Rd>>2]|0)+16;c[_d>>2]=(c[fe>>2]|0)+12;ne=c[_d>>2]|0;c[Jd>>2]=oe;c[Ud>>2]=ne;ne=c[Jd>>2]|0;oe=c[Ud>>2]|0;a[ce>>0]=a[ae>>0]|0;c[Gd>>2]=ne;c[Sd>>2]=oe}if(a[f+4>>0]&1){oe=c[f>>2]|0;c[ge>>2]=(c[Rd>>2]|0)+16;c[$d>>2]=c[ge>>2];ne=c[$d>>2]|0;c[Kd>>2]=oe;c[Vd>>2]=ne;ne=c[Kd>>2]|0;oe=c[Vd>>2]|0;a[de>>0]=a[be>>0]|0;c[Hd>>2]=ne;c[Td>>2]=oe;OC(c[Td>>2]|0)}if(!(c[Rd>>2]|0)){ja=he;return}oe=c[Rd>>2]|0;c[Id>>2]=c[f>>2];c[Qd>>2]=oe;c[Od>>2]=1;oe=c[Qd>>2]|0;ne=c[Od>>2]|0;c[ee>>2]=c[Id>>2];c[Pd>>2]=oe;c[Nd>>2]=ne;ne=c[Nd>>2]<<5;c[Xd>>2]=c[Pd>>2];c[Zd>>2]=ne;c[Md>>2]=4;ne=c[Zd>>2]|0;oe=c[Md>>2]|0;c[Wd>>2]=c[Xd>>2];c[Yd>>2]=ne;c[Ld>>2]=oe;vb(c[Wd>>2]|0,c[Yd>>2]|0);ja=he;return}function vb(a,b){a=a|0;b=b|0;var d=0,e=0;d=ja;ja=ja+16|0;e=d+4|0;c[e>>2]=a;c[d>>2]=b;Ab(c[e>>2]|0);ja=d;return}function wb(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;q=ja;ja=ja+64|0;o=q+56|0;h=q+52|0;g=q+48|0;k=q+44|0;l=q+40|0;n=q+36|0;m=q+32|0;j=q+28|0;i=q+24|0;p=q+20|0;r=q+16|0;u=q+12|0;t=q+8|0;f=q+4|0;s=q;c[u>>2]=a;c[t>>2]=b;c[f>>2]=d;c[s>>2]=e;d=c[u>>2]|0;c[c[s>>2]>>2]=0;c[(c[s>>2]|0)+4>>2]=0;c[(c[s>>2]|0)+8>>2]=c[t>>2];c[c[f>>2]>>2]=c[s>>2];c[r>>2]=d;if(c[c[c[r>>2]>>2]>>2]|0){c[m>>2]=d;u=c[c[c[m>>2]>>2]>>2]|0;c[o>>2]=d;c[c[o>>2]>>2]=u}c[n>>2]=d;c[l>>2]=(c[n>>2]|0)+4;c[k>>2]=c[l>>2];c[g>>2]=c[k>>2];c[h>>2]=c[g>>2];xb(c[c[h>>2]>>2]|0,c[c[f>>2]>>2]|0);c[p>>2]=d;c[i>>2]=(c[p>>2]|0)+8;c[j>>2]=c[i>>2];u=c[j>>2]|0;c[u>>2]=(c[u>>2]|0)+1;ja=q;return}function xb(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;A=ja;ja=ja+96|0;l=A+84|0;k=A+80|0;s=A+76|0;u=A+72|0;j=A+68|0;z=A+64|0;y=A+60|0;q=A+56|0;p=A+52|0;o=A+48|0;n=A+44|0;t=A+40|0;x=A+36|0;f=A+32|0;w=A+28|0;v=A+24|0;m=A+20|0;i=A+16|0;e=A+12|0;r=A+8|0;g=A+4|0;h=A;c[e>>2]=b;c[r>>2]=d;a[(c[r>>2]|0)+12>>0]=(c[r>>2]|0)==(c[e>>2]|0)&1;while(1){if((c[r>>2]|0)==(c[e>>2]|0)){b=18;break}c[i>>2]=c[r>>2];if(!(a[(c[(c[i>>2]|0)+8>>2]|0)+12>>0]&1^1)){b=18;break}c[m>>2]=c[r>>2];c[f>>2]=c[(c[m>>2]|0)+8>>2];b=c[r>>2]|0;if((c[f>>2]|0)==(c[c[(c[f>>2]|0)+8>>2]>>2]|0)){c[q>>2]=b;c[j>>2]=c[(c[q>>2]|0)+8>>2];c[g>>2]=c[(c[(c[j>>2]|0)+8>>2]|0)+4>>2];if(!(c[g>>2]|0)){b=8;break}if(a[(c[g>>2]|0)+12>>0]&1){b=8;break}c[l>>2]=c[r>>2];c[r>>2]=c[(c[l>>2]|0)+8>>2];a[(c[r>>2]|0)+12>>0]=1;c[k>>2]=c[r>>2];c[r>>2]=c[(c[k>>2]|0)+8>>2];a[(c[r>>2]|0)+12>>0]=(c[r>>2]|0)==(c[e>>2]|0)&1;a[(c[g>>2]|0)+12>>0]=1}else{c[p>>2]=b;c[h>>2]=c[c[(c[(c[p>>2]|0)+8>>2]|0)+8>>2]>>2];if(!(c[h>>2]|0)){b=14;break}if(a[(c[h>>2]|0)+12>>0]&1){b=14;break}c[o>>2]=c[r>>2];c[r>>2]=c[(c[o>>2]|0)+8>>2];a[(c[r>>2]|0)+12>>0]=1;c[n>>2]=c[r>>2];c[r>>2]=c[(c[n>>2]|0)+8>>2];a[(c[r>>2]|0)+12>>0]=(c[r>>2]|0)==(c[e>>2]|0)&1;a[(c[h>>2]|0)+12>>0]=1}}if((b|0)==8){c[s>>2]=c[r>>2];if((c[s>>2]|0)!=(c[c[(c[s>>2]|0)+8>>2]>>2]|0)){c[u>>2]=c[r>>2];c[r>>2]=c[(c[u>>2]|0)+8>>2];yb(c[r>>2]|0)}c[z>>2]=c[r>>2];c[r>>2]=c[(c[z>>2]|0)+8>>2];a[(c[r>>2]|0)+12>>0]=1;c[y>>2]=c[r>>2];c[r>>2]=c[(c[y>>2]|0)+8>>2];a[(c[r>>2]|0)+12>>0]=0;zb(c[r>>2]|0);ja=A;return}else if((b|0)==14){c[t>>2]=c[r>>2];if((c[t>>2]|0)==(c[c[(c[t>>2]|0)+8>>2]>>2]|0)){c[x>>2]=c[r>>2];c[r>>2]=c[(c[x>>2]|0)+8>>2];zb(c[r>>2]|0)}c[w>>2]=c[r>>2];c[r>>2]=c[(c[w>>2]|0)+8>>2];a[(c[r>>2]|0)+12>>0]=1;c[v>>2]=c[r>>2];c[r>>2]=c[(c[v>>2]|0)+8>>2];a[(c[r>>2]|0)+12>>0]=0;yb(c[r>>2]|0);ja=A;return}else if((b|0)==18){ja=A;return}}function yb(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;k=ja;ja=ja+32|0;g=k+28|0;j=k+24|0;i=k+20|0;e=k+16|0;d=k+12|0;b=k+8|0;f=k+4|0;h=k;c[f>>2]=a;c[h>>2]=c[(c[f>>2]|0)+4>>2];c[(c[f>>2]|0)+4>>2]=c[c[h>>2]>>2];if(c[(c[f>>2]|0)+4>>2]|0){a=c[f>>2]|0;c[d>>2]=c[(c[f>>2]|0)+4>>2];c[b>>2]=a;c[(c[d>>2]|0)+8>>2]=c[b>>2]}c[(c[h>>2]|0)+8>>2]=c[(c[f>>2]|0)+8>>2];c[g>>2]=c[f>>2];b=c[h>>2]|0;a=c[f>>2]|0;if((c[g>>2]|0)==(c[c[(c[g>>2]|0)+8>>2]>>2]|0)){c[c[a+8>>2]>>2]=b;j=c[f>>2]|0;g=c[h>>2]|0;c[g>>2]=j;g=c[f>>2]|0;j=c[h>>2]|0;c[i>>2]=g;c[e>>2]=j;j=c[i>>2]|0;i=c[e>>2]|0;j=j+8|0;c[j>>2]=i;ja=k;return}else{c[j>>2]=a;c[(c[(c[j>>2]|0)+8>>2]|0)+4>>2]=b;j=c[f>>2]|0;g=c[h>>2]|0;c[g>>2]=j;g=c[f>>2]|0;j=c[h>>2]|0;c[i>>2]=g;c[e>>2]=j;j=c[i>>2]|0;i=c[e>>2]|0;j=j+8|0;c[j>>2]=i;ja=k;return}}function zb(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;k=ja;ja=ja+32|0;g=k+28|0;j=k+24|0;i=k+20|0;e=k+16|0;d=k+12|0;b=k+8|0;f=k+4|0;h=k;c[f>>2]=a;c[h>>2]=c[c[f>>2]>>2];c[c[f>>2]>>2]=c[(c[h>>2]|0)+4>>2];if(c[c[f>>2]>>2]|0){a=c[f>>2]|0;c[d>>2]=c[c[f>>2]>>2];c[b>>2]=a;c[(c[d>>2]|0)+8>>2]=c[b>>2]}c[(c[h>>2]|0)+8>>2]=c[(c[f>>2]|0)+8>>2];c[g>>2]=c[f>>2];b=c[h>>2]|0;a=c[f>>2]|0;if((c[g>>2]|0)==(c[c[(c[g>>2]|0)+8>>2]>>2]|0))c[c[a+8>>2]>>2]=b;else{c[j>>2]=a;c[(c[(c[j>>2]|0)+8>>2]|0)+4>>2]=b}c[(c[h>>2]|0)+4>>2]=c[f>>2];j=c[h>>2]|0;c[i>>2]=c[f>>2];c[e>>2]=j;c[(c[i>>2]|0)+8>>2]=c[e>>2];ja=k;return}function Ab(a){a=a|0;var b=0,d=0;b=ja;ja=ja+16|0;d=b;c[d>>2]=a;Gf(c[d>>2]|0);ja=b;return}function Bb(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;d=ja;ja=ja+32|0;b=d+24|0;e=d+20|0;f=d+16|0;g=d+12|0;h=d+8|0;i=d+4|0;j=d;c[j>>2]=a;c[i>>2]=c[j>>2];c[h>>2]=(c[i>>2]|0)+4;c[g>>2]=c[h>>2];c[f>>2]=c[g>>2];c[e>>2]=c[f>>2];c[b>>2]=c[e>>2];ja=d;return c[b>>2]|0}function Cb(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;N=ja;ja=ja+176|0;E=N+164|0;s=N+160|0;v=N+156|0;x=N+152|0;p=N+148|0;o=N+144|0;u=N+140|0;w=N+136|0;y=N+132|0;q=N+128|0;r=N+124|0;t=N+120|0;l=N+116|0;n=N+112|0;M=N+108|0;I=N+100|0;J=N+96|0;A=N+92|0;C=N+88|0;K=N;z=N+84|0;B=N+80|0;m=N+76|0;f=N+72|0;h=N+68|0;j=N+64|0;g=N+60|0;i=N+56|0;k=N+52|0;O=N+48|0;P=N+44|0;Q=N+40|0;R=N+36|0;L=N+32|0;T=N+28|0;S=N+24|0;H=N+16|0;D=N+12|0;G=N+8|0;F=N+4|0;c[T>>2]=b;c[S>>2]=e;b=c[T>>2]|0;e=c[S>>2]|0;c[H>>2]=c[e>>2];c[H+4>>2]=c[e+4>>2];c[R>>2]=b;e=c[R>>2]|0;c[Q>>2]=e;c[P>>2]=c[Q>>2];c[O>>2]=c[P>>2];if((d[(c[O>>2]|0)+11>>0]|0)&128|0){c[j>>2]=e;c[h>>2]=c[j>>2];c[f>>2]=c[h>>2];e=c[(c[f>>2]|0)+4>>2]|0}else{c[k>>2]=e;c[i>>2]=c[k>>2];c[g>>2]=c[i>>2];e=d[(c[g>>2]|0)+11>>0]|0}c[D>>2]=e;c[m>>2]=H;c[G>>2]=c[(c[m>>2]|0)+4>>2];c[n>>2]=b;c[l>>2]=c[n>>2];e=c[l>>2]|0;c[t>>2]=e;c[r>>2]=c[t>>2];c[q>>2]=c[r>>2];if((d[(c[q>>2]|0)+11>>0]|0)&128|0){c[x>>2]=e;c[v>>2]=c[x>>2];c[s>>2]=c[v>>2];e=c[c[s>>2]>>2]|0}else{c[y>>2]=e;c[w>>2]=c[y>>2];c[u>>2]=c[w>>2];c[o>>2]=c[u>>2];c[p>>2]=c[o>>2];e=c[p>>2]|0}c[E>>2]=e;S=c[E>>2]|0;c[M>>2]=H;T=c[c[M>>2]>>2]|0;c[z>>2]=D;c[B>>2]=G;R=c[z>>2]|0;Q=c[B>>2]|0;a[K>>0]=a[N+168>>0]|0;c[A>>2]=R;c[C>>2]=Q;Q=c[C>>2]|0;R=c[A>>2]|0;c[N+104>>2]=K;c[I>>2]=Q;c[J>>2]=R;c[F>>2]=Db(S,T,c[((c[c[I>>2]>>2]|0)>>>0<(c[c[J>>2]>>2]|0)>>>0?c[C>>2]|0:c[A>>2]|0)>>2]|0)|0;if(c[F>>2]|0){c[L>>2]=c[F>>2];T=c[L>>2]|0;ja=N;return T|0}if((c[D>>2]|0)>>>0<(c[G>>2]|0)>>>0){c[L>>2]=-1;T=c[L>>2]|0;ja=N;return T|0}if((c[D>>2]|0)>>>0>(c[G>>2]|0)>>>0){c[L>>2]=1;T=c[L>>2]|0;ja=N;return T|0}else{c[L>>2]=0;T=c[L>>2]|0;ja=N;return T|0}return 0}function Db(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;i=ja;ja=ja+16|0;h=i+12|0;f=i+8|0;g=i+4|0;e=i;c[f>>2]=a;c[g>>2]=b;c[e>>2]=d;if(!(c[e>>2]|0)){c[h>>2]=0;h=c[h>>2]|0;ja=i;return h|0}else{c[h>>2]=ld(c[f>>2]|0,c[g>>2]|0,c[e>>2]|0)|0;h=c[h>>2]|0;ja=i;return h|0}return 0}function Eb(b){b=b|0;var d=0,e=0,f=0,g=0;d=ja;ja=ja+32|0;f=d+8|0;e=d+17|0;g=d+4|0;c[g>>2]=b;b=c[g>>2]|0;c[f>>2]=b+56;f=c[f>>2]|0;a[d>>0]=a[d+16>>0]|0;c[d+12>>2]=e;Fb(f,e);c[b+48>>2]=107300;c[b+44>>2]=107476;ja=d;return}function Fb(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;e=ja;ja=ja+112|0;o=e+96|0;n=e+92|0;p=e+88|0;l=e+8|0;q=e+72|0;s=e+68|0;r=e+64|0;m=e;g=e+60|0;h=e+56|0;i=e+52|0;j=e+48|0;k=e+44|0;f=e+40|0;t=e+32|0;u=e+28|0;v=e+24|0;w=e+20|0;x=e+16|0;c[x>>2]=b;c[e+12>>2]=d;d=c[x>>2]|0;c[w>>2]=d+4;b=c[w>>2]|0;c[v>>2]=b;c[u>>2]=c[v>>2];c[c[u>>2]>>2]=0;c[t>>2]=b;c[e+36>>2]=c[t>>2];a[m>>0]=a[e+100>>0]|0;c[s>>2]=d+8;c[r>>2]=0;b=c[s>>2]|0;c[q>>2]=r;q=c[c[q>>2]>>2]|0;c[n>>2]=b;c[p>>2]=q;n=c[n>>2]|0;c[o>>2]=p;c[n>>2]=c[c[o>>2]>>2];c[e+84>>2]=m;a[l>>0]=a[e+101>>0]|0;c[e+76>>2]=b;c[e+80>>2]=l;c[k>>2]=d;c[j>>2]=(c[k>>2]|0)+4;c[i>>2]=c[j>>2];c[h>>2]=c[i>>2];c[g>>2]=c[h>>2];b=c[g>>2]|0;c[f>>2]=d;c[c[f>>2]>>2]=b;ja=e;return}function Gb(a){a=a|0;var b=0,d=0;b=ja;ja=ja+16|0;d=b;c[d>>2]=a;Hb((c[d>>2]|0)+56|0);ja=b;return}function Hb(a){a=a|0;var b=0,d=0;b=ja;ja=ja+16|0;d=b;c[d>>2]=a;Ib(c[d>>2]|0);ja=b;return}function Ib(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;b=ja;ja=ja+32|0;d=b+24|0;e=b+20|0;f=b+16|0;g=b+12|0;h=b+8|0;i=b+4|0;j=b;c[j>>2]=a;a=c[j>>2]|0;c[i>>2]=a;c[h>>2]=c[i>>2];c[g>>2]=(c[h>>2]|0)+4;c[f>>2]=c[g>>2];c[e>>2]=c[f>>2];c[d>>2]=c[e>>2];Jb(a,c[c[d>>2]>>2]|0);ja=b;return}function Jb(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;z=ja;ja=ja+112|0;u=z+100|0;y=z+96|0;j=z+92|0;w=z+88|0;x=z+84|0;v=z+80|0;o=z+72|0;f=z+68|0;p=z+64|0;r=z+60|0;t=z+56|0;q=z+48|0;s=z+44|0;g=z+40|0;n=z+32|0;i=z+28|0;e=z+24|0;m=z+20|0;h=z+16|0;A=z+12|0;l=z+8|0;k=z+4|0;c[A>>2]=b;c[l>>2]=d;d=c[A>>2]|0;if(!(c[l>>2]|0)){ja=z;return}Jb(d,c[c[l>>2]>>2]|0);Jb(d,c[(c[l>>2]|0)+4>>2]|0);c[v>>2]=d;c[x>>2]=(c[v>>2]|0)+4;c[w>>2]=c[x>>2];c[k>>2]=c[w>>2];A=c[k>>2]|0;c[j>>2]=(c[l>>2]|0)+16;c[y>>2]=c[j>>2];c[u>>2]=c[y>>2];y=c[u>>2]|0;c[f>>2]=A;c[p>>2]=y;y=c[f>>2]|0;A=c[p>>2]|0;a[z>>0]=a[z+104>>0]|0;c[z+76>>2]=y;c[o>>2]=A;Kb(c[o>>2]|0);A=c[l>>2]|0;c[e>>2]=c[k>>2];c[m>>2]=A;c[h>>2]=1;A=c[m>>2]|0;y=c[h>>2]|0;c[z+36>>2]=c[e>>2];c[n>>2]=A;c[i>>2]=y;y=c[i>>2]<<5;c[q>>2]=c[n>>2];c[s>>2]=y;c[g>>2]=4;y=c[s>>2]|0;A=c[g>>2]|0;c[r>>2]=c[q>>2];c[t>>2]=y;c[z+52>>2]=A;vb(c[r>>2]|0,c[t>>2]|0);ja=z;return}function Kb(a){a=a|0;var b=0,d=0;b=ja;ja=ja+16|0;d=b;c[d>>2]=a;OC(c[d>>2]|0);ja=b;return}function Lb(a){a=a|0;var b=0,d=0,e=0;b=ja;ja=ja+16|0;d=b+4|0;e=b;c[e>>2]=a;a=c[e>>2]|0;c[a+52>>2]=128;c[d>>2]=a+56;Mb(c[d>>2]|0);ja=b;return}function Mb(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;b=ja;ja=ja+96|0;o=b+80|0;p=b+76|0;q=b+72|0;j=b+68|0;k=b+64|0;l=b+60|0;m=b+56|0;n=b+52|0;i=b+48|0;d=b+44|0;e=b+40|0;f=b+36|0;g=b+32|0;h=b+28|0;r=b+24|0;s=b+20|0;t=b+16|0;u=b+12|0;v=b+8|0;w=b+4|0;x=b;c[x>>2]=a;a=c[x>>2]|0;c[w>>2]=a;c[v>>2]=c[w>>2];c[u>>2]=(c[v>>2]|0)+4;c[t>>2]=c[u>>2];c[s>>2]=c[t>>2];c[r>>2]=c[s>>2];Jb(a,c[c[r>>2]>>2]|0);c[q>>2]=a;c[p>>2]=(c[q>>2]|0)+8;c[o>>2]=c[p>>2];c[c[o>>2]>>2]=0;c[n>>2]=a;c[m>>2]=(c[n>>2]|0)+4;c[l>>2]=c[m>>2];c[k>>2]=c[l>>2];c[j>>2]=c[k>>2];j=c[j>>2]|0;c[i>>2]=a;c[c[i>>2]>>2]=j;c[h>>2]=a;c[g>>2]=(c[h>>2]|0)+4;c[f>>2]=c[g>>2];c[e>>2]=c[f>>2];c[d>>2]=c[e>>2];c[c[d>>2]>>2]=0;ja=b;return}function Nb(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=ja;ja=ja+16|0;h=e+8|0;g=e+4|0;f=e;c[h>>2]=a;c[g>>2]=b;c[f>>2]=d;a=c[h>>2]|0;c[a+48>>2]=c[g>>2];c[a+44>>2]=c[f>>2];ja=e;return}function Ob(a){a=a|0;return 0}function Pb(e,f){e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Pb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,mc=0,nc=0,oc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0,Tc=0,Uc=0,Vc=0,Wc=0,Xc=0,Yc=0,Zc=0,_c=0,$c=0,ad=0,bd=0,cd=0,dd=0,ed=0,fd=0,gd=0,hd=0,id=0,jd=0,kd=0,ld=0,md=0,nd=0,od=0,pd=0,qd=0,rd=0,sd=0,td=0,ud=0,vd=0,wd=0,xd=0,yd=0,zd=0,Ad=0,Bd=0,Cd=0,Dd=0,Ed=0,Fd=0,Gd=0,Hd=0,Id=0,Jd=0,Kd=0,Ld=0,Md=0,Nd=0,Od=0,Pd=0,Qd=0,Rd=0,Sd=0,Td=0,Ud=0,Vd=0,Wd=0,Xd=0,Yd=0,Zd=0,_d=0,$d=0,ae=0,be=0,ce=0,de=0,ee=0,fe=0,ge=0,he=0,ie=0,je=0,ke=0,le=0,me=0,ne=0,oe=0,pe=0,qe=0,re=0,se=0,te=0,ue=0,ve=0,we=0,xe=0,ye=0,ze=0,Ae=0,Be=0,Ce=0,De=0,Ee=0,Fe=0,Ge=0,He=0,Ie=0,Je=0,Ke=0,Le=0,Me=0,Ne=0,Oe=0,Pe=0,Qe=0,Re=0,Se=0;Pe=ja;ja=ja+1504|0;_d=Pe+1448|0;zb=Pe+1444|0;ub=Pe+1440|0;rb=Pe+1436|0;tb=Pe+1432|0;qb=Pe+1428|0;xb=Pe+1424|0;yb=Pe+1420|0;Bb=Pe+1416|0;dd=Pe+1412|0;Tc=Pe+1408|0;oc=Pe+1404|0;tc=Pe+1400|0;hd=Pe+1396|0;Fb=Pe+240|0;gd=Pe+1392|0;Eb=Pe+232|0;ac=Pe+1388|0;bc=Pe+1384|0;Sc=Pe+1380|0;_b=Pe+1376|0;fd=Pe+1372|0;$b=Pe+1368|0;Rc=Pe+1364|0;ed=Pe+1360|0;Qc=Pe+1356|0;ad=Pe+1352|0;Ab=Pe+1348|0;Gb=Pe+224|0;Cb=Pe+1344|0;Zb=Pe+1336|0;zc=Pe+208|0;Cc=Pe+192|0;md=Pe+1328|0;mc=Pe+1324|0;Xb=Pe+1320|0;gc=Pe+1316|0;Mb=Pe+1312|0;Pc=Pe+1308|0;$c=Pe+1304|0;vd=Pe+1300|0;_c=Pe+1296|0;ud=Pe+1292|0;ld=Pe+1288|0;jc=Pe+1284|0;Wb=Pe+1280|0;fc=Pe+1276|0;Lb=Pe+1272|0;Oc=Pe+1268|0;Zc=Pe+1264|0;td=Pe+1260|0;vb=Pe+1256|0;wb=Pe+1252|0;I=Pe+1248|0;N=Pe+1244|0;kb=Pe+1240|0;Z=Pe+184|0;_a=Pe+1236|0;m=Pe+1232|0;B=Pe+1228|0;p=Pe+1224|0;ta=Pe+1220|0;ya=Pe+1216|0;Ha=Pe+1212|0;la=Pe+1208|0;Sa=Pe+1204|0;qa=Pe+1200|0;ob=Pe+1196|0;T=Pe+1192|0;Ra=Pe+1188|0;Y=Pe+176|0;pa=Pe+1184|0;nb=Pe+1180|0;j=Pe+1176|0;S=Pe+1172|0;xa=Pe+1168|0;Za=Pe+1164|0;Ga=Pe+1160|0;Qa=Pe+1156|0;mb=Pe+1152|0;w=Pe+1148|0;kd=Pe+1144|0;ic=Pe+1140|0;Pb=Pe+1136|0;ec=Pe+1132|0;Kb=Pe+1128|0;Nc=Pe+1124|0;Yc=Pe+1120|0;sd=Pe+1116|0;jd=Pe+1112|0;hc=Pe+1108|0;Nb=Pe+1104|0;dc=Pe+1100|0;Jb=Pe+1096|0;Mc=Pe+1092|0;Xc=Pe+1088|0;qd=Pe+1084|0;nc=Pe+1080|0;sc=Pe+1076|0;rc=Pe+1072|0;uc=Pe+1068|0;rd=Pe+1064|0;yc=Pe+168|0;cd=Pe+1060|0;Hb=Pe+1056|0;cc=Pe+1052|0;Ib=Pe+1048|0;Hc=Pe+1044|0;Jc=Pe+1040|0;Lc=Pe+1036|0;Ec=Pe+1032|0;Wc=Pe+1028|0;Gc=Pe+1024|0;pd=Pe+1020|0;wc=Pe+1016|0;Vc=Pe+1012|0;xc=Pe+160|0;Fc=Pe+1008|0;od=Pe+1004|0;Db=Pe+1e3|0;vc=Pe+996|0;Ic=Pe+992|0;bd=Pe+988|0;Kc=Pe+984|0;Uc=Pe+980|0;nd=Pe+976|0;Yb=Pe+972|0;hb=Pe+968|0;gb=Pe+964|0;F=Pe+960|0;t=Pe+956|0;D=Pe+952|0;r=Pe+948|0;Fa=Pe+944|0;Pa=Pe+940|0;eb=Pe+936|0;ue=Pe+932|0;qe=Pe+928|0;Xd=Pe+924|0;Yd=Pe+920|0;Ee=Pe+916|0;zd=Pe+152|0;De=Pe+912|0;yd=Pe+144|0;Nd=Pe+908|0;Od=Pe+904|0;oe=Pe+900|0;Md=Pe+896|0;Ce=Pe+892|0;Ld=Pe+888|0;ke=Pe+884|0;xe=Pe+880|0;je=Pe+876|0;se=Pe+872|0;id=Pe+868|0;xd=Pe+136|0;wd=Pe+864|0;Jd=Pe+856|0;ae=Pe+120|0;ce=Pe+104|0;Je=Pe+852|0;Wd=Pe+848|0;Hd=Pe+844|0;Td=Pe+840|0;Ed=Pe+836|0;ie=Pe+832|0;re=Pe+828|0;Fe=Pe+824|0;fb=Pe+820|0;E=Pe+816|0;s=Pe+812|0;C=Pe+808|0;q=Pe+804|0;Ea=Pe+800|0;Oa=Pe+796|0;db=Pe+792|0;G=Pe+788|0;L=Pe+784|0;H=Pe+780|0;M=Pe+776|0;jb=Pe+772|0;X=Pe+96|0;Ya=Pe+768|0;l=Pe+764|0;A=Pe+760|0;o=Pe+756|0;sa=Pe+752|0;wa=Pe+748|0;Ca=Pe+744|0;ka=Pe+740|0;Na=Pe+736|0;oa=Pe+732|0;cb=Pe+728|0;R=Pe+724|0;Ma=Pe+720|0;W=Pe+88|0;na=Pe+716|0;bb=Pe+712|0;i=Pe+708|0;Q=Pe+704|0;va=Pe+700|0;Xa=Pe+696|0;Ba=Pe+692|0;La=Pe+688|0;ab=Pe+684|0;v=Pe+680|0;de=Pe+676|0;te=Pe+672|0;he=Pe+668|0;pe=Pe+664|0;Be=Pe+660|0;Id=Pe+656|0;Ae=Pe+652|0;Kd=Pe+648|0;Ie=Pe+644|0;Vd=Pe+640|0;Gd=Pe+636|0;Sd=Pe+632|0;Dd=Pe+628|0;ge=Pe+624|0;ne=Pe+620|0;ze=Pe+616|0;He=Pe+612|0;Ud=Pe+608|0;Fd=Pe+604|0;Rd=Pe+600|0;Cd=Pe+596|0;fe=Pe+592|0;me=Pe+588|0;ye=Pe+584|0;Ge=Pe+580|0;Pd=Pe+576|0;Ad=Pe+572|0;Qd=Pe+568|0;Bd=Pe+564|0;ee=Pe+560|0;le=Pe+556|0;we=Pe+552|0;ve=Pe+548|0;y=Pe+544|0;K=Pe+540|0;x=Pe+536|0;J=Pe+532|0;ib=Pe+528|0;V=Pe+80|0;Wa=Pe+524|0;k=Pe+520|0;z=Pe+516|0;n=Pe+512|0;ra=Pe+508|0;ua=Pe+504|0;Aa=Pe+500|0;ia=Pe+496|0;Ka=Pe+492|0;ma=Pe+488|0;$a=Pe+484|0;P=Pe+480|0;Ja=Pe+476|0;U=Pe+72|0;ha=Pe+472|0;Ua=Pe+468|0;h=Pe+464|0;O=Pe+460|0;Va=Pe+452|0;za=Pe+448|0;Ia=Pe+444|0;Ta=Pe+440|0;u=Pe+436|0;Qe=Pe+428|0;Re=Pe+420|0;Se=Pe+416|0;Ne=Pe+1492|0;Le=Pe+412|0;Oe=Pe+408|0;$d=Pe;Me=Pe+392|0;g=Pe+388|0;_=Pe+380|0;$=Pe+368|0;da=Pe+364|0;Zd=Pe+320|0;be=Pe+308|0;ea=Pe+304|0;fa=Pe+292|0;ga=Pe+288|0;pb=Pe+56|0;Bc=Pe+284|0;Dc=Pe+272|0;Ac=Pe+268|0;aa=Pe+264|0;ba=Pe+252|0;ca=Pe+248|0;Ke=Pe+40|0;c[Le>>2]=e;c[Oe>>2]=f;Le=c[Le>>2]|0;c[Se>>2]=Pe+400;f=c[Se>>2]|0;c[Re>>2]=f;c[Pe+424>>2]=c[Re>>2];a[f+4>>0]=0;c[Qe>>2]=Me;c[Pe+432>>2]=c[Qe>>2];f=(qc(c[Oe>>2]|0,2)|0)<<8;c[g>>2]=f|(qc(c[Oe>>2]|0,3)|0);f=(qc(c[Oe>>2]|0,4)|0)<<8;c[Pe+384>>2]=f|(qc(c[Oe>>2]|0,5)|0);do switch(qc(c[Oe>>2]|0,1)|0){case 0:{a[Ne>>0]=0;Se=a[Ne>>0]|0;Se=Se&1;ja=Pe;return Se|0}case 2:{Qb(c[Le+44>>2]|0,(qc(c[Oe>>2]|0,3)|0)&255)|0;a[Ne>>0]=1;Se=a[Ne>>0]|0;Se=Se&1;ja=Pe;return Se|0}case 22:{Rb(Le,c[Oe>>2]|0);Se=Sb(Le)|0;c[Ta>>2]=$;c[u>>2]=Se;Se=c[Ta>>2]|0;c[Ia>>2]=Se;Re=c[Ia>>2]|0;c[za>>2]=Re;Qe=c[za>>2]|0;c[Qe>>2]=0;c[Qe+4>>2]=0;c[Qe+8>>2]=0;c[Va>>2]=Re;c[Pe+456>>2]=c[Va>>2];LC(Se,c[u>>2]|0,lb(c[u>>2]|0)|0);c[Ua>>2]=Le+56;c[h>>2]=$;c[O>>2]=Tb(c[Ua>>2]|0,c[h>>2]|0)|0;a[U>>0]=a[O>>0]|0;a[U+1>>0]=a[O+1>>0]|0;a[U+2>>0]=a[O+2>>0]|0;a[U+3>>0]=a[O+3>>0]|0;c[Ja>>2]=ha;c[c[Ja>>2]>>2]=c[U>>2];c[_>>2]=c[ha>>2];c[$a>>2]=Le+56;c[Ka>>2]=c[$a>>2];c[Aa>>2]=c[Ka>>2];c[ua>>2]=(c[Aa>>2]|0)+4;c[ra>>2]=c[ua>>2];c[n>>2]=c[ra>>2];c[z>>2]=c[n>>2];Se=c[z>>2]|0;c[Wa>>2]=ia;c[k>>2]=Se;c[c[Wa>>2]>>2]=c[k>>2];c[P>>2]=c[ia>>2];a[V>>0]=a[P>>0]|0;a[V+1>>0]=a[P+1>>0]|0;a[V+2>>0]=a[P+2>>0]|0;a[V+3>>0]=a[P+3>>0]|0;c[ib>>2]=ma;c[c[ib>>2]>>2]=c[V>>2];c[da>>2]=c[ma>>2];c[x>>2]=_;c[J>>2]=da;Se=c[J>>2]|0;c[y>>2]=c[x>>2];c[K>>2]=Se;Se=(c[c[y>>2]>>2]|0)==(c[c[K>>2]>>2]|0);OC($);if(Se){f=Zd;e=Le;g=f+44|0;do{c[f>>2]=c[e>>2];f=f+4|0;e=e+4|0}while((f|0)<(g|0));f=_d;e=Zd;g=f+44|0;do{c[f>>2]=c[e>>2];f=f+4|0;e=e+4|0}while((f|0)<(g|0));Se=Ob(_d)|0;Qe=Sb(Le)|0;c[Be>>2]=be;c[Id>>2]=Qe;Qe=c[Be>>2]|0;c[pe>>2]=Qe;Re=c[pe>>2]|0;c[he>>2]=Re;Me=c[he>>2]|0;c[Me>>2]=0;c[Me+4>>2]=0;c[Me+8>>2]=0;c[te>>2]=Re;c[de>>2]=c[te>>2];Re=c[Id>>2]|0;LC(Qe,Re,lb(c[Id>>2]|0)|0);c[(sb(Le+56|0,be)|0)>>2]=Se;OC(be)}a[Le+28>>0]=64+(d[Le>>0]|0);Ub(Le,$d);Vb(Le,c[Oe>>2]|0);pc(c[Oe>>2]|0,7,0);a[Ne>>0]=1;Se=a[Ne>>0]|0;Se=Se&1;ja=Pe;return Se|0}case 15:{Rb(Le,c[Oe>>2]|0);Se=Sb(Le)|0;c[ab>>2]=fa;c[v>>2]=Se;Se=c[ab>>2]|0;c[La>>2]=Se;Re=c[La>>2]|0;c[Ba>>2]=Re;Qe=c[Ba>>2]|0;c[Qe>>2]=0;c[Qe+4>>2]=0;c[Qe+8>>2]=0;c[Xa>>2]=Re;c[va>>2]=c[Xa>>2];LC(Se,c[v>>2]|0,lb(c[v>>2]|0)|0);c[bb>>2]=Le+56;c[i>>2]=fa;c[Q>>2]=Tb(c[bb>>2]|0,c[i>>2]|0)|0;a[W>>0]=a[Q>>0]|0;a[W+1>>0]=a[Q+1>>0]|0;a[W+2>>0]=a[Q+2>>0]|0;a[W+3>>0]=a[Q+3>>0]|0;c[Ma>>2]=na;c[c[Ma>>2]>>2]=c[W>>2];c[ea>>2]=c[na>>2];c[Me>>2]=c[ea>>2];OC(fa);c[cb>>2]=Le+56;c[Na>>2]=c[cb>>2];c[Ca>>2]=c[Na>>2];c[wa>>2]=(c[Ca>>2]|0)+4;c[sa>>2]=c[wa>>2];c[o>>2]=c[sa>>2];c[A>>2]=c[o>>2];Se=c[A>>2]|0;c[Ya>>2]=ka;c[l>>2]=Se;c[c[Ya>>2]>>2]=c[l>>2];c[R>>2]=c[ka>>2];a[X>>0]=a[R>>0]|0;a[X+1>>0]=a[R+1>>0]|0;a[X+2>>0]=a[R+2>>0]|0;a[X+3>>0]=a[R+3>>0]|0;c[jb>>2]=oa;c[c[jb>>2]>>2]=c[X>>2];c[ga>>2]=c[oa>>2];c[H>>2]=Me;c[M>>2]=ga;Se=c[M>>2]|0;c[G>>2]=c[H>>2];c[L>>2]=Se;if((c[c[G>>2]>>2]|0)==(c[c[L>>2]>>2]|0)){pc(c[Oe>>2]|0,7,255);a[Ne>>0]=1;Se=a[Ne>>0]|0;Se=Se&1;ja=Pe;return Se|0}else{a[Le>>0]=1;c[db>>2]=Me;c[Oa>>2]=c[db>>2];c[Ea>>2]=c[Oa>>2];c[q>>2]=(c[c[Ea>>2]>>2]|0)+16;c[C>>2]=c[q>>2];c[fb>>2]=c[C>>2];c[s>>2]=c[fb>>2];c[E>>2]=c[s>>2];tt(c[(c[E>>2]|0)+12>>2]|0,0,0,2)|0;c[eb>>2]=Me;c[Pa>>2]=c[eb>>2];c[Fa>>2]=c[Pa>>2];c[r>>2]=(c[c[Fa>>2]>>2]|0)+16;c[D>>2]=c[r>>2];c[gb>>2]=c[D>>2];c[t>>2]=c[gb>>2];c[F>>2]=c[t>>2];st(pb,c[(c[F>>2]|0)+12>>2]|0);c[hb>>2]=pb;c[Le+20>>2]=c[(c[hb>>2]|0)+8>>2];a[Le+16>>0]=-128;a[Le+28>>0]=64+(d[Le>>0]|0);b[Le+30>>1]=1;b[Le+32>>1]=32;b[Le+34>>1]=0;b[Le+24>>1]=4660;b[Le+26>>1]=4660;Vb(Le,c[Oe>>2]|0);pc(c[Oe>>2]|0,7,0);a[Ne>>0]=1;Se=a[Ne>>0]|0;Se=Se&1;ja=Pe;return Se|0}}case 16:{pc(c[Oe>>2]|0,7,0);a[Ne>>0]=1;Se=a[Ne>>0]|0;Se=Se&1;ja=Pe;return Se|0}case 26:{c[Le+52>>2]=c[g>>2];a[Ne>>0]=1;Se=a[Ne>>0]|0;Se=Se&1;ja=Pe;return Se|0}case 33:{f=37776;g=f+128|0;do{c[f>>2]=0;f=f+4|0}while((f|0)<(g|0));Rb(Le,c[Oe>>2]|0);Se=Sb(Le)|0;c[nd>>2]=Dc;c[Yb>>2]=Se;Se=c[nd>>2]|0;c[Uc>>2]=Se;Re=c[Uc>>2]|0;c[Kc>>2]=Re;Qe=c[Kc>>2]|0;c[Qe>>2]=0;c[Qe+4>>2]=0;c[Qe+8>>2]=0;c[bd>>2]=Re;c[Ic>>2]=c[bd>>2];LC(Se,c[Yb>>2]|0,lb(c[Yb>>2]|0)|0);c[od>>2]=Le+56;c[Db>>2]=Dc;c[vc>>2]=Tb(c[od>>2]|0,c[Db>>2]|0)|0;a[xc>>0]=a[vc>>0]|0;a[xc+1>>0]=a[vc+1>>0]|0;a[xc+2>>0]=a[vc+2>>0]|0;a[xc+3>>0]=a[vc+3>>0]|0;c[Vc>>2]=Fc;c[c[Vc>>2]>>2]=c[xc>>2];c[Bc>>2]=c[Fc>>2];c[Me>>2]=c[Bc>>2];OC(Dc);c[pd>>2]=Le+56;c[Wc>>2]=c[pd>>2];c[Lc>>2]=c[Wc>>2];c[Jc>>2]=(c[Lc>>2]|0)+4;c[Hc>>2]=c[Jc>>2];c[Ib>>2]=c[Hc>>2];c[cc>>2]=c[Ib>>2];Se=c[cc>>2]|0;c[cd>>2]=Ec;c[Hb>>2]=Se;c[c[cd>>2]>>2]=c[Hb>>2];c[wc>>2]=c[Ec>>2];a[yc>>0]=a[wc>>0]|0;a[yc+1>>0]=a[wc+1>>0]|0;a[yc+2>>0]=a[wc+2>>0]|0;a[yc+3>>0]=a[wc+3>>0]|0;c[rd>>2]=Gc;c[c[rd>>2]>>2]=c[yc>>2];c[Ac>>2]=c[Gc>>2];c[rc>>2]=Me;c[uc>>2]=Ac;Se=c[uc>>2]|0;c[nc>>2]=c[rc>>2];c[sc>>2]=Se;if((c[c[nc>>2]>>2]|0)!=(c[c[sc>>2]>>2]|0)?(c[Le+20>>2]|0)>>>0>=c[Le+40>>2]<<7>>>0:0){c[qd>>2]=Me;c[Xc>>2]=c[qd>>2];c[Mc>>2]=c[Xc>>2];c[Jb>>2]=(c[c[Mc>>2]>>2]|0)+16;c[dc>>2]=c[Jb>>2];c[jd>>2]=c[dc>>2];c[Nb>>2]=c[jd>>2];c[hc>>2]=c[Nb>>2];tt(c[(c[hc>>2]|0)+12>>2]|0,c[Le+40>>2]<<7,0,0)|0;c[sd>>2]=Me;c[Yc>>2]=c[sd>>2];c[Nc>>2]=c[Yc>>2];c[Kb>>2]=(c[c[Nc>>2]>>2]|0)+16;c[ec>>2]=c[Kb>>2];c[kd>>2]=c[ec>>2];c[Pb>>2]=c[kd>>2];c[ic>>2]=c[Pb>>2];rt(c[(c[ic>>2]|0)+12>>2]|0,37776,128)|0;Vb(Le,c[Oe>>2]|0);lc(c[Oe>>2]|0,37776,128,c[Le+52>>2]|0);pc(c[Oe>>2]|0,7,0);a[Ne>>0]=1;Se=a[Ne>>0]|0;Se=Se&1;ja=Pe;return Se|0}pc(c[Oe>>2]|0,7,1);a[Ne>>0]=1;Se=a[Ne>>0]|0;Se=Se&1;ja=Pe;return Se|0}case 34:{Rb(Le,c[Oe>>2]|0);e=Sb(Le)|0;c[mb>>2]=ba;c[w>>2]=e;e=c[mb>>2]|0;c[Qa>>2]=e;Se=c[Qa>>2]|0;c[Ga>>2]=Se;Re=c[Ga>>2]|0;c[Re>>2]=0;c[Re+4>>2]=0;c[Re+8>>2]=0;c[Za>>2]=Se;c[xa>>2]=c[Za>>2];LC(e,c[w>>2]|0,lb(c[w>>2]|0)|0);c[nb>>2]=Le+56;c[j>>2]=ba;c[S>>2]=Tb(c[nb>>2]|0,c[j>>2]|0)|0;a[Y>>0]=a[S>>0]|0;a[Y+1>>0]=a[S+1>>0]|0;a[Y+2>>0]=a[S+2>>0]|0;a[Y+3>>0]=a[S+3>>0]|0;c[Ra>>2]=pa;c[c[Ra>>2]>>2]=c[Y>>2];c[aa>>2]=c[pa>>2];c[Me>>2]=c[aa>>2];OC(ba);c[ob>>2]=Le+56;c[Sa>>2]=c[ob>>2];c[Ha>>2]=c[Sa>>2];c[ya>>2]=(c[Ha>>2]|0)+4;c[ta>>2]=c[ya>>2];c[p>>2]=c[ta>>2];c[B>>2]=c[p>>2];e=c[B>>2]|0;c[_a>>2]=la;c[m>>2]=e;c[c[_a>>2]>>2]=c[m>>2];c[T>>2]=c[la>>2];a[Z>>0]=a[T>>0]|0;a[Z+1>>0]=a[T+1>>0]|0;a[Z+2>>0]=a[T+2>>0]|0;a[Z+3>>0]=a[T+3>>0]|0;c[kb>>2]=qa;c[c[kb>>2]>>2]=c[Z>>2];c[ca>>2]=c[qa>>2];c[I>>2]=Me;c[N>>2]=ca;e=c[N>>2]|0;c[vb>>2]=c[I>>2];c[wb>>2]=e;e=c[Oe>>2]|0;if((c[c[vb>>2]>>2]|0)==(c[c[wb>>2]>>2]|0)){pc(e,7,1);a[Ne>>0]=1;Se=a[Ne>>0]|0;Se=Se&1;ja=Pe;return Se|0}kc(e,37776,128,c[Le+52>>2]|0);c[Bb>>2]=Me;c[yb>>2]=c[Bb>>2];c[xb>>2]=c[yb>>2];c[qb>>2]=(c[c[xb>>2]>>2]|0)+16;c[tb>>2]=c[qb>>2];c[zb>>2]=c[tb>>2];c[rb>>2]=c[zb>>2];c[ub>>2]=c[rb>>2];Se=c[Le+40>>2]<<7;c[Ab>>2]=(c[(c[ub>>2]|0)+12>>2]|0)+8;e=Gb;c[e>>2]=Se;c[e+4>>2]=0;c[Cb>>2]=0;e=c[Ab>>2]|0;pt(Zb,e);c[ad>>2]=e+(c[(c[e>>2]|0)+-12>>2]|0);c[Qc>>2]=c[ad>>2];if((c[(c[Qc>>2]|0)+16>>2]&5|0)==0?(c[ed>>2]=e+(c[(c[e>>2]|0)+-12>>2]|0),c[Rc>>2]=c[ed>>2],Qe=Gb,Be=c[Qe>>2]|0,Qe=c[Qe+4>>2]|0,Se=c[Cb>>2]|0,c[gd>>2]=c[(c[Rc>>2]|0)+24>>2],Re=Eb,c[Re>>2]=Be,c[Re+4>>2]=Qe,c[ac>>2]=Se,c[bc>>2]=16,Se=c[gd>>2]|0,Re=Eb,Da[c[(c[Se>>2]|0)+16>>2]&15](zc,Se,c[Re>>2]|0,c[Re+4>>2]|0,c[ac>>2]|0,c[bc>>2]|0),c[hd>>2]=Cc,Re=Fb,c[Re>>2]=-1,c[Re+4>>2]=-1,Re=c[hd>>2]|0,c[Re>>2]=0,c[Re+4>>2]=0,Se=Fb,Qe=c[Se+4>>2]|0,Re=Re+8|0,c[Re>>2]=c[Se>>2],c[Re+4>>2]=Qe,c[oc>>2]=zc,c[tc>>2]=Cc,c[Tc>>2]=c[oc>>2],Re=(c[Tc>>2]|0)+8|0,Qe=c[Re>>2]|0,Re=c[Re+4>>2]|0,c[dd>>2]=c[tc>>2],Se=(c[dd>>2]|0)+8|0,(Qe|0)==(c[Se>>2]|0)?(Re|0)==(c[Se+4>>2]|0):0):0){c[fd>>2]=e+(c[(c[e>>2]|0)+-12>>2]|0);c[$b>>2]=4;Se=c[$b>>2]|0;c[Sc>>2]=c[fd>>2];c[_b>>2]=Se;Se=c[Sc>>2]|0;ht(Se,c[Se+16>>2]|c[_b>>2])}qt(Zb);c[vd>>2]=Me;c[$c>>2]=c[vd>>2];c[Pc>>2]=c[$c>>2];c[Mb>>2]=(c[c[Pc>>2]>>2]|0)+16;c[gc>>2]=c[Mb>>2];c[md>>2]=c[gc>>2];c[Xb>>2]=c[md>>2];c[mc>>2]=c[Xb>>2];Se=c[(c[mc>>2]|0)+12>>2]|0;c[ud>>2]=Se+(c[(c[Se>>2]|0)+-12>>2]|0);c[_c>>2]=c[ud>>2];if(c[(c[_c>>2]|0)+16>>2]&5|0){c[td>>2]=Me;c[Zc>>2]=c[td>>2];c[Oc>>2]=c[Zc>>2];c[Lb>>2]=(c[c[Oc>>2]>>2]|0)+16;c[fc>>2]=c[Lb>>2];c[ld>>2]=c[fc>>2];c[Wb>>2]=c[ld>>2];c[jc>>2]=c[Wb>>2];c[id>>2]=(c[(c[jc>>2]|0)+12>>2]|0)+8;e=xd;c[e>>2]=0;c[e+4>>2]=0;c[wd>>2]=2;e=c[id>>2]|0;pt(Jd,e);c[se>>2]=e+(c[(c[e>>2]|0)+-12>>2]|0);c[je>>2]=c[se>>2];if((c[(c[je>>2]|0)+16>>2]&5|0)==0?(c[xe>>2]=e+(c[(c[e>>2]|0)+-12>>2]|0),c[ke>>2]=c[xe>>2],Qe=xd,Be=c[Qe>>2]|0,Qe=c[Qe+4>>2]|0,Se=c[wd>>2]|0,c[De>>2]=c[(c[ke>>2]|0)+24>>2],Re=yd,c[Re>>2]=Be,c[Re+4>>2]=Qe,c[Nd>>2]=Se,c[Od>>2]=16,Se=c[De>>2]|0,Re=yd,Da[c[(c[Se>>2]|0)+16>>2]&15](ae,Se,c[Re>>2]|0,c[Re+4>>2]|0,c[Nd>>2]|0,c[Od>>2]|0),c[Ee>>2]=ce,Re=zd,c[Re>>2]=-1,c[Re+4>>2]=-1,Re=c[Ee>>2]|0,c[Re>>2]=0,c[Re+4>>2]=0,Se=zd,Qe=c[Se+4>>2]|0,Re=Re+8|0,c[Re>>2]=c[Se>>2],c[Re+4>>2]=Qe,c[Xd>>2]=ae,c[Yd>>2]=ce,c[qe>>2]=c[Xd>>2],Re=(c[qe>>2]|0)+8|0,Qe=c[Re>>2]|0,Re=c[Re+4>>2]|0,c[ue>>2]=c[Yd>>2],Se=(c[ue>>2]|0)+8|0,(Qe|0)==(c[Se>>2]|0)?(Re|0)==(c[Se+4>>2]|0):0):0){c[Ce>>2]=e+(c[(c[e>>2]|0)+-12>>2]|0);c[Ld>>2]=4;Se=c[Ld>>2]|0;c[oe>>2]=c[Ce>>2];c[Md>>2]=Se;Se=c[oe>>2]|0;ht(Se,c[Se+16>>2]|c[Md>>2])}qt(Jd);c[Fe>>2]=Me;c[re>>2]=c[Fe>>2];c[ie>>2]=c[re>>2];c[Ed>>2]=(c[c[ie>>2]>>2]|0)+16;c[Td>>2]=c[Ed>>2];c[Je>>2]=c[Td>>2];c[Hd>>2]=c[Je>>2];c[Wd>>2]=c[Hd>>2];Se=c[(c[Wd>>2]|0)+12>>2]|0;c[Ae>>2]=Se+(c[(c[Se>>2]|0)+-12>>2]|0);c[Kd>>2]=0;ht(c[Ae>>2]|0,c[Kd>>2]|0)}c[ze>>2]=Me;c[ne>>2]=c[ze>>2];c[ge>>2]=c[ne>>2];c[Dd>>2]=(c[c[ge>>2]>>2]|0)+16;c[Sd>>2]=c[Dd>>2];c[Ie>>2]=c[Sd>>2];c[Gd>>2]=c[Ie>>2];c[Vd>>2]=c[Gd>>2];ut((c[(c[Vd>>2]|0)+12>>2]|0)+8|0,37776,128)|0;c[ye>>2]=Me;c[me>>2]=c[ye>>2];c[fe>>2]=c[me>>2];c[Cd>>2]=(c[c[fe>>2]>>2]|0)+16;c[Rd>>2]=c[Cd>>2];c[He>>2]=c[Rd>>2];c[Fd>>2]=c[He>>2];c[Ud>>2]=c[Fd>>2];tt(c[(c[Ud>>2]|0)+12>>2]|0,0,0,2)|0;c[we>>2]=Me;c[le>>2]=c[we>>2];c[ee>>2]=c[le>>2];c[Bd>>2]=(c[c[ee>>2]>>2]|0)+16;c[Qd>>2]=c[Bd>>2];c[Ge>>2]=c[Qd>>2];c[Ad>>2]=c[Ge>>2];c[Pd>>2]=c[Ad>>2];st(Ke,c[(c[Pd>>2]|0)+12>>2]|0);c[ve>>2]=Ke;c[Le+20>>2]=c[(c[ve>>2]|0)+8>>2];Vb(Le,c[Oe>>2]|0);pc(c[Oe>>2]|0,7,0);a[Ne>>0]=1;Se=a[Ne>>0]|0;Se=Se&1;ja=Pe;return Se|0}case 111:{pc(c[Oe>>2]|0,7,0);pc(c[Oe>>2]|0,0,0);a[Ne>>0]=1;Se=a[Ne>>0]|0;Se=Se&1;ja=Pe;return Se|0}default:{a[Ne>>0]=0;Se=a[Ne>>0]|0;Se=Se&1;ja=Pe;return Se|0}}while(0);return 0}function Qb(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=ja;ja=ja+16|0;g=e;f=e+4|0;c[g>>2]=b;a[f>>0]=d;b=Xa(c[g>>2]|0,f,1)|0;ja=e;return b|0}function Rb(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=ja;ja=ja+64|0;f=d+48|0;h=d+44|0;g=d+40|0;e=d;c[f>>2]=a;c[h>>2]=b;a=(qc(c[h>>2]|0,2)|0)<<8;c[g>>2]=a|(qc(c[h>>2]|0,3)|0);kc(c[h>>2]|0,e,37,c[g>>2]|0);Xb(c[f>>2]|0,e);ja=d;return}function Sb(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;i=ja;ja=ja+48|0;f=i+36|0;d=i+32|0;g=i+28|0;e=i+24|0;k=i+20|0;j=i+16|0;m=i+12|0;l=i+8|0;n=i+4|0;h=i;c[n>>2]=b;b=c[n>>2]|0;ve(103312,b+1|0)|0;c[m>>2]=103312;c[l>>2]=32;l=c[l>>2]|0;c[k>>2]=c[m>>2];c[j>>2]=l;c[h>>2]=je(c[k>>2]|0,c[j>>2]|0)|0;if(c[h>>2]|0)a[c[h>>2]>>0]=0;Xe(103312,31427)|0;Xe(103312,b+10|0)|0;c[g>>2]=103312;c[e>>2]=32;n=c[e>>2]|0;c[f>>2]=c[g>>2];c[d>>2]=n;c[h>>2]=je(c[f>>2]|0,c[d>>2]|0)|0;if(!(c[h>>2]|0)){ja=i;return 103312}a[c[h>>2]>>0]=0;ja=i;return 103312}function Tb(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0;ha=ja;ja=ja+352|0;ka=ha+336|0;ia=ha+332|0;la=ha+328|0;ma=ha+324|0;m=ha+320|0;p=ha+316|0;s=ha+312|0;o=ha+308|0;r=ha+304|0;pa=ha+300|0;qa=ha+296|0;ra=ha+292|0;sa=ha+288|0;ta=ha+284|0;ua=ha+280|0;va=ha+276|0;oa=ha+272|0;wa=ha+268|0;xa=ha+264|0;ya=ha+260|0;za=ha+256|0;Aa=ha+252|0;Ba=ha+248|0;M=ha+244|0;P=ha+240|0;S=ha+236|0;N=ha+232|0;Q=ha+228|0;T=ha+224|0;L=ha+220|0;O=ha+216|0;R=ha+212|0;J=ha+208|0;ga=ha+204|0;Y=ha+200|0;U=ha+196|0;I=ha+192|0;C=ha+188|0;E=ha+184|0;G=ha+180|0;y=ha+176|0;x=ha+172|0;D=ha+168|0;F=ha+164|0;H=ha+160|0;B=ha+156|0;A=ha+152|0;z=ha+148|0;w=ha+144|0;v=ha+140|0;u=ha+136|0;l=ha+132|0;t=ha+128|0;_=ha+120|0;e=ha+112|0;f=ha+108|0;i=ha+100|0;k=ha+96|0;n=ha+92|0;q=ha+88|0;h=ha+84|0;j=ha+80|0;fa=ha+76|0;W=ha+72|0;Z=ha+68|0;X=ha+64|0;ba=ha+60|0;ca=ha+56|0;da=ha+52|0;aa=ha+48|0;ea=ha+44|0;Ca=ha+40|0;Da=ha+36|0;Ea=ha+32|0;Fa=ha+28|0;Ga=ha+24|0;Ha=ha+20|0;$=ha+16|0;K=ha+12|0;g=ha+8|0;V=ha+4|0;na=ha;c[K>>2]=a;c[g>>2]=b;K=c[K>>2]|0;b=c[g>>2]|0;c[Ha>>2]=K;c[Ga>>2]=c[Ha>>2];c[Fa>>2]=(c[Ga>>2]|0)+4;c[Ea>>2]=c[Fa>>2];c[Da>>2]=c[Ea>>2];c[Ca>>2]=c[Da>>2];a=c[c[Ca>>2]>>2]|0;c[Ba>>2]=K;c[Aa>>2]=(c[Ba>>2]|0)+4;c[za>>2]=c[Aa>>2];c[ya>>2]=c[za>>2];c[xa>>2]=c[ya>>2];c[V>>2]=Wb(K,b,a,c[xa>>2]|0)|0;c[wa>>2]=K;c[va>>2]=c[wa>>2];c[ua>>2]=(c[va>>2]|0)+4;c[ta>>2]=c[ua>>2];c[sa>>2]=c[ta>>2];c[ra>>2]=c[sa>>2];a=c[ra>>2]|0;c[pa>>2]=oa;c[qa>>2]=a;c[c[pa>>2]>>2]=c[qa>>2];c[na>>2]=c[oa>>2];c[la>>2]=V;c[ma>>2]=na;a=c[ma>>2]|0;c[ka>>2]=c[la>>2];c[ia>>2]=a;if((c[c[ka>>2]>>2]|0)==(c[c[ia>>2]>>2]|0)^1){c[s>>2]=K;c[p>>2]=(c[s>>2]|0)+8;c[m>>2]=c[p>>2];b=c[m>>2]|0;Ha=c[g>>2]|0;c[r>>2]=V;c[o>>2]=c[r>>2];Ga=(c[c[o>>2]>>2]|0)+16|0;c[q>>2]=b;c[h>>2]=Ha;c[j>>2]=Ga;Ga=c[q>>2]|0;Ha=c[h>>2]|0;c[n>>2]=c[j>>2];b=c[n>>2]|0;c[ha+104>>2]=Ga;c[i>>2]=Ha;c[k>>2]=b;b=c[k>>2]|0;c[e>>2]=c[i>>2];c[f>>2]=b;f=c[f>>2]|0;c[l>>2]=c[e>>2];c[t>>2]=f;f=c[l>>2]|0;c[u>>2]=c[t>>2];e=c[u>>2]|0;c[v>>2]=e;c[w>>2]=c[v>>2];b=c[w>>2]|0;c[z>>2]=b;c[A>>2]=c[z>>2];c[B>>2]=c[A>>2];if((d[(c[B>>2]|0)+11>>0]|0)&128|0){c[G>>2]=b;c[E>>2]=c[G>>2];c[C>>2]=c[E>>2];b=c[c[C>>2]>>2]|0}else{c[H>>2]=b;c[F>>2]=c[H>>2];c[D>>2]=c[F>>2];c[x>>2]=c[D>>2];c[y>>2]=c[x>>2];b=c[y>>2]|0}c[I>>2]=b;a=c[I>>2]|0;c[J>>2]=e;b=c[J>>2]|0;c[R>>2]=b;c[O>>2]=c[R>>2];c[L>>2]=c[O>>2];if((d[(c[L>>2]|0)+11>>0]|0)&128|0){c[S>>2]=b;c[P>>2]=c[S>>2];c[M>>2]=c[P>>2];b=c[(c[M>>2]|0)+4>>2]|0}else{c[T>>2]=b;c[Q>>2]=c[T>>2];c[N>>2]=c[Q>>2];b=d[(c[N>>2]|0)+11>>0]|0}c[ga>>2]=_;c[Y>>2]=a;c[U>>2]=b;Ha=c[ga>>2]|0;c[Ha>>2]=c[Y>>2];c[Ha+4>>2]=c[U>>2];if((Cb(f,_)|0)<0^1){c[$>>2]=c[V>>2];Ha=c[$>>2]|0;ja=ha;return Ha|0}}c[ea>>2]=K;c[da>>2]=c[ea>>2];c[ca>>2]=(c[da>>2]|0)+4;c[ba>>2]=c[ca>>2];c[X>>2]=c[ba>>2];c[Z>>2]=c[X>>2];Ha=c[Z>>2]|0;c[fa>>2]=aa;c[W>>2]=Ha;c[c[fa>>2]>>2]=c[W>>2];c[$>>2]=c[aa>>2];Ha=c[$>>2]|0;ja=ha;return Ha|0}function Ub(d,f){d=d|0;f=f|0;var g=0,h=0,i=0;g=ja;ja=ja+16|0;i=g+4|0;h=g;c[i>>2]=d;c[h>>2]=f;d=c[i>>2]|0;a[c[h>>2]>>0]=a[d>>0]|0;f=(c[h>>2]|0)+1|0;i=d+1|0;a[f>>0]=a[i>>0]|0;a[f+1>>0]=a[i+1>>0]|0;a[f+2>>0]=a[i+2>>0]|0;a[f+3>>0]=a[i+3>>0]|0;a[f+4>>0]=a[i+4>>0]|0;a[f+5>>0]=a[i+5>>0]|0;a[f+6>>0]=a[i+6>>0]|0;a[f+7>>0]=a[i+7>>0]|0;f=(c[h>>2]|0)+9|0;i=d+10|0;a[f>>0]=a[i>>0]|0;a[f+1>>0]=a[i+1>>0]|0;a[f+2>>0]=a[i+2>>0]|0;a[(c[h>>2]|0)+12>>0]=a[d+14>>0]|0;a[(c[h>>2]|0)+13>>0]=a[d+15>>0]|0;a[(c[h>>2]|0)+14>>0]=a[d+16>>0]|0;a[(c[h>>2]|0)+15>>0]=a[d+17>>0]|0;a[(c[h>>2]|0)+16>>0]=c[d+20>>2];a[(c[h>>2]|0)+17>>0]=(c[d+20>>2]|0)>>>8;a[(c[h>>2]|0)+18>>0]=(c[d+20>>2]|0)>>>16;a[(c[h>>2]|0)+19>>0]=(c[d+20>>2]|0)>>>24;a[(c[h>>2]|0)+20>>0]=e[d+24>>1]|0;a[(c[h>>2]|0)+21>>0]=(e[d+24>>1]|0)>>8;a[(c[h>>2]|0)+22>>0]=e[d+26>>1]|0;a[(c[h>>2]|0)+23>>0]=(e[d+26>>1]|0)>>8;a[(c[h>>2]|0)+24>>0]=a[d+28>>0]|0;a[(c[h>>2]|0)+25>>0]=a[d+29>>0]|0;a[(c[h>>2]|0)+26>>0]=e[d+30>>1]|0;a[(c[h>>2]|0)+27>>0]=(e[d+30>>1]|0)>>8;a[(c[h>>2]|0)+28>>0]=e[d+32>>1]|0;a[(c[h>>2]|0)+29>>0]=(e[d+32>>1]|0)>>8;a[(c[h>>2]|0)+30>>0]=b[d+34>>1];a[(c[h>>2]|0)+31>>0]=(e[d+34>>1]|0)>>8;a[(c[h>>2]|0)+32>>0]=a[d+36>>0]|0;a[(c[h>>2]|0)+33>>0]=c[d+40>>2];a[(c[h>>2]|0)+34>>0]=(c[d+40>>2]|0)>>>8;a[(c[h>>2]|0)+35>>0]=(c[d+40>>2]|0)>>>16;a[(c[h>>2]|0)+36>>0]=0;ja=g;return}function Vb(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=ja;ja=ja+64|0;h=d+48|0;g=d+44|0;e=d+40|0;f=d;c[h>>2]=a;c[g>>2]=b;a=(qc(c[g>>2]|0,2)|0)<<8;c[e>>2]=a|(qc(c[g>>2]|0,3)|0);Ub(c[h>>2]|0,f);lc(c[g>>2]|0,f,37,c[e>>2]|0);ja=d;return}function Wb(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0;ca=ja;ja=ja+208|0;L=ca+204|0;Q=ca+200|0;W=ca+196|0;M=ca+192|0;S=ca+188|0;$=ca+184|0;J=ca+180|0;O=ca+176|0;U=ca+172|0;ba=ca+168|0;Z=ca+164|0;p=ca+160|0;h=ca+156|0;k=ca+152|0;K=ca+148|0;P=ca+144|0;V=ca+140|0;u=ca+136|0;l=ca+132|0;N=ca+128|0;T=ca+124|0;aa=ca+120|0;I=ca+116|0;H=ca+112|0;G=ca+108|0;F=ca+104|0;E=ca+100|0;D=ca+96|0;C=ca+92|0;q=ca+88|0;x=ca+80|0;i=ca+72|0;n=ca+68|0;Y=ca+64|0;t=ca+60|0;w=ca+56|0;R=ca+52|0;_=ca+48|0;s=ca+44|0;v=ca+40|0;X=ca+36|0;j=ca+32|0;B=ca+28|0;A=ca+24|0;z=ca+20|0;y=ca+16|0;g=ca+12|0;r=ca+8|0;o=ca+4|0;m=ca;c[g>>2]=a;c[r>>2]=b;c[o>>2]=e;c[m>>2]=f;g=c[g>>2]|0;while(1){if(!(c[o>>2]|0))break;c[z>>2]=g;c[A>>2]=(c[z>>2]|0)+8;c[B>>2]=c[A>>2];b=(c[o>>2]|0)+16|0;f=c[r>>2]|0;c[_>>2]=c[B>>2];c[s>>2]=b;c[v>>2]=f;f=c[_>>2]|0;c[R>>2]=c[s>>2];b=c[R>>2]|0;a=c[v>>2]|0;c[Y>>2]=f;c[t>>2]=b;c[w>>2]=a;a=c[w>>2]|0;c[i>>2]=c[t>>2];c[n>>2]=a;a=c[n>>2]|0;c[C>>2]=c[i>>2];c[q>>2]=a;a=c[C>>2]|0;c[D>>2]=c[q>>2];b=c[D>>2]|0;c[E>>2]=b;c[F>>2]=c[E>>2];f=c[F>>2]|0;c[G>>2]=f;c[H>>2]=c[G>>2];c[I>>2]=c[H>>2];if((d[(c[I>>2]|0)+11>>0]|0)&128|0){c[V>>2]=f;c[P>>2]=c[V>>2];c[K>>2]=c[P>>2];f=c[c[K>>2]>>2]|0}else{c[aa>>2]=f;c[T>>2]=c[aa>>2];c[N>>2]=c[T>>2];c[l>>2]=c[N>>2];c[u>>2]=c[l>>2];f=c[u>>2]|0}c[k>>2]=f;e=c[k>>2]|0;c[ba>>2]=b;f=c[ba>>2]|0;c[U>>2]=f;c[O>>2]=c[U>>2];c[J>>2]=c[O>>2];if((d[(c[J>>2]|0)+11>>0]|0)&128|0){c[W>>2]=f;c[Q>>2]=c[W>>2];c[L>>2]=c[Q>>2];f=c[(c[L>>2]|0)+4>>2]|0}else{c[$>>2]=f;c[S>>2]=c[$>>2];c[M>>2]=c[S>>2];f=d[(c[M>>2]|0)+11>>0]|0}c[Z>>2]=x;c[p>>2]=e;c[h>>2]=f;f=c[Z>>2]|0;c[f>>2]=c[p>>2];c[f+4>>2]=c[h>>2];a=(Cb(a,x)|0)<0;f=c[o>>2]|0;if(a)c[o>>2]=c[f+4>>2];else{c[m>>2]=f;c[o>>2]=c[c[o>>2]>>2]}}ba=c[m>>2]|0;c[X>>2]=y;c[j>>2]=ba;c[c[X>>2]>>2]=c[j>>2];ja=ca;return c[y>>2]|0}function Xb(e,f){e=e|0;f=f|0;var g=0,h=0,i=0;g=ja;ja=ja+16|0;i=g+4|0;h=g;c[i>>2]=e;c[h>>2]=f;e=c[i>>2]|0;a[e>>0]=a[c[h>>2]>>0]|0;f=e+1|0;i=(c[h>>2]|0)+1|0;a[f>>0]=a[i>>0]|0;a[f+1>>0]=a[i+1>>0]|0;a[f+2>>0]=a[i+2>>0]|0;a[f+3>>0]=a[i+3>>0]|0;a[f+4>>0]=a[i+4>>0]|0;a[f+5>>0]=a[i+5>>0]|0;a[f+6>>0]=a[i+6>>0]|0;a[f+7>>0]=a[i+7>>0]|0;a[e+1+8>>0]=0;f=e+10|0;i=(c[h>>2]|0)+9|0;a[f>>0]=a[i>>0]|0;a[f+1>>0]=a[i+1>>0]|0;a[f+2>>0]=a[i+2>>0]|0;a[e+10+3>>0]=0;a[e+14>>0]=a[(c[h>>2]|0)+12>>0]|0;a[e+15>>0]=a[(c[h>>2]|0)+13>>0]|0;a[e+16>>0]=a[(c[h>>2]|0)+14>>0]|0;a[e+17>>0]=a[(c[h>>2]|0)+15>>0]|0;c[e+20>>2]=d[(c[h>>2]|0)+16>>0]|0|(d[(c[h>>2]|0)+17>>0]|0)<<8|(d[(c[h>>2]|0)+18>>0]|0)<<16|(d[(c[h>>2]|0)+19>>0]|0)<<24;b[e+24>>1]=d[(c[h>>2]|0)+20>>0]|0|(d[(c[h>>2]|0)+21>>0]|0)<<8;b[e+26>>1]=d[(c[h>>2]|0)+22>>0]|0|(d[(c[h>>2]|0)+23>>0]|0)<<8;a[e+28>>0]=a[(c[h>>2]|0)+24>>0]|0;a[e+29>>0]=a[(c[h>>2]|0)+25>>0]|0;b[e+30>>1]=d[(c[h>>2]|0)+26>>0]|0|(d[(c[h>>2]|0)+27>>0]|0)<<8;b[e+32>>1]=d[(c[h>>2]|0)+28>>0]|0|(d[(c[h>>2]|0)+29>>0]|0)<<8;b[e+34>>1]=d[(c[h>>2]|0)+30>>0]|0|(d[(c[h>>2]|0)+31>>0]|0)<<8;a[e+36>>0]=a[(c[h>>2]|0)+32>>0]|0;c[e+40>>2]=d[(c[h>>2]|0)+33>>0]|0|(d[(c[h>>2]|0)+34>>0]|0)<<8|(d[(c[h>>2]|0)+35>>0]|0)<<16;ja=g;return}function Yb(b){b=b|0;var d=0,e=0;d=ja;ja=ja+16|0;e=d;c[e>>2]=b;b=c[e>>2]|0;Ac(b+4|0);c[b+4+136>>2]=b;c[b+4+140>>2]=41;c[b+4+144>>2]=2;c[b+4+148>>2]=42;c[b+4+152>>2]=3;c[b+4+156>>2]=43;a[b+4+21>>0]=2;a[b+4+7>>0]=0;a[b+4+20>>0]=0;c[b+4+120>>2]=3;a[b+4+15>>0]=0;a[b+4+16>>0]=0;a[b+4+19>>0]=0;a[b+4+18>>0]=0;a[b+4+17>>0]=1;ja=d;return}function Zb(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;k=ja;ja=ja+32|0;i=k+16|0;l=k+12|0;g=k+8|0;j=k+4|0;h=k;c[l>>2]=b;c[g>>2]=d;c[j>>2]=e;c[h>>2]=f;d=c[l>>2]|0;if(!(0<=(c[h>>2]|0)>>>0&(c[h>>2]|0)>>>0<2))y(28439,28466,99,28523);if(c[d+824+(c[h>>2]<<2)>>2]|0){l=c[d+824+(c[h>>2]<<2)>>2]|0;a[i>>0]=(qa[c[(c[l>>2]|0)+4>>2]&15](l,c[g>>2]|0,c[j>>2]|0,0)|0)&1;l=a[i>>0]|0;l=l&1;ja=k;return l|0}else{a[i>>0]=0;l=a[i>>0]|0;l=l&1;ja=k;return l|0}return 0}function _b(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;k=ja;ja=ja+32|0;i=k+16|0;l=k+12|0;g=k+8|0;j=k+4|0;h=k;c[l>>2]=b;c[g>>2]=d;c[j>>2]=e;c[h>>2]=f;d=c[l>>2]|0;if(!(0<=(c[h>>2]|0)>>>0&(c[h>>2]|0)>>>0<2))y(28439,28466,91,28518);if(c[d+824+(c[h>>2]<<2)>>2]|0){l=c[d+824+(c[h>>2]<<2)>>2]|0;a[i>>0]=(qa[c[(c[l>>2]|0)+8>>2]&15](l,c[g>>2]|0,c[j>>2]|0,0)|0)&1;l=a[i>>0]|0;l=l&1;ja=k;return l|0}else{a[i>>0]=0;l=a[i>>0]|0;l=l&1;ja=k;return l|0}return 0}function $b(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=ja;ja=ja+16|0;c[e+8>>2]=a;c[e+4>>2]=b;c[e>>2]=d;ja=e;return}function ac(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;e=ja;ja=ja+16|0;h=e+12|0;f=e+8|0;g=e+4|0;d=e;c[h>>2]=a;c[f>>2]=b;c[g>>2]=c[h>>2];a=c[g>>2]|0;qa[c[(c[a>>2]|0)+8>>2]&15](a,c[f>>2]|0,d,0)|0;ja=e;return c[d>>2]|0}function bc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=ja;ja=ja+16|0;i=e+12|0;g=e+8|0;f=e+4|0;h=e;c[i>>2]=a;c[g>>2]=b;c[f>>2]=d;c[h>>2]=c[i>>2];a=c[h>>2]|0;qa[c[(c[a>>2]|0)+4>>2]&15](a,c[g>>2]|0,c[f>>2]|0,0)|0;ja=e;return}function cc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;e=ja;ja=ja+16|0;h=e+12|0;f=e+8|0;g=e+4|0;d=e;c[h>>2]=a;c[f>>2]=b;c[g>>2]=c[h>>2];a=c[g>>2]|0;qa[c[(c[a>>2]|0)+8>>2]&15](a,c[f>>2]|0,d,1)|0;ja=e;return c[d>>2]|0}function dc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=ja;ja=ja+16|0;i=e+12|0;g=e+8|0;f=e+4|0;h=e;c[i>>2]=a;c[g>>2]=b;c[f>>2]=d;c[h>>2]=c[i>>2];a=c[h>>2]|0;qa[c[(c[a>>2]|0)+8>>2]&15](a,c[g>>2]|0,f,1)|0;ja=e;return}function ec(a,b){a=a|0;b=b|0;var d=0;d=ja;ja=ja+16|0;c[d+4>>2]=a;c[d>>2]=b;ja=d;return 56}function fc(a){a=a|0;var b=0,d=0,e=0;d=ja;ja=ja+16|0;e=d+4|0;b=d;c[e>>2]=a;a=c[e>>2]|0;gc(a);c[a>>2]=21284;xc(a+176|0);c[a+4+168>>2]=a+176;c[b>>2]=0;while(1){if((c[b>>2]|0)>=2)break;c[a+688+(c[b>>2]<<2)>>2]=32;c[b>>2]=(c[b>>2]|0)+1}c[b>>2]=0;while(1){if((c[b>>2]|0)>=2)break;c[a+824+(c[b>>2]<<2)>>2]=0;c[b>>2]=(c[b>>2]|0)+1}ja=d;return}function gc(a){a=a|0;var b=0,d=0;b=ja;ja=ja+16|0;d=b;c[d>>2]=a;c[c[d>>2]>>2]=21308;ja=b;return}function hc(a){a=a|0;var b=0;b=ja;ja=ja+16|0;c[b>>2]=a;ja=b;return}function ic(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=ja;ja=ja+16|0;f=d+4|0;e=d;c[f>>2]=a;c[e>>2]=b;Fc((c[f>>2]|0)+4|0,c[e>>2]|0)|0;ja=d;return}function jc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;h=ja;ja=ja+16|0;g=h+8|0;e=h+4|0;f=h;c[g>>2]=a;c[e>>2]=b;c[f>>2]=d;if(0<=(c[f>>2]|0)&(c[f>>2]|0)<2){c[(c[g>>2]|0)+824+(c[f>>2]<<2)>>2]=c[e>>2];ja=h;return}else y(28439,28466,107,28547)}function kc(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=ja;ja=ja+32|0;m=l+20|0;h=l+16|0;j=l+12|0;g=l+8|0;i=l+4|0;k=l;c[m>>2]=b;c[h>>2]=d;c[j>>2]=e;c[g>>2]=f;f=c[m>>2]|0;c[i>>2]=0;while(1){if((c[i>>2]|0)>>>0>=(c[j>>2]|0)>>>0)break;m=c[f+824>>2]|0;qa[c[(c[m>>2]|0)+8>>2]&15](m,(c[g>>2]|0)+(c[i>>2]|0)|0,k,0)|0;a[(c[h>>2]|0)+(c[i>>2]|0)>>0]=c[k>>2];c[i>>2]=(c[i>>2]|0)+1}ja=l;return}function lc(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;k=ja;ja=ja+32|0;l=k+16|0;h=k+12|0;j=k+8|0;g=k+4|0;i=k;c[l>>2]=a;c[h>>2]=b;c[j>>2]=e;c[g>>2]=f;f=c[l>>2]|0;c[i>>2]=0;while(1){if((c[i>>2]|0)>>>0>=(c[j>>2]|0)>>>0)break;l=c[f+824>>2]|0;qa[c[(c[l>>2]|0)+4>>2]&15](l,(c[g>>2]|0)+(c[i>>2]|0)|0,d[(c[h>>2]|0)+(c[i>>2]|0)>>0]|0,0)|0;c[i>>2]=(c[i>>2]|0)+1}ja=k;return}function mc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=ja;ja=ja+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;c[(c[e>>2]|0)+4+28>>2]=c[f>>2]&65535;ja=d;return}function nc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=ja;ja=ja+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;c[(c[e>>2]|0)+4+32>>2]=c[f>>2]&65535;ja=d;return}function oc(a){a=a|0;var b=0,d=0;d=ja;ja=ja+16|0;b=d;c[b>>2]=a;ja=d;return c[(c[b>>2]|0)+4+32>>2]|0}function pc(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;i=ja;ja=ja+16|0;g=i+8|0;f=i+4|0;h=i;c[g>>2]=b;c[f>>2]=d;c[h>>2]=e;if(0<=(c[f>>2]|0)&(c[f>>2]|0)<26){a[(c[g>>2]|0)+4+(c[f>>2]|0)>>0]=c[h>>2];ja=i;return}else y(28557,28466,172,28583)}function qc(a,b){a=a|0;b=b|0;var e=0,f=0,g=0;g=ja;ja=ja+16|0;f=g+4|0;e=g;c[f>>2]=a;c[e>>2]=b;if(0<=(c[e>>2]|0)&(c[e>>2]|0)<26){ja=g;return d[(c[f>>2]|0)+4+(c[e>>2]|0)>>0]|0|0}else y(28557,28466,177,28592);return 0}function rc(a){a=a|0;var b=0,d=0;b=ja;ja=ja+16|0;d=b;c[d>>2]=a;AD((c[d>>2]|0)+4|0,0,65536)|0;ja=b;return}function sc(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;g=ja;ja=ja+16|0;i=g+12|0;h=g+8|0;j=g+4|0;c[i>>2]=b;c[h>>2]=d;c[j>>2]=e;c[g>>2]=f;a[(c[i>>2]|0)+4+(c[h>>2]&65535)>>0]=c[j>>2];ja=g;return 1}function tc(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;g=ja;ja=ja+16|0;j=g+12|0;i=g+8|0;h=g+4|0;c[j>>2]=a;c[i>>2]=b;c[h>>2]=e;c[g>>2]=f;c[c[h>>2]>>2]=d[(c[j>>2]|0)+4+(c[i>>2]&65535)>>0];ja=g;return 1}function uc(a){a=a|0;var b=0,d=0;b=ja;ja=ja+16|0;d=b;c[d>>2]=a;a=c[d>>2]|0;gc(a);c[a>>2]=21332;ja=b;return}function vc(a){a=a|0;var b=0;b=ja;ja=ja+16|0;c[b>>2]=a;ja=b;return}function wc(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;h=ja;ja=ja+16|0;j=h+12|0;i=h+8|0;f=h+4|0;g=h;c[j>>2]=a;c[i>>2]=b;c[f>>2]=d;c[g>>2]=e;d=(c[j>>2]|0)+4+(c[f>>2]|0)|0;b=c[i>>2]|0;if(((c[f>>2]|0)+(c[g>>2]|0)|0)>>>0<65536){yD(d|0,b|0,c[g>>2]|0)|0;ja=h;return 1}else{yD(d|0,b|0,65536-(c[f>>2]|0)|0)|0;ja=h;return 1}return 0}function xc(b){b=b|0;var d=0,e=0;a[b+14>>0]=0;a[b+30>>0]=0;a[b+46>>0]=0;a[b+62>>0]=0;a[b+78>>0]=0;a[b+94>>0]=0;a[b+110>>0]=0;a[b+126>>0]=0;a[b+142>>0]=0;a[b+158>>0]=0;a[b+174>>0]=0;a[b+190>>0]=0;a[b+206>>0]=0;a[b+222>>0]=0;a[b+238>>0]=0;a[b+254>>0]=0;a[b+270>>0]=0;a[b+286>>0]=0;a[b+302>>0]=0;a[b+318>>0]=0;a[b+334>>0]=0;a[b+350>>0]=0;a[b+366>>0]=0;a[b+382>>0]=0;a[b+398>>0]=0;a[b+414>>0]=0;a[b+430>>0]=0;a[b+446>>0]=0;a[b+462>>0]=0;a[b+478>>0]=0;a[b+494>>0]=0;a[b+510>>0]=0;c[b+8>>2]=0;a[b+14>>0]=0;c[b+8>>2]=0;a[b+13>>0]=0;a[b+12>>0]=0;d=1;do{a[b+(d<<4)+14>>0]=a[b+(d<<4)+14>>0]&127;c[b+(d<<4)+8>>2]=0;e=d&255;a[b+(d<<4)+13>>0]=e;a[b+(d<<4)+12>>0]=e;d=d+1|0}while((d|0)!=32);return}function yc(a,b,e){a=a|0;b=b|0;e=e|0;if(!b)b=d[a+13>>0]|0;b=c[a+(b<<4)+8>>2]|0;if(!b){e=0;return e|0}if(!e){e=1;return e|0}c[e>>2]=b-(c[a+8>>2]|0);e=1;return e|0}function zc(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;k=b+8|0;f=(c[k>>2]|0)+e|0;c[k>>2]=f;j=b+13|0;e=a[j>>0]|0;if(!(e<<24>>24)){c[k>>2]=0;return}g=c[b+((e&255)<<4)+8>>2]|0;if((g+-1|0)>>>0>=f>>>0)return;h=e;i=g;while(1){e=h&255;h=h<<24>>24==0;if(!h){g=e;while(1){m=b+(g<<4)+14|0;a[m>>0]=a[m>>0]&-4;g=a[b+(g<<4)+13>>0]|0;if(!(g<<24>>24))break;else g=g&255}c[k>>2]=f-i;if(!h){h=e;while(1){g=b+(h<<4)+8|0;f=c[g>>2]|0;if(f|0?(m=f-i|0,c[g>>2]=m,l=b+(h<<4)+14|0,(m|0)==0):0)a[l>>0]=a[l>>0]|1;f=a[b+(h<<4)+13>>0]|0;if(!(f<<24>>24))break;else h=f&255}while(1){g=b+(e<<4)+14|0;f=d[g>>0]|0;if((f&2|0)==0?(a[g>>0]=f|2,(f&1|0)!=0):0){Aa[c[b+(e<<4)+4>>2]&7](b,e,c[b+(e<<4)>>2]|0);e=0}e=a[b+(e<<4)+13>>0]|0;if(!(e<<24>>24))break;else e=e&255}}}else c[k>>2]=f-i;h=a[j>>0]|0;i=c[b+((h&255)<<4)+8>>2]|0;if(!i){e=22;break}f=c[k>>2]|0;if(f>>>0<i>>>0){e=22;break}}if((e|0)==22)return}function Ac(b){b=b|0;Dc(b);c[b+120>>2]=1;a[b+21>>0]=0;a[b+22>>0]=1;a[b+23>>0]=1;c[b+76>>2]=11376;c[b+80>>2]=12400;c[b+84>>2]=8512;c[b+88>>2]=9536;c[b+128>>2]=44;c[b+132>>2]=4;return}function Bc(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0;g=a+72|0;e=(c[g>>2]|0)+(d[a+22>>0]|0)|0;c[g>>2]=e;h=a+92|0;f=b&65280;if((c[h>>2]|0)!=(f|0)){c[h>>2]=f;c[g>>2]=e+1}return oa[c[a+140>>2]&63](c[a+136>>2]|0,b)|0}function Cc(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,i=0;h=a+72|0;f=(c[h>>2]|0)+(d[a+22>>0]|0)|0;c[h>>2]=f;i=a+92|0;g=b&65280;if((c[i>>2]|0)!=(g|0)){c[i>>2]=g;c[h>>2]=f+1}Aa[c[a+144>>2]&7](c[a+136>>2]|0,b,e);return}function Dc(d){d=d|0;var e=0,f=0,g=0;a[d+25>>0]=0;a[d+24>>0]=0;e=d+15|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;b[d+12>>1]=0;a[e>>0]=0;a[e+1>>0]=0;a[e+2>>0]=0;a[e+3>>0]=0;a[e+4>>0]=0;a[e+5>>0]=0;a[e+6>>0]=0;a[d+22>>0]=3;a[d+23>>0]=4;c[d+92>>2]=0;c[d+116>>2]=0;c[d+120>>2]=0;e=d+124|0;f=d+28|0;g=f+48|0;do{c[f>>2]=0;f=f+4|0}while((f|0)<(g|0));c[e>>2]=71;c[d+168>>2]=0;c[d+160>>2]=0;c[d+164>>2]=0;return}function Ec(a){a=a|0;var b=0;b=a+60|0;a=oa[c[a+128>>2]&63](a,c[b>>2]|0)|0;c[b>>2]=(c[b>>2]|0)+1&65535;return a|0}\nfunction um(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=ja;ja=ja+16|0;g=f+8|0;h=f;a=fh(a,24)|0;dg(h,b);d=c[d>>2]|0;e=c[e>>2]|0;c[g>>2]=c[h>>2];c[g+4>>2]=c[h+4>>2];Qk(a,g,d,e);ja=f;return a|0}function vm(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;b=fh(b,16)|0;wm(b,c[d>>2]|0,(a[e>>0]|0)!=0,(a[f>>0]|0)!=0);return b|0}function wm(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;hh(b,52,1,1,1);c[b>>2]=23352;c[b+8>>2]=d;a[b+12>>0]=e&1;a[b+13>>0]=f&1;return}function xm(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;i=ja;ja=ja+32|0;h=i+24|0;e=i+16|0;f=i+8|0;g=i;if(a[b+12>>0]|0){dg(e,31483);c[h>>2]=c[e>>2];c[h+4>>2]=c[e+4>>2];sh(d,h)}dg(f,32279);c[h>>2]=c[f>>2];c[h+4>>2]=c[f+4>>2];sh(d,h);if(a[b+13>>0]|0){dg(g,32286);c[h>>2]=c[g>>2];c[h+4>>2]=c[g+4>>2];sh(d,h)}Mf(c[b+8>>2]|0,d);ja=i;return}function ym(a){a=a|0;Gf(a);return}function zm(a,b,c){a=a|0;b=b|0;c=c|0;return Fm(a+368|0,b,c)|0}function Am(a,b,c){a=a|0;b=b|0;c=c|0;return Bm(a+368|0,b,c)|0}function Bm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=ja;ja=ja+16|0;f=e+8|0;g=e;a=fh(a,20)|0;b=c[b>>2]|0;i=d;h=c[i+4>>2]|0;d=g;c[d>>2]=c[i>>2];c[d+4>>2]=h;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];Cm(a,b,f);ja=e;return a|0}function Cm(a,b,d){a=a|0;b=b|0;d=d|0;hh(a,55,1,1,1);c[a>>2]=23396;c[a+8>>2]=b;b=c[d+4>>2]|0;a=a+12|0;c[a>>2]=c[d>>2];c[a+4>>2]=b;return}function Dm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=ja;ja=ja+32|0;e=d+24|0;h=d+16|0;g=d+8|0;f=d;dg(h,29753);c[e>>2]=c[h>>2];c[e+4>>2]=c[h+4>>2];sh(b,e);Mf(c[a+8>>2]|0,b);dg(g,32340);c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];sh(b,e);wi(a+12|0,b);dg(f,29749);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);ja=d;return}function Em(a){a=a|0;Gf(a);return}function Fm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=ja;ja=ja+16|0;f=e+8|0;g=e;a=fh(a,20)|0;b=c[b>>2]|0;i=d;h=c[i+4>>2]|0;d=g;c[d>>2]=c[i>>2];c[d+4>>2]=h;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];Cm(a,b,f);ja=e;return a|0}function Gm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=ja;ja=ja+16|0;f=e+8|0;g=e;a=fh(a,20)|0;b=c[b>>2]|0;i=d;h=c[i+4>>2]|0;d=g;c[d>>2]=c[i>>2];c[d+4>>2]=h;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];Hm(a,b,f);ja=e;return a|0}function Hm(a,b,d){a=a|0;b=b|0;d=d|0;hh(a,50,1,1,1);c[a>>2]=23440;c[a+8>>2]=b;b=c[d+4>>2]|0;a=a+12|0;c[a>>2]=c[d>>2];c[a+4>>2]=b;return}function Im(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=ja;ja=ja+32|0;e=d+16|0;g=d+8|0;f=d;Mf(c[a+8>>2]|0,b);dg(g,29753);c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];sh(b,e);wi(a+12|0,b);dg(f,29749);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);ja=d;return}function Jm(a){a=a|0;Gf(a);return}function Km(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=ja;ja=ja+16|0;g=f+8|0;h=f;a=fh(a,24)|0;dg(h,b);d=c[d>>2]|0;e=c[e>>2]|0;c[g>>2]=c[h>>2];c[g+4>>2]=c[h+4>>2];Qk(a,g,d,e);ja=f;return a|0}function Lm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=ja;ja=ja+32|0;g=f+24|0;h=f+16|0;j=f+8|0;i=f;a=fh(a,28)|0;dg(j,b);d=c[d>>2]|0;dg(i,e);c[h>>2]=c[j>>2];c[h+4>>2]=c[j+4>>2];c[g>>2]=c[i>>2];c[g+4>>2]=c[i+4>>2];Ck(a,h,d,g);ja=f;return a|0}function Mm(a,b,c){a=a|0;b=b|0;c=c|0;return Nm(a+368|0,b,c)|0}function Nm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=ja;ja=ja+16|0;f=e+8|0;g=e;a=fh(a,20)|0;i=b;h=c[i+4>>2]|0;b=g;c[b>>2]=c[i>>2];c[b+4>>2]=h;d=c[d>>2]|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];Om(a,f,d);ja=e;return a|0}function Om(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;hh(a,53,1,1,1);c[a>>2]=23484;f=b;e=c[f+4>>2]|0;b=a+8|0;c[b>>2]=c[f>>2];c[b+4>>2]=e;c[a+16>>2]=d;return}function Pm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;d=ja;ja=ja+32|0;e=d+24|0;h=d;g=d+16|0;f=d+8|0;k=a+8|0;j=c[k+4>>2]|0;i=h;c[i>>2]=c[k>>2];c[i+4>>2]=j;c[e>>2]=c[h>>2];c[e+4>>2]=c[h+4>>2];sh(b,e);dg(g,29753);c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];sh(b,e);Mf(c[a+16>>2]|0,b);dg(f,29749);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);ja=d;return}function Qm(a){a=a|0;Gf(a);return}function Rm(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return Sm(a+368|0,b,c,d)|0}function Sm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=ja;ja=ja+16|0;g=f+8|0;h=f;a=fh(a,24)|0;b=c[b>>2]|0;j=d;i=c[j+4>>2]|0;d=h;c[d>>2]=c[j>>2];c[d+4>>2]=i;e=c[e>>2]|0;c[g>>2]=c[h>>2];c[g+4>>2]=c[h+4>>2];Tm(a,b,g,e);ja=f;return a|0}function Tm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;hh(a,42,1,1,1);c[a>>2]=23528;c[a+8>>2]=b;f=d;d=c[f+4>>2]|0;b=a+12|0;c[b>>2]=c[f>>2];c[b+4>>2]=d;c[a+20>>2]=e;return}function Um(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;m=ja;ja=ja+64|0;i=m+56|0;e=m+48|0;j=m+40|0;k=m+32|0;l=m;f=m+24|0;g=m+16|0;h=m+8|0;d=a+12|0;dg(i,29828);if(ci(d,i)|0){dg(e,29753);c[i>>2]=c[e>>2];c[i+4>>2]=c[e+4>>2];sh(b,i)}dg(j,29753);c[i>>2]=c[j>>2];c[i+4>>2]=c[j+4>>2];sh(b,i);Mf(c[a+8>>2]|0,b);dg(k,32496);c[i>>2]=c[k>>2];c[i+4>>2]=c[k+4>>2];sh(b,i);e=d;j=c[e+4>>2]|0;k=l;c[k>>2]=c[e>>2];c[k+4>>2]=j;c[i>>2]=c[l>>2];c[i+4>>2]=c[l+4>>2];sh(b,i);dg(f,32499);c[i>>2]=c[f>>2];c[i+4>>2]=c[f+4>>2];sh(b,i);Mf(c[a+20>>2]|0,b);dg(g,29749);c[i>>2]=c[g>>2];c[i+4>>2]=c[g+4>>2];sh(b,i);dg(i,29828);if(ci(d,i)|0){dg(h,29749);c[i>>2]=c[h>>2];c[i+4>>2]=c[h+4>>2];sh(b,i)}ja=m;return}function Vm(a){a=a|0;Gf(a);return}function Wm(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Xm(a+368|0,b,c,d,e)|0}function Xm(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=ja;ja=ja+16|0;i=h+8|0;j=h;b=fh(b,28)|0;d=(a[d>>0]|0)!=0;l=e;k=c[l+4>>2]|0;e=j;c[e>>2]=c[l>>2];c[e+4>>2]=k;f=c[f>>2]|0;g=c[g>>2]|0;c[i>>2]=c[j>>2];c[i+4>>2]=c[j+4>>2];Ym(b,d,i,f,g);ja=h;return b|0}function Ym(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;hh(b,57,1,1,1);c[b>>2]=23572;c[b+8>>2]=f;c[b+12>>2]=g;g=e;e=c[g+4>>2]|0;f=b+16|0;c[f>>2]=c[g>>2];c[f+4>>2]=e;a[b+24>>0]=d&1;return}function Zm(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;m=ja;ja=ja+64|0;l=m+56|0;h=m+40|0;f=m+24|0;j=m+48|0;k=m+16|0;e=m+8|0;g=m+32|0;i=m;c[h>>2]=d;c[h+4>>2]=b;Nf(d,40);if(!(a[b+24>>0]|0)){$m(h);Nf(d,32);f=b+16|0;h=f;j=c[h+4>>2]|0;k=e;c[k>>2]=c[h>>2];c[k+4>>2]=j;c[l>>2]=c[e>>2];c[l+4>>2]=c[e+4>>2];sh(d,l);dg(g,32647);c[l>>2]=c[g>>2];c[l+4>>2]=c[g+4>>2];sh(d,l);e=b+12|0;if(c[e>>2]|0){Nf(d,32);j=f;k=c[j+4>>2]|0;b=i;c[b>>2]=c[j>>2];c[b+4>>2]=k;c[l>>2]=c[i>>2];c[l+4>>2]=c[i+4>>2];sh(d,l);Nf(d,32);Mf(c[e>>2]|0,d)}}else{e=c[b+12>>2]|0;if(!e)e=b+16|0;else{Mf(e,d);Nf(d,32);e=b+16|0;g=e;i=c[g+4>>2]|0;b=f;c[b>>2]=c[g>>2];c[b+4>>2]=i;c[l>>2]=c[f>>2];c[l+4>>2]=c[f+4>>2];sh(d,l);Nf(d,32)}dg(j,32642);c[l>>2]=c[j>>2];c[l+4>>2]=c[j+4>>2];sh(d,l);i=e;j=c[i+4>>2]|0;b=k;c[b>>2]=c[i>>2];c[b+4>>2]=j;c[l>>2]=c[k>>2];c[l+4>>2]=c[k+4>>2];sh(d,l);Nf(d,32);$m(h)}Nf(d,41);ja=m;return}function _m(a){a=a|0;Gf(a);return}function $m(a){a=a|0;var b=0,d=0,e=0;b=ja;ja=ja+16|0;d=b;e=c[a+4>>2]|0;Nf(c[a>>2]|0,40);Jk(d,c[e+8>>2]|0);Mf(d,c[a>>2]|0);Nf(c[a>>2]|0,41);ja=b;return}function an(a){a=a|0;var b=0,d=0;d=ja;ja=ja+16|0;b=d;c[b>>2]=0;if(lg(a,114)|0)gn(b,4);if(lg(a,86)|0)gn(b,2);if(lg(a,75)|0)gn(b,1);ja=d;return c[b>>2]|0}function bn(a,b){a=a|0;b=b|0;return cn(a+368|0,b)|0}function cn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;a=fh(a,16)|0;h=b;g=c[h+4>>2]|0;b=f;c[b>>2]=c[h>>2];c[b+4>>2]=g;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];dn(a,e);ja=d;return a|0}function dn(a,b){a=a|0;b=b|0;var d=0;hh(a,54,1,1,1);c[a>>2]=23616;d=b;b=c[d+4>>2]|0;a=a+8|0;c[a>>2]=c[d>>2];c[a+4>>2]=b;return}function en(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=ja;ja=ja+32|0;e=d+16|0;h=d+8|0;f=d;dg(h,32696);c[e>>2]=c[h>>2];c[e+4>>2]=c[h+4>>2];sh(b,e);h=a+8|0;g=c[h+4>>2]|0;a=f;c[a>>2]=c[h>>2];c[a+4>>2]=g;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);ja=d;return}function fn(a){a=a|0;Gf(a);return}function gn(a,b){a=a|0;b=b|0;c[a>>2]=c[a>>2]|b;return}function hn(a){a=a|0;var b=0;b=a+12|0;c[a>>2]=b;c[a+4>>2]=b;c[a+8>>2]=a+44;return}function jn(a,b){a=a|0;b=b|0;return on(a+368|0,b)|0}function kn(a,b){a=a|0;b=b|0;var d=0,e=0;e=a+4|0;d=c[e>>2]|0;if((d|0)==(c[a+8>>2]|0)){nn(a,(mn(a)|0)<<1);d=c[e>>2]|0}b=c[b>>2]|0;c[e>>2]=d+4;c[d>>2]=b;return}function ln(a,b){a=a|0;b=b|0;return (Yi(a)|0)+(b<<2)|0}function mn(a){a=a|0;return (c[a+4>>2]|0)-(c[a>>2]|0)>>2|0}function nn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;h=mn(a)|0;do if(!(Xf(a)|0)){e=kD(c[a>>2]|0,b<<2)|0;c[a>>2]=e;if(!e)$f();else{f=e;d=a+4|0;break}}else{f=iD(b<<2)|0;if(!f)$f();e=c[a>>2]|0;d=a+4|0;g=(c[d>>2]|0)-e|0;if(g|0)zD(f|0,e|0,g|0)|0;c[a>>2]=f}while(0);c[d>>2]=f+(h<<2);c[a+8>>2]=f+(b<<2);return}function on(a,b){a=a|0;b=b|0;a=fh(a,20)|0;pn(a,c[b>>2]|0);return a|0}function pn(b,d){b=b|0;d=d|0;hh(b,31,2,2,2);c[b>>2]=23660;c[b+8>>2]=d;c[b+12>>2]=0;a[b+16>>0]=0;return}function qn(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;g=ja;ja=ja+16|0;f=g;e=b+16|0;if(!(a[e>>0]|0)){Ph(f,e,1);e=Vh(c[b+12>>2]|0,d)|0;Th(f)}else e=0;ja=g;return e|0}function rn(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;g=ja;ja=ja+16|0;f=g;e=b+16|0;if(!(a[e>>0]|0)){Ph(f,e,1);e=Rh(c[b+12>>2]|0,d)|0;Th(f)}else e=0;ja=g;return e|0}function sn(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;g=ja;ja=ja+16|0;f=g;e=b+16|0;if(!(a[e>>0]|0)){Ph(f,e,1);e=Sh(c[b+12>>2]|0,d)|0;Th(f)}else e=0;ja=g;return e|0}function tn(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;g=ja;ja=ja+16|0;f=g;e=b+16|0;if(!(a[e>>0]|0)){Ph(f,e,1);b=c[b+12>>2]|0;b=oa[c[(c[b>>2]|0)+12>>2]&63](b,d)|0;Th(f)}ja=g;return b|0}function un(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;g=ja;ja=ja+16|0;f=g;e=b+16|0;if(!(a[e>>0]|0)){Ph(f,e,1);b=c[b+12>>2]|0;za[c[(c[b>>2]|0)+16>>2]&127](b,d);Th(f)}ja=g;return}function vn(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;g=ja;ja=ja+16|0;f=g;e=b+16|0;if(!(a[e>>0]|0)){Ph(f,e,1);b=c[b+12>>2]|0;za[c[(c[b>>2]|0)+20>>2]&127](b,d);Th(f)}ja=g;return}function wn(a){a=a|0;Gf(a);return}function xn(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;j=ja;ja=ja+16|0;g=j+4|0;h=j;lg(b,76)|0;switch((hg(b,0)|0)<<24>>24){case 78:{e=Dn(fg(b)|0,d)|0;break}case 90:{e=En(fg(b)|0,d)|0;break}case 83:{if((hg(b,1)|0)<<24>>24==116)i=13;else{e=fg(b)|0;f=Vg(e)|0;c[g>>2]=f;if((f|0)!=0?(hg(b,0)|0)<<24>>24==73:0){f=(d|0)!=0;e=Pg(e,f)|0;c[h>>2]=e;if(!e)e=0;else{if(f)a[d+1>>0]=1;e=Qg(b,g,h)|0}}else e=0}break}default:i=13}if((i|0)==13){f=fg(b)|0;e=Fn(f,d)|0;c[g>>2]=e;if(e){if((hg(b,0)|0)<<24>>24==73){Wg(b+148|0,g);e=(d|0)!=0;i=Pg(f,e)|0;c[h>>2]=i;if(!i)e=0;else{if(e)a[d+1>>0]=1;e=Qg(b,g,h)|0}}}else e=0}ja=j;return e|0}function yn(a,b,c){a=a|0;b=b|0;c=c|0;return zn(a+368|0,b,c)|0}function zn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=ja;ja=ja+16|0;f=e+8|0;g=e;a=fh(a,20)|0;i=b;h=c[i+4>>2]|0;b=g;c[b>>2]=c[i>>2];c[b+4>>2]=h;d=c[d>>2]|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];An(a,f,d);ja=e;return a|0}function An(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;hh(a,6,1,1,1);c[a>>2]=23704;f=b;e=c[f+4>>2]|0;b=a+8|0;c[b>>2]=c[f>>2];c[b+4>>2]=e;c[a+16>>2]=d;return}function Bn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;i=a+8|0;h=c[i+4>>2]|0;g=f;c[g>>2]=c[i>>2];c[g+4>>2]=h;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);Nf(b,32);Mf(c[a+16>>2]|0,b);ja=d;return}function Cn(a){a=a|0;Gf(a);return}function Dn(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;m=ja;ja=ja+48|0;k=m+32|0;j=m+20|0;i=m+24|0;h=m+8|0;g=m;c[j>>2]=d;if(lg(b,78)|0){e=an(b)|0;f=(d|0)==0;if(!f)c[d+4>>2]=e;do if(lg(b,79)|0){if(!f)a[d+8>>0]=2}else{e=(d|0)!=0;if(lg(b,82)|0){if(!e)break;a[d+8>>0]=1;break}else{if(!e)break;a[d+8>>0]=0;break}}while(0);c[i>>2]=0;c[h>>2]=b;c[h+4>>2]=i;c[h+8>>2]=j;dg(g,32903);c[k>>2]=c[g>>2];c[k+4>>2]=c[g+4>>2];if(eg(b,k)|0)c[i>>2]=yg(b,33221)|0;f=b+148|0;a:while(1){if(lg(b,69)|0){l=41;break}lg(b,76)|0;b:do if(lg(b,77)|0){if(!(c[i>>2]|0)){e=0;break a}}else{c:do switch((hg(b,0)|0)<<24>>24){case 84:{if(!(io(h,Og(fg(b)|0)|0)|0)){e=0;break a}Wg(f,i);break b}case 73:{g=Pg(fg(b)|0,(c[j>>2]|0)!=0)|0;c[k>>2]=g;if((g|0)==0|(c[i>>2]|0)==0){l=26;break a}c[i>>2]=Qg(b,i,k)|0;e=c[j>>2]|0;if(e|0)a[e+1>>0]=1;Wg(f,i);break b}case 68:{switch((hg(b,1)|0)<<24>>24){case 67:{l=39;break c}case 84:case 116:break;default:break c}if(!(io(h,Ig(fg(b)|0)|0)|0)){e=0;break a}Wg(f,i);break b}case 83:{if((hg(b,1)|0)<<24>>24==116)l=39;else{e=Vg(fg(b)|0)|0;c[k>>2]=e;if(!(io(h,e)|0)){l=44;break a}if((c[i>>2]|0)!=(e|0))Wg(f,k);break b}break}case 67:break;default:l=39}while(0);if((l|0)==39){l=0;g=fg(b)|0;if(!(io(h,Gn(g,c[j>>2]|0)|0)|0)){e=0;break a}Wg(f,i);break}if(!(c[i>>2]|0)){e=0;break a}e=fg(b)|0;if(!(io(h,jo(e,i,c[j>>2]|0)|0)|0)){e=0;break a}g=_g(e,c[i>>2]|0)|0;c[i>>2]=g;if(!g){e=0;break a}Wg(f,i)}while(0)}if((l|0)==26)e=0;else if((l|0)==41)if((c[i>>2]|0)!=0?!($g(f)|0):0){ko(f);e=c[i>>2]|0}else e=0;else if((l|0)==44)e=0}else e=0;ja=m;return e|0}function En(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;g=ja;ja=ja+16|0;d=g+8|0;e=g;if(lg(a,90)|0){f=fg(a)|0;h=gg(f)|0;c[d>>2]=h;do if((h|0)!=0?lg(a,69)|0:0){if(lg(a,115)|0){c[a>>2]=bo(c[a>>2]|0,c[a+4>>2]|0)|0;c[e>>2]=xg(a,33161)|0;d=co(a,d,e)|0;break}if(!(lg(a,100)|0)){h=xn(f,b)|0;c[e>>2]=h;if(!h)d=0;else{c[a>>2]=bo(c[a>>2]|0,c[a+4>>2]|0)|0;d=co(a,d,e)|0}break}mg(e,a,1);if(lg(a,95)|0){h=xn(f,b)|0;c[e>>2]=h;if(!h)d=0;else d=co(a,d,e)|0}else d=0}else d=0;while(0)}else d=0;ja=g;return d|0}function Fn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;f=ja;ja=ja+32|0;e=f+16|0;g=f+8|0;d=f;dg(g,32899);c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];if(!(eg(a,e)|0)?(dg(d,32903),c[e>>2]=c[d>>2],c[e+4>>2]=c[d+4>>2],!(eg(a,e)|0)):0)b=Gn(fg(a)|0,b)|0;else{g=Gn(fg(a)|0,b)|0;c[e>>2]=g;if(!g)b=0;else b=Hn(a,e)|0}ja=f;return b|0}function Gn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;h=ja;ja=ja+16|0;g=h+8|0;d=h;e=hg(a,0)|0;do if(e<<24>>24!=85){if((e+-49&255)<9){b=ll(fg(a)|0)|0;f=12;break}dg(d,32965);c[g>>2]=c[d>>2];c[g+4>>2]=c[d+4>>2];if(!(eg(a,g)|0)){b=Zl(fg(a)|0,b)|0;f=12;break}b=a+8|0;e=Xg(b)|0;while(1){d=fg(a)|0;f=ll(d)|0;c[g>>2]=f;if(!f){f=10;break}Wg(b,g);if(lg(a,69)|0){f=9;break}}if((f|0)==9){qi(g,a,e);b=On(a,g)|0;f=14;break}else if((f|0)==10){b=0;break}}else{b=Nn(fg(a)|0)|0;f=12}while(0);if((f|0)==12)if(!b)b=0;else{d=fg(a)|0;f=14}if((f|0)==14)b=_g(d,b)|0;ja=h;return b|0}function Hn(a,b){a=a|0;b=b|0;return In(a+368|0,b)|0}function In(a,b){a=a|0;b=b|0;a=fh(a,12)|0;Jn(a,c[b>>2]|0);return a|0}function Jn(a,b){a=a|0;b=b|0;hh(a,34,1,1,1);c[a>>2]=23748;c[a+8>>2]=b;return}function Kn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;dg(f,32906);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);Mf(c[a+8>>2]|0,b);ja=d;return}function Ln(a,b){a=a|0;b=b|0;b=c[b+8>>2]|0;za[c[(c[b>>2]|0)+24>>2]&127](a,b);return}function Mn(a){a=a|0;Gf(a);return}function Nn(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;i=ja;ja=ja+48|0;g=i+40|0;e=i+32|0;b=i+24|0;f=i;h=i+8|0;d=i+16|0;dg(e,33026);c[g>>2]=c[e>>2];c[g+4>>2]=c[e+4>>2];if(!(eg(a,g)|0)){dg(b,33029);c[g>>2]=c[b>>2];c[g+4>>2]=c[b+4>>2];if(eg(a,g)|0){_k(f);Ph(h,a+362|0,1);dg(d,33032);c[g>>2]=c[d>>2];c[g+4>>2]=c[d+4>>2];do if(!(eg(a,g)|0)){b=a+8|0;d=Xg(b)|0;while(1){e=pg(fg(a)|0)|0;c[g>>2]=e;if(!e){e=11;break}Wg(b,g);if(lg(a,69)|0){e=10;break}}if((e|0)==10){qi(f,a,d);e=12;break}else if((e|0)==11){b=0;break}}else e=12;while(0);if((e|0)==12){mg(g,a,0);if(lg(a,95)|0)b=Un(a,f,g)|0;else b=0}Th(h)}else b=0}else{mg(g,a,0);if(lg(a,95)|0)b=Tn(a,g)|0;else b=0}ja=i;return b|0}function On(a,b){a=a|0;b=b|0;return Pn(a+368|0,b)|0}function Pn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;a=fh(a,16)|0;h=b;g=c[h+4>>2]|0;b=f;c[b>>2]=c[h>>2];c[b+4>>2]=g;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];Qn(a,e);ja=d;return a|0}function Qn(a,b){a=a|0;b=b|0;var d=0;hh(a,41,1,1,1);c[a>>2]=23792;d=b;b=c[d+4>>2]|0;a=a+8|0;c[a>>2]=c[d>>2];c[a+4>>2]=b;return}function Rn(a,b){a=a|0;b=b|0;Nf(b,91);wi(a+8|0,b);Nf(b,93);return}function Sn(a){a=a|0;Gf(a);return}function Tn(a,b){a=a|0;b=b|0;return Zn(a+368|0,b)|0}function Un(a,b,c){a=a|0;b=b|0;c=c|0;return Vn(a+368|0,b,c)|0}function Vn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=ja;ja=ja+32|0;f=e+24|0;g=e+16|0;i=e+8|0;h=e;a=fh(a,24)|0;k=b;b=c[k+4>>2]|0;j=i;c[j>>2]=c[k>>2];c[j+4>>2]=b;j=d;b=c[j+4>>2]|0;d=h;c[d>>2]=c[j>>2];c[d+4>>2]=b;c[g>>2]=c[i>>2];c[g+4>>2]=c[i+4>>2];c[f>>2]=c[h>>2];c[f+4>>2]=c[h+4>>2];Wn(a,g,f);ja=e;return a|0}function Wn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;hh(a,40,1,1,1);c[a>>2]=23836;f=b;e=c[f+4>>2]|0;b=a+8|0;c[b>>2]=c[f>>2];c[b+4>>2]=e;b=c[d+4>>2]|0;a=a+16|0;c[a>>2]=c[d>>2];c[a+4>>2]=b;return}function Xn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;d=ja;ja=ja+48|0;e=d+32|0;k=d+24|0;h=d;g=d+16|0;f=d+8|0;dg(k,33035);c[e>>2]=c[k>>2];c[e+4>>2]=c[k+4>>2];sh(b,e);k=a+16|0;j=c[k+4>>2]|0;i=h;c[i>>2]=c[k>>2];c[i+4>>2]=j;c[e>>2]=c[h>>2];c[e+4>>2]=c[h+4>>2];sh(b,e);dg(g,33043);c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];sh(b,e);wi(a+8|0,b);dg(f,29749);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);ja=d;return}function Yn(a){a=a|0;Gf(a);return}function Zn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;a=fh(a,16)|0;h=b;g=c[h+4>>2]|0;b=f;c[b>>2]=c[h>>2];c[b+4>>2]=g;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];_n(a,e);ja=d;return a|0}function _n(a,b){a=a|0;b=b|0;var d=0;hh(a,39,1,1,1);c[a>>2]=23880;d=b;b=c[d+4>>2]|0;a=a+8|0;c[a>>2]=c[d>>2];c[a+4>>2]=b;return}function $n(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;d=ja;ja=ja+32|0;e=d+24|0;i=d+16|0;g=d;f=d+8|0;dg(i,33098);c[e>>2]=c[i>>2];c[e+4>>2]=c[i+4>>2];sh(b,e);i=a+8|0;h=c[i+4>>2]|0;a=g;c[a>>2]=c[i>>2];c[a+4>>2]=h;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];sh(b,e);dg(f,33107);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);ja=d;return}function ao(a){a=a|0;Gf(a);return}function bo(b,c){b=b|0;c=c|0;var d=0,e=0;a:do if((b|0)!=(c|0)){d=a[b>>0]|0;if(d<<24>>24!=95){if(((d<<24>>24)+-48|0)>>>0>=10)break;d=b;while(1){d=d+1|0;if((d|0)==(c|0)){b=c;break a}if(((a[d>>0]|0)+-48|0)>>>0>=10)break a}}d=b+1|0;if((d|0)!=(c|0)){d=a[d>>0]|0;if(((d<<24>>24)+-48|0)>>>0<10){b=b+2|0;break}if(d<<24>>24==95){e=b+2|0;while(1){if((e|0)==(c|0))break a;d=a[e>>0]|0;if(((d<<24>>24)+-48|0)>>>0>=10)break;e=e+1|0}return (d<<24>>24==95?e+1|0:b)|0}}}while(0);return b|0}function co(a,b,c){a=a|0;b=b|0;c=c|0;return eo(a+368|0,b,c)|0}function eo(a,b,d){a=a|0;b=b|0;d=d|0;a=fh(a,16)|0;fo(a,c[b>>2]|0,c[d>>2]|0);return a|0}function fo(a,b,d){a=a|0;b=b|0;d=d|0;hh(a,24,1,1,1);c[a>>2]=23924;c[a+8>>2]=b;c[a+12>>2]=d;return}function go(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;Mf(c[a+8>>2]|0,b);dg(f,31483);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);Mf(c[a+12>>2]|0,b);ja=d;return}function ho(a){a=a|0;Gf(a);return}function io(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;i=ja;ja=ja+16|0;g=i;c[g>>2]=d;e=c[b>>2]|0;if(!d)e=0;else{h=b+4|0;f=c[h>>2]|0;if(!(c[f>>2]|0))c[f>>2]=d;else{g=wo(e,f,g)|0;c[c[h>>2]>>2]=g}e=c[c[b+8>>2]>>2]|0;if(e|0)a[e+1>>0]=0;e=(c[c[h>>2]>>2]|0)!=0}ja=i;return e|0}function jo(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;j=ja;ja=ja+16|0;h=j;i=j+4|0;f=c[d>>2]|0;if((Uh(f)|0)<<24>>24==36?(g=c[f+8>>2]|0,c[h>>2]=g,(g+-2|0)>>>0<4):0)c[d>>2]=lo(b,h)|0;a:do if(!(lg(b,67)|0))if((hg(b,0)|0)<<24>>24==68){f=hg(b,1)|0;switch(f<<24>>24){case 53:case 50:case 49:case 48:break;default:{f=0;break a}}c[h>>2]=(f<<24>>24)+-48;c[b>>2]=(c[b>>2]|0)+2;if(e|0)a[e>>0]=1;a[i>>0]=1;f=mo(b,d,i,h)|0}else f=0;else{f=lg(b,73)|0;g=hg(b,0)|0;switch(g<<24>>24){case 53:case 51:case 50:case 49:break;default:{f=0;break a}}c[h>>2]=(g<<24>>24)+-48;c[b>>2]=(c[b>>2]|0)+1;if(e|0)a[e>>0]=1;if(f?(xn(fg(b)|0,e)|0)==0:0)f=0;else{a[i>>0]=0;f=mo(b,d,i,h)|0}}while(0);ja=j;return f|0}function ko(a){a=a|0;a=a+4|0;c[a>>2]=(c[a>>2]|0)+-4;return}function lo(a,b){a=a|0;b=b|0;return ro(a+368|0,b)|0}function mo(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return no(a+368|0,b,c,d)|0}function no(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;b=fh(b,20)|0;oo(b,c[d>>2]|0,(a[e>>0]|0)!=0,c[f>>2]|0);return b|0}function oo(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;hh(b,37,1,1,1);c[b>>2]=23968;c[b+8>>2]=d;a[b+12>>0]=e&1;c[b+16>>2]=f;return}function po(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;h=ja;ja=ja+32|0;g=h+16|0;e=h+8|0;f=h;if(a[b+12>>0]|0){dg(e,30470);c[g>>2]=c[e>>2];c[g+4>>2]=c[e+4>>2];sh(d,g)}b=c[b+8>>2]|0;za[c[(c[b>>2]|0)+24>>2]&127](f,b);c[g>>2]=c[f>>2];c[g+4>>2]=c[f+4>>2];sh(d,g);ja=h;return}function qo(a){a=a|0;Gf(a);return}function ro(a,b){a=a|0;b=b|0;a=fh(a,12)|0;so(a,c[b>>2]|0);return a|0}function so(a,b){a=a|0;b=b|0;hh(a,35,1,1,1);c[a>>2]=24012;c[a+8>>2]=b;return}function to(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;k=ja;ja=ja+64|0;g=k+48|0;d=k+40|0;h=k+32|0;i=k+24|0;j=k+16|0;e=k+8|0;f=k;switch(c[a+8>>2]|0){case 0:{dg(d,29531);c[g>>2]=c[d>>2];c[g+4>>2]=c[d+4>>2];sh(b,g);break}case 1:{dg(h,29546);c[g>>2]=c[h>>2];c[g+4>>2]=c[h+4>>2];sh(b,g);break}case 2:{dg(i,33317);c[g>>2]=c[i>>2];c[g+4>>2]=c[i+4>>2];sh(b,g);break}case 3:{dg(j,33388);c[g>>2]=c[j>>2];c[g+4>>2]=c[j+4>>2];sh(b,g);break}case 4:{dg(e,33438);c[g>>2]=c[e>>2];c[g+4>>2]=c[e+4>>2];sh(b,g);break}case 5:{dg(f,33488);c[g>>2]=c[f>>2];c[g+4>>2]=c[f+4>>2];sh(b,g);break}default:{}}ja=k;return}function uo(a,b){a=a|0;b=b|0;switch(c[b+8>>2]|0){case 0:{dg(a,29476);break}case 1:{dg(a,29486);break}case 2:{dg(a,29486);break}case 3:{dg(a,33274);break}case 4:{dg(a,33288);break}case 5:{dg(a,33302);break}default:{}}return}function vo(a){a=a|0;Gf(a);return}function wo(a,b,c){a=a|0;b=b|0;c=c|0;return xo(a+368|0,b,c)|0}function xo(a,b,d){a=a|0;b=b|0;d=d|0;a=fh(a,16)|0;yo(a,c[b>>2]|0,c[d>>2]|0);return a|0}function yo(a,b,d){a=a|0;b=b|0;d=d|0;hh(a,23,1,1,1);c[a>>2]=24056;c[a+8>>2]=b;c[a+12>>2]=d;return}function zo(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;Mf(c[a+8>>2]|0,b);dg(f,31483);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);Mf(c[a+12>>2]|0,b);ja=d;return}function Ao(a,b){a=a|0;b=b|0;b=c[b+12>>2]|0;za[c[(c[b>>2]|0)+24>>2]&127](a,b);return}function Bo(a){a=a|0;Gf(a);return}function Co(a,b,c){a=a|0;b=b|0;c=c|0;return Do(a+368|0,b,c)|0}function Do(a,b,d){a=a|0;b=b|0;d=d|0;a=fh(a,16)|0;Eo(a,c[b>>2]|0,c[d>>2]|0);return a|0}function Eo(b,d,e){b=b|0;d=d|0;e=e|0;hh(b,13,a[e+5>>0]|0,1,1);c[b>>2]=24100;c[b+8>>2]=d;c[b+12>>2]=e;return}function Fo(a,b){a=a|0;b=b|0;return Vh(c[a+12>>2]|0,b)|0}function Go(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;i=ja;ja=ja+32|0;h=i+24|0;e=i+16|0;f=i+8|0;g=i;d=a+12|0;j=c[d>>2]|0;za[c[(c[j>>2]|0)+16>>2]&127](j,b);if(!(Rh(c[d>>2]|0,b)|0)?!(Sh(c[d>>2]|0,b)|0):0){dg(f,29751);c[h>>2]=c[f>>2];c[h+4>>2]=c[f+4>>2];sh(b,h)}else{dg(e,29753);c[h>>2]=c[e>>2];c[h+4>>2]=c[e+4>>2];sh(b,h)}Mf(c[a+8>>2]|0,b);dg(g,33650);c[h>>2]=c[g>>2];c[h+4>>2]=c[g+4>>2];sh(b,h);ja=i;return}function Ho(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;f=ja;ja=ja+16|0;e=f+8|0;d=f;a=a+12|0;if(!(!(Rh(c[a>>2]|0,b)|0)?!(Sh(c[a>>2]|0,b)|0):0)){dg(d,29749);c[e>>2]=c[d>>2];c[e+4>>2]=c[d+4>>2];sh(b,e)}e=c[a>>2]|0;za[c[(c[e>>2]|0)+20>>2]&127](e,b);ja=f;return}function Io(a){a=a|0;Gf(a);return}function Jo(a){a=a|0;c[a>>2]=0;c[a+4>>2]=0;return}function Ko(a,b){a=a|0;b=b|0;var d=0,e=0;e=uh(b)|0;b=di(b)|0;d=(b|0)==0;c[a>>2]=d?e+1|0:e;c[a+4>>2]=d?b+1|0:b;return}function Lo(a,b){a=a|0;b=b|0;c[a>>2]=b;c[a+4>>2]=0;return}function Mo(a,b,c){a=a|0;b=b|0;c=c|0;return No(a+368|0,b,c)|0}function No(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=ja;ja=ja+16|0;f=e+8|0;g=e;a=fh(a,20)|0;b=c[b>>2]|0;i=d;h=c[i+4>>2]|0;d=g;c[d>>2]=c[i>>2];c[d+4>>2]=h;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];Oo(a,b,f);ja=e;return a|0}function Oo(a,b,d){a=a|0;b=b|0;d=d|0;hh(a,14,0,0,1);c[a>>2]=24144;c[a+8>>2]=b;b=d;d=c[b+4>>2]|0;a=a+12|0;c[a>>2]=c[b>>2];c[a+4>>2]=d;return}function Po(a,b){a=a|0;b=b|0;return 1}function Qo(a,b){a=a|0;b=b|0;return 1}function Ro(a,b){a=a|0;b=b|0;a=c[a+8>>2]|0;za[c[(c[a>>2]|0)+16>>2]&127](a,b);return}function So(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;i=ja;ja=ja+48|0;g=i+32|0;d=i+24|0;e=i+16|0;h=i+8|0;f=i;if((xi(b)|0)<<24>>24!=93){dg(d,29751);c[g>>2]=c[d>>2];c[g+4>>2]=c[d+4>>2];sh(b,g)}dg(e,33710);c[g>>2]=c[e>>2];c[g+4>>2]=c[e+4>>2];sh(b,g);d=a+12|0;if(!(Uo(d)|0)){if(Wo(d)|0)Mf(Xo(d)|0,b)}else{Vo(h,d);c[g>>2]=c[h>>2];c[g+4>>2]=c[h+4>>2];sh(b,g)}dg(f,29357);c[g>>2]=c[f>>2];c[g+4>>2]=c[f+4>>2];sh(b,g);a=c[a+8>>2]|0;za[c[(c[a>>2]|0)+20>>2]&127](a,b);ja=i;return}function To(a){a=a|0;Gf(a);return}function Uo(a){a=a|0;if(!(c[a+4>>2]|0))a=0;else a=(c[a>>2]|0)!=0;return a|0}function Vo(a,b){a=a|0;b=b|0;ig(a,c[b>>2]|0,c[b+4>>2]|0);return}function Wo(a){a=a|0;if(!(c[a>>2]|0))a=0;else a=(c[a+4>>2]|0)==0;return a|0}function Xo(a){a=a|0;return c[a>>2]|0}function Yo(a,b){a=a|0;b=b|0;a=fh(a,12)|0;Jk(a,c[b>>2]|0);return a|0}function Zo(a,b){a=a|0;b=b|0;return hp(a+368|0,b)|0}function _o(a,b,c){a=a|0;b=b|0;c=c|0;return gp(a+368|0,b,c)|0}function $o(a,b,c){a=a|0;b=b|0;c=c|0;return fp(a+368|0,b,c)|0}function ap(a,b,c){a=a|0;b=b|0;c=c|0;return bp(a+368|0,b,c)|0}function bp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=ja;ja=ja+32|0;f=e+16|0;g=e+8|0;h=e;a=fh(a,20)|0;b=c[b>>2]|0;j=d;i=c[j+4>>2]|0;d=h;c[d>>2]=c[j>>2];c[d+4>>2]=i;c[f>>2]=c[h>>2];c[f+4>>2]=c[h+4>>2];Ko(g,f);c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];cp(a,b,f);ja=e;return a|0}function cp(a,b,d){a=a|0;b=b|0;d=d|0;hh(a,25,1,1,1);c[a>>2]=24188;c[a+8>>2]=b;b=d;d=c[b+4>>2]|0;a=a+12|0;c[a>>2]=c[b>>2];c[a+4>>2]=d;return}function dp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;g=ja;ja=ja+32|0;e=g+24|0;h=g+16|0;f=g+8|0;d=g;Mf(c[a+8>>2]|0,b);dg(h,33760);c[e>>2]=c[h>>2];c[e+4>>2]=c[h+4>>2];sh(b,e);a=a+12|0;if(!(Wo(a)|0)){if(Uo(a)|0){Vo(f,a);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e)}}else Mf(Xo(a)|0,b);dg(d,29357);c[e>>2]=c[d>>2];c[e+4>>2]=c[d+4>>2];sh(b,e);ja=g;return}function ep(a){a=a|0;Gf(a);return}function fp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=ja;ja=ja+16|0;f=e+8|0;g=e;a=fh(a,20)|0;b=c[b>>2]|0;Lo(g,c[d>>2]|0);c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];cp(a,b,f);ja=e;return a|0}function gp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=ja;ja=ja+32|0;f=e+16|0;g=e+8|0;h=e;a=fh(a,20)|0;b=c[b>>2]|0;j=d;i=c[j+4>>2]|0;d=h;c[d>>2]=c[j>>2];c[d+4>>2]=i;c[f>>2]=c[h>>2];c[f+4>>2]=c[h+4>>2];Ko(g,f);c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];cp(a,b,f);ja=e;return a|0}function hp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;d=ja;ja=ja+32|0;e=d+16|0;f=d+8|0;g=d;a=fh(a,16)|0;i=b;h=c[i+4>>2]|0;b=g;c[b>>2]=c[i>>2];c[b+4>>2]=h;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];Ko(f,e);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];ip(a,e);ja=d;return a|0}function ip(a,b){a=a|0;b=b|0;var d=0;hh(a,26,1,1,1);c[a>>2]=24232;d=b;b=c[d+4>>2]|0;a=a+8|0;c[a>>2]=c[d>>2];c[a+4>>2]=b;return}function jp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=ja;ja=ja+32|0;e=d+24|0;h=d+16|0;g=d+8|0;f=d;dg(h,33816);c[e>>2]=c[h>>2];c[e+4>>2]=c[h+4>>2];sh(b,e);Vo(g,a+8|0);c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];sh(b,e);dg(f,29357);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);ja=d;return}function kp(a){a=a|0;Gf(a);return}function lp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;a=fh(a,16)|0;h=b;g=c[h+4>>2]|0;b=f;c[b>>2]=c[h>>2];c[b+4>>2]=g;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];Al(a,e);ja=d;return a|0}function mp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;a=fh(a,16)|0;dg(f,b);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];Al(a,e);ja=d;return a|0}function np(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;a=fh(a,16)|0;dg(f,b);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];Al(a,e);ja=d;return a|0}function op(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;a=fh(a,16)|0;dg(f,b);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];Al(a,e);ja=d;return a|0}function pp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;a=fh(a,16)|0;dg(f,b);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];Al(a,e);ja=d;return a|0}function qp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;a=fh(a,16)|0;dg(f,b);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];Al(a,e);ja=d;return a|0}function rp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;a=fh(a,16)|0;dg(f,b);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];Al(a,e);ja=d;return a|0}function sp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;a=fh(a,16)|0;dg(f,b);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];Al(a,e);ja=d;return a|0}function tp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;a=fh(a,16)|0;dg(f,b);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];Al(a,e);ja=d;return a|0}function up(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;a=fh(a,16)|0;dg(f,b);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];Al(a,e);ja=d;return a|0}function vp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;a=fh(a,16)|0;dg(f,b);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];Al(a,e);ja=d;return a|0}function wp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;a=fh(a,16)|0;dg(f,b);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];Al(a,e);ja=d;return a|0}function xp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;a=fh(a,16)|0;dg(f,b);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];Al(a,e);ja=d;return a|0}function yp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;a=fh(a,16)|0;dg(f,b);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];Al(a,e);ja=d;return a|0}function zp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;a=fh(a,16)|0;dg(f,b);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];Al(a,e);ja=d;return a|0}function Ap(b,d,e){b=b|0;d=d|0;e=e|0;c[b>>2]=d;c[b+4>>2]=c[d>>2];a[b+8>>0]=1;c[d>>2]=e;return}function Bp(b){b=b|0;if(a[b+8>>0]|0)c[c[b>>2]>>2]=c[b+4>>2];return}function Cp(a,b,c){a=a|0;b=b|0;c=c|0;return Sp(a+368|0,b,c)|0}function Dp(a,b,c){a=a|0;b=b|0;c=c|0;return Op(a+368|0,b,c)|0}function Ep(a,b,c){a=a|0;b=b|0;c=c|0;return Fp(a+368|0,b,c)|0}function Fp(a,b,d){a=a|0;b=b|0;d=d|0;a=fh(a,16)|0;Gp(a,c[b>>2]|0,c[d>>2]|0);return a|0}function Gp(b,d,e){b=b|0;d=d|0;e=e|0;hh(b,3,a[d+5>>0]|0,a[d+6>>0]|0,a[d+7>>0]|0);c[b>>2]=24276;c[b+8>>2]=e;c[b+12>>2]=d;return}function Hp(a,b){a=a|0;b=b|0;return Vh(c[a+12>>2]|0,b)|0}function Ip(a,b){a=a|0;b=b|0;return Rh(c[a+12>>2]|0,b)|0}function Jp(a,b){a=a|0;b=b|0;return Sh(c[a+12>>2]|0,b)|0}function Kp(a,b){a=a|0;b=b|0;var d=0;d=c[a+12>>2]|0;za[c[(c[d>>2]|0)+16>>2]&127](d,b);Np(a,b);return}function Lp(a,b){a=a|0;b=b|0;a=c[a+12>>2]|0;za[c[(c[a>>2]|0)+20>>2]&127](a,b);return}function Mp(a){a=a|0;Gf(a);return}function Np(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;i=ja;ja=ja+32|0;h=i+24|0;e=i+16|0;f=i+8|0;g=i;d=a+8|0;a=c[d>>2]|0;if(a&1){dg(e,33928);c[h>>2]=c[e>>2];c[h+4>>2]=c[e+4>>2];sh(b,h);a=c[d>>2]|0}if(a&2){dg(f,33935);c[h>>2]=c[f>>2];c[h+4>>2]=c[f+4>>2];sh(b,h);a=c[d>>2]|0}if(a&4|0){dg(g,33945);c[h>>2]=c[g>>2];c[h+4>>2]=c[g+4>>2];sh(b,h)}ja=i;return}function Op(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=ja;ja=ja+16|0;f=e+8|0;g=e;a=fh(a,20)|0;b=c[b>>2]|0;i=d;h=c[i+4>>2]|0;d=g;c[d>>2]=c[i>>2];c[d+4>>2]=h;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];Pp(a,b,f);ja=e;return a|0}function Pp(a,b,d){a=a|0;b=b|0;d=d|0;hh(a,2,1,1,1);c[a>>2]=24320;c[a+8>>2]=b;b=c[d+4>>2]|0;a=a+12|0;c[a>>2]=c[d>>2];c[a+4>>2]=b;return}function Qp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=ja;ja=ja+32|0;e=d+16|0;h=d+8|0;f=d;Mf(c[a+8>>2]|0,b);dg(h,29751);c[e>>2]=c[h>>2];c[e+4>>2]=c[h+4>>2];sh(b,e);h=a+12|0;g=c[h+4>>2]|0;a=f;c[a>>2]=c[h>>2];c[a+4>>2]=g;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);ja=d;return}function Rp(a){a=a|0;Gf(a);return}function Sp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=ja;ja=ja+16|0;f=e+8|0;g=e;a=fh(a,20)|0;b=c[b>>2]|0;i=d;h=c[i+4>>2]|0;d=g;c[d>>2]=c[i>>2];c[d+4>>2]=h;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];Tp(a,b,f);ja=e;return a|0}function Tp(a,b,d){a=a|0;b=b|0;d=d|0;hh(a,10,1,1,1);c[a>>2]=24364;c[a+8>>2]=b;b=c[d+4>>2]|0;a=a+12|0;c[a>>2]=c[d>>2];c[a+4>>2]=b;return}function Up(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;d=ja;ja=ja+32|0;e=d+24|0;i=d+16|0;g=d;f=d+8|0;Mf(c[a+8>>2]|0,b);dg(i,29935);c[e>>2]=c[i>>2];c[e+4>>2]=c[i+4>>2];sh(b,e);i=a+12|0;h=c[i+4>>2]|0;a=g;c[a>>2]=c[i>>2];c[a+4>>2]=h;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];sh(b,e);dg(f,29828);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);ja=d;return}function Vp(a){a=a|0;Gf(a);return}function Wp(a,b){a=a|0;b=b|0;return iq(a+368|0,b)|0}function Xp(a,b){a=a|0;b=b|0;return eq(a+368|0,b)|0}function Yp(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return Zp(a+368|0,b,c,d,e,f)|0}function Zp(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0;i=ja;ja=ja+16|0;j=i+8|0;k=i;b=fh(b,32)|0;d=c[d>>2]|0;m=e;l=c[m+4>>2]|0;e=k;c[e>>2]=c[m>>2];c[e+4>>2]=l;f=c[f>>2]|0;g=a[g>>0]|0;h=c[h>>2]|0;c[j>>2]=c[k>>2];c[j+4>>2]=c[k+4>>2];_p(b,d,j,f,g,h);ja=i;return b|0}function _p(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0;hh(b,15,0,1,0);c[b>>2]=24408;c[b+8>>2]=d;i=e;e=c[i+4>>2]|0;d=b+12|0;c[d>>2]=c[i>>2];c[d+4>>2]=e;c[b+20>>2]=f;a[b+24>>0]=g;c[b+28>>2]=h;return}function $p(a,b){a=a|0;b=b|0;return 1}function aq(a,b){a=a|0;b=b|0;return 1}function bq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;a=c[a+8>>2]|0;za[c[(c[a>>2]|0)+16>>2]&127](a,b);dg(f,29751);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);ja=d;return}function cq(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;m=ja;ja=ja+64|0;l=m+56|0;e=m+48|0;g=m+40|0;f=m+32|0;h=m+24|0;i=m+16|0;j=m+8|0;k=m;dg(e,29753);c[l>>2]=c[e>>2];c[l+4>>2]=c[e+4>>2];sh(d,l);wi(b+12|0,d);dg(g,29749);c[l>>2]=c[g>>2];c[l+4>>2]=c[g+4>>2];sh(d,l);g=c[b+8>>2]|0;za[c[(c[g>>2]|0)+20>>2]&127](g,d);g=b+20|0;e=c[g>>2]|0;if(e&1){dg(f,33928);c[l>>2]=c[f>>2];c[l+4>>2]=c[f+4>>2];sh(d,l);e=c[g>>2]|0}if(e&2){dg(h,33935);c[l>>2]=c[h>>2];c[l+4>>2]=c[h+4>>2];sh(d,l);e=c[g>>2]|0}if(e&4|0){dg(i,33945);c[l>>2]=c[i>>2];c[l+4>>2]=c[i+4>>2];sh(d,l)}switch(a[b+24>>0]|0){case 1:{dg(j,34130);c[l>>2]=c[j>>2];c[l+4>>2]=c[j+4>>2];sh(d,l);break}case 2:{dg(k,34133);c[l>>2]=c[k>>2];c[l+4>>2]=c[k+4>>2];sh(d,l);break}default:{}}e=b+28|0;if(c[e>>2]|0){Nf(d,32);Mf(c[e>>2]|0,d)}ja=m;return}function dq(a){a=a|0;Gf(a);return}function eq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;a=fh(a,16)|0;h=b;g=c[h+4>>2]|0;b=f;c[b>>2]=c[h>>2];c[b+4>>2]=g;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];fq(a,e);ja=d;return a|0}function fq(a,b){a=a|0;b=b|0;var d=0;hh(a,17,1,1,1);c[a>>2]=24452;d=b;b=c[d+4>>2]|0;a=a+8|0;c[a>>2]=c[d>>2];c[a+4>>2]=b;return}function gq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;dg(f,34186);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);wi(a+8|0,b);Nf(b,41);ja=d;return}function hq(a){a=a|0;Gf(a);return}function iq(a,b){a=a|0;b=b|0;a=fh(a,12)|0;jq(a,c[b>>2]|0);return a|0}function jq(a,b){a=a|0;b=b|0;hh(a,16,1,1,1);c[a>>2]=24496;c[a+8>>2]=b;return}function kq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=ja;ja=ja+32|0;e=d+16|0;g=d+8|0;f=d;dg(g,34250);c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];sh(b,e);Mf(c[a+8>>2]|0,b);dg(f,29749);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);ja=d;return}function lq(a){a=a|0;Gf(a);return}function mq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=ja;ja=ja+16|0;f=e+8|0;g=e;a=fh(a,20)|0;dg(g,b);d=c[d>>2]|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];nq(a,f,d);ja=e;return a|0}function nq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;hh(a,20,1,1,1);c[a>>2]=24540;f=b;e=c[f+4>>2]|0;b=a+8|0;c[b>>2]=c[f>>2];c[b+4>>2]=e;c[a+16>>2]=d;return}function oq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;i=a+8|0;h=c[i+4>>2]|0;g=f;c[g>>2]=c[i>>2];c[g+4>>2]=h;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);Mf(c[a+16>>2]|0,b);ja=d;return}function pq(a){a=a|0;Gf(a);return}function qq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=ja;ja=ja+16|0;f=e+8|0;g=e;a=fh(a,20)|0;b=c[b>>2]|0;i=d;h=c[i+4>>2]|0;d=g;c[d>>2]=c[i>>2];c[d+4>>2]=h;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];rq(a,b,f);ja=e;return a|0}function rq(a,b,d){a=a|0;b=b|0;d=d|0;hh(a,1,1,1,1);c[a>>2]=24584;c[a+8>>2]=b;b=d;d=c[b+4>>2]|0;a=a+12|0;c[a>>2]=c[b>>2];c[a+4>>2]=d;return}function sq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;d=ja;ja=ja+32|0;e=d+24|0;i=d+16|0;g=d;f=d+8|0;Mf(c[a+8>>2]|0,b);dg(i,32499);c[e>>2]=c[i>>2];c[e+4>>2]=c[i+4>>2];sh(b,e);i=a+12|0;h=c[i+4>>2]|0;a=g;c[a>>2]=c[i>>2];c[a+4>>2]=h;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];sh(b,e);dg(f,29749);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);ja=d;return}function tq(a){a=a|0;Gf(a);return}function uq(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;f=ja;ja=ja+16|0;e=f+8|0;d=f;a:do switch((hg(a,0)|0)<<24>>24|0){case 84:switch((hg(a,1)|0)<<24>>24|0){case 86:{c[a>>2]=(c[a>>2]|0)+2;d=pg(fg(a)|0)|0;c[e>>2]=d;if(!d)b=0;else b=Oq(a,e)|0;break a}case 84:{c[a>>2]=(c[a>>2]|0)+2;d=pg(fg(a)|0)|0;c[e>>2]=d;if(!d)b=0;else b=Pq(a,e)|0;break a}case 73:{c[a>>2]=(c[a>>2]|0)+2;d=pg(fg(a)|0)|0;c[e>>2]=d;if(!d)b=0;else b=Qq(a,e)|0;break a}case 83:{c[a>>2]=(c[a>>2]|0)+2;d=pg(fg(a)|0)|0;c[e>>2]=d;if(!d)b=0;else b=Rq(a,e)|0;break a}case 99:{c[a>>2]=(c[a>>2]|0)+2;if(Sq(a)|0){b=0;break a}if(Sq(a)|0){b=0;break a}d=gg(fg(a)|0)|0;c[e>>2]=d;if(!d)b=0;else b=Tq(a,e)|0;break a}case 67:{c[a>>2]=(c[a>>2]|0)+2;b=fg(a)|0;g=pg(b)|0;c[e>>2]=g;do if(g){mg(d,a,1);if(ng(d)|0){b=0;break}if(lg(a,95)|0){g=pg(b)|0;c[d>>2]=g;if(!g)b=0;else b=Uq(a,d,e)|0}else b=0}else b=0;while(0);break a}case 87:{c[a>>2]=(c[a>>2]|0)+2;g=xn(fg(a)|0,0)|0;c[e>>2]=g;if(!g)b=0;else b=og(a,34531,e)|0;break a}case 72:{c[a>>2]=(c[a>>2]|0)+2;g=xn(fg(a)|0,0)|0;c[e>>2]=g;if(!g)b=0;else b=Vq(a,e)|0;break a}default:{c[a>>2]=(c[a>>2]|0)+1;b=(hg(a,0)|0)<<24>>24==118;if(Sq(a)|0){b=0;break a}g=gg(fg(a)|0)|0;c[e>>2]=g;do if(g)if(b){b=Wq(a,e)|0;break}else{b=Xq(a,e)|0;break}else b=0;while(0);break a}}case 71:{switch((hg(a,1)|0)<<24>>24|0){case 86:{c[a>>2]=(c[a>>2]|0)+2;g=xn(fg(a)|0,0)|0;c[e>>2]=g;if(!g)b=0;else b=Yq(a,e)|0;break a}case 82:break;default:{b=0;break a}}c[a>>2]=(c[a>>2]|0)+2;g=xn(fg(a)|0,0)|0;c[e>>2]=g;if(!g)b=0;else{g=bh(a,d)|0;if(g|(lg(a,95)|0))b=Zq(a,e)|0;else b=0}break}default:b=0}while(0);ja=f;return b|0}function vq(b,d){b=b|0;d=d|0;a[b>>0]=0;a[b+1>>0]=0;c[b+4>>2]=0;a[b+8>>0]=0;c[b+12>>2]=mn(d+332|0)|0;return}function wq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;f=c[b+12>>2]|0;g=a+332|0;h=mn(g)|0;e=a+288|0;d=f;while(1){if(d>>>0>=h>>>0){i=5;break}b=c[(Lq(g,d)|0)>>2]|0;a=c[b+8>>2]|0;if(a>>>0>=(Ei(e)|0)>>>0){b=1;break}c[b+12>>2]=c[(ln(e,a)|0)>>2];d=d+1|0}if((i|0)==5){Mq(g,f);b=0}return b|0}function xq(a){a=a|0;var b=0;a=c[a>>2]|0;if(kg(a)|0?(b=hg(a,0)|0,b<<24>>24!=69):0)return b<<24>>24==46|b<<24>>24==95|0;return 1}function yq(a,b){a=a|0;b=b|0;return Hq(a+368|0,b)|0}function zq(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return Aq(a+368|0,b,c,d,e,f,g)|0}function Aq(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0;j=ja;ja=ja+16|0;k=j+8|0;l=j;b=fh(b,36)|0;d=c[d>>2]|0;e=c[e>>2]|0;n=f;m=c[n+4>>2]|0;f=l;c[f>>2]=c[n>>2];c[f+4>>2]=m;g=c[g>>2]|0;h=c[h>>2]|0;i=a[i>>0]|0;c[k>>2]=c[l>>2];c[k+4>>2]=c[l+4>>2];Bq(b,d,e,k,g,h,i);ja=j;return b|0}function Bq(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;hh(b,18,0,1,0);c[b>>2]=24628;c[b+8>>2]=d;c[b+12>>2]=e;e=f;f=c[e+4>>2]|0;d=b+16|0;c[d>>2]=c[e>>2];c[d+4>>2]=f;c[b+24>>2]=g;c[b+28>>2]=h;a[b+32>>0]=i;return}function Cq(a,b){a=a|0;b=b|0;return 1}function Dq(a,b){a=a|0;b=b|0;return 1}function Eq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;h=ja;ja=ja+16|0;g=h+8|0;f=h;e=a+8|0;d=c[e>>2]|0;if(d|0?(za[c[(c[d>>2]|0)+16>>2]&127](d,b),!(Vh(c[e>>2]|0,b)|0)):0){dg(f,29751);c[g>>2]=c[f>>2];c[g+4>>2]=c[f+4>>2];sh(b,g)}Mf(c[a+12>>2]|0,b);ja=h;return}function Fq(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;m=ja;ja=ja+64|0;l=m+56|0;f=m+48|0;e=m+40|0;g=m+32|0;h=m+24|0;i=m+16|0;j=m+8|0;k=m;dg(f,29753);c[l>>2]=c[f>>2];c[l+4>>2]=c[f+4>>2];sh(d,l);wi(b+16|0,d);dg(e,29749);c[l>>2]=c[e>>2];c[l+4>>2]=c[e+4>>2];sh(d,l);e=c[b+8>>2]|0;if(e|0)za[c[(c[e>>2]|0)+20>>2]&127](e,d);f=b+28|0;e=c[f>>2]|0;if(e&1){dg(g,33928);c[l>>2]=c[g>>2];c[l+4>>2]=c[g+4>>2];sh(d,l);e=c[f>>2]|0}if(e&2){dg(h,33935);c[l>>2]=c[h>>2];c[l+4>>2]=c[h+4>>2];sh(d,l);e=c[f>>2]|0}if(e&4|0){dg(i,33945);c[l>>2]=c[i>>2];c[l+4>>2]=c[i+4>>2];sh(d,l)}switch(a[b+32>>0]|0){case 1:{dg(j,34130);c[l>>2]=c[j>>2];c[l+4>>2]=c[j+4>>2];sh(d,l);break}case 2:{dg(k,34133);c[l>>2]=c[k>>2];c[l+4>>2]=c[k+4>>2];sh(d,l);break}default:{}}e=c[b+24>>2]|0;if(e|0)Mf(e,d);ja=m;return}function Gq(a){a=a|0;Gf(a);return}function Hq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;a=fh(a,16)|0;h=b;g=c[h+4>>2]|0;b=f;c[b>>2]=c[h>>2];c[b+4>>2]=g;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];Iq(a,e);ja=d;return a|0}function Iq(a,b){a=a|0;b=b|0;var d=0;hh(a,9,1,1,1);c[a>>2]=24672;d=b;b=c[d+4>>2]|0;a=a+8|0;c[a>>2]=c[d>>2];c[a+4>>2]=b;return}function Jq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;dg(f,34469);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);wi(a+8|0,b);Nf(b,93);ja=d;return}function Kq(a){a=a|0;Gf(a);return}function Lq(a,b){a=a|0;b=b|0;return (Nq(a)|0)+(b<<2)|0}function Mq(a,b){a=a|0;b=b|0;c[a+4>>2]=(c[a>>2]|0)+(b<<2);return}function Nq(a){a=a|0;return c[a>>2]|0}function Oq(a,b){a=a|0;b=b|0;return lr(a+368|0,34848,b)|0}function Pq(a,b){a=a|0;b=b|0;return kr(a+368|0,34839,b)|0}function Qq(a,b){a=a|0;b=b|0;return jr(a+368|0,34825,b)|0}function Rq(a,b){a=a|0;b=b|0;return ir(a+368|0,34806,b)|0}function Sq(a){a=a|0;var b=0,c=0,d=0;d=ja;ja=ja+16|0;b=d+8|0;c=d;if(!(lg(a,104)|0))if(lg(a,118)|0){mg(b,a,1);if(!(ng(b)|0)?lg(a,95)|0:0){mg(c,a,1);if(ng(c)|0)b=1;else b=(lg(a,95)|0)^1}else b=1}else b=1;else{mg(b,a,1);if(ng(b)|0)b=1;else b=(lg(a,95)|0)^1}ja=d;return b|0}function Tq(a,b){a=a|0;b=b|0;return hr(a+368|0,34779,b)|0}function Uq(a,b,c){a=a|0;b=b|0;c=c|0;return dr(a+368|0,b,c)|0}function Vq(a,b){a=a|0;b=b|0;return cr(a+368|0,34650,b)|0}function Wq(a,b){a=a|0;b=b|0;return br(a+368|0,34632,b)|0}function Xq(a,b){a=a|0;b=b|0;return ar(a+368|0,34610,b)|0}function Yq(a,b){a=a|0;b=b|0;return $q(a+368|0,34590,b)|0}function Zq(a,b){a=a|0;b=b|0;return _q(a+368|0,34565,b)|0}function _q(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=ja;ja=ja+16|0;f=e+8|0;g=e;a=fh(a,20)|0;dg(g,b);d=c[d>>2]|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];nq(a,f,d);ja=e;return a|0}function $q(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=ja;ja=ja+16|0;f=e+8|0;g=e;a=fh(a,20)|0;dg(g,b);d=c[d>>2]|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];nq(a,f,d);ja=e;return a|0}function ar(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=ja;ja=ja+16|0;f=e+8|0;g=e;a=fh(a,20)|0;dg(g,b);d=c[d>>2]|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];nq(a,f,d);ja=e;return a|0}function br(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=ja;ja=ja+16|0;f=e+8|0;g=e;a=fh(a,20)|0;dg(g,b);d=c[d>>2]|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];nq(a,f,d);ja=e;return a|0}function cr(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=ja;ja=ja+16|0;f=e+8|0;g=e;a=fh(a,20)|0;dg(g,b);d=c[d>>2]|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];nq(a,f,d);ja=e;return a|0}function dr(a,b,d){a=a|0;b=b|0;d=d|0;a=fh(a,16)|0;er(a,c[b>>2]|0,c[d>>2]|0);return a|0}function er(a,b,d){a=a|0;b=b|0;d=d|0;hh(a,21,1,1,1);c[a>>2]=24716;c[a+8>>2]=b;c[a+12>>2]=d;return}function fr(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=ja;ja=ja+32|0;e=d+16|0;g=d+8|0;f=d;dg(g,34691);c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];sh(b,e);Mf(c[a+8>>2]|0,b);dg(f,34716);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);Mf(c[a+12>>2]|0,b);ja=d;return}function gr(a){a=a|0;Gf(a);return}function hr(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=ja;ja=ja+16|0;f=e+8|0;g=e;a=fh(a,20)|0;dg(g,b);d=c[d>>2]|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];nq(a,f,d);ja=e;return a|0}function ir(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=ja;ja=ja+16|0;f=e+8|0;g=e;a=fh(a,20)|0;dg(g,b);d=c[d>>2]|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];nq(a,f,d);ja=e;return a|0}function jr(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=ja;ja=ja+16|0;f=e+8|0;g=e;a=fh(a,20)|0;dg(g,b);d=c[d>>2]|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];nq(a,f,d);ja=e;return a|0}function kr(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=ja;ja=ja+16|0;f=e+8|0;g=e;a=fh(a,20)|0;dg(g,b);d=c[d>>2]|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];nq(a,f,d);ja=e;return a|0}function lr(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=ja;ja=ja+16|0;f=e+8|0;g=e;a=fh(a,20)|0;dg(g,b);d=c[d>>2]|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];nq(a,f,d);ja=e;return a|0}function mr(b,d,e){b=b|0;d=d|0;e=e|0;c[b>>2]=d;c[b+4>>2]=e;nr(b+8|0);nr(b+148|0);hn(b+288|0);or(b+332|0);a[b+360>>0]=1;a[b+361>>0]=0;a[b+362>>0]=0;pr(b+368|0);return}function nr(a){a=a|0;var b=0;b=a+12|0;c[a>>2]=b;c[a+4>>2]=b;c[a+8>>2]=a+140;return}function or(a){a=a|0;var b=0;b=a+12|0;c[a>>2]=b;c[a+4>>2]=b;c[a+8>>2]=a+28;return}function pr(a){a=a|0;qr(a);return}function qr(a){a=a|0;c[a>>2]=0;c[a+4>>2]=0;c[a+4096>>2]=a;return}function rr(a){a=a|0;return}function sr(a){a=a|0;c[a>>2]=24760;wr(a+4|0);return}function tr(a){a=a|0;sr(a);Gf(a);return}function ur(a){a=a|0;return vr(a+4|0)|0}function vr(a){a=a|0;return c[a>>2]|0}function wr(a){a=a|0;var b=0,d=0;if(xr(a)|0?(b=yr(c[a>>2]|0)|0,d=b+8|0,a=c[d>>2]|0,c[d>>2]=a+-1,(a|0)<1):0)Gf(b);return}function xr(a){a=a|0;return 1}function yr(a){a=a|0;return a+-12|0}function zr(a){a=a|0;sr(a);Gf(a);return}function Ar(a){a=a|0;pf(a);Gf(a);return}function Br(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;if(xf(b,c[d+8>>2]|0,h)|0)Af(0,d,e,f,g);else{r=d+52|0;i=a[r>>0]|0;q=d+53|0;j=a[q>>0]|0;p=c[b+12>>2]|0;n=b+16+(p<<3)|0;a[r>>0]=0;a[q>>0]=0;Fr(b+16|0,d,e,f,g,h);l=a[r>>0]|0;i=l|i;k=a[q>>0]|0;j=k|j;a:do if((p|0)>1){o=d+24|0;m=b+8|0;p=d+54|0;b=b+24|0;do{j=j&1;i=i&1;if(a[p>>0]|0)break a;if(!(l<<24>>24)){if(k<<24>>24?(c[m>>2]&1|0)==0:0)break a}else{if((c[o>>2]|0)==1)break a;if(!(c[m>>2]&2))break a}a[r>>0]=0;a[q>>0]=0;Fr(b,d,e,f,g,h);l=a[r>>0]|0;i=l|i;k=a[q>>0]|0;j=k|j;b=b+8|0}while(b>>>0<n>>>0)}while(0);a[r>>0]=i<<24>>24!=0&1;a[q>>0]=j<<24>>24!=0&1}return}function Cr(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;a:do if(!(xf(b,c[d+8>>2]|0,g)|0)){if(!(xf(b,c[d>>2]|0,g)|0)){p=c[b+12>>2]|0;k=b+16+(p<<3)|0;Gr(b+16|0,d,e,f,g);h=b+24|0;if((p|0)<=1)break;i=c[b+8>>2]|0;if((i&2|0)==0?(j=d+36|0,(c[j>>2]|0)!=1):0){if(!(i&1)){i=d+54|0;while(1){if(a[i>>0]|0)break a;if((c[j>>2]|0)==1)break a;Gr(h,d,e,f,g);h=h+8|0;if(h>>>0>=k>>>0)break a}}i=d+24|0;b=d+54|0;while(1){if(a[b>>0]|0)break a;if((c[j>>2]|0)==1?(c[i>>2]|0)==1:0)break a;Gr(h,d,e,f,g);h=h+8|0;if(h>>>0>=k>>>0)break a}}i=d+54|0;while(1){if(a[i>>0]|0)break a;Gr(h,d,e,f,g);h=h+8|0;if(h>>>0>=k>>>0)break a}}if((c[d+16>>2]|0)!=(e|0)?(p=d+20|0,(c[p>>2]|0)!=(e|0)):0){c[d+32>>2]=f;o=d+44|0;if((c[o>>2]|0)!=4){k=b+16+(c[b+12>>2]<<3)|0;l=d+52|0;f=d+53|0;n=d+54|0;j=b+8|0;m=d+24|0;h=0;i=0;b=b+16|0;b:while(1){if(b>>>0>=k>>>0){b=18;break}a[l>>0]=0;a[f>>0]=0;Fr(b,d,e,e,1,g);if(a[n>>0]|0){b=18;break}do if(a[f>>0]|0){if(!(a[l>>0]|0))if(!(c[j>>2]&1)){b=19;break b}else{i=1;break}if((c[m>>2]|0)==1){h=1;b=19;break b}if(!(c[j>>2]&2)){h=1;b=19;break b}else{h=1;i=1}}while(0);b=b+8|0}if((b|0)==18)if(i)b=19;else i=4;if((b|0)==19)i=3;c[o>>2]=i;if(h&1)break}c[p>>2]=e;e=d+40|0;c[e>>2]=(c[e>>2]|0)+1;if((c[d+36>>2]|0)!=1)break;if((c[d+24>>2]|0)!=2)break;a[d+54>>0]=1;break}if((f|0)==1)c[d+32>>2]=1}else zf(0,d,e,f);while(0);return}function Dr(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;a:do if(!(xf(b,c[d+8>>2]|0,0)|0)){h=c[b+12>>2]|0;g=b+16+(h<<3)|0;Er(b+16|0,d,e,f);if((h|0)>1){h=d+54|0;b=b+24|0;do{Er(b,d,e,f);if(a[h>>0]|0)break a;b=b+8|0}while(b>>>0<g>>>0)}}else yf(0,d,e,f);while(0);return}function Er(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;g=c[a+4>>2]|0;if(d){f=g>>8;if(g&1)f=c[(c[d>>2]|0)+f>>2]|0}else f=0;a=c[a>>2]|0;Ba[c[(c[a>>2]|0)+28>>2]&15](a,b,d+f|0,(g&2|0)==0?2:e);return}function Fr(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;i=c[a+4>>2]|0;h=i>>8;if(i&1)h=c[(c[e>>2]|0)+h>>2]|0;a=c[a>>2]|0;Da[c[(c[a>>2]|0)+20>>2]&15](a,b,d,e+h|0,(i&2|0)==0?2:f,g);return}function Gr(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;h=c[a+4>>2]|0;g=h>>8;if(h&1)g=c[(c[d>>2]|0)+g>>2]|0;a=c[a>>2]|0;Ca[c[(c[a>>2]|0)+24>>2]&3](a,b,d+g|0,(h&2|0)==0?2:e,f);return}function Hr(a){a=a|0;return ((Ir(a)|0)^1)&1|0}function Ir(b){b=b|0;return (a[b>>0]|0)!=0|0}function Jr(a){a=a|0;c[a>>2]=0;Kr(a);return}function Kr(a){a=a|0;c[a>>2]=c[a>>2]|1;return}function Lr(){return 0}function Mr(a){a=a|0;var b=0;b=(a|0)==0?1:a;while(1){a=iD(b)|0;if(a|0)break;a=Lr()|0;if(!a){a=0;break}xa[a&3]()}return a|0}function Nr(a){a=a|0;Gf(a);return}function Or(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;f=ja;ja=ja+16|0;e=f;c[e>>2]=c[d>>2];a=pa[c[(c[a>>2]|0)+16>>2]&31](a,b,e)|0;if(a)c[d>>2]=c[e>>2];ja=f;return a&1|0}function Pr(a){a=a|0;if(!a)a=0;else a=(Bf(a,18496,19664,0)|0)!=0&1;return a|0}function Qr(){return 0}function Rr(a){a=a|0;return 0}function Sr(a){a=a|0;return 0}function Tr(a,b){a=a|0;b=b|0;return 0}function Ur(a){a=a|0;return 0}function Vr(){return (Wr()|0)>0|0}function Wr(){return Qr()|0}function Xr(a){a=a|0;Zr(a);return}function Yr(a){a=a|0;Xr(a);Gf(a);return}function Zr(a){a=a|0;c[a>>2]=24856;_r(a,0);Cu(a+28|0);jD(c[a+32>>2]|0);jD(c[a+36>>2]|0);jD(c[a+48>>2]|0);jD(c[a+60>>2]|0);return}function _r(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=a+32|0;e=a+36|0;f=c[a+40>>2]|0;while(1){if(!f)break;g=f+-1|0;Aa[c[(c[d>>2]|0)+(g<<2)>>2]&7](b,a,c[(c[e>>2]|0)+(g<<2)>>2]|0);f=g}return}function $r(a){a=a|0;Zr(a);Gf(a);return}function as(a){a=a|0;Zr(a);return}function bs(a){a=a|0;c[a>>2]=24872;Cu(a+4|0);return}function cs(a){a=a|0;bs(a);Gf(a);return}function ds(a,b){a=a|0;b=b|0;return}function es(a,b,c){a=a|0;b=b|0;c=c|0;return a|0}function fs(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;b=a;c[b>>2]=0;c[b+4>>2]=0;b=a+8|0;c[b>>2]=-1;c[b+4>>2]=-1;return}function gs(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;b=a;c[b>>2]=0;c[b+4>>2]=0;b=a+8|0;c[b>>2]=-1;c[b+4>>2]=-1;return}function hs(a){a=a|0;return 0}function is(a){a=a|0;return 0}function js(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;Ra()|0;j=b+12|0;h=b+16|0;i=0;while(1){if((i|0)>=(e|0))break;f=c[j>>2]|0;g=c[h>>2]|0;if(f>>>0<g>>>0){g=g-f|0;k=e-i|0;g=(k|0)<(g|0)?k:g;ps(d,f,g)|0;c[j>>2]=(c[j>>2]|0)+g;f=g;d=d+g|0}else{f=ma[c[(c[b>>2]|0)+40>>2]&127](b)|0;if((f|0)==-1)break;a[d>>0]=Sa(f)|0;f=1;d=d+1|0}i=f+i|0}return i|0}function ks(a){a=a|0;return Ra()|0}function ls(b){b=b|0;var d=0;d=ma[c[(c[b>>2]|0)+36>>2]&127](b)|0;if((d|0)==(Ra()|0))b=Ra()|0;else{d=b+12|0;b=c[d>>2]|0;c[d>>2]=b+1;b=Va(a[b>>0]|0)|0}return b|0}function ms(a,b){a=a|0;b=b|0;return Ra()|0}function ns(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;k=Ra()|0;j=b+24|0;i=b+28|0;f=0;while(1){if((f|0)>=(e|0))break;g=c[j>>2]|0;h=c[i>>2]|0;if(g>>>0<h>>>0){h=h-g|0;l=e-f|0;h=(l|0)<(h|0)?l:h;ps(g,d,h)|0;c[j>>2]=(c[j>>2]|0)+h;f=h+f|0;d=d+h|0}else{h=c[(c[b>>2]|0)+52>>2]|0;l=Va(a[d>>0]|0)|0;if((oa[h&63](b,l)|0)==(k|0))break;f=f+1|0;d=d+1|0}}return f|0}function os(a,b){a=a|0;b=b|0;return Ra()|0}function ps(a,b,c){a=a|0;b=b|0;c=c|0;if(c|0)yD(a|0,b|0,c|0)|0;return a|0}function qs(a){a=a|0;c[a>>2]=24936;Cu(a+4|0);return}function rs(a){a=a|0;qs(a);Gf(a);return}function ss(a,b){a=a|0;b=b|0;return}function ts(a,b,c){a=a|0;b=b|0;c=c|0;return a|0}function us(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;b=a;c[b>>2]=0;c[b+4>>2]=0;b=a+8|0;c[b>>2]=-1;c[b+4>>2]=-1;return}function vs(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;b=a;c[b>>2]=0;c[b+4>>2]=0;b=a+8|0;c[b>>2]=-1;c[b+4>>2]=-1;return}function ws(a){a=a|0;return 0}function xs(a){a=a|0;return 0}function ys(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;Es()|0;i=a+12|0;g=a+16|0;h=0;while(1){if((h|0)>=(d|0))break;e=c[i>>2]|0;f=c[g>>2]|0;if(e>>>0<f>>>0){f=f-e>>2;j=d-h|0;f=(j|0)<(f|0)?j:f;Gs(b,e,f)|0;c[i>>2]=(c[i>>2]|0)+(f<<2);e=f;b=b+(f<<2)|0}else{e=ma[c[(c[a>>2]|0)+40>>2]&127](a)|0;if((e|0)==-1)break;c[b>>2]=Hs(e)|0;e=1;b=b+4|0}h=e+h|0}return h|0}function zs(a){a=a|0;return Es()|0}function As(a){a=a|0;var b=0;b=ma[c[(c[a>>2]|0)+36>>2]&127](a)|0;if((b|0)==(Es()|0))a=Es()|0;else{b=a+12|0;a=c[b>>2]|0;c[b>>2]=a+4;a=Fs(c[a>>2]|0)|0}return a|0}function Bs(a,b){a=a|0;b=b|0;return Es()|0}function Cs(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;j=Es()|0;i=a+24|0;h=a+28|0;e=0;while(1){if((e|0)>=(d|0))break;f=c[i>>2]|0;g=c[h>>2]|0;if(f>>>0<g>>>0){g=g-f>>2;k=d-e|0;g=(k|0)<(g|0)?k:g;Gs(f,b,g)|0;c[i>>2]=(c[i>>2]|0)+(g<<2);e=g+e|0;b=b+(g<<2)|0}else{g=c[(c[a>>2]|0)+52>>2]|0;k=Fs(c[b>>2]|0)|0;if((oa[g&63](a,k)|0)==(j|0))break;e=e+1|0;b=b+4|0}}return e|0}function Ds(a,b){a=a|0;b=b|0;return Es()|0}function Es(){return -1}function Fs(a){a=a|0;return a|0}function Gs(a,b,c){a=a|0;b=b|0;c=c|0;if(c)ze(a,b,c)|0;return a|0}function Hs(a){a=a|0;return a|0}function Is(a){a=a|0;Ms(a,25032);Xr(a+8|0);return}function Js(a){a=a|0;Is(a);Gf(a);return}function Ks(a){a=a|0;Is(a+(c[(c[a>>2]|0)+-12>>2]|0)|0);return}function Ls(a){a=a|0;Js(a+(c[(c[a>>2]|0)+-12>>2]|0)|0);return}function Ms(a,b){a=a|0;b=b|0;return}function Ns(a){a=a|0;Rs(a,25080);as(a+8|0);return}function Os(a){a=a|0;Ns(a);Gf(a);return}function Ps(a){a=a|0;Ns(a+(c[(c[a>>2]|0)+-12>>2]|0)|0);return}function Qs(a){a=a|0;Os(a+(c[(c[a>>2]|0)+-12>>2]|0)|0);return}function Rs(a,b){a=a|0;b=b|0;return}function Ss(a){a=a|0;Ws(a,25088);Xr(a+4|0);return}function Ts(a){a=a|0;Ss(a);Gf(a);return}function Us(a){a=a|0;Ss(a+(c[(c[a>>2]|0)+-12>>2]|0)|0);return}function Vs(a){a=a|0;Ts(a+(c[(c[a>>2]|0)+-12>>2]|0)|0);return}function Ws(a,b){a=a|0;b=b|0;return}function Xs(a){a=a|0;$s(a,25136);as(a+4|0);return}function Ys(a){a=a|0;Xs(a);Gf(a);return}function Zs(a){a=a|0;Xs(a+(c[(c[a>>2]|0)+-12>>2]|0)|0);return}function _s(a){a=a|0;Ys(a+(c[(c[a>>2]|0)+-12>>2]|0)|0);return}function $s(a,b){a=a|0;b=b|0;return}function at(a){a=a|0;gt(a,25204);Xr(a+12|0);return}function bt(a){a=a|0;at(a);Gf(a);return}function ct(a){a=a|0;at(a+-8|0);return}function dt(a){a=a|0;bt(a+-8|0);return}function et(a){a=a|0;at(a+(c[(c[a>>2]|0)+-12>>2]|0)|0);return}function ft(a){a=a|0;bt(a+(c[(c[a>>2]|0)+-12>>2]|0)|0);return}function gt(a,b){a=a|0;b=b|0;Ws(a+8|0,b+12|0);Ms(a,b+4|0);return}function ht(a,b){a=a|0;b=b|0;c[a+16>>2]=(c[a+24>>2]|0)==0|b;return}function it(a,b){a=a|0;b=b|0;var d=0;c[a+24>>2]=b;c[a+16>>2]=(b|0)==0&1;c[a+20>>2]=0;c[a+4>>2]=4098;c[a+12>>2]=0;c[a+8>>2]=6;d=a+28|0;b=a+32|0;a=b+40|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(a|0));CC(d);return}function jt(a,b){a=a|0;b=b|0;AC(a,b+28|0);return}function kt(a,b){a=a|0;b=b|0;return (a|0)==(b|0)|0}function lt(a){a=a|0;c[a>>2]=24872;CC(a+4|0);a=a+8|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[a+16>>2]=0;c[a+20>>2]=0;return}function mt(a){a=a|0;c[a>>2]=24936;CC(a+4|0);a=a+8|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[a+16>>2]=0;c[a+20>>2]=0;return}function nt(d,e,f){d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;s=ja;ja=ja+16|0;j=s;a[d>>0]=0;h=e+(c[(c[e>>2]|0)+-12>>2]|0)|0;g=c[h+16>>2]|0;if(!g){g=c[h+72>>2]|0;if(g|0)ot(g)|0;do if(!f?(i=e+(c[(c[e>>2]|0)+-12>>2]|0)|0,c[i+4>>2]&4096|0):0){jt(j,i);p=Bu(j,108348)|0;Cu(j);h=c[e+(c[(c[e>>2]|0)+-12>>2]|0)+24>>2]|0;p=p+8|0;l=h;q=(h|0)==0;o=l+12|0;n=l+16|0;m=h;while(1){if(q){f=0;h=0;break}g=c[o>>2]|0;if((g|0)==(c[n>>2]|0))g=ma[c[(c[m>>2]|0)+36>>2]&127](l)|0;else g=Va(a[g>>0]|0)|0;k=Qa(g,Ra()|0)|0;f=k?0:h;if(k){f=0;h=0;break}i=f;k=i+12|0;g=c[k>>2]|0;j=i+16|0;if((g|0)==(c[j>>2]|0))g=ma[c[(c[f>>2]|0)+36>>2]&127](i)|0;else g=Va(a[g>>0]|0)|0;if((g&255)<<24>>24<=-1){r=21;break}if(!(b[(c[p>>2]|0)+(g<<24>>24<<1)>>1]&8192)){r=21;break}g=c[k>>2]|0;if((g|0)==(c[j>>2]|0))ma[c[(c[f>>2]|0)+40>>2]&127](i)|0;else{c[k>>2]=g+1;Va(a[g>>0]|0)|0}}if(h|0){g=c[f+12>>2]|0;if((g|0)==(c[f+16>>2]|0))g=ma[c[(c[h>>2]|0)+36>>2]&127](f)|0;else g=Va(a[g>>0]|0)|0;if(!(Qa(g,Ra()|0)|0))break}r=e+(c[(c[e>>2]|0)+-12>>2]|0)|0;ht(r,c[r+16>>2]|6)}while(0);a[d>>0]=(c[e+(c[(c[e>>2]|0)+-12>>2]|0)+16>>2]|0)==0&1}else ht(h,g|4);ja=s;return}function ot(b){b=b|0;var d=0,e=0,f=0;e=ja;ja=ja+16|0;d=e;if(c[b+(c[(c[b>>2]|0)+-12>>2]|0)+24>>2]|0){pt(d,b);if(a[d>>0]|0?(f=c[b+(c[(c[b>>2]|0)+-12>>2]|0)+24>>2]|0,(ma[c[(c[f>>2]|0)+24>>2]&127](f)|0)==-1):0){f=b+(c[(c[b>>2]|0)+-12>>2]|0)|0;ht(f,c[f+16>>2]|1)}qt(d)}ja=e;return b|0}function pt(b,d){b=b|0;d=d|0;a[b>>0]=0;c[b+4>>2]=d;d=d+(c[(c[d>>2]|0)+-12>>2]|0)|0;if(!(c[d+16>>2]|0)){d=c[d+72>>2]|0;if(d|0)ot(d)|0;a[b>>0]=1}return}function qt(a){a=a|0;var b=0;a=a+4|0;b=c[a>>2]|0;b=b+(c[(c[b>>2]|0)+-12>>2]|0)|0;if((((c[b+24>>2]|0?(c[b+16>>2]|0)==0:0)?c[b+4>>2]&8192|0:0)?!(Vr()|0):0)?(b=c[a>>2]|0,b=c[b+(c[(c[b>>2]|0)+-12>>2]|0)+24>>2]|0,(ma[c[(c[b>>2]|0)+24>>2]&127](b)|0)==-1):0){b=c[a>>2]|0;b=b+(c[(c[b>>2]|0)+-12>>2]|0)|0;ht(b,c[b+16>>2]|1)}return}function rt(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;h=ja;ja=ja+16|0;i=h;f=b+4|0;c[f>>2]=0;nt(i,b,1);g=b+(c[(c[b>>2]|0)+-12>>2]|0)|0;if(a[i>>0]|0){i=c[g+24>>2]|0;i=pa[c[(c[i>>2]|0)+32>>2]&31](i,d,e)|0;c[f>>2]=i;if((i|0)!=(e|0)){i=b+(c[(c[b>>2]|0)+-12>>2]|0)|0;ht(i,c[i+16>>2]|6)}}else ht(g,c[g+16>>2]|4);ja=h;return b|0}function st(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;f=ja;ja=ja+32|0;g=f+16|0;e=f;h=b;c[h>>2]=0;c[h+4>>2]=0;h=b+8|0;c[h>>2]=-1;c[h+4>>2]=-1;nt(g,d,1);if(a[g>>0]|0){h=c[d+(c[(c[d>>2]|0)+-12>>2]|0)+24>>2]|0;Da[c[(c[h>>2]|0)+16>>2]&15](e,h,0,0,1,8);c[b>>2]=c[e>>2];c[b+4>>2]=c[e+4>>2];c[b+8>>2]=c[e+8>>2];c[b+12>>2]=c[e+12>>2]}ja=f;return}function tt(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;h=ja;ja=ja+32|0;i=h+16|0;g=h;j=b+(c[(c[b>>2]|0)+-12>>2]|0)|0;ht(j,c[j+16>>2]&-3);nt(i,b,1);if(a[i>>0]|0?(j=c[b+(c[(c[b>>2]|0)+-12>>2]|0)+24>>2]|0,Da[c[(c[j>>2]|0)+16>>2]&15](g,j,d,e,f,8),j=g+8|0,(c[j>>2]|0)==-1?(c[j+4>>2]|0)==-1:0):0){j=b+(c[(c[b>>2]|0)+-12>>2]|0)|0;ht(j,c[j+16>>2]|4)}ja=h;return b|0}function ut(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;g=ja;ja=ja+16|0;f=g;pt(f,b);if((e|0)!=0&(a[f>>0]|0)!=0?(h=c[b+(c[(c[b>>2]|0)+-12>>2]|0)+24>>2]|0,(pa[c[(c[h>>2]|0)+48>>2]&31](h,d,e)|0)!=(e|0)):0){h=b+(c[(c[b>>2]|0)+-12>>2]|0)|0;ht(h,c[h+16>>2]|1)}qt(f);ja=g;return b|0}function vt(a){a=a|0;a=a+16|0;c[a>>2]=c[a>>2]|1;return}function wt(){yt();return}function xt(){return}function yt(){zt(0);return}function zt(a){a=a|0;var b=0,d=0;b=c[5351]|0;At(107980,b,108036);c[26825]=25004;c[26827]=25024;c[26826]=0;it(107308,107980);c[26845]=0;c[26846]=Ra()|0;Bt(108044,b,108100);c[26847]=25052;c[26849]=25072;c[26848]=0;it(107396,108044);c[26867]=0;c[26868]=Es()|0;b=c[5352]|0;Ct(108108,b,108156);c[26869]=17388;c[26870]=17408;it(107480,108108);c[26888]=0;c[26889]=Ra()|0;Dt(108164,b,108212);c[26890]=25108;c[26891]=25128;it(107564,108164);c[26909]=0;c[26910]=Es()|0;b=c[5350]|0;Ct(108220,b,108268);c[26911]=17388;c[26912]=17408;it(107648,108220);c[26930]=0;c[26931]=Ra()|0;a=c[107644+(c[(c[26911]|0)+-12>>2]|0)+24>>2]|0;c[26953]=17388;c[26954]=17408;it(107816,a);c[26972]=0;c[26973]=Ra()|0;Dt(108276,b,108324);c[26932]=25108;c[26933]=25128;it(107732,108276);c[26951]=0;c[26952]=Es()|0;b=c[107728+(c[(c[26932]|0)+-12>>2]|0)+24>>2]|0;c[26974]=25108;c[26975]=25128;it(107900,b);c[26993]=0;c[26994]=Es()|0;c[107300+(c[(c[26825]|0)+-12>>2]|0)+72>>2]=107476;c[107388+(c[(c[26847]|0)+-12>>2]|0)+72>>2]=107560;b=(c[26911]|0)+-12|0;a=107644+(c[b>>2]|0)+4|0;c[a>>2]=c[a>>2]|8192;a=(c[26932]|0)+-12|0;d=107728+(c[a>>2]|0)+4|0;c[d>>2]=c[d>>2]|8192;c[107644+(c[b>>2]|0)+72>>2]=107476;c[107728+(c[a>>2]|0)+72>>2]=107560;return}function At(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;f=ja;ja=ja+16|0;g=f;lt(b);c[b>>2]=25432;c[b+32>>2]=d;c[b+40>>2]=e;c[b+48>>2]=Ra()|0;a[b+52>>0]=0;e=c[(c[b>>2]|0)+8>>2]|0;AC(g,b+4|0);za[e&127](b,g);Cu(g);ja=f;return}function Bt(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;f=ja;ja=ja+16|0;g=f;mt(b);c[b>>2]=25368;c[b+32>>2]=d;c[b+40>>2]=e;c[b+48>>2]=Es()|0;a[b+52>>0]=0;e=c[(c[b>>2]|0)+8>>2]|0;AC(g,b+4|0);za[e&127](b,g);Cu(g);ja=f;return}function Ct(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;f=ja;ja=ja+16|0;g=f;lt(b);c[b>>2]=25304;c[b+32>>2]=d;AC(g,b+4|0);d=Bu(g,108652)|0;Cu(g);c[b+36>>2]=d;c[b+40>>2]=e;a[b+44>>0]=(ma[c[(c[d>>2]|0)+28>>2]&127](d)|0)&1;ja=f;return}function Dt(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;f=ja;ja=ja+16|0;g=f;mt(b);c[b>>2]=25240;c[b+32>>2]=d;AC(g,b+4|0);d=Bu(g,108660)|0;Cu(g);c[b+36>>2]=d;c[b+40>>2]=e;a[b+44>>0]=(ma[c[(c[d>>2]|0)+28>>2]&127](d)|0)&1;ja=f;return}function Et(a){a=a|0;qs(a);Gf(a);return}function Ft(b,d){b=b|0;d=d|0;ma[c[(c[b>>2]|0)+24>>2]&127](b)|0;d=Bu(d,108660)|0;c[b+36>>2]=d;a[b+44>>0]=(ma[c[(c[d>>2]|0)+28>>2]&127](d)|0)&1;return}function Gt(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;k=ja;ja=ja+16|0;f=k+8|0;e=k;d=a+36|0;g=a+40|0;h=f+8|0;i=f;a=a+32|0;a:while(1){b=c[d>>2]|0;b=sa[c[(c[b>>2]|0)+20>>2]&31](b,c[g>>2]|0,f,h,e)|0;l=(c[e>>2]|0)-i|0;if((Ae(f,1,l,c[a>>2]|0)|0)!=(l|0)){a=-1;break}switch(b|0){case 1:break;case 2:{a=-1;break a}default:{j=4;break a}}}if((j|0)==4)a=((Ge(c[a>>2]|0)|0)!=0)<<31>>31;ja=k;return a|0}function Ht(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;a:do if(!(a[b+44>>0]|0)){f=0;while(1){if((f|0)>=(e|0))break a;h=c[(c[b>>2]|0)+52>>2]|0;g=Fs(c[d>>2]|0)|0;g=oa[h&63](b,g)|0;if((g|0)==(Es()|0))break a;f=f+1|0;d=d+4|0}}else f=Ae(d,4,e,c[b+32>>2]|0)|0;while(0);return f|0}function It(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=ja;ja=ja+32|0;n=o+16|0;f=o+8|0;m=o+4|0;l=o;do if(!(kt(d,Es()|0)|0)){c[f>>2]=Hs(d)|0;if(a[b+44>>0]|0){if((Ae(f,4,1,c[b+32>>2]|0)|0)==1){e=15;break}b=Es()|0;break}c[m>>2]=n;i=f+4|0;e=b+36|0;h=b+40|0;j=n+8|0;k=n;g=b+32|0;while(1){b=c[e>>2]|0;b=wa[c[(c[b>>2]|0)+12>>2]&15](b,c[h>>2]|0,f,i,l,n,j,m)|0;if((c[l>>2]|0)==(f|0)){e=14;break}if((b|0)==3){e=8;break}if(b>>>0>=2){e=14;break}f=(c[m>>2]|0)-k|0;if((Ae(n,1,f,c[g>>2]|0)|0)!=(f|0)){e=14;break}if((b|0)==1)f=c[l>>2]|0;else{e=13;break}}if((e|0)==8)if((Ae(f,1,1,c[g>>2]|0)|0)==1)e=13;else e=14;if((e|0)==13){e=15;break}else if((e|0)==14){b=Es()|0;break}}else e=15;while(0);if((e|0)==15)b=Jt(d)|0;ja=o;return b|0}function Jt(a){a=a|0;if(kt(a,Es()|0)|0)a=~(Es()|0);return a|0}function Kt(a){a=a|0;bs(a);Gf(a);return}function Lt(b,d){b=b|0;d=d|0;ma[c[(c[b>>2]|0)+24>>2]&127](b)|0;d=Bu(d,108652)|0;c[b+36>>2]=d;a[b+44>>0]=(ma[c[(c[d>>2]|0)+28>>2]&127](d)|0)&1;return}function Mt(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;k=ja;ja=ja+16|0;f=k+8|0;e=k;d=a+36|0;g=a+40|0;h=f+8|0;i=f;a=a+32|0;a:while(1){b=c[d>>2]|0;b=sa[c[(c[b>>2]|0)+20>>2]&31](b,c[g>>2]|0,f,h,e)|0;l=(c[e>>2]|0)-i|0;if((Ae(f,1,l,c[a>>2]|0)|0)!=(l|0)){a=-1;break}switch(b|0){case 1:break;case 2:{a=-1;break a}default:{j=4;break a}}}if((j|0)==4)a=((Ge(c[a>>2]|0)|0)!=0)<<31>>31;ja=k;return a|0}function Nt(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;a:do if(!(a[b+44>>0]|0)){f=0;while(1){if((f|0)>=(e|0))break a;h=c[(c[b>>2]|0)+52>>2]|0;g=Va(a[d>>0]|0)|0;g=oa[h&63](b,g)|0;if((g|0)==(Ra()|0))break a;f=f+1|0;d=d+1|0}}else f=Ae(d,1,e,c[b+32>>2]|0)|0;while(0);return f|0}function Ot(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=ja;ja=ja+32|0;n=o+16|0;f=o+8|0;m=o+4|0;l=o;do if(!(Qa(d,Ra()|0)|0)){a[f>>0]=Sa(d)|0;if(a[b+44>>0]|0){if((Ae(f,1,1,c[b+32>>2]|0)|0)==1){e=15;break}b=Ra()|0;break}c[m>>2]=n;i=f+1|0;e=b+36|0;h=b+40|0;j=n+8|0;k=n;g=b+32|0;while(1){b=c[e>>2]|0;b=wa[c[(c[b>>2]|0)+12>>2]&15](b,c[h>>2]|0,f,i,l,n,j,m)|0;if((c[l>>2]|0)==(f|0)){e=14;break}if((b|0)==3){e=8;break}if(b>>>0>=2){e=14;break}f=(c[m>>2]|0)-k|0;if((Ae(n,1,f,c[g>>2]|0)|0)!=(f|0)){e=14;break}if((b|0)==1)f=c[l>>2]|0;else{e=13;break}}if((e|0)==8)if((Ae(f,1,1,c[g>>2]|0)|0)==1)e=13;else e=14;if((e|0)==13){e=15;break}else if((e|0)==14){b=Ra()|0;break}}else e=15;while(0);if((e|0)==15)b=kb(d)|0;ja=o;return b|0}function Pt(a){a=a|0;qs(a);Gf(a);return}function Qt(b,d){b=b|0;d=d|0;var e=0,f=0;f=Bu(d,108660)|0;e=b+36|0;c[e>>2]=f;d=b+44|0;c[d>>2]=ma[c[(c[f>>2]|0)+24>>2]&127](f)|0;e=c[e>>2]|0;a[b+53>>0]=(ma[c[(c[e>>2]|0)+28>>2]&127](e)|0)&1;if((c[d>>2]|0)>8)Tx(35487);else return}function Rt(a){a=a|0;return Ut(a,0)|0}function St(a){a=a|0;return Ut(a,1)|0}function Tt(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;l=ja;ja=ja+32|0;j=l+16|0;i=l+8|0;f=l+4|0;g=l;h=kt(d,Es()|0)|0;k=b+52|0;e=(a[k>>0]|0)!=0;do if(h){if(!e){d=c[b+48>>2]|0;a[k>>0]=((kt(d,Es()|0)|0)^1)&1}}else{if(e){e=b+48|0;c[f>>2]=Hs(c[e>>2]|0)|0;h=c[b+36>>2]|0;switch(wa[c[(c[h>>2]|0)+12>>2]&15](h,c[b+40>>2]|0,f,f+4|0,g,j,j+8|0,i)|0){case 1:case 2:{h=11;break}case 3:{a[j>>0]=c[e>>2];c[i>>2]=j+1;h=8;break}default:h=8}a:do if((h|0)==8){g=b+32|0;while(1){f=c[i>>2]|0;if(f>>>0<=j>>>0){f=1;g=0;break a}b=f+-1|0;c[i>>2]=b;if((Ze(a[b>>0]|0,c[g>>2]|0)|0)==-1){h=11;break}}}while(0);if((h|0)==11){f=0;g=Es()|0}if(!f){d=g;break}}else e=b+48|0;c[e>>2]=d;a[k>>0]=1}while(0);ja=l;return d|0}function Ut(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;r=ja;ja=ja+32|0;q=r+16|0;p=r+8|0;l=r+4|0;m=r;g=b+52|0;if(a[g>>0]|0){f=b+48|0;e=c[f>>2]|0;if(d){c[f>>2]=Es()|0;a[g>>0]=0}}else{e=c[b+44>>2]|0;e=(e|0)>1?e:1;o=b+32|0;f=0;while(1){if(f>>>0>=e>>>0){n=9;break}g=We(c[o>>2]|0)|0;if((g|0)==-1){n=8;break}a[q+f>>0]=g;f=f+1|0}if((n|0)==8)e=Es()|0;else if((n|0)==9){do if(!(a[b+53>>0]|0)){j=b+40|0;i=b+36|0;k=p+4|0;a:while(1){s=c[j>>2]|0;f=s;g=c[f>>2]|0;f=c[f+4>>2]|0;t=c[i>>2]|0;h=q+e|0;switch(wa[c[(c[t>>2]|0)+16>>2]&15](t,s,q,h,l,p,k,m)|0){case 3:{n=15;break a}case 2:{n=17;break a}case 1:break;default:break a}t=c[j>>2]|0;c[t>>2]=g;c[t+4>>2]=f;if((e|0)==8){n=17;break}f=We(c[o>>2]|0)|0;if((f|0)==-1){n=17;break}a[h>>0]=f;e=e+1|0}if((n|0)==15)c[p>>2]=a[q>>0];else if((n|0)==17){e=Es()|0;break}n=19}else{c[p>>2]=a[q>>0];n=19}while(0);b:do if((n|0)==19){c:do if(d)c[b+48>>2]=Fs(c[p>>2]|0)|0;else{do{if((e|0)<=0)break c;e=e+-1|0;t=Fs(a[q+e>>0]|0)|0}while((Ze(t,c[o>>2]|0)|0)!=-1);e=Es()|0;break b}while(0);e=Fs(c[p>>2]|0)|0}while(0)}}ja=r;return e|0}function Vt(a){a=a|0;bs(a);Gf(a);return}function Wt(b,d){b=b|0;d=d|0;var e=0,f=0;f=Bu(d,108652)|0;e=b+36|0;c[e>>2]=f;d=b+44|0;c[d>>2]=ma[c[(c[f>>2]|0)+24>>2]&127](f)|0;e=c[e>>2]|0;a[b+53>>0]=(ma[c[(c[e>>2]|0)+28>>2]&127](e)|0)&1;if((c[d>>2]|0)>8)Tx(35487);else return}function Xt(a){a=a|0;return _t(a,0)|0}function Yt(a){a=a|0;return _t(a,1)|0}function Zt(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;l=ja;ja=ja+32|0;j=l+16|0;i=l+4|0;f=l+8|0;g=l;h=Qa(d,Ra()|0)|0;k=b+52|0;e=(a[k>>0]|0)!=0;do if(h){if(!e){d=c[b+48>>2]|0;a[k>>0]=((Qa(d,Ra()|0)|0)^1)&1}}else{if(e){e=b+48|0;a[f>>0]=Sa(c[e>>2]|0)|0;h=c[b+36>>2]|0;switch(wa[c[(c[h>>2]|0)+12>>2]&15](h,c[b+40>>2]|0,f,f+1|0,g,j,j+8|0,i)|0){case 1:case 2:{h=11;break}case 3:{a[j>>0]=c[e>>2];c[i>>2]=j+1;h=8;break}default:h=8}a:do if((h|0)==8){g=b+32|0;while(1){f=c[i>>2]|0;if(f>>>0<=j>>>0){f=1;g=0;break a}b=f+-1|0;c[i>>2]=b;if((Ze(a[b>>0]|0,c[g>>2]|0)|0)==-1){h=11;break}}}while(0);if((h|0)==11){f=0;g=Ra()|0}if(!f){d=g;break}}else e=b+48|0;c[e>>2]=d;a[k>>0]=1}while(0);ja=l;return d|0}function _t(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;r=ja;ja=ja+32|0;q=r+16|0;p=r+8|0;l=r+4|0;m=r;g=b+52|0;if(a[g>>0]|0){f=b+48|0;e=c[f>>2]|0;if(d){c[f>>2]=Ra()|0;a[g>>0]=0}}else{e=c[b+44>>2]|0;e=(e|0)>1?e:1;o=b+32|0;f=0;while(1){if(f>>>0>=e>>>0){n=9;break}g=We(c[o>>2]|0)|0;if((g|0)==-1){n=8;break}a[q+f>>0]=g;f=f+1|0}if((n|0)==8)e=Ra()|0;else if((n|0)==9){do if(!(a[b+53>>0]|0)){j=b+40|0;i=b+36|0;k=p+1|0;a:while(1){s=c[j>>2]|0;f=s;g=c[f>>2]|0;f=c[f+4>>2]|0;t=c[i>>2]|0;h=q+e|0;switch(wa[c[(c[t>>2]|0)+16>>2]&15](t,s,q,h,l,p,k,m)|0){case 3:{n=15;break a}case 2:{n=17;break a}case 1:break;default:break a}t=c[j>>2]|0;c[t>>2]=g;c[t+4>>2]=f;if((e|0)==8){n=17;break}f=We(c[o>>2]|0)|0;if((f|0)==-1){n=17;break}a[h>>0]=f;e=e+1|0}if((n|0)==15)a[p>>0]=a[q>>0]|0;else if((n|0)==17){e=Ra()|0;break}n=19}else{a[p>>0]=a[q>>0]|0;n=19}while(0);b:do if((n|0)==19){c:do if(d)c[b+48>>2]=Va(a[p>>0]|0)|0;else{do{if((e|0)<=0)break c;e=e+-1|0;t=Va(a[q+e>>0]|0)|0}while((Ze(t,c[o>>2]|0)|0)!=-1);e=Ra()|0;break b}while(0);e=Va(a[p>>0]|0)|0}while(0)}}ja=r;return e|0}function $t(a){a=a|0;gu(a);return}function au(a){a=a|0;$t(a);Gf(a);return}function bu(a){a=a|0;if(a|0)ya[c[(c[a>>2]|0)+4>>2]&255](a);return}function cu(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=e;while(1){if((g|0)==(f|0)){h=7;break}if((c|0)==(d|0)){c=-1;break}b=a[c>>0]|0;e=a[g>>0]|0;if(b<<24>>24<e<<24>>24){c=-1;break}if(e<<24>>24<b<<24>>24){c=1;break}c=c+1|0;g=g+1|0}if((h|0)==7)c=(c|0)!=(d|0)&1;return c|0}function du(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;fu(a,d,e);return}function eu(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0;b=0;while(1){if((c|0)==(d|0))break;e=(b<<4)+(a[c>>0]|0)|0;f=e&-268435456;b=(f>>>24|f)^e;c=c+1|0}return b|0}function fu(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;i=ja;ja=ja+16|0;g=d;h=i;f=e-g|0;if(f>>>0>4294967279)JC(b);if(f>>>0<11)a[b+11>>0]=f;else{k=f+16&-16;j=Mr(k)|0;c[b>>2]=j;c[b+8>>2]=k|-2147483648;c[b+4>>2]=f;b=j}g=e-g|0;f=b;while(1){if((d|0)==(e|0))break;Ua(f,d);d=d+1|0;f=f+1|0}a[h>>0]=0;Ua(b+g|0,h);ja=i;return}function gu(a){a=a|0;return}function hu(a){a=a|0;gu(a);return}function iu(a){a=a|0;hu(a);Gf(a);return}function ju(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=e;while(1){if((g|0)==(f|0)){h=7;break}if((b|0)==(d|0)){b=-1;break}a=c[b>>2]|0;e=c[g>>2]|0;if((a|0)<(e|0)){b=-1;break}if((e|0)<(a|0)){b=1;break}b=b+4|0;g=g+4|0}if((h|0)==7)b=(b|0)!=(d|0)&1;return b|0}function ku(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;mu(a,d,e);return}function lu(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;a=0;while(1){if((b|0)==(d|0))break;e=(c[b>>2]|0)+(a<<4)|0;f=e&-268435456;a=(f>>>24|f)^e;b=b+4|0}return a|0}function mu(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;j=ja;ja=ja+16|0;i=j;h=e-d>>2;if(h>>>0>1073741807)JC(b);do if(h>>>0>=2){g=h+4&-4;if(g>>>0>1073741823)S();else{f=Mr(g<<2)|0;c[b>>2]=f;c[b+8>>2]=g|-2147483648;c[b+4>>2]=h;break}}else{a[b+8+3>>0]=h;f=b}while(0);while(1){if((d|0)==(e|0))break;nu(f,d);d=d+4|0;f=f+4|0}c[i>>2]=0;nu(f,i);ja=j;return}function nu(a,b){a=a|0;b=b|0;c[a>>2]=c[b>>2];return}function ou(a){a=a|0;gu(a);return}function pu(a){a=a|0;gu(a);Gf(a);return}function qu(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=ja;ja=ja+48|0;m=o+40|0;n=o;i=o+32|0;j=o+36|0;k=o+28|0;l=o+24|0;if(!(c[f+4>>2]&1)){c[i>>2]=-1;l=c[(c[b>>2]|0)+16>>2]|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];c[n>>2]=c[j>>2];c[m>>2]=c[k>>2];c[d>>2]=ua[l&63](b,n,m,f,g,i)|0;switch(c[i>>2]|0){case 0:{a[h>>0]=0;break}case 1:{a[h>>0]=1;break}default:{a[h>>0]=1;c[g>>2]=4}}d=c[d>>2]|0}else{jt(m,f);b=Bu(m,108348)|0;Cu(m);jt(m,f);k=Bu(m,108364)|0;Cu(m);za[c[(c[k>>2]|0)+24>>2]&127](n,k);za[c[(c[k>>2]|0)+28>>2]&127](n+12|0,k);c[l>>2]=c[e>>2];e=n+24|0;c[m>>2]=c[l>>2];a[h>>0]=(jv(d,m,n,e,b,g,1)|0)==(n|0)&1;d=c[d>>2]|0;do{e=e+-12|0;OC(e)}while((e|0)!=(n|0))}ja=o;return d|0}function ru(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=ja;ja=ja+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];a=hv(a,j,i,e,f,g)|0;ja=h;return a|0}function su(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=ja;ja=ja+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];a=fv(a,j,i,e,f,g)|0;ja=h;return a|0}function tu(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=ja;ja=ja+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];a=dv(a,j,i,e,f,g)|0;ja=h;return a|0}function uu(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=ja;ja=ja+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];a=bv(a,j,i,e,f,g)|0;ja=h;return a|0}function vu(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=ja;ja=ja+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];a=$u(a,j,i,e,f,g)|0;ja=h;return a|0}function wu(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=ja;ja=ja+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];a=Vu(a,j,i,e,f,g)|0;ja=h;return a|0}function xu(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=ja;ja=ja+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];a=Tu(a,j,i,e,f,g)|0;ja=h;return a|0}function yu(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=ja;ja=ja+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];a=Ru(a,j,i,e,f,g)|0;ja=h;return a|0}function zu(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=ja;ja=ja+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];a=Mu(a,j,i,e,f,g)|0;ja=h;return a|0}function Au(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;y=ja;ja=ja+240|0;v=y+192|0;q=y+160|0;w=y+220|0;x=y+208|0;u=y+204|0;s=y;t=y+200|0;r=y+196|0;c[w>>2]=0;c[w+4>>2]=0;c[w+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[w+(b<<2)>>2]=0;b=b+1|0}jt(x,f);b=Bu(x,108348)|0;qa[c[(c[b>>2]|0)+32>>2]&15](b,17424,17450,q)|0;Cu(x);c[x>>2]=0;c[x+4>>2]=0;c[x+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[x+(b<<2)>>2]=0;b=b+1|0}p=x+11|0;o=x+8|0;if((a[p>>0]|0)<0)b=(c[o>>2]&2147483647)+-1|0;else b=10;TC(x,b,0);b=(a[p>>0]|0)<0?c[x>>2]|0:x;c[u>>2]=b;c[t>>2]=s;c[r>>2]=0;n=x+4|0;i=c[d>>2]|0;j=i;a:while(1){if(i){f=c[i+12>>2]|0;if((f|0)==(c[i+16>>2]|0))f=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else f=Va(a[f>>0]|0)|0;if(Qa(f,Ra()|0)|0){c[d>>2]=0;m=0;j=0;k=1}else{m=i;k=0}}else{m=0;j=0;k=1}i=c[e>>2]|0;do if(i){f=c[i+12>>2]|0;if((f|0)==(c[i+16>>2]|0))f=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else f=Va(a[f>>0]|0)|0;if(!(Qa(f,Ra()|0)|0))if(k)break;else break a;else{c[e>>2]=0;z=22;break}}else z=22;while(0);if((z|0)==22){z=0;if(k){i=0;break}else i=0}f=a[p>>0]|0;f=f<<24>>24<0?c[n>>2]|0:f&255;if((c[u>>2]|0)==(b+f|0)){TC(x,f<<1,0);if((a[p>>0]|0)<0)b=(c[o>>2]&2147483647)+-1|0;else b=10;TC(x,b,0);b=(a[p>>0]|0)<0?c[x>>2]|0:x;c[u>>2]=b+f}l=m+12|0;f=c[l>>2]|0;k=m+16|0;if((f|0)==(c[k>>2]|0))f=ma[c[(c[m>>2]|0)+36>>2]&127](m)|0;else f=Va(a[f>>0]|0)|0;if(Du(f&255,16,b,u,r,0,w,s,t,q)|0)break;f=c[l>>2]|0;if((f|0)==(c[k>>2]|0))ma[c[(c[m>>2]|0)+40>>2]&127](m)|0;else{c[l>>2]=f+1;Va(a[f>>0]|0)|0}i=m}TC(x,(c[u>>2]|0)-b|0,0);t=(a[p>>0]|0)<0?c[x>>2]|0:x;u=Eu()|0;c[v>>2]=h;if((Fu(t,u,35635,v)|0)!=1)c[g>>2]=4;if(m){b=c[m+12>>2]|0;if((b|0)==(c[m+16>>2]|0))b=ma[c[(c[j>>2]|0)+36>>2]&127](m)|0;else b=Va(a[b>>0]|0)|0;if(Qa(b,Ra()|0)|0){c[d>>2]=0;f=1}else f=0}else f=1;do if(i){b=c[i+12>>2]|0;if((b|0)==(c[i+16>>2]|0))b=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else b=Va(a[b>>0]|0)|0;if(!(Qa(b,Ra()|0)|0))if(f)break;else{z=52;break}else{c[e>>2]=0;z=50;break}}else z=50;while(0);if((z|0)==50?f:0)z=52;if((z|0)==52)c[g>>2]=c[g>>2]|2;z=c[d>>2]|0;OC(x);OC(w);ja=y;return z|0}function Bu(a,b){a=a|0;b=b|0;a=c[a>>2]|0;return Hu(a,Gu(b)|0)|0}function Cu(a){a=a|0;var b=0,d=0;a=c[a>>2]|0;d=a+4|0;b=c[d>>2]|0;c[d>>2]=b+-1;if(!b)ya[c[(c[a>>2]|0)+8>>2]&255](a);return}function Du(b,d,e,f,g,h,i,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0;o=c[f>>2]|0;p=(o|0)==(e|0);do if(p){m=(a[l+24>>0]|0)==b<<24>>24;if(!m?(a[l+25>>0]|0)!=b<<24>>24:0){n=5;break}c[f>>2]=e+1;a[e>>0]=m?43:45;c[g>>2]=0;i=0}else n=5;while(0);a:do if((n|0)==5){n=a[i+11>>0]|0;if(b<<24>>24==h<<24>>24?((n<<24>>24<0?c[i+4>>2]|0:n&255)|0)!=0:0){i=c[k>>2]|0;if((i-j|0)>=160){i=0;break}p=c[g>>2]|0;c[k>>2]=i+4;c[i>>2]=p;c[g>>2]=0;i=0;break}m=l+26|0;h=0;while(1){i=l+h|0;if((h|0)==26){i=m;break}if((a[i>>0]|0)==b<<24>>24)break;else h=h+1|0}i=i-l|0;if((i|0)>23)i=-1;else{switch(d|0){case 10:case 8:{if((i|0)>=(d|0)){i=-1;break a}break}case 16:{if((i|0)>=22){if(p){i=-1;break a}if((o-e|0)>=3){i=-1;break a}if((a[o+-1>>0]|0)!=48){i=-1;break a}c[g>>2]=0;i=a[17424+i>>0]|0;c[f>>2]=o+1;a[o>>0]=i;i=0;break a}break}default:{}}i=a[17424+i>>0]|0;c[f>>2]=o+1;a[o>>0]=i;c[g>>2]=(c[g>>2]|0)+1;i=0}}while(0);return i|0}function Eu(){if((a[106512]|0)==0?Hr(106512)|0:0){c[27089]=te(2147483647,35638,0)|0;Jr(106512)}return c[27089]|0}function Fu(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=ja;ja=ja+16|0;g=f;c[g>>2]=e;e=xe(b)|0;b=Je(a,d,g)|0;if(e|0)xe(e)|0;ja=f;return b|0}function Gu(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;f=ja;ja=ja+48|0;d=f+32|0;b=f+24|0;e=f;g=f+16|0;c[g>>2]=183;c[g+4>>2]=0;c[d>>2]=c[g>>2];c[d+4>>2]=c[g+4>>2];Ju(e,d,a);if((c[a>>2]|0)!=-1){c[d>>2]=e;c[b>>2]=d;EC(a,b,184)}ja=f;return (c[a+4>>2]|0)+-1|0}function Hu(a,b){a=a|0;b=b|0;return c[(c[a+8>>2]|0)+(b<<2)>>2]|0}function Iu(a){a=a|0;var b=0;b=c[27090]|0;c[27090]=b+1;c[a+4>>2]=b+1;return}function Ju(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=c[b>>2]|0;b=c[b+4>>2]|0;c[a>>2]=d;c[a+4>>2]=e;c[a+8>>2]=b;return}function Ku(a){a=a|0;Lu(c[c[a>>2]>>2]|0);return}function Lu(a){a=a|0;var b=0,d=0;b=c[a+4>>2]|0;d=c[a+8>>2]|0;a=(c[a>>2]|0)+(d>>1)|0;if(d&1)b=c[(c[a>>2]|0)+b>>2]|0;ya[b&255](a);return}function Mu(b,d,e,f,h,i){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;D=ja;ja=ja+240|0;r=D+160|0;s=D+231|0;u=D+230|0;C=D+216|0;B=D+204|0;v=D+200|0;x=D;y=D+196|0;w=D+192|0;z=D+229|0;t=D+228|0;Nu(C,f,r,s,u);c[B>>2]=0;c[B+4>>2]=0;c[B+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[B+(b<<2)>>2]=0;b=b+1|0}q=B+11|0;p=B+8|0;if((a[q>>0]|0)<0)b=(c[p>>2]&2147483647)+-1|0;else b=10;TC(B,b,0);b=(a[q>>0]|0)<0?c[B>>2]|0:B;c[v>>2]=b;c[y>>2]=x;c[w>>2]=0;a[z>>0]=1;a[t>>0]=69;o=B+4|0;k=c[d>>2]|0;j=k;a:while(1){if(j){f=c[j+12>>2]|0;if((f|0)==(c[j+16>>2]|0))f=ma[c[(c[j>>2]|0)+36>>2]&127](j)|0;else f=Va(a[f>>0]|0)|0;if(Qa(f,Ra()|0)|0){c[d>>2]=0;n=0;k=0;l=1}else{n=j;l=0}}else{n=0;k=0;l=1}j=c[e>>2]|0;do if(j){f=c[j+12>>2]|0;if((f|0)==(c[j+16>>2]|0))f=ma[c[(c[j>>2]|0)+36>>2]&127](j)|0;else f=Va(a[f>>0]|0)|0;if(!(Qa(f,Ra()|0)|0))if(l)break;else break a;else{c[e>>2]=0;E=19;break}}else E=19;while(0);if((E|0)==19){E=0;if(l){j=0;break}else j=0}f=a[q>>0]|0;f=f<<24>>24<0?c[o>>2]|0:f&255;if((c[v>>2]|0)==(b+f|0)){TC(B,f<<1,0);if((a[q>>0]|0)<0)b=(c[p>>2]&2147483647)+-1|0;else b=10;TC(B,b,0);b=(a[q>>0]|0)<0?c[B>>2]|0:B;c[v>>2]=b+f}m=n+12|0;f=c[m>>2]|0;l=n+16|0;if((f|0)==(c[l>>2]|0))f=ma[c[(c[n>>2]|0)+36>>2]&127](n)|0;else f=Va(a[f>>0]|0)|0;if(Ou(f&255,z,t,b,v,a[s>>0]|0,a[u>>0]|0,C,x,y,w,r)|0)break;f=c[m>>2]|0;if((f|0)==(c[l>>2]|0))ma[c[(c[n>>2]|0)+40>>2]&127](n)|0;else{c[m>>2]=f+1;Va(a[f>>0]|0)|0}j=n}u=a[C+11>>0]|0;if(!((a[z>>0]|0)==0?1:((u<<24>>24<0?c[C+4>>2]|0:u&255)|0)==0)?(A=c[y>>2]|0,(A-x|0)<160):0){z=c[w>>2]|0;c[y>>2]=A+4;c[A>>2]=z}g[i>>3]=+Pu(b,c[v>>2]|0,h);Qu(C,x,c[y>>2]|0,h);if(n){b=c[n+12>>2]|0;if((b|0)==(c[n+16>>2]|0))b=ma[c[(c[k>>2]|0)+36>>2]&127](n)|0;else b=Va(a[b>>0]|0)|0;if(Qa(b,Ra()|0)|0){c[d>>2]=0;f=1}else f=0}else f=1;do if(j){b=c[j+12>>2]|0;if((b|0)==(c[j+16>>2]|0))b=ma[c[(c[j>>2]|0)+36>>2]&127](j)|0;else b=Va(a[b>>0]|0)|0;if(!(Qa(b,Ra()|0)|0))if(f)break;else{E=50;break}else{c[e>>2]=0;E=48;break}}else E=48;while(0);if((E|0)==48?f:0)E=50;if((E|0)==50)c[h>>2]=c[h>>2]|2;E=c[d>>2]|0;OC(B);OC(C);ja=D;return E|0}function Nu(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=ja;ja=ja+16|0;i=h;jt(i,d);d=Bu(i,108348)|0;qa[c[(c[d>>2]|0)+32>>2]&15](d,17424,17456,e)|0;d=Bu(i,108364)|0;a[f>>0]=ma[c[(c[d>>2]|0)+12>>2]&127](d)|0;a[g>>0]=ma[c[(c[d>>2]|0)+16>>2]&127](d)|0;za[c[(c[d>>2]|0)+20>>2]&127](b,d);Cu(i);ja=h;return}function Ou(b,d,e,f,g,h,i,j,k,l,m,n){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0;a:do if(b<<24>>24==h<<24>>24)if(a[d>>0]|0){a[d>>0]=0;e=c[g>>2]|0;c[g>>2]=e+1;a[e>>0]=46;e=a[j+11>>0]|0;if(((e<<24>>24<0?c[j+4>>2]|0:e&255)|0)!=0?(o=c[l>>2]|0,(o-k|0)<160):0){k=c[m>>2]|0;c[l>>2]=o+4;c[o>>2]=k;o=0}else o=0}else o=-1;else{if(b<<24>>24==i<<24>>24?(i=a[j+11>>0]|0,(i<<24>>24<0?c[j+4>>2]|0:i&255)|0):0){if(!(a[d>>0]|0)){o=-1;break}o=c[l>>2]|0;if((o-k|0)>=160){o=0;break}k=c[m>>2]|0;c[l>>2]=o+4;c[o>>2]=k;c[m>>2]=0;o=0;break}i=n+32|0;h=0;while(1){o=n+h|0;if((h|0)==32){o=i;break}if((a[o>>0]|0)==b<<24>>24)break;else h=h+1|0}h=o-n|0;if((h|0)>31)o=-1;else{i=a[17424+h>>0]|0;switch(h|0){case 24:case 25:{o=c[g>>2]|0;if((o|0)!=(f|0)?(a[o+-1>>0]&95)!=(a[e>>0]&127):0){o=-1;break a}c[g>>2]=o+1;a[o>>0]=i;o=0;break a}case 23:case 22:{a[e>>0]=80;o=c[g>>2]|0;c[g>>2]=o+1;a[o>>0]=i;o=0;break a}default:{o=i&95;if((((o|0)==(a[e>>0]|0)?(a[e>>0]=o|128,a[d>>0]|0):0)?(a[d>>0]=0,e=a[j+11>>0]|0,(e<<24>>24<0?c[j+4>>2]|0:e&255)|0):0)?(p=c[l>>2]|0,(p-k|0)<160):0){k=c[m>>2]|0;c[l>>2]=p+4;c[p>>2]=k}l=c[g>>2]|0;c[g>>2]=l+1;a[l>>0]=i;if((h|0)>21){o=0;break a}c[m>>2]=(c[m>>2]|0)+1;o=0;break a}}}}while(0);return o|0}function Pu(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0,g=0,h=0,i=0;i=ja;ja=ja+16|0;g=i;if((a|0)==(b|0)){c[d>>2]=4;e=0.0}else{f=c[(Uc()|0)>>2]|0;c[(Uc()|0)>>2]=0;e=+ff(a,g,Eu()|0);a=c[(Uc()|0)>>2]|0;if(!a)c[(Uc()|0)>>2]=f;if((c[g>>2]|0)==(b|0)){if((a|0)==68)h=6}else{e=0.0;h=6}if((h|0)==6)c[d>>2]=4}ja=i;return +e}function Qu(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;j=b+11|0;h=a[j>>0]|0;k=b+4|0;i=c[k>>2]|0;g=h&255;do if((h<<24>>24<0?i:g)|0){if((d|0)!=(e|0)){h=d;g=e;while(1){g=g+-4|0;if(h>>>0>=g>>>0)break;i=c[h>>2]|0;c[h>>2]=c[g>>2];c[g>>2]=i;h=h+4|0}g=a[j>>0]|0;h=g;i=c[k>>2]|0;g=g&255}j=h<<24>>24<0;b=j?c[b>>2]|0:b;k=e+-4|0;j=b+(j?i:g)|0;i=b;while(1){g=a[i>>0]|0;h=g<<24>>24>0&g<<24>>24!=127;if(d>>>0>=k>>>0)break;if(h?(c[d>>2]|0)!=(g<<24>>24|0):0){l=11;break}i=(j-i|0)>1?i+1|0:i;d=d+4|0}if((l|0)==11){c[f>>2]=4;break}if(h?((c[k>>2]|0)+-1|0)>>>0>=g<<24>>24>>>0:0)c[f>>2]=4}while(0);return}function Ru(b,d,e,f,h,i){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;D=ja;ja=ja+240|0;r=D+160|0;s=D+231|0;u=D+230|0;C=D+216|0;B=D+204|0;v=D+200|0;x=D;y=D+196|0;w=D+192|0;z=D+229|0;t=D+228|0;Nu(C,f,r,s,u);c[B>>2]=0;c[B+4>>2]=0;c[B+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[B+(b<<2)>>2]=0;b=b+1|0}q=B+11|0;p=B+8|0;if((a[q>>0]|0)<0)b=(c[p>>2]&2147483647)+-1|0;else b=10;TC(B,b,0);b=(a[q>>0]|0)<0?c[B>>2]|0:B;c[v>>2]=b;c[y>>2]=x;c[w>>2]=0;a[z>>0]=1;a[t>>0]=69;o=B+4|0;k=c[d>>2]|0;j=k;a:while(1){if(j){f=c[j+12>>2]|0;if((f|0)==(c[j+16>>2]|0))f=ma[c[(c[j>>2]|0)+36>>2]&127](j)|0;else f=Va(a[f>>0]|0)|0;if(Qa(f,Ra()|0)|0){c[d>>2]=0;n=0;k=0;l=1}else{n=j;l=0}}else{n=0;k=0;l=1}j=c[e>>2]|0;do if(j){f=c[j+12>>2]|0;if((f|0)==(c[j+16>>2]|0))f=ma[c[(c[j>>2]|0)+36>>2]&127](j)|0;else f=Va(a[f>>0]|0)|0;if(!(Qa(f,Ra()|0)|0))if(l)break;else break a;else{c[e>>2]=0;E=19;break}}else E=19;while(0);if((E|0)==19){E=0;if(l){j=0;break}else j=0}f=a[q>>0]|0;f=f<<24>>24<0?c[o>>2]|0:f&255;if((c[v>>2]|0)==(b+f|0)){TC(B,f<<1,0);if((a[q>>0]|0)<0)b=(c[p>>2]&2147483647)+-1|0;else b=10;TC(B,b,0);b=(a[q>>0]|0)<0?c[B>>2]|0:B;c[v>>2]=b+f}m=n+12|0;f=c[m>>2]|0;l=n+16|0;if((f|0)==(c[l>>2]|0))f=ma[c[(c[n>>2]|0)+36>>2]&127](n)|0;else f=Va(a[f>>0]|0)|0;if(Ou(f&255,z,t,b,v,a[s>>0]|0,a[u>>0]|0,C,x,y,w,r)|0)break;f=c[m>>2]|0;if((f|0)==(c[l>>2]|0))ma[c[(c[n>>2]|0)+40>>2]&127](n)|0;else{c[m>>2]=f+1;Va(a[f>>0]|0)|0}j=n}u=a[C+11>>0]|0;if(!((a[z>>0]|0)==0?1:((u<<24>>24<0?c[C+4>>2]|0:u&255)|0)==0)?(A=c[y>>2]|0,(A-x|0)<160):0){z=c[w>>2]|0;c[y>>2]=A+4;c[A>>2]=z}g[i>>3]=+Su(b,c[v>>2]|0,h);Qu(C,x,c[y>>2]|0,h);if(n){b=c[n+12>>2]|0;if((b|0)==(c[n+16>>2]|0))b=ma[c[(c[k>>2]|0)+36>>2]&127](n)|0;else b=Va(a[b>>0]|0)|0;if(Qa(b,Ra()|0)|0){c[d>>2]=0;f=1}else f=0}else f=1;do if(j){b=c[j+12>>2]|0;if((b|0)==(c[j+16>>2]|0))b=ma[c[(c[j>>2]|0)+36>>2]&127](j)|0;else b=Va(a[b>>0]|0)|0;if(!(Qa(b,Ra()|0)|0))if(f)break;else{E=50;break}else{c[e>>2]=0;E=48;break}}else E=48;while(0);if((E|0)==48?f:0)E=50;if((E|0)==50)c[h>>2]=c[h>>2]|2;E=c[d>>2]|0;OC(B);OC(C);ja=D;return E|0}function Su(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0,g=0,h=0,i=0;i=ja;ja=ja+16|0;g=i;if((a|0)==(b|0)){c[d>>2]=4;e=0.0}else{f=c[(Uc()|0)>>2]|0;c[(Uc()|0)>>2]=0;e=+ef(a,g,Eu()|0);a=c[(Uc()|0)>>2]|0;if(!a)c[(Uc()|0)>>2]=f;if((c[g>>2]|0)==(b|0)){if((a|0)==68)h=6}else{e=0.0;h=6}if((h|0)==6)c[d>>2]=4}ja=i;return +e}function Tu(b,d,e,g,h,i){b=b|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;D=ja;ja=ja+240|0;r=D+160|0;s=D+231|0;u=D+230|0;C=D+216|0;B=D+204|0;v=D+200|0;x=D;y=D+196|0;w=D+192|0;z=D+229|0;t=D+228|0;Nu(C,g,r,s,u);c[B>>2]=0;c[B+4>>2]=0;c[B+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[B+(b<<2)>>2]=0;b=b+1|0}q=B+11|0;p=B+8|0;if((a[q>>0]|0)<0)b=(c[p>>2]&2147483647)+-1|0;else b=10;TC(B,b,0);b=(a[q>>0]|0)<0?c[B>>2]|0:B;c[v>>2]=b;c[y>>2]=x;c[w>>2]=0;a[z>>0]=1;a[t>>0]=69;o=B+4|0;k=c[d>>2]|0;j=k;a:while(1){if(j){g=c[j+12>>2]|0;if((g|0)==(c[j+16>>2]|0))g=ma[c[(c[j>>2]|0)+36>>2]&127](j)|0;else g=Va(a[g>>0]|0)|0;if(Qa(g,Ra()|0)|0){c[d>>2]=0;n=0;k=0;l=1}else{n=j;l=0}}else{n=0;k=0;l=1}j=c[e>>2]|0;do if(j){g=c[j+12>>2]|0;if((g|0)==(c[j+16>>2]|0))g=ma[c[(c[j>>2]|0)+36>>2]&127](j)|0;else g=Va(a[g>>0]|0)|0;if(!(Qa(g,Ra()|0)|0))if(l)break;else break a;else{c[e>>2]=0;E=19;break}}else E=19;while(0);if((E|0)==19){E=0;if(l){j=0;break}else j=0}g=a[q>>0]|0;g=g<<24>>24<0?c[o>>2]|0:g&255;if((c[v>>2]|0)==(b+g|0)){TC(B,g<<1,0);if((a[q>>0]|0)<0)b=(c[p>>2]&2147483647)+-1|0;else b=10;TC(B,b,0);b=(a[q>>0]|0)<0?c[B>>2]|0:B;c[v>>2]=b+g}m=n+12|0;g=c[m>>2]|0;l=n+16|0;if((g|0)==(c[l>>2]|0))g=ma[c[(c[n>>2]|0)+36>>2]&127](n)|0;else g=Va(a[g>>0]|0)|0;if(Ou(g&255,z,t,b,v,a[s>>0]|0,a[u>>0]|0,C,x,y,w,r)|0)break;g=c[m>>2]|0;if((g|0)==(c[l>>2]|0))ma[c[(c[n>>2]|0)+40>>2]&127](n)|0;else{c[m>>2]=g+1;Va(a[g>>0]|0)|0}j=n}u=a[C+11>>0]|0;if(!((a[z>>0]|0)==0?1:((u<<24>>24<0?c[C+4>>2]|0:u&255)|0)==0)?(A=c[y>>2]|0,(A-x|0)<160):0){z=c[w>>2]|0;c[y>>2]=A+4;c[A>>2]=z}f[i>>2]=+Uu(b,c[v>>2]|0,h);Qu(C,x,c[y>>2]|0,h);if(n){b=c[n+12>>2]|0;if((b|0)==(c[n+16>>2]|0))b=ma[c[(c[k>>2]|0)+36>>2]&127](n)|0;else b=Va(a[b>>0]|0)|0;if(Qa(b,Ra()|0)|0){c[d>>2]=0;g=1}else g=0}else g=1;do if(j){b=c[j+12>>2]|0;if((b|0)==(c[j+16>>2]|0))b=ma[c[(c[j>>2]|0)+36>>2]&127](j)|0;else b=Va(a[b>>0]|0)|0;if(!(Qa(b,Ra()|0)|0))if(g)break;else{E=50;break}else{c[e>>2]=0;E=48;break}}else E=48;while(0);if((E|0)==48?g:0)E=50;if((E|0)==50)c[h>>2]=c[h>>2]|2;E=c[d>>2]|0;OC(B);OC(C);ja=D;return E|0}function Uu(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0,g=0,h=0,i=0;i=ja;ja=ja+16|0;g=i;if((a|0)==(b|0)){c[d>>2]=4;e=0.0}else{f=c[(Uc()|0)>>2]|0;c[(Uc()|0)>>2]=0;e=+df(a,g,Eu()|0);a=c[(Uc()|0)>>2]|0;if(!a)c[(Uc()|0)>>2]=f;if((c[g>>2]|0)==(b|0)){if((a|0)==68)h=6}else{e=0.0;h=6}if((h|0)==6)c[d>>2]=4}ja=i;return +e}function Vu(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0;C=ja;ja=ja+240|0;r=C+224|0;A=C+212|0;z=C+200|0;t=C+196|0;v=C;w=C+192|0;u=C+188|0;y=Wu(f)|0;q=Xu(b,f,C+160|0)|0;Yu(A,f,r);c[z>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[z+(b<<2)>>2]=0;b=b+1|0}p=z+11|0;o=z+8|0;if((a[p>>0]|0)<0)b=(c[o>>2]&2147483647)+-1|0;else b=10;TC(z,b,0);b=(a[p>>0]|0)<0?c[z>>2]|0:z;c[t>>2]=b;c[w>>2]=v;c[u>>2]=0;n=z+4|0;j=c[d>>2]|0;i=j;a:while(1){if(i){f=c[i+12>>2]|0;if((f|0)==(c[i+16>>2]|0))f=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else f=Va(a[f>>0]|0)|0;if(Qa(f,Ra()|0)|0){c[d>>2]=0;m=0;j=0;k=1}else{m=i;k=0}}else{m=0;j=0;k=1}i=c[e>>2]|0;do if(i){f=c[i+12>>2]|0;if((f|0)==(c[i+16>>2]|0))f=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else f=Va(a[f>>0]|0)|0;if(!(Qa(f,Ra()|0)|0))if(k)break;else break a;else{c[e>>2]=0;B=19;break}}else B=19;while(0);if((B|0)==19){B=0;if(k){i=0;break}else i=0}f=a[p>>0]|0;f=f<<24>>24<0?c[n>>2]|0:f&255;if((c[t>>2]|0)==(b+f|0)){TC(z,f<<1,0);if((a[p>>0]|0)<0)b=(c[o>>2]&2147483647)+-1|0;else b=10;TC(z,b,0);b=(a[p>>0]|0)<0?c[z>>2]|0:z;c[t>>2]=b+f}l=m+12|0;f=c[l>>2]|0;k=m+16|0;if((f|0)==(c[k>>2]|0))f=ma[c[(c[m>>2]|0)+36>>2]&127](m)|0;else f=Va(a[f>>0]|0)|0;if(Du(f&255,y,b,t,u,a[r>>0]|0,A,v,w,q)|0)break;f=c[l>>2]|0;if((f|0)==(c[k>>2]|0))ma[c[(c[m>>2]|0)+40>>2]&127](m)|0;else{c[l>>2]=f+1;Va(a[f>>0]|0)|0}i=m}r=a[A+11>>0]|0;if((r<<24>>24<0?c[A+4>>2]|0:r&255)|0?(s=c[w>>2]|0,(s-v|0)<160):0){u=c[u>>2]|0;c[w>>2]=s+4;c[s>>2]=u}t=Zu(b,c[t>>2]|0,g,y)|0;u=x()|0;y=h;c[y>>2]=t;c[y+4>>2]=u;Qu(A,v,c[w>>2]|0,g);if(m){b=c[m+12>>2]|0;if((b|0)==(c[m+16>>2]|0))b=ma[c[(c[j>>2]|0)+36>>2]&127](m)|0;else b=Va(a[b>>0]|0)|0;if(Qa(b,Ra()|0)|0){c[d>>2]=0;f=1}else f=0}else f=1;do if(i){b=c[i+12>>2]|0;if((b|0)==(c[i+16>>2]|0))b=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else b=Va(a[b>>0]|0)|0;if(!(Qa(b,Ra()|0)|0))if(f)break;else{B=50;break}else{c[e>>2]=0;B=48;break}}else B=48;while(0);if((B|0)==48?f:0)B=50;if((B|0)==50)c[g>>2]=c[g>>2]|2;B=c[d>>2]|0;OC(z);OC(A);ja=C;return B|0}function Wu(a){a=a|0;switch(c[a+4>>2]&74){case 64:{a=8;break}case 8:{a=16;break}case 0:{a=0;break}default:a=10}return a|0}function Xu(a,b,c){a=a|0;b=b|0;c=c|0;return _u(a,b,c)|0}function Yu(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;f=ja;ja=ja+16|0;g=f;jt(g,d);d=Bu(g,108364)|0;a[e>>0]=ma[c[(c[d>>2]|0)+16>>2]&127](d)|0;za[c[(c[d>>2]|0)+20>>2]&127](b,d);Cu(g);ja=f;return}function Zu(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;k=ja;ja=ja+16|0;i=k;do if((b|0)==(d|0)){c[e>>2]=4;f=0;b=0}else{j=(a[b>>0]|0)==45;if(j){b=b+1|0;if((b|0)==(d|0)){c[e>>2]=4;f=0;b=0;break}}h=c[(Uc()|0)>>2]|0;c[(Uc()|0)>>2]=0;b=Zc(b,i,f,Eu()|0)|0;g=x()|0;f=c[(Uc()|0)>>2]|0;if(!f)c[(Uc()|0)>>2]=h;do if((c[i>>2]|0)==(d|0))if((f|0)==68){c[e>>2]=4;b=-1;f=-1;break}else{i=rD(0,0,b|0,g|0)|0;f=x()|0;b=j?i:b;f=j?f:g;break}else{c[e>>2]=4;b=0;f=0}while(0)}while(0);w(f|0);ja=k;return b|0}function _u(a,b,c){a=a|0;b=b|0;c=c|0;return 17424}function $u(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;B=ja;ja=ja+240|0;r=B+224|0;z=B+212|0;y=B+200|0;t=B+196|0;v=B;w=B+192|0;u=B+188|0;x=Wu(f)|0;q=Xu(b,f,B+160|0)|0;Yu(z,f,r);c[y>>2]=0;c[y+4>>2]=0;c[y+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[y+(b<<2)>>2]=0;b=b+1|0}p=y+11|0;o=y+8|0;if((a[p>>0]|0)<0)b=(c[o>>2]&2147483647)+-1|0;else b=10;TC(y,b,0);b=(a[p>>0]|0)<0?c[y>>2]|0:y;c[t>>2]=b;c[w>>2]=v;c[u>>2]=0;n=y+4|0;j=c[d>>2]|0;i=j;a:while(1){if(i){f=c[i+12>>2]|0;if((f|0)==(c[i+16>>2]|0))f=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else f=Va(a[f>>0]|0)|0;if(Qa(f,Ra()|0)|0){c[d>>2]=0;m=0;j=0;k=1}else{m=i;k=0}}else{m=0;j=0;k=1}i=c[e>>2]|0;do if(i){f=c[i+12>>2]|0;if((f|0)==(c[i+16>>2]|0))f=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else f=Va(a[f>>0]|0)|0;if(!(Qa(f,Ra()|0)|0))if(k)break;else break a;else{c[e>>2]=0;A=19;break}}else A=19;while(0);if((A|0)==19){A=0;if(k){i=0;break}else i=0}f=a[p>>0]|0;f=f<<24>>24<0?c[n>>2]|0:f&255;if((c[t>>2]|0)==(b+f|0)){TC(y,f<<1,0);if((a[p>>0]|0)<0)b=(c[o>>2]&2147483647)+-1|0;else b=10;TC(y,b,0);b=(a[p>>0]|0)<0?c[y>>2]|0:y;c[t>>2]=b+f}l=m+12|0;f=c[l>>2]|0;k=m+16|0;if((f|0)==(c[k>>2]|0))f=ma[c[(c[m>>2]|0)+36>>2]&127](m)|0;else f=Va(a[f>>0]|0)|0;if(Du(f&255,x,b,t,u,a[r>>0]|0,z,v,w,q)|0)break;f=c[l>>2]|0;if((f|0)==(c[k>>2]|0))ma[c[(c[m>>2]|0)+40>>2]&127](m)|0;else{c[l>>2]=f+1;Va(a[f>>0]|0)|0}i=m}r=a[z+11>>0]|0;if((r<<24>>24<0?c[z+4>>2]|0:r&255)|0?(s=c[w>>2]|0,(s-v|0)<160):0){u=c[u>>2]|0;c[w>>2]=s+4;c[s>>2]=u}c[h>>2]=av(b,c[t>>2]|0,g,x)|0;Qu(z,v,c[w>>2]|0,g);if(m){b=c[m+12>>2]|0;if((b|0)==(c[m+16>>2]|0))b=ma[c[(c[j>>2]|0)+36>>2]&127](m)|0;else b=Va(a[b>>0]|0)|0;if(Qa(b,Ra()|0)|0){c[d>>2]=0;f=1}else f=0}else f=1;do if(i){b=c[i+12>>2]|0;if((b|0)==(c[i+16>>2]|0))b=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else b=Va(a[b>>0]|0)|0;if(!(Qa(b,Ra()|0)|0))if(f)break;else{A=50;break}else{c[e>>2]=0;A=48;break}}else A=48;while(0);if((A|0)==48?f:0)A=50;if((A|0)==50)c[g>>2]=c[g>>2]|2;A=c[d>>2]|0;OC(y);OC(z);ja=B;return A|0}function av(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;k=ja;ja=ja+16|0;i=k;do if((b|0)==(d|0)){c[e>>2]=4;b=0}else{j=(a[b>>0]|0)==45;if(j){b=b+1|0;if((b|0)==(d|0)){c[e>>2]=4;b=0;break}}h=c[(Uc()|0)>>2]|0;c[(Uc()|0)>>2]=0;b=Zc(b,i,f,Eu()|0)|0;f=x()|0;g=c[(Uc()|0)>>2]|0;if(!g)c[(Uc()|0)>>2]=h;do if((c[i>>2]|0)==(d|0))if(f>>>0>0|(f|0)==0&b>>>0>4294967295|(g|0)==68){c[e>>2]=4;b=-1;break}else{b=j?0-b|0:b;break}else{c[e>>2]=4;b=0}while(0)}while(0);ja=k;return b|0}function bv(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;B=ja;ja=ja+240|0;r=B+224|0;z=B+212|0;y=B+200|0;t=B+196|0;v=B;w=B+192|0;u=B+188|0;x=Wu(f)|0;q=Xu(b,f,B+160|0)|0;Yu(z,f,r);c[y>>2]=0;c[y+4>>2]=0;c[y+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[y+(b<<2)>>2]=0;b=b+1|0}p=y+11|0;o=y+8|0;if((a[p>>0]|0)<0)b=(c[o>>2]&2147483647)+-1|0;else b=10;TC(y,b,0);b=(a[p>>0]|0)<0?c[y>>2]|0:y;c[t>>2]=b;c[w>>2]=v;c[u>>2]=0;n=y+4|0;j=c[d>>2]|0;i=j;a:while(1){if(i){f=c[i+12>>2]|0;if((f|0)==(c[i+16>>2]|0))f=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else f=Va(a[f>>0]|0)|0;if(Qa(f,Ra()|0)|0){c[d>>2]=0;m=0;j=0;k=1}else{m=i;k=0}}else{m=0;j=0;k=1}i=c[e>>2]|0;do if(i){f=c[i+12>>2]|0;if((f|0)==(c[i+16>>2]|0))f=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else f=Va(a[f>>0]|0)|0;if(!(Qa(f,Ra()|0)|0))if(k)break;else break a;else{c[e>>2]=0;A=19;break}}else A=19;while(0);if((A|0)==19){A=0;if(k){i=0;break}else i=0}f=a[p>>0]|0;f=f<<24>>24<0?c[n>>2]|0:f&255;if((c[t>>2]|0)==(b+f|0)){TC(y,f<<1,0);if((a[p>>0]|0)<0)b=(c[o>>2]&2147483647)+-1|0;else b=10;TC(y,b,0);b=(a[p>>0]|0)<0?c[y>>2]|0:y;c[t>>2]=b+f}l=m+12|0;f=c[l>>2]|0;k=m+16|0;if((f|0)==(c[k>>2]|0))f=ma[c[(c[m>>2]|0)+36>>2]&127](m)|0;else f=Va(a[f>>0]|0)|0;if(Du(f&255,x,b,t,u,a[r>>0]|0,z,v,w,q)|0)break;f=c[l>>2]|0;if((f|0)==(c[k>>2]|0))ma[c[(c[m>>2]|0)+40>>2]&127](m)|0;else{c[l>>2]=f+1;Va(a[f>>0]|0)|0}i=m}r=a[z+11>>0]|0;if((r<<24>>24<0?c[z+4>>2]|0:r&255)|0?(s=c[w>>2]|0,(s-v|0)<160):0){u=c[u>>2]|0;c[w>>2]=s+4;c[s>>2]=u}c[h>>2]=cv(b,c[t>>2]|0,g,x)|0;Qu(z,v,c[w>>2]|0,g);if(m){b=c[m+12>>2]|0;if((b|0)==(c[m+16>>2]|0))b=ma[c[(c[j>>2]|0)+36>>2]&127](m)|0;else b=Va(a[b>>0]|0)|0;if(Qa(b,Ra()|0)|0){c[d>>2]=0;f=1}else f=0}else f=1;do if(i){b=c[i+12>>2]|0;if((b|0)==(c[i+16>>2]|0))b=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else b=Va(a[b>>0]|0)|0;if(!(Qa(b,Ra()|0)|0))if(f)break;else{A=50;break}else{c[e>>2]=0;A=48;break}}else A=48;while(0);if((A|0)==48?f:0)A=50;if((A|0)==50)c[g>>2]=c[g>>2]|2;A=c[d>>2]|0;OC(y);OC(z);ja=B;return A|0}function cv(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;k=ja;ja=ja+16|0;i=k;do if((b|0)==(d|0)){c[e>>2]=4;b=0}else{j=(a[b>>0]|0)==45;if(j){b=b+1|0;if((b|0)==(d|0)){c[e>>2]=4;b=0;break}}h=c[(Uc()|0)>>2]|0;c[(Uc()|0)>>2]=0;b=Zc(b,i,f,Eu()|0)|0;f=x()|0;g=c[(Uc()|0)>>2]|0;if(!g)c[(Uc()|0)>>2]=h;do if((c[i>>2]|0)==(d|0))if(f>>>0>0|(f|0)==0&b>>>0>4294967295|(g|0)==68){c[e>>2]=4;b=-1;break}else{b=j?0-b|0:b;break}else{c[e>>2]=4;b=0}while(0)}while(0);ja=k;return b|0}\nfunction dv(d,e,f,g,h,i){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;C=ja;ja=ja+240|0;s=C+224|0;A=C+212|0;z=C+200|0;u=C+196|0;w=C;x=C+192|0;v=C+188|0;y=Wu(g)|0;r=Xu(d,g,C+160|0)|0;Yu(A,g,s);c[z>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;d=0;while(1){if((d|0)==3)break;c[z+(d<<2)>>2]=0;d=d+1|0}q=z+11|0;p=z+8|0;if((a[q>>0]|0)<0)d=(c[p>>2]&2147483647)+-1|0;else d=10;TC(z,d,0);d=(a[q>>0]|0)<0?c[z>>2]|0:z;c[u>>2]=d;c[x>>2]=w;c[v>>2]=0;o=z+4|0;k=c[e>>2]|0;j=k;a:while(1){if(j){g=c[j+12>>2]|0;if((g|0)==(c[j+16>>2]|0))g=ma[c[(c[j>>2]|0)+36>>2]&127](j)|0;else g=Va(a[g>>0]|0)|0;if(Qa(g,Ra()|0)|0){c[e>>2]=0;n=0;k=0;l=1}else{n=j;l=0}}else{n=0;k=0;l=1}j=c[f>>2]|0;do if(j){g=c[j+12>>2]|0;if((g|0)==(c[j+16>>2]|0))g=ma[c[(c[j>>2]|0)+36>>2]&127](j)|0;else g=Va(a[g>>0]|0)|0;if(!(Qa(g,Ra()|0)|0))if(l)break;else break a;else{c[f>>2]=0;B=19;break}}else B=19;while(0);if((B|0)==19){B=0;if(l){j=0;break}else j=0}g=a[q>>0]|0;g=g<<24>>24<0?c[o>>2]|0:g&255;if((c[u>>2]|0)==(d+g|0)){TC(z,g<<1,0);if((a[q>>0]|0)<0)d=(c[p>>2]&2147483647)+-1|0;else d=10;TC(z,d,0);d=(a[q>>0]|0)<0?c[z>>2]|0:z;c[u>>2]=d+g}m=n+12|0;g=c[m>>2]|0;l=n+16|0;if((g|0)==(c[l>>2]|0))g=ma[c[(c[n>>2]|0)+36>>2]&127](n)|0;else g=Va(a[g>>0]|0)|0;if(Du(g&255,y,d,u,v,a[s>>0]|0,A,w,x,r)|0)break;g=c[m>>2]|0;if((g|0)==(c[l>>2]|0))ma[c[(c[n>>2]|0)+40>>2]&127](n)|0;else{c[m>>2]=g+1;Va(a[g>>0]|0)|0}j=n}s=a[A+11>>0]|0;if((s<<24>>24<0?c[A+4>>2]|0:s&255)|0?(t=c[x>>2]|0,(t-w|0)<160):0){v=c[v>>2]|0;c[x>>2]=t+4;c[t>>2]=v}b[i>>1]=ev(d,c[u>>2]|0,h,y)|0;Qu(A,w,c[x>>2]|0,h);if(n){d=c[n+12>>2]|0;if((d|0)==(c[n+16>>2]|0))d=ma[c[(c[k>>2]|0)+36>>2]&127](n)|0;else d=Va(a[d>>0]|0)|0;if(Qa(d,Ra()|0)|0){c[e>>2]=0;g=1}else g=0}else g=1;do if(j){d=c[j+12>>2]|0;if((d|0)==(c[j+16>>2]|0))d=ma[c[(c[j>>2]|0)+36>>2]&127](j)|0;else d=Va(a[d>>0]|0)|0;if(!(Qa(d,Ra()|0)|0))if(g)break;else{B=50;break}else{c[f>>2]=0;B=48;break}}else B=48;while(0);if((B|0)==48?g:0)B=50;if((B|0)==50)c[h>>2]=c[h>>2]|2;B=c[e>>2]|0;OC(z);OC(A);ja=C;return B|0}function ev(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;k=ja;ja=ja+16|0;i=k;do if((b|0)==(d|0)){c[e>>2]=4;b=0}else{j=(a[b>>0]|0)==45;if(j){b=b+1|0;if((b|0)==(d|0)){c[e>>2]=4;b=0;break}}h=c[(Uc()|0)>>2]|0;c[(Uc()|0)>>2]=0;b=Zc(b,i,f,Eu()|0)|0;f=x()|0;g=c[(Uc()|0)>>2]|0;if(!g)c[(Uc()|0)>>2]=h;do if((c[i>>2]|0)==(d|0)){if(f>>>0>0|(f|0)==0&b>>>0>65535|(g|0)==68){c[e>>2]=4;b=-1;break}if(j)b=0-b&65535;else b=b&65535}else{c[e>>2]=4;b=0}while(0)}while(0);ja=k;return b|0}function fv(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0;C=ja;ja=ja+240|0;r=C+224|0;A=C+212|0;z=C+200|0;t=C+196|0;v=C;w=C+192|0;u=C+188|0;y=Wu(f)|0;q=Xu(b,f,C+160|0)|0;Yu(A,f,r);c[z>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[z+(b<<2)>>2]=0;b=b+1|0}p=z+11|0;o=z+8|0;if((a[p>>0]|0)<0)b=(c[o>>2]&2147483647)+-1|0;else b=10;TC(z,b,0);b=(a[p>>0]|0)<0?c[z>>2]|0:z;c[t>>2]=b;c[w>>2]=v;c[u>>2]=0;n=z+4|0;j=c[d>>2]|0;i=j;a:while(1){if(i){f=c[i+12>>2]|0;if((f|0)==(c[i+16>>2]|0))f=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else f=Va(a[f>>0]|0)|0;if(Qa(f,Ra()|0)|0){c[d>>2]=0;m=0;j=0;k=1}else{m=i;k=0}}else{m=0;j=0;k=1}i=c[e>>2]|0;do if(i){f=c[i+12>>2]|0;if((f|0)==(c[i+16>>2]|0))f=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else f=Va(a[f>>0]|0)|0;if(!(Qa(f,Ra()|0)|0))if(k)break;else break a;else{c[e>>2]=0;B=19;break}}else B=19;while(0);if((B|0)==19){B=0;if(k){i=0;break}else i=0}f=a[p>>0]|0;f=f<<24>>24<0?c[n>>2]|0:f&255;if((c[t>>2]|0)==(b+f|0)){TC(z,f<<1,0);if((a[p>>0]|0)<0)b=(c[o>>2]&2147483647)+-1|0;else b=10;TC(z,b,0);b=(a[p>>0]|0)<0?c[z>>2]|0:z;c[t>>2]=b+f}l=m+12|0;f=c[l>>2]|0;k=m+16|0;if((f|0)==(c[k>>2]|0))f=ma[c[(c[m>>2]|0)+36>>2]&127](m)|0;else f=Va(a[f>>0]|0)|0;if(Du(f&255,y,b,t,u,a[r>>0]|0,A,v,w,q)|0)break;f=c[l>>2]|0;if((f|0)==(c[k>>2]|0))ma[c[(c[m>>2]|0)+40>>2]&127](m)|0;else{c[l>>2]=f+1;Va(a[f>>0]|0)|0}i=m}r=a[A+11>>0]|0;if((r<<24>>24<0?c[A+4>>2]|0:r&255)|0?(s=c[w>>2]|0,(s-v|0)<160):0){u=c[u>>2]|0;c[w>>2]=s+4;c[s>>2]=u}t=gv(b,c[t>>2]|0,g,y)|0;u=x()|0;y=h;c[y>>2]=t;c[y+4>>2]=u;Qu(A,v,c[w>>2]|0,g);if(m){b=c[m+12>>2]|0;if((b|0)==(c[m+16>>2]|0))b=ma[c[(c[j>>2]|0)+36>>2]&127](m)|0;else b=Va(a[b>>0]|0)|0;if(Qa(b,Ra()|0)|0){c[d>>2]=0;f=1}else f=0}else f=1;do if(i){b=c[i+12>>2]|0;if((b|0)==(c[i+16>>2]|0))b=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else b=Va(a[b>>0]|0)|0;if(!(Qa(b,Ra()|0)|0))if(f)break;else{B=50;break}else{c[e>>2]=0;B=48;break}}else B=48;while(0);if((B|0)==48?f:0)B=50;if((B|0)==50)c[g>>2]=c[g>>2]|2;B=c[d>>2]|0;OC(z);OC(A);ja=C;return B|0}function gv(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;i=ja;ja=ja+16|0;h=i;if((a|0)==(b|0)){c[d>>2]=4;e=0;a=0}else{g=c[(Uc()|0)>>2]|0;c[(Uc()|0)>>2]=0;a=gd(a,h,e,Eu()|0)|0;e=x()|0;f=c[(Uc()|0)>>2]|0;if(!f)c[(Uc()|0)>>2]=g;if((c[h>>2]|0)==(b|0)){if((f|0)==68){c[d>>2]=4;e=(e|0)>0|(e|0)==0&a>>>0>0;a=e?-1:0;e=e?2147483647:-2147483648}}else{c[d>>2]=4;a=0;e=0}}w(e|0);ja=i;return a|0}function hv(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;B=ja;ja=ja+240|0;r=B+224|0;z=B+212|0;y=B+200|0;t=B+196|0;v=B;w=B+192|0;u=B+188|0;x=Wu(f)|0;q=Xu(b,f,B+160|0)|0;Yu(z,f,r);c[y>>2]=0;c[y+4>>2]=0;c[y+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[y+(b<<2)>>2]=0;b=b+1|0}p=y+11|0;o=y+8|0;if((a[p>>0]|0)<0)b=(c[o>>2]&2147483647)+-1|0;else b=10;TC(y,b,0);b=(a[p>>0]|0)<0?c[y>>2]|0:y;c[t>>2]=b;c[w>>2]=v;c[u>>2]=0;n=y+4|0;j=c[d>>2]|0;i=j;a:while(1){if(i){f=c[i+12>>2]|0;if((f|0)==(c[i+16>>2]|0))f=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else f=Va(a[f>>0]|0)|0;if(Qa(f,Ra()|0)|0){c[d>>2]=0;m=0;j=0;k=1}else{m=i;k=0}}else{m=0;j=0;k=1}i=c[e>>2]|0;do if(i){f=c[i+12>>2]|0;if((f|0)==(c[i+16>>2]|0))f=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else f=Va(a[f>>0]|0)|0;if(!(Qa(f,Ra()|0)|0))if(k)break;else break a;else{c[e>>2]=0;A=19;break}}else A=19;while(0);if((A|0)==19){A=0;if(k){i=0;break}else i=0}f=a[p>>0]|0;f=f<<24>>24<0?c[n>>2]|0:f&255;if((c[t>>2]|0)==(b+f|0)){TC(y,f<<1,0);if((a[p>>0]|0)<0)b=(c[o>>2]&2147483647)+-1|0;else b=10;TC(y,b,0);b=(a[p>>0]|0)<0?c[y>>2]|0:y;c[t>>2]=b+f}l=m+12|0;f=c[l>>2]|0;k=m+16|0;if((f|0)==(c[k>>2]|0))f=ma[c[(c[m>>2]|0)+36>>2]&127](m)|0;else f=Va(a[f>>0]|0)|0;if(Du(f&255,x,b,t,u,a[r>>0]|0,z,v,w,q)|0)break;f=c[l>>2]|0;if((f|0)==(c[k>>2]|0))ma[c[(c[m>>2]|0)+40>>2]&127](m)|0;else{c[l>>2]=f+1;Va(a[f>>0]|0)|0}i=m}r=a[z+11>>0]|0;if((r<<24>>24<0?c[z+4>>2]|0:r&255)|0?(s=c[w>>2]|0,(s-v|0)<160):0){u=c[u>>2]|0;c[w>>2]=s+4;c[s>>2]=u}c[h>>2]=iv(b,c[t>>2]|0,g,x)|0;Qu(z,v,c[w>>2]|0,g);if(m){b=c[m+12>>2]|0;if((b|0)==(c[m+16>>2]|0))b=ma[c[(c[j>>2]|0)+36>>2]&127](m)|0;else b=Va(a[b>>0]|0)|0;if(Qa(b,Ra()|0)|0){c[d>>2]=0;f=1}else f=0}else f=1;do if(i){b=c[i+12>>2]|0;if((b|0)==(c[i+16>>2]|0))b=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else b=Va(a[b>>0]|0)|0;if(!(Qa(b,Ra()|0)|0))if(f)break;else{A=50;break}else{c[e>>2]=0;A=48;break}}else A=48;while(0);if((A|0)==48?f:0)A=50;if((A|0)==50)c[g>>2]=c[g>>2]|2;A=c[d>>2]|0;OC(y);OC(z);ja=B;return A|0}function iv(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;i=ja;ja=ja+16|0;h=i;if((a|0)==(b|0)){c[d>>2]=4;a=0}else{g=c[(Uc()|0)>>2]|0;c[(Uc()|0)>>2]=0;a=gd(a,h,e,Eu()|0)|0;e=x()|0;f=c[(Uc()|0)>>2]|0;if(!f)c[(Uc()|0)>>2]=g;a:do if((c[h>>2]|0)==(b|0)){do if((f|0)==68){c[d>>2]=4;if((e|0)>0|(e|0)==0&a>>>0>0){a=2147483647;break a}}else{if((e|0)<-1|(e|0)==-1&a>>>0<2147483648){c[d>>2]=4;break}if((e|0)>0|(e|0)==0&a>>>0>2147483647){c[d>>2]=4;a=2147483647;break a}else break a}while(0);a=-2147483648}else{c[d>>2]=4;a=0}while(0)}ja=i;return a|0}function jv(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;w=ja;ja=ja+112|0;k=w;l=(f-e|0)/12|0;if(l>>>0>100){k=iD(l)|0;if(!k)FC();else{u=k;j=k}}else{u=0;j=k}n=e;k=0;o=l;m=j;while(1){if((n|0)==(f|0))break;l=a[n+11>>0]|0;if(l<<24>>24<0)l=c[n+4>>2]|0;else l=l&255;if(!l){a[m>>0]=2;k=k+1|0;l=o+-1|0}else{a[m>>0]=1;l=o}n=n+12|0;o=l;m=m+1|0}t=0;while(1){l=c[b>>2]|0;do if(l){m=c[l+12>>2]|0;if((m|0)==(c[l+16>>2]|0))l=ma[c[(c[l>>2]|0)+36>>2]&127](l)|0;else l=Va(a[m>>0]|0)|0;if(Qa(l,Ra()|0)|0){c[b>>2]=0;p=1;break}else{p=(c[b>>2]|0)==0;break}}else p=1;while(0);m=c[d>>2]|0;if(m){l=c[m+12>>2]|0;if((l|0)==(c[m+16>>2]|0))l=ma[c[(c[m>>2]|0)+36>>2]&127](m)|0;else l=Va(a[l>>0]|0)|0;if(Qa(l,Ra()|0)|0){c[d>>2]=0;l=1;m=0}else l=0}else{l=1;m=0}n=c[b>>2]|0;if(!((o|0)!=0&(p^l)))break;l=c[n+12>>2]|0;if((l|0)==(c[n+16>>2]|0))l=ma[c[(c[n>>2]|0)+36>>2]&127](n)|0;else l=Va(a[l>>0]|0)|0;l=l&255;if(!i)l=oa[c[(c[g>>2]|0)+12>>2]&63](g,l)|0;s=t+1|0;p=0;r=e;q=j;while(1){if((r|0)==(f|0))break;do if((a[q>>0]|0)==1){n=r+11|0;if((a[n>>0]|0)<0)m=c[r>>2]|0;else m=r;m=a[m+t>>0]|0;if(!i)m=oa[c[(c[g>>2]|0)+12>>2]&63](g,m)|0;if(l<<24>>24!=m<<24>>24){a[q>>0]=0;m=p;o=o+-1|0;break}m=a[n>>0]|0;if(m<<24>>24<0)m=c[r+4>>2]|0;else m=m&255;if((m|0)==(s|0)){a[q>>0]=2;m=1;k=k+1|0;o=o+-1|0}else m=1}else m=p;while(0);p=m;r=r+12|0;q=q+1|0}a:do if(p){l=c[b>>2]|0;n=l+12|0;m=c[n>>2]|0;if((m|0)==(c[l+16>>2]|0))ma[c[(c[l>>2]|0)+40>>2]&127](l)|0;else{c[n>>2]=m+1;Va(a[m>>0]|0)|0}if((k+o|0)>>>0>1){n=e;m=j;while(1){if((n|0)==(f|0))break a;if((a[m>>0]|0)==2){l=a[n+11>>0]|0;if(l<<24>>24<0)l=c[n+4>>2]|0;else l=l&255;if((l|0)!=(s|0)){a[m>>0]=0;k=k+-1|0}}n=n+12|0;m=m+1|0}}}while(0);t=s}do if(n){k=c[n+12>>2]|0;if((k|0)==(c[n+16>>2]|0))k=ma[c[(c[n>>2]|0)+36>>2]&127](n)|0;else k=Va(a[k>>0]|0)|0;if(Qa(k,Ra()|0)|0){c[b>>2]=0;l=1;break}else{l=(c[b>>2]|0)==0;break}}else l=1;while(0);do if(m){k=c[m+12>>2]|0;if((k|0)==(c[m+16>>2]|0))k=ma[c[(c[m>>2]|0)+36>>2]&127](m)|0;else k=Va(a[k>>0]|0)|0;if(!(Qa(k,Ra()|0)|0))if(l)break;else{v=79;break}else{c[d>>2]=0;v=41;break}}else v=41;while(0);if((v|0)==41?l:0)v=79;if((v|0)==79)c[h>>2]=c[h>>2]|2;while(1){if((e|0)==(f|0)){v=84;break}if((a[j>>0]|0)==2)break;e=e+12|0;j=j+1|0}if((v|0)==84){c[h>>2]=c[h>>2]|4;e=f}jD(u);ja=w;return e|0}function kv(a){a=a|0;gu(a);return}function lv(a){a=a|0;gu(a);Gf(a);return}function mv(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=ja;ja=ja+48|0;m=o+40|0;n=o;i=o+32|0;j=o+36|0;k=o+28|0;l=o+24|0;if(!(c[f+4>>2]&1)){c[i>>2]=-1;l=c[(c[b>>2]|0)+16>>2]|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];c[n>>2]=c[j>>2];c[m>>2]=c[k>>2];c[d>>2]=ua[l&63](b,n,m,f,g,i)|0;switch(c[i>>2]|0){case 0:{a[h>>0]=0;break}case 1:{a[h>>0]=1;break}default:{a[h>>0]=1;c[g>>2]=4}}d=c[d>>2]|0}else{jt(m,f);b=Bu(m,108380)|0;Cu(m);jt(m,f);k=Bu(m,108388)|0;Cu(m);za[c[(c[k>>2]|0)+24>>2]&127](n,k);za[c[(c[k>>2]|0)+28>>2]&127](n+12|0,k);c[l>>2]=c[e>>2];e=n+24|0;c[m>>2]=c[l>>2];a[h>>0]=(Mv(d,m,n,e,b,g,1)|0)==(n|0)&1;d=c[d>>2]|0;do{e=e+-12|0;$C(e)}while((e|0)!=(n|0))}ja=o;return d|0}function nv(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=ja;ja=ja+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];a=Lv(a,j,i,e,f,g)|0;ja=h;return a|0}function ov(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=ja;ja=ja+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];a=Kv(a,j,i,e,f,g)|0;ja=h;return a|0}function pv(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=ja;ja=ja+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];a=Jv(a,j,i,e,f,g)|0;ja=h;return a|0}function qv(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=ja;ja=ja+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];a=Iv(a,j,i,e,f,g)|0;ja=h;return a|0}function rv(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=ja;ja=ja+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];a=Hv(a,j,i,e,f,g)|0;ja=h;return a|0}function sv(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=ja;ja=ja+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];a=Dv(a,j,i,e,f,g)|0;ja=h;return a|0}function tv(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=ja;ja=ja+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];a=Cv(a,j,i,e,f,g)|0;ja=h;return a|0}function uv(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=ja;ja=ja+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];a=Bv(a,j,i,e,f,g)|0;ja=h;return a|0}function vv(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=ja;ja=ja+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];a=yv(a,j,i,e,f,g)|0;ja=h;return a|0}function wv(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;y=ja;ja=ja+304|0;v=y+264|0;q=y+160|0;w=y+292|0;x=y+280|0;u=y+276|0;s=y;t=y+272|0;r=y+268|0;c[w>>2]=0;c[w+4>>2]=0;c[w+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[w+(b<<2)>>2]=0;b=b+1|0}jt(x,f);b=Bu(x,108380)|0;qa[c[(c[b>>2]|0)+48>>2]&15](b,17424,17450,q)|0;Cu(x);c[x>>2]=0;c[x+4>>2]=0;c[x+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[x+(b<<2)>>2]=0;b=b+1|0}p=x+11|0;o=x+8|0;if((a[p>>0]|0)<0)b=(c[o>>2]&2147483647)+-1|0;else b=10;TC(x,b,0);b=(a[p>>0]|0)<0?c[x>>2]|0:x;c[u>>2]=b;c[t>>2]=s;c[r>>2]=0;n=x+4|0;i=c[d>>2]|0;j=i;a:while(1){if(i){f=c[i+12>>2]|0;if((f|0)==(c[i+16>>2]|0))f=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else f=Fs(c[f>>2]|0)|0;if(kt(f,Es()|0)|0){c[d>>2]=0;m=0;j=0;k=1}else{m=i;k=0}}else{m=0;j=0;k=1}i=c[e>>2]|0;do if(i){f=c[i+12>>2]|0;if((f|0)==(c[i+16>>2]|0))f=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else f=Fs(c[f>>2]|0)|0;if(!(kt(f,Es()|0)|0))if(k)break;else break a;else{c[e>>2]=0;z=22;break}}else z=22;while(0);if((z|0)==22){z=0;if(k){i=0;break}else i=0}f=a[p>>0]|0;f=f<<24>>24<0?c[n>>2]|0:f&255;if((c[u>>2]|0)==(b+f|0)){TC(x,f<<1,0);if((a[p>>0]|0)<0)b=(c[o>>2]&2147483647)+-1|0;else b=10;TC(x,b,0);b=(a[p>>0]|0)<0?c[x>>2]|0:x;c[u>>2]=b+f}l=m+12|0;f=c[l>>2]|0;k=m+16|0;if((f|0)==(c[k>>2]|0))f=ma[c[(c[m>>2]|0)+36>>2]&127](m)|0;else f=Fs(c[f>>2]|0)|0;if(xv(f,16,b,u,r,0,w,s,t,q)|0)break;f=c[l>>2]|0;if((f|0)==(c[k>>2]|0))ma[c[(c[m>>2]|0)+40>>2]&127](m)|0;else{c[l>>2]=f+4;Fs(c[f>>2]|0)|0}i=m}TC(x,(c[u>>2]|0)-b|0,0);t=(a[p>>0]|0)<0?c[x>>2]|0:x;u=Eu()|0;c[v>>2]=h;if((Fu(t,u,35635,v)|0)!=1)c[g>>2]=4;if(m){b=c[m+12>>2]|0;if((b|0)==(c[m+16>>2]|0))b=ma[c[(c[j>>2]|0)+36>>2]&127](m)|0;else b=Fs(c[b>>2]|0)|0;if(kt(b,Es()|0)|0){c[d>>2]=0;f=1}else f=0}else f=1;do if(i){b=c[i+12>>2]|0;if((b|0)==(c[i+16>>2]|0))b=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else b=Fs(c[b>>2]|0)|0;if(!(kt(b,Es()|0)|0))if(f)break;else{z=52;break}else{c[e>>2]=0;z=50;break}}else z=50;while(0);if((z|0)==50?f:0)z=52;if((z|0)==52)c[g>>2]=c[g>>2]|2;z=c[d>>2]|0;OC(x);OC(w);ja=y;return z|0}function xv(b,d,e,f,g,h,i,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0;o=c[f>>2]|0;p=(o|0)==(e|0);do if(p){m=(c[l+96>>2]|0)==(b|0);if(!m?(c[l+100>>2]|0)!=(b|0):0){n=5;break}c[f>>2]=e+1;a[e>>0]=m?43:45;c[g>>2]=0;i=0}else n=5;while(0);a:do if((n|0)==5){n=a[i+11>>0]|0;if((b|0)==(h|0)?((n<<24>>24<0?c[i+4>>2]|0:n&255)|0)!=0:0){i=c[k>>2]|0;if((i-j|0)>=160){i=0;break}p=c[g>>2]|0;c[k>>2]=i+4;c[i>>2]=p;c[g>>2]=0;i=0;break}m=l+104|0;h=0;while(1){i=l+(h<<2)|0;if((h|0)==26){i=m;break}if((c[i>>2]|0)==(b|0))break;else h=h+1|0}h=i-l|0;i=h>>2;if((h|0)>92)i=-1;else{switch(d|0){case 10:case 8:{if((i|0)>=(d|0)){i=-1;break a}break}case 16:{if((h|0)>=88){if(p){i=-1;break a}if((o-e|0)>=3){i=-1;break a}if((a[o+-1>>0]|0)!=48){i=-1;break a}c[g>>2]=0;i=a[17424+i>>0]|0;c[f>>2]=o+1;a[o>>0]=i;i=0;break a}break}default:{}}i=a[17424+i>>0]|0;c[f>>2]=o+1;a[o>>0]=i;c[g>>2]=(c[g>>2]|0)+1;i=0}}while(0);return i|0}function yv(b,d,e,f,h,i){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;D=ja;ja=ja+336|0;r=D+160|0;s=D+328|0;u=D+324|0;C=D+312|0;B=D+300|0;v=D+296|0;x=D;y=D+292|0;w=D+288|0;z=D+333|0;t=D+332|0;zv(C,f,r,s,u);c[B>>2]=0;c[B+4>>2]=0;c[B+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[B+(b<<2)>>2]=0;b=b+1|0}q=B+11|0;p=B+8|0;if((a[q>>0]|0)<0)b=(c[p>>2]&2147483647)+-1|0;else b=10;TC(B,b,0);b=(a[q>>0]|0)<0?c[B>>2]|0:B;c[v>>2]=b;c[y>>2]=x;c[w>>2]=0;a[z>>0]=1;a[t>>0]=69;o=B+4|0;k=c[d>>2]|0;j=k;a:while(1){if(j){f=c[j+12>>2]|0;if((f|0)==(c[j+16>>2]|0))f=ma[c[(c[j>>2]|0)+36>>2]&127](j)|0;else f=Fs(c[f>>2]|0)|0;if(kt(f,Es()|0)|0){c[d>>2]=0;n=0;k=0;l=1}else{n=j;l=0}}else{n=0;k=0;l=1}j=c[e>>2]|0;do if(j){f=c[j+12>>2]|0;if((f|0)==(c[j+16>>2]|0))f=ma[c[(c[j>>2]|0)+36>>2]&127](j)|0;else f=Fs(c[f>>2]|0)|0;if(!(kt(f,Es()|0)|0))if(l)break;else break a;else{c[e>>2]=0;E=19;break}}else E=19;while(0);if((E|0)==19){E=0;if(l){j=0;break}else j=0}f=a[q>>0]|0;f=f<<24>>24<0?c[o>>2]|0:f&255;if((c[v>>2]|0)==(b+f|0)){TC(B,f<<1,0);if((a[q>>0]|0)<0)b=(c[p>>2]&2147483647)+-1|0;else b=10;TC(B,b,0);b=(a[q>>0]|0)<0?c[B>>2]|0:B;c[v>>2]=b+f}m=n+12|0;f=c[m>>2]|0;l=n+16|0;if((f|0)==(c[l>>2]|0))f=ma[c[(c[n>>2]|0)+36>>2]&127](n)|0;else f=Fs(c[f>>2]|0)|0;if(Av(f,z,t,b,v,c[s>>2]|0,c[u>>2]|0,C,x,y,w,r)|0)break;f=c[m>>2]|0;if((f|0)==(c[l>>2]|0))ma[c[(c[n>>2]|0)+40>>2]&127](n)|0;else{c[m>>2]=f+4;Fs(c[f>>2]|0)|0}j=n}u=a[C+11>>0]|0;if(!((a[z>>0]|0)==0?1:((u<<24>>24<0?c[C+4>>2]|0:u&255)|0)==0)?(A=c[y>>2]|0,(A-x|0)<160):0){z=c[w>>2]|0;c[y>>2]=A+4;c[A>>2]=z}g[i>>3]=+Pu(b,c[v>>2]|0,h);Qu(C,x,c[y>>2]|0,h);if(n){b=c[n+12>>2]|0;if((b|0)==(c[n+16>>2]|0))b=ma[c[(c[k>>2]|0)+36>>2]&127](n)|0;else b=Fs(c[b>>2]|0)|0;if(kt(b,Es()|0)|0){c[d>>2]=0;f=1}else f=0}else f=1;do if(j){b=c[j+12>>2]|0;if((b|0)==(c[j+16>>2]|0))b=ma[c[(c[j>>2]|0)+36>>2]&127](j)|0;else b=Fs(c[b>>2]|0)|0;if(!(kt(b,Es()|0)|0))if(f)break;else{E=50;break}else{c[e>>2]=0;E=48;break}}else E=48;while(0);if((E|0)==48?f:0)E=50;if((E|0)==50)c[h>>2]=c[h>>2]|2;E=c[d>>2]|0;OC(B);OC(C);ja=D;return E|0}function zv(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=ja;ja=ja+16|0;h=g;jt(h,b);b=Bu(h,108380)|0;qa[c[(c[b>>2]|0)+48>>2]&15](b,17424,17456,d)|0;b=Bu(h,108388)|0;c[e>>2]=ma[c[(c[b>>2]|0)+12>>2]&127](b)|0;c[f>>2]=ma[c[(c[b>>2]|0)+16>>2]&127](b)|0;za[c[(c[b>>2]|0)+20>>2]&127](a,b);Cu(h);ja=g;return}function Av(b,d,e,f,g,h,i,j,k,l,m,n){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0;a:do if((b|0)==(h|0))if(a[d>>0]|0){a[d>>0]=0;e=c[g>>2]|0;c[g>>2]=e+1;a[e>>0]=46;e=a[j+11>>0]|0;if(((e<<24>>24<0?c[j+4>>2]|0:e&255)|0)!=0?(o=c[l>>2]|0,(o-k|0)<160):0){k=c[m>>2]|0;c[l>>2]=o+4;c[o>>2]=k;o=0}else o=0}else o=-1;else{if((b|0)==(i|0)?(i=a[j+11>>0]|0,(i<<24>>24<0?c[j+4>>2]|0:i&255)|0):0){if(!(a[d>>0]|0)){o=-1;break}o=c[l>>2]|0;if((o-k|0)>=160){o=0;break}k=c[m>>2]|0;c[l>>2]=o+4;c[o>>2]=k;c[m>>2]=0;o=0;break}i=n+128|0;h=0;while(1){o=n+(h<<2)|0;if((h|0)==32){o=i;break}if((c[o>>2]|0)==(b|0))break;else h=h+1|0}h=o-n|0;if((h|0)<=124){i=a[17424+(h>>2)>>0]|0;n=h+-88|0;switch(n>>>2|n<<30|0){case 2:case 3:{o=c[g>>2]|0;if((o|0)!=(f|0)?(a[o+-1>>0]&95)!=(a[e>>0]&127):0){o=-1;break a}c[g>>2]=o+1;a[o>>0]=i;o=0;break a}case 1:case 0:{a[e>>0]=80;break}default:{o=i&95;if((((o|0)==(a[e>>0]|0)?(a[e>>0]=o|128,a[d>>0]|0):0)?(a[d>>0]=0,e=a[j+11>>0]|0,(e<<24>>24<0?c[j+4>>2]|0:e&255)|0):0)?(p=c[l>>2]|0,(p-k|0)<160):0){k=c[m>>2]|0;c[l>>2]=p+4;c[p>>2]=k}}}l=c[g>>2]|0;c[g>>2]=l+1;a[l>>0]=i;if((h|0)>84)o=0;else{c[m>>2]=(c[m>>2]|0)+1;o=0}}else o=-1}while(0);return o|0}function Bv(b,d,e,f,h,i){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;D=ja;ja=ja+336|0;r=D+160|0;s=D+328|0;u=D+324|0;C=D+312|0;B=D+300|0;v=D+296|0;x=D;y=D+292|0;w=D+288|0;z=D+333|0;t=D+332|0;zv(C,f,r,s,u);c[B>>2]=0;c[B+4>>2]=0;c[B+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[B+(b<<2)>>2]=0;b=b+1|0}q=B+11|0;p=B+8|0;if((a[q>>0]|0)<0)b=(c[p>>2]&2147483647)+-1|0;else b=10;TC(B,b,0);b=(a[q>>0]|0)<0?c[B>>2]|0:B;c[v>>2]=b;c[y>>2]=x;c[w>>2]=0;a[z>>0]=1;a[t>>0]=69;o=B+4|0;k=c[d>>2]|0;j=k;a:while(1){if(j){f=c[j+12>>2]|0;if((f|0)==(c[j+16>>2]|0))f=ma[c[(c[j>>2]|0)+36>>2]&127](j)|0;else f=Fs(c[f>>2]|0)|0;if(kt(f,Es()|0)|0){c[d>>2]=0;n=0;k=0;l=1}else{n=j;l=0}}else{n=0;k=0;l=1}j=c[e>>2]|0;do if(j){f=c[j+12>>2]|0;if((f|0)==(c[j+16>>2]|0))f=ma[c[(c[j>>2]|0)+36>>2]&127](j)|0;else f=Fs(c[f>>2]|0)|0;if(!(kt(f,Es()|0)|0))if(l)break;else break a;else{c[e>>2]=0;E=19;break}}else E=19;while(0);if((E|0)==19){E=0;if(l){j=0;break}else j=0}f=a[q>>0]|0;f=f<<24>>24<0?c[o>>2]|0:f&255;if((c[v>>2]|0)==(b+f|0)){TC(B,f<<1,0);if((a[q>>0]|0)<0)b=(c[p>>2]&2147483647)+-1|0;else b=10;TC(B,b,0);b=(a[q>>0]|0)<0?c[B>>2]|0:B;c[v>>2]=b+f}m=n+12|0;f=c[m>>2]|0;l=n+16|0;if((f|0)==(c[l>>2]|0))f=ma[c[(c[n>>2]|0)+36>>2]&127](n)|0;else f=Fs(c[f>>2]|0)|0;if(Av(f,z,t,b,v,c[s>>2]|0,c[u>>2]|0,C,x,y,w,r)|0)break;f=c[m>>2]|0;if((f|0)==(c[l>>2]|0))ma[c[(c[n>>2]|0)+40>>2]&127](n)|0;else{c[m>>2]=f+4;Fs(c[f>>2]|0)|0}j=n}u=a[C+11>>0]|0;if(!((a[z>>0]|0)==0?1:((u<<24>>24<0?c[C+4>>2]|0:u&255)|0)==0)?(A=c[y>>2]|0,(A-x|0)<160):0){z=c[w>>2]|0;c[y>>2]=A+4;c[A>>2]=z}g[i>>3]=+Su(b,c[v>>2]|0,h);Qu(C,x,c[y>>2]|0,h);if(n){b=c[n+12>>2]|0;if((b|0)==(c[n+16>>2]|0))b=ma[c[(c[k>>2]|0)+36>>2]&127](n)|0;else b=Fs(c[b>>2]|0)|0;if(kt(b,Es()|0)|0){c[d>>2]=0;f=1}else f=0}else f=1;do if(j){b=c[j+12>>2]|0;if((b|0)==(c[j+16>>2]|0))b=ma[c[(c[j>>2]|0)+36>>2]&127](j)|0;else b=Fs(c[b>>2]|0)|0;if(!(kt(b,Es()|0)|0))if(f)break;else{E=50;break}else{c[e>>2]=0;E=48;break}}else E=48;while(0);if((E|0)==48?f:0)E=50;if((E|0)==50)c[h>>2]=c[h>>2]|2;E=c[d>>2]|0;OC(B);OC(C);ja=D;return E|0}function Cv(b,d,e,g,h,i){b=b|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;D=ja;ja=ja+336|0;r=D+160|0;s=D+328|0;u=D+324|0;C=D+312|0;B=D+300|0;v=D+296|0;x=D;y=D+292|0;w=D+288|0;z=D+333|0;t=D+332|0;zv(C,g,r,s,u);c[B>>2]=0;c[B+4>>2]=0;c[B+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[B+(b<<2)>>2]=0;b=b+1|0}q=B+11|0;p=B+8|0;if((a[q>>0]|0)<0)b=(c[p>>2]&2147483647)+-1|0;else b=10;TC(B,b,0);b=(a[q>>0]|0)<0?c[B>>2]|0:B;c[v>>2]=b;c[y>>2]=x;c[w>>2]=0;a[z>>0]=1;a[t>>0]=69;o=B+4|0;k=c[d>>2]|0;j=k;a:while(1){if(j){g=c[j+12>>2]|0;if((g|0)==(c[j+16>>2]|0))g=ma[c[(c[j>>2]|0)+36>>2]&127](j)|0;else g=Fs(c[g>>2]|0)|0;if(kt(g,Es()|0)|0){c[d>>2]=0;n=0;k=0;l=1}else{n=j;l=0}}else{n=0;k=0;l=1}j=c[e>>2]|0;do if(j){g=c[j+12>>2]|0;if((g|0)==(c[j+16>>2]|0))g=ma[c[(c[j>>2]|0)+36>>2]&127](j)|0;else g=Fs(c[g>>2]|0)|0;if(!(kt(g,Es()|0)|0))if(l)break;else break a;else{c[e>>2]=0;E=19;break}}else E=19;while(0);if((E|0)==19){E=0;if(l){j=0;break}else j=0}g=a[q>>0]|0;g=g<<24>>24<0?c[o>>2]|0:g&255;if((c[v>>2]|0)==(b+g|0)){TC(B,g<<1,0);if((a[q>>0]|0)<0)b=(c[p>>2]&2147483647)+-1|0;else b=10;TC(B,b,0);b=(a[q>>0]|0)<0?c[B>>2]|0:B;c[v>>2]=b+g}m=n+12|0;g=c[m>>2]|0;l=n+16|0;if((g|0)==(c[l>>2]|0))g=ma[c[(c[n>>2]|0)+36>>2]&127](n)|0;else g=Fs(c[g>>2]|0)|0;if(Av(g,z,t,b,v,c[s>>2]|0,c[u>>2]|0,C,x,y,w,r)|0)break;g=c[m>>2]|0;if((g|0)==(c[l>>2]|0))ma[c[(c[n>>2]|0)+40>>2]&127](n)|0;else{c[m>>2]=g+4;Fs(c[g>>2]|0)|0}j=n}u=a[C+11>>0]|0;if(!((a[z>>0]|0)==0?1:((u<<24>>24<0?c[C+4>>2]|0:u&255)|0)==0)?(A=c[y>>2]|0,(A-x|0)<160):0){z=c[w>>2]|0;c[y>>2]=A+4;c[A>>2]=z}f[i>>2]=+Uu(b,c[v>>2]|0,h);Qu(C,x,c[y>>2]|0,h);if(n){b=c[n+12>>2]|0;if((b|0)==(c[n+16>>2]|0))b=ma[c[(c[k>>2]|0)+36>>2]&127](n)|0;else b=Fs(c[b>>2]|0)|0;if(kt(b,Es()|0)|0){c[d>>2]=0;g=1}else g=0}else g=1;do if(j){b=c[j+12>>2]|0;if((b|0)==(c[j+16>>2]|0))b=ma[c[(c[j>>2]|0)+36>>2]&127](j)|0;else b=Fs(c[b>>2]|0)|0;if(!(kt(b,Es()|0)|0))if(g)break;else{E=50;break}else{c[e>>2]=0;E=48;break}}else E=48;while(0);if((E|0)==48?g:0)E=50;if((E|0)==50)c[h>>2]=c[h>>2]|2;E=c[d>>2]|0;OC(B);OC(C);ja=D;return E|0}function Dv(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0;C=ja;ja=ja+304|0;r=C+300|0;A=C+288|0;z=C+276|0;t=C+272|0;v=C;w=C+268|0;u=C+264|0;y=Wu(f)|0;q=Ev(b,f,C+160|0)|0;Fv(A,f,r);c[z>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[z+(b<<2)>>2]=0;b=b+1|0}p=z+11|0;o=z+8|0;if((a[p>>0]|0)<0)b=(c[o>>2]&2147483647)+-1|0;else b=10;TC(z,b,0);b=(a[p>>0]|0)<0?c[z>>2]|0:z;c[t>>2]=b;c[w>>2]=v;c[u>>2]=0;n=z+4|0;j=c[d>>2]|0;i=j;a:while(1){if(i){f=c[i+12>>2]|0;if((f|0)==(c[i+16>>2]|0))f=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else f=Fs(c[f>>2]|0)|0;if(kt(f,Es()|0)|0){c[d>>2]=0;m=0;j=0;k=1}else{m=i;k=0}}else{m=0;j=0;k=1}i=c[e>>2]|0;do if(i){f=c[i+12>>2]|0;if((f|0)==(c[i+16>>2]|0))f=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else f=Fs(c[f>>2]|0)|0;if(!(kt(f,Es()|0)|0))if(k)break;else break a;else{c[e>>2]=0;B=19;break}}else B=19;while(0);if((B|0)==19){B=0;if(k){i=0;break}else i=0}f=a[p>>0]|0;f=f<<24>>24<0?c[n>>2]|0:f&255;if((c[t>>2]|0)==(b+f|0)){TC(z,f<<1,0);if((a[p>>0]|0)<0)b=(c[o>>2]&2147483647)+-1|0;else b=10;TC(z,b,0);b=(a[p>>0]|0)<0?c[z>>2]|0:z;c[t>>2]=b+f}l=m+12|0;f=c[l>>2]|0;k=m+16|0;if((f|0)==(c[k>>2]|0))f=ma[c[(c[m>>2]|0)+36>>2]&127](m)|0;else f=Fs(c[f>>2]|0)|0;if(xv(f,y,b,t,u,c[r>>2]|0,A,v,w,q)|0)break;f=c[l>>2]|0;if((f|0)==(c[k>>2]|0))ma[c[(c[m>>2]|0)+40>>2]&127](m)|0;else{c[l>>2]=f+4;Fs(c[f>>2]|0)|0}i=m}r=a[A+11>>0]|0;if((r<<24>>24<0?c[A+4>>2]|0:r&255)|0?(s=c[w>>2]|0,(s-v|0)<160):0){u=c[u>>2]|0;c[w>>2]=s+4;c[s>>2]=u}t=Zu(b,c[t>>2]|0,g,y)|0;u=x()|0;y=h;c[y>>2]=t;c[y+4>>2]=u;Qu(A,v,c[w>>2]|0,g);if(m){b=c[m+12>>2]|0;if((b|0)==(c[m+16>>2]|0))b=ma[c[(c[j>>2]|0)+36>>2]&127](m)|0;else b=Fs(c[b>>2]|0)|0;if(kt(b,Es()|0)|0){c[d>>2]=0;f=1}else f=0}else f=1;do if(i){b=c[i+12>>2]|0;if((b|0)==(c[i+16>>2]|0))b=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else b=Fs(c[b>>2]|0)|0;if(!(kt(b,Es()|0)|0))if(f)break;else{B=50;break}else{c[e>>2]=0;B=48;break}}else B=48;while(0);if((B|0)==48?f:0)B=50;if((B|0)==50)c[g>>2]=c[g>>2]|2;B=c[d>>2]|0;OC(z);OC(A);ja=C;return B|0}function Ev(a,b,c){a=a|0;b=b|0;c=c|0;return Gv(a,b,c)|0}function Fv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=ja;ja=ja+16|0;f=e;jt(f,b);b=Bu(f,108388)|0;c[d>>2]=ma[c[(c[b>>2]|0)+16>>2]&127](b)|0;za[c[(c[b>>2]|0)+20>>2]&127](a,b);Cu(f);ja=e;return}function Gv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;a=ja;ja=ja+16|0;e=a;jt(e,b);b=Bu(e,108380)|0;qa[c[(c[b>>2]|0)+48>>2]&15](b,17424,17450,d)|0;Cu(e);ja=a;return d|0}function Hv(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;B=ja;ja=ja+304|0;r=B+300|0;z=B+288|0;y=B+276|0;t=B+272|0;v=B;w=B+268|0;u=B+264|0;x=Wu(f)|0;q=Ev(b,f,B+160|0)|0;Fv(z,f,r);c[y>>2]=0;c[y+4>>2]=0;c[y+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[y+(b<<2)>>2]=0;b=b+1|0}p=y+11|0;o=y+8|0;if((a[p>>0]|0)<0)b=(c[o>>2]&2147483647)+-1|0;else b=10;TC(y,b,0);b=(a[p>>0]|0)<0?c[y>>2]|0:y;c[t>>2]=b;c[w>>2]=v;c[u>>2]=0;n=y+4|0;j=c[d>>2]|0;i=j;a:while(1){if(i){f=c[i+12>>2]|0;if((f|0)==(c[i+16>>2]|0))f=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else f=Fs(c[f>>2]|0)|0;if(kt(f,Es()|0)|0){c[d>>2]=0;m=0;j=0;k=1}else{m=i;k=0}}else{m=0;j=0;k=1}i=c[e>>2]|0;do if(i){f=c[i+12>>2]|0;if((f|0)==(c[i+16>>2]|0))f=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else f=Fs(c[f>>2]|0)|0;if(!(kt(f,Es()|0)|0))if(k)break;else break a;else{c[e>>2]=0;A=19;break}}else A=19;while(0);if((A|0)==19){A=0;if(k){i=0;break}else i=0}f=a[p>>0]|0;f=f<<24>>24<0?c[n>>2]|0:f&255;if((c[t>>2]|0)==(b+f|0)){TC(y,f<<1,0);if((a[p>>0]|0)<0)b=(c[o>>2]&2147483647)+-1|0;else b=10;TC(y,b,0);b=(a[p>>0]|0)<0?c[y>>2]|0:y;c[t>>2]=b+f}l=m+12|0;f=c[l>>2]|0;k=m+16|0;if((f|0)==(c[k>>2]|0))f=ma[c[(c[m>>2]|0)+36>>2]&127](m)|0;else f=Fs(c[f>>2]|0)|0;if(xv(f,x,b,t,u,c[r>>2]|0,z,v,w,q)|0)break;f=c[l>>2]|0;if((f|0)==(c[k>>2]|0))ma[c[(c[m>>2]|0)+40>>2]&127](m)|0;else{c[l>>2]=f+4;Fs(c[f>>2]|0)|0}i=m}r=a[z+11>>0]|0;if((r<<24>>24<0?c[z+4>>2]|0:r&255)|0?(s=c[w>>2]|0,(s-v|0)<160):0){u=c[u>>2]|0;c[w>>2]=s+4;c[s>>2]=u}c[h>>2]=av(b,c[t>>2]|0,g,x)|0;Qu(z,v,c[w>>2]|0,g);if(m){b=c[m+12>>2]|0;if((b|0)==(c[m+16>>2]|0))b=ma[c[(c[j>>2]|0)+36>>2]&127](m)|0;else b=Fs(c[b>>2]|0)|0;if(kt(b,Es()|0)|0){c[d>>2]=0;f=1}else f=0}else f=1;do if(i){b=c[i+12>>2]|0;if((b|0)==(c[i+16>>2]|0))b=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else b=Fs(c[b>>2]|0)|0;if(!(kt(b,Es()|0)|0))if(f)break;else{A=50;break}else{c[e>>2]=0;A=48;break}}else A=48;while(0);if((A|0)==48?f:0)A=50;if((A|0)==50)c[g>>2]=c[g>>2]|2;A=c[d>>2]|0;OC(y);OC(z);ja=B;return A|0}function Iv(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;B=ja;ja=ja+304|0;r=B+300|0;z=B+288|0;y=B+276|0;t=B+272|0;v=B;w=B+268|0;u=B+264|0;x=Wu(f)|0;q=Ev(b,f,B+160|0)|0;Fv(z,f,r);c[y>>2]=0;c[y+4>>2]=0;c[y+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[y+(b<<2)>>2]=0;b=b+1|0}p=y+11|0;o=y+8|0;if((a[p>>0]|0)<0)b=(c[o>>2]&2147483647)+-1|0;else b=10;TC(y,b,0);b=(a[p>>0]|0)<0?c[y>>2]|0:y;c[t>>2]=b;c[w>>2]=v;c[u>>2]=0;n=y+4|0;j=c[d>>2]|0;i=j;a:while(1){if(i){f=c[i+12>>2]|0;if((f|0)==(c[i+16>>2]|0))f=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else f=Fs(c[f>>2]|0)|0;if(kt(f,Es()|0)|0){c[d>>2]=0;m=0;j=0;k=1}else{m=i;k=0}}else{m=0;j=0;k=1}i=c[e>>2]|0;do if(i){f=c[i+12>>2]|0;if((f|0)==(c[i+16>>2]|0))f=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else f=Fs(c[f>>2]|0)|0;if(!(kt(f,Es()|0)|0))if(k)break;else break a;else{c[e>>2]=0;A=19;break}}else A=19;while(0);if((A|0)==19){A=0;if(k){i=0;break}else i=0}f=a[p>>0]|0;f=f<<24>>24<0?c[n>>2]|0:f&255;if((c[t>>2]|0)==(b+f|0)){TC(y,f<<1,0);if((a[p>>0]|0)<0)b=(c[o>>2]&2147483647)+-1|0;else b=10;TC(y,b,0);b=(a[p>>0]|0)<0?c[y>>2]|0:y;c[t>>2]=b+f}l=m+12|0;f=c[l>>2]|0;k=m+16|0;if((f|0)==(c[k>>2]|0))f=ma[c[(c[m>>2]|0)+36>>2]&127](m)|0;else f=Fs(c[f>>2]|0)|0;if(xv(f,x,b,t,u,c[r>>2]|0,z,v,w,q)|0)break;f=c[l>>2]|0;if((f|0)==(c[k>>2]|0))ma[c[(c[m>>2]|0)+40>>2]&127](m)|0;else{c[l>>2]=f+4;Fs(c[f>>2]|0)|0}i=m}r=a[z+11>>0]|0;if((r<<24>>24<0?c[z+4>>2]|0:r&255)|0?(s=c[w>>2]|0,(s-v|0)<160):0){u=c[u>>2]|0;c[w>>2]=s+4;c[s>>2]=u}c[h>>2]=cv(b,c[t>>2]|0,g,x)|0;Qu(z,v,c[w>>2]|0,g);if(m){b=c[m+12>>2]|0;if((b|0)==(c[m+16>>2]|0))b=ma[c[(c[j>>2]|0)+36>>2]&127](m)|0;else b=Fs(c[b>>2]|0)|0;if(kt(b,Es()|0)|0){c[d>>2]=0;f=1}else f=0}else f=1;do if(i){b=c[i+12>>2]|0;if((b|0)==(c[i+16>>2]|0))b=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else b=Fs(c[b>>2]|0)|0;if(!(kt(b,Es()|0)|0))if(f)break;else{A=50;break}else{c[e>>2]=0;A=48;break}}else A=48;while(0);if((A|0)==48?f:0)A=50;if((A|0)==50)c[g>>2]=c[g>>2]|2;A=c[d>>2]|0;OC(y);OC(z);ja=B;return A|0}function Jv(d,e,f,g,h,i){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;C=ja;ja=ja+304|0;s=C+300|0;A=C+288|0;z=C+276|0;u=C+272|0;w=C;x=C+268|0;v=C+264|0;y=Wu(g)|0;r=Ev(d,g,C+160|0)|0;Fv(A,g,s);c[z>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;d=0;while(1){if((d|0)==3)break;c[z+(d<<2)>>2]=0;d=d+1|0}q=z+11|0;p=z+8|0;if((a[q>>0]|0)<0)d=(c[p>>2]&2147483647)+-1|0;else d=10;TC(z,d,0);d=(a[q>>0]|0)<0?c[z>>2]|0:z;c[u>>2]=d;c[x>>2]=w;c[v>>2]=0;o=z+4|0;k=c[e>>2]|0;j=k;a:while(1){if(j){g=c[j+12>>2]|0;if((g|0)==(c[j+16>>2]|0))g=ma[c[(c[j>>2]|0)+36>>2]&127](j)|0;else g=Fs(c[g>>2]|0)|0;if(kt(g,Es()|0)|0){c[e>>2]=0;n=0;k=0;l=1}else{n=j;l=0}}else{n=0;k=0;l=1}j=c[f>>2]|0;do if(j){g=c[j+12>>2]|0;if((g|0)==(c[j+16>>2]|0))g=ma[c[(c[j>>2]|0)+36>>2]&127](j)|0;else g=Fs(c[g>>2]|0)|0;if(!(kt(g,Es()|0)|0))if(l)break;else break a;else{c[f>>2]=0;B=19;break}}else B=19;while(0);if((B|0)==19){B=0;if(l){j=0;break}else j=0}g=a[q>>0]|0;g=g<<24>>24<0?c[o>>2]|0:g&255;if((c[u>>2]|0)==(d+g|0)){TC(z,g<<1,0);if((a[q>>0]|0)<0)d=(c[p>>2]&2147483647)+-1|0;else d=10;TC(z,d,0);d=(a[q>>0]|0)<0?c[z>>2]|0:z;c[u>>2]=d+g}m=n+12|0;g=c[m>>2]|0;l=n+16|0;if((g|0)==(c[l>>2]|0))g=ma[c[(c[n>>2]|0)+36>>2]&127](n)|0;else g=Fs(c[g>>2]|0)|0;if(xv(g,y,d,u,v,c[s>>2]|0,A,w,x,r)|0)break;g=c[m>>2]|0;if((g|0)==(c[l>>2]|0))ma[c[(c[n>>2]|0)+40>>2]&127](n)|0;else{c[m>>2]=g+4;Fs(c[g>>2]|0)|0}j=n}s=a[A+11>>0]|0;if((s<<24>>24<0?c[A+4>>2]|0:s&255)|0?(t=c[x>>2]|0,(t-w|0)<160):0){v=c[v>>2]|0;c[x>>2]=t+4;c[t>>2]=v}b[i>>1]=ev(d,c[u>>2]|0,h,y)|0;Qu(A,w,c[x>>2]|0,h);if(n){d=c[n+12>>2]|0;if((d|0)==(c[n+16>>2]|0))d=ma[c[(c[k>>2]|0)+36>>2]&127](n)|0;else d=Fs(c[d>>2]|0)|0;if(kt(d,Es()|0)|0){c[e>>2]=0;g=1}else g=0}else g=1;do if(j){d=c[j+12>>2]|0;if((d|0)==(c[j+16>>2]|0))d=ma[c[(c[j>>2]|0)+36>>2]&127](j)|0;else d=Fs(c[d>>2]|0)|0;if(!(kt(d,Es()|0)|0))if(g)break;else{B=50;break}else{c[f>>2]=0;B=48;break}}else B=48;while(0);if((B|0)==48?g:0)B=50;if((B|0)==50)c[h>>2]=c[h>>2]|2;B=c[e>>2]|0;OC(z);OC(A);ja=C;return B|0}function Kv(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0;C=ja;ja=ja+304|0;r=C+300|0;A=C+288|0;z=C+276|0;t=C+272|0;v=C;w=C+268|0;u=C+264|0;y=Wu(f)|0;q=Ev(b,f,C+160|0)|0;Fv(A,f,r);c[z>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[z+(b<<2)>>2]=0;b=b+1|0}p=z+11|0;o=z+8|0;if((a[p>>0]|0)<0)b=(c[o>>2]&2147483647)+-1|0;else b=10;TC(z,b,0);b=(a[p>>0]|0)<0?c[z>>2]|0:z;c[t>>2]=b;c[w>>2]=v;c[u>>2]=0;n=z+4|0;j=c[d>>2]|0;i=j;a:while(1){if(i){f=c[i+12>>2]|0;if((f|0)==(c[i+16>>2]|0))f=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else f=Fs(c[f>>2]|0)|0;if(kt(f,Es()|0)|0){c[d>>2]=0;m=0;j=0;k=1}else{m=i;k=0}}else{m=0;j=0;k=1}i=c[e>>2]|0;do if(i){f=c[i+12>>2]|0;if((f|0)==(c[i+16>>2]|0))f=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else f=Fs(c[f>>2]|0)|0;if(!(kt(f,Es()|0)|0))if(k)break;else break a;else{c[e>>2]=0;B=19;break}}else B=19;while(0);if((B|0)==19){B=0;if(k){i=0;break}else i=0}f=a[p>>0]|0;f=f<<24>>24<0?c[n>>2]|0:f&255;if((c[t>>2]|0)==(b+f|0)){TC(z,f<<1,0);if((a[p>>0]|0)<0)b=(c[o>>2]&2147483647)+-1|0;else b=10;TC(z,b,0);b=(a[p>>0]|0)<0?c[z>>2]|0:z;c[t>>2]=b+f}l=m+12|0;f=c[l>>2]|0;k=m+16|0;if((f|0)==(c[k>>2]|0))f=ma[c[(c[m>>2]|0)+36>>2]&127](m)|0;else f=Fs(c[f>>2]|0)|0;if(xv(f,y,b,t,u,c[r>>2]|0,A,v,w,q)|0)break;f=c[l>>2]|0;if((f|0)==(c[k>>2]|0))ma[c[(c[m>>2]|0)+40>>2]&127](m)|0;else{c[l>>2]=f+4;Fs(c[f>>2]|0)|0}i=m}r=a[A+11>>0]|0;if((r<<24>>24<0?c[A+4>>2]|0:r&255)|0?(s=c[w>>2]|0,(s-v|0)<160):0){u=c[u>>2]|0;c[w>>2]=s+4;c[s>>2]=u}t=gv(b,c[t>>2]|0,g,y)|0;u=x()|0;y=h;c[y>>2]=t;c[y+4>>2]=u;Qu(A,v,c[w>>2]|0,g);if(m){b=c[m+12>>2]|0;if((b|0)==(c[m+16>>2]|0))b=ma[c[(c[j>>2]|0)+36>>2]&127](m)|0;else b=Fs(c[b>>2]|0)|0;if(kt(b,Es()|0)|0){c[d>>2]=0;f=1}else f=0}else f=1;do if(i){b=c[i+12>>2]|0;if((b|0)==(c[i+16>>2]|0))b=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else b=Fs(c[b>>2]|0)|0;if(!(kt(b,Es()|0)|0))if(f)break;else{B=50;break}else{c[e>>2]=0;B=48;break}}else B=48;while(0);if((B|0)==48?f:0)B=50;if((B|0)==50)c[g>>2]=c[g>>2]|2;B=c[d>>2]|0;OC(z);OC(A);ja=C;return B|0}function Lv(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;B=ja;ja=ja+304|0;r=B+300|0;z=B+288|0;y=B+276|0;t=B+272|0;v=B;w=B+268|0;u=B+264|0;x=Wu(f)|0;q=Ev(b,f,B+160|0)|0;Fv(z,f,r);c[y>>2]=0;c[y+4>>2]=0;c[y+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[y+(b<<2)>>2]=0;b=b+1|0}p=y+11|0;o=y+8|0;if((a[p>>0]|0)<0)b=(c[o>>2]&2147483647)+-1|0;else b=10;TC(y,b,0);b=(a[p>>0]|0)<0?c[y>>2]|0:y;c[t>>2]=b;c[w>>2]=v;c[u>>2]=0;n=y+4|0;j=c[d>>2]|0;i=j;a:while(1){if(i){f=c[i+12>>2]|0;if((f|0)==(c[i+16>>2]|0))f=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else f=Fs(c[f>>2]|0)|0;if(kt(f,Es()|0)|0){c[d>>2]=0;m=0;j=0;k=1}else{m=i;k=0}}else{m=0;j=0;k=1}i=c[e>>2]|0;do if(i){f=c[i+12>>2]|0;if((f|0)==(c[i+16>>2]|0))f=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else f=Fs(c[f>>2]|0)|0;if(!(kt(f,Es()|0)|0))if(k)break;else break a;else{c[e>>2]=0;A=19;break}}else A=19;while(0);if((A|0)==19){A=0;if(k){i=0;break}else i=0}f=a[p>>0]|0;f=f<<24>>24<0?c[n>>2]|0:f&255;if((c[t>>2]|0)==(b+f|0)){TC(y,f<<1,0);if((a[p>>0]|0)<0)b=(c[o>>2]&2147483647)+-1|0;else b=10;TC(y,b,0);b=(a[p>>0]|0)<0?c[y>>2]|0:y;c[t>>2]=b+f}l=m+12|0;f=c[l>>2]|0;k=m+16|0;if((f|0)==(c[k>>2]|0))f=ma[c[(c[m>>2]|0)+36>>2]&127](m)|0;else f=Fs(c[f>>2]|0)|0;if(xv(f,x,b,t,u,c[r>>2]|0,z,v,w,q)|0)break;f=c[l>>2]|0;if((f|0)==(c[k>>2]|0))ma[c[(c[m>>2]|0)+40>>2]&127](m)|0;else{c[l>>2]=f+4;Fs(c[f>>2]|0)|0}i=m}r=a[z+11>>0]|0;if((r<<24>>24<0?c[z+4>>2]|0:r&255)|0?(s=c[w>>2]|0,(s-v|0)<160):0){u=c[u>>2]|0;c[w>>2]=s+4;c[s>>2]=u}c[h>>2]=iv(b,c[t>>2]|0,g,x)|0;Qu(z,v,c[w>>2]|0,g);if(m){b=c[m+12>>2]|0;if((b|0)==(c[m+16>>2]|0))b=ma[c[(c[j>>2]|0)+36>>2]&127](m)|0;else b=Fs(c[b>>2]|0)|0;if(kt(b,Es()|0)|0){c[d>>2]=0;f=1}else f=0}else f=1;do if(i){b=c[i+12>>2]|0;if((b|0)==(c[i+16>>2]|0))b=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else b=Fs(c[b>>2]|0)|0;if(!(kt(b,Es()|0)|0))if(f)break;else{A=50;break}else{c[e>>2]=0;A=48;break}}else A=48;while(0);if((A|0)==48?f:0)A=50;if((A|0)==50)c[g>>2]=c[g>>2]|2;A=c[d>>2]|0;OC(y);OC(z);ja=B;return A|0}function Mv(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;w=ja;ja=ja+112|0;k=w;l=(f-e|0)/12|0;if(l>>>0>100){k=iD(l)|0;if(!k)FC();else{u=k;j=k}}else{u=0;j=k}n=e;k=0;o=l;m=j;while(1){if((n|0)==(f|0))break;l=a[n+8+3>>0]|0;if(l<<24>>24<0)l=c[n+4>>2]|0;else l=l&255;if(!l){a[m>>0]=2;k=k+1|0;l=o+-1|0}else{a[m>>0]=1;l=o}n=n+12|0;o=l;m=m+1|0}t=0;while(1){l=c[b>>2]|0;do if(l){m=c[l+12>>2]|0;if((m|0)==(c[l+16>>2]|0))l=ma[c[(c[l>>2]|0)+36>>2]&127](l)|0;else l=Fs(c[m>>2]|0)|0;if(kt(l,Es()|0)|0){c[b>>2]=0;p=1;break}else{p=(c[b>>2]|0)==0;break}}else p=1;while(0);m=c[d>>2]|0;if(m){l=c[m+12>>2]|0;if((l|0)==(c[m+16>>2]|0))l=ma[c[(c[m>>2]|0)+36>>2]&127](m)|0;else l=Fs(c[l>>2]|0)|0;if(kt(l,Es()|0)|0){c[d>>2]=0;l=1;m=0}else l=0}else{l=1;m=0}n=c[b>>2]|0;if(!((o|0)!=0&(p^l)))break;l=c[n+12>>2]|0;if((l|0)==(c[n+16>>2]|0))l=ma[c[(c[n>>2]|0)+36>>2]&127](n)|0;else l=Fs(c[l>>2]|0)|0;if(!i)l=oa[c[(c[g>>2]|0)+28>>2]&63](g,l)|0;s=t+1|0;p=0;r=e;q=j;while(1){if((r|0)==(f|0))break;do if((a[q>>0]|0)==1){n=r+8+3|0;if((a[n>>0]|0)<0)m=c[r>>2]|0;else m=r;m=c[m+(t<<2)>>2]|0;if(!i)m=oa[c[(c[g>>2]|0)+28>>2]&63](g,m)|0;if((l|0)!=(m|0)){a[q>>0]=0;m=p;o=o+-1|0;break}m=a[n>>0]|0;if(m<<24>>24<0)m=c[r+4>>2]|0;else m=m&255;if((m|0)==(s|0)){a[q>>0]=2;m=1;k=k+1|0;o=o+-1|0}else m=1}else m=p;while(0);p=m;r=r+12|0;q=q+1|0}a:do if(p){l=c[b>>2]|0;n=l+12|0;m=c[n>>2]|0;if((m|0)==(c[l+16>>2]|0))ma[c[(c[l>>2]|0)+40>>2]&127](l)|0;else{c[n>>2]=m+4;Fs(c[m>>2]|0)|0}if((k+o|0)>>>0>1){n=e;m=j;while(1){if((n|0)==(f|0))break a;if((a[m>>0]|0)==2){l=a[n+8+3>>0]|0;if(l<<24>>24<0)l=c[n+4>>2]|0;else l=l&255;if((l|0)!=(s|0)){a[m>>0]=0;k=k+-1|0}}n=n+12|0;m=m+1|0}}}while(0);t=s}do if(n){k=c[n+12>>2]|0;if((k|0)==(c[n+16>>2]|0))k=ma[c[(c[n>>2]|0)+36>>2]&127](n)|0;else k=Fs(c[k>>2]|0)|0;if(kt(k,Es()|0)|0){c[b>>2]=0;l=1;break}else{l=(c[b>>2]|0)==0;break}}else l=1;while(0);do if(m){k=c[m+12>>2]|0;if((k|0)==(c[m+16>>2]|0))k=ma[c[(c[m>>2]|0)+36>>2]&127](m)|0;else k=Fs(c[k>>2]|0)|0;if(!(kt(k,Es()|0)|0))if(l)break;else{v=79;break}else{c[d>>2]=0;v=41;break}}else v=41;while(0);if((v|0)==41?l:0)v=79;if((v|0)==79)c[h>>2]=c[h>>2]|2;while(1){if((e|0)==(f|0)){v=84;break}if((a[j>>0]|0)==2)break;e=e+12|0;j=j+1|0}if((v|0)==84){c[h>>2]=c[h>>2]|4;e=f}jD(u);ja=w;return e|0}function Nv(a){a=a|0;gu(a);return}function Ov(a){a=a|0;gu(a);Gf(a);return}function Pv(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;l=ja;ja=ja+16|0;k=l+4|0;h=l;if(!(c[e+4>>2]&1)){j=c[(c[b>>2]|0)+24>>2]|0;c[h>>2]=c[d>>2];c[k>>2]=c[h>>2];f=sa[j&31](b,k,e,f,g&1)|0}else{jt(k,e);f=Bu(k,108364)|0;Cu(k);e=c[f>>2]|0;if(g)za[c[e+24>>2]&127](k,f);else za[c[e+28>>2]&127](k,f);i=k+11|0;b=a[i>>0]|0;g=c[k>>2]|0;j=k+4|0;f=b;e=g;g=b<<24>>24<0?g:k;while(1){b=f<<24>>24<0;if((g|0)==((b?e:k)+(b?c[j>>2]|0:f&255)|0))break;f=a[g>>0]|0;e=c[d>>2]|0;if(e|0){b=e+24|0;h=c[b>>2]|0;if((h|0)==(c[e+28>>2]|0)){b=c[(c[e>>2]|0)+52>>2]|0;f=Va(f)|0;f=oa[b&63](e,f)|0}else{c[b>>2]=h+1;a[h>>0]=f;f=Va(f)|0}if(Qa(f,Ra()|0)|0)c[d>>2]=0}f=a[i>>0]|0;e=c[k>>2]|0;g=g+1|0}f=c[d>>2]|0;OC(k)}ja=l;return f|0}function Qv(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;h=ja;ja=ja+32|0;k=h;n=h+16|0;m=h+12|0;b=h+4|0;l=h+8|0;a[n>>0]=a[35856]|0;a[n+1>>0]=a[35857]|0;a[n+2>>0]=a[35858]|0;a[n+3>>0]=a[35859]|0;a[n+4>>0]=a[35860]|0;a[n+5>>0]=a[35861]|0;p=e+4|0;aw(n+1|0,35862,1,c[p>>2]|0);p=(c[p>>2]|0)>>>9&1;q=p+13|0;i=aa()|0;o=ja;ja=ja+((1*q|0)+15&-16)|0;j=Eu()|0;c[k>>2]=g;g=o+(Xv(o,q,j,n,k)|0)|0;n=Yv(o,g,e)|0;j=ja;ja=ja+((1*((p<<1|24)+-1|0)|0)+15&-16)|0;jt(k,e);bw(o,n,g,j,m,b,k);Cu(k);c[l>>2]=c[d>>2];g=c[m>>2]|0;b=c[b>>2]|0;c[k>>2]=c[l>>2];b=Ya(k,j,g,b,e,f)|0;$(i|0);ja=h;return b|0}function Rv(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;h=ja;ja=ja+32|0;j=h+8|0;m=h;l=h+24|0;a=h+16|0;k=h+20|0;o=m;c[o>>2]=37;c[o+4>>2]=0;o=d+4|0;aw(m+1|0,35853,1,c[o>>2]|0);o=(c[o>>2]|0)>>>9&1;q=o+23|0;i=aa()|0;n=ja;ja=ja+((1*q|0)+15&-16)|0;p=Eu()|0;r=j;c[r>>2]=f;c[r+4>>2]=g;f=n+(Xv(n,q,p,m,j)|0)|0;m=Yv(n,f,d)|0;g=ja;ja=ja+((1*((o<<1|44)+-1|0)|0)+15&-16)|0;jt(j,d);bw(n,m,f,g,l,a,j);Cu(j);c[k>>2]=c[b>>2];b=c[l>>2]|0;a=c[a>>2]|0;c[j>>2]=c[k>>2];a=Ya(j,g,b,a,d,e)|0;$(i|0);ja=h;return a|0}function Sv(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;h=ja;ja=ja+32|0;k=h;n=h+16|0;m=h+12|0;b=h+4|0;l=h+8|0;a[n>>0]=a[35856]|0;a[n+1>>0]=a[35857]|0;a[n+2>>0]=a[35858]|0;a[n+3>>0]=a[35859]|0;a[n+4>>0]=a[35860]|0;a[n+5>>0]=a[35861]|0;p=e+4|0;aw(n+1|0,35862,0,c[p>>2]|0);p=(c[p>>2]|0)>>>9&1;q=p|12;i=aa()|0;o=ja;ja=ja+((1*q|0)+15&-16)|0;j=Eu()|0;c[k>>2]=g;g=o+(Xv(o,q,j,n,k)|0)|0;n=Yv(o,g,e)|0;j=ja;ja=ja+((1*(p<<1|21)|0)+15&-16)|0;jt(k,e);bw(o,n,g,j,m,b,k);Cu(k);c[l>>2]=c[d>>2];g=c[m>>2]|0;b=c[b>>2]|0;c[k>>2]=c[l>>2];b=Ya(k,j,g,b,e,f)|0;$(i|0);ja=h;return b|0}function Tv(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;h=ja;ja=ja+32|0;j=h+8|0;m=h;l=h+24|0;a=h+16|0;k=h+20|0;o=m;c[o>>2]=37;c[o+4>>2]=0;o=d+4|0;aw(m+1|0,35853,0,c[o>>2]|0);o=(c[o>>2]|0)>>>9&1|22;q=o+1|0;i=aa()|0;n=ja;ja=ja+((1*q|0)+15&-16)|0;p=Eu()|0;r=j;c[r>>2]=f;c[r+4>>2]=g;f=n+(Xv(n,q,p,m,j)|0)|0;m=Yv(n,f,d)|0;g=ja;ja=ja+((1*((o<<1)+-1|0)|0)+15&-16)|0;jt(j,d);bw(n,m,f,g,l,a,j);Cu(j);c[k>>2]=c[b>>2];b=c[l>>2]|0;a=c[a>>2]|0;c[j>>2]=c[k>>2];a=Ya(j,g,b,a,d,e)|0;$(i|0);ja=h;return a|0}function Uv(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=+f;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;v=ja;ja=ja+176|0;u=v+168|0;m=v+144|0;l=v+128|0;i=v+120|0;h=v+104|0;j=v+96|0;o=v+64|0;n=v+164|0;p=v;s=v+160|0;r=v+156|0;t=v+152|0;k=j;c[k>>2]=37;c[k+4>>2]=0;k=Zv(j+1|0,109280,c[d+4>>2]|0)|0;c[n>>2]=o;a=Eu()|0;if(k){c[h>>2]=c[d+8>>2];g[h+8>>3]=f;a=Xv(o,30,a,j,h)|0}else{g[i>>3]=f;a=Xv(o,30,a,j,i)|0}if((a|0)>29){a=Eu()|0;if(k){c[l>>2]=c[d+8>>2];g[l+8>>3]=f;h=_v(n,a,j,l)|0}else{g[m>>3]=f;h=_v(n,a,j,m)|0}a=c[n>>2]|0;if(!a)FC();else{w=a;x=a;q=h}}else{w=c[n>>2]|0;x=0;q=a}h=w+q|0;i=Yv(w,h,d)|0;if((w|0)!=(o|0)){a=iD(q<<1)|0;if(!a)FC();else{y=a;z=a}}else{y=p;z=0}jt(u,d);$v(w,i,h,y,s,r,u);Cu(u);c[t>>2]=c[b>>2];w=c[s>>2]|0;b=c[r>>2]|0;c[u>>2]=c[t>>2];b=Ya(u,y,w,b,d,e)|0;jD(z);jD(x);ja=v;return b|0}function Vv(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=+f;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;v=ja;ja=ja+176|0;u=v+168|0;m=v+144|0;l=v+128|0;i=v+120|0;h=v+104|0;j=v+96|0;o=v+64|0;n=v+164|0;p=v;s=v+160|0;r=v+156|0;t=v+152|0;k=j;c[k>>2]=37;c[k+4>>2]=0;k=Zv(j+1|0,35851,c[d+4>>2]|0)|0;c[n>>2]=o;a=Eu()|0;if(k){c[h>>2]=c[d+8>>2];g[h+8>>3]=f;a=Xv(o,30,a,j,h)|0}else{g[i>>3]=f;a=Xv(o,30,a,j,i)|0}if((a|0)>29){a=Eu()|0;if(k){c[l>>2]=c[d+8>>2];g[l+8>>3]=f;h=_v(n,a,j,l)|0}else{g[m>>3]=f;h=_v(n,a,j,m)|0}a=c[n>>2]|0;if(!a)FC();else{w=a;x=a;q=h}}else{w=c[n>>2]|0;x=0;q=a}h=w+q|0;i=Yv(w,h,d)|0;if((w|0)!=(o|0)){a=iD(q<<1)|0;if(!a)FC();else{y=a;z=a}}else{y=p;z=0}jt(u,d);$v(w,i,h,y,s,r,u);Cu(u);c[t>>2]=c[b>>2];w=c[s>>2]|0;b=c[r>>2]|0;c[u>>2]=c[t>>2];b=Ya(u,y,w,b,d,e)|0;jD(z);jD(x);ja=v;return b|0}function Wv(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0;h=ja;ja=ja+96|0;l=h+72|0;b=h+80|0;i=h+48|0;j=h;m=h+76|0;a[b>>0]=a[35845]|0;a[b+1>>0]=a[35846]|0;a[b+2>>0]=a[35847]|0;a[b+3>>0]=a[35848]|0;a[b+4>>0]=a[35849]|0;a[b+5>>0]=a[35850]|0;k=Eu()|0;c[l>>2]=g;b=Xv(i,20,k,b,l)|0;k=i+b|0;g=Yv(i,k,e)|0;jt(l,e);n=Bu(l,108348)|0;Cu(l);qa[c[(c[n>>2]|0)+32>>2]&15](n,i,k,j)|0;b=j+b|0;c[m>>2]=c[d>>2];c[l>>2]=c[m>>2];b=Ya(l,j,(g|0)==(k|0)?b:j+(g-i)|0,b,e,f)|0;ja=h;return b|0}function Xv(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=ja;ja=ja+16|0;h=g;c[h>>2]=f;f=xe(d)|0;d=pd(a,b,e,h)|0;if(f|0)xe(f)|0;ja=g;return d|0}function Yv(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;a:do switch((c[e+4>>2]&176)<<24>>24){case 16:{e=a[b>>0]|0;switch(e<<24>>24){case 43:case 45:{b=b+1|0;break a}default:{}}if((d-b|0)>1&e<<24>>24==48){switch(a[b+1>>0]|0){case 88:case 120:break;default:{f=7;break a}}b=b+2|0}else f=7;break}case 32:{b=d;break}default:f=7}while(0);return b|0}function Zv(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;if(d&2048){a[b>>0]=43;b=b+1|0}if(d&1024){a[b>>0]=35;b=b+1|0}g=d&260;f=d&16384;h=(g|0)==260;if(h)i=0;else{a[b>>0]=46;a[b+1>>0]=42;b=b+2|0;i=1}e=b;d=c;while(1){b=a[d>>0]|0;if(!(b<<24>>24))break;a[e>>0]=b;e=e+1|0;d=d+1|0}a:do switch(g&511){case 4:{b=f>>>9&255^102;break}case 256:{b=f>>>9&255^101;break}default:{b=f>>>9&255;if(h){b=b^97;break a}else{b=b^103;break a}}}while(0);a[e>>0]=b;return i|0}function _v(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=ja;ja=ja+16|0;g=f;c[g>>2]=e;e=xe(b)|0;b=Ye(a,d,g)|0;if(e|0)xe(e)|0;ja=f;return b|0}function $v(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;v=ja;ja=ja+16|0;s=v;t=Bu(i,108348)|0;q=Bu(i,108364)|0;za[c[(c[q>>2]|0)+20>>2]&127](s,q);c[h>>2]=f;i=a[b>>0]|0;switch(i<<24>>24){case 43:case 45:{r=oa[c[(c[t>>2]|0)+28>>2]&63](t,i)|0;j=c[h>>2]|0;c[h>>2]=j+1;a[j>>0]=r;j=b+1|0;break}default:j=b}r=e;a:do if((r-j|0)>1?(a[j>>0]|0)==48:0){i=j+1|0;switch(a[i>>0]|0){case 88:case 120:break;default:{u=4;break a}}o=oa[c[(c[t>>2]|0)+28>>2]&63](t,48)|0;p=c[h>>2]|0;c[h>>2]=p+1;a[p>>0]=o;j=j+2|0;p=oa[c[(c[t>>2]|0)+28>>2]&63](t,a[i>>0]|0)|0;i=c[h>>2]|0;c[h>>2]=i+1;a[i>>0]=p;i=j;while(1){if(i>>>0>=e>>>0)break a;p=a[i>>0]|0;if(!(re(p,Eu()|0)|0))break a;i=i+1|0}}else u=4;while(0);b:do if((u|0)==4){i=j;while(1){if(i>>>0>=e>>>0)break b;p=a[i>>0]|0;if(!(qe(p,Eu()|0)|0))break b;i=i+1|0}}while(0);o=s+11|0;n=a[o>>0]|0;p=s+4|0;c:do if((n<<24>>24<0?c[p>>2]|0:n&255)|0){d:do if((j|0)!=(i|0)){l=j;k=i;while(1){k=k+-1|0;if(l>>>0>=k>>>0)break d;n=a[l>>0]|0;a[l>>0]=a[k>>0]|0;a[k>>0]=n;l=l+1|0}}while(0);n=ma[c[(c[q>>2]|0)+16>>2]&127](q)|0;k=0;l=0;m=j;while(1){if(m>>>0>=i>>>0)break;w=a[((a[o>>0]|0)<0?c[s>>2]|0:s)+l>>0]|0;if(w<<24>>24>0&(k|0)==(w<<24>>24|0)){w=c[h>>2]|0;c[h>>2]=w+1;a[w>>0]=n;w=a[o>>0]|0;k=0;l=l+(l>>>0<((w<<24>>24<0?c[p>>2]|0:w&255)+-1|0)>>>0&1)|0}x=oa[c[(c[t>>2]|0)+28>>2]&63](t,a[m>>0]|0)|0;w=c[h>>2]|0;c[h>>2]=w+1;a[w>>0]=x;k=k+1|0;m=m+1|0}k=f+(j-b)|0;j=c[h>>2]|0;if((k|0)==(j|0))k=t;else while(1){j=j+-1|0;if(k>>>0>=j>>>0){k=t;break c}x=a[k>>0]|0;a[k>>0]=a[j>>0]|0;a[j>>0]=x;k=k+1|0}}else{qa[c[(c[t>>2]|0)+32>>2]&15](t,j,i,c[h>>2]|0)|0;c[h>>2]=(c[h>>2]|0)+(i-j);k=t}while(0);while(1){if(i>>>0>=e>>>0)break;j=a[i>>0]|0;if(j<<24>>24==46){u=32;break}w=oa[c[(c[k>>2]|0)+28>>2]&63](t,j)|0;x=c[h>>2]|0;c[h>>2]=x+1;a[x>>0]=w;i=i+1|0}if((u|0)==32){w=ma[c[(c[q>>2]|0)+12>>2]&127](q)|0;x=c[h>>2]|0;c[h>>2]=x+1;a[x>>0]=w;i=i+1|0}qa[c[(c[t>>2]|0)+32>>2]&15](t,i,e,c[h>>2]|0)|0;x=(c[h>>2]|0)+(r-i)|0;c[h>>2]=x;c[g>>2]=(d|0)==(e|0)?x:f+(d-b)|0;OC(s);ja=v;return}function aw(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0;if(e&2048){a[b>>0]=43;b=b+1|0}if(e&512){a[b>>0]=35;b=b+1|0}f=b;while(1){b=a[c>>0]|0;if(!(b<<24>>24))break;a[f>>0]=b;f=f+1|0;c=c+1|0}switch(e&74){case 64:{b=111;break}case 8:{b=e>>>9&32^120;break}default:b=d?100:117}a[f>>0]=b;return}function bw(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;r=ja;ja=ja+16|0;q=r;p=Bu(i,108348)|0;l=Bu(i,108364)|0;za[c[(c[l>>2]|0)+20>>2]&127](q,l);n=q+11|0;m=a[n>>0]|0;o=q+4|0;if((m<<24>>24<0?c[o>>2]|0:m&255)|0){c[h>>2]=f;i=a[b>>0]|0;switch(i<<24>>24){case 43:case 45:{m=oa[c[(c[p>>2]|0)+28>>2]&63](p,i)|0;i=c[h>>2]|0;c[h>>2]=i+1;a[i>>0]=m;i=b+1|0;break}default:i=b}a:do if((e-i|0)>1?(a[i>>0]|0)==48:0){j=i+1|0;switch(a[j>>0]|0){case 88:case 120:break;default:break a}m=oa[c[(c[p>>2]|0)+28>>2]&63](p,48)|0;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=m;k=oa[c[(c[p>>2]|0)+28>>2]&63](p,a[j>>0]|0)|0;m=c[h>>2]|0;c[h>>2]=m+1;a[m>>0]=k;i=i+2|0}while(0);b:do if((i|0)!=(e|0)){k=i;j=e;while(1){j=j+-1|0;if(k>>>0>=j>>>0)break b;m=a[k>>0]|0;a[k>>0]=a[j>>0]|0;a[j>>0]=m;k=k+1|0}}while(0);m=ma[c[(c[l>>2]|0)+16>>2]&127](l)|0;j=0;k=0;l=i;while(1){if(l>>>0>=e>>>0)break;s=a[((a[n>>0]|0)<0?c[q>>2]|0:q)+k>>0]|0;if(s<<24>>24!=0&(j|0)==(s<<24>>24|0)){s=c[h>>2]|0;c[h>>2]=s+1;a[s>>0]=m;s=a[n>>0]|0;j=0;k=k+(k>>>0<((s<<24>>24<0?c[o>>2]|0:s&255)+-1|0)>>>0&1)|0}t=oa[c[(c[p>>2]|0)+28>>2]&63](p,a[l>>0]|0)|0;s=c[h>>2]|0;c[h>>2]=s+1;a[s>>0]=t;j=j+1|0;l=l+1|0}i=f+(i-b)|0;j=c[h>>2]|0;if((i|0)!=(j|0)){while(1){j=j+-1|0;if(i>>>0>=j>>>0)break;t=a[i>>0]|0;a[i>>0]=a[j>>0]|0;a[j>>0]=t;i=i+1|0}i=c[h>>2]|0}}else{qa[c[(c[p>>2]|0)+32>>2]&15](p,b,e,f)|0;i=f+(e-b)|0;c[h>>2]=i}c[g>>2]=(d|0)==(e|0)?i:f+(d-b)|0;OC(q);ja=r;return}function cw(a){a=a|0;gu(a);return}function dw(a){a=a|0;gu(a);Gf(a);return}function ew(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;l=ja;ja=ja+16|0;k=l+4|0;h=l;if(!(c[e+4>>2]&1)){j=c[(c[b>>2]|0)+24>>2]|0;c[h>>2]=c[d>>2];c[k>>2]=c[h>>2];f=sa[j&31](b,k,e,f,g&1)|0}else{jt(k,e);f=Bu(k,108388)|0;Cu(k);e=c[f>>2]|0;if(g)za[c[e+24>>2]&127](k,f);else za[c[e+28>>2]&127](k,f);i=k+8+3|0;b=a[i>>0]|0;g=c[k>>2]|0;j=k+4|0;f=g;e=b;g=b<<24>>24<0?g:k;while(1){b=e<<24>>24<0;if((g|0)==((b?f:k)+((b?c[j>>2]|0:e&255)<<2)|0))break;f=c[g>>2]|0;e=c[d>>2]|0;if(e|0){b=e+24|0;h=c[b>>2]|0;if((h|0)==(c[e+28>>2]|0)){b=c[(c[e>>2]|0)+52>>2]|0;f=Fs(f)|0;f=oa[b&63](e,f)|0}else{c[b>>2]=h+4;c[h>>2]=f;f=Fs(f)|0}if(kt(f,Es()|0)|0)c[d>>2]=0}f=c[k>>2]|0;e=a[i>>0]|0;g=g+4|0}f=c[d>>2]|0;$C(k)}ja=l;return f|0}function fw(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;h=ja;ja=ja+32|0;k=h;n=h+16|0;m=h+12|0;b=h+4|0;l=h+8|0;a[n>>0]=a[35856]|0;a[n+1>>0]=a[35857]|0;a[n+2>>0]=a[35858]|0;a[n+3>>0]=a[35859]|0;a[n+4>>0]=a[35860]|0;a[n+5>>0]=a[35861]|0;p=e+4|0;aw(n+1|0,35862,1,c[p>>2]|0);p=(c[p>>2]|0)>>>9&1;q=p+13|0;i=aa()|0;o=ja;ja=ja+((1*q|0)+15&-16)|0;j=Eu()|0;c[k>>2]=g;g=o+(Xv(o,q,j,n,k)|0)|0;n=Yv(o,g,e)|0;j=ja;ja=ja+((1*((p<<1|24)+-1<<2)|0)+15&-16)|0;jt(k,e);ow(o,n,g,j,m,b,k);Cu(k);c[l>>2]=c[d>>2];g=c[m>>2]|0;b=c[b>>2]|0;c[k>>2]=c[l>>2];b=mw(k,j,g,b,e,f)|0;$(i|0);ja=h;return b|0}function gw(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;h=ja;ja=ja+32|0;j=h+8|0;m=h;l=h+24|0;a=h+16|0;k=h+20|0;o=m;c[o>>2]=37;c[o+4>>2]=0;o=d+4|0;aw(m+1|0,35853,1,c[o>>2]|0);o=(c[o>>2]|0)>>>9&1;q=o+23|0;i=aa()|0;n=ja;ja=ja+((1*q|0)+15&-16)|0;p=Eu()|0;r=j;c[r>>2]=f;c[r+4>>2]=g;f=n+(Xv(n,q,p,m,j)|0)|0;m=Yv(n,f,d)|0;g=ja;ja=ja+((1*((o<<1|44)+-1<<2)|0)+15&-16)|0;jt(j,d);ow(n,m,f,g,l,a,j);Cu(j);c[k>>2]=c[b>>2];b=c[l>>2]|0;a=c[a>>2]|0;c[j>>2]=c[k>>2];a=mw(j,g,b,a,d,e)|0;$(i|0);ja=h;return a|0}function hw(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;h=ja;ja=ja+32|0;k=h;n=h+16|0;m=h+12|0;b=h+4|0;l=h+8|0;a[n>>0]=a[35856]|0;a[n+1>>0]=a[35857]|0;a[n+2>>0]=a[35858]|0;a[n+3>>0]=a[35859]|0;a[n+4>>0]=a[35860]|0;a[n+5>>0]=a[35861]|0;p=e+4|0;aw(n+1|0,35862,0,c[p>>2]|0);p=(c[p>>2]|0)>>>9&1;q=p|12;i=aa()|0;o=ja;ja=ja+((1*q|0)+15&-16)|0;j=Eu()|0;c[k>>2]=g;g=o+(Xv(o,q,j,n,k)|0)|0;n=Yv(o,g,e)|0;j=ja;ja=ja+((1*((p<<1|21)<<2)|0)+15&-16)|0;jt(k,e);ow(o,n,g,j,m,b,k);Cu(k);c[l>>2]=c[d>>2];g=c[m>>2]|0;b=c[b>>2]|0;c[k>>2]=c[l>>2];b=mw(k,j,g,b,e,f)|0;$(i|0);ja=h;return b|0}function iw(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;h=ja;ja=ja+32|0;j=h+8|0;m=h;l=h+24|0;a=h+16|0;k=h+20|0;o=m;c[o>>2]=37;c[o+4>>2]=0;o=d+4|0;aw(m+1|0,35853,0,c[o>>2]|0);o=(c[o>>2]|0)>>>9&1|22;q=o+1|0;i=aa()|0;n=ja;ja=ja+((1*q|0)+15&-16)|0;p=Eu()|0;r=j;c[r>>2]=f;c[r+4>>2]=g;f=n+(Xv(n,q,p,m,j)|0)|0;m=Yv(n,f,d)|0;g=ja;ja=ja+((1*((o<<1)+-1<<2)|0)+15&-16)|0;jt(j,d);ow(n,m,f,g,l,a,j);Cu(j);c[k>>2]=c[b>>2];b=c[l>>2]|0;a=c[a>>2]|0;c[j>>2]=c[k>>2];a=mw(j,g,b,a,d,e)|0;$(i|0);ja=h;return a|0}function jw(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=+f;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;x=ja;ja=ja+352|0;u=x+344|0;m=x+320|0;l=x+304|0;i=x+296|0;h=x+280|0;j=x+272|0;o=x+240|0;n=x+340|0;p=x;s=x+336|0;r=x+332|0;t=x+328|0;k=j;c[k>>2]=37;c[k+4>>2]=0;k=Zv(j+1|0,109280,c[d+4>>2]|0)|0;c[n>>2]=o;a=Eu()|0;if(k){c[h>>2]=c[d+8>>2];g[h+8>>3]=f;a=Xv(o,30,a,j,h)|0}else{g[i>>3]=f;a=Xv(o,30,a,j,i)|0}if((a|0)>29){a=Eu()|0;if(k){c[l>>2]=c[d+8>>2];g[l+8>>3]=f;h=_v(n,a,j,l)|0}else{g[m>>3]=f;h=_v(n,a,j,m)|0}a=c[n>>2]|0;if(!a)FC();else{v=a;z=a;q=h}}else{v=c[n>>2]|0;z=0;q=a}h=v+q|0;i=Yv(v,h,d)|0;do if((v|0)!=(o|0)){a=iD(q<<3)|0;if(!a)FC();else{y=a;w=a;A=0;break}}else{y=0;w=p;A=1}while(0);jt(u,d);nw(v,i,h,w,s,r,u);Cu(u);c[t>>2]=c[b>>2];v=c[s>>2]|0;a=c[r>>2]|0;c[u>>2]=c[t>>2];a=mw(u,w,v,a,d,e)|0;c[b>>2]=a;if(!A)jD(y);jD(z);ja=x;return a|0}function kw(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=+f;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;x=ja;ja=ja+352|0;u=x+344|0;m=x+320|0;l=x+304|0;i=x+296|0;h=x+280|0;j=x+272|0;o=x+240|0;n=x+340|0;p=x;s=x+336|0;r=x+332|0;t=x+328|0;k=j;c[k>>2]=37;c[k+4>>2]=0;k=Zv(j+1|0,35851,c[d+4>>2]|0)|0;c[n>>2]=o;a=Eu()|0;if(k){c[h>>2]=c[d+8>>2];g[h+8>>3]=f;a=Xv(o,30,a,j,h)|0}else{g[i>>3]=f;a=Xv(o,30,a,j,i)|0}if((a|0)>29){a=Eu()|0;if(k){c[l>>2]=c[d+8>>2];g[l+8>>3]=f;h=_v(n,a,j,l)|0}else{g[m>>3]=f;h=_v(n,a,j,m)|0}a=c[n>>2]|0;if(!a)FC();else{v=a;z=a;q=h}}else{v=c[n>>2]|0;z=0;q=a}h=v+q|0;i=Yv(v,h,d)|0;do if((v|0)!=(o|0)){a=iD(q<<3)|0;if(!a)FC();else{y=a;w=a;A=0;break}}else{y=0;w=p;A=1}while(0);jt(u,d);nw(v,i,h,w,s,r,u);Cu(u);c[t>>2]=c[b>>2];v=c[s>>2]|0;a=c[r>>2]|0;c[u>>2]=c[t>>2];a=mw(u,w,v,a,d,e)|0;c[b>>2]=a;if(!A)jD(y);jD(z);ja=x;return a|0}function lw(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0;h=ja;ja=ja+208|0;l=h+184|0;b=h+192|0;i=h+160|0;j=h;m=h+188|0;a[b>>0]=a[35845]|0;a[b+1>>0]=a[35846]|0;a[b+2>>0]=a[35847]|0;a[b+3>>0]=a[35848]|0;a[b+4>>0]=a[35849]|0;a[b+5>>0]=a[35850]|0;k=Eu()|0;c[l>>2]=g;b=Xv(i,20,k,b,l)|0;k=i+b|0;g=Yv(i,k,e)|0;jt(l,e);n=Bu(l,108380)|0;Cu(l);qa[c[(c[n>>2]|0)+48>>2]&15](n,i,k,j)|0;b=j+(b<<2)|0;c[m>>2]=c[d>>2];c[l>>2]=c[m>>2];b=mw(l,j,(g|0)==(k|0)?b:j+(g-i<<2)|0,b,e,f)|0;ja=h;return b|0}function mw(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0;n=ja;ja=ja+16|0;m=n;i=c[b>>2]|0;a:do if(!i)i=0;else{o=d;k=f-o>>2;l=g+12|0;g=c[l>>2]|0;g=(g|0)>(k|0)?g-k|0:0;k=e;o=k-o|0;j=o>>2;if((o|0)>0?(pa[c[(c[i>>2]|0)+48>>2]&31](i,d,j)|0)!=(j|0):0){c[b>>2]=0;i=0;break}do if((g|0)>0){c[m>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;ZC(m,g,h);if((pa[c[(c[i>>2]|0)+48>>2]&31](i,(a[m+8+3>>0]|0)<0?c[m>>2]|0:m,g)|0)==(g|0)){$C(m);break}else{c[b>>2]=0;$C(m);i=0;break a}}while(0);o=f-k|0;f=o>>2;if((o|0)>0?(pa[c[(c[i>>2]|0)+48>>2]&31](i,e,f)|0)!=(f|0):0){c[b>>2]=0;i=0;break}c[l>>2]=0}while(0);ja=n;return i|0}function nw(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;v=ja;ja=ja+16|0;s=v;t=Bu(i,108380)|0;q=Bu(i,108388)|0;za[c[(c[q>>2]|0)+20>>2]&127](s,q);c[h>>2]=f;i=a[b>>0]|0;switch(i<<24>>24){case 43:case 45:{r=oa[c[(c[t>>2]|0)+44>>2]&63](t,i)|0;j=c[h>>2]|0;c[h>>2]=j+4;c[j>>2]=r;j=b+1|0;break}default:j=b}r=e;a:do if((r-j|0)>1?(a[j>>0]|0)==48:0){i=j+1|0;switch(a[i>>0]|0){case 88:case 120:break;default:{u=4;break a}}o=oa[c[(c[t>>2]|0)+44>>2]&63](t,48)|0;p=c[h>>2]|0;c[h>>2]=p+4;c[p>>2]=o;j=j+2|0;p=oa[c[(c[t>>2]|0)+44>>2]&63](t,a[i>>0]|0)|0;i=c[h>>2]|0;c[h>>2]=i+4;c[i>>2]=p;i=j;while(1){if(i>>>0>=e>>>0)break a;p=a[i>>0]|0;if(!(re(p,Eu()|0)|0))break a;i=i+1|0}}else u=4;while(0);b:do if((u|0)==4){i=j;while(1){if(i>>>0>=e>>>0)break b;p=a[i>>0]|0;if(!(qe(p,Eu()|0)|0))break b;i=i+1|0}}while(0);o=s+11|0;n=a[o>>0]|0;p=s+4|0;c:do if((n<<24>>24<0?c[p>>2]|0:n&255)|0){d:do if((j|0)!=(i|0)){l=j;k=i;while(1){k=k+-1|0;if(l>>>0>=k>>>0)break d;n=a[l>>0]|0;a[l>>0]=a[k>>0]|0;a[k>>0]=n;l=l+1|0}}while(0);n=ma[c[(c[q>>2]|0)+16>>2]&127](q)|0;k=0;l=0;m=j;while(1){if(m>>>0>=i>>>0)break;w=a[((a[o>>0]|0)<0?c[s>>2]|0:s)+l>>0]|0;if(w<<24>>24>0&(k|0)==(w<<24>>24|0)){w=c[h>>2]|0;c[h>>2]=w+4;c[w>>2]=n;w=a[o>>0]|0;k=0;l=l+(l>>>0<((w<<24>>24<0?c[p>>2]|0:w&255)+-1|0)>>>0&1)|0}x=oa[c[(c[t>>2]|0)+44>>2]&63](t,a[m>>0]|0)|0;w=c[h>>2]|0;c[h>>2]=w+4;c[w>>2]=x;k=k+1|0;m=m+1|0}k=f+(j-b<<2)|0;j=c[h>>2]|0;if((k|0)==(j|0)){l=t;j=k}else{l=k;k=j;while(1){k=k+-4|0;if(l>>>0>=k>>>0){l=t;break c}x=c[l>>2]|0;c[l>>2]=c[k>>2];c[k>>2]=x;l=l+4|0}}}else{qa[c[(c[t>>2]|0)+48>>2]&15](t,j,i,c[h>>2]|0)|0;j=(c[h>>2]|0)+(i-j<<2)|0;c[h>>2]=j;l=t}while(0);while(1){if(i>>>0>=e>>>0)break;j=a[i>>0]|0;if(j<<24>>24==46){u=32;break}w=oa[c[(c[l>>2]|0)+44>>2]&63](t,j)|0;x=c[h>>2]|0;j=x+4|0;c[h>>2]=j;c[x>>2]=w;i=i+1|0}if((u|0)==32){w=ma[c[(c[q>>2]|0)+12>>2]&127](q)|0;x=c[h>>2]|0;j=x+4|0;c[h>>2]=j;c[x>>2]=w;i=i+1|0}qa[c[(c[t>>2]|0)+48>>2]&15](t,i,e,j)|0;x=(c[h>>2]|0)+(r-i<<2)|0;c[h>>2]=x;c[g>>2]=(d|0)==(e|0)?x:f+(d-b<<2)|0;OC(s);ja=v;return}function ow(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;r=ja;ja=ja+16|0;q=r;p=Bu(i,108380)|0;l=Bu(i,108388)|0;za[c[(c[l>>2]|0)+20>>2]&127](q,l);n=q+11|0;m=a[n>>0]|0;o=q+4|0;if((m<<24>>24<0?c[o>>2]|0:m&255)|0){c[h>>2]=f;i=a[b>>0]|0;switch(i<<24>>24){case 43:case 45:{m=oa[c[(c[p>>2]|0)+44>>2]&63](p,i)|0;i=c[h>>2]|0;c[h>>2]=i+4;c[i>>2]=m;i=b+1|0;break}default:i=b}a:do if((e-i|0)>1?(a[i>>0]|0)==48:0){j=i+1|0;switch(a[j>>0]|0){case 88:case 120:break;default:break a}m=oa[c[(c[p>>2]|0)+44>>2]&63](p,48)|0;k=c[h>>2]|0;c[h>>2]=k+4;c[k>>2]=m;k=oa[c[(c[p>>2]|0)+44>>2]&63](p,a[j>>0]|0)|0;m=c[h>>2]|0;c[h>>2]=m+4;c[m>>2]=k;i=i+2|0}while(0);b:do if((i|0)!=(e|0)){k=i;j=e;while(1){j=j+-1|0;if(k>>>0>=j>>>0)break b;m=a[k>>0]|0;a[k>>0]=a[j>>0]|0;a[j>>0]=m;k=k+1|0}}while(0);m=ma[c[(c[l>>2]|0)+16>>2]&127](l)|0;j=0;k=0;l=i;while(1){if(l>>>0>=e>>>0)break;s=a[((a[n>>0]|0)<0?c[q>>2]|0:q)+k>>0]|0;if(s<<24>>24!=0&(j|0)==(s<<24>>24|0)){s=c[h>>2]|0;c[h>>2]=s+4;c[s>>2]=m;s=a[n>>0]|0;j=0;k=k+(k>>>0<((s<<24>>24<0?c[o>>2]|0:s&255)+-1|0)>>>0&1)|0}t=oa[c[(c[p>>2]|0)+44>>2]&63](p,a[l>>0]|0)|0;s=c[h>>2]|0;c[h>>2]=s+4;c[s>>2]=t;j=j+1|0;l=l+1|0}i=f+(i-b<<2)|0;j=c[h>>2]|0;if((i|0)!=(j|0)){while(1){j=j+-4|0;if(i>>>0>=j>>>0)break;t=c[i>>2]|0;c[i>>2]=c[j>>2];c[j>>2]=t;i=i+4|0}i=c[h>>2]|0}}else{qa[c[(c[p>>2]|0)+48>>2]&15](p,b,e,f)|0;i=f+(e-b<<2)|0;c[h>>2]=i}c[g>>2]=(d|0)==(e|0)?i:f+(d-b<<2)|0;OC(q);ja=r;return}function pw(a){a=a|0;gu(a);return}function qw(a){a=a|0;gu(a);Gf(a);return}function rw(a){a=a|0;return 2}function sw(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=ja;ja=ja+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];a=Kw(a,j,i,e,f,g,36381,36389)|0;ja=h;return a|0}function tw(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0;i=ja;ja=ja+16|0;j=i+12|0;k=i+8|0;m=i+4|0;l=i;n=b+8|0;n=ma[c[(c[n>>2]|0)+20>>2]&127](n)|0;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];e=a[n+11>>0]|0;o=e<<24>>24<0;d=o?c[n>>2]|0:n;e=d+(o?c[n+4>>2]|0:e&255)|0;c[k>>2]=c[m>>2];c[j>>2]=c[l>>2];b=Kw(b,k,j,f,g,h,d,e)|0;ja=i;return b|0}function uw(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;h=ja;ja=ja+16|0;i=h+4|0;j=h;jt(i,e);e=Bu(i,108348)|0;Cu(i);c[j>>2]=c[d>>2];c[i>>2]=c[j>>2];Iw(a,g+24|0,b,i,f,e);ja=h;return c[b>>2]|0}function vw(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;h=ja;ja=ja+16|0;i=h+4|0;j=h;jt(i,e);e=Bu(i,108348)|0;Cu(i);c[j>>2]=c[d>>2];c[i>>2]=c[j>>2];Jw(a,g+16|0,b,i,f,e);ja=h;return c[b>>2]|0}function ww(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;h=ja;ja=ja+16|0;i=h+4|0;j=h;jt(i,e);e=Bu(i,108348)|0;Cu(i);c[j>>2]=c[d>>2];c[i>>2]=c[j>>2];Vw(a,g+20|0,b,i,f,e);ja=h;return c[b>>2]|0}function xw(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;R=ja;ja=ja+144|0;P=R+128|0;K=R+112|0;j=R+124|0;q=R+120|0;F=R+116|0;I=R+108|0;k=R+104|0;l=R+100|0;m=R+96|0;n=R+92|0;o=R+88|0;p=R+84|0;r=R+80|0;s=R+76|0;t=R+72|0;u=R+68|0;v=R+64|0;w=R+60|0;x=R+56|0;y=R+52|0;z=R+48|0;A=R+44|0;B=R+40|0;C=R+36|0;D=R+32|0;E=R+28|0;G=R+24|0;H=R+20|0;J=R+16|0;L=R+12|0;M=R+8|0;N=R+4|0;O=R;c[g>>2]=0;jt(P,f);Q=Bu(P,108348)|0;Cu(P);do switch(i<<24>>24|0){case 65:case 97:{c[j>>2]=c[e>>2];c[P>>2]=c[j>>2];Iw(b,h+24|0,d,P,g,Q);S=26;break}case 104:case 66:case 98:{c[q>>2]=c[e>>2];c[P>>2]=c[q>>2];Jw(b,h+16|0,d,P,g,Q);S=26;break}case 99:{Q=b+8|0;Q=ma[c[(c[Q>>2]|0)+12>>2]&127](Q)|0;c[F>>2]=c[d>>2];c[I>>2]=c[e>>2];S=a[Q+11>>0]|0;e=S<<24>>24<0;i=e?c[Q>>2]|0:Q;S=i+(e?c[Q+4>>2]|0:S&255)|0;c[K>>2]=c[F>>2];c[P>>2]=c[I>>2];c[d>>2]=Kw(b,K,P,f,g,h,i,S)|0;S=26;break}case 101:case 100:{c[k>>2]=c[e>>2];c[P>>2]=c[k>>2];Lw(b,h+12|0,d,P,g,Q);S=26;break}case 68:{c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];c[K>>2]=c[l>>2];c[P>>2]=c[m>>2];c[d>>2]=Kw(b,K,P,f,g,h,36341,36349)|0;S=26;break}case 70:{c[n>>2]=c[d>>2];c[o>>2]=c[e>>2];c[K>>2]=c[n>>2];c[P>>2]=c[o>>2];c[d>>2]=Kw(b,K,P,f,g,h,36349,36357)|0;S=26;break}case 72:{c[p>>2]=c[e>>2];c[P>>2]=c[p>>2];Mw(b,h+8|0,d,P,g,Q);S=26;break}case 73:{c[r>>2]=c[e>>2];c[P>>2]=c[r>>2];Nw(b,h+8|0,d,P,g,Q);S=26;break}case 106:{c[s>>2]=c[e>>2];c[P>>2]=c[s>>2];Ow(b,h+28|0,d,P,g,Q);S=26;break}case 109:{c[t>>2]=c[e>>2];c[P>>2]=c[t>>2];Pw(b,h+16|0,d,P,g,Q);S=26;break}case 77:{c[u>>2]=c[e>>2];c[P>>2]=c[u>>2];Qw(b,h+4|0,d,P,g,Q);S=26;break}case 116:case 110:{c[v>>2]=c[e>>2];c[P>>2]=c[v>>2];Rw(b,d,P,g,Q);S=26;break}case 112:{c[w>>2]=c[e>>2];c[P>>2]=c[w>>2];Sw(b,h+8|0,d,P,g,Q);S=26;break}case 114:{c[x>>2]=c[d>>2];c[y>>2]=c[e>>2];c[K>>2]=c[x>>2];c[P>>2]=c[y>>2];c[d>>2]=Kw(b,K,P,f,g,h,36357,36368)|0;S=26;break}case 82:{c[z>>2]=c[d>>2];c[A>>2]=c[e>>2];c[K>>2]=c[z>>2];c[P>>2]=c[A>>2];c[d>>2]=Kw(b,K,P,f,g,h,36368,36373)|0;S=26;break}case 83:{c[B>>2]=c[e>>2];c[P>>2]=c[B>>2];Tw(b,h,d,P,g,Q);S=26;break}case 84:{c[C>>2]=c[d>>2];c[D>>2]=c[e>>2];c[K>>2]=c[C>>2];c[P>>2]=c[D>>2];c[d>>2]=Kw(b,K,P,f,g,h,36373,36381)|0;S=26;break}case 119:{c[E>>2]=c[e>>2];c[P>>2]=c[E>>2];Uw(b,h+24|0,d,P,g,Q);S=26;break}case 120:{j=c[(c[b>>2]|0)+20>>2]|0;c[G>>2]=c[d>>2];c[H>>2]=c[e>>2];c[K>>2]=c[G>>2];c[P>>2]=c[H>>2];j=ua[j&63](b,K,P,f,g,h)|0;break}case 88:{Q=b+8|0;Q=ma[c[(c[Q>>2]|0)+24>>2]&127](Q)|0;c[J>>2]=c[d>>2];c[L>>2]=c[e>>2];S=a[Q+11>>0]|0;e=S<<24>>24<0;i=e?c[Q>>2]|0:Q;S=i+(e?c[Q+4>>2]|0:S&255)|0;c[K>>2]=c[J>>2];c[P>>2]=c[L>>2];c[d>>2]=Kw(b,K,P,f,g,h,i,S)|0;S=26;break}case 121:{c[M>>2]=c[e>>2];c[P>>2]=c[M>>2];Vw(b,h+20|0,d,P,g,Q);S=26;break}case 89:{c[N>>2]=c[e>>2];c[P>>2]=c[N>>2];Ww(b,h+20|0,d,P,g,Q);S=26;break}case 37:{c[O>>2]=c[e>>2];c[P>>2]=c[O>>2];Xw(b,d,P,g,Q);S=26;break}default:{c[g>>2]=c[g>>2]|4;S=26}}while(0);if((S|0)==26)j=c[d>>2]|0;ja=R;return j|0}function yw(b){b=b|0;if((a[106584]|0)==0?Hr(106584)|0:0){Hw();c[27119]=105840;Jr(106584)}return c[27119]|0}function zw(b){b=b|0;if((a[106568]|0)==0?Hr(106568)|0:0){Gw();c[27118]=105552;Jr(106568)}return c[27118]|0}function Aw(b){b=b|0;if((a[106552]|0)==0?Hr(106552)|0:0){Fw();c[27117]=105520;Jr(106552)}return c[27117]|0}function Bw(b){b=b|0;if((a[106544]|0)==0?Hr(106544)|0:0){c[27114]=0;c[27115]=0;c[27116]=0;LC(108456,36099,lb(36099)|0);Jr(106544)}return 108456}function Cw(b){b=b|0;if((a[106536]|0)==0?Hr(106536)|0:0){c[27111]=0;c[27112]=0;c[27113]=0;LC(108444,36087,lb(36087)|0);Jr(106536)}return 108444}function Dw(b){b=b|0;if((a[106528]|0)==0?Hr(106528)|0:0){c[27108]=0;c[27109]=0;c[27110]=0;LC(108432,36078,lb(36078)|0);Jr(106528)}return 108432}function Ew(b){b=b|0;if((a[106520]|0)==0?Hr(106520)|0:0){c[27105]=0;c[27106]=0;c[27107]=0;LC(108420,36069,lb(36069)|0);Jr(106520)}return 108420}function Fw(){var b=0,d=0;if((a[106560]|0)==0?Hr(106560)|0:0){d=105520;do{c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[d+(b<<2)>>2]=0;b=b+1|0}d=d+12|0}while((d|0)!=105544);Jr(106560)}SC(105520,36120)|0;SC(105532,36123)|0;return}function Gw(){var b=0,d=0;if((a[106576]|0)==0?Hr(106576)|0:0){d=105552;do{c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[d+(b<<2)>>2]=0;b=b+1|0}d=d+12|0}while((d|0)!=105840);Jr(106576)}SC(105552,36126)|0;SC(105564,36134)|0;SC(105576,36143)|0;SC(105588,36149)|0;SC(105600,36155)|0;SC(105612,36159)|0;SC(105624,36164)|0;SC(105636,36169)|0;SC(105648,36176)|0;SC(105660,36186)|0;SC(105672,36194)|0;SC(105684,36203)|0;SC(105696,36212)|0;SC(105708,36216)|0;SC(105720,36220)|0;SC(105732,36224)|0;SC(105744,36155)|0;SC(105756,36228)|0;SC(105768,36232)|0;SC(105780,36236)|0;SC(105792,36240)|0;SC(105804,36244)|0;SC(105816,36248)|0;SC(105828,36252)|0;return}function Hw(){var b=0,d=0;if((a[106592]|0)==0?Hr(106592)|0:0){d=105840;do{c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[d+(b<<2)>>2]=0;b=b+1|0}d=d+12|0}while((d|0)!=106008);Jr(106592)}SC(105840,36256)|0;SC(105852,36263)|0;SC(105864,36270)|0;SC(105876,36278)|0;SC(105888,36288)|0;SC(105900,36297)|0;SC(105912,36304)|0;SC(105924,36313)|0;SC(105936,36317)|0;SC(105948,36321)|0;SC(105960,36325)|0;SC(105972,36329)|0;SC(105984,36333)|0;SC(105996,36337)|0;return}function Iw(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;h=ja;ja=ja+16|0;i=h+4|0;j=h;a=a+8|0;a=ma[c[c[a>>2]>>2]&127](a)|0;c[j>>2]=c[e>>2];c[i>>2]=c[j>>2];d=(jv(d,i,a,a+168|0,g,f,0)|0)-a|0;if((d|0)<168)c[b>>2]=((d|0)/12|0|0)%7|0;ja=h;return}function Jw(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;h=ja;ja=ja+16|0;i=h+4|0;j=h;a=a+8|0;a=ma[c[(c[a>>2]|0)+4>>2]&127](a)|0;c[j>>2]=c[e>>2];c[i>>2]=c[j>>2];d=(jv(d,i,a,a+288|0,g,f,0)|0)-a|0;if((d|0)<288)c[b>>2]=((d|0)/12|0|0)%12|0;ja=h;return}function Kw(d,e,f,g,h,i,j,k){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;z=ja;ja=ja+16|0;w=z+12|0;u=z+8|0;t=z+4|0;v=z;jt(w,g);x=Bu(w,108348)|0;Cu(w);c[h>>2]=0;s=x+8|0;m=0;a:while(1){l=c[e>>2]|0;if(!((j|0)!=(k|0)&(m|0)==0))break;n=l;if(l){m=c[l+12>>2]|0;if((m|0)==(c[l+16>>2]|0))m=ma[c[(c[l>>2]|0)+36>>2]&127](l)|0;else m=Va(a[m>>0]|0)|0;if(Qa(m,Ra()|0)|0){c[e>>2]=0;n=0;l=0;q=1}else q=0}else{l=0;q=1}p=c[f>>2]|0;m=p;do if(p){o=c[p+12>>2]|0;if((o|0)==(c[p+16>>2]|0))o=ma[c[(c[p>>2]|0)+36>>2]&127](p)|0;else o=Va(a[o>>0]|0)|0;if(!(Qa(o,Ra()|0)|0))if(q){o=p;break}else{y=63;break a}else{c[f>>2]=0;m=0;y=15;break}}else y=15;while(0);if((y|0)==15){y=0;if(q){y=63;break}else o=0}b:do if((pa[c[(c[x>>2]|0)+36>>2]&31](x,a[j>>0]|0,0)|0)<<24>>24==37){o=j+1|0;if((o|0)==(k|0)){y=63;break a}q=pa[c[(c[x>>2]|0)+36>>2]&31](x,a[o>>0]|0,0)|0;switch(q<<24>>24){case 48:case 69:{p=j+2|0;if((p|0)==(k|0)){y=63;break a}j=o;o=pa[c[(c[x>>2]|0)+36>>2]&31](x,a[p>>0]|0,0)|0;l=q;break}default:{o=q;l=0}}q=c[(c[d>>2]|0)+36>>2]|0;c[t>>2]=n;c[v>>2]=m;c[u>>2]=c[t>>2];c[w>>2]=c[v>>2];c[e>>2]=wa[q&15](d,u,w,g,h,i,o,l)|0;j=j+2|0}else{m=a[j>>0]|0;if(m<<24>>24>-1?(r=c[s>>2]|0,b[r+(m<<24>>24<<1)>>1]&8192):0){do{j=j+1|0;if((j|0)==(k|0)){j=k;break}m=a[j>>0]|0;if(m<<24>>24<=-1)break}while((b[r+(m<<24>>24<<1)>>1]&8192)!=0);while(1){if(l){m=c[l+12>>2]|0;if((m|0)==(c[l+16>>2]|0))m=ma[c[(c[l>>2]|0)+36>>2]&127](l)|0;else m=Va(a[m>>0]|0)|0;if(Qa(m,Ra()|0)|0){c[e>>2]=0;l=0;n=1}else n=0}else{l=0;n=1}do if(o){m=c[o+12>>2]|0;if((m|0)==(c[o+16>>2]|0))m=ma[c[(c[o>>2]|0)+36>>2]&127](o)|0;else m=Va(a[m>>0]|0)|0;if(!(Qa(m,Ra()|0)|0))if(n){p=o;break}else break b;else{c[f>>2]=0;y=42;break}}else y=42;while(0);if((y|0)==42){y=0;if(n)break b;else p=0}o=l+12|0;m=c[o>>2]|0;n=l+16|0;if((m|0)==(c[n>>2]|0))m=ma[c[(c[l>>2]|0)+36>>2]&127](l)|0;else m=Va(a[m>>0]|0)|0;if((m&255)<<24>>24<=-1)break b;if(!(b[(c[s>>2]|0)+(m<<24>>24<<1)>>1]&8192))break b;m=c[o>>2]|0;if((m|0)==(c[n>>2]|0))ma[c[(c[l>>2]|0)+40>>2]&127](l)|0;else{c[o>>2]=m+1;Va(a[m>>0]|0)|0}o=p}}o=l+12|0;m=c[o>>2]|0;n=l+16|0;if((m|0)==(c[n>>2]|0))m=ma[c[(c[l>>2]|0)+36>>2]&127](l)|0;else m=Va(a[m>>0]|0)|0;q=oa[c[(c[x>>2]|0)+12>>2]&63](x,m&255)|0;if(q<<24>>24!=(oa[c[(c[x>>2]|0)+12>>2]&63](x,a[j>>0]|0)|0)<<24>>24){c[h>>2]=4;break}m=c[o>>2]|0;if((m|0)==(c[n>>2]|0))ma[c[(c[l>>2]|0)+40>>2]&127](l)|0;else{c[o>>2]=m+1;Va(a[m>>0]|0)|0}j=j+1|0}while(0);m=c[h>>2]|0}if((y|0)==63)c[h>>2]=4;if(l){j=c[l+12>>2]|0;if((j|0)==(c[l+16>>2]|0))j=ma[c[(c[l>>2]|0)+36>>2]&127](l)|0;else j=Va(a[j>>0]|0)|0;if(Qa(j,Ra()|0)|0){c[e>>2]=0;n=1;m=0}else{n=0;m=l}}else{n=1;m=0}j=c[f>>2]|0;do if(j){l=c[j+12>>2]|0;if((l|0)==(c[j+16>>2]|0))j=ma[c[(c[j>>2]|0)+36>>2]&127](j)|0;else j=Va(a[l>>0]|0)|0;if(!(Qa(j,Ra()|0)|0))if(n)break;else{y=78;break}else{c[f>>2]=0;y=76;break}}else y=76;while(0);if((y|0)==76?n:0)y=78;if((y|0)==78)c[h>>2]=c[h>>2]|2;ja=z;return m|0}function Lw(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=ja;ja=ja+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];d=Yw(d,a,f,g,2)|0;a=c[f>>2]|0;if((d+-1|0)>>>0<31&(a&4|0)==0)c[b>>2]=d;else c[f>>2]=a|4;ja=h;return}function Mw(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=ja;ja=ja+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];d=Yw(d,a,f,g,2)|0;a=c[f>>2]|0;if((d|0)<24&(a&4|0)==0)c[b>>2]=d;else c[f>>2]=a|4;ja=h;return}function Nw(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=ja;ja=ja+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];d=Yw(d,a,f,g,2)|0;a=c[f>>2]|0;if((d+-1|0)>>>0<12&(a&4|0)==0)c[b>>2]=d;else c[f>>2]=a|4;ja=h;return}function Ow(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=ja;ja=ja+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];d=Yw(d,a,f,g,3)|0;a=c[f>>2]|0;if((d|0)<366&(a&4|0)==0)c[b>>2]=d;else c[f>>2]=a|4;ja=h;return}function Pw(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=ja;ja=ja+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];d=Yw(d,a,f,g,2)|0;a=c[f>>2]|0;if((d|0)<13&(a&4|0)==0)c[b>>2]=d+-1;else c[f>>2]=a|4;ja=h;return}function Qw(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=ja;ja=ja+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];d=Yw(d,a,f,g,2)|0;a=c[f>>2]|0;if((d|0)<60&(a&4|0)==0)c[b>>2]=d;else c[f>>2]=a|4;ja=h;return}function Rw(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0;j=h+8|0;a:while(1){h=c[e>>2]|0;do if(h){d=c[h+12>>2]|0;if((d|0)==(c[h+16>>2]|0))h=ma[c[(c[h>>2]|0)+36>>2]&127](h)|0;else h=Va(a[d>>0]|0)|0;if(Qa(h,Ra()|0)|0){c[e>>2]=0;d=1;break}else{d=(c[e>>2]|0)==0;break}}else d=1;while(0);i=c[f>>2]|0;do if(i){h=c[i+12>>2]|0;if((h|0)==(c[i+16>>2]|0))h=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else h=Va(a[h>>0]|0)|0;if(!(Qa(h,Ra()|0)|0))if(d)break;else break a;else{c[f>>2]=0;k=15;break}}else k=15;while(0);if((k|0)==15){k=0;if(d){i=0;break}else i=0}h=c[e>>2]|0;d=c[h+12>>2]|0;if((d|0)==(c[h+16>>2]|0))h=ma[c[(c[h>>2]|0)+36>>2]&127](h)|0;else h=Va(a[d>>0]|0)|0;if((h&255)<<24>>24<=-1)break;if(!(b[(c[j>>2]|0)+(h<<24>>24<<1)>>1]&8192))break;h=c[e>>2]|0;i=h+12|0;d=c[i>>2]|0;if((d|0)==(c[h+16>>2]|0))ma[c[(c[h>>2]|0)+40>>2]&127](h)|0;else{c[i>>2]=d+1;Va(a[d>>0]|0)|0}}h=c[e>>2]|0;do if(h){d=c[h+12>>2]|0;if((d|0)==(c[h+16>>2]|0))h=ma[c[(c[h>>2]|0)+36>>2]&127](h)|0;else h=Va(a[d>>0]|0)|0;if(Qa(h,Ra()|0)|0){c[e>>2]=0;d=1;break}else{d=(c[e>>2]|0)==0;break}}else d=1;while(0);do if(i){h=c[i+12>>2]|0;if((h|0)==(c[i+16>>2]|0))h=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else h=Va(a[h>>0]|0)|0;if(!(Qa(h,Ra()|0)|0))if(d)break;else{k=41;break}else{c[f>>2]=0;k=39;break}}else k=39;while(0);if((k|0)==39?d:0)k=41;if((k|0)==41)c[g>>2]=c[g>>2]|2;return}function Sw(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0;m=ja;ja=ja+16|0;l=m+4|0;k=m;j=b+8|0;j=ma[c[(c[j>>2]|0)+8>>2]&127](j)|0;b=a[j+11>>0]|0;if(b<<24>>24<0)i=c[j+4>>2]|0;else i=b&255;b=a[j+12+11>>0]|0;if(b<<24>>24<0)b=c[j+16>>2]|0;else b=b&255;do if((i|0)!=(0-b|0)){c[k>>2]=c[f>>2];c[l>>2]=c[k>>2];i=(jv(e,l,j,j+24|0,h,g,0)|0)-j|0;b=c[d>>2]|0;if((b|0)==12&(i|0)==0){c[d>>2]=0;break}if((b|0)<12&(i|0)==12)c[d>>2]=b+12}else c[g>>2]=c[g>>2]|4;while(0);ja=m;return}function Tw(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=ja;ja=ja+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];d=Yw(d,a,f,g,2)|0;a=c[f>>2]|0;if((d|0)<61&(a&4|0)==0)c[b>>2]=d;else c[f>>2]=a|4;ja=h;return}function Uw(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=ja;ja=ja+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];d=Yw(d,a,f,g,1)|0;a=c[f>>2]|0;if((d|0)<7&(a&4|0)==0)c[b>>2]=d;else c[f>>2]=a|4;ja=h;return}function Vw(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=ja;ja=ja+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];a=Yw(d,a,f,g,4)|0;if(!(c[f>>2]&4)){if((a|0)<69)a=a+2e3|0;else a=(a|0)<100?a+1900|0:a;c[b>>2]=a+-1900}ja=h;return}function Ww(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=ja;ja=ja+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];a=Yw(d,a,f,g,4)|0;if(!(c[f>>2]&4))c[b>>2]=a+-1900;ja=h;return}function Xw(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0;b=c[d>>2]|0;do if(b){h=c[b+12>>2]|0;if((h|0)==(c[b+16>>2]|0))b=ma[c[(c[b>>2]|0)+36>>2]&127](b)|0;else b=Va(a[h>>0]|0)|0;if(Qa(b,Ra()|0)|0){c[d>>2]=0;i=1;break}else{i=(c[d>>2]|0)==0;break}}else i=1;while(0);h=c[e>>2]|0;do if(h){b=c[h+12>>2]|0;if((b|0)==(c[h+16>>2]|0))b=ma[c[(c[h>>2]|0)+36>>2]&127](h)|0;else b=Va(a[b>>0]|0)|0;if(!(Qa(b,Ra()|0)|0))if(i){j=h;k=17;break}else{k=16;break}else{c[e>>2]=0;k=14;break}}else k=14;while(0);if((k|0)==14)if(i)k=16;else{j=0;k=17}a:do if((k|0)==16)c[f>>2]=c[f>>2]|6;else if((k|0)==17){b=c[d>>2]|0;h=c[b+12>>2]|0;if((h|0)==(c[b+16>>2]|0))b=ma[c[(c[b>>2]|0)+36>>2]&127](b)|0;else b=Va(a[h>>0]|0)|0;if((pa[c[(c[g>>2]|0)+36>>2]&31](g,b&255,0)|0)<<24>>24!=37){c[f>>2]=c[f>>2]|4;break}b=c[d>>2]|0;i=b+12|0;h=c[i>>2]|0;if((h|0)==(c[b+16>>2]|0))ma[c[(c[b>>2]|0)+40>>2]&127](b)|0;else{c[i>>2]=h+1;Va(a[h>>0]|0)|0}b=c[d>>2]|0;do if(b){h=c[b+12>>2]|0;if((h|0)==(c[b+16>>2]|0))b=ma[c[(c[b>>2]|0)+36>>2]&127](b)|0;else b=Va(a[h>>0]|0)|0;if(Qa(b,Ra()|0)|0){c[d>>2]=0;h=1;break}else{h=(c[d>>2]|0)==0;break}}else h=1;while(0);do if(j){b=c[j+12>>2]|0;if((b|0)==(c[j+16>>2]|0))b=ma[c[(c[j>>2]|0)+36>>2]&127](j)|0;else b=Va(a[b>>0]|0)|0;if(!(Qa(b,Ra()|0)|0))if(h)break a;else break;else{c[e>>2]=0;k=38;break}}else k=38;while(0);if((k|0)==38?!h:0)break;c[f>>2]=c[f>>2]|2}while(0);return}function Yw(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;i=c[d>>2]|0;do if(i){j=c[i+12>>2]|0;if((j|0)==(c[i+16>>2]|0))i=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else i=Va(a[j>>0]|0)|0;if(Qa(i,Ra()|0)|0){c[d>>2]=0;k=1;break}else{k=(c[d>>2]|0)==0;break}}else k=1;while(0);j=c[e>>2]|0;do if(j){i=c[j+12>>2]|0;if((i|0)==(c[j+16>>2]|0))i=ma[c[(c[j>>2]|0)+36>>2]&127](j)|0;else i=Va(a[i>>0]|0)|0;if(!(Qa(i,Ra()|0)|0))if(k){m=j;r=17;break}else{r=16;break}else{c[e>>2]=0;r=14;break}}else r=14;while(0);if((r|0)==14)if(k)r=16;else{m=0;r=17}a:do if((r|0)==16){c[f>>2]=c[f>>2]|6;i=0}else if((r|0)==17){i=c[d>>2]|0;j=c[i+12>>2]|0;if((j|0)==(c[i+16>>2]|0))j=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else j=Va(a[j>>0]|0)|0;i=j&255;if(i<<24>>24>-1?(q=g+8|0,b[(c[q>>2]|0)+(j<<24>>24<<1)>>1]&2048):0){i=(pa[c[(c[g>>2]|0)+36>>2]&31](g,i,0)|0)<<24>>24;j=c[d>>2]|0;l=j+12|0;k=c[l>>2]|0;if((k|0)==(c[j+16>>2]|0))ma[c[(c[j>>2]|0)+40>>2]&127](j)|0;else{c[l>>2]=k+1;Va(a[k>>0]|0)|0}n=m;while(1){i=i+-48|0;p=h+-1|0;j=c[d>>2]|0;do if(j){k=c[j+12>>2]|0;if((k|0)==(c[j+16>>2]|0))j=ma[c[(c[j>>2]|0)+36>>2]&127](j)|0;else j=Va(a[k>>0]|0)|0;if(Qa(j,Ra()|0)|0){c[d>>2]=0;l=1;break}else{l=(c[d>>2]|0)==0;break}}else l=1;while(0);if(n){j=c[n+12>>2]|0;if((j|0)==(c[n+16>>2]|0))j=ma[c[(c[n>>2]|0)+36>>2]&127](n)|0;else j=Va(a[j>>0]|0)|0;if(Qa(j,Ra()|0)|0){c[e>>2]=0;j=1;o=0;m=0}else{j=0;o=m;m=n}}else{j=1;o=m;m=0}k=c[d>>2]|0;if(!((h|0)>1&(l^j)))break;j=c[k+12>>2]|0;if((j|0)==(c[k+16>>2]|0))k=ma[c[(c[k>>2]|0)+36>>2]&127](k)|0;else k=Va(a[j>>0]|0)|0;j=k&255;if(j<<24>>24<=-1)break a;if(!(b[(c[q>>2]|0)+(k<<24>>24<<1)>>1]&2048))break a;i=(i*10|0)+((pa[c[(c[g>>2]|0)+36>>2]&31](g,j,0)|0)<<24>>24)|0;j=c[d>>2]|0;l=j+12|0;k=c[l>>2]|0;if((k|0)==(c[j+16>>2]|0))ma[c[(c[j>>2]|0)+40>>2]&127](j)|0;else{c[l>>2]=k+1;Va(a[k>>0]|0)|0}n=m;m=o;h=p}do if(k){j=c[k+12>>2]|0;if((j|0)==(c[k+16>>2]|0))j=ma[c[(c[k>>2]|0)+36>>2]&127](k)|0;else j=Va(a[j>>0]|0)|0;if(Qa(j,Ra()|0)|0){c[d>>2]=0;k=1;break}else{k=(c[d>>2]|0)==0;break}}else k=1;while(0);do if(o){j=c[o+12>>2]|0;if((j|0)==(c[o+16>>2]|0))j=ma[c[(c[o>>2]|0)+36>>2]&127](o)|0;else j=Va(a[j>>0]|0)|0;if(!(Qa(j,Ra()|0)|0))if(k)break a;else break;else{c[e>>2]=0;r=63;break}}else r=63;while(0);if((r|0)==63?!k:0)break;c[f>>2]=c[f>>2]|2;break}c[f>>2]=c[f>>2]|4;i=0}while(0);return i|0}function Zw(a){a=a|0;gu(a);return}function _w(a){a=a|0;gu(a);Gf(a);return}function $w(a){a=a|0;return 2}function ax(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=ja;ja=ja+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];a=tx(a,j,i,e,f,g,17648,17680)|0;ja=h;return a|0}function bx(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0;i=ja;ja=ja+16|0;j=i+12|0;k=i+8|0;m=i+4|0;l=i;n=b+8|0;n=ma[c[(c[n>>2]|0)+20>>2]&127](n)|0;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];e=a[n+8+3>>0]|0;o=e<<24>>24<0;d=o?c[n>>2]|0:n;e=d+((o?c[n+4>>2]|0:e&255)<<2)|0;c[k>>2]=c[m>>2];c[j>>2]=c[l>>2];b=tx(b,k,j,f,g,h,d,e)|0;ja=i;return b|0}function cx(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;h=ja;ja=ja+16|0;i=h+4|0;j=h;jt(i,e);e=Bu(i,108380)|0;Cu(i);c[j>>2]=c[d>>2];c[i>>2]=c[j>>2];rx(a,g+24|0,b,i,f,e);ja=h;return c[b>>2]|0}function dx(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;h=ja;ja=ja+16|0;i=h+4|0;j=h;jt(i,e);e=Bu(i,108380)|0;Cu(i);c[j>>2]=c[d>>2];c[i>>2]=c[j>>2];sx(a,g+16|0,b,i,f,e);ja=h;return c[b>>2]|0}function ex(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;h=ja;ja=ja+16|0;i=h+4|0;j=h;jt(i,e);e=Bu(i,108380)|0;Cu(i);c[j>>2]=c[d>>2];c[i>>2]=c[j>>2];Ex(a,g+20|0,b,i,f,e);ja=h;return c[b>>2]|0}function fx(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;R=ja;ja=ja+144|0;P=R+128|0;K=R+112|0;j=R+124|0;q=R+120|0;F=R+116|0;I=R+108|0;k=R+104|0;l=R+100|0;m=R+96|0;n=R+92|0;o=R+88|0;p=R+84|0;r=R+80|0;s=R+76|0;t=R+72|0;u=R+68|0;v=R+64|0;w=R+60|0;x=R+56|0;y=R+52|0;z=R+48|0;A=R+44|0;B=R+40|0;C=R+36|0;D=R+32|0;E=R+28|0;G=R+24|0;H=R+20|0;J=R+16|0;L=R+12|0;M=R+8|0;N=R+4|0;O=R;c[g>>2]=0;jt(P,f);Q=Bu(P,108380)|0;Cu(P);do switch(i<<24>>24|0){case 65:case 97:{c[j>>2]=c[e>>2];c[P>>2]=c[j>>2];rx(b,h+24|0,d,P,g,Q);S=26;break}case 104:case 66:case 98:{c[q>>2]=c[e>>2];c[P>>2]=c[q>>2];sx(b,h+16|0,d,P,g,Q);S=26;break}case 99:{Q=b+8|0;Q=ma[c[(c[Q>>2]|0)+12>>2]&127](Q)|0;c[F>>2]=c[d>>2];c[I>>2]=c[e>>2];S=a[Q+8+3>>0]|0;e=S<<24>>24<0;i=e?c[Q>>2]|0:Q;S=i+((e?c[Q+4>>2]|0:S&255)<<2)|0;c[K>>2]=c[F>>2];c[P>>2]=c[I>>2];c[d>>2]=tx(b,K,P,f,g,h,i,S)|0;S=26;break}case 101:case 100:{c[k>>2]=c[e>>2];c[P>>2]=c[k>>2];ux(b,h+12|0,d,P,g,Q);S=26;break}case 68:{c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];c[K>>2]=c[l>>2];c[P>>2]=c[m>>2];c[d>>2]=tx(b,K,P,f,g,h,17472,17504)|0;S=26;break}case 70:{c[n>>2]=c[d>>2];c[o>>2]=c[e>>2];c[K>>2]=c[n>>2];c[P>>2]=c[o>>2];c[d>>2]=tx(b,K,P,f,g,h,17504,17536)|0;S=26;break}case 72:{c[p>>2]=c[e>>2];c[P>>2]=c[p>>2];vx(b,h+8|0,d,P,g,Q);S=26;break}case 73:{c[r>>2]=c[e>>2];c[P>>2]=c[r>>2];wx(b,h+8|0,d,P,g,Q);S=26;break}case 106:{c[s>>2]=c[e>>2];c[P>>2]=c[s>>2];xx(b,h+28|0,d,P,g,Q);S=26;break}case 109:{c[t>>2]=c[e>>2];c[P>>2]=c[t>>2];yx(b,h+16|0,d,P,g,Q);S=26;break}case 77:{c[u>>2]=c[e>>2];c[P>>2]=c[u>>2];zx(b,h+4|0,d,P,g,Q);S=26;break}case 116:case 110:{c[v>>2]=c[e>>2];c[P>>2]=c[v>>2];Ax(b,d,P,g,Q);S=26;break}case 112:{c[w>>2]=c[e>>2];c[P>>2]=c[w>>2];Bx(b,h+8|0,d,P,g,Q);S=26;break}case 114:{c[x>>2]=c[d>>2];c[y>>2]=c[e>>2];c[K>>2]=c[x>>2];c[P>>2]=c[y>>2];c[d>>2]=tx(b,K,P,f,g,h,17536,17580)|0;S=26;break}case 82:{c[z>>2]=c[d>>2];c[A>>2]=c[e>>2];c[K>>2]=c[z>>2];c[P>>2]=c[A>>2];c[d>>2]=tx(b,K,P,f,g,h,17584,17604)|0;S=26;break}case 83:{c[B>>2]=c[e>>2];c[P>>2]=c[B>>2];Cx(b,h,d,P,g,Q);S=26;break}case 84:{c[C>>2]=c[d>>2];c[D>>2]=c[e>>2];c[K>>2]=c[C>>2];c[P>>2]=c[D>>2];c[d>>2]=tx(b,K,P,f,g,h,17616,17648)|0;S=26;break}case 119:{c[E>>2]=c[e>>2];c[P>>2]=c[E>>2];Dx(b,h+24|0,d,P,g,Q);S=26;break}case 120:{j=c[(c[b>>2]|0)+20>>2]|0;c[G>>2]=c[d>>2];c[H>>2]=c[e>>2];c[K>>2]=c[G>>2];c[P>>2]=c[H>>2];j=ua[j&63](b,K,P,f,g,h)|0;break}case 88:{Q=b+8|0;Q=ma[c[(c[Q>>2]|0)+24>>2]&127](Q)|0;c[J>>2]=c[d>>2];c[L>>2]=c[e>>2];S=a[Q+8+3>>0]|0;e=S<<24>>24<0;i=e?c[Q>>2]|0:Q;S=i+((e?c[Q+4>>2]|0:S&255)<<2)|0;c[K>>2]=c[J>>2];c[P>>2]=c[L>>2];c[d>>2]=tx(b,K,P,f,g,h,i,S)|0;S=26;break}case 121:{c[M>>2]=c[e>>2];c[P>>2]=c[M>>2];Ex(b,h+20|0,d,P,g,Q);S=26;break}case 89:{c[N>>2]=c[e>>2];c[P>>2]=c[N>>2];Fx(b,h+20|0,d,P,g,Q);S=26;break}case 37:{c[O>>2]=c[e>>2];c[P>>2]=c[O>>2];Gx(b,d,P,g,Q);S=26;break}default:{c[g>>2]=c[g>>2]|4;S=26}}while(0);if((S|0)==26)j=c[d>>2]|0;ja=R;return j|0}function gx(b){b=b|0;if((a[106664]|0)==0?Hr(106664)|0:0){qx();c[27136]=106336;Jr(106664)}return c[27136]|0}function hx(b){b=b|0;if((a[106648]|0)==0?Hr(106648)|0:0){px();c[27135]=106048;Jr(106648)}return c[27135]|0}function ix(b){b=b|0;if((a[106632]|0)==0?Hr(106632)|0:0){ox();c[27134]=106016;Jr(106632)}return c[27134]|0}function jx(b){b=b|0;if((a[106624]|0)==0?Hr(106624)|0:0){c[27131]=0;c[27132]=0;c[27133]=0;YC(108524,26072,nx(26072)|0);Jr(106624)}return 108524}function kx(b){b=b|0;if((a[106616]|0)==0?Hr(106616)|0:0){c[27128]=0;c[27129]=0;c[27130]=0;YC(108512,26024,nx(26024)|0);Jr(106616)}return 108512}function lx(b){b=b|0;if((a[106608]|0)==0?Hr(106608)|0:0){c[27125]=0;c[27126]=0;c[27127]=0;YC(108500,25988,nx(25988)|0);Jr(106608)}return 108500}function mx(b){b=b|0;if((a[106600]|0)==0?Hr(106600)|0:0){c[27122]=0;c[27123]=0;c[27124]=0;YC(108488,25952,nx(25952)|0);Jr(106600)}return 108488}function nx(a){a=a|0;return Td(a)|0}function ox(){var b=0,d=0;if((a[106640]|0)==0?Hr(106640)|0:0){d=106016;do{c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[d+(b<<2)>>2]=0;b=b+1|0}d=d+12|0}while((d|0)!=106040);Jr(106640)}dD(106016,26156)|0;dD(106028,26168)|0;return}function px(){var b=0,d=0;if((a[106656]|0)==0?Hr(106656)|0:0){d=106048;do{c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[d+(b<<2)>>2]=0;b=b+1|0}d=d+12|0}while((d|0)!=106336);Jr(106656)}dD(106048,26180)|0;dD(106060,26212)|0;dD(106072,26248)|0;dD(106084,26272)|0;dD(106096,26296)|0;dD(106108,26312)|0;dD(106120,26332)|0;dD(106132,26352)|0;dD(106144,26380)|0;dD(106156,26420)|0;dD(106168,26452)|0;dD(106180,26488)|0;dD(106192,26524)|0;dD(106204,26540)|0;dD(106216,26556)|0;dD(106228,26572)|0;dD(106240,26296)|0;dD(106252,26588)|0;dD(106264,26604)|0;dD(106276,26620)|0;dD(106288,26636)|0;dD(106300,26652)|0;dD(106312,26668)|0;dD(106324,26684)|0;return}function qx(){var b=0,d=0;if((a[106672]|0)==0?Hr(106672)|0:0){d=106336;do{c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[d+(b<<2)>>2]=0;b=b+1|0}d=d+12|0}while((d|0)!=106504);Jr(106672)}dD(106336,26700)|0;dD(106348,26728)|0;dD(106360,26756)|0;dD(106372,26788)|0;dD(106384,26828)|0;dD(106396,26864)|0;dD(106408,26892)|0;dD(106420,26928)|0;dD(106432,26944)|0;dD(106444,26960)|0;dD(106456,26976)|0;dD(106468,26992)|0;dD(106480,27008)|0;dD(106492,27024)|0;return}function rx(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;h=ja;ja=ja+16|0;i=h+4|0;j=h;a=a+8|0;a=ma[c[c[a>>2]>>2]&127](a)|0;c[j>>2]=c[e>>2];c[i>>2]=c[j>>2];d=(Mv(d,i,a,a+168|0,g,f,0)|0)-a|0;if((d|0)<168)c[b>>2]=((d|0)/12|0|0)%7|0;ja=h;return}function sx(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;h=ja;ja=ja+16|0;i=h+4|0;j=h;a=a+8|0;a=ma[c[(c[a>>2]|0)+4>>2]&127](a)|0;c[j>>2]=c[e>>2];c[i>>2]=c[j>>2];d=(Mv(d,i,a,a+288|0,g,f,0)|0)-a|0;if((d|0)<288)c[b>>2]=((d|0)/12|0|0)%12|0;ja=h;return}function tx(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;v=ja;ja=ja+16|0;s=v+12|0;q=v+8|0;p=v+4|0;r=v;jt(s,e);t=Bu(s,108380)|0;Cu(s);c[f>>2]=0;k=0;a:while(1){j=c[b>>2]|0;if(!((h|0)!=(i|0)&(k|0)==0))break;l=j;if(j){k=c[j+12>>2]|0;if((k|0)==(c[j+16>>2]|0))k=ma[c[(c[j>>2]|0)+36>>2]&127](j)|0;else k=Fs(c[k>>2]|0)|0;if(kt(k,Es()|0)|0){c[b>>2]=0;l=0;j=0;o=1}else o=0}else{j=0;o=1}n=c[d>>2]|0;k=n;do if(n){m=c[n+12>>2]|0;if((m|0)==(c[n+16>>2]|0))m=ma[c[(c[n>>2]|0)+36>>2]&127](n)|0;else m=Fs(c[m>>2]|0)|0;if(!(kt(m,Es()|0)|0))if(o){m=n;break}else{u=60;break a}else{c[d>>2]=0;k=0;u=15;break}}else u=15;while(0);if((u|0)==15){u=0;if(o){u=60;break}else m=0}b:do if((pa[c[(c[t>>2]|0)+52>>2]&31](t,c[h>>2]|0,0)|0)<<24>>24==37){m=h+4|0;if((m|0)==(i|0)){u=60;break a}o=pa[c[(c[t>>2]|0)+52>>2]&31](t,c[m>>2]|0,0)|0;switch(o<<24>>24){case 48:case 69:{n=h+8|0;if((n|0)==(i|0)){u=60;break a}h=m;m=pa[c[(c[t>>2]|0)+52>>2]&31](t,c[n>>2]|0,0)|0;j=o;break}default:{m=o;j=0}}o=c[(c[a>>2]|0)+36>>2]|0;c[p>>2]=l;c[r>>2]=k;c[q>>2]=c[p>>2];c[s>>2]=c[r>>2];c[b>>2]=wa[o&15](a,q,s,e,f,g,m,j)|0;h=h+8|0}else{if(!(pa[c[(c[t>>2]|0)+12>>2]&31](t,8192,c[h>>2]|0)|0)){m=j+12|0;k=c[m>>2]|0;l=j+16|0;if((k|0)==(c[l>>2]|0))k=ma[c[(c[j>>2]|0)+36>>2]&127](j)|0;else k=Fs(c[k>>2]|0)|0;o=oa[c[(c[t>>2]|0)+28>>2]&63](t,k)|0;if((o|0)!=(oa[c[(c[t>>2]|0)+28>>2]&63](t,c[h>>2]|0)|0)){c[f>>2]=4;break}k=c[m>>2]|0;if((k|0)==(c[l>>2]|0))ma[c[(c[j>>2]|0)+40>>2]&127](j)|0;else{c[m>>2]=k+4;Fs(c[k>>2]|0)|0}h=h+4|0;break}do{h=h+4|0;if((h|0)==(i|0)){h=i;break}}while(pa[c[(c[t>>2]|0)+12>>2]&31](t,8192,c[h>>2]|0)|0);while(1){if(j){k=c[j+12>>2]|0;if((k|0)==(c[j+16>>2]|0))k=ma[c[(c[j>>2]|0)+36>>2]&127](j)|0;else k=Fs(c[k>>2]|0)|0;if(kt(k,Es()|0)|0){c[b>>2]=0;j=0;l=1}else l=0}else{j=0;l=1}do if(m){k=c[m+12>>2]|0;if((k|0)==(c[m+16>>2]|0))k=ma[c[(c[m>>2]|0)+36>>2]&127](m)|0;else k=Fs(c[k>>2]|0)|0;if(!(kt(k,Es()|0)|0))if(l){n=m;break}else break b;else{c[d>>2]=0;u=40;break}}else u=40;while(0);if((u|0)==40){u=0;if(l)break b;else n=0}m=j+12|0;k=c[m>>2]|0;l=j+16|0;if((k|0)==(c[l>>2]|0))k=ma[c[(c[j>>2]|0)+36>>2]&127](j)|0;else k=Fs(c[k>>2]|0)|0;if(!(pa[c[(c[t>>2]|0)+12>>2]&31](t,8192,k)|0))break b;k=c[m>>2]|0;if((k|0)==(c[l>>2]|0))ma[c[(c[j>>2]|0)+40>>2]&127](j)|0;else{c[m>>2]=k+4;Fs(c[k>>2]|0)|0}m=n}}while(0);k=c[f>>2]|0}if((u|0)==60)c[f>>2]=4;if(j){h=c[j+12>>2]|0;if((h|0)==(c[j+16>>2]|0))h=ma[c[(c[j>>2]|0)+36>>2]&127](j)|0;else h=Fs(c[h>>2]|0)|0;if(kt(h,Es()|0)|0){c[b>>2]=0;l=1;k=0}else{l=0;k=j}}else{l=1;k=0}h=c[d>>2]|0;do if(h){j=c[h+12>>2]|0;if((j|0)==(c[h+16>>2]|0))h=ma[c[(c[h>>2]|0)+36>>2]&127](h)|0;else h=Fs(c[j>>2]|0)|0;if(!(kt(h,Es()|0)|0))if(l)break;else{u=75;break}else{c[d>>2]=0;u=73;break}}else u=73;while(0);if((u|0)==73?l:0)u=75;if((u|0)==75)c[f>>2]=c[f>>2]|2;ja=v;return k|0}function ux(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=ja;ja=ja+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];d=Hx(d,a,f,g,2)|0;a=c[f>>2]|0;if((d+-1|0)>>>0<31&(a&4|0)==0)c[b>>2]=d;else c[f>>2]=a|4;ja=h;return}function vx(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=ja;ja=ja+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];d=Hx(d,a,f,g,2)|0;a=c[f>>2]|0;if((d|0)<24&(a&4|0)==0)c[b>>2]=d;else c[f>>2]=a|4;ja=h;return}function wx(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=ja;ja=ja+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];d=Hx(d,a,f,g,2)|0;a=c[f>>2]|0;if((d+-1|0)>>>0<12&(a&4|0)==0)c[b>>2]=d;else c[f>>2]=a|4;ja=h;return}function xx(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=ja;ja=ja+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];d=Hx(d,a,f,g,3)|0;a=c[f>>2]|0;if((d|0)<366&(a&4|0)==0)c[b>>2]=d;else c[f>>2]=a|4;ja=h;return}function yx(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=ja;ja=ja+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];d=Hx(d,a,f,g,2)|0;a=c[f>>2]|0;if((d|0)<13&(a&4|0)==0)c[b>>2]=d+-1;else c[f>>2]=a|4;ja=h;return}function zx(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=ja;ja=ja+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];d=Hx(d,a,f,g,2)|0;a=c[f>>2]|0;if((d|0)<60&(a&4|0)==0)c[b>>2]=d;else c[f>>2]=a|4;ja=h;return}function Ax(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;a:while(1){a=c[b>>2]|0;do if(a){g=c[a+12>>2]|0;if((g|0)==(c[a+16>>2]|0))a=ma[c[(c[a>>2]|0)+36>>2]&127](a)|0;else a=Fs(c[g>>2]|0)|0;if(kt(a,Es()|0)|0){c[b>>2]=0;g=1;break}else{g=(c[b>>2]|0)==0;break}}else g=1;while(0);h=c[d>>2]|0;do if(h){a=c[h+12>>2]|0;if((a|0)==(c[h+16>>2]|0))a=ma[c[(c[h>>2]|0)+36>>2]&127](h)|0;else a=Fs(c[a>>2]|0)|0;if(!(kt(a,Es()|0)|0))if(g)break;else break a;else{c[d>>2]=0;i=15;break}}else i=15;while(0);if((i|0)==15){i=0;if(g){h=0;break}else h=0}a=c[b>>2]|0;g=c[a+12>>2]|0;if((g|0)==(c[a+16>>2]|0))a=ma[c[(c[a>>2]|0)+36>>2]&127](a)|0;else a=Fs(c[g>>2]|0)|0;if(!(pa[c[(c[f>>2]|0)+12>>2]&31](f,8192,a)|0))break;a=c[b>>2]|0;h=a+12|0;g=c[h>>2]|0;if((g|0)==(c[a+16>>2]|0))ma[c[(c[a>>2]|0)+40>>2]&127](a)|0;else{c[h>>2]=g+4;Fs(c[g>>2]|0)|0}}a=c[b>>2]|0;do if(a){g=c[a+12>>2]|0;if((g|0)==(c[a+16>>2]|0))a=ma[c[(c[a>>2]|0)+36>>2]&127](a)|0;else a=Fs(c[g>>2]|0)|0;if(kt(a,Es()|0)|0){c[b>>2]=0;g=1;break}else{g=(c[b>>2]|0)==0;break}}else g=1;while(0);do if(h){a=c[h+12>>2]|0;if((a|0)==(c[h+16>>2]|0))a=ma[c[(c[h>>2]|0)+36>>2]&127](h)|0;else a=Fs(c[a>>2]|0)|0;if(!(kt(a,Es()|0)|0))if(g)break;else{i=40;break}else{c[d>>2]=0;i=38;break}}else i=38;while(0);if((i|0)==38?g:0)i=40;if((i|0)==40)c[e>>2]=c[e>>2]|2;return}function Bx(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0;m=ja;ja=ja+16|0;l=m+4|0;k=m;j=b+8|0;j=ma[c[(c[j>>2]|0)+8>>2]&127](j)|0;b=a[j+8+3>>0]|0;if(b<<24>>24<0)i=c[j+4>>2]|0;else i=b&255;b=a[j+20+3>>0]|0;if(b<<24>>24<0)b=c[j+16>>2]|0;else b=b&255;do if((i|0)!=(0-b|0)){c[k>>2]=c[f>>2];c[l>>2]=c[k>>2];i=(Mv(e,l,j,j+24|0,h,g,0)|0)-j|0;b=c[d>>2]|0;if((b|0)==12&(i|0)==0){c[d>>2]=0;break}if((b|0)<12&(i|0)==12)c[d>>2]=b+12}else c[g>>2]=c[g>>2]|4;while(0);ja=m;return}function Cx(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=ja;ja=ja+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];d=Hx(d,a,f,g,2)|0;a=c[f>>2]|0;if((d|0)<61&(a&4|0)==0)c[b>>2]=d;else c[f>>2]=a|4;ja=h;return}function Dx(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=ja;ja=ja+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];d=Hx(d,a,f,g,1)|0;a=c[f>>2]|0;if((d|0)<7&(a&4|0)==0)c[b>>2]=d;else c[f>>2]=a|4;ja=h;return}function Ex(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=ja;ja=ja+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];a=Hx(d,a,f,g,4)|0;if(!(c[f>>2]&4)){if((a|0)<69)a=a+2e3|0;else a=(a|0)<100?a+1900|0:a;c[b>>2]=a+-1900}ja=h;return}function Fx(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=ja;ja=ja+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];a=Hx(d,a,f,g,4)|0;if(!(c[f>>2]&4))c[b>>2]=a+-1900;ja=h;return}function Gx(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;a=c[b>>2]|0;do if(a){g=c[a+12>>2]|0;if((g|0)==(c[a+16>>2]|0))a=ma[c[(c[a>>2]|0)+36>>2]&127](a)|0;else a=Fs(c[g>>2]|0)|0;if(kt(a,Es()|0)|0){c[b>>2]=0;h=1;break}else{h=(c[b>>2]|0)==0;break}}else h=1;while(0);g=c[d>>2]|0;do if(g){a=c[g+12>>2]|0;if((a|0)==(c[g+16>>2]|0))a=ma[c[(c[g>>2]|0)+36>>2]&127](g)|0;else a=Fs(c[a>>2]|0)|0;if(!(kt(a,Es()|0)|0))if(h){i=g;j=17;break}else{j=16;break}else{c[d>>2]=0;j=14;break}}else j=14;while(0);if((j|0)==14)if(h)j=16;else{i=0;j=17}a:do if((j|0)==16)c[e>>2]=c[e>>2]|6;else if((j|0)==17){a=c[b>>2]|0;g=c[a+12>>2]|0;if((g|0)==(c[a+16>>2]|0))a=ma[c[(c[a>>2]|0)+36>>2]&127](a)|0;else a=Fs(c[g>>2]|0)|0;if((pa[c[(c[f>>2]|0)+52>>2]&31](f,a,0)|0)<<24>>24!=37){c[e>>2]=c[e>>2]|4;break}a=c[b>>2]|0;h=a+12|0;g=c[h>>2]|0;if((g|0)==(c[a+16>>2]|0))ma[c[(c[a>>2]|0)+40>>2]&127](a)|0;else{c[h>>2]=g+4;Fs(c[g>>2]|0)|0}a=c[b>>2]|0;do if(a){g=c[a+12>>2]|0;if((g|0)==(c[a+16>>2]|0))a=ma[c[(c[a>>2]|0)+36>>2]&127](a)|0;else a=Fs(c[g>>2]|0)|0;if(kt(a,Es()|0)|0){c[b>>2]=0;g=1;break}else{g=(c[b>>2]|0)==0;break}}else g=1;while(0);do if(i){a=c[i+12>>2]|0;if((a|0)==(c[i+16>>2]|0))a=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else a=Fs(c[a>>2]|0)|0;if(!(kt(a,Es()|0)|0))if(g)break a;else break;else{c[d>>2]=0;j=38;break}}else j=38;while(0);if((j|0)==38?!g:0)break;c[e>>2]=c[e>>2]|2}while(0);return}\nfunction Hx(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;g=c[a>>2]|0;do if(g){h=c[g+12>>2]|0;if((h|0)==(c[g+16>>2]|0))g=ma[c[(c[g>>2]|0)+36>>2]&127](g)|0;else g=Fs(c[h>>2]|0)|0;if(kt(g,Es()|0)|0){c[a>>2]=0;i=1;break}else{i=(c[a>>2]|0)==0;break}}else i=1;while(0);h=c[b>>2]|0;do if(h){g=c[h+12>>2]|0;if((g|0)==(c[h+16>>2]|0))g=ma[c[(c[h>>2]|0)+36>>2]&127](h)|0;else g=Fs(c[g>>2]|0)|0;if(!(kt(g,Es()|0)|0))if(i){k=h;o=17;break}else{o=16;break}else{c[b>>2]=0;o=14;break}}else o=14;while(0);if((o|0)==14)if(i)o=16;else{k=0;o=17}a:do if((o|0)==16){c[d>>2]=c[d>>2]|6;g=0}else if((o|0)==17){g=c[a>>2]|0;h=c[g+12>>2]|0;if((h|0)==(c[g+16>>2]|0))g=ma[c[(c[g>>2]|0)+36>>2]&127](g)|0;else g=Fs(c[h>>2]|0)|0;if(!(pa[c[(c[e>>2]|0)+12>>2]&31](e,2048,g)|0)){c[d>>2]=c[d>>2]|4;g=0;break}g=(pa[c[(c[e>>2]|0)+52>>2]&31](e,g,0)|0)<<24>>24;h=c[a>>2]|0;j=h+12|0;i=c[j>>2]|0;if((i|0)==(c[h+16>>2]|0))ma[c[(c[h>>2]|0)+40>>2]&127](h)|0;else{c[j>>2]=i+4;Fs(c[i>>2]|0)|0}l=k;while(1){g=g+-48|0;n=f+-1|0;h=c[a>>2]|0;do if(h){i=c[h+12>>2]|0;if((i|0)==(c[h+16>>2]|0))h=ma[c[(c[h>>2]|0)+36>>2]&127](h)|0;else h=Fs(c[i>>2]|0)|0;if(kt(h,Es()|0)|0){c[a>>2]=0;j=1;break}else{j=(c[a>>2]|0)==0;break}}else j=1;while(0);if(l){h=c[l+12>>2]|0;if((h|0)==(c[l+16>>2]|0))h=ma[c[(c[l>>2]|0)+36>>2]&127](l)|0;else h=Fs(c[h>>2]|0)|0;if(kt(h,Es()|0)|0){c[b>>2]=0;h=1;m=0;k=0}else{h=0;m=k;k=l}}else{h=1;m=k;k=0}i=c[a>>2]|0;if(!((f|0)>1&(j^h)))break;h=c[i+12>>2]|0;if((h|0)==(c[i+16>>2]|0))h=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else h=Fs(c[h>>2]|0)|0;if(!(pa[c[(c[e>>2]|0)+12>>2]&31](e,2048,h)|0))break a;g=(g*10|0)+((pa[c[(c[e>>2]|0)+52>>2]&31](e,h,0)|0)<<24>>24)|0;h=c[a>>2]|0;j=h+12|0;i=c[j>>2]|0;if((i|0)==(c[h+16>>2]|0))ma[c[(c[h>>2]|0)+40>>2]&127](h)|0;else{c[j>>2]=i+4;Fs(c[i>>2]|0)|0}l=k;k=m;f=n}do if(i){h=c[i+12>>2]|0;if((h|0)==(c[i+16>>2]|0))h=ma[c[(c[i>>2]|0)+36>>2]&127](i)|0;else h=Fs(c[h>>2]|0)|0;if(kt(h,Es()|0)|0){c[a>>2]=0;i=1;break}else{i=(c[a>>2]|0)==0;break}}else i=1;while(0);do if(m){h=c[m+12>>2]|0;if((h|0)==(c[m+16>>2]|0))h=ma[c[(c[m>>2]|0)+36>>2]&127](m)|0;else h=Fs(c[h>>2]|0)|0;if(!(kt(h,Es()|0)|0))if(i)break a;else break;else{c[b>>2]=0;o=61;break}}else o=61;while(0);if((o|0)==61?!i:0)break;c[d>>2]=c[d>>2]|2}while(0);return g|0}function Ix(a){a=a|0;Nx(a+8|0);gu(a);return}function Jx(a){a=a|0;Nx(a+8|0);gu(a);Gf(a);return}function Kx(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0;j=ja;ja=ja+112|0;e=j;f=j+100|0;c[f>>2]=e+100;Lx(b+8|0,e,f,g,h,i);g=c[f>>2]|0;b=e;e=c[d>>2]|0;while(1){if((b|0)==(g|0))break;f=a[b>>0]|0;if(!e)e=0;else{i=e+24|0;h=c[i>>2]|0;if((h|0)==(c[e+28>>2]|0)){d=c[(c[e>>2]|0)+52>>2]|0;f=Va(f)|0;f=oa[d&63](e,f)|0}else{c[i>>2]=h+1;a[h>>0]=f;f=Va(f)|0}d=Qa(f,Ra()|0)|0;e=d?0:e}b=b+1|0}ja=j;return e|0}function Lx(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0;l=ja;ja=ja+16|0;k=l;a[k>>0]=37;i=k+1|0;a[i>>0]=g;j=k+2|0;a[j>>0]=h;a[k+3>>0]=0;if(h<<24>>24){a[i>>0]=h;a[j>>0]=g}j=Mx(d,c[e>>2]|0)|0;c[e>>2]=d+(da(d|0,j|0,k|0,f|0,c[b>>2]|0)|0);ja=l;return}function Mx(a,b){a=a|0;b=b|0;return b-a|0}function Nx(a){a=a|0;var b=0;b=c[a>>2]|0;if((b|0)!=(Eu()|0))me(c[a>>2]|0);return}function Ox(a){a=a|0;Nx(a+8|0);gu(a);return}function Px(a){a=a|0;Nx(a+8|0);gu(a);Gf(a);return}function Qx(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0;i=ja;ja=ja+416|0;d=i;e=i+400|0;c[e>>2]=d+400;Rx(a+8|0,d,e,f,g,h);f=c[e>>2]|0;a=d;d=c[b>>2]|0;while(1){if((a|0)==(f|0))break;e=c[a>>2]|0;if(!d)d=0;else{h=d+24|0;g=c[h>>2]|0;if((g|0)==(c[d+28>>2]|0)){b=c[(c[d>>2]|0)+52>>2]|0;e=Fs(e)|0;e=oa[b&63](d,e)|0}else{c[h>>2]=g+4;c[g>>2]=e;e=Fs(e)|0}b=kt(e,Es()|0)|0;d=b?0:d}a=a+4|0}ja=i;return d|0}function Rx(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=ja;ja=ja+128|0;k=h;l=h+116|0;i=h+104|0;j=h+112|0;c[l>>2]=k+100;Lx(a,k,l,e,f,g);f=i;c[f>>2]=0;c[f+4>>2]=0;c[j>>2]=k;f=Sx(b,c[d>>2]|0)|0;g=xe(c[a>>2]|0)|0;f=Se(b,j,f,i)|0;if(g|0)xe(g)|0;if((f|0)==-1)Tx(0);else{c[d>>2]=b+(f<<2);ja=h;return}}function Sx(a,b){a=a|0;b=b|0;return b-a>>2|0}function Tx(a){a=a|0;S()}function Ux(a){a=a|0;gu(a);return}function Vx(a){a=a|0;gu(a);Gf(a);return}function Wx(a){a=a|0;return 127}function Xx(a){a=a|0;return 127}function Yx(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[a+(b<<2)>>2]=0;b=b+1|0}return}function Zx(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[a+(b<<2)>>2]=0;b=b+1|0}return}function _x(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[a+(b<<2)>>2]=0;b=b+1|0}return}function $x(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;MC(a,1,45);return}function ay(a){a=a|0;return 0}function by(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function cy(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function dy(a){a=a|0;gu(a);return}function ey(a){a=a|0;gu(a);Gf(a);return}function fy(a){a=a|0;return 127}function gy(a){a=a|0;return 127}function hy(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[a+(b<<2)>>2]=0;b=b+1|0}return}function iy(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[a+(b<<2)>>2]=0;b=b+1|0}return}function jy(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[a+(b<<2)>>2]=0;b=b+1|0}return}function ky(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;MC(a,1,45);return}function ly(a){a=a|0;return 0}function my(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function ny(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function oy(a){a=a|0;gu(a);return}function py(a){a=a|0;gu(a);Gf(a);return}function qy(a){a=a|0;return 2147483647}function ry(a){a=a|0;return 2147483647}function sy(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[a+(b<<2)>>2]=0;b=b+1|0}return}function ty(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[a+(b<<2)>>2]=0;b=b+1|0}return}function uy(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[a+(b<<2)>>2]=0;b=b+1|0}return}function vy(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;ZC(a,1,45);return}function wy(a){a=a|0;return 0}function xy(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function yy(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function zy(a){a=a|0;gu(a);return}function Ay(a){a=a|0;gu(a);Gf(a);return}function By(a){a=a|0;return 2147483647}function Cy(a){a=a|0;return 2147483647}function Dy(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[a+(b<<2)>>2]=0;b=b+1|0}return}function Ey(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[a+(b<<2)>>2]=0;b=b+1|0}return}function Fy(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[a+(b<<2)>>2]=0;b=b+1|0}return}function Gy(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;ZC(a,1,45);return}function Hy(a){a=a|0;return 0}function Iy(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function Jy(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function Ky(a){a=a|0;gu(a);return}function Ly(a){a=a|0;gu(a);Gf(a);return}function My(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;u=ja;ja=ja+256|0;o=u+240|0;p=u+216|0;l=u+112|0;t=u+232|0;n=u+228|0;r=u+224|0;j=u+250|0;v=u+220|0;m=u;c[t>>2]=l;c[t+4>>2]=185;jt(r,g);b=Bu(r,108348)|0;a[j>>0]=0;c[v>>2]=c[e>>2];g=c[g+4>>2]|0;c[o>>2]=c[v>>2];if(Py(d,o,f,r,g,h,j,b,t,n,l+100|0)|0){qa[c[(c[b>>2]|0)+32>>2]&15](b,36906,36916,o)|0;f=c[n>>2]|0;g=c[t>>2]|0;b=f-g|0;if((b|0)>98){b=iD(b+2|0)|0;if(!b)FC();else{q=b;k=b}}else{q=0;k=m}if(!(a[j>>0]|0))b=k;else{a[k>>0]=45;b=k+1|0}k=o+10|0;l=o;j=b;while(1){if(g>>>0>=f>>>0)break;f=a[g>>0]|0;b=o;while(1){if((b|0)==(k|0)){b=k;break}if((a[b>>0]|0)==f<<24>>24)break;b=b+1|0}a[j>>0]=a[36906+(b-l)>>0]|0;f=c[n>>2]|0;j=j+1|0;g=g+1|0}a[j>>0]=0;c[p>>2]=i;if((Ie(m,36917,p)|0)!=1)Tx(0);if(q|0)jD(q)}b=c[d>>2]|0;do if(b){f=c[b+12>>2]|0;if((f|0)==(c[b+16>>2]|0))b=ma[c[(c[b>>2]|0)+36>>2]&127](b)|0;else b=Va(a[f>>0]|0)|0;if(Qa(b,Ra()|0)|0){c[d>>2]=0;g=1;break}else{g=(c[d>>2]|0)==0;break}}else g=1;while(0);b=c[e>>2]|0;do if(b){f=c[b+12>>2]|0;if((f|0)==(c[b+16>>2]|0))b=ma[c[(c[b>>2]|0)+36>>2]&127](b)|0;else b=Va(a[f>>0]|0)|0;if(!(Qa(b,Ra()|0)|0))if(g)break;else{s=34;break}else{c[e>>2]=0;s=32;break}}else s=32;while(0);if((s|0)==32?g:0)s=34;if((s|0)==34)c[h>>2]=c[h>>2]|2;f=c[d>>2]|0;Cu(r);b=c[t>>2]|0;c[t>>2]=0;if(b|0)ya[c[t+4>>2]&255](b);ja=u;return f|0}function Ny(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;s=ja;ja=ja+128|0;k=s+120|0;b=s;r=s+112|0;m=s+108|0;p=s+100|0;j=s+124|0;n=s+104|0;c[r>>2]=b;c[r+4>>2]=185;jt(p,g);l=Bu(p,108348)|0;a[j>>0]=0;o=c[e>>2]|0;c[n>>2]=o;g=c[g+4>>2]|0;c[k>>2]=c[n>>2];n=o;if(Py(d,k,f,p,g,h,j,l,r,m,b+100|0)|0){b=i+11|0;if((a[b>>0]|0)<0){f=c[i>>2]|0;a[k>>0]=0;Ua(f,k);c[i+4>>2]=0}else{a[k>>0]=0;Ua(i,k);a[b>>0]=0}if(a[j>>0]|0)XC(i,oa[c[(c[l>>2]|0)+28>>2]&63](l,45)|0);j=oa[c[(c[l>>2]|0)+28>>2]&63](l,48)|0;b=c[m>>2]|0;f=b+-1|0;g=c[r>>2]|0;while(1){if(g>>>0>=f>>>0)break;if((a[g>>0]|0)!=j<<24>>24)break;g=g+1|0}Qy(i,g,b)|0}b=c[d>>2]|0;do if(b){g=c[b+12>>2]|0;if((g|0)==(c[b+16>>2]|0))b=ma[c[(c[b>>2]|0)+36>>2]&127](b)|0;else b=Va(a[g>>0]|0)|0;if(Qa(b,Ra()|0)|0){c[d>>2]=0;g=1;break}else{g=(c[d>>2]|0)==0;break}}else g=1;while(0);do if(o){b=c[n+12>>2]|0;if((b|0)==(c[n+16>>2]|0))b=ma[c[(c[o>>2]|0)+36>>2]&127](n)|0;else b=Va(a[b>>0]|0)|0;if(!(Qa(b,Ra()|0)|0))if(g)break;else{q=27;break}else{c[e>>2]=0;q=25;break}}else q=25;while(0);if((q|0)==25?g:0)q=27;if((q|0)==27)c[h>>2]=c[h>>2]|2;g=c[d>>2]|0;Cu(p);b=c[r>>2]|0;c[r>>2]=0;if(b|0)ya[c[r+4>>2]&255](b);ja=s;return g|0}function Oy(a){a=a|0;return}function Py(e,f,g,h,i,j,k,l,m,n,o){e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0;Z=ja;ja=ja+512|0;O=Z+488|0;P=Z;Y=Z+480|0;R=Z+472|0;L=Z+468|0;M=Z+496|0;J=Z+493|0;N=Z+492|0;T=Z+456|0;X=Z+444|0;V=Z+432|0;U=Z+420|0;W=Z+408|0;K=Z+404|0;S=Z+400|0;c[O>>2]=o;c[Y>>2]=P;c[Y+4>>2]=185;c[R>>2]=P;c[L>>2]=P+400;c[T>>2]=0;c[T+4>>2]=0;c[T+8>>2]=0;o=0;while(1){if((o|0)==3)break;c[T+(o<<2)>>2]=0;o=o+1|0}c[X>>2]=0;c[X+4>>2]=0;c[X+8>>2]=0;o=0;while(1){if((o|0)==3)break;c[X+(o<<2)>>2]=0;o=o+1|0}c[V>>2]=0;c[V+4>>2]=0;c[V+8>>2]=0;o=0;while(1){if((o|0)==3)break;c[V+(o<<2)>>2]=0;o=o+1|0}c[U>>2]=0;c[U+4>>2]=0;c[U+8>>2]=0;o=0;while(1){if((o|0)==3)break;c[U+(o<<2)>>2]=0;o=o+1|0}c[W>>2]=0;c[W+4>>2]=0;c[W+8>>2]=0;o=0;while(1){if((o|0)==3)break;c[W+(o<<2)>>2]=0;o=o+1|0}Sy(g,h,M,J,N,T,X,V,U,K);c[n>>2]=c[m>>2];I=l+8|0;C=V+11|0;F=V+4|0;D=U+11|0;G=U+4|0;E=T+11|0;H=T+4|0;B=(i&512|0)!=0;w=X+11|0;A=M+3|0;y=X+4|0;x=W+11|0;z=W+4|0;v=0;P=0;a:while(1){if(v>>>0>=4){Q=243;break}o=c[e>>2]|0;do if(o){l=c[o+12>>2]|0;if((l|0)==(c[o+16>>2]|0))o=ma[c[(c[o>>2]|0)+36>>2]&127](o)|0;else o=Va(a[l>>0]|0)|0;if(Qa(o,Ra()|0)|0){c[e>>2]=0;l=1;break}else{l=(c[e>>2]|0)==0;break}}else l=1;while(0);g=c[f>>2]|0;do if(g){o=c[g+12>>2]|0;if((o|0)==(c[g+16>>2]|0))o=ma[c[(c[g>>2]|0)+36>>2]&127](g)|0;else o=Va(a[o>>0]|0)|0;if(!(Qa(o,Ra()|0)|0))if(l){u=g;break}else{Q=243;break a}else{c[f>>2]=0;Q=31;break}}else Q=31;while(0);if((Q|0)==31){Q=0;if(l){Q=243;break}else u=0}b:do switch(a[M+v>>0]|0){case 1:{if((v|0)==3)o=P;else{o=c[e>>2]|0;l=c[o+12>>2]|0;if((l|0)==(c[o+16>>2]|0))o=ma[c[(c[o>>2]|0)+36>>2]&127](o)|0;else o=Va(a[l>>0]|0)|0;if((o&255)<<24>>24<=-1){Q=45;break a}if(!(b[(c[I>>2]|0)+(o<<24>>24<<1)>>1]&8192)){Q=45;break a}o=c[e>>2]|0;g=o+12|0;l=c[g>>2]|0;if((l|0)==(c[o+16>>2]|0))o=ma[c[(c[o>>2]|0)+40>>2]&127](o)|0;else{c[g>>2]=l+1;o=Va(a[l>>0]|0)|0}XC(W,o&255);Q=47}break}case 0:{if((v|0)==3)o=P;else Q=47;break}case 3:{o=a[C>>0]|0;o=o<<24>>24<0?c[F>>2]|0:o&255;h=a[D>>0]|0;h=h<<24>>24<0?c[G>>2]|0:h&255;if((o|0)==(0-h|0))o=P;else{i=(o|0)==0;o=c[e>>2]|0;l=c[o+12>>2]|0;g=(l|0)==(c[o+16>>2]|0);if(i|(h|0)==0){if(g)o=ma[c[(c[o>>2]|0)+36>>2]&127](o)|0;else o=Va(a[l>>0]|0)|0;o=o&255;if(i){if((a[((a[D>>0]|0)<0?c[U>>2]|0:U)>>0]|0)!=o<<24>>24){o=P;break b}o=c[e>>2]|0;g=o+12|0;l=c[g>>2]|0;if((l|0)==(c[o+16>>2]|0))ma[c[(c[o>>2]|0)+40>>2]&127](o)|0;else{c[g>>2]=l+1;Va(a[l>>0]|0)|0}a[k>>0]=1;o=a[D>>0]|0;o=(o<<24>>24<0?c[G>>2]|0:o&255)>>>0>1?U:P;break b}if((a[((a[C>>0]|0)<0?c[V>>2]|0:V)>>0]|0)!=o<<24>>24){a[k>>0]=1;o=P;break b}o=c[e>>2]|0;g=o+12|0;l=c[g>>2]|0;if((l|0)==(c[o+16>>2]|0))ma[c[(c[o>>2]|0)+40>>2]&127](o)|0;else{c[g>>2]=l+1;Va(a[l>>0]|0)|0}o=a[C>>0]|0;o=(o<<24>>24<0?c[F>>2]|0:o&255)>>>0>1?V:P;break b}if(g)i=ma[c[(c[o>>2]|0)+36>>2]&127](o)|0;else i=Va(a[l>>0]|0)|0;o=c[e>>2]|0;g=o+12|0;l=c[g>>2]|0;h=(l|0)==(c[o+16>>2]|0);if((a[((a[C>>0]|0)<0?c[V>>2]|0:V)>>0]|0)==(i&255)<<24>>24){if(h)ma[c[(c[o>>2]|0)+40>>2]&127](o)|0;else{c[g>>2]=l+1;Va(a[l>>0]|0)|0}o=a[C>>0]|0;o=(o<<24>>24<0?c[F>>2]|0:o&255)>>>0>1?V:P;break b}if(h)o=ma[c[(c[o>>2]|0)+36>>2]&127](o)|0;else o=Va(a[l>>0]|0)|0;if((a[((a[D>>0]|0)<0?c[U>>2]|0:U)>>0]|0)!=(o&255)<<24>>24){Q=105;break a}o=c[e>>2]|0;g=o+12|0;l=c[g>>2]|0;if((l|0)==(c[o+16>>2]|0))ma[c[(c[o>>2]|0)+40>>2]&127](o)|0;else{c[g>>2]=l+1;Va(a[l>>0]|0)|0}a[k>>0]=1;o=a[D>>0]|0;o=(o<<24>>24<0?c[G>>2]|0:o&255)>>>0>1?U:P}break}case 2:{if(v>>>0<2|(P|0)!=0){l=a[w>>0]|0;o=l<<24>>24<0;h=c[X>>2]|0;i=o?h:X;g=i;if(!v)o=h;else{s=i;Q=110}}else{if(!(B|(v|0)==2&(a[A>>0]|0)!=0)){o=0;break b}l=a[w>>0]|0;o=l<<24>>24<0;h=c[X>>2]|0;s=o?h:X;g=s;Q=110}c:do if((Q|0)==110){Q=0;if((d[M+(v+-1)>>0]|0)<2){p=s+(o?c[y>>2]|0:l&255)|0;t=g;while(1){o=t;if((p|0)==(o|0))break;i=a[o>>0]|0;if(i<<24>>24<=-1)break;if(!(b[(c[I>>2]|0)+(i<<24>>24<<1)>>1]&8192))break;t=o+1|0}q=t-g|0;i=a[x>>0]|0;r=i<<24>>24<0;o=c[z>>2]|0;i=i&255;if(q>>>0<=(r?o:i)>>>0){o=(c[W>>2]|0)+o|0;i=W+i|0;p=r?o:i;i=r?o+(0-q)|0:i+(0-q)|0;o=s;while(1){if((i|0)==(p|0)){o=h;g=t;break c}if((a[i>>0]|0)!=(a[o>>0]|0)){o=h;break c}i=i+1|0;o=o+1|0}}else o=h}else o=h}while(0);h=u;i=g;d:while(1){u=l<<24>>24<0;if((i|0)==((u?o:X)+(u?c[y>>2]|0:l&255)|0))break;o=c[e>>2]|0;do if(o){l=c[o+12>>2]|0;if((l|0)==(c[o+16>>2]|0))o=ma[c[(c[o>>2]|0)+36>>2]&127](o)|0;else o=Va(a[l>>0]|0)|0;if(Qa(o,Ra()|0)|0){c[e>>2]=0;l=1;break}else{l=(c[e>>2]|0)==0;break}}else l=1;while(0);do if(h){o=c[h+12>>2]|0;if((o|0)==(c[h+16>>2]|0))o=ma[c[(c[h>>2]|0)+36>>2]&127](h)|0;else o=Va(a[o>>0]|0)|0;if(!(Qa(o,Ra()|0)|0))if(l)break;else break d;else{c[f>>2]=0;Q=136;break}}else Q=136;while(0);if((Q|0)==136){Q=0;if(l)break;else h=0}o=c[e>>2]|0;l=c[o+12>>2]|0;if((l|0)==(c[o+16>>2]|0))o=ma[c[(c[o>>2]|0)+36>>2]&127](o)|0;else o=Va(a[l>>0]|0)|0;if((a[i>>0]|0)!=(o&255)<<24>>24)break;o=c[e>>2]|0;g=o+12|0;l=c[g>>2]|0;if((l|0)==(c[o+16>>2]|0))ma[c[(c[o>>2]|0)+40>>2]&127](o)|0;else{c[g>>2]=l+1;Va(a[l>>0]|0)|0}l=a[w>>0]|0;o=c[X>>2]|0;i=i+1|0}if(B?(u=a[w>>0]|0,t=u<<24>>24<0,(i|0)!=((t?c[X>>2]|0:X)+(t?c[y>>2]|0:u&255)|0)):0){Q=148;break a}else o=P;break}case 4:{h=u;o=u;i=0;e:while(1){l=c[e>>2]|0;do if(l){g=c[l+12>>2]|0;if((g|0)==(c[l+16>>2]|0))l=ma[c[(c[l>>2]|0)+36>>2]&127](l)|0;else l=Va(a[g>>0]|0)|0;if(Qa(l,Ra()|0)|0){c[e>>2]=0;g=1;break}else{g=(c[e>>2]|0)==0;break}}else g=1;while(0);do if(h){l=c[h+12>>2]|0;if((l|0)==(c[h+16>>2]|0))l=ma[c[(c[h>>2]|0)+36>>2]&127](h)|0;else l=Va(a[l>>0]|0)|0;if(!(Qa(l,Ra()|0)|0))if(g){p=h;break}else{h=o;break e}else{c[f>>2]=0;o=0;Q=162;break}}else Q=162;while(0);if((Q|0)==162){Q=0;if(g){h=o;break}else p=0}l=c[e>>2]|0;g=c[l+12>>2]|0;if((g|0)==(c[l+16>>2]|0))l=ma[c[(c[l>>2]|0)+36>>2]&127](l)|0;else l=Va(a[g>>0]|0)|0;g=l&255;if(g<<24>>24>-1?(b[(c[I>>2]|0)+(l<<24>>24<<1)>>1]&2048)!=0:0){l=c[n>>2]|0;if((l|0)==(c[O>>2]|0)){Ty(m,n,O);l=c[n>>2]|0}c[n>>2]=l+1;a[l>>0]=g;i=i+1|0}else{u=a[E>>0]|0;if(!((a[N>>0]|0)==g<<24>>24&(i|0?((u<<24>>24<0?c[H>>2]|0:u&255)|0)!=0:0))){h=o;break}l=c[R>>2]|0;if((l|0)==(c[L>>2]|0)){Uy(Y,R,L);l=c[R>>2]|0}c[R>>2]=l+4;c[l>>2]=i;i=0}l=c[e>>2]|0;h=l+12|0;g=c[h>>2]|0;if((g|0)==(c[l+16>>2]|0))ma[c[(c[l>>2]|0)+40>>2]&127](l)|0;else{c[h>>2]=g+1;Va(a[g>>0]|0)|0}h=p}o=c[R>>2]|0;if(i|0?(c[Y>>2]|0)!=(o|0):0){if((o|0)==(c[L>>2]|0)){Uy(Y,R,L);o=c[R>>2]|0}c[R>>2]=o+4;c[o>>2]=i}f:do if((c[K>>2]|0)>0){o=c[e>>2]|0;do if(o){l=c[o+12>>2]|0;if((l|0)==(c[o+16>>2]|0))o=ma[c[(c[o>>2]|0)+36>>2]&127](o)|0;else o=Va(a[l>>0]|0)|0;if(Qa(o,Ra()|0)|0){c[e>>2]=0;l=1;break}else{l=(c[e>>2]|0)==0;break}}else l=1;while(0);do if(h){o=c[h+12>>2]|0;if((o|0)==(c[h+16>>2]|0))o=ma[c[(c[h>>2]|0)+36>>2]&127](h)|0;else o=Va(a[o>>0]|0)|0;if(!(Qa(o,Ra()|0)|0))if(l)break;else{Q=204;break a}else{c[f>>2]=0;Q=198;break}}else Q=198;while(0);if((Q|0)==198){Q=0;if(l){Q=204;break a}else h=0}o=c[e>>2]|0;l=c[o+12>>2]|0;if((l|0)==(c[o+16>>2]|0))o=ma[c[(c[o>>2]|0)+36>>2]&127](o)|0;else o=Va(a[l>>0]|0)|0;if((a[J>>0]|0)!=(o&255)<<24>>24){Q=204;break a}o=c[e>>2]|0;g=o+12|0;l=c[g>>2]|0;if((l|0)==(c[o+16>>2]|0))ma[c[(c[o>>2]|0)+40>>2]&127](o)|0;else{c[g>>2]=l+1;Va(a[l>>0]|0)|0}g=h;while(1){if((c[K>>2]|0)<=0)break f;o=c[e>>2]|0;do if(o){l=c[o+12>>2]|0;if((l|0)==(c[o+16>>2]|0))o=ma[c[(c[o>>2]|0)+36>>2]&127](o)|0;else o=Va(a[l>>0]|0)|0;if(Qa(o,Ra()|0)|0){c[e>>2]=0;l=1;break}else{l=(c[e>>2]|0)==0;break}}else l=1;while(0);do if(g){o=c[g+12>>2]|0;if((o|0)==(c[g+16>>2]|0))o=ma[c[(c[g>>2]|0)+36>>2]&127](g)|0;else o=Va(a[o>>0]|0)|0;if(!(Qa(o,Ra()|0)|0))if(l){h=g;break}else{Q=230;break a}else{c[f>>2]=0;Q=223;break}}else Q=223;while(0);if((Q|0)==223){Q=0;if(l){Q=230;break a}else h=0}o=c[e>>2]|0;l=c[o+12>>2]|0;if((l|0)==(c[o+16>>2]|0))o=ma[c[(c[o>>2]|0)+36>>2]&127](o)|0;else o=Va(a[l>>0]|0)|0;if((o&255)<<24>>24<=-1){Q=230;break a}if(!(b[(c[I>>2]|0)+(o<<24>>24<<1)>>1]&2048)){Q=230;break a}if((c[n>>2]|0)==(c[O>>2]|0))Ty(m,n,O);o=c[e>>2]|0;l=c[o+12>>2]|0;if((l|0)==(c[o+16>>2]|0))o=ma[c[(c[o>>2]|0)+36>>2]&127](o)|0;else o=Va(a[l>>0]|0)|0;g=c[n>>2]|0;c[n>>2]=g+1;a[g>>0]=o;c[K>>2]=(c[K>>2]|0)+-1;o=c[e>>2]|0;g=o+12|0;l=c[g>>2]|0;if((l|0)==(c[o+16>>2]|0))ma[c[(c[o>>2]|0)+40>>2]&127](o)|0;else{c[g>>2]=l+1;Va(a[l>>0]|0)|0}g=h}}while(0);if((c[n>>2]|0)==(c[m>>2]|0)){Q=241;break a}else o=P;break}default:o=P}while(0);g:do if((Q|0)==47){Q=0;g=u;while(1){o=c[e>>2]|0;do if(o){l=c[o+12>>2]|0;if((l|0)==(c[o+16>>2]|0))o=ma[c[(c[o>>2]|0)+36>>2]&127](o)|0;else o=Va(a[l>>0]|0)|0;if(Qa(o,Ra()|0)|0){c[e>>2]=0;l=1;break}else{l=(c[e>>2]|0)==0;break}}else l=1;while(0);do if(g){o=c[g+12>>2]|0;if((o|0)==(c[g+16>>2]|0))o=ma[c[(c[g>>2]|0)+36>>2]&127](g)|0;else o=Va(a[o>>0]|0)|0;if(!(Qa(o,Ra()|0)|0))if(l){h=g;break}else{o=P;break g}else{c[f>>2]=0;Q=61;break}}else Q=61;while(0);if((Q|0)==61){Q=0;if(l){o=P;break g}else h=0}o=c[e>>2]|0;l=c[o+12>>2]|0;if((l|0)==(c[o+16>>2]|0))o=ma[c[(c[o>>2]|0)+36>>2]&127](o)|0;else o=Va(a[l>>0]|0)|0;if((o&255)<<24>>24<=-1){o=P;break g}if(!(b[(c[I>>2]|0)+(o<<24>>24<<1)>>1]&8192)){o=P;break g}o=c[e>>2]|0;g=o+12|0;l=c[g>>2]|0;if((l|0)==(c[o+16>>2]|0))o=ma[c[(c[o>>2]|0)+40>>2]&127](o)|0;else{c[g>>2]=l+1;o=Va(a[l>>0]|0)|0}XC(W,o&255);g=h}}while(0);v=v+1|0;P=o}h:do if((Q|0)==45){c[j>>2]=c[j>>2]|4;l=0}else if((Q|0)==105){c[j>>2]=c[j>>2]|4;l=0}else if((Q|0)==148){c[j>>2]=c[j>>2]|4;l=0}else if((Q|0)==204){c[j>>2]=c[j>>2]|4;l=0}else if((Q|0)==230){c[j>>2]=c[j>>2]|4;l=0}else if((Q|0)==241){c[j>>2]=c[j>>2]|4;l=0}else if((Q|0)==243){i:do if(P|0){i=P+11|0;p=P+4|0;h=1;j:while(1){o=a[i>>0]|0;if(o<<24>>24<0)o=c[p>>2]|0;else o=o&255;if(h>>>0>=o>>>0)break i;o=c[e>>2]|0;do if(o){l=c[o+12>>2]|0;if((l|0)==(c[o+16>>2]|0))o=ma[c[(c[o>>2]|0)+36>>2]&127](o)|0;else o=Va(a[l>>0]|0)|0;if(Qa(o,Ra()|0)|0){c[e>>2]=0;g=1;break}else{g=(c[e>>2]|0)==0;break}}else g=1;while(0);o=c[f>>2]|0;do if(o){l=c[o+12>>2]|0;if((l|0)==(c[o+16>>2]|0))o=ma[c[(c[o>>2]|0)+36>>2]&127](o)|0;else o=Va(a[l>>0]|0)|0;if(!(Qa(o,Ra()|0)|0))if(g)break;else break j;else{c[f>>2]=0;Q=262;break}}else Q=262;while(0);if((Q|0)==262?(Q=0,g):0)break;o=c[e>>2]|0;l=c[o+12>>2]|0;if((l|0)==(c[o+16>>2]|0))l=ma[c[(c[o>>2]|0)+36>>2]&127](o)|0;else l=Va(a[l>>0]|0)|0;if((a[i>>0]|0)<0)o=c[P>>2]|0;else o=P;if((a[o+h>>0]|0)!=(l&255)<<24>>24)break;o=c[e>>2]|0;g=o+12|0;l=c[g>>2]|0;if((l|0)==(c[o+16>>2]|0))ma[c[(c[o>>2]|0)+40>>2]&127](o)|0;else{c[g>>2]=l+1;Va(a[l>>0]|0)|0}h=h+1|0}c[j>>2]=c[j>>2]|4;l=0;break h}while(0);l=c[Y>>2]|0;o=c[R>>2]|0;if((l|0)!=(o|0)){c[S>>2]=0;Qu(T,l,o,S);if(!(c[S>>2]|0)){l=1;break}else{c[j>>2]=c[j>>2]|4;l=0;break}}else l=1}while(0);OC(W);OC(U);OC(V);OC(X);OC(T);o=c[Y>>2]|0;c[Y>>2]=0;if(o|0)ya[c[Y+4>>2]&255](o);ja=Z;return l|0}function Qy(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=ja;ja=ja+16|0;j=d;k=o;n=b+11|0;g=a[n>>0]|0;f=g<<24>>24<0;if(f){i=(c[b+8>>2]&2147483647)+-1|0;l=c[b+4>>2]|0}else{i=10;l=g&255}m=e-j|0;do if(m|0){if(f){h=c[b>>2]|0;f=c[b+4>>2]|0}else{h=b;f=g&255}if(Ry(d,h,h+f|0)|0){c[k>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;nb(k,d,e);n=a[k+11>>0]|0;m=n<<24>>24<0;WC(b,m?c[k>>2]|0:k,m?c[k+4>>2]|0:n&255)|0;OC(k);break}if((i-l|0)>>>0<m>>>0)VC(b,i,l+m-i|0,l,l,0,0);if((a[n>>0]|0)<0)h=c[b>>2]|0;else h=b;g=e+(l-j)|0;f=h+l|0;while(1){if((d|0)==(e|0))break;Ua(f,d);d=d+1|0;f=f+1|0}a[k>>0]=0;Ua(h+g|0,k);d=l+m|0;if((a[n>>0]|0)<0){c[b+4>>2]=d;break}else{a[n>>0]=d;break}}while(0);ja=o;return b|0}function Ry(a,b,c){a=a|0;b=b|0;c=c|0;return b>>>0<=a>>>0&a>>>0<c>>>0|0}function Sy(b,d,e,f,g,h,i,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0;o=ja;ja=ja+16|0;m=o+12|0;n=o;if(b){d=Bu(d,108580)|0;za[c[(c[d>>2]|0)+44>>2]&127](m,d);b=c[m>>2]|0;a[e>>0]=b;a[e+1>>0]=b>>8;a[e+2>>0]=b>>16;a[e+3>>0]=b>>24;za[c[(c[d>>2]|0)+32>>2]&127](n,d);b=k+11|0;if((a[b>>0]|0)<0){e=c[k>>2]|0;a[m>>0]=0;Ua(e,m);c[k+4>>2]=0;if((a[b>>0]|0)<0){e=k+8|0;vb(c[k>>2]|0,c[e>>2]&2147483647);c[e>>2]=0}}else{a[m>>0]=0;Ua(k,m);a[b>>0]=0};c[k>>2]=c[n>>2];c[k+4>>2]=c[n+4>>2];c[k+8>>2]=c[n+8>>2];b=0;while(1){if((b|0)==3)break;c[n+(b<<2)>>2]=0;b=b+1|0}OC(n);za[c[(c[d>>2]|0)+28>>2]&127](n,d);b=j+11|0;if((a[b>>0]|0)<0){k=c[j>>2]|0;a[m>>0]=0;Ua(k,m);c[j+4>>2]=0;if((a[b>>0]|0)<0){k=j+8|0;vb(c[j>>2]|0,c[k>>2]&2147483647);c[k>>2]=0}}else{a[m>>0]=0;Ua(j,m);a[b>>0]=0};c[j>>2]=c[n>>2];c[j+4>>2]=c[n+4>>2];c[j+8>>2]=c[n+8>>2];b=0;while(1){if((b|0)==3)break;c[n+(b<<2)>>2]=0;b=b+1|0}OC(n);a[f>>0]=ma[c[(c[d>>2]|0)+12>>2]&127](d)|0;a[g>>0]=ma[c[(c[d>>2]|0)+16>>2]&127](d)|0;za[c[(c[d>>2]|0)+20>>2]&127](n,d);b=h+11|0;if((a[b>>0]|0)<0){g=c[h>>2]|0;a[m>>0]=0;Ua(g,m);c[h+4>>2]=0;if((a[b>>0]|0)<0){g=h+8|0;vb(c[h>>2]|0,c[g>>2]&2147483647);c[g>>2]=0}}else{a[m>>0]=0;Ua(h,m);a[b>>0]=0};c[h>>2]=c[n>>2];c[h+4>>2]=c[n+4>>2];c[h+8>>2]=c[n+8>>2];b=0;while(1){if((b|0)==3)break;c[n+(b<<2)>>2]=0;b=b+1|0}OC(n);za[c[(c[d>>2]|0)+24>>2]&127](n,d);b=i+11|0;if((a[b>>0]|0)<0){h=c[i>>2]|0;a[m>>0]=0;Ua(h,m);c[i+4>>2]=0;if((a[b>>0]|0)<0){m=i+8|0;vb(c[i>>2]|0,c[m>>2]&2147483647);c[m>>2]=0}}else{a[m>>0]=0;Ua(i,m);a[b>>0]=0};c[i>>2]=c[n>>2];c[i+4>>2]=c[n+4>>2];c[i+8>>2]=c[n+8>>2];b=0;while(1){if((b|0)==3)break;c[n+(b<<2)>>2]=0;b=b+1|0}OC(n);b=ma[c[(c[d>>2]|0)+36>>2]&127](d)|0}else{d=Bu(d,108572)|0;za[c[(c[d>>2]|0)+44>>2]&127](m,d);b=c[m>>2]|0;a[e>>0]=b;a[e+1>>0]=b>>8;a[e+2>>0]=b>>16;a[e+3>>0]=b>>24;za[c[(c[d>>2]|0)+32>>2]&127](n,d);b=k+11|0;if((a[b>>0]|0)<0){e=c[k>>2]|0;a[m>>0]=0;Ua(e,m);c[k+4>>2]=0;if((a[b>>0]|0)<0){e=k+8|0;vb(c[k>>2]|0,c[e>>2]&2147483647);c[e>>2]=0}}else{a[m>>0]=0;Ua(k,m);a[b>>0]=0};c[k>>2]=c[n>>2];c[k+4>>2]=c[n+4>>2];c[k+8>>2]=c[n+8>>2];b=0;while(1){if((b|0)==3)break;c[n+(b<<2)>>2]=0;b=b+1|0}OC(n);za[c[(c[d>>2]|0)+28>>2]&127](n,d);b=j+11|0;if((a[b>>0]|0)<0){k=c[j>>2]|0;a[m>>0]=0;Ua(k,m);c[j+4>>2]=0;if((a[b>>0]|0)<0){k=j+8|0;vb(c[j>>2]|0,c[k>>2]&2147483647);c[k>>2]=0}}else{a[m>>0]=0;Ua(j,m);a[b>>0]=0};c[j>>2]=c[n>>2];c[j+4>>2]=c[n+4>>2];c[j+8>>2]=c[n+8>>2];b=0;while(1){if((b|0)==3)break;c[n+(b<<2)>>2]=0;b=b+1|0}OC(n);a[f>>0]=ma[c[(c[d>>2]|0)+12>>2]&127](d)|0;a[g>>0]=ma[c[(c[d>>2]|0)+16>>2]&127](d)|0;za[c[(c[d>>2]|0)+20>>2]&127](n,d);b=h+11|0;if((a[b>>0]|0)<0){g=c[h>>2]|0;a[m>>0]=0;Ua(g,m);c[h+4>>2]=0;if((a[b>>0]|0)<0){g=h+8|0;vb(c[h>>2]|0,c[g>>2]&2147483647);c[g>>2]=0}}else{a[m>>0]=0;Ua(h,m);a[b>>0]=0};c[h>>2]=c[n>>2];c[h+4>>2]=c[n+4>>2];c[h+8>>2]=c[n+8>>2];b=0;while(1){if((b|0)==3)break;c[n+(b<<2)>>2]=0;b=b+1|0}OC(n);za[c[(c[d>>2]|0)+24>>2]&127](n,d);b=i+11|0;if((a[b>>0]|0)<0){h=c[i>>2]|0;a[m>>0]=0;Ua(h,m);c[i+4>>2]=0;if((a[b>>0]|0)<0){m=i+8|0;vb(c[i>>2]|0,c[m>>2]&2147483647);c[m>>2]=0}}else{a[m>>0]=0;Ua(i,m);a[b>>0]=0};c[i>>2]=c[n>>2];c[i+4>>2]=c[n+4>>2];c[i+8>>2]=c[n+8>>2];b=0;while(1){if((b|0)==3)break;c[n+(b<<2)>>2]=0;b=b+1|0}OC(n);b=ma[c[(c[d>>2]|0)+36>>2]&127](d)|0}c[l>>2]=b;ja=o;return}function Ty(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;h=a+4|0;f=(c[h>>2]|0)!=185;e=c[a>>2]|0;i=e;j=(c[d>>2]|0)-i|0;g=j<<1;g=j>>>0<2147483647?((g|0)==0?1:g):-1;i=(c[b>>2]|0)-i|0;e=kD(f?e:0,g)|0;if(!e)FC();if(!f){f=c[a>>2]|0;c[a>>2]=e;if(f){ya[c[h>>2]&255](f);e=c[a>>2]|0}}else c[a>>2]=e;c[h>>2]=186;c[b>>2]=e+i;c[d>>2]=(c[a>>2]|0)+g;return}function Uy(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;h=a+4|0;f=(c[h>>2]|0)!=185;e=c[a>>2]|0;i=e;j=(c[d>>2]|0)-i|0;g=j<<1;g=j>>>0<2147483647?((g|0)==0?4:g):-1;i=(c[b>>2]|0)-i>>2;e=kD(f?e:0,g)|0;if(!e)FC();if(!f){f=c[a>>2]|0;c[a>>2]=e;if(f){ya[c[h>>2]&255](f);e=c[a>>2]|0}}else c[a>>2]=e;c[h>>2]=186;c[b>>2]=e+(i<<2);c[d>>2]=(c[a>>2]|0)+(g>>>2<<2);return}function Vy(a){a=a|0;gu(a);return}function Wy(a){a=a|0;gu(a);Gf(a);return}function Xy(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;u=ja;ja=ja+592|0;o=u+512|0;p=u+552|0;l=u+112|0;t=u+568|0;n=u+564|0;r=u+560|0;j=u+576|0;v=u+556|0;m=u;c[t>>2]=l;c[t+4>>2]=185;jt(r,g);b=Bu(r,108380)|0;a[j>>0]=0;c[v>>2]=c[e>>2];g=c[g+4>>2]|0;c[o>>2]=c[v>>2];if(Zy(d,o,f,r,g,h,j,b,t,n,l+400|0)|0){qa[c[(c[b>>2]|0)+48>>2]&15](b,37016,37026,o)|0;f=c[n>>2]|0;g=c[t>>2]|0;b=f-g|0;if((b|0)>392){b=iD((b>>>2)+2|0)|0;if(!b)FC();else{q=b;k=b}}else{q=0;k=m}if(!(a[j>>0]|0))b=k;else{a[k>>0]=45;b=k+1|0}k=o+40|0;l=o;j=b;while(1){if(g>>>0>=f>>>0)break;f=c[g>>2]|0;b=o;while(1){if((b|0)==(k|0)){b=k;break}if((c[b>>2]|0)==(f|0))break;b=b+4|0}a[j>>0]=a[37016+(b-l>>2)>>0]|0;f=c[n>>2]|0;j=j+1|0;g=g+4|0}a[j>>0]=0;c[p>>2]=i;if((Ie(m,36917,p)|0)!=1)Tx(0);if(q|0)jD(q)}b=c[d>>2]|0;do if(b){f=c[b+12>>2]|0;if((f|0)==(c[b+16>>2]|0))b=ma[c[(c[b>>2]|0)+36>>2]&127](b)|0;else b=Fs(c[f>>2]|0)|0;if(kt(b,Es()|0)|0){c[d>>2]=0;g=1;break}else{g=(c[d>>2]|0)==0;break}}else g=1;while(0);b=c[e>>2]|0;do if(b){f=c[b+12>>2]|0;if((f|0)==(c[b+16>>2]|0))b=ma[c[(c[b>>2]|0)+36>>2]&127](b)|0;else b=Fs(c[f>>2]|0)|0;if(!(kt(b,Es()|0)|0))if(g)break;else{s=34;break}else{c[e>>2]=0;s=32;break}}else s=32;while(0);if((s|0)==32?g:0)s=34;if((s|0)==34)c[h>>2]=c[h>>2]|2;f=c[d>>2]|0;Cu(r);b=c[t>>2]|0;c[t>>2]=0;if(b|0)ya[c[t+4>>2]&255](b);ja=u;return f|0}function Yy(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;s=ja;ja=ja+432|0;k=s+424|0;b=s;r=s+416|0;m=s+408|0;p=s+400|0;j=s+428|0;n=s+404|0;c[r>>2]=b;c[r+4>>2]=185;jt(p,g);l=Bu(p,108380)|0;a[j>>0]=0;o=c[e>>2]|0;c[n>>2]=o;g=c[g+4>>2]|0;c[k>>2]=c[n>>2];n=o;if(Zy(d,k,f,p,g,h,j,l,r,m,b+400|0)|0){b=i+8+3|0;if((a[b>>0]|0)<0){f=c[i>>2]|0;c[k>>2]=0;nu(f,k);c[i+4>>2]=0}else{c[k>>2]=0;nu(i,k);a[b>>0]=0}if(a[j>>0]|0)gD(i,oa[c[(c[l>>2]|0)+44>>2]&63](l,45)|0);j=oa[c[(c[l>>2]|0)+44>>2]&63](l,48)|0;b=c[m>>2]|0;f=b+-4|0;g=c[r>>2]|0;while(1){if(g>>>0>=f>>>0)break;if((c[g>>2]|0)!=(j|0))break;g=g+4|0}_y(i,g,b)|0}b=c[d>>2]|0;do if(b){g=c[b+12>>2]|0;if((g|0)==(c[b+16>>2]|0))b=ma[c[(c[b>>2]|0)+36>>2]&127](b)|0;else b=Fs(c[g>>2]|0)|0;if(kt(b,Es()|0)|0){c[d>>2]=0;g=1;break}else{g=(c[d>>2]|0)==0;break}}else g=1;while(0);do if(o){b=c[n+12>>2]|0;if((b|0)==(c[n+16>>2]|0))b=ma[c[(c[o>>2]|0)+36>>2]&127](n)|0;else b=Fs(c[b>>2]|0)|0;if(!(kt(b,Es()|0)|0))if(g)break;else{q=27;break}else{c[e>>2]=0;q=25;break}}else q=25;while(0);if((q|0)==25?g:0)q=27;if((q|0)==27)c[h>>2]=c[h>>2]|2;g=c[d>>2]|0;Cu(p);b=c[r>>2]|0;c[r>>2]=0;if(b|0)ya[c[r+4>>2]&255](b);ja=s;return g|0}function Zy(b,e,f,g,h,i,j,k,l,m,n){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;X=ja;ja=ja+512|0;M=X+496|0;N=X;W=X+488|0;P=X+480|0;J=X+476|0;K=X+500|0;H=X+472|0;L=X+468|0;R=X+456|0;V=X+444|0;T=X+432|0;S=X+420|0;U=X+408|0;I=X+404|0;Q=X+400|0;c[M>>2]=n;c[W>>2]=N;c[W+4>>2]=185;c[P>>2]=N;c[J>>2]=N+400;c[R>>2]=0;c[R+4>>2]=0;c[R+8>>2]=0;n=0;while(1){if((n|0)==3)break;c[R+(n<<2)>>2]=0;n=n+1|0}c[V>>2]=0;c[V+4>>2]=0;c[V+8>>2]=0;n=0;while(1){if((n|0)==3)break;c[V+(n<<2)>>2]=0;n=n+1|0}c[T>>2]=0;c[T+4>>2]=0;c[T+8>>2]=0;n=0;while(1){if((n|0)==3)break;c[T+(n<<2)>>2]=0;n=n+1|0}c[S>>2]=0;c[S+4>>2]=0;c[S+8>>2]=0;n=0;while(1){if((n|0)==3)break;c[S+(n<<2)>>2]=0;n=n+1|0}c[U>>2]=0;c[U+4>>2]=0;c[U+8>>2]=0;n=0;while(1){if((n|0)==3)break;c[U+(n<<2)>>2]=0;n=n+1|0}bz(f,g,K,H,L,R,V,T,S,I);c[m>>2]=c[l>>2];B=T+8+3|0;E=T+4|0;C=S+8+3|0;F=S+4|0;D=R+11|0;G=R+4|0;A=(h&512|0)!=0;v=V+8+3|0;z=K+3|0;x=V+4|0;w=U+8+3|0;y=U+4|0;u=0;N=0;a:while(1){if(u>>>0>=4){O=239;break}n=c[b>>2]|0;do if(n){f=c[n+12>>2]|0;if((f|0)==(c[n+16>>2]|0))n=ma[c[(c[n>>2]|0)+36>>2]&127](n)|0;else n=Fs(c[f>>2]|0)|0;if(kt(n,Es()|0)|0){c[b>>2]=0;g=1;break}else{g=(c[b>>2]|0)==0;break}}else g=1;while(0);f=c[e>>2]|0;do if(f){n=c[f+12>>2]|0;if((n|0)==(c[f+16>>2]|0))n=ma[c[(c[f>>2]|0)+36>>2]&127](f)|0;else n=Fs(c[n>>2]|0)|0;if(!(kt(n,Es()|0)|0))if(g){t=f;break}else{O=239;break a}else{c[e>>2]=0;O=31;break}}else O=31;while(0);if((O|0)==31){O=0;if(g){O=239;break}else t=0}b:do switch(a[K+u>>0]|0){case 1:{if((u|0)==3)n=N;else{n=c[b>>2]|0;f=c[n+12>>2]|0;if((f|0)==(c[n+16>>2]|0))n=ma[c[(c[n>>2]|0)+36>>2]&127](n)|0;else n=Fs(c[f>>2]|0)|0;if(!(pa[c[(c[k>>2]|0)+12>>2]&31](k,8192,n)|0)){O=44;break a}n=c[b>>2]|0;g=n+12|0;f=c[g>>2]|0;if((f|0)==(c[n+16>>2]|0))n=ma[c[(c[n>>2]|0)+40>>2]&127](n)|0;else{c[g>>2]=f+4;n=Fs(c[f>>2]|0)|0}gD(U,n);O=46}break}case 0:{if((u|0)==3)n=N;else O=46;break}case 3:{n=a[B>>0]|0;n=n<<24>>24<0?c[E>>2]|0:n&255;o=a[C>>0]|0;o=o<<24>>24<0?c[F>>2]|0:o&255;if((n|0)==(0-o|0))n=N;else{h=(n|0)==0;n=c[b>>2]|0;f=c[n+12>>2]|0;g=(f|0)==(c[n+16>>2]|0);if(h|(o|0)==0){if(g)n=ma[c[(c[n>>2]|0)+36>>2]&127](n)|0;else n=Fs(c[f>>2]|0)|0;if(h){if((n|0)!=(c[((a[C>>0]|0)<0?c[S>>2]|0:S)>>2]|0)){n=N;break b}n=c[b>>2]|0;g=n+12|0;f=c[g>>2]|0;if((f|0)==(c[n+16>>2]|0))ma[c[(c[n>>2]|0)+40>>2]&127](n)|0;else{c[g>>2]=f+4;Fs(c[f>>2]|0)|0}a[j>>0]=1;n=a[C>>0]|0;n=(n<<24>>24<0?c[F>>2]|0:n&255)>>>0>1?S:N;break b}if((n|0)!=(c[((a[B>>0]|0)<0?c[T>>2]|0:T)>>2]|0)){a[j>>0]=1;n=N;break b}n=c[b>>2]|0;g=n+12|0;f=c[g>>2]|0;if((f|0)==(c[n+16>>2]|0))ma[c[(c[n>>2]|0)+40>>2]&127](n)|0;else{c[g>>2]=f+4;Fs(c[f>>2]|0)|0}n=a[B>>0]|0;n=(n<<24>>24<0?c[E>>2]|0:n&255)>>>0>1?T:N;break b}if(g)o=ma[c[(c[n>>2]|0)+36>>2]&127](n)|0;else o=Fs(c[f>>2]|0)|0;n=c[b>>2]|0;g=n+12|0;f=c[g>>2]|0;h=(f|0)==(c[n+16>>2]|0);if((o|0)==(c[((a[B>>0]|0)<0?c[T>>2]|0:T)>>2]|0)){if(h)ma[c[(c[n>>2]|0)+40>>2]&127](n)|0;else{c[g>>2]=f+4;Fs(c[f>>2]|0)|0}n=a[B>>0]|0;n=(n<<24>>24<0?c[E>>2]|0:n&255)>>>0>1?T:N;break b}if(h)n=ma[c[(c[n>>2]|0)+36>>2]&127](n)|0;else n=Fs(c[f>>2]|0)|0;if((n|0)!=(c[((a[C>>0]|0)<0?c[S>>2]|0:S)>>2]|0)){O=103;break a}n=c[b>>2]|0;g=n+12|0;f=c[g>>2]|0;if((f|0)==(c[n+16>>2]|0))ma[c[(c[n>>2]|0)+40>>2]&127](n)|0;else{c[g>>2]=f+4;Fs(c[f>>2]|0)|0}a[j>>0]=1;n=a[C>>0]|0;n=(n<<24>>24<0?c[F>>2]|0:n&255)>>>0>1?S:N}break}case 2:{if(u>>>0<2|(N|0)!=0){f=a[v>>0]|0;n=c[V>>2]|0;g=f<<24>>24<0?n:V;if(u)O=108}else{if(!(A|(u|0)==2&(a[z>>0]|0)!=0)){n=0;break b}f=a[v>>0]|0;n=c[V>>2]|0;g=f<<24>>24<0?n:V;O=108}c:do if((O|0)==108){O=0;if((d[K+(u+-1)>>0]|0)<2){h=f;while(1){s=h<<24>>24<0;f=g;if(((s?n:V)+((s?c[x>>2]|0:h&255)<<2)|0)==(f|0)){f=h;break}if(!(pa[c[(c[k>>2]|0)+12>>2]&31](k,8192,c[f>>2]|0)|0)){O=112;break}h=a[v>>0]|0;n=c[V>>2]|0;g=f+4|0}if((O|0)==112){O=0;f=a[v>>0]|0;n=c[V>>2]|0}h=f<<24>>24<0?n:V;s=h;q=g-s>>2;p=a[w>>0]|0;r=p<<24>>24<0;o=c[y>>2]|0;p=p&255;if(q>>>0>(r?o:p)>>>0)g=s;else{Y=(c[U>>2]|0)+(o<<2)|0;o=U+(p<<2)|0;p=r?Y:o;o=(r?Y:o)+(0-q<<2)|0;while(1){if((o|0)==(p|0))break c;if((c[o>>2]|0)!=(c[h>>2]|0)){g=s;break c}o=o+4|0;h=h+4|0}}}}while(0);h=t;o=g;d:while(1){Y=f<<24>>24<0;if((o|0)==((Y?n:V)+((Y?c[x>>2]|0:f&255)<<2)|0))break;n=c[b>>2]|0;do if(n){f=c[n+12>>2]|0;if((f|0)==(c[n+16>>2]|0))n=ma[c[(c[n>>2]|0)+36>>2]&127](n)|0;else n=Fs(c[f>>2]|0)|0;if(kt(n,Es()|0)|0){c[b>>2]=0;f=1;break}else{f=(c[b>>2]|0)==0;break}}else f=1;while(0);do if(h){n=c[h+12>>2]|0;if((n|0)==(c[h+16>>2]|0))n=ma[c[(c[h>>2]|0)+36>>2]&127](h)|0;else n=Fs(c[n>>2]|0)|0;if(!(kt(n,Es()|0)|0))if(f)break;else break d;else{c[e>>2]=0;O=134;break}}else O=134;while(0);if((O|0)==134){O=0;if(f)break;else h=0}n=c[b>>2]|0;f=c[n+12>>2]|0;if((f|0)==(c[n+16>>2]|0))n=ma[c[(c[n>>2]|0)+36>>2]&127](n)|0;else n=Fs(c[f>>2]|0)|0;if((n|0)!=(c[o>>2]|0))break;n=c[b>>2]|0;g=n+12|0;f=c[g>>2]|0;if((f|0)==(c[n+16>>2]|0))ma[c[(c[n>>2]|0)+40>>2]&127](n)|0;else{c[g>>2]=f+4;Fs(c[f>>2]|0)|0}f=a[v>>0]|0;n=c[V>>2]|0;o=o+4|0}if(A?(Y=a[v>>0]|0,t=Y<<24>>24<0,(o|0)!=((t?c[V>>2]|0:V)+((t?c[x>>2]|0:Y&255)<<2)|0)):0){O=146;break a}else n=N;break}case 4:{h=t;n=t;o=0;e:while(1){f=c[b>>2]|0;do if(f){g=c[f+12>>2]|0;if((g|0)==(c[f+16>>2]|0))f=ma[c[(c[f>>2]|0)+36>>2]&127](f)|0;else f=Fs(c[g>>2]|0)|0;if(kt(f,Es()|0)|0){c[b>>2]=0;g=1;break}else{g=(c[b>>2]|0)==0;break}}else g=1;while(0);do if(h){f=c[h+12>>2]|0;if((f|0)==(c[h+16>>2]|0))f=ma[c[(c[h>>2]|0)+36>>2]&127](h)|0;else f=Fs(c[f>>2]|0)|0;if(!(kt(f,Es()|0)|0))if(g){p=h;break}else{h=n;break e}else{c[e>>2]=0;n=0;O=160;break}}else O=160;while(0);if((O|0)==160){O=0;if(g){h=n;break}else p=0}f=c[b>>2]|0;g=c[f+12>>2]|0;if((g|0)==(c[f+16>>2]|0))g=ma[c[(c[f>>2]|0)+36>>2]&127](f)|0;else g=Fs(c[g>>2]|0)|0;if(pa[c[(c[k>>2]|0)+12>>2]&31](k,2048,g)|0){f=c[m>>2]|0;if((f|0)==(c[M>>2]|0)){cz(l,m,M);f=c[m>>2]|0}c[m>>2]=f+4;c[f>>2]=g;o=o+1|0}else{Y=a[D>>0]|0;if(!((g|0)==(c[L>>2]|0)&(o|0?((Y<<24>>24<0?c[G>>2]|0:Y&255)|0)!=0:0))){h=n;break}f=c[P>>2]|0;if((f|0)==(c[J>>2]|0)){Uy(W,P,J);f=c[P>>2]|0}c[P>>2]=f+4;c[f>>2]=o;o=0}f=c[b>>2]|0;h=f+12|0;g=c[h>>2]|0;if((g|0)==(c[f+16>>2]|0))ma[c[(c[f>>2]|0)+40>>2]&127](f)|0;else{c[h>>2]=g+4;Fs(c[g>>2]|0)|0}h=p}n=c[P>>2]|0;if(o|0?(c[W>>2]|0)!=(n|0):0){if((n|0)==(c[J>>2]|0)){Uy(W,P,J);n=c[P>>2]|0}c[P>>2]=n+4;c[n>>2]=o}f:do if((c[I>>2]|0)>0){n=c[b>>2]|0;do if(n){f=c[n+12>>2]|0;if((f|0)==(c[n+16>>2]|0))n=ma[c[(c[n>>2]|0)+36>>2]&127](n)|0;else n=Fs(c[f>>2]|0)|0;if(kt(n,Es()|0)|0){c[b>>2]=0;f=1;break}else{f=(c[b>>2]|0)==0;break}}else f=1;while(0);do if(h){n=c[h+12>>2]|0;if((n|0)==(c[h+16>>2]|0))n=ma[c[(c[h>>2]|0)+36>>2]&127](h)|0;else n=Fs(c[n>>2]|0)|0;if(!(kt(n,Es()|0)|0))if(f)break;else{O=201;break a}else{c[e>>2]=0;O=195;break}}else O=195;while(0);if((O|0)==195){O=0;if(f){O=201;break a}else h=0}n=c[b>>2]|0;f=c[n+12>>2]|0;if((f|0)==(c[n+16>>2]|0))n=ma[c[(c[n>>2]|0)+36>>2]&127](n)|0;else n=Fs(c[f>>2]|0)|0;if((n|0)!=(c[H>>2]|0)){O=201;break a}n=c[b>>2]|0;g=n+12|0;f=c[g>>2]|0;if((f|0)==(c[n+16>>2]|0))ma[c[(c[n>>2]|0)+40>>2]&127](n)|0;else{c[g>>2]=f+4;Fs(c[f>>2]|0)|0}g=h;while(1){if((c[I>>2]|0)<=0)break f;n=c[b>>2]|0;do if(n){f=c[n+12>>2]|0;if((f|0)==(c[n+16>>2]|0))n=ma[c[(c[n>>2]|0)+36>>2]&127](n)|0;else n=Fs(c[f>>2]|0)|0;if(kt(n,Es()|0)|0){c[b>>2]=0;f=1;break}else{f=(c[b>>2]|0)==0;break}}else f=1;while(0);do if(g){n=c[g+12>>2]|0;if((n|0)==(c[g+16>>2]|0))n=ma[c[(c[g>>2]|0)+36>>2]&127](g)|0;else n=Fs(c[n>>2]|0)|0;if(!(kt(n,Es()|0)|0))if(f){h=g;break}else{O=226;break a}else{c[e>>2]=0;O=220;break}}else O=220;while(0);if((O|0)==220){O=0;if(f){O=226;break a}else h=0}n=c[b>>2]|0;f=c[n+12>>2]|0;if((f|0)==(c[n+16>>2]|0))n=ma[c[(c[n>>2]|0)+36>>2]&127](n)|0;else n=Fs(c[f>>2]|0)|0;if(!(pa[c[(c[k>>2]|0)+12>>2]&31](k,2048,n)|0)){O=226;break a}if((c[m>>2]|0)==(c[M>>2]|0))cz(l,m,M);n=c[b>>2]|0;f=c[n+12>>2]|0;if((f|0)==(c[n+16>>2]|0))n=ma[c[(c[n>>2]|0)+36>>2]&127](n)|0;else n=Fs(c[f>>2]|0)|0;g=c[m>>2]|0;c[m>>2]=g+4;c[g>>2]=n;c[I>>2]=(c[I>>2]|0)+-1;n=c[b>>2]|0;g=n+12|0;f=c[g>>2]|0;if((f|0)==(c[n+16>>2]|0))ma[c[(c[n>>2]|0)+40>>2]&127](n)|0;else{c[g>>2]=f+4;Fs(c[f>>2]|0)|0}g=h}}while(0);if((c[m>>2]|0)==(c[l>>2]|0)){O=237;break a}else n=N;break}default:n=N}while(0);g:do if((O|0)==46){O=0;g=t;while(1){n=c[b>>2]|0;do if(n){f=c[n+12>>2]|0;if((f|0)==(c[n+16>>2]|0))n=ma[c[(c[n>>2]|0)+36>>2]&127](n)|0;else n=Fs(c[f>>2]|0)|0;if(kt(n,Es()|0)|0){c[b>>2]=0;f=1;break}else{f=(c[b>>2]|0)==0;break}}else f=1;while(0);do if(g){n=c[g+12>>2]|0;if((n|0)==(c[g+16>>2]|0))n=ma[c[(c[g>>2]|0)+36>>2]&127](g)|0;else n=Fs(c[n>>2]|0)|0;if(!(kt(n,Es()|0)|0))if(f){h=g;break}else{n=N;break g}else{c[e>>2]=0;O=60;break}}else O=60;while(0);if((O|0)==60){O=0;if(f){n=N;break g}else h=0}n=c[b>>2]|0;f=c[n+12>>2]|0;if((f|0)==(c[n+16>>2]|0))n=ma[c[(c[n>>2]|0)+36>>2]&127](n)|0;else n=Fs(c[f>>2]|0)|0;if(!(pa[c[(c[k>>2]|0)+12>>2]&31](k,8192,n)|0)){n=N;break g}n=c[b>>2]|0;g=n+12|0;f=c[g>>2]|0;if((f|0)==(c[n+16>>2]|0))n=ma[c[(c[n>>2]|0)+40>>2]&127](n)|0;else{c[g>>2]=f+4;n=Fs(c[f>>2]|0)|0}gD(U,n);g=h}}while(0);u=u+1|0;N=n}h:do if((O|0)==44){c[i>>2]=c[i>>2]|4;f=0}else if((O|0)==103){c[i>>2]=c[i>>2]|4;f=0}else if((O|0)==146){c[i>>2]=c[i>>2]|4;f=0}else if((O|0)==201){c[i>>2]=c[i>>2]|4;f=0}else if((O|0)==226){c[i>>2]=c[i>>2]|4;f=0}else if((O|0)==237){c[i>>2]=c[i>>2]|4;f=0}else if((O|0)==239){i:do if(N|0){o=N+8+3|0;p=N+4|0;h=1;j:while(1){n=a[o>>0]|0;if(n<<24>>24<0)n=c[p>>2]|0;else n=n&255;if(h>>>0>=n>>>0)break i;n=c[b>>2]|0;do if(n){f=c[n+12>>2]|0;if((f|0)==(c[n+16>>2]|0))n=ma[c[(c[n>>2]|0)+36>>2]&127](n)|0;else n=Fs(c[f>>2]|0)|0;if(kt(n,Es()|0)|0){c[b>>2]=0;g=1;break}else{g=(c[b>>2]|0)==0;break}}else g=1;while(0);n=c[e>>2]|0;do if(n){f=c[n+12>>2]|0;if((f|0)==(c[n+16>>2]|0))n=ma[c[(c[n>>2]|0)+36>>2]&127](n)|0;else n=Fs(c[f>>2]|0)|0;if(!(kt(n,Es()|0)|0))if(g)break;else break j;else{c[e>>2]=0;O=258;break}}else O=258;while(0);if((O|0)==258?(O=0,g):0)break;n=c[b>>2]|0;f=c[n+12>>2]|0;if((f|0)==(c[n+16>>2]|0))f=ma[c[(c[n>>2]|0)+36>>2]&127](n)|0;else f=Fs(c[f>>2]|0)|0;if((a[o>>0]|0)<0)n=c[N>>2]|0;else n=N;if((f|0)!=(c[n+(h<<2)>>2]|0))break;n=c[b>>2]|0;g=n+12|0;f=c[g>>2]|0;if((f|0)==(c[n+16>>2]|0))ma[c[(c[n>>2]|0)+40>>2]&127](n)|0;else{c[g>>2]=f+4;Fs(c[f>>2]|0)|0}h=h+1|0}c[i>>2]=c[i>>2]|4;f=0;break h}while(0);f=c[W>>2]|0;n=c[P>>2]|0;if((f|0)!=(n|0)){c[Q>>2]=0;Qu(R,f,n,Q);if(!(c[Q>>2]|0)){f=1;break}else{c[i>>2]=c[i>>2]|4;f=0;break}}else f=1}while(0);$C(U);$C(S);$C(T);$C(V);OC(R);n=c[W>>2]|0;c[W>>2]=0;if(n|0)ya[c[W+4>>2]&255](n);ja=X;return f|0}function _y(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=ja;ja=ja+16|0;l=n;f=b+8|0;m=f+3|0;h=a[m>>0]|0;g=h<<24>>24<0;if(g){i=(c[f>>2]&2147483647)+-1|0;j=c[b+4>>2]|0}else{i=1;j=h&255}f=e-d|0;k=f>>2;do if(f|0){if(g){g=c[b>>2]|0;f=c[b+4>>2]|0}else{g=b;f=h&255}if($y(d,g,g+(f<<2)|0)|0){c[l>>2]=0;c[l+4>>2]=0;c[l+8>>2]=0;az(l,d,e);m=a[l+8+3>>0]|0;e=m<<24>>24<0;fD(b,e?c[l>>2]|0:l,e?c[l+4>>2]|0:m&255)|0;$C(l);break}if((i-j|0)>>>0<k>>>0)eD(b,i,j+k-i|0,j,j,0,0);if((a[m>>0]|0)<0)f=c[b>>2]|0;else f=b;f=f+(j<<2)|0;while(1){if((d|0)==(e|0))break;nu(f,d);d=d+4|0;f=f+4|0}c[l>>2]=0;nu(f,l);f=j+k|0;if((a[m>>0]|0)<0){c[b+4>>2]=f;break}else{a[m>>0]=f;break}}while(0);ja=n;return b|0}function $y(a,b,c){a=a|0;b=b|0;c=c|0;return b>>>0<=a>>>0&a>>>0<c>>>0|0}function az(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;j=ja;ja=ja+16|0;i=j;h=e-d>>2;if(h>>>0>1073741807)JC(b);do if(h>>>0>=2){g=h+4&-4;if(g>>>0>1073741823)S();else{f=Mr(g<<2)|0;c[b>>2]=f;c[b+8>>2]=g|-2147483648;c[b+4>>2]=h;break}}else{a[b+8+3>>0]=h;f=b}while(0);while(1){if((d|0)==(e|0))break;nu(f,d);d=d+4|0;f=f+4|0}c[i>>2]=0;nu(f,i);ja=j;return}function bz(b,d,e,f,g,h,i,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0;p=ja;ja=ja+16|0;n=p+12|0;o=p;if(b){m=Bu(d,108596)|0;za[c[(c[m>>2]|0)+44>>2]&127](n,m);b=c[n>>2]|0;a[e>>0]=b;a[e+1>>0]=b>>8;a[e+2>>0]=b>>16;a[e+3>>0]=b>>24;za[c[(c[m>>2]|0)+32>>2]&127](o,m);b=k+8|0;d=b+3|0;if((a[d>>0]|0)<0){e=c[k>>2]|0;c[n>>2]=0;nu(e,n);c[k+4>>2]=0;if((a[d>>0]|0)<0){vb(c[k>>2]|0,c[b>>2]<<2);c[b>>2]=0}}else{c[n>>2]=0;nu(k,n);a[d>>0]=0};c[k>>2]=c[o>>2];c[k+4>>2]=c[o+4>>2];c[k+8>>2]=c[o+8>>2];b=0;while(1){if((b|0)==3)break;c[o+(b<<2)>>2]=0;b=b+1|0}$C(o);za[c[(c[m>>2]|0)+28>>2]&127](o,m);b=j+8|0;d=b+3|0;if((a[d>>0]|0)<0){k=c[j>>2]|0;c[n>>2]=0;nu(k,n);c[j+4>>2]=0;if((a[d>>0]|0)<0){vb(c[j>>2]|0,c[b>>2]<<2);c[b>>2]=0}}else{c[n>>2]=0;nu(j,n);a[d>>0]=0};c[j>>2]=c[o>>2];c[j+4>>2]=c[o+4>>2];c[j+8>>2]=c[o+8>>2];b=0;while(1){if((b|0)==3)break;c[o+(b<<2)>>2]=0;b=b+1|0}$C(o);c[f>>2]=ma[c[(c[m>>2]|0)+12>>2]&127](m)|0;c[g>>2]=ma[c[(c[m>>2]|0)+16>>2]&127](m)|0;za[c[(c[m>>2]|0)+20>>2]&127](o,m);b=h+11|0;if((a[b>>0]|0)<0){g=c[h>>2]|0;a[n>>0]=0;Ua(g,n);c[h+4>>2]=0;if((a[b>>0]|0)<0){g=h+8|0;vb(c[h>>2]|0,c[g>>2]&2147483647);c[g>>2]=0}}else{a[n>>0]=0;Ua(h,n);a[b>>0]=0};c[h>>2]=c[o>>2];c[h+4>>2]=c[o+4>>2];c[h+8>>2]=c[o+8>>2];b=0;while(1){if((b|0)==3)break;c[o+(b<<2)>>2]=0;b=b+1|0}OC(o);za[c[(c[m>>2]|0)+24>>2]&127](o,m);b=i+8|0;d=b+3|0;if((a[d>>0]|0)<0){h=c[i>>2]|0;c[n>>2]=0;nu(h,n);c[i+4>>2]=0;if((a[d>>0]|0)<0){vb(c[i>>2]|0,c[b>>2]<<2);c[b>>2]=0}}else{c[n>>2]=0;nu(i,n);a[d>>0]=0};c[i>>2]=c[o>>2];c[i+4>>2]=c[o+4>>2];c[i+8>>2]=c[o+8>>2];b=0;while(1){if((b|0)==3)break;c[o+(b<<2)>>2]=0;b=b+1|0}$C(o);b=ma[c[(c[m>>2]|0)+36>>2]&127](m)|0}else{m=Bu(d,108588)|0;za[c[(c[m>>2]|0)+44>>2]&127](n,m);b=c[n>>2]|0;a[e>>0]=b;a[e+1>>0]=b>>8;a[e+2>>0]=b>>16;a[e+3>>0]=b>>24;za[c[(c[m>>2]|0)+32>>2]&127](o,m);b=k+8|0;d=b+3|0;if((a[d>>0]|0)<0){e=c[k>>2]|0;c[n>>2]=0;nu(e,n);c[k+4>>2]=0;if((a[d>>0]|0)<0){vb(c[k>>2]|0,c[b>>2]<<2);c[b>>2]=0}}else{c[n>>2]=0;nu(k,n);a[d>>0]=0};c[k>>2]=c[o>>2];c[k+4>>2]=c[o+4>>2];c[k+8>>2]=c[o+8>>2];b=0;while(1){if((b|0)==3)break;c[o+(b<<2)>>2]=0;b=b+1|0}$C(o);za[c[(c[m>>2]|0)+28>>2]&127](o,m);b=j+8|0;d=b+3|0;if((a[d>>0]|0)<0){k=c[j>>2]|0;c[n>>2]=0;nu(k,n);c[j+4>>2]=0;if((a[d>>0]|0)<0){vb(c[j>>2]|0,c[b>>2]<<2);c[b>>2]=0}}else{c[n>>2]=0;nu(j,n);a[d>>0]=0};c[j>>2]=c[o>>2];c[j+4>>2]=c[o+4>>2];c[j+8>>2]=c[o+8>>2];b=0;while(1){if((b|0)==3)break;c[o+(b<<2)>>2]=0;b=b+1|0}$C(o);c[f>>2]=ma[c[(c[m>>2]|0)+12>>2]&127](m)|0;c[g>>2]=ma[c[(c[m>>2]|0)+16>>2]&127](m)|0;za[c[(c[m>>2]|0)+20>>2]&127](o,m);b=h+11|0;if((a[b>>0]|0)<0){g=c[h>>2]|0;a[n>>0]=0;Ua(g,n);c[h+4>>2]=0;if((a[b>>0]|0)<0){g=h+8|0;vb(c[h>>2]|0,c[g>>2]&2147483647);c[g>>2]=0}}else{a[n>>0]=0;Ua(h,n);a[b>>0]=0};c[h>>2]=c[o>>2];c[h+4>>2]=c[o+4>>2];c[h+8>>2]=c[o+8>>2];b=0;while(1){if((b|0)==3)break;c[o+(b<<2)>>2]=0;b=b+1|0}OC(o);za[c[(c[m>>2]|0)+24>>2]&127](o,m);b=i+8|0;d=b+3|0;if((a[d>>0]|0)<0){h=c[i>>2]|0;c[n>>2]=0;nu(h,n);c[i+4>>2]=0;if((a[d>>0]|0)<0){vb(c[i>>2]|0,c[b>>2]<<2);c[b>>2]=0}}else{c[n>>2]=0;nu(i,n);a[d>>0]=0};c[i>>2]=c[o>>2];c[i+4>>2]=c[o+4>>2];c[i+8>>2]=c[o+8>>2];b=0;while(1){if((b|0)==3)break;c[o+(b<<2)>>2]=0;b=b+1|0}$C(o);b=ma[c[(c[m>>2]|0)+36>>2]&127](m)|0}c[l>>2]=b;ja=p;return}function cz(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;h=a+4|0;f=(c[h>>2]|0)!=185;e=c[a>>2]|0;i=e;j=(c[d>>2]|0)-i|0;g=j<<1;g=j>>>0<2147483647?((g|0)==0?4:g):-1;i=(c[b>>2]|0)-i>>2;e=kD(f?e:0,g)|0;if(!e)FC();if(!f){f=c[a>>2]|0;c[a>>2]=e;if(f){ya[c[h>>2]&255](f);e=c[a>>2]|0}}else c[a>>2]=e;c[h>>2]=186;c[b>>2]=e+(i<<2);c[d>>2]=(c[a>>2]|0)+(g>>>2<<2);return}function dz(a){a=a|0;gu(a);return}function ez(a){a=a|0;gu(a);Gf(a);return}function fz(b,d,e,f,h,i){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=+i;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;E=ja;ja=ja+416|0;w=E+336|0;k=E+328|0;j=E+224|0;l=E+400|0;b=E+112|0;z=E+396|0;t=E+408|0;q=E+405|0;u=E+404|0;y=E+384|0;D=E+372|0;C=E+360|0;o=E+356|0;p=E;s=E+352|0;r=E+348|0;v=E+344|0;c[l>>2]=j;g[w>>3]=i;j=ue(j,100,37122,w)|0;if(j>>>0>99){j=Eu()|0;g[k>>3]=i;j=_v(l,j,37122,k)|0;b=c[l>>2]|0;if(!b)FC();k=iD(j)|0;if(!k)FC();else{x=k;F=k;G=b;B=j}}else{x=b;F=0;G=0;B=j}jt(z,f);n=Bu(z,108348)|0;m=c[l>>2]|0;qa[c[(c[n>>2]|0)+32>>2]&15](n,m,m+B|0,x)|0;if(!B)m=0;else m=(a[c[l>>2]>>0]|0)==45;c[y>>2]=0;c[y+4>>2]=0;c[y+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[y+(b<<2)>>2]=0;b=b+1|0}c[D>>2]=0;c[D+4>>2]=0;c[D+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[D+(b<<2)>>2]=0;b=b+1|0}c[C>>2]=0;c[C+4>>2]=0;c[C+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[C+(b<<2)>>2]=0;b=b+1|0}hz(e,m,z,t,q,u,y,D,C,o);l=c[o>>2]|0;if((B|0)>(l|0)){j=a[C+11>>0]|0;k=a[D+11>>0]|0;b=l+1+(B-l<<1)|0;j=j<<24>>24<0?c[C+4>>2]|0:j&255;k=k<<24>>24<0?c[D+4>>2]|0:k&255}else{j=a[C+11>>0]|0;k=a[D+11>>0]|0;b=l+2|0;j=j<<24>>24<0?c[C+4>>2]|0:j&255;k=k<<24>>24<0?c[D+4>>2]|0:k&255}b=b+j+k|0;if(b>>>0>100){b=iD(b)|0;if(!b)FC();else{H=b;A=b}}else{H=0;A=p}iz(A,s,r,c[f+4>>2]|0,x,x+B|0,n,m,t,a[q>>0]|0,a[u>>0]|0,y,D,C,l);c[v>>2]=c[d>>2];d=c[s>>2]|0;b=c[r>>2]|0;c[w>>2]=c[v>>2];b=Ya(w,A,d,b,f,h)|0;if(H|0)jD(H);OC(C);OC(D);OC(y);Cu(z);if(F|0)jD(F);if(G|0)jD(G);ja=E;return b|0}function gz(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;C=ja;ja=ja+176|0;v=C+156|0;y=C+152|0;s=C+164|0;p=C+161|0;t=C+160|0;x=C+140|0;B=C+128|0;A=C+116|0;l=C+112|0;o=C;r=C+108|0;q=C+104|0;u=C+100|0;jt(y,f);w=Bu(y,108348)|0;i=h+11|0;n=a[i>>0]|0;b=n<<24>>24<0;j=h+4|0;if(!((b?c[j>>2]|0:n&255)|0))n=0;else{n=a[(b?c[h>>2]|0:h)>>0]|0;n=n<<24>>24==(oa[c[(c[w>>2]|0)+28>>2]&63](w,45)|0)<<24>>24};c[x>>2]=0;c[x+4>>2]=0;c[x+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[x+(b<<2)>>2]=0;b=b+1|0}c[B>>2]=0;c[B+4>>2]=0;c[B+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[B+(b<<2)>>2]=0;b=b+1|0}c[A>>2]=0;c[A+4>>2]=0;c[A+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[A+(b<<2)>>2]=0;b=b+1|0}hz(e,n,y,s,p,t,x,B,A,l);k=a[i>>0]|0;m=k<<24>>24<0;k=m?c[j>>2]|0:k&255;j=c[l>>2]|0;if((k|0)>(j|0)){e=a[A+11>>0]|0;i=a[B+11>>0]|0;b=j+1+(k-j<<1)|0;i=i<<24>>24<0?c[B+4>>2]|0:i&255;e=e<<24>>24<0?c[A+4>>2]|0:e&255}else{e=a[A+11>>0]|0;i=a[B+11>>0]|0;b=j+2|0;i=i<<24>>24<0?c[B+4>>2]|0:i&255;e=e<<24>>24<0?c[A+4>>2]|0:e&255}b=b+e+i|0;if(b>>>0>100){b=iD(b)|0;if(!b)FC();else{D=b;z=b}}else{D=0;z=o}b=m?c[h>>2]|0:h;iz(z,r,q,c[f+4>>2]|0,b,b+k|0,w,n,s,a[p>>0]|0,a[t>>0]|0,x,B,A,j);c[u>>2]=c[d>>2];d=c[r>>2]|0;b=c[q>>2]|0;c[v>>2]=c[u>>2];b=Ya(v,z,d,b,f,g)|0;if(D|0)jD(D);OC(A);OC(B);OC(x);Cu(y);ja=C;return b|0}function hz(b,d,e,f,g,h,i,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0;p=ja;ja=ja+16|0;n=p+12|0;o=p;if(b){m=Bu(e,108580)|0;if(d){za[c[(c[m>>2]|0)+44>>2]&127](n,m);b=c[n>>2]|0;a[f>>0]=b;a[f+1>>0]=b>>8;a[f+2>>0]=b>>16;a[f+3>>0]=b>>24;za[c[(c[m>>2]|0)+32>>2]&127](o,m);b=k+11|0;if((a[b>>0]|0)<0){f=c[k>>2]|0;a[n>>0]=0;Ua(f,n);c[k+4>>2]=0;if((a[b>>0]|0)<0){f=k+8|0;vb(c[k>>2]|0,c[f>>2]&2147483647);c[f>>2]=0}}else{a[n>>0]=0;Ua(k,n);a[b>>0]=0};c[k>>2]=c[o>>2];c[k+4>>2]=c[o+4>>2];c[k+8>>2]=c[o+8>>2];b=0;while(1){if((b|0)==3)break;c[o+(b<<2)>>2]=0;b=b+1|0}OC(o);e=m}else{za[c[(c[m>>2]|0)+40>>2]&127](n,m);b=c[n>>2]|0;a[f>>0]=b;a[f+1>>0]=b>>8;a[f+2>>0]=b>>16;a[f+3>>0]=b>>24;za[c[(c[m>>2]|0)+28>>2]&127](o,m);b=k+11|0;if((a[b>>0]|0)<0){f=c[k>>2]|0;a[n>>0]=0;Ua(f,n);c[k+4>>2]=0;if((a[b>>0]|0)<0){f=k+8|0;vb(c[k>>2]|0,c[f>>2]&2147483647);c[f>>2]=0}}else{a[n>>0]=0;Ua(k,n);a[b>>0]=0};c[k>>2]=c[o>>2];c[k+4>>2]=c[o+4>>2];c[k+8>>2]=c[o+8>>2];b=0;while(1){if((b|0)==3)break;c[o+(b<<2)>>2]=0;b=b+1|0}OC(o);e=m}a[g>>0]=ma[c[(c[m>>2]|0)+12>>2]&127](m)|0;a[h>>0]=ma[c[(c[m>>2]|0)+16>>2]&127](m)|0;za[c[(c[e>>2]|0)+20>>2]&127](o,m);b=i+11|0;if((a[b>>0]|0)<0){h=c[i>>2]|0;a[n>>0]=0;Ua(h,n);c[i+4>>2]=0;if((a[b>>0]|0)<0){h=i+8|0;vb(c[i>>2]|0,c[h>>2]&2147483647);c[h>>2]=0}}else{a[n>>0]=0;Ua(i,n);a[b>>0]=0};c[i>>2]=c[o>>2];c[i+4>>2]=c[o+4>>2];c[i+8>>2]=c[o+8>>2];b=0;while(1){if((b|0)==3)break;c[o+(b<<2)>>2]=0;b=b+1|0}OC(o);za[c[(c[e>>2]|0)+24>>2]&127](o,m);b=j+11|0;if((a[b>>0]|0)<0){i=c[j>>2]|0;a[n>>0]=0;Ua(i,n);c[j+4>>2]=0;if((a[b>>0]|0)<0){n=j+8|0;vb(c[j>>2]|0,c[n>>2]&2147483647);c[n>>2]=0}}else{a[n>>0]=0;Ua(j,n);a[b>>0]=0};c[j>>2]=c[o>>2];c[j+4>>2]=c[o+4>>2];c[j+8>>2]=c[o+8>>2];b=0;while(1){if((b|0)==3)break;c[o+(b<<2)>>2]=0;b=b+1|0}OC(o);b=ma[c[(c[m>>2]|0)+36>>2]&127](m)|0}else{m=Bu(e,108572)|0;if(d){za[c[(c[m>>2]|0)+44>>2]&127](n,m);b=c[n>>2]|0;a[f>>0]=b;a[f+1>>0]=b>>8;a[f+2>>0]=b>>16;a[f+3>>0]=b>>24;za[c[(c[m>>2]|0)+32>>2]&127](o,m);b=k+11|0;if((a[b>>0]|0)<0){f=c[k>>2]|0;a[n>>0]=0;Ua(f,n);c[k+4>>2]=0;if((a[b>>0]|0)<0){f=k+8|0;vb(c[k>>2]|0,c[f>>2]&2147483647);c[f>>2]=0}}else{a[n>>0]=0;Ua(k,n);a[b>>0]=0};c[k>>2]=c[o>>2];c[k+4>>2]=c[o+4>>2];c[k+8>>2]=c[o+8>>2];b=0;while(1){if((b|0)==3)break;c[o+(b<<2)>>2]=0;b=b+1|0}OC(o);e=m}else{za[c[(c[m>>2]|0)+40>>2]&127](n,m);b=c[n>>2]|0;a[f>>0]=b;a[f+1>>0]=b>>8;a[f+2>>0]=b>>16;a[f+3>>0]=b>>24;za[c[(c[m>>2]|0)+28>>2]&127](o,m);b=k+11|0;if((a[b>>0]|0)<0){f=c[k>>2]|0;a[n>>0]=0;Ua(f,n);c[k+4>>2]=0;if((a[b>>0]|0)<0){f=k+8|0;vb(c[k>>2]|0,c[f>>2]&2147483647);c[f>>2]=0}}else{a[n>>0]=0;Ua(k,n);a[b>>0]=0};c[k>>2]=c[o>>2];c[k+4>>2]=c[o+4>>2];c[k+8>>2]=c[o+8>>2];b=0;while(1){if((b|0)==3)break;c[o+(b<<2)>>2]=0;b=b+1|0}OC(o);e=m}a[g>>0]=ma[c[(c[m>>2]|0)+12>>2]&127](m)|0;a[h>>0]=ma[c[(c[m>>2]|0)+16>>2]&127](m)|0;za[c[(c[e>>2]|0)+20>>2]&127](o,m);b=i+11|0;if((a[b>>0]|0)<0){h=c[i>>2]|0;a[n>>0]=0;Ua(h,n);c[i+4>>2]=0;if((a[b>>0]|0)<0){h=i+8|0;vb(c[i>>2]|0,c[h>>2]&2147483647);c[h>>2]=0}}else{a[n>>0]=0;Ua(i,n);a[b>>0]=0};c[i>>2]=c[o>>2];c[i+4>>2]=c[o+4>>2];c[i+8>>2]=c[o+8>>2];b=0;while(1){if((b|0)==3)break;c[o+(b<<2)>>2]=0;b=b+1|0}OC(o);za[c[(c[e>>2]|0)+24>>2]&127](o,m);b=j+11|0;if((a[b>>0]|0)<0){i=c[j>>2]|0;a[n>>0]=0;Ua(i,n);c[j+4>>2]=0;if((a[b>>0]|0)<0){n=j+8|0;vb(c[j>>2]|0,c[n>>2]&2147483647);c[n>>2]=0}}else{a[n>>0]=0;Ua(j,n);a[b>>0]=0};c[j>>2]=c[o>>2];c[j+4>>2]=c[o+4>>2];c[j+8>>2]=c[o+8>>2];b=0;while(1){if((b|0)==3)break;c[o+(b<<2)>>2]=0;b=b+1|0}OC(o);b=ma[c[(c[m>>2]|0)+36>>2]&127](m)|0}c[l>>2]=b;ja=p;return}function iz(d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;var s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;c[f>>2]=d;z=q+11|0;G=q+4|0;A=p+11|0;C=p+4|0;F=(g&512|0)==0;D=j+8|0;E=(r|0)>0;y=o+11|0;B=o+4|0;x=0;while(1){if((x|0)==4)break;a:do switch(a[l+x>>0]|0){case 0:{c[e>>2]=c[f>>2];break}case 1:{c[e>>2]=c[f>>2];v=oa[c[(c[j>>2]|0)+28>>2]&63](j,32)|0;w=c[f>>2]|0;c[f>>2]=w+1;a[w>>0]=v;break}case 3:{w=a[z>>0]|0;s=w<<24>>24<0;if((s?c[G>>2]|0:w&255)|0){v=a[(s?c[q>>2]|0:q)>>0]|0;w=c[f>>2]|0;c[f>>2]=w+1;a[w>>0]=v}break}case 2:{s=a[A>>0]|0;t=s<<24>>24<0;s=t?c[C>>2]|0:s&255;if(!(F|(s|0)==0)){u=t?c[p>>2]|0:p;t=u+s|0;s=c[f>>2]|0;while(1){if((u|0)==(t|0))break;a[s>>0]=a[u>>0]|0;s=s+1|0;u=u+1|0}c[f>>2]=s}break}case 4:{w=c[f>>2]|0;h=k?h+1|0:h;t=h;while(1){if(t>>>0>=i>>>0)break;s=a[t>>0]|0;if(s<<24>>24<=-1)break;if(!(b[(c[D>>2]|0)+(s<<24>>24<<1)>>1]&2048))break;t=t+1|0}if(E){u=r;while(1){s=(u|0)>0;if(!(t>>>0>h>>>0&s))break;v=t+-1|0;H=a[v>>0]|0;s=c[f>>2]|0;c[f>>2]=s+1;a[s>>0]=H;t=v;u=u+-1|0}if(s)v=oa[c[(c[j>>2]|0)+28>>2]&63](j,48)|0;else v=0;while(1){s=c[f>>2]|0;c[f>>2]=s+1;if((u|0)<=0)break;a[s>>0]=v;u=u+-1|0}a[s>>0]=m}b:do if((t|0)==(h|0)){v=oa[c[(c[j>>2]|0)+28>>2]&63](j,48)|0;H=c[f>>2]|0;c[f>>2]=H+1;a[H>>0]=v}else{H=a[y>>0]|0;s=H<<24>>24<0;if(!((s?c[B>>2]|0:H&255)|0))s=-1;else s=a[(s?c[o>>2]|0:o)>>0]|0;u=0;v=0;while(1){if((t|0)==(h|0))break b;if((v|0)==(s|0)){H=c[f>>2]|0;c[f>>2]=H+1;a[H>>0]=n;u=u+1|0;H=a[y>>0]|0;s=H<<24>>24<0;if(u>>>0<(s?c[B>>2]|0:H&255)>>>0){s=a[(s?c[o>>2]|0:o)+u>>0]|0;s=s<<24>>24==127?-1:s<<24>>24;v=0}else{s=v;v=0}}H=t+-1|0;J=a[H>>0]|0;I=c[f>>2]|0;c[f>>2]=I+1;a[I>>0]=J;t=H;v=v+1|0}}while(0);s=c[f>>2]|0;if((w|0)!=(s|0)){t=w;while(1){s=s+-1|0;if(t>>>0>=s>>>0)break a;J=a[t>>0]|0;a[t>>0]=a[s>>0]|0;a[s>>0]=J;t=t+1|0}}break}default:{}}while(0);x=x+1|0}h=a[z>>0]|0;s=h<<24>>24<0;h=s?c[G>>2]|0:h&255;if(h>>>0>1){s=s?c[q>>2]|0:q;t=s+h|0;h=s;s=c[f>>2]|0;while(1){h=h+1|0;if((h|0)==(t|0))break;a[s>>0]=a[h>>0]|0;s=s+1|0}c[f>>2]=s}switch((g&176)<<24>>24){case 32:{c[e>>2]=c[f>>2];break}case 16:break;default:c[e>>2]=d}return}function jz(a){a=a|0;gu(a);return}function kz(a){a=a|0;gu(a);Gf(a);return}function lz(b,d,e,f,h,i){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=+i;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;E=ja;ja=ja+992|0;w=E+912|0;k=E+904|0;j=E+800|0;l=E+984|0;b=E+400|0;z=E+980|0;t=E+988|0;q=E+976|0;u=E+972|0;y=E+960|0;D=E+948|0;C=E+936|0;o=E+932|0;p=E;s=E+928|0;r=E+924|0;v=E+920|0;c[l>>2]=j;g[w>>3]=i;j=ue(j,100,37122,w)|0;if(j>>>0>99){j=Eu()|0;g[k>>3]=i;j=_v(l,j,37122,k)|0;b=c[l>>2]|0;if(!b)FC();k=iD(j<<2)|0;if(!k)FC();else{x=k;F=k;G=b;B=j}}else{x=b;F=0;G=0;B=j}jt(z,f);n=Bu(z,108380)|0;m=c[l>>2]|0;qa[c[(c[n>>2]|0)+48>>2]&15](n,m,m+B|0,x)|0;if(!B)m=0;else m=(a[c[l>>2]>>0]|0)==45;c[y>>2]=0;c[y+4>>2]=0;c[y+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[y+(b<<2)>>2]=0;b=b+1|0}c[D>>2]=0;c[D+4>>2]=0;c[D+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[D+(b<<2)>>2]=0;b=b+1|0}c[C>>2]=0;c[C+4>>2]=0;c[C+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[C+(b<<2)>>2]=0;b=b+1|0}nz(e,m,z,t,q,u,y,D,C,o);l=c[o>>2]|0;if((B|0)>(l|0)){j=a[C+8+3>>0]|0;k=a[D+8+3>>0]|0;b=l+1+(B-l<<1)|0;j=j<<24>>24<0?c[C+4>>2]|0:j&255;k=k<<24>>24<0?c[D+4>>2]|0:k&255}else{j=a[C+8+3>>0]|0;k=a[D+8+3>>0]|0;b=l+2|0;j=j<<24>>24<0?c[C+4>>2]|0:j&255;k=k<<24>>24<0?c[D+4>>2]|0:k&255}b=b+j+k|0;if(b>>>0>100){b=iD(b<<2)|0;if(!b)FC();else{H=b;A=b}}else{H=0;A=p}oz(A,s,r,c[f+4>>2]|0,x,x+(B<<2)|0,n,m,t,c[q>>2]|0,c[u>>2]|0,y,D,C,l);c[v>>2]=c[d>>2];d=c[s>>2]|0;b=c[r>>2]|0;c[w>>2]=c[v>>2];b=mw(w,A,d,b,f,h)|0;if(H|0)jD(H);$C(C);$C(D);OC(y);Cu(z);if(F|0)jD(F);if(G|0)jD(G);ja=E;return b|0}function mz(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;C=ja;ja=ja+480|0;v=C+464|0;y=C+460|0;s=C+468|0;p=C+456|0;t=C+452|0;x=C+440|0;B=C+428|0;A=C+416|0;l=C+412|0;o=C;r=C+408|0;q=C+404|0;u=C+400|0;jt(y,f);w=Bu(y,108380)|0;i=h+8+3|0;n=a[i>>0]|0;b=n<<24>>24<0;j=h+4|0;if(!((b?c[j>>2]|0:n&255)|0))n=0;else{n=c[(b?c[h>>2]|0:h)>>2]|0;n=(n|0)==(oa[c[(c[w>>2]|0)+44>>2]&63](w,45)|0)};c[x>>2]=0;c[x+4>>2]=0;c[x+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[x+(b<<2)>>2]=0;b=b+1|0}c[B>>2]=0;c[B+4>>2]=0;c[B+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[B+(b<<2)>>2]=0;b=b+1|0}c[A>>2]=0;c[A+4>>2]=0;c[A+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[A+(b<<2)>>2]=0;b=b+1|0}nz(e,n,y,s,p,t,x,B,A,l);k=a[i>>0]|0;m=k<<24>>24<0;k=m?c[j>>2]|0:k&255;j=c[l>>2]|0;if((k|0)>(j|0)){e=a[A+8+3>>0]|0;i=a[B+8+3>>0]|0;b=j+1+(k-j<<1)|0;i=i<<24>>24<0?c[B+4>>2]|0:i&255;e=e<<24>>24<0?c[A+4>>2]|0:e&255}else{e=a[A+8+3>>0]|0;i=a[B+8+3>>0]|0;b=j+2|0;i=i<<24>>24<0?c[B+4>>2]|0:i&255;e=e<<24>>24<0?c[A+4>>2]|0:e&255}b=b+e+i|0;if(b>>>0>100){b=iD(b<<2)|0;if(!b)FC();else{D=b;z=b}}else{D=0;z=o}b=m?c[h>>2]|0:h;oz(z,r,q,c[f+4>>2]|0,b,b+(k<<2)|0,w,n,s,c[p>>2]|0,c[t>>2]|0,x,B,A,j);c[u>>2]=c[d>>2];d=c[r>>2]|0;b=c[q>>2]|0;c[v>>2]=c[u>>2];b=mw(v,z,d,b,f,g)|0;if(D|0)jD(D);$C(A);$C(B);OC(x);Cu(y);ja=C;return b|0}function nz(b,d,e,f,g,h,i,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0;p=ja;ja=ja+16|0;n=p+12|0;o=p;if(b){m=Bu(e,108596)|0;if(d){za[c[(c[m>>2]|0)+44>>2]&127](n,m);b=c[n>>2]|0;a[f>>0]=b;a[f+1>>0]=b>>8;a[f+2>>0]=b>>16;a[f+3>>0]=b>>24;za[c[(c[m>>2]|0)+32>>2]&127](o,m);b=k+8|0;e=b+3|0;if((a[e>>0]|0)<0){f=c[k>>2]|0;c[n>>2]=0;nu(f,n);c[k+4>>2]=0;if((a[e>>0]|0)<0){vb(c[k>>2]|0,c[b>>2]<<2);c[b>>2]=0}}else{c[n>>2]=0;nu(k,n);a[e>>0]=0};c[k>>2]=c[o>>2];c[k+4>>2]=c[o+4>>2];c[k+8>>2]=c[o+8>>2];b=0;while(1){if((b|0)==3)break;c[o+(b<<2)>>2]=0;b=b+1|0}$C(o)}else{za[c[(c[m>>2]|0)+40>>2]&127](n,m);b=c[n>>2]|0;a[f>>0]=b;a[f+1>>0]=b>>8;a[f+2>>0]=b>>16;a[f+3>>0]=b>>24;za[c[(c[m>>2]|0)+28>>2]&127](o,m);b=k+8|0;e=b+3|0;if((a[e>>0]|0)<0){f=c[k>>2]|0;c[n>>2]=0;nu(f,n);c[k+4>>2]=0;if((a[e>>0]|0)<0){vb(c[k>>2]|0,c[b>>2]<<2);c[b>>2]=0}}else{c[n>>2]=0;nu(k,n);a[e>>0]=0};c[k>>2]=c[o>>2];c[k+4>>2]=c[o+4>>2];c[k+8>>2]=c[o+8>>2];b=0;while(1){if((b|0)==3)break;c[o+(b<<2)>>2]=0;b=b+1|0}$C(o)}c[g>>2]=ma[c[(c[m>>2]|0)+12>>2]&127](m)|0;c[h>>2]=ma[c[(c[m>>2]|0)+16>>2]&127](m)|0;za[c[(c[m>>2]|0)+20>>2]&127](o,m);b=i+11|0;if((a[b>>0]|0)<0){h=c[i>>2]|0;a[n>>0]=0;Ua(h,n);c[i+4>>2]=0;if((a[b>>0]|0)<0){h=i+8|0;vb(c[i>>2]|0,c[h>>2]&2147483647);c[h>>2]=0}}else{a[n>>0]=0;Ua(i,n);a[b>>0]=0};c[i>>2]=c[o>>2];c[i+4>>2]=c[o+4>>2];c[i+8>>2]=c[o+8>>2];b=0;while(1){if((b|0)==3)break;c[o+(b<<2)>>2]=0;b=b+1|0}OC(o);za[c[(c[m>>2]|0)+24>>2]&127](o,m);b=j+8|0;e=b+3|0;if((a[e>>0]|0)<0){i=c[j>>2]|0;c[n>>2]=0;nu(i,n);c[j+4>>2]=0;if((a[e>>0]|0)<0){vb(c[j>>2]|0,c[b>>2]<<2);c[b>>2]=0}}else{c[n>>2]=0;nu(j,n);a[e>>0]=0};c[j>>2]=c[o>>2];c[j+4>>2]=c[o+4>>2];c[j+8>>2]=c[o+8>>2];b=0;while(1){if((b|0)==3)break;c[o+(b<<2)>>2]=0;b=b+1|0}$C(o);b=ma[c[(c[m>>2]|0)+36>>2]&127](m)|0}else{m=Bu(e,108588)|0;if(d){za[c[(c[m>>2]|0)+44>>2]&127](n,m);b=c[n>>2]|0;a[f>>0]=b;a[f+1>>0]=b>>8;a[f+2>>0]=b>>16;a[f+3>>0]=b>>24;za[c[(c[m>>2]|0)+32>>2]&127](o,m);b=k+8|0;e=b+3|0;if((a[e>>0]|0)<0){f=c[k>>2]|0;c[n>>2]=0;nu(f,n);c[k+4>>2]=0;if((a[e>>0]|0)<0){vb(c[k>>2]|0,c[b>>2]<<2);c[b>>2]=0}}else{c[n>>2]=0;nu(k,n);a[e>>0]=0};c[k>>2]=c[o>>2];c[k+4>>2]=c[o+4>>2];c[k+8>>2]=c[o+8>>2];b=0;while(1){if((b|0)==3)break;c[o+(b<<2)>>2]=0;b=b+1|0}$C(o)}else{za[c[(c[m>>2]|0)+40>>2]&127](n,m);b=c[n>>2]|0;a[f>>0]=b;a[f+1>>0]=b>>8;a[f+2>>0]=b>>16;a[f+3>>0]=b>>24;za[c[(c[m>>2]|0)+28>>2]&127](o,m);b=k+8|0;e=b+3|0;if((a[e>>0]|0)<0){f=c[k>>2]|0;c[n>>2]=0;nu(f,n);c[k+4>>2]=0;if((a[e>>0]|0)<0){vb(c[k>>2]|0,c[b>>2]<<2);c[b>>2]=0}}else{c[n>>2]=0;nu(k,n);a[e>>0]=0};c[k>>2]=c[o>>2];c[k+4>>2]=c[o+4>>2];c[k+8>>2]=c[o+8>>2];b=0;while(1){if((b|0)==3)break;c[o+(b<<2)>>2]=0;b=b+1|0}$C(o)}c[g>>2]=ma[c[(c[m>>2]|0)+12>>2]&127](m)|0;c[h>>2]=ma[c[(c[m>>2]|0)+16>>2]&127](m)|0;za[c[(c[m>>2]|0)+20>>2]&127](o,m);b=i+11|0;if((a[b>>0]|0)<0){h=c[i>>2]|0;a[n>>0]=0;Ua(h,n);c[i+4>>2]=0;if((a[b>>0]|0)<0){h=i+8|0;vb(c[i>>2]|0,c[h>>2]&2147483647);c[h>>2]=0}}else{a[n>>0]=0;Ua(i,n);a[b>>0]=0};c[i>>2]=c[o>>2];c[i+4>>2]=c[o+4>>2];c[i+8>>2]=c[o+8>>2];b=0;while(1){if((b|0)==3)break;c[o+(b<<2)>>2]=0;b=b+1|0}OC(o);za[c[(c[m>>2]|0)+24>>2]&127](o,m);b=j+8|0;e=b+3|0;if((a[e>>0]|0)<0){i=c[j>>2]|0;c[n>>2]=0;nu(i,n);c[j+4>>2]=0;if((a[e>>0]|0)<0){vb(c[j>>2]|0,c[b>>2]<<2);c[b>>2]=0}}else{c[n>>2]=0;nu(j,n);a[e>>0]=0};c[j>>2]=c[o>>2];c[j+4>>2]=c[o+4>>2];c[j+8>>2]=c[o+8>>2];b=0;while(1){if((b|0)==3)break;c[o+(b<<2)>>2]=0;b=b+1|0}$C(o);b=ma[c[(c[m>>2]|0)+36>>2]&127](m)|0}c[l>>2]=b;ja=p;return}function oz(b,d,e,f,g,h,i,j,k,l,m,n,o,p,q){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;var r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;c[e>>2]=b;A=p+8+3|0;G=p+4|0;B=o+8+3|0;C=o+4|0;F=(f&512|0)==0;E=(q|0)>0;z=n+11|0;D=n+4|0;y=0;while(1){if((y|0)==4)break;a:do switch(a[k+y>>0]|0){case 0:{c[d>>2]=c[e>>2];break}case 1:{c[d>>2]=c[e>>2];w=oa[c[(c[i>>2]|0)+44>>2]&63](i,32)|0;x=c[e>>2]|0;c[e>>2]=x+4;c[x>>2]=w;break}case 3:{x=a[A>>0]|0;r=x<<24>>24<0;if((r?c[G>>2]|0:x&255)|0){w=c[(r?c[p>>2]|0:p)>>2]|0;x=c[e>>2]|0;c[e>>2]=x+4;c[x>>2]=w}break}case 2:{v=a[B>>0]|0;r=v<<24>>24<0;v=r?c[C>>2]|0:v&255;if(!(F|(v|0)==0)){s=r?c[o>>2]|0:o;u=s+(v<<2)|0;r=c[e>>2]|0;t=r;while(1){if((s|0)==(u|0))break;c[t>>2]=c[s>>2];s=s+4|0;t=t+4|0}c[e>>2]=r+(v<<2)}break}case 4:{x=c[e>>2]|0;g=j?g+4|0:g;r=g;while(1){if(r>>>0>=h>>>0)break;if(!(pa[c[(c[i>>2]|0)+12>>2]&31](i,2048,c[r>>2]|0)|0))break;r=r+4|0}if(E){t=q;while(1){s=(t|0)>0;if(!(r>>>0>g>>>0&s))break;w=r+-4|0;u=c[w>>2]|0;v=c[e>>2]|0;c[e>>2]=v+4;c[v>>2]=u;r=w;t=t+-1|0}if(s)v=oa[c[(c[i>>2]|0)+44>>2]&63](i,48)|0;else v=0;u=c[e>>2]|0;while(1){s=u+4|0;if((t|0)<=0)break;c[u>>2]=v;t=t+-1|0;u=s}c[e>>2]=s;c[u>>2]=l}if((r|0)==(g|0)){v=oa[c[(c[i>>2]|0)+44>>2]&63](i,48)|0;w=c[e>>2]|0;r=w+4|0;c[e>>2]=r;c[w>>2]=v}else{w=a[z>>0]|0;s=w<<24>>24<0;if(!((s?c[D>>2]|0:w&255)|0))s=-1;else s=a[(s?c[n>>2]|0:n)>>0]|0;u=0;v=0;while(1){if((r|0)==(g|0))break;t=c[e>>2]|0;if((v|0)==(s|0)){w=t+4|0;c[e>>2]=w;c[t>>2]=m;u=u+1|0;t=a[z>>0]|0;s=t<<24>>24<0;if(u>>>0<(s?c[D>>2]|0:t&255)>>>0){s=a[(s?c[n>>2]|0:n)+u>>0]|0;t=w;s=s<<24>>24==127?-1:s<<24>>24;v=0}else{t=w;s=v;v=0}}w=r+-4|0;H=c[w>>2]|0;c[e>>2]=t+4;c[t>>2]=H;r=w;v=v+1|0}r=c[e>>2]|0}if((x|0)!=(r|0)){s=x;while(1){r=r+-4|0;if(s>>>0>=r>>>0)break a;H=c[s>>2]|0;c[s>>2]=c[r>>2];c[r>>2]=H;s=s+4|0}}break}default:{}}while(0);y=y+1|0}g=a[A>>0]|0;r=g<<24>>24<0;g=r?c[G>>2]|0:g&255;if(g>>>0>1){u=c[p>>2]|0;s=r?u+4|0:G;u=(r?u:p)+(g<<2)|0;g=c[e>>2]|0;r=u-s|0;t=g;while(1){if((s|0)==(u|0))break;c[t>>2]=c[s>>2];s=s+4|0;t=t+4|0}c[e>>2]=g+(r>>>2<<2)}switch((f&176)<<24>>24){case 32:{c[d>>2]=c[e>>2];break}case 16:break;default:c[d>>2]=b}return}function pz(a){a=a|0;gu(a);return}function qz(a){a=a|0;gu(a);Gf(a);return}function rz(b,d,e){b=b|0;d=d|0;e=e|0;b=ge((a[d+11>>0]|0)<0?c[d>>2]|0:d,1)|0;return b>>>((b|0)!=(-1|0)&1)|0}function sz(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0;j=ja;ja=ja+16|0;i=j;c[i>>2]=0;c[i+4>>2]=0;c[i+8>>2]=0;d=0;while(1){if((d|0)==3)break;c[i+(d<<2)>>2]=0;d=d+1|0}k=a[h+11>>0]|0;l=k<<24>>24<0;d=l?c[h>>2]|0:h;h=d+(l?c[h+4>>2]|0:k&255)|0;while(1){if(d>>>0>=h>>>0)break;XC(i,a[d>>0]|0);d=d+1|0}d=(a[i+11>>0]|0)<0?c[i>>2]|0:i;e=fe((e|0)==-1?-1:e<<1,f,g,d)|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;h=0;while(1){if((h|0)==3)break;c[b+(h<<2)>>2]=0;h=h+1|0}h=d+(he(e)|0)|0;while(1){if(d>>>0>=h>>>0)break;XC(b,a[d>>0]|0);d=d+1|0}OC(i);ja=j;return}function tz(a,b){a=a|0;b=b|0;return}function uz(a){a=a|0;gu(a);return}function vz(a){a=a|0;gu(a);Gf(a);return}function wz(b,d,e){b=b|0;d=d|0;e=e|0;b=ge((a[d+11>>0]|0)<0?c[d>>2]|0:d,1)|0;return b>>>((b|0)!=(-1|0)&1)|0}function xz(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;t=ja;ja=ja+176|0;p=t+168|0;o=t;n=t+164|0;r=t+160|0;q=t+128|0;l=t+152|0;s=t+144|0;c[q>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;d=0;while(1){if((d|0)==3)break;c[q+(d<<2)>>2]=0;d=d+1|0}c[l+4>>2]=0;c[l>>2]=27496;j=a[h+8+3>>0]|0;k=j<<24>>24<0;i=k?c[h>>2]|0:h;j=i+((k?c[h+4>>2]|0:j&255)<<2)|0;k=o+32|0;d=0;h=i;while(1){if(!((d|0)!=2&h>>>0<j>>>0))break;c[r>>2]=h;i=wa[c[(c[l>>2]|0)+12>>2]&15](l,p,h,j,r,o,k,n)|0;if((i|0)==2?1:(c[r>>2]|0)==(h|0)){m=8;break}d=o;while(1){if(d>>>0>=(c[n>>2]|0)>>>0)break;XC(q,a[d>>0]|0);d=d+1|0}d=i;h=c[r>>2]|0}if((m|0)==8)Tx(0);gu(l);i=(a[q+11>>0]|0)<0?c[q>>2]|0:q;h=fe((e|0)==-1?-1:e<<1,f,g,i)|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;d=0;while(1){if((d|0)==3)break;c[b+(d<<2)>>2]=0;d=d+1|0}c[s+4>>2]=0;c[s>>2]=27544;j=i+(he(h)|0)|0;l=j;k=o+128|0;h=i;d=0;while(1){if(!((d|0)!=2&h>>>0<j>>>0)){m=23;break}c[r>>2]=h;i=wa[c[(c[s>>2]|0)+16>>2]&15](s,p,h,(l-h|0)>32?h+32|0:j,r,o,k,n)|0;if((i|0)==2?1:(c[r>>2]|0)==(h|0)){m=19;break}d=o;while(1){if(d>>>0>=(c[n>>2]|0)>>>0)break;gD(b,c[d>>2]|0);d=d+4|0}h=c[r>>2]|0;d=i}if((m|0)==19)Tx(0);else if((m|0)==23){gu(s);OC(q);ja=t;return}}function yz(a,b){a=a|0;b=b|0;return}function zz(a){a=a|0;gu(a);Gf(a);return}function Az(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0;a=ja;ja=ja+16|0;j=a+4|0;b=a;c[j>>2]=d;c[b>>2]=g;h=Jz(d,e,j,g,h,b,1114111,0)|0;c[f>>2]=c[j>>2];c[i>>2]=c[b>>2];ja=a;return h|0}function Bz(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0;a=ja;ja=ja+16|0;j=a+4|0;b=a;c[j>>2]=d;c[b>>2]=g;h=Iz(d,e,j,g,h,b,1114111,0)|0;c[f>>2]=c[j>>2];c[i>>2]=c[b>>2];ja=a;return h|0}function Cz(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function Dz(a){a=a|0;return 0}function Ez(a){a=a|0;return 0}function Fz(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Hz(c,d,e,1114111,0)|0}function Gz(a){a=a|0;return 4}function Hz(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=c;if((((g&4|0)!=0?(o-b|0)>2:0)?(a[b>>0]|0)==-17:0)?(a[b+1>>0]|0)==-69:0)g=(a[b+2>>0]|0)==-65?b+3|0:b;else g=b;n=0;a:while(1){if(!(n>>>0<e>>>0&g>>>0<c>>>0))break;l=a[g>>0]|0;m=l&255;do if(l<<24>>24<=-1){if((l&255)<194)break a;if((l&255)<224){if((o-g|0)<2)break a;h=d[g+1>>0]|0;if((h&192|0)!=128)break a;if((h&63|m<<6&1984)>>>0>f>>>0)break a;g=g+2|0;break}if((l&255)<240){if((o-g|0)<3)break a;i=a[g+1>>0]|0;h=a[g+2>>0]|0;switch(l<<24>>24){case -32:{if((i&-32)<<24>>24!=-96)break a;break}case -19:{if((i&-32)<<24>>24!=-128)break a;break}default:if((i&-64)<<24>>24!=-128)break a}h=h&255;if((h&192|0)!=128)break a;if(((i&63)<<6|m<<12&61440|h&63)>>>0>f>>>0)break a;else{g=g+3|0;break}}if((l&255)>=245)break a;if((o-g|0)<4)break a;k=a[g+1>>0]|0;h=a[g+2>>0]|0;j=a[g+3>>0]|0;switch(l<<24>>24){case -16:{if((k+112&255)>=48)break a;break}case -12:{if((k&-16)<<24>>24!=-128)break a;break}default:if((k&-64)<<24>>24!=-128)break a}i=h&255;if((i&192|0)!=128)break a;h=j&255;if((h&192|0)!=128)break a;if(((k&63)<<12|m<<18&1835008|i<<6&4032|h&63)>>>0>f>>>0)break a;else g=g+4|0}else{if(m>>>0>f>>>0)break a;g=g+1|0}while(0);n=n+1|0}return g-b|0}function Iz(b,e,f,g,h,i,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0;c[f>>2]=b;c[i>>2]=g;if(k&4){b=c[f>>2]|0;k=e;if((((k-b|0)>2?(a[b>>0]|0)==-17:0)?(a[b+1>>0]|0)==-69:0)?(a[b+2>>0]|0)==-65:0)c[f>>2]=b+3}else k=e;a:while(1){p=c[f>>2]|0;if(p>>>0>=e>>>0){b=0;break}q=c[i>>2]|0;if(q>>>0>=h>>>0){b=1;break}n=a[p>>0]|0;o=n&255;do if(n<<24>>24>-1)if(o>>>0>j>>>0){b=2;break a}else{g=1;b=o}else{if((n&255)<194){b=2;break a}if((n&255)<224){if((k-p|0)<2){b=1;break a}b=d[p+1>>0]|0;if((b&192|0)!=128){b=2;break a}b=b&63|o<<6&1984;if(b>>>0>j>>>0){b=2;break a}else{g=2;break}}if((n&255)<240){if((k-p|0)<3){b=1;break a}g=a[p+1>>0]|0;b=a[p+2>>0]|0;switch(n<<24>>24){case -32:{if((g&-32)<<24>>24!=-96){b=2;break a}break}case -19:{if((g&-32)<<24>>24!=-128){b=2;break a}break}default:if((g&-64)<<24>>24!=-128){b=2;break a}}b=b&255;if((b&192|0)!=128){b=2;break a}b=(g&63)<<6|o<<12&61440|b&63;if(b>>>0>j>>>0){b=2;break a}else{g=3;break}}if((n&255)>=245){b=2;break a}if((k-p|0)<4){b=1;break a}m=a[p+1>>0]|0;b=a[p+2>>0]|0;l=a[p+3>>0]|0;switch(n<<24>>24){case -16:{if((m+112&255)>=48){b=2;break a}break}case -12:{if((m&-16)<<24>>24!=-128){b=2;break a}break}default:if((m&-64)<<24>>24!=-128){b=2;break a}}g=b&255;if((g&192|0)!=128){b=2;break a}b=l&255;if((b&192|0)!=128){b=2;break a}b=(m&63)<<12|o<<18&1835008|g<<6&4032|b&63;if(b>>>0>j>>>0){b=2;break a}else g=4}while(0);c[q>>2]=b;c[f>>2]=p+g;c[i>>2]=(c[i>>2]|0)+4}return b|0}function Jz(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0;c[e>>2]=b;c[h>>2]=f;l=g;if(j&2)if((l-f|0)<3)b=1;else{c[h>>2]=f+1;a[f>>0]=-17;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=-69;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=-65;k=4}else k=4;a:do if((k|0)==4){b=c[e>>2]|0;while(1){if(b>>>0>=d>>>0){b=0;break a}j=c[b>>2]|0;if(j>>>0>i>>>0|(j&-2048|0)==55296){b=2;break a}do if(j>>>0>=128){if(j>>>0<2048){b=c[h>>2]|0;if((l-b|0)<2){b=1;break a}c[h>>2]=b+1;a[b>>0]=j>>>6|192;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=j&63|128;break}b=c[h>>2]|0;g=l-b|0;if(j>>>0<65536){if((g|0)<3){b=1;break a}c[h>>2]=b+1;a[b>>0]=j>>>12|224;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=j>>>6&63|128;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=j&63|128;break}else{if((g|0)<4){b=1;break a}c[h>>2]=b+1;a[b>>0]=j>>>18|240;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=j>>>12&63|128;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=j>>>6&63|128;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=j&63|128;break}}else{b=c[h>>2]|0;if((l-b|0)<1){b=1;break a}c[h>>2]=b+1;a[b>>0]=j}while(0);b=(c[e>>2]|0)+4|0;c[e>>2]=b}}while(0);return b|0}function Kz(a){a=a|0;gu(a);Gf(a);return}function Lz(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c[f>>2]=d;c[i>>2]=g;return 3}function Mz(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c[f>>2]=d;c[i>>2]=g;return 3}function Nz(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function Oz(a){a=a|0;return 1}function Pz(a){a=a|0;return 1}function Qz(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;a=d-c|0;return (a>>>0<e>>>0?a:e)|0}function Rz(a){a=a|0;return 1}function Sz(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;q=ja;ja=ja+16|0;p=q;n=q+8|0;k=e;while(1){if((k|0)==(f|0)){k=f;break}if(!(c[k>>2]|0))break;k=k+4|0}c[j>>2]=h;c[g>>2]=e;m=i;o=b+8|0;a:while(1){if((h|0)==(i|0)|(e|0)==(f|0)){k=36;break}r=d;b=c[r+4>>2]|0;l=p;c[l>>2]=c[r>>2];c[l+4>>2]=b;l=xe(c[o>>2]|0)|0;b=Ue(h,g,k-e>>2,m-h|0,d)|0;if(l|0)xe(l)|0;switch(b|0){case -1:{k=10;break a}case 0:{e=1;k=33;break a}default:{}}h=(c[j>>2]|0)+b|0;c[j>>2]=h;if((h|0)==(i|0)){k=34;break}if((k|0)==(f|0)){e=c[g>>2]|0;k=f}else{e=xe(c[o>>2]|0)|0;h=Gd(n,0,d)|0;if(e|0)xe(e)|0;if((h|0)==-1){e=2;k=32;break}if(h>>>0>(m-(c[j>>2]|0)|0)>>>0){e=1;k=32;break}e=n;while(1){if(!h)break;l=a[e>>0]|0;r=c[j>>2]|0;c[j>>2]=r+1;a[r>>0]=l;h=h+-1|0;e=e+1|0}e=(c[g>>2]|0)+4|0;c[g>>2]=e;k=e;while(1){if((k|0)==(f|0)){k=f;break}if(!(c[k>>2]|0))break;k=k+4|0}h=c[j>>2]|0}}if((k|0)==10){c[j>>2]=h;while(1){if((e|0)==(c[g>>2]|0))break;r=c[e>>2]|0;k=xe(c[o>>2]|0)|0;h=Gd(h,r,p)|0;if(k|0)xe(k)|0;if((h|0)==-1)break;h=(c[j>>2]|0)+h|0;c[j>>2]=h;e=e+4|0}c[g>>2]=e;e=2;k=33}else if((k|0)==32)k=33;else if((k|0)==34){e=c[g>>2]|0;k=36}if((k|0)!=33)if((k|0)==36)e=(e|0)!=(f|0)&1;ja=q;return e|0}function Tz(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0;p=ja;ja=ja+16|0;o=p;k=e;while(1){if((k|0)==(f|0)){k=f;break}if(!(a[k>>0]|0))break;k=k+1|0}c[j>>2]=h;c[g>>2]=e;m=i;n=b+8|0;while(1){if((h|0)==(i|0)|(e|0)==(f|0)){b=33;break}q=d;b=c[q+4>>2]|0;l=o;c[l>>2]=c[q>>2];c[l+4>>2]=b;l=xe(c[n>>2]|0)|0;b=Re(h,g,k-e|0,m-h>>2,d)|0;if(l|0)xe(l)|0;if((b|0)==-1){b=10;break}h=(c[j>>2]|0)+(b<<2)|0;c[j>>2]=h;if((h|0)==(i|0)){b=30;break}e=c[g>>2]|0;if((k|0)==(f|0))k=f;else{k=xe(c[n>>2]|0)|0;e=oe(h,e,1,d)|0;if(k|0)xe(k)|0;if(e|0){e=2;b=29;break}c[j>>2]=(c[j>>2]|0)+4;e=(c[g>>2]|0)+1|0;c[g>>2]=e;k=e;while(1){if((k|0)==(f|0)){k=f;break}if(!(a[k>>0]|0))break;k=k+1|0}h=c[j>>2]|0}}do if((b|0)==10){b=k;a:while(1){c[j>>2]=h;if((e|0)==(c[g>>2]|0)){b=19;break}k=xe(c[n>>2]|0)|0;h=oe(h,e,b-e|0,o)|0;if(k|0)xe(k)|0;switch(h|0){case -1:{b=15;break a}case -2:{b=16;break a}case 0:{h=1;break}default:{}}e=e+h|0;h=(c[j>>2]|0)+4|0}if((b|0)==15){c[g>>2]=e;e=2;b=29;break}else if((b|0)==16){c[g>>2]=e;e=1;b=29;break}else if((b|0)==19){c[g>>2]=e;e=(e|0)!=(f|0)&1;b=29;break}}else if((b|0)==30){e=c[g>>2]|0;b=33}while(0);if((b|0)!=29)if((b|0)==33)e=(e|0)!=(f|0)&1;ja=p;return e|0}function Uz(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;i=ja;ja=ja+16|0;h=i;c[g>>2]=e;e=xe(c[b+8>>2]|0)|0;b=Gd(h,0,d)|0;if(e|0)xe(e)|0;a:do if((b+1|0)>>>0>=2){b=b+-1|0;if(b>>>0>(f-(c[g>>2]|0)|0)>>>0)h=1;else while(1){if(!b){h=0;break a}d=a[h>>0]|0;f=c[g>>2]|0;c[g>>2]=f+1;a[f>>0]=d;b=b+-1|0;h=h+1|0}}else h=2;while(0);ja=i;return h|0}function Vz(a){a=a|0;var b=0,d=0;a=a+8|0;d=xe(c[a>>2]|0)|0;b=Ce(0,0,4)|0;if(d|0)xe(d)|0;if(!b){a=c[a>>2]|0;if(!a)a=1;else{a=xe(a)|0;b=Pd()|0;if(a|0)xe(a)|0;return (b|0)==1|0}}else a=-1;return a|0}function Wz(a){a=a|0;return 0}function Xz(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;k=e;j=a+8|0;h=0;i=0;a:while(1){if((d|0)==(e|0)|i>>>0>=f>>>0)break;g=xe(c[j>>2]|0)|0;a=Qe(d,k-d|0,b)|0;if(g|0)xe(g)|0;switch(a|0){case -2:case -1:break a;case 0:{a=1;break}default:{}}d=d+a|0;h=a+h|0;i=i+1|0}return h|0}function Yz(a){a=a|0;var b=0;a=c[a+8>>2]|0;if(a){b=xe(a)|0;a=Pd()|0;if(b)xe(b)|0}else a=1;return a|0}function Zz(a){a=a|0;var b=0,d=0;c[a>>2]=27592;b=a+8|0;d=c[b>>2]|0;if((d|0)!=(Eu()|0))me(c[b>>2]|0);gu(a);return}function _z(a){a=a|0;Zz(a);Gf(a);return}function $z(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0;a=ja;ja=ja+16|0;j=a+4|0;b=a;c[j>>2]=d;c[b>>2]=g;h=iA(d,e,j,g,h,b,1114111,0)|0;c[f>>2]=c[j>>2];c[i>>2]=c[b>>2];ja=a;return h|0}function aA(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0;a=ja;ja=ja+16|0;j=a+4|0;b=a;c[j>>2]=d;c[b>>2]=g;h=hA(d,e,j,g,h,b,1114111,0)|0;c[f>>2]=c[j>>2];c[i>>2]=c[b>>2];ja=a;return h|0}function bA(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function cA(a){a=a|0;return 0}function dA(a){a=a|0;return 0}function eA(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return gA(c,d,e,1114111,0)|0}function fA(a){a=a|0;return 4}function gA(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=c;if((((g&4|0)!=0?(o-b|0)>2:0)?(a[b>>0]|0)==-17:0)?(a[b+1>>0]|0)==-69:0)g=(a[b+2>>0]|0)==-65?b+3|0:b;else g=b;h=0;a:while(1){if(!(h>>>0<e>>>0&g>>>0<c>>>0))break;m=a[g>>0]|0;n=m&255;if(n>>>0>f>>>0)break;do if(m<<24>>24<=-1){if((m&255)<194)break a;if((m&255)<224){if((o-g|0)<2)break a;i=d[g+1>>0]|0;if((i&192|0)!=128)break a;if((i&63|n<<6&1984)>>>0>f>>>0)break a;else{g=g+2|0;break}}if((m&255)<240){if((o-g|0)<3)break a;j=a[g+1>>0]|0;i=a[g+2>>0]|0;switch(m<<24>>24){case -32:{if((j&-32)<<24>>24!=-96)break a;break}case -19:{if((j&-32)<<24>>24!=-128)break a;break}default:if((j&-64)<<24>>24!=-128)break a}i=i&255;if((i&192|0)!=128)break a;if(((j&63)<<6|n<<12&61440|i&63)>>>0>f>>>0)break a;else{g=g+3|0;break}}if((m&255)>=245)break a;if((e-h|0)>>>0<2|(o-g|0)<4)break a;l=a[g+1>>0]|0;i=a[g+2>>0]|0;k=a[g+3>>0]|0;switch(m<<24>>24){case -16:{if((l+112&255)>=48)break a;break}case -12:{if((l&-16)<<24>>24!=-128)break a;break}default:if((l&-64)<<24>>24!=-128)break a}j=i&255;if((j&192|0)!=128)break a;i=k&255;if((i&192|0)!=128)break a;if(((l&63)<<12|n<<18&1835008|j<<6&4032|i&63)>>>0>f>>>0)break a;else{g=g+4|0;h=h+1|0}}else g=g+1|0;while(0);h=h+1|0}return g-b|0}function hA(e,f,g,h,i,j,k,l){e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0;c[g>>2]=e;c[j>>2]=h;if(l&4){e=c[g>>2]|0;l=f;if((((l-e|0)>2?(a[e>>0]|0)==-17:0)?(a[e+1>>0]|0)==-69:0)?(a[e+2>>0]|0)==-65:0)c[g>>2]=e+3}else l=f;s=i;a:while(1){n=c[g>>2]|0;if(n>>>0>=f>>>0){e=0;break}r=c[j>>2]|0;if(r>>>0>=i>>>0){e=1;break}m=a[n>>0]|0;q=m&255;if(q>>>0>k>>>0){e=2;break}do if(m<<24>>24>-1){b[r>>1]=m&255;e=n+1|0}else{if((m&255)<194){e=2;break a}if((m&255)<224){if((l-n|0)<2){e=1;break a}e=d[n+1>>0]|0;if((e&192|0)!=128){e=2;break a}e=e&63|q<<6&1984;if(e>>>0>k>>>0){e=2;break a}b[r>>1]=e;e=n+2|0;break}if((m&255)<240){if((l-n|0)<3){e=1;break a}h=a[n+1>>0]|0;e=a[n+2>>0]|0;switch(m<<24>>24){case -32:{if((h&-32)<<24>>24!=-96){e=2;break a}break}case -19:{if((h&-32)<<24>>24!=-128){e=2;break a}break}default:if((h&-64)<<24>>24!=-128){e=2;break a}}e=e&255;if((e&192|0)!=128){e=2;break a}e=(h&63)<<6|q<<12|e&63;if((e&65535)>>>0>k>>>0){e=2;break a}b[r>>1]=e;e=n+3|0;break}if((m&255)>=245){e=2;break a}if((l-n|0)<4){e=1;break a}o=a[n+1>>0]|0;e=a[n+2>>0]|0;h=a[n+3>>0]|0;switch(m<<24>>24){case -16:{if((o+112&255)>=48){e=2;break a}break}case -12:{if((o&-16)<<24>>24!=-128){e=2;break a}break}default:if((o&-64)<<24>>24!=-128){e=2;break a}}p=e&255;if((p&192|0)!=128){e=2;break a}e=h&255;if((e&192|0)!=128){e=2;break a}if((s-r|0)<4){e=1;break a}n=q&7;m=o&255;h=p<<6;e=e&63;if((m<<12&258048|n<<18|h&4032|e)>>>0>k>>>0){e=2;break a}b[r>>1]=m<<2&60|p>>>4&3|((m>>>4&3|n<<2)<<6)+16320|55296;r=r+2|0;c[j>>2]=r;b[r>>1]=e|h&960|56320;e=(c[g>>2]|0)+4|0}while(0);c[g>>2]=e;c[j>>2]=(c[j>>2]|0)+2}return e|0}function iA(d,f,g,h,i,j,k,l){d=d|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0;c[g>>2]=d;c[j>>2]=h;if(l&2)if((i-h|0)<3)d=1;else{c[j>>2]=h+1;a[h>>0]=-17;m=c[j>>2]|0;c[j>>2]=m+1;a[m>>0]=-69;m=c[j>>2]|0;c[j>>2]=m+1;a[m>>0]=-65;m=4}else m=4;a:do if((m|0)==4){n=f;d=c[g>>2]|0;while(1){if(d>>>0>=f>>>0){d=0;break a}l=b[d>>1]|0;m=l&65535;if(m>>>0>k>>>0){d=2;break a}do if((l&65535)<128){d=c[j>>2]|0;if((i-d|0)<1){d=1;break a}c[j>>2]=d+1;a[d>>0]=l}else{if((l&65535)<2048){d=c[j>>2]|0;if((i-d|0)<2){d=1;break a}c[j>>2]=d+1;a[d>>0]=m>>>6|192;h=c[j>>2]|0;c[j>>2]=h+1;a[h>>0]=m&63|128;break}if((l&65535)<55296){d=c[j>>2]|0;if((i-d|0)<3){d=1;break a}c[j>>2]=d+1;a[d>>0]=m>>>12|224;h=c[j>>2]|0;c[j>>2]=h+1;a[h>>0]=m>>>6&63|128;h=c[j>>2]|0;c[j>>2]=h+1;a[h>>0]=m&63|128;break}if((l&65535)>=56320){if((l&65535)<57344){d=2;break a}d=c[j>>2]|0;if((i-d|0)<3){d=1;break a}c[j>>2]=d+1;a[d>>0]=m>>>12|224;h=c[j>>2]|0;c[j>>2]=h+1;a[h>>0]=m>>>6&63|128;h=c[j>>2]|0;c[j>>2]=h+1;a[h>>0]=m&63|128;break}if((n-d|0)<4){d=1;break a}l=d+2|0;h=e[l>>1]|0;if((h&64512|0)!=56320){d=2;break a}if((i-(c[j>>2]|0)|0)<4){d=1;break a}d=m&960;if(((d<<10)+65536|m<<10&64512|h&1023)>>>0>k>>>0){d=2;break a}c[g>>2]=l;d=(d>>>6)+1|0;l=c[j>>2]|0;c[j>>2]=l+1;a[l>>0]=d>>>2|240;l=c[j>>2]|0;c[j>>2]=l+1;a[l>>0]=m>>>2&15|d<<4&48|128;l=c[j>>2]|0;c[j>>2]=l+1;a[l>>0]=m<<4&48|h>>>6&15|128;m=c[j>>2]|0;c[j>>2]=m+1;a[m>>0]=h&63|128}while(0);d=(c[g>>2]|0)+2|0;c[g>>2]=d}}while(0);return d|0}function jA(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;c[a>>2]=27640;e=a+8|0;d=a+12|0;f=0;while(1){b=c[e>>2]|0;if(f>>>0>=(c[d>>2]|0)-b>>2>>>0)break;b=c[b+(f<<2)>>2]|0;if(b|0?(h=b+4|0,g=c[h>>2]|0,c[h>>2]=g+-1,(g|0)==0):0)ya[c[(c[b>>2]|0)+8>>2]&255](b);f=f+1|0}OC(a+144|0);lA(e);gu(a);return}function kA(a){a=a|0;jA(a);Gf(a);return}function lA(b){b=b|0;var d=0,e=0;d=c[b>>2]|0;e=d;do if(d|0){c[b+4>>2]=e;if((d|0)==(b+16|0)){a[b+128>>0]=0;break}else{vb(d,(c[b+8>>2]|0)-e|0);break}}while(0);return}function mA(b){b=b|0;var d=0;c[b>>2]=27660;d=c[b+8>>2]|0;if(d|0?a[b+12>>0]|0:0)Nr(d);gu(b);return}function nA(a){a=a|0;mA(a);Gf(a);return}function oA(a,b){a=a|0;b=b|0;if(b<<24>>24>-1)b=c[(xA()|0)+((b&255)<<2)>>2]&255;return b|0}function pA(b,d,e){b=b|0;d=d|0;e=e|0;b=d;while(1){if((b|0)==(e|0))break;d=a[b>>0]|0;if(d<<24>>24>-1){d=xA()|0;d=c[d+(a[b>>0]<<2)>>2]&255}a[b>>0]=d;b=b+1|0}return e|0}function qA(a,b){a=a|0;b=b|0;if(b<<24>>24>-1)b=c[(wA()|0)+(b<<24>>24<<2)>>2]&255;return b|0}function rA(b,d,e){b=b|0;d=d|0;e=e|0;b=d;while(1){if((b|0)==(e|0))break;d=a[b>>0]|0;if(d<<24>>24>-1){d=wA()|0;d=c[d+(a[b>>0]<<2)>>2]&255}a[b>>0]=d;b=b+1|0}return e|0}function sA(a,b){a=a|0;b=b|0;return b|0}function tA(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;while(1){if((c|0)==(d|0))break;a[e>>0]=a[c>>0]|0;e=e+1|0;c=c+1|0}return d|0}function uA(a,b,c){a=a|0;b=b|0;c=c|0;return (b<<24>>24>-1?b:c)|0}function vA(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;while(1){if((c|0)==(d|0))break;b=a[c>>0]|0;a[f>>0]=b<<24>>24>-1?b:e;f=f+1|0;c=c+1|0}return d|0}function wA(){return c[(Rd()|0)>>2]|0}function xA(){return c[(Sd()|0)>>2]|0}function yA(){return c[(Od()|0)>>2]|0}function zA(a){a=a|0;c[a>>2]=27712;OC(a+12|0);gu(a);return}function AA(a){a=a|0;zA(a);Gf(a);return}function BA(b){b=b|0;return a[b+8>>0]|0}function CA(b){b=b|0;return a[b+9>>0]|0}function DA(a,b){a=a|0;b=b|0;KC(a,b+12|0);return}function EA(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;LC(a,37699,lb(37699)|0);return}function FA(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;LC(a,37693,lb(37693)|0);return}function GA(a){a=a|0;c[a>>2]=27752;OC(a+16|0);gu(a);return}function HA(a){a=a|0;GA(a);Gf(a);return}function IA(a){a=a|0;return c[a+8>>2]|0}function JA(a){a=a|0;return c[a+12>>2]|0}function KA(a,b){a=a|0;b=b|0;KC(a,b+16|0);return}function LA(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;YC(a,27808,nx(27808)|0);return}function MA(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;YC(a,27784,nx(27784)|0);return}function NA(a){a=a|0;gu(a);Gf(a);return}function OA(a){a=a|0;gu(a);Gf(a);return}function PA(a,c,d){a=a|0;c=c|0;d=d|0;if(d>>>0<128)d=(b[(yA()|0)+(d<<1)>>1]&c)<<16>>16!=0;else d=0;return d|0}function QA(a,d,f,g){a=a|0;d=d|0;f=f|0;g=g|0;var h=0;h=d;a=g;while(1){if((h|0)==(f|0))break;if((c[h>>2]|0)>>>0<128){d=yA()|0;d=e[d+(c[h>>2]<<1)>>1]|0}else d=0;b[a>>1]=d;h=h+4|0;a=a+2|0}return f|0}function RA(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;while(1){if((e|0)==(f|0))break;if((c[e>>2]|0)>>>0<128?(a=yA()|0,(b[a+(c[e>>2]<<1)>>1]&d)<<16>>16):0){f=e;break}e=e+4|0}return f|0}function SA(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;while(1){if((e|0)==(f|0))break;if((c[e>>2]|0)>>>0>=128){f=e;break}a=yA()|0;if(!((b[a+(c[e>>2]<<1)>>1]&d)<<16>>16)){f=e;break}e=e+4|0}return f|0}function TA(a,b){a=a|0;b=b|0;if(b>>>0<128)b=c[(xA()|0)+(b<<2)>>2]|0;return b|0}function UA(a,b,d){a=a|0;b=b|0;d=d|0;a=b;while(1){if((a|0)==(d|0))break;b=c[a>>2]|0;if(b>>>0<128){b=xA()|0;b=c[b+(c[a>>2]<<2)>>2]|0}c[a>>2]=b;a=a+4|0}return d|0}function VA(a,b){a=a|0;b=b|0;if(b>>>0<128)b=c[(wA()|0)+(b<<2)>>2]|0;return b|0}function WA(a,b,d){a=a|0;b=b|0;d=d|0;a=b;while(1){if((a|0)==(d|0))break;b=c[a>>2]|0;if(b>>>0<128){b=wA()|0;b=c[b+(c[a>>2]<<2)>>2]|0}c[a>>2]=b;a=a+4|0}return d|0}function XA(a,b){a=a|0;b=b|0;return b<<24>>24|0}function YA(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;while(1){if((d|0)==(e|0))break;c[f>>2]=a[d>>0];f=f+4|0;d=d+1|0}return e|0}function ZA(a,b,c){a=a|0;b=b|0;c=c|0;return (b>>>0<128?b&255:c)|0}function _A(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=(e-d|0)>>>2;b=d;while(1){if((b|0)==(e|0))break;i=c[b>>2]|0;a[g>>0]=i>>>0<128?i&255:f;g=g+1|0;b=b+4|0}return d+(h<<2)|0}function $A(a){a=a|0;gu(a);Gf(a);return}function aB(a){a=a|0;gu(a);Gf(a);return}function bB(a){a=a|0;gu(a);Gf(a);return}function cB(a){a=a|0;c[a>>2]=28068;return}function dB(a){a=a|0;c[a>>2]=28104;return}function eB(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;c[b+4>>2]=f+-1;c[b>>2]=27660;f=b+8|0;c[f>>2]=d;a[b+12>>0]=e&1;if(!d)c[f>>2]=yA()|0;return}function fB(a,b){a=a|0;b=b|0;var d=0;c[a+4>>2]=b+-1;c[a>>2]=27640;b=a+8|0;gB(b,28);d=a+144|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;LC(d,35638,lb(35638)|0);c[a+12>>2]=c[b>>2];hB();iB(a,106680);jB();kB(a,106688);lB();mB(a,106696);nB();oB(a,106712);pB();qB(a,106720);rB();sB(a,106728);tB();uB(a,106744);vB();wB(a,106752);xB();yB(a,106760);zB();AB(a,106784);BB();CB(a,106816);DB();EB(a,106824);FB();GB(a,106832);HB();IB(a,106840);JB();KB(a,106848);LB();MB(a,106856);NB();OB(a,106864);PB();QB(a,106872);RB();SB(a,106880);TB();UB(a,106888);VB();WB(a,106896);XB();YB(a,106904);ZB();_B(a,106912);$B();aC(a,106928);bC();cC(a,106944);dC();eC(a,106960);fC();gC(a,106976);hC();iC(a,106984);return}function gB(b,d){b=b|0;d=d|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;a[b+128>>0]=0;if(d|0){vC(b,d);mC(b,d)}return}function hB(){c[26671]=0;c[26670]=25496;return}function iB(a,b){a=a|0;b=b|0;jC(a,b,Gu(108332)|0);return}function jB(){c[26673]=0;c[26672]=25528;return}function kB(a,b){a=a|0;b=b|0;jC(a,b,Gu(108340)|0);return}function lB(){eB(106696,0,0,1);return}function mB(a,b){a=a|0;b=b|0;jC(a,b,Gu(108348)|0);return}function nB(){c[26679]=0;c[26678]=27856;return}function oB(a,b){a=a|0;b=b|0;jC(a,b,Gu(108380)|0);return}function pB(){c[26681]=0;c[26680]=27924;return}function qB(a,b){a=a|0;b=b|0;jC(a,b,Gu(108652)|0);return}function rB(){uC(106728,1);return}function sB(a,b){a=a|0;b=b|0;jC(a,b,Gu(108660)|0);return}function tB(){c[26687]=0;c[26686]=27972;return}function uB(a,b){a=a|0;b=b|0;jC(a,b,Gu(108668)|0);return}function vB(){c[26689]=0;c[26688]=28020;return}function wB(a,b){a=a|0;b=b|0;jC(a,b,Gu(108676)|0);return}function xB(){tC(106760,1);return}function yB(a,b){a=a|0;b=b|0;jC(a,b,Gu(108364)|0);return}function zB(){sC(106784,1);return}function AB(a,b){a=a|0;b=b|0;jC(a,b,Gu(108388)|0);return}function BB(){c[26705]=0;c[26704]=25560;return}function CB(a,b){a=a|0;b=b|0;jC(a,b,Gu(108372)|0);return}function DB(){c[26707]=0;c[26706]=25624;return}function EB(a,b){a=a|0;b=b|0;jC(a,b,Gu(108396)|0);return}function FB(){c[26709]=0;c[26708]=25688;return}function GB(a,b){a=a|0;b=b|0;jC(a,b,Gu(108404)|0);return}function HB(){c[26711]=0;c[26710]=25740;return}function IB(a,b){a=a|0;b=b|0;jC(a,b,Gu(108412)|0);return}function JB(){c[26713]=0;c[26712]=27096;return}function KB(a,b){a=a|0;b=b|0;jC(a,b,Gu(108572)|0);return}function LB(){c[26715]=0;c[26714]=27152;return}function MB(a,b){a=a|0;b=b|0;jC(a,b,Gu(108580)|0);return}function NB(){c[26717]=0;c[26716]=27208;return}function OB(a,b){a=a|0;b=b|0;jC(a,b,Gu(108588)|0);return}function PB(){c[26719]=0;c[26718]=27264;return}function QB(a,b){a=a|0;b=b|0;jC(a,b,Gu(108596)|0);return}function RB(){c[26721]=0;c[26720]=27320;return}function SB(a,b){a=a|0;b=b|0;jC(a,b,Gu(108604)|0);return}function TB(){c[26723]=0;c[26722]=27348;return}function UB(a,b){a=a|0;b=b|0;jC(a,b,Gu(108612)|0);return}function VB(){c[26725]=0;c[26724]=27376;return}function WB(a,b){a=a|0;b=b|0;jC(a,b,Gu(108620)|0);return}function XB(){c[26727]=0;c[26726]=27404;return}function YB(a,b){a=a|0;b=b|0;jC(a,b,Gu(108628)|0);return}function ZB(){c[26729]=0;c[26728]=27836;cB(106920);c[26728]=25792;c[26730]=25840;return}function _B(a,b){a=a|0;b=b|0;jC(a,b,Gu(108480)|0);return}function $B(){c[26733]=0;c[26732]=27836;dB(106936);c[26732]=25876;c[26734]=25924;return}function aC(a,b){a=a|0;b=b|0;jC(a,b,Gu(108548)|0);return}function bC(){c[26737]=0;c[26736]=27836;c[26738]=Eu()|0;c[26736]=27048;return}function cC(a,b){a=a|0;b=b|0;jC(a,b,Gu(108556)|0);return}function dC(){c[26741]=0;c[26740]=27836;c[26742]=Eu()|0;c[26740]=27072;return}function eC(a,b){a=a|0;b=b|0;jC(a,b,Gu(108564)|0);return}function fC(){c[26745]=0;c[26744]=27432;return}function gC(a,b){a=a|0;b=b|0;jC(a,b,Gu(108636)|0);return}function hC(){c[26747]=0;c[26746]=27464;return}function iC(a,b){a=a|0;b=b|0;jC(a,b,Gu(108644)|0);return}function jC(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;f=b+4|0;c[f>>2]=(c[f>>2]|0)+1;f=a+8|0;e=c[f>>2]|0;if((c[a+12>>2]|0)-e>>2>>>0<=d>>>0){kC(f,d+1|0);e=c[f>>2]|0}e=c[e+(d<<2)>>2]|0;if(e|0?(g=e+4|0,a=c[g>>2]|0,c[g>>2]=a+-1,(a|0)==0):0)ya[c[(c[e>>2]|0)+8>>2]&255](e);c[(c[f>>2]|0)+(d<<2)>>2]=b;return}function kC(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;e=a+4|0;d=c[a>>2]|0;f=(c[e>>2]|0)-d>>2;if(f>>>0>=b>>>0){if(f>>>0>b>>>0)c[e>>2]=d+(b<<2)}else lC(a,b-f|0);return}function lC(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;i=ja;ja=ja+32|0;g=i;h=a+8|0;f=a+4|0;d=c[f>>2]|0;do if((c[h>>2]|0)-d>>2>>>0<b>>>0){d=(d-(c[a>>2]|0)>>2)+b|0;e=nC(a)|0;if(e>>>0<d>>>0)hD(a);else{j=c[a>>2]|0;k=(c[h>>2]|0)-j|0;h=k>>1;oC(g,k>>2>>>0<e>>>1>>>0?(h>>>0<d>>>0?d:h):e,(c[f>>2]|0)-j>>2,a+16|0);pC(g,b);qC(a,g);rC(g);break}}else mC(a,b);while(0);ja=i;return}function mC(a,b){a=a|0;b=b|0;var d=0,e=0;e=a+4|0;d=c[e>>2]|0;a=b;do{c[d>>2]=0;d=(c[e>>2]|0)+4|0;c[e>>2]=d;a=a+-1|0}while((a|0)!=0);return}function nC(a){a=a|0;return 1073741823}function oC(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;h=b+12|0;c[h>>2]=0;c[b+16>>2]=f;do if(d){g=f+112|0;if(d>>>0<29&(a[g>>0]|0)==0){a[g>>0]=1;break}else{f=Mr(d<<2)|0;break}}else f=0;while(0);c[b>>2]=f;e=f+(e<<2)|0;c[b+8>>2]=e;c[b+4>>2]=e;c[h>>2]=f+(d<<2);return}function pC(a,b){a=a|0;b=b|0;var d=0,e=0;e=a+8|0;d=c[e>>2]|0;a=b;do{c[d>>2]=0;d=(c[e>>2]|0)+4|0;c[e>>2]=d;a=a+-1|0}while((a|0)!=0);return}function qC(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;e=c[a>>2]|0;h=a+4|0;g=b+4|0;f=(c[h>>2]|0)-e|0;d=(c[g>>2]|0)+(0-(f>>2)<<2)|0;c[g>>2]=d;if((f|0)>0){yD(d|0,e|0,f|0)|0;e=g;d=c[g>>2]|0}else e=g;g=c[a>>2]|0;c[a>>2]=d;c[e>>2]=g;g=b+8|0;f=c[h>>2]|0;c[h>>2]=c[g>>2];c[g>>2]=f;g=a+8|0;a=b+12|0;h=c[g>>2]|0;c[g>>2]=c[a>>2];c[a>>2]=h;c[b>>2]=c[e>>2];return}function rC(b){b=b|0;var d=0,e=0,f=0,g=0;d=c[b+4>>2]|0;f=b+8|0;e=c[f>>2]|0;while(1){if((e|0)==(d|0))break;g=e+-4|0;c[f>>2]=g;e=g}d=c[b>>2]|0;e=d;do if(d|0){f=c[b+16>>2]|0;if((d|0)==(f|0)){a[f+112>>0]=0;break}else{vb(d,(c[b+12>>2]|0)-e|0);break}}while(0);return}function sC(a,b){a=a|0;b=b|0;c[a+4>>2]=b+-1;c[a>>2]=27752;c[a+8>>2]=46;c[a+12>>2]=44;b=a+16|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;a=0;while(1){if((a|0)==3)break;c[b+(a<<2)>>2]=0;a=a+1|0}return}function tC(b,d){b=b|0;d=d|0;c[b+4>>2]=d+-1;c[b>>2]=27712;a[b+8>>0]=46;a[b+9>>0]=44;d=b+12|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[d+(b<<2)>>2]=0;b=b+1|0}return}function uC(a,b){a=a|0;b=b|0;c[a+4>>2]=b+-1;c[a>>2]=27592;c[a+8>>2]=Eu()|0;return}function vC(b,d){b=b|0;d=d|0;var e=0;if((nC(b)|0)>>>0<d>>>0)hD(b);e=b+128|0;if(d>>>0<29&(a[e>>0]|0)==0){a[e>>0]=1;e=b+16|0}else e=Mr(d<<2)|0;c[b+4>>2]=e;c[b>>2]=e;c[b+8>>2]=e+(d<<2);return}function wC(){if((a[106992]|0)==0?Hr(106992)|0:0){xC()|0;c[27172]=108684;Jr(106992)}return c[27172]|0}function xC(){yC();c[27171]=107e3;return 108684}function yC(){fB(107e3,1);return}function zC(){AC(108692,wC()|0);return 108692}function AC(a,b){a=a|0;b=b|0;b=c[b>>2]|0;c[a>>2]=b;a=b+4|0;c[a>>2]=(c[a>>2]|0)+1;return}function BC(){if((a[107160]|0)==0?Hr(107160)|0:0){zC()|0;c[27174]=108692;Jr(107160)}return c[27174]|0}function CC(a){a=a|0;var b=0;b=c[(BC()|0)>>2]|0;c[a>>2]=b;a=b+4|0;c[a>>2]=(c[a>>2]|0)+1;return}function DC(a){a=a|0;return}function EC(a,b,d){a=a|0;b=b|0;d=d|0;do{}while((c[a>>2]|0)==1);if(!(c[a>>2]|0)){c[a>>2]=1;ya[d&255](b);c[a>>2]=-1}return}function FC(){S()}function GC(a,b){a=a|0;b=b|0;var d=0,e=0;e=he(b)|0;d=Mr(e+13|0)|0;c[d>>2]=e;c[d+4>>2]=e;c[d+8>>2]=0;d=HC(d)|0;yD(d|0,b|0,e+1|0)|0;c[a>>2]=d;return}function HC(a){a=a|0;return a+12|0}function IC(a,b){a=a|0;b=b|0;c[a>>2]=24760;GC(a+4|0,b);return}function JC(a){a=a|0;S()}function KC(b,d){b=b|0;d=d|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;if((a[d+11>>0]|0)<0)LC(b,c[d>>2]|0,c[d+4>>2]|0);else{c[b>>2]=c[d>>2];c[b+4>>2]=c[d+4>>2];c[b+8>>2]=c[d+8>>2]}return}function LC(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;g=ja;ja=ja+16|0;f=g;if(e>>>0>4294967279)JC(b);if(e>>>0<11)a[b+11>>0]=e;else{i=e+16&-16;h=Mr(i)|0;c[b>>2]=h;c[b+8>>2]=i|-2147483648;c[b+4>>2]=e;b=h}ps(b,d,e)|0;a[f>>0]=0;Ua(b+e|0,f);ja=g;return}function MC(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;g=ja;ja=ja+16|0;f=g;if(d>>>0>4294967279)JC(b);if(d>>>0<11)a[b+11>>0]=d;else{i=d+16&-16;h=Mr(i)|0;c[b>>2]=h;c[b+8>>2]=i|-2147483648;c[b+4>>2]=d;b=h}NC(b,d,e)|0;a[f>>0]=0;Ua(b+d|0,f);ja=g;return}function NC(a,b,c){a=a|0;b=b|0;c=c|0;if(b|0)AD(a|0,(Va(c)|0)&255|0,b|0)|0;return a|0}function OC(b){b=b|0;if((a[b+11>>0]|0)<0)vb(c[b>>2]|0,c[b+8>>2]&2147483647);return}function PC(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;k=ja;ja=ja+16|0;j=k;h=b+11|0;f=a[h>>0]|0;g=f<<24>>24<0;if(g)i=(c[b+8>>2]&2147483647)+-1|0;else i=10;do if(i>>>0>=e>>>0){if(g)f=c[b>>2]|0;else f=b;QC(f,d,e)|0;a[j>>0]=0;Ua(f+e|0,j);if((a[h>>0]|0)<0){c[b+4>>2]=e;break}else{a[h>>0]=e;break}}else{if(g)f=c[b+4>>2]|0;else f=f&255;RC(b,i,e-i|0,f,0,f,e,d)}while(0);ja=k;return b|0}function QC(a,b,c){a=a|0;b=b|0;c=c|0;if(c|0)zD(a|0,b|0,c|0)|0;return a|0}function RC(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0;o=ja;ja=ja+16|0;n=o;if((-18-d|0)>>>0<e>>>0)JC(b);if((a[b+11>>0]|0)<0)m=c[b>>2]|0;else m=b;if(d>>>0<2147483623){l=e+d|0;k=d<<1;l=l>>>0<k>>>0?k:l;l=l>>>0<11?11:l+16&-16}else l=-17;k=Mr(l)|0;if(g|0)ps(k,m,g)|0;if(i|0)ps(k+g|0,j,i)|0;f=f-h|0;e=f-g|0;if(e|0)ps(k+g+i|0,m+g+h|0,e)|0;e=d+1|0;if((e|0)!=11)vb(m,e);c[b>>2]=k;c[b+8>>2]=l|-2147483648;m=f+i|0;c[b+4>>2]=m;a[n>>0]=0;Ua(k+m|0,n);ja=o;return}function SC(a,b){a=a|0;b=b|0;return PC(a,b,lb(b)|0)|0}function TC(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;j=ja;ja=ja+16|0;h=j;g=b+11|0;f=a[g>>0]|0;i=f<<24>>24<0;if(i)f=c[b+4>>2]|0;else f=f&255;do if(f>>>0>=d>>>0)if(i){i=(c[b>>2]|0)+d|0;a[h>>0]=0;Ua(i,h);c[b+4>>2]=d;break}else{a[h>>0]=0;Ua(b+d|0,h);a[g>>0]=d;break}else UC(b,d-f|0,e)|0;while(0);ja=j;return}\nfunction Fc(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ka=0,la=0,na=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0;xa=ja;ja=ja+16|0;Z=xa+4|0;X=xa;wa=b+72|0;c[wa>>2]=0;va=b+136|0;if(!e){va=0;c[wa>>2]=0;ja=xa;return va|0}Q=b+160|0;ca=b+32|0;ua=b+60|0;q=b+24|0;E=b+12|0;K=b+21|0;la=b+124|0;R=b+88|0;_=b+76|0;ka=b+28|0;qa=b+68|0;w=b+7|0;A=b+1|0;D=b+3|0;H=b+2|0;I=b+5|0;J=b+4|0;F=b+25|0;ta=b+64|0;G=b+6|0;na=b+128|0;B=b+13|0;C=b+16|0;sa=b+52|0;L=b+8|0;M=b+9|0;ra=b+56|0;fa=b+36|0;ga=b+40|0;ha=b+44|0;ia=b+48|0;pa=b+132|0;S=b+120|0;r=b+15|0;ea=b+116|0;s=b+23|0;T=b+148|0;U=b+152|0;u=b+20|0;v=b+17|0;aa=b+84|0;ba=b+164|0;N=b+10|0;O=b+11|0;p=Z+2|0;da=Z+1|0;$=b+80|0;Y=Z+3|0;x=b+18|0;y=b+19|0;W=b+168|0;z=b+22|0;P=b+156|0;f=0;V=0;while(1){g=c[Q>>2]|0;if(g){k=(oa[g&63](c[va>>2]|0,b)|0)==0;f=c[wa>>2]|0;if(!k){l=268;break}}c[ua>>2]=c[ca>>2];a[q>>0]=0;a[E>>0]=(a[E>>0]|0)+1<<24>>24;c[wa>>2]=f+(d[K>>0]|0);k=ma[c[la>>2]&127](b)|0;c[wa>>2]=(c[wa>>2]|0)+(d[(c[R>>2]|0)+k>>0]|0);h=a[q>>0]|0;f=k;k=(c[_>>2]|0)+(k<<2)|0;while(1){g=h&-2;a[q>>0]=g;i=k+2|0;a:do switch(a[i>>0]|0){case 14:{c[qa>>2]=c[ka>>2];break}case 1:{c[qa>>2]=(ma[c[la>>2]&127](b)|0)+(d[w>>0]<<8);break}case 2:{c[qa>>2]=ma[c[la>>2]&127](b)|0;c[qa>>2]=((ma[c[la>>2]&127](b)|0)<<8)+(c[qa>>2]|0);break}case 3:{c[qa>>2]=d[b>>0]<<8|d[A>>0];break}case 4:{c[qa>>2]=d[H>>0]<<8|d[D>>0];break}case 5:{c[qa>>2]=d[J>>0]<<8|d[I>>0];break}case 6:{g=g&255;do if(!(g&2))if(!(g&4)){g=J;h=d[I>>0]|0;break}else{g=O;h=d[N>>0]|0;break}else{g=M;h=d[L>>0]|0}while(0);c[qa>>2]=d[g>>0]<<8|h;break}case 7:{g=g&255;if(g&2|0){j=ma[c[la>>2]&127](b)|0;j=(j^128)+65408+(d[M>>0]<<8|d[L>>0])&65535;c[ra>>2]=j;c[qa>>2]=j;break a}if(!(g&4)){c[qa>>2]=d[J>>0]<<8|d[I>>0];break a}else{j=ma[c[la>>2]&127](b)|0;j=(j^128)+65408+(d[O>>0]<<8|d[N>>0])&65535;c[ra>>2]=j;c[qa>>2]=j;break a}}case 8:{c[qa>>2]=ma[c[la>>2]&127](b)|0;break}case 9:{c[qa>>2]=d[A>>0];break}case 10:{h=a[I>>0]|0;j=d[J>>0]<<8|h&255;c[qa>>2]=j;a[I>>0]=h+1<<24>>24;a[J>>0]=(j+1|0)>>>8;break}case 11:{h=a[I>>0]|0;j=d[J>>0]<<8|h&255;c[qa>>2]=j;a[I>>0]=h+-1<<24>>24;a[J>>0]=(j+65535|0)>>>8;break}case 12:{c[qa>>2]=(ma[c[la>>2]&127](b)|0)+65280;break}case 13:{c[qa>>2]=d[A>>0]|65280;break}default:{}}while(0);j=k+1|0;g=a[j>>0]|0;do switch(g<<24>>24){case 25:{h=d[w>>0]<<8|a[F>>0]&15;c[ta>>2]=h;g=a[G>>0]|0;h=h|g<<1&255&-128&255|g<<5&64;ya=(g&16)==0;h=ya?h:h|32;if((g&66)!=0|ya^1)c[ta>>2]=h;if(g&1)c[ta>>2]=h+16;break}case 8:case 6:case 5:case 4:case 3:case 2:case 1:{c[ta>>2]=d[b+((g&255)+-1)>>0];break}case 7:{c[ta>>2]=oa[c[na>>2]&63](b,c[qa>>2]|0)|0;break}case 9:{c[ta>>2]=d[b>>0]<<8|d[A>>0];break}case 10:{c[ta>>2]=d[H>>0]<<8|d[D>>0];break}case 11:{c[ta>>2]=d[J>>0]<<8|d[I>>0];break}case 12:{c[ta>>2]=d[w>>0]<<8|d[G>>0];break}case 13:{c[ta>>2]=c[ka>>2];break}case 14:{c[ta>>2]=oa[c[na>>2]&63](b,c[qa>>2]|0)|0;c[ta>>2]=((oa[c[na>>2]&63](b,(c[qa>>2]|0)+1&65535)|0)<<8)+(c[ta>>2]|0);break}case 15:{c[ta>>2]=ma[c[la>>2]&127](b)|0;break}case 16:{c[ta>>2]=ma[c[la>>2]&127](b)|0;c[ta>>2]=((ma[c[la>>2]&127](b)|0)<<8)+(c[ta>>2]|0);break}case 17:{g=d[q>>0]|0;do if(!(g&2))if(!(g&4)){g=J;h=d[I>>0]|0;break}else{g=O;h=d[N>>0]|0;break}else{g=M;h=d[L>>0]|0}while(0);c[ta>>2]=d[g>>0]<<8|h;break}case 18:{g=d[q>>0]|0;if(!(g&2))g=(g&4|0)==0?J:O;else g=M;c[ta>>2]=d[g>>0];break}case 19:{g=d[q>>0]|0;if(!(g&2))g=(g&4|0)==0?I:N;else g=L;c[ta>>2]=d[g>>0];break}case 20:{ya=d[B>>0]|0;c[ta>>2]=ya;ya=((a[C>>0]|0)==0?0:4)|(a[10832+ya>>0]&-24|a[G>>0]&1)&255;c[sa>>2]=ya;a[G>>0]=ya;break}case 21:{ya=(a[B>>0]&-128|a[E>>0]&127)&255;c[ta>>2]=ya;ya=((a[C>>0]|0)==0?0:4)|(a[10832+ya>>0]&-24|a[G>>0]&1)&255;c[sa>>2]=ya;a[G>>0]=ya;break}case 22:{c[ta>>2]=0;break}case 23:{c[ta>>2]=oa[c[na>>2]&63](b,c[ka>>2]|0)|0;c[ta>>2]=((oa[c[na>>2]&63](b,(c[ka>>2]|0)+1&65535)|0)<<8)+(c[ta>>2]|0);c[ka>>2]=(c[ka>>2]|0)+2&65535;break}case 24:{c[ta>>2]=((ma[c[la>>2]&127](b)|0)^128)+65408&65535;break}default:{}}while(0);do switch(a[k+3>>0]|0){case 85:{l=c[ta>>2]|0;l=l>>>4&15|l<<4&240;c[ta>>2]=l;l=(l|0)==0?64:0;c[sa>>2]=l;a[G>>0]=l;l=184;break}case 1:{l=c[ta>>2]|0;c[ta>>2]=c[fa>>2];c[fa>>2]=l;l=184;break}case 2:{l=d[b>>0]<<8|d[A>>0];ya=c[ga>>2]|0;a[A>>0]=ya;a[b>>0]=ya>>>8;c[ga>>2]=l;l=d[H>>0]<<8|d[D>>0];ya=c[ha>>2]|0;a[D>>0]=ya;a[H>>0]=ya>>>8;c[ha>>2]=l;l=d[J>>0]<<8|d[I>>0];ya=c[ia>>2]|0;a[I>>0]=ya;a[J>>0]=ya>>>8;c[ia>>2]=l;l=184;break}case 3:{a[D>>0]=a[I>>0]|0;a[H>>0]=a[J>>0]|0;l=c[ta>>2]|0;a[I>>0]=l;a[J>>0]=l>>>8;l=184;break}case 4:{l=(oa[c[na>>2]&63](b,c[ka>>2]|0)|0)+((oa[c[na>>2]&63](b,(c[ka>>2]|0)+1&65535)|0)<<8)|0;Aa[c[pa>>2]&7](b,c[ka>>2]|0,c[ta>>2]&255);Aa[c[pa>>2]&7](b,(c[ka>>2]|0)+1&65535,(c[ta>>2]|0)>>>8&255);c[ta>>2]=l;l=184;break}case 5:{ya=d[w>>0]|0;j=c[ta>>2]|0;l=j^ya;j=j+ya|0;c[ta>>2]=j;l=(j^l)&16|a[10832+j>>0]&-23&255|((j^ya)&(l^128))>>>5&4;c[sa>>2]=l;a[G>>0]=l;l=184;break}case 6:{ya=d[w>>0]|0;j=c[ta>>2]|0;l=j^ya;j=ya+(a[G>>0]&1)+j|0;c[ta>>2]=j;l=(j^l)&16|a[10832+j>>0]&-23&255|((j^ya)&(l^128))>>>5&4;c[sa>>2]=l;a[G>>0]=l;l=184;break}case 7:{j=c[ta>>2]^255;ya=d[w>>0]|0;l=j^ya;j=j+1+ya|0;c[ta>>2]=j;l=((j^l)&16|a[10832+j>>0]&-21&255|((j^ya)&(l^128))>>>5&4)^1;c[sa>>2]=l;a[G>>0]=l;l=184;break}case 8:{j=c[ta>>2]^255;ya=d[w>>0]|0;l=j^ya;j=j+((a[G>>0]&1^1)&255)+ya|0;c[ta>>2]=j;l=((j^l)&16|a[10832+j>>0]&-21&255|((j^ya)&(l^128))>>>5&4)^1;c[sa>>2]=l;a[G>>0]=l;l=184;break}case 9:{l=c[ta>>2]&d[w>>0];c[ta>>2]=l;l=a[10832+l>>0]&-4;c[sa>>2]=l&255;a[G>>0]=l;l=184;break}case 10:{l=c[ta>>2]|d[w>>0];c[ta>>2]=l;l=a[10832+l>>0]&-20;c[sa>>2]=l&255;a[G>>0]=l;l=184;break}case 11:{l=c[ta>>2]^d[w>>0];c[ta>>2]=l;l=a[10832+l>>0]&-20;c[sa>>2]=l&255;a[G>>0]=l;l=184;break}case 12:{i=c[ta>>2]^255;l=a[w>>0]|0;j=l&255;ya=i^j;i=i+1+j|0;c[ta>>2]=i;ya=((i^ya)&16|a[10832+i>>0]&-61&255|((i^j)&(ya^128))>>>5&4)^1;c[sa>>2]=ya;a[G>>0]=ya|l&40;l=184;break}case 13:{ya=c[ta>>2]|0;l=ya+1|0;c[ta>>2]=l;l=(l&(ya^128))>>>5&4|(l^ya)&16|a[10832+l>>0]&-23&255;c[sa>>2]=l;a[G>>0]=l&252|a[G>>0]&1;l=184;break}case 14:{ya=c[ta>>2]|0;l=ya+255|0;c[ta>>2]=l;l=(ya&0-ya)>>>5&4|(ya^16^l)&16|a[10832+l>>0]&-21&255;c[sa>>2]=l^1;a[G>>0]=l&254|a[G>>0]&1;l=184;break}case 15:{if(!(c[S>>2]&1)){g=d[G>>0]|0;c[sa>>2]=g}else g=c[sa>>2]|0;h=a[G>>0]|0;i=g&1;if(!(h&2)){c[sa>>2]=0;if((h&16)==0?(n=c[ta>>2]|0,(n&14)>>>0<=9):0){h=n;g=0}else{h=(c[ta>>2]|0)+6|0;c[ta>>2]=h;c[sa>>2]=16;g=16}if((i|0)!=0|h>>>0>153){h=h+96|0;c[ta>>2]=h;g=g|1;c[sa>>2]=g}}else{c[sa>>2]=2;if((h&16)==0?(m=c[ta>>2]|0,(m&14)>>>0<=9):0){h=m;g=2}else{h=(c[ta>>2]|0)+250^256;c[ta>>2]=h;c[sa>>2]=18;g=18}if((i|0)!=0|h>>>0>153){h=h+160^256;c[ta>>2]=h;g=g|1;c[sa>>2]=g}}a[G>>0]=g+(a[10832+h>>0]&-20&255);l=184;break}case 16:{l=c[ta>>2]^255;c[ta>>2]=l;l=a[10832+l>>0]&58|a[G>>0]&-59;c[sa>>2]=l&255;a[G>>0]=l;l=184;break}case 17:{j=c[ta>>2]|0;ya=j^255;a[w>>0]=0;l=ya+1|0;c[ta>>2]=l;l=((l&j)>>>5&4|(l^ya)&16|a[10832+l>>0]&-21&255)^1;c[sa>>2]=l;a[G>>0]=l;l=184;break}case 18:{ya=c[qa>>2]|0;c[ra>>2]=ya;j=c[ta>>2]|0;l=j+ya|0;c[ta>>2]=l;l=(l^(j^ya))>>>8&16|a[10832+(l>>>8)>>0]&41|a[G>>0]&-60&255;c[sa>>2]=l;a[G>>0]=l;l=184;break}case 19:{i=a[G>>0]&1;ya=c[qa>>2]|0;c[ra>>2]=ya;j=c[ta>>2]|0;l=j^ya;j=ya+i+j|0;c[ta>>2]=j;l=(j^l)>>>8&16|a[10832+(j>>>8)>>0]&-87&255|((j&65535|0)==0?64:0)|((j^ya)&(l^32768))>>>13&4;c[sa>>2]=l;a[G>>0]=l;l=184;break}case 20:{j=(a[G>>0]&1^1)&255;i=c[ta>>2]^65535;ya=c[qa>>2]|0;c[ra>>2]=ya;l=ya^i;j=i+j+ya|0;c[ta>>2]=j;l=((j^l)>>>8&16|a[10832+(j>>>8)>>0]&-85&255|((j&65535|0)==0?64:0)|((j^ya)&(l^32768))>>>13&4)^1;c[sa>>2]=l;a[G>>0]=l;l=184;break}case 21:{c[ta>>2]=(c[ta>>2]|0)+1&65535;l=184;break}case 22:{c[ta>>2]=(c[ta>>2]|0)+65535&65535;l=184;break}case 23:{c[sa>>2]=a[G>>0]&-63&255;ya=oa[c[na>>2]&63](b,d[J>>0]<<8|d[I>>0])|0;c[ta>>2]=ya;Aa[c[pa>>2]&7](b,d[H>>0]<<8|d[D>>0],ya);ya=(c[ta>>2]|0)+(d[w>>0]|0)|0;c[ta>>2]=ya;l=(d[J>>0]<<8|d[I>>0])+1|0;a[I>>0]=l;a[J>>0]=l>>>8;l=(d[H>>0]<<8|d[D>>0])+1|0;a[D>>0]=l;a[H>>0]=l>>>8;l=(d[b>>0]<<8|d[A>>0])+-1|0;a[A>>0]=l;a[b>>0]=l>>>8;a[G>>0]=ya<<4&32|ya&8|a[G>>0]&-63&255|((l&65535|0)==0?0:4);l=184;break}case 24:{c[sa>>2]=a[G>>0]&-63&255;ya=oa[c[na>>2]&63](b,d[J>>0]<<8|d[I>>0])|0;c[ta>>2]=ya;Aa[c[pa>>2]&7](b,d[H>>0]<<8|d[D>>0],ya);ya=(c[ta>>2]|0)+(d[w>>0]|0)|0;c[ta>>2]=ya;l=(d[J>>0]<<8|d[I>>0])+-1|0;a[I>>0]=l;a[J>>0]=l>>>8;l=(d[H>>0]<<8|d[D>>0])+-1|0;a[D>>0]=l;a[H>>0]=l>>>8;l=(d[b>>0]<<8|d[A>>0])+-1|0;a[A>>0]=l;a[b>>0]=l>>>8;a[G>>0]=ya<<4&32|ya&8|a[G>>0]&-63&255|((l&65535|0)==0?0:4);l=184;break}case 25:{c[sa>>2]=1;l=(oa[c[na>>2]&63](b,d[J>>0]<<8|d[I>>0])|0)^255;h=d[w>>0]|0;i=l^h;l=l+h+(c[sa>>2]&1)|0;ya=l^i;j=ya&16|a[10832+l>>0]&-62&255;c[sa>>2]=((l^h)&(i^128))>>>5&4|j;ya=l-(ya>>>4&1)|0;c[ta>>2]=ya;l=(d[J>>0]<<8|d[I>>0])+1|0;a[I>>0]=l;a[J>>0]=l>>>8;l=(d[b>>0]<<8|d[A>>0])+-1|0;a[A>>0]=l;a[b>>0]=l>>>8;a[G>>0]=ya&8|j|ya<<4&32|a[G>>0]&1|((l&65535|0)==0?0:4);l=184;break}case 26:{c[sa>>2]=1;l=(oa[c[na>>2]&63](b,d[J>>0]<<8|d[I>>0])|0)^255;h=d[w>>0]|0;i=l^h;l=l+h+(c[sa>>2]&1)|0;ya=l^i;j=ya&16|a[10832+l>>0]&-62&255;c[sa>>2]=((l^h)&(i^128))>>>5&4|j;ya=l-(ya>>>4&1)|0;c[ta>>2]=ya;l=(d[J>>0]<<8|d[I>>0])+-1|0;a[I>>0]=l;a[J>>0]=l>>>8;l=(d[b>>0]<<8|d[A>>0])+-1|0;a[A>>0]=l;a[b>>0]=l>>>8;a[G>>0]=ya&8|j|ya<<4&32|a[G>>0]&1|((l&65535|0)==0?0:4);l=184;break}case 27:{c[ua>>2]=c[ta>>2];l=184;break}case 28:{if(!(ma[c[11344+((f>>>3&3)<<2)>>2]&127](b)|0))l=184;else{c[wa>>2]=(c[wa>>2]|0)+(d[(c[R>>2]|0)+1286>>0]|0);c[ua>>2]=c[ta>>2];l=184}break}case 29:{if(!(ma[c[11360+((f>>>3&3)<<2)>>2]&127](b)|0))l=184;else{c[wa>>2]=(c[wa>>2]|0)+(d[(c[R>>2]|0)+1286>>0]|0);c[ua>>2]=c[ta>>2];l=184}break}case 30:{l=(c[ua>>2]|0)+65408+(c[ta>>2]^128)&65535;c[ra>>2]=l;c[ua>>2]=l;l=184;break}case 31:{if(!(ma[c[11344+((f>>>3&3)<<2)>>2]&127](b)|0))l=184;else{c[wa>>2]=(c[wa>>2]|0)+(d[(c[R>>2]|0)+1284>>0]|0);l=(c[ua>>2]|0)+65408+(c[ta>>2]^128)&65535;c[ra>>2]=l;c[ua>>2]=l;l=184}break}case 32:{ya=(a[b>>0]|0)+-1<<24>>24;a[b>>0]=ya;if(!(ya<<24>>24))l=184;else{c[wa>>2]=(c[wa>>2]|0)+(d[(c[R>>2]|0)+1280>>0]|0);l=(c[ua>>2]|0)+65408+(c[ta>>2]^128)&65535;c[ra>>2]=l;c[ua>>2]=l;l=184}break}case 33:{l=(c[ka>>2]|0)+65534&65535;c[ka>>2]=l;Aa[c[pa>>2]&7](b,l,c[ua>>2]&255);Aa[c[pa>>2]&7](b,(c[ka>>2]|0)+1&65535,(c[ua>>2]|0)>>>8&255);c[ua>>2]=c[ta>>2];l=184;break}case 34:{if(!(ma[c[11344+((f>>>3&3)<<2)>>2]&127](b)|0))l=184;else{c[wa>>2]=(c[wa>>2]|0)+(d[(c[R>>2]|0)+1282>>0]|0);l=(c[ka>>2]|0)+65534&65535;c[ka>>2]=l;Aa[c[pa>>2]&7](b,l,c[ua>>2]&255);Aa[c[pa>>2]&7](b,(c[ka>>2]|0)+1&65535,(c[ua>>2]|0)>>>8&255);c[ua>>2]=c[ta>>2];l=184}break}case 35:{if(!(ma[c[11360+((f>>>3&3)<<2)>>2]&127](b)|0))l=184;else{c[wa>>2]=(c[wa>>2]|0)+(d[(c[R>>2]|0)+1282>>0]|0);l=(c[ka>>2]|0)+65534&65535;c[ka>>2]=l;Aa[c[pa>>2]&7](b,l,c[ua>>2]&255);Aa[c[pa>>2]&7](b,(c[ka>>2]|0)+1&65535,(c[ua>>2]|0)>>>8&255);c[ua>>2]=c[ta>>2];l=184}break}case 36:{if(!(ma[c[11344+((f>>>3&3)<<2)>>2]&127](b)|0))l=184;else{c[wa>>2]=(c[wa>>2]|0)+(d[(c[R>>2]|0)+1288>>0]|0);c[ua>>2]=oa[c[na>>2]&63](b,c[ka>>2]|0)|0;l=(oa[c[na>>2]&63](b,(c[ka>>2]|0)+1&65535)|0)<<8;c[ua>>2]=(c[ua>>2]|0)+l;c[ka>>2]=(c[ka>>2]|0)+2&65535;l=184}break}case 37:{if(!(ma[c[11360+((f>>>3&3)<<2)>>2]&127](b)|0))l=184;else{c[wa>>2]=(c[wa>>2]|0)+(d[(c[R>>2]|0)+1288>>0]|0);c[ua>>2]=oa[c[na>>2]&63](b,c[ka>>2]|0)|0;l=(oa[c[na>>2]&63](b,(c[ka>>2]|0)+1&65535)|0)<<8;c[ua>>2]=(c[ua>>2]|0)+l;c[ka>>2]=(c[ka>>2]|0)+2&65535;l=184}break}case 39:case 38:{c[ua>>2]=c[ta>>2];a[r>>0]=a[C>>0]|0;l=184;break}case 40:{l=(c[ka>>2]|0)+65534&65535;c[ka>>2]=l;Aa[c[pa>>2]&7](b,l,c[ua>>2]&255);Aa[c[pa>>2]&7](b,(c[ka>>2]|0)+1&65535,(c[ua>>2]|0)>>>8&255);c[ua>>2]=(c[ea>>2]|0)+(f&56);l=184;break}case 41:{l=c[ta>>2]|0;l=l>>>7&1|l<<1;c[ta>>2]=l;l=a[10832+l>>0]&41|a[G>>0]&-44;c[sa>>2]=l&255;a[G>>0]=l;l=184;break}case 42:{ya=c[ta>>2]|0;l=ya&1;l=(l<<7)+(ya>>>1)+(l<<8)|0;c[ta>>2]=l;l=a[10832+l>>0]&41|a[G>>0]&-44;c[sa>>2]=l&255;a[G>>0]=l;l=184;break}case 43:{l=a[G>>0]|0;ya=c[ta>>2]<<1|l&1;c[ta>>2]=ya;l=a[10832+ya>>0]&41|l&-44;c[sa>>2]=l&255;a[G>>0]=l;l=184;break}case 44:{ya=c[ta>>2]|0;l=a[G>>0]|0;ya=(ya<<8&256)+(ya>>>1)+(l<<7&255)|0;c[ta>>2]=ya;l=a[10832+ya>>0]&41|l&-44;c[sa>>2]=l&255;a[G>>0]=l;l=184;break}case 45:{l=c[ta>>2]|0;l=l>>>7&1|l<<1;c[ta>>2]=l;l=a[10832+l>>0]&-19;c[sa>>2]=l&255;a[G>>0]=l;l=184;break}case 46:{ya=c[ta>>2]|0;l=ya&1;l=(l<<7)+(ya>>>1)+(l<<8)|0;c[ta>>2]=l;l=a[10832+l>>0]&-19;c[sa>>2]=l&255;a[G>>0]=l;l=184;break}case 47:{l=c[ta>>2]<<1|a[G>>0]&1;c[ta>>2]=l;l=a[10832+l>>0]&-19;c[sa>>2]=l&255;a[G>>0]=l;l=184;break}case 48:{l=c[ta>>2]|0;l=(l<<8&256)+(l>>>1)+(a[G>>0]<<7&255)|0;c[ta>>2]=l;l=a[10832+l>>0]&-19;c[sa>>2]=l&255;a[G>>0]=l;l=184;break}case 49:{l=c[ta>>2]<<1;c[ta>>2]=l;l=a[10832+l>>0]&-19;c[sa>>2]=l&255;a[G>>0]=l;l=184;break}case 50:{l=c[ta>>2]|0;l=(l>>>1)+(l&128)+(l<<8&256)|0;c[ta>>2]=l;l=a[10832+l>>0]&-19;c[sa>>2]=l&255;a[G>>0]=l;l=184;break}case 51:{l=c[ta>>2]<<1|1;c[ta>>2]=l;l=a[10832+l>>0]&-19;c[sa>>2]=l&255;a[G>>0]=l;l=184;break}case 52:{l=c[ta>>2]|0;l=(l<<8&256)+(l>>>1)|0;c[ta>>2]=l;l=a[10832+l>>0]&-19;c[sa>>2]=l&255;a[G>>0]=l;l=184;break}case 53:{j=c[ta>>2]|0;ya=a[w>>0]|0;l=j>>>4&15|ya&-16&255;a[w>>0]=l;c[ta>>2]=j<<4&240|ya&15;l=a[10832+l>>0]&-20|a[G>>0]&1;c[sa>>2]=l&255;a[G>>0]=l;l=184;break}case 54:{l=a[w>>0]|0;ya=((l&255)<<8)+(c[ta>>2]|0)|0;l=ya&15|l&-16&255;a[w>>0]=l;c[ta>>2]=ya>>>4&255;l=a[10832+l>>0]&-20|a[G>>0]&1;c[sa>>2]=l&255;a[G>>0]=l;l=184;break}case 55:{i=c[ta>>2]&1<<(f>>>3&7);g=((i|0)==0?68:0)|a[G>>0]&1;c[sa>>2]=g;if((a[j>>0]|0)==7){h=g|i&128;g=(c[ra>>2]|0)>>>8&40}else{h=g;g=i&168}a[G>>0]=h|g;l=184;break}case 56:{c[ta>>2]=c[ta>>2]&~(1<<(f>>>3&7));l=184;break}case 57:{c[ta>>2]=c[ta>>2]|1<<(f>>>3&7);l=184;break}case 58:{c[wa>>2]=(c[wa>>2]|0)+(d[s>>0]|0);g=oa[c[T>>2]&63](c[va>>2]|0,c[qa>>2]|0)|0;c[ta>>2]=g;if((a[i>>0]|0)==1)l=184;else{l=a[10832+g>>0]&-20|a[G>>0]&1;c[sa>>2]=l&255;a[G>>0]=l;l=184}break}case 59:{c[wa>>2]=(c[wa>>2]|0)+(d[s>>0]|0);Aa[c[U>>2]&7](c[va>>2]|0,c[qa>>2]|0,c[ta>>2]|0);l=184;break}case 60:{c[wa>>2]=(c[wa>>2]|0)+(d[s>>0]|0);l=oa[c[T>>2]&63](c[va>>2]|0,c[qa>>2]|0)|0;c[ta>>2]=l;Aa[c[pa>>2]&7](b,d[J>>0]<<8|d[I>>0],l);Gc(b,1);l=184;break}case 62:{c[wa>>2]=(c[wa>>2]|0)+(d[s>>0]|0);l=oa[c[T>>2]&63](c[va>>2]|0,c[qa>>2]|0)|0;c[ta>>2]=l;Aa[c[pa>>2]&7](b,d[J>>0]<<8|d[I>>0],l);Gc(b,-1);l=184;break}case 61:{l=oa[c[na>>2]&63](b,d[J>>0]<<8|d[I>>0])|0;c[ta>>2]=l;c[wa>>2]=(c[wa>>2]|0)+(d[s>>0]|0);Aa[c[U>>2]&7](c[va>>2]|0,c[qa>>2]|0,l);Gc(b,1);l=184;break}case 63:{l=oa[c[na>>2]&63](b,d[J>>0]<<8|d[I>>0])|0;c[ta>>2]=l;c[wa>>2]=(c[wa>>2]|0)+(d[s>>0]|0);Aa[c[U>>2]&7](c[va>>2]|0,c[qa>>2]|0,l);Gc(b,-1);l=184;break}case 64:{l=d[G>>0]|0;l=(l&197|a[w>>0]&40|l<<4&16)^1;c[sa>>2]=l;a[G>>0]=l;l=184;break}case 65:{l=a[G>>0]&-60|a[w>>0]&40|1;c[sa>>2]=l&255;a[G>>0]=l;l=184;break}case 66:{c[ua>>2]=c[ca>>2];a[u>>0]=1;l=184;break}case 67:{c[ua>>2]=c[ca>>2];a[u>>0]=2;l=184;break}case 68:{a[C>>0]=0;a[r>>0]=0;c[ca>>2]=c[ua>>2];a[q>>0]=1;a[E>>0]=(a[E>>0]|0)+1<<24>>24;c[wa>>2]=(c[wa>>2]|0)+(d[K>>0]|0);g=ma[c[la>>2]&127](b)|0;c[wa>>2]=(c[wa>>2]|0)+(d[(c[R>>2]|0)+g>>0]|0);f=g;g=(c[_>>2]|0)+(g<<2)|0;break}case 69:{a[C>>0]=1;a[r>>0]=1;c[ca>>2]=c[ua>>2];a[q>>0]=1;a[E>>0]=(a[E>>0]|0)+1<<24>>24;c[wa>>2]=(c[wa>>2]|0)+(d[K>>0]|0);g=ma[c[la>>2]&127](b)|0;c[wa>>2]=(c[wa>>2]|0)+(d[(c[R>>2]|0)+g>>0]|0);f=g;g=(c[_>>2]|0)+(g<<2)|0;break}case 70:{if((d[v>>0]|0)<3){a[v>>0]=0;l=184}else l=184;break}case 71:{if((d[v>>0]|0)<3){a[v>>0]=1;l=184}else l=184;break}case 72:{if((d[v>>0]|0)<3){a[v>>0]=2;l=184}else l=184;break}case 73:{f=d[q>>0]|0;b:do if(!(f&2)){if(!(f&4)){c[qa>>2]=d[J>>0]<<8|d[I>>0];a[E>>0]=(a[E>>0]|0)+1<<24>>24;c[wa>>2]=(c[wa>>2]|0)+(d[K>>0]|0);f=ma[c[la>>2]&127](b)|0;c[wa>>2]=(c[wa>>2]|0)+(d[(c[R>>2]|0)+(f+512)>>0]|0);a[p>>0]=0;ya=(f&7)+1&255;a[da>>0]=ya;k=a[(c[$>>2]|0)+(f>>>3&31)>>0]|0;a[Y>>0]=k;a[Z>>0]=k<<24>>24==55?0:ya;break}f=ma[c[la>>2]&127](b)|0;f=(f^128)+65408+(d[O>>0]<<8|d[N>>0])&65535;c[ra>>2]=f;c[qa>>2]=f;f=ma[c[la>>2]&127](b)|0;c[wa>>2]=(c[wa>>2]|0)+(d[(c[R>>2]|0)+(f+768)>>0]|0);a[p>>0]=0;a[da>>0]=7;ya=a[(c[$>>2]|0)+(f>>>3&31)>>0]|0;a[Y>>0]=ya;ya=ya<<24>>24==55?0:(f&7)+1|0;a[Z>>0]=ya;switch(ya&15){case 7:case 0:break b;default:{}}a[q>>0]=a[q>>0]|8}else{f=ma[c[la>>2]&127](b)|0;f=(f^128)+65408+(d[M>>0]<<8|d[L>>0])&65535;c[ra>>2]=f;c[qa>>2]=f;f=ma[c[la>>2]&127](b)|0;c[wa>>2]=(c[wa>>2]|0)+(d[(c[R>>2]|0)+(f+768)>>0]|0);a[p>>0]=0;a[da>>0]=7;ya=a[(c[$>>2]|0)+(f>>>3&31)>>0]|0;a[Y>>0]=ya;ya=ya<<24>>24==55?0:(f&7)+1|0;a[Z>>0]=ya;switch(ya&15){case 7:case 0:break b;default:{}}a[q>>0]=a[q>>0]|8}while(0);a[q>>0]=a[q>>0]|1;g=Z;break}case 74:{c[ca>>2]=(c[ua>>2]|0)+65535&65535;a[q>>0]=3;a[E>>0]=(a[E>>0]|0)+1<<24>>24;c[wa>>2]=(c[wa>>2]|0)+(d[K>>0]|0);g=ma[c[la>>2]&127](b)|0;c[wa>>2]=(c[wa>>2]|0)+(d[(c[R>>2]|0)+(g+256)>>0]|0);f=g;g=(c[_>>2]|0)+(g<<2)|0;break}case 75:{c[ca>>2]=(c[ua>>2]|0)+65535&65535;a[q>>0]=1;a[E>>0]=(a[E>>0]|0)+1<<24>>24;c[wa>>2]=(c[wa>>2]|0)+(d[K>>0]|0);g=ma[c[la>>2]&127](b)|0;c[wa>>2]=(c[wa>>2]|0)+(d[(c[R>>2]|0)+(g+1024)>>0]|0);f=g;g=(c[aa>>2]|0)+(g<<2)|0;break}case 76:{c[ca>>2]=(c[ua>>2]|0)+65535&65535;a[q>>0]=5;a[E>>0]=(a[E>>0]|0)+1<<24>>24;c[wa>>2]=(c[wa>>2]|0)+(d[K>>0]|0);g=ma[c[la>>2]&127](b)|0;c[wa>>2]=(c[wa>>2]|0)+(d[(c[R>>2]|0)+(g+256)>>0]|0);f=g;g=(c[_>>2]|0)+(g<<2)|0;break}case 77:{g=c[ba>>2]|0;if(!g)l=184;else{oa[g&63](c[va>>2]|0,b)|0;l=184}break}case 78:{l=c[ta>>2]&d[w>>0];c[ta>>2]=l;l=a[10832+l>>0]&-4;c[sa>>2]=l&255;a[G>>0]=l;l=184;break}case 79:{c[wa>>2]=(c[wa>>2]|0)+(d[s>>0]|0);l=c[ta>>2]&(oa[c[T>>2]&63](c[va>>2]|0,c[qa>>2]|0)|0);c[ta>>2]=l;l=a[10832+l>>0]&-4;c[sa>>2]=l&255;a[G>>0]=l;l=184;break}case 80:{l=oa[c[na>>2]&63](b,d[J>>0]<<8|d[I>>0])|0;c[ta>>2]=l;c[wa>>2]=(c[wa>>2]|0)+(d[s>>0]|0);Aa[c[U>>2]&7](c[va>>2]|0,c[qa>>2]|0,l);l=(d[J>>0]<<8|d[I>>0])+1|0;a[I>>0]=l;a[J>>0]=l>>>8;a[A>>0]=(a[A>>0]|0)+1<<24>>24;l=a[b>>0]|0;ya=l&255;l=l+-1<<24>>24;a[b>>0]=l;l=((ya+31^ya)&16|(c[ta>>2]|0)>>>6&2|a[10832+(l&255)>>0]&-19&255)^16;c[sa>>2]=l;a[G>>0]=l;l=184;break}case 81:{l=oa[c[na>>2]&63](b,d[J>>0]<<8|d[I>>0])|0;c[ta>>2]=l;c[wa>>2]=(c[wa>>2]|0)+(d[s>>0]|0);Aa[c[U>>2]&7](c[va>>2]|0,c[qa>>2]|0,l);l=(d[J>>0]<<8|d[I>>0])+-1|0;a[I>>0]=l;a[J>>0]=l>>>8;a[A>>0]=(a[A>>0]|0)+1<<24>>24;l=a[b>>0]|0;ya=l&255;l=l+-1<<24>>24;a[b>>0]=l;l=((ya+31^ya)&16|(c[ta>>2]|0)>>>6&2|a[10832+(l&255)>>0]&-19&255)^16;c[sa>>2]=l;a[G>>0]=l;l=184;break}case 82:{l=c[ta>>2]|0;c[ta>>2]=t(l>>>8&255,l&255)|0;l=184;break}case 83:{l=t(c[ta>>2]|0,d[w>>0]|0)|0;c[ta>>2]=l;l=a[G>>0]&20|l>>>0>255|((l|0)==0&1)<<6;c[sa>>2]=l;a[G>>0]=l;l=184;break}case 84:{l=t(c[qa>>2]|0,c[ta>>2]|0)|0;c[ta>>2]=l;l=((l|0)==0&1)<<6|l>>>0>65535|a[G>>0]&20;c[sa>>2]=l;a[G>>0]=l;l=184;break}default:l=184}while(0);if((l|0)==184){l=0;g=a[k>>0]|0;c:do switch(g<<24>>24){case 25:{i=c[ta>>2]|0;a[F>>0]=i&15;a[w>>0]=i>>>8;g=i>>>5&2|i>>>1&64;za=(i&32|0)==0;h=g|16;j=za?g:h;i=(i&16|0)==0;ya=j|1;c[sa>>2]=i?(za?g:h):ya;a[G>>0]=i?j:ya;break}case 8:case 6:case 5:case 4:case 3:case 2:case 1:{a[b+((g&255)+-1)>>0]=c[ta>>2];break}case 7:{Aa[c[pa>>2]&7](b,c[qa>>2]|0,c[ta>>2]|0);break}case 9:{za=c[ta>>2]|0;a[A>>0]=za;a[b>>0]=za>>>8;break}case 10:{za=c[ta>>2]|0;a[D>>0]=za;a[H>>0]=za>>>8;break}case 11:{za=c[ta>>2]|0;a[I>>0]=za;a[J>>0]=za>>>8;break}case 12:{za=c[ta>>2]|0;a[G>>0]=za;a[w>>0]=za>>>8;break}case 13:{c[ka>>2]=c[ta>>2]&65535;break}case 14:{Aa[c[pa>>2]&7](b,c[qa>>2]|0,c[ta>>2]&255);Aa[c[pa>>2]&7](b,(c[qa>>2]|0)+1&65535,(c[ta>>2]|0)>>>8&255);break}case 15:{h=d[q>>0]|0;if(h&2|0){za=c[ta>>2]|0;a[L>>0]=za;a[M>>0]=za>>>8;break c}g=c[ta>>2]|0;i=g&255;if(!(h&4)){a[I>>0]=i;a[J>>0]=g>>>8;break c}else{a[N>>0]=i;a[O>>0]=g>>>8;break c}}case 16:{g=d[q>>0]|0;if(g&2|0){a[M>>0]=c[ta>>2];break c}h=c[ta>>2]&255;if(!(g&4)){a[J>>0]=h;break c}else{a[O>>0]=h;break c}}case 17:{g=d[q>>0]|0;if(g&2|0){a[L>>0]=c[ta>>2];break c}h=c[ta>>2]&255;if(!(g&4)){a[I>>0]=h;break c}else{a[N>>0]=h;break c}}case 18:{a[B>>0]=c[ta>>2];break}case 19:{za=c[ta>>2]|0;a[E>>0]=za&127;a[B>>0]=za&128;break}case 20:{if(!(a[b>>0]|0)){za=a[G>>0]&42|68;c[sa>>2]=za&255;a[G>>0]=za;break c}if(!(a[x>>0]|0)){if(a[r>>0]|0?a[y>>0]|0:0)break c;c[ua>>2]=c[ca>>2]}break}case 21:{if(a[b>>0]|0){c[ua>>2]=c[ca>>2];c[wa>>2]=(c[wa>>2]|0)+(d[(c[R>>2]|0)+1290>>0]|0)}break}case 22:{if(d[b>>0]<<8|d[A>>0]|0){c[ua>>2]=c[ca>>2];c[wa>>2]=(c[wa>>2]|0)+(d[(c[R>>2]|0)+1290>>0]|0)}break}case 23:{if(d[b>>0]<<8|d[A>>0]|0?(a[G>>0]&64)==0:0){c[ua>>2]=c[ca>>2];c[wa>>2]=(c[wa>>2]|0)+(d[(c[R>>2]|0)+1290>>0]|0)}break}case 24:{za=(c[ka>>2]|0)+65534&65535;c[ka>>2]=za;Aa[c[pa>>2]&7](b,za,c[ta>>2]&255);Aa[c[pa>>2]&7](b,(c[ka>>2]|0)+1&65535,(c[ta>>2]|0)>>>8&255);break}default:{}}while(0);g=d[q>>0]|0;if(g&8|0){a[q>>0]=g&247;Aa[c[pa>>2]&7](b,c[qa>>2]|0,c[ta>>2]&255)}c[ca>>2]=c[ua>>2];g=k}h=a[q>>0]|0;if(!(h&1))break;else k=g}f=c[W>>2]|0;if(f|0){if(((a[u>>0]|0)!=0?(a[x>>0]|0)==0:0)?(a[y>>0]|0)==0:0){if(!(yc(f,0,X)|0))f=e;else{f=(c[X>>2]|0)+(c[wa>>2]|0)|0;f=f>>>0<e>>>0?f:e}c[wa>>2]=f;f=c[W>>2]|0}zc(f,(c[wa>>2]|0)-V|0)}V=c[wa>>2]|0;f=a[x>>0]|0;d:do if(!(f<<24>>24)){if(a[r>>0]|0?(o=a[y>>0]|0,o<<24>>24):0){f=a[u>>0]|0;if(f<<24>>24){c[ca>>2]=(c[ca>>2]|0)+(f&255)&65535;a[u>>0]=0}switch(a[v>>0]|0){case 0:{if(c[S>>2]&2|0)a[y>>0]=o&-2;a[r>>0]=0;a[C>>0]=0;c[la>>2]=72;c[wa>>2]=V+2;break d}case 1:{if(c[S>>2]&2|0)a[y>>0]=o&-2;a[r>>0]=0;a[C>>0]=0;za=(c[ka>>2]|0)+65534&65535;c[ka>>2]=za;Aa[c[pa>>2]&7](b,za,c[ca>>2]&255);Aa[c[pa>>2]&7](b,(c[ka>>2]|0)+1&65535,(c[ca>>2]|0)>>>8&255);c[ca>>2]=56;a[E>>0]=(a[E>>0]|0)+1<<24>>24;za=(c[wa>>2]|0)+(d[K>>0]|0)|0;c[wa>>2]=za;c[wa>>2]=za+2+(d[z>>0]|0)+(d[(c[R>>2]|0)+255>>0]|0);break d}case 2:{if(c[S>>2]&2|0)a[y>>0]=o&-2;a[r>>0]=0;a[C>>0]=0;za=(c[ka>>2]|0)+65534&65535;c[ka>>2]=za;Aa[c[pa>>2]&7](b,za,c[ca>>2]&255);Aa[c[pa>>2]&7](b,(c[ka>>2]|0)+1&65535,(c[ca>>2]|0)>>>8&255);za=(d[B>>0]<<8)+(oa[c[P>>2]&63](c[va>>2]|0,2)|0)|0;c[qa>>2]=za;c[ca>>2]=oa[c[na>>2]&63](b,za)|0;c[ca>>2]=((oa[c[na>>2]&63](b,(c[qa>>2]|0)+1&65535)|0)<<8)+(c[ca>>2]|0);a[E>>0]=(a[E>>0]|0)+1<<24>>24;za=(c[wa>>2]|0)+(d[K>>0]|0)|0;c[wa>>2]=za;c[wa>>2]=za+2+(d[z>>0]|0)+(d[(c[R>>2]|0)+255>>0]|0);break d}case 3:{a[r>>0]=0;a[C>>0]=0;f=(c[ka>>2]|0)+65534&65535;c[ka>>2]=f;Aa[c[pa>>2]&7](b,f,c[ca>>2]&255);Aa[c[pa>>2]&7](b,(c[ka>>2]|0)+1&65535,(c[ca>>2]|0)>>>8&255);f=d[y>>0]|0;if(!(f&1))if(!(f&2))if(!(f&4))if(!(f&8))if(!(f&16))break d;else{g=96;h=239}else{g=88;h=247}else{g=80;h=251}else{g=72;h=253}else{g=64;h=254}if(c[S>>2]&2|0)a[y>>0]=h&f;c[ca>>2]=g;break d}case 4:{a[r>>0]=0;a[C>>0]=0;l=261;break}case 5:{l=261;break}case 6:{f=o;break}default:break d}if((l|0)==261){l=0;f=(c[ka>>2]|0)+65534&65535;c[ka>>2]=f;Aa[c[pa>>2]&7](b,f,c[ca>>2]&255);Aa[c[pa>>2]&7](b,(c[ka>>2]|0)+1&65535,(c[ca>>2]|0)>>>8&255);f=a[y>>0]|0}f=f&255;if(!(f&1))if(!(f&2))if(!(f&4))if(!(f&8))if(!(f&16))break;else{g=4;h=239}else{g=3;h=247}else{g=2;h=251}else{g=1;h=253}else{g=0;h=254}if(c[S>>2]&2|0)a[y>>0]=h&f;c[ca>>2]=c[b+96+(g<<2)>>2]}}else{g=a[u>>0]|0;if(g<<24>>24){c[ca>>2]=(c[ca>>2]|0)+(g&255)&65535;a[u>>0]=0}a[x>>0]=f&-2;a[C>>0]=a[r>>0]|0;a[r>>0]=0;za=(c[ka>>2]|0)+65534&65535;c[ka>>2]=za;Aa[c[pa>>2]&7](b,za,c[ta>>2]&255);Aa[c[pa>>2]&7](b,(c[ka>>2]|0)+1&65535,(c[ta>>2]|0)>>>8&255);c[ca>>2]=102;a[E>>0]=(a[E>>0]|0)+1<<24>>24;za=(c[wa>>2]|0)+(d[K>>0]|0)|0;c[wa>>2]=za;c[wa>>2]=za+(d[z>>0]|0)+(d[(c[R>>2]|0)+255>>0]|0)}while(0);f=c[wa>>2]|0;if(f>>>0>=e>>>0){l=268;break}}if((l|0)==268){c[wa>>2]=0;ja=xa;return f|0}return 0}function Gc(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;i=b+5|0;j=b+4|0;f=((d[j>>0]|0)<<8|(d[i>>0]|0))+e|0;a[i>>0]=f;a[j>>0]=f>>>8;j=(a[b>>0]|0)+-1<<24>>24;a[b>>0]=j;f=a[b+1>>0]|0;i=f&255;g=c[b+64>>2]|0;k=b+52|0;j=j&255;l=a[10832+j>>0]|0;h=g>>>6&2|l&-24&255|0-(((i+e&255)+g|0)>>>8&1)&17;c[k>>2]=h;f=((e|0)>0?168520:112272)>>>(g&3|f<<2&12);e=l&255;if(!(j&15)){l=j>>>2;j=j>>>4&~(j>>>3);l=j|l;j=g^i;j=j^e;j=j^f;l=j^l;l=l&4;l=l|h;c[k>>2]=l;k=l&255;l=b+6|0;a[l>>0]=k;return}else{l=j<<2;j=(j<<1^254)&j;l=j|l;j=g^i;j=j^e;j=j^f;l=j^l;l=l&4;l=l|h;c[k>>2]=l;k=l&255;l=b+6|0;a[l>>0]=k;return}}function Hc(a){a=a|0;var b=0;b=a+72|0;c[b>>2]=(c[b>>2]|0)+(d[a+23>>0]|0);b=oa[c[a+156>>2]&63](c[a+136>>2]|0,0)|0;if(b&256|0)c[a+124>>2]=71;if(!(b&512)){a=b;a=a&255;return a|0}b=a+60|0;a=oa[c[a+128>>2]&63](a,c[b>>2]|0)|0;c[b>>2]=(c[b>>2]|0)+1&65535;a=a&255;return a|0}function Ic(a){a=a|0;return ((d[a+6>>0]|0)>>>2&1^1)&255|0}function Jc(b){b=b|0;return a[b+6>>0]&4|0}function Kc(a){a=a|0;return ((d[a+6>>0]|0)>>>7^1)&255|0}function Lc(b){b=b|0;return a[b+6>>0]&-128&255|0}function Mc(a){a=a|0;return ((d[a+6>>0]|0)>>>6&1^1)&255|0}function Nc(b){b=b|0;return a[b+6>>0]&64|0}function Oc(b){b=b|0;return (a[b+6>>0]&1^1)&255|0}function Pc(b){b=b|0;return a[b+6>>0]&1|0}function Qc(a){a=a|0;return (K(Vc(c[a+60>>2]|0)|0)|0)&65535|0}function Rc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;l=ja;ja=ja+32|0;g=l;i=l+16|0;j=a+28|0;f=c[j>>2]|0;c[g>>2]=f;k=a+20|0;f=(c[k>>2]|0)-f|0;c[g+4>>2]=f;c[g+8>>2]=b;c[g+12>>2]=d;e=a+60|0;h=2;f=f+d|0;while(1){if(!(Tc(N(c[e>>2]|0,g|0,h|0,i|0)|0)|0))b=c[i>>2]|0;else{c[i>>2]=-1;b=-1}if((f|0)==(b|0)){b=6;break}if((b|0)<0){b=8;break}p=c[g+4>>2]|0;m=b>>>0>p>>>0;n=m?g+8|0:g;p=b-(m?p:0)|0;c[n>>2]=(c[n>>2]|0)+p;o=n+4|0;c[o>>2]=(c[o>>2]|0)-p;g=n;h=h+(m<<31>>31)|0;f=f-b|0}if((b|0)==6){p=c[a+44>>2]|0;c[a+16>>2]=p+(c[a+48>>2]|0);c[j>>2]=p;c[k>>2]=p}else if((b|0)==8){c[a+16>>2]=0;c[j>>2]=0;c[k>>2]=0;c[a>>2]=c[a>>2]|32;if((h|0)==2)d=0;else d=d-(c[g+4>>2]|0)|0}ja=l;return d|0}function Sc(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;g=ja;ja=ja+16|0;f=g;if(!(Tc(M(c[a+60>>2]|0,b|0,d|0,e&255|0,f|0)|0)|0)){d=f;b=c[d+4>>2]|0;d=c[d>>2]|0}else{b=f;c[b>>2]=-1;c[b+4>>2]=-1;b=-1;d=-1}w(b|0);ja=g;return d|0}function Tc(a){a=a|0;if(!(a<<16>>16))a=0;else{c[(Uc()|0)>>2]=a&65535;a=-1}return a|0}function Uc(){return 107256}function Vc(a){a=a|0;return a|0}function Wc(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=ja;ja=ja+32|0;i=l;f=l+16|0;c[i>>2]=d;g=i+4|0;j=b+48|0;m=c[j>>2]|0;c[g>>2]=e-((m|0)!=0&1);h=b+44|0;c[i+8>>2]=c[h>>2];c[i+12>>2]=m;if(!(Tc(L(c[b+60>>2]|0,i|0,2,f|0)|0)|0)){f=c[f>>2]|0;if((f|0)>=1){i=c[g>>2]|0;if(f>>>0>i>>>0){g=c[h>>2]|0;h=b+4|0;c[h>>2]=g;c[b+8>>2]=g+(f-i);if(!(c[j>>2]|0))f=e;else{c[h>>2]=g+1;a[d+(e+-1)>>0]=a[g>>0]|0;f=e}}}else k=4}else{c[f>>2]=-1;f=-1;k=4}if((k|0)==4)c[b>>2]=f&48^16|c[b>>2];ja=l;return f|0}function Xc(a){a=a|0;return 0}function Yc(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;w(0);return 0}function Zc(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=_c(a,b,c)|0;w(x()|0);return a|0}function _c(a,b,c){a=a|0;b=b|0;c=c|0;a=$c(a,b,c,-1,-1)|0;w(x()|0);return a|0}function $c(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;j=ja;ja=ja+144|0;h=j;c[h>>2]=0;i=h+4|0;c[i>>2]=a;c[h+44>>2]=a;g=h+8|0;c[g>>2]=(a|0)<0?-1:a+2147483647|0;c[h+76>>2]=-1;ad(h,0,0);e=bd(h,d,1,e,f)|0;f=x()|0;if(b|0)c[b>>2]=a+((c[i>>2]|0)+(c[h+120>>2]|0)-(c[g>>2]|0));w(f|0);ja=j;return e|0}function ad(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=a+112|0;c[e>>2]=b;c[e+4>>2]=d;e=c[a+8>>2]|0;f=c[a+4>>2]|0;g=e-f|0;h=((g|0)<0)<<31>>31;i=a+120|0;c[i>>2]=g;c[i+4>>2]=h;if(((b|0)!=0|(d|0)!=0)&((h|0)>(d|0)|(h|0)==(d|0)&g>>>0>b>>>0))c[a+104>>2]=f+b;else c[a+104>>2]=e;return}function bd(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;a:do if(e>>>0>36){c[(Uc()|0)>>2]=28;h=0;g=0}else{r=b+4|0;q=b+104|0;do{i=c[r>>2]|0;if(i>>>0<(c[q>>2]|0)>>>0){c[r>>2]=i+1;i=d[i>>0]|0}else i=cd(b)|0}while((dd(i)|0)!=0);b:do switch(i|0){case 43:case 45:{j=((i|0)==45)<<31>>31;i=c[r>>2]|0;if(i>>>0<(c[q>>2]|0)>>>0){c[r>>2]=i+1;i=d[i>>0]|0;p=j;break b}else{i=cd(b)|0;p=j;break b}}default:p=0}while(0);j=(e|0)==0;do if((e|16|0)==16&(i|0)==48){i=c[r>>2]|0;if(i>>>0<(c[q>>2]|0)>>>0){c[r>>2]=i+1;i=d[i>>0]|0}else i=cd(b)|0;if((i|32|0)!=120)if(j){e=8;n=47;break}else{n=32;break}i=c[r>>2]|0;if(i>>>0<(c[q>>2]|0)>>>0){c[r>>2]=i+1;i=d[i>>0]|0}else i=cd(b)|0;if((d[12673+i>>0]|0)>15){g=(c[q>>2]|0)==0;if(!g)c[r>>2]=(c[r>>2]|0)+-1;if(!f){ad(b,0,0);h=0;g=0;break a}if(g){h=0;g=0;break a}c[r>>2]=(c[r>>2]|0)+-1;h=0;g=0;break a}else{e=16;n=47}}else{e=j?10:e;if(e>>>0>(d[12673+i>>0]|0)>>>0)n=32;else{if(c[q>>2]|0)c[r>>2]=(c[r>>2]|0)+-1;ad(b,0,0);c[(Uc()|0)>>2]=28;h=0;g=0;break a}}while(0);c:do if((n|0)==32)if((e|0)==10){i=i+-48|0;if(i>>>0<10){f=i;e=0;do{e=(e*10|0)+f|0;i=c[r>>2]|0;if(i>>>0<(c[q>>2]|0)>>>0){c[r>>2]=i+1;i=d[i>>0]|0}else i=cd(b)|0;f=i+-48|0}while(f>>>0<10&e>>>0<429496729);if(f>>>0<10){j=0;do{k=pD(e|0,j|0,10,0)|0;l=x()|0;m=((f|0)<0)<<31>>31;o=~m;if(l>>>0>o>>>0|(l|0)==(o|0)&k>>>0>~f>>>0){k=e;e=10;n=76;break c}e=qD(k|0,l|0,f|0,m|0)|0;j=x()|0;i=c[r>>2]|0;if(i>>>0<(c[q>>2]|0)>>>0){c[r>>2]=i+1;i=d[i>>0]|0}else i=cd(b)|0;f=i+-48|0}while(f>>>0<10&(j>>>0<429496729|(j|0)==429496729&e>>>0<2576980378));if(f>>>0>9)i=p;else{k=e;e=10;n=76}}else{j=0;i=p}}else{j=0;e=0;i=p}}else n=47;while(0);d:do if((n|0)==47){if(!(e+-1&e)){o=a[28609+((e*23|0)>>>5&7)>>0]|0;j=a[12673+i>>0]|0;f=j&255;if(e>>>0>f>>>0){k=0;do{k=f|k<<o;i=c[r>>2]|0;if(i>>>0<(c[q>>2]|0)>>>0){c[r>>2]=i+1;i=d[i>>0]|0}else i=cd(b)|0;j=a[12673+i>>0]|0;f=j&255}while(k>>>0<134217728&e>>>0>f>>>0);n=0}else{n=0;k=0}l=vD(-1,-1,o|0)|0;m=x()|0;if(e>>>0<=f>>>0|(m>>>0<n>>>0|(m|0)==(n|0)&l>>>0<k>>>0)){j=n;n=76;break}i=n;while(1){k=wD(k|0,i|0,o|0)|0;f=x()|0;k=k|j&255;i=c[r>>2]|0;if(i>>>0<(c[q>>2]|0)>>>0){c[r>>2]=i+1;i=d[i>>0]|0}else i=cd(b)|0;j=a[12673+i>>0]|0;if(e>>>0<=(j&255)>>>0|(f>>>0>m>>>0|(f|0)==(m|0)&k>>>0>l>>>0)){j=f;n=76;break d}else i=f}}j=a[12673+i>>0]|0;f=j&255;if(e>>>0>f>>>0){k=0;do{k=f+(t(k,e)|0)|0;i=c[r>>2]|0;if(i>>>0<(c[q>>2]|0)>>>0){c[r>>2]=i+1;i=d[i>>0]|0}else i=cd(b)|0;j=a[12673+i>>0]|0;f=j&255}while(k>>>0<119304647&e>>>0>f>>>0);l=0}else{k=0;l=0}if(e>>>0>f>>>0){n=uD(-1,-1,e|0,0)|0;o=x()|0;f=l;while(1){if(f>>>0>o>>>0|(f|0)==(o|0)&k>>>0>n>>>0){j=f;n=76;break d}l=pD(k|0,f|0,e|0,0)|0;m=x()|0;j=j&255;if(m>>>0>4294967295|(m|0)==-1&l>>>0>~j>>>0){j=f;n=76;break d}k=qD(l|0,m|0,j|0,0)|0;f=x()|0;i=c[r>>2]|0;if(i>>>0<(c[q>>2]|0)>>>0){c[r>>2]=i+1;i=d[i>>0]|0}else i=cd(b)|0;j=a[12673+i>>0]|0;if(e>>>0<=(j&255)>>>0){j=f;n=76;break}}}else{j=l;n=76}}while(0);if((n|0)==76)if(e>>>0>(d[12673+i>>0]|0)>>>0){do{i=c[r>>2]|0;if(i>>>0<(c[q>>2]|0)>>>0){c[r>>2]=i+1;i=d[i>>0]|0}else i=cd(b)|0}while(e>>>0>(d[12673+i>>0]|0)>>>0);c[(Uc()|0)>>2]=68;j=h;e=g;i=(g&1|0)==0&0==0?p:0}else{e=k;i=p}if(c[q>>2]|0)c[r>>2]=(c[r>>2]|0)+-1;if(!(j>>>0<h>>>0|(j|0)==(h|0)&e>>>0<g>>>0)){if(!((g&1|0)!=0|0!=0|(i|0)!=0)){c[(Uc()|0)>>2]=68;g=qD(g|0,h|0,-1,-1)|0;h=x()|0;break}if(j>>>0>h>>>0|(j|0)==(h|0)&e>>>0>g>>>0){c[(Uc()|0)>>2]=68;break}}g=((i|0)<0)<<31>>31;g=rD(e^i|0,j^g|0,i|0,g|0)|0;h=x()|0}while(0);w(h|0);return g|0}function cd(b){b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;g=b+112|0;f=g;e=c[f>>2]|0;f=c[f+4>>2]|0;if(!((e|0)==0&(f|0)==0)?(i=b+120|0,h=c[i+4>>2]|0,!((h|0)<(f|0)|((h|0)==(f|0)?(c[i>>2]|0)>>>0<e>>>0:0))):0)j=4;else{e=ed(b)|0;if((e|0)>=0){f=c[g>>2]|0;g=c[g+4>>2]|0;i=c[b+8>>2]|0;if(!((f|0)==0&(g|0)==0)){h=c[b+4>>2]|0;k=i-h|0;l=((k|0)<0)<<31>>31;m=b+120|0;g=rD(f|0,g|0,c[m>>2]|0,c[m+4>>2]|0)|0;m=x()|0;f=i;if((m|0)>(l|0)|(m|0)==(l|0)&g>>>0>k>>>0)j=9;else c[b+104>>2]=h+(g+-1)}else{f=i;j=9}if((j|0)==9)c[b+104>>2]=i;g=b+4|0;if(!f)f=c[g>>2]|0;else{m=c[g>>2]|0;k=f+1-m|0;f=b+120|0;l=f;k=qD(c[l>>2]|0,c[l+4>>2]|0,k|0,((k|0)<0)<<31>>31|0)|0;l=x()|0;c[f>>2]=k;c[f+4>>2]=l;f=m}f=f+-1|0;if((e|0)!=(d[f>>0]|0|0))a[f>>0]=e}else j=4}if((j|0)==4){c[b+104>>2]=0;e=-1}return e|0}function dd(a){a=a|0;return ((a|0)==32|(a+-9|0)>>>0<5)&1|0}function ed(a){a=a|0;var b=0,e=0;e=ja;ja=ja+16|0;b=e;if((fd(a)|0)==0?(pa[c[a+32>>2]&31](a,b,1)|0)==1:0)b=d[b>>0]|0;else b=-1;ja=e;return b|0}function fd(b){b=b|0;var d=0,e=0;e=b+74|0;d=a[e>>0]|0;a[e>>0]=d+255|d;e=b+20|0;d=b+28|0;if((c[e>>2]|0)>>>0>(c[d>>2]|0)>>>0)pa[c[b+36>>2]&31](b,0,0)|0;c[b+16>>2]=0;c[d>>2]=0;c[e>>2]=0;d=c[b>>2]|0;if(!(d&4)){e=(c[b+44>>2]|0)+(c[b+48>>2]|0)|0;c[b+8>>2]=e;c[b+4>>2]=e;d=d<<27>>31}else{c[b>>2]=d|32;d=-1}return d|0}function gd(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=hd(a,b,c)|0;w(x()|0);return a|0}function hd(a,b,c){a=a|0;b=b|0;c=c|0;a=$c(a,b,c,0,-2147483648)|0;w(x()|0);return a|0}function id(a){a=a|0;return (a+-97|0)>>>0<26|0}function jd(a,b){a=+a;b=+b;var d=0,e=0;g[h>>3]=a;e=c[h>>2]|0;d=c[h+4>>2]|0;g[h>>3]=b;d=c[h+4>>2]&-2147483648|d&2147483647;c[h>>2]=e;c[h+4>>2]=d;return +(+g[h>>3])}function kd(b,c){b=b|0;c=c|0;var d=0,e=0;d=a[b>>0]|0;e=a[c>>0]|0;if(!(d<<24>>24==0?1:d<<24>>24!=e<<24>>24))do{b=b+1|0;c=c+1|0;d=a[b>>0]|0;e=a[c>>0]|0}while(!(d<<24>>24==0?1:d<<24>>24!=e<<24>>24));return (d&255)-(e&255)|0}function ld(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0;a:do if(!d)b=0;else{while(1){e=a[b>>0]|0;f=a[c>>0]|0;if(e<<24>>24!=f<<24>>24)break;d=d+-1|0;if(!d){b=0;break a}else{b=b+1|0;c=c+1|0}}b=(e&255)-(f&255)|0}while(0);return b|0}function md(a){a=a|0;return (a+-48|0)>>>0<10|0}function nd(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=ja;ja=ja+16|0;f=e;c[f>>2]=d;d=od(a,b,f)|0;ja=e;return d|0}function od(a,b,c){a=a|0;b=b|0;c=c|0;return pd(a,2147483647,b,c)|0}function pd(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;j=ja;ja=ja+160|0;g=j+144|0;i=j;yD(i|0,18328,144)|0;if((d+-1|0)>>>0>2147483646)if(!d){d=1;h=4}else{c[(Uc()|0)>>2]=61;d=-1}else{g=b;h=4}if((h|0)==4){h=-2-g|0;h=d>>>0>h>>>0?h:d;c[i+48>>2]=h;b=i+20|0;c[b>>2]=g;c[i+44>>2]=g;d=g+h|0;g=i+16|0;c[g>>2]=d;c[i+28>>2]=d;d=qd(i,e,f)|0;if(h){e=c[b>>2]|0;a[e+(((e|0)==(c[g>>2]|0))<<31>>31)>>0]=0}}ja=j;return d|0}function qd(a,b,c){a=a|0;b=b|0;c=c|0;return td(a,b,c,1,125)|0}function rd(b,e,f,g,h,i){b=b|0;e=+e;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;H=ja;ja=ja+560|0;m=H+32|0;u=H+536|0;G=H;F=G;l=H+540|0;c[u>>2]=0;E=l+12|0;Ld(e)|0;j=x()|0;if((j|0)<0){e=-e;Ld(e)|0;j=x()|0;D=1;B=28635}else{D=(h&2049|0)!=0&1;B=(h&2048|0)==0?((h&1|0)==0?28636:28641):28638}do if(0==0&(j&2146435072|0)==2146435072){G=(i&32|0)!=0;j=D+3|0;Ed(b,32,f,j,h&-65537);xd(b,B,D);xd(b,e!=e|0.0!=0.0?(G?28675:28662):G?28654:28658,3);Ed(b,32,f,j,h^8192)}else{r=+Md(e,u)*2.0;j=r!=0.0;if(j)c[u>>2]=(c[u>>2]|0)+-1;w=i|32;if((w|0)==97){o=i&32;q=(o|0)==0?B:B+9|0;p=D|2;j=12-g|0;do if(!(g>>>0>11|(j|0)==0)){e=8.0;do{j=j+-1|0;e=e*16.0}while((j|0)!=0);if((a[q>>0]|0)==45){e=-(e+(-r-e));break}else{e=r+e-e;break}}else e=r;while(0);k=c[u>>2]|0;j=(k|0)<0?0-k|0:k;j=Cd(j,((j|0)<0)<<31>>31,E)|0;if((j|0)==(E|0)){j=l+11|0;a[j>>0]=48}a[j+-1>>0]=(k>>31&2)+43;n=j+-2|0;a[n>>0]=i+15;k=(g|0)<1;l=(h&8|0)==0;j=G;while(1){D=~~e;m=j+1|0;a[j>>0]=o|d[13408+D>>0];e=(e-+(D|0))*16.0;if((m-F|0)==1?!(l&(k&e==0.0)):0){a[m>>0]=46;m=j+2|0}if(!(e!=0.0))break;else j=m}if((g|0)!=0?(-2-F+m|0)<(g|0):0){k=E;l=n;j=g+2+k-l|0}else{k=E;l=n;j=k-F-l+m|0}E=j+p|0;Ed(b,32,f,E,h);xd(b,q,p);Ed(b,48,f,E,h^65536);F=m-F|0;xd(b,G,F);G=k-l|0;Ed(b,48,j-(F+G)|0,0,0);xd(b,n,G);Ed(b,32,f,E,h^8192);j=E;break}k=(g|0)<0?6:g;if(j){l=(c[u>>2]|0)+-28|0;c[u>>2]=l;e=r*268435456.0}else{l=c[u>>2]|0;e=r}C=(l|0)<0?m:m+288|0;m=C;do{z=~~e>>>0;c[m>>2]=z;m=m+4|0;e=(e-+(z>>>0))*1.0e9}while(e!=0.0);z=C;if((l|0)>0){j=C;do{o=(l|0)<29?l:29;l=m+-4|0;if(l>>>0>=j>>>0){n=0;do{s=wD(c[l>>2]|0,0,o|0)|0;s=qD(s|0,x()|0,n|0,0)|0;v=x()|0;n=uD(s|0,v|0,1e9,0)|0;y=pD(n|0,x()|0,1e9,0)|0;y=rD(s|0,v|0,y|0,x()|0)|0;x()|0;c[l>>2]=y;l=l+-4|0}while(l>>>0>=j>>>0);if(n){j=j+-4|0;c[j>>2]=n}}a:do if(m>>>0>j>>>0)while(1){l=m+-4|0;if(c[l>>2]|0)break a;if(l>>>0>j>>>0)m=l;else{m=l;break}}while(0);l=(c[u>>2]|0)-o|0;c[u>>2]=l}while((l|0)>0)}else j=C;if((l|0)<0){g=((k+25|0)/9|0)+1|0;s=(w|0)==102;do{q=0-l|0;q=(q|0)<9?q:9;if(j>>>0<m>>>0){o=(1<<q)+-1|0;n=1e9>>>q;p=0;l=j;do{y=c[l>>2]|0;c[l>>2]=(y>>>q)+p;p=t(y&o,n)|0;l=l+4|0}while(l>>>0<m>>>0);j=(c[j>>2]|0)==0?j+4|0:j;if(p){c[m>>2]=p;m=m+4|0}}else j=(c[j>>2]|0)==0?j+4|0:j;l=s?C:j;m=(m-l>>2|0)>(g|0)?l+(g<<2)|0:m;l=(c[u>>2]|0)+q|0;c[u>>2]=l}while((l|0)<0);s=m}else s=m;if(j>>>0<s>>>0){l=(z-j>>2)*9|0;n=c[j>>2]|0;if(n>>>0>=10){m=10;do{m=m*10|0;l=l+1|0}while(n>>>0>=m>>>0)}}else l=0;u=(w|0)==103;v=(k|0)!=0;m=k-((w|0)==102?0:l)+((v&u)<<31>>31)|0;if((m|0)<(((s-z>>2)*9|0)+-9|0)){y=m+9216|0;m=(y|0)/9|0;g=C+4+(m+-1024<<2)|0;m=y-(m*9|0)|0;if((m|0)<8){n=10;while(1){n=n*10|0;if((m|0)<7)m=m+1|0;else break}}else n=10;p=c[g>>2]|0;m=(p>>>0)/(n>>>0)|0;q=p-(t(m,n)|0)|0;o=(g+4|0)==(s|0);if(!(o&(q|0)==0)){r=(m&1|0)==0?9007199254740992.0:9007199254740994.0;y=n>>>1;e=q>>>0<y>>>0?.5:o&(q|0)==(y|0)?1.0:1.5;if(D){y=(a[B>>0]|0)==45;r=y?-r:r;e=y?-e:e}m=p-q|0;c[g>>2]=m;if(r+e!=r){y=m+n|0;c[g>>2]=y;if(y>>>0>999999999){l=g;while(1){m=l+-4|0;c[l>>2]=0;if(m>>>0<j>>>0){j=j+-4|0;c[j>>2]=0}y=(c[m>>2]|0)+1|0;c[m>>2]=y;if(y>>>0>999999999)l=m;else break}}else m=g;l=(z-j>>2)*9|0;o=c[j>>2]|0;if(o>>>0>=10){n=10;do{n=n*10|0;l=l+1|0}while(o>>>0>=n>>>0)}}else m=g}else m=g;w=m+4|0;y=j;j=s>>>0>w>>>0?w:s}else{y=j;j=s}q=0-l|0;b:do if(j>>>0>y>>>0)while(1){m=j+-4|0;if(c[m>>2]|0){s=1;w=j;break b}if(m>>>0>y>>>0)j=m;else{s=0;w=m;break}}else{s=0;w=j}while(0);do if(u){j=k+((v^1)&1)|0;if((j|0)>(l|0)&(l|0)>-5){k=j+-1-l|0;n=i+-1|0}else{k=j+-1|0;n=i+-2|0}if(!(h&8)){if(s?(A=c[w+-4>>2]|0,(A|0)!=0):0)if(!((A>>>0)%10|0)){j=10;m=0;do{j=j*10|0;m=m+1|0}while(!((A>>>0)%(j>>>0)|0|0))}else m=0;else m=9;j=((w-z>>2)*9|0)+-9|0;if((n|32|0)==102){i=j-m|0;i=(i|0)>0?i:0;k=(k|0)<(i|0)?k:i;break}else{i=j+l-m|0;i=(i|0)>0?i:0;k=(k|0)<(i|0)?k:i;break}}}else n=i;while(0);g=(k|0)!=0;o=g?1:h>>>3&1;p=(n|32|0)==102;if(p){v=0;j=(l|0)>0?l:0}else{j=(l|0)<0?q:l;j=Cd(j,((j|0)<0)<<31>>31,E)|0;m=E;if((m-j|0)<2)do{j=j+-1|0;a[j>>0]=48}while((m-j|0)<2);a[j+-1>>0]=(l>>31&2)+43;j=j+-2|0;a[j>>0]=n;v=j;j=m-j|0}j=D+1+k+o+j|0;Ed(b,32,f,j,h);xd(b,B,D);Ed(b,48,f,j,h^65536);if(p){o=y>>>0>C>>>0?C:y;q=G+9|0;p=q;n=G+8|0;m=o;do{l=Cd(c[m>>2]|0,0,q)|0;if((m|0)==(o|0)){if((l|0)==(q|0)){a[n>>0]=48;l=n}}else if(l>>>0>G>>>0){AD(G|0,48,l-F|0)|0;do l=l+-1|0;while(l>>>0>G>>>0)}xd(b,l,p-l|0);m=m+4|0}while(m>>>0<=C>>>0);if(!((h&8|0)==0&(g^1)))xd(b,31427,1);if(m>>>0<w>>>0&(k|0)>0)while(1){l=Cd(c[m>>2]|0,0,q)|0;if(l>>>0>G>>>0){AD(G|0,48,l-F|0)|0;do l=l+-1|0;while(l>>>0>G>>>0)}xd(b,l,(k|0)<9?k:9);m=m+4|0;l=k+-9|0;if(!(m>>>0<w>>>0&(k|0)>9)){k=l;break}else k=l}Ed(b,48,k+9|0,9,0)}else{g=s?w:y+4|0;if(y>>>0<g>>>0&(k|0)>-1){q=G+9|0;u=(h&8|0)==0;s=q;n=0-F|0;p=G+8|0;o=y;do{l=Cd(c[o>>2]|0,0,q)|0;if((l|0)==(q|0)){a[p>>0]=48;l=p}do if((o|0)==(y|0)){m=l+1|0;xd(b,l,1);if(u&(k|0)<1){l=m;break}xd(b,31427,1);l=m}else{if(l>>>0<=G>>>0)break;AD(G|0,48,l+n|0)|0;do l=l+-1|0;while(l>>>0>G>>>0)}while(0);F=s-l|0;xd(b,l,(k|0)>(F|0)?F:k);k=k-F|0;o=o+4|0}while(o>>>0<g>>>0&(k|0)>-1)}Ed(b,48,k+18|0,18,0);xd(b,v,E-v|0)}Ed(b,32,f,j,h^8192)}while(0);ja=H;return ((j|0)<(f|0)?f:j)|0}function sd(a,b){a=a|0;b=b|0;var d=0.0,e=0;e=(c[b>>2]|0)+(8-1)&~(8-1);d=+g[e>>3];c[b>>2]=e+8;g[a>>3]=d;return}function td(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;t=ja;ja=ja+224|0;o=t+208|0;s=t+160|0;r=t+80|0;q=t;h=s;i=h+40|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(i|0));c[o>>2]=c[e>>2];if((ud(0,d,o,r,s,f,g)|0)<0)e=-1;else{if((c[b+76>>2]|0)>-1)p=vd(b)|0;else p=0;e=c[b>>2]|0;n=e&32;if((a[b+74>>0]|0)<1)c[b>>2]=e&-33;j=b+48|0;if(!(c[j>>2]|0)){i=b+44|0;e=c[i>>2]|0;c[i>>2]=q;k=b+28|0;c[k>>2]=q;m=b+20|0;c[m>>2]=q;c[j>>2]=80;l=b+16|0;c[l>>2]=q+80;h=ud(b,d,o,r,s,f,g)|0;if(e){pa[c[b+36>>2]&31](b,0,0)|0;h=(c[m>>2]|0)==0?-1:h;c[i>>2]=e;c[j>>2]=0;c[l>>2]=0;c[k>>2]=0;c[m>>2]=0}}else h=ud(b,d,o,r,s,f,g)|0;e=c[b>>2]|0;c[b>>2]=e|n;if(p|0)wd(b);e=(e&32|0)==0?h:-1}ja=t;return e|0}function ud(d,e,f,h,i,j,k){d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;J=ja;ja=ja+64|0;H=J+56|0;F=J+40|0;z=J;I=J+48|0;G=J+60|0;c[H>>2]=e;C=(d|0)!=0;y=z+40|0;B=y;z=z+39|0;A=I+4|0;e=0;l=0;o=0;a:while(1){do{do if((e|0)>-1)if((l|0)>(2147483647-e|0)){c[(Uc()|0)>>2]=61;e=-1;break}else{e=l+e|0;break}while(0);s=c[H>>2]|0;l=a[s>>0]|0;if(!(l<<24>>24)){w=92;break a}m=s;b:while(1){switch(l<<24>>24){case 37:{w=10;break b}case 0:{l=m;break b}default:{}}v=m+1|0;c[H>>2]=v;l=a[v>>0]|0;m=v}c:do if((w|0)==10){w=0;n=m;l=m;do{if((a[n+1>>0]|0)!=37)break c;l=l+1|0;n=n+2|0;c[H>>2]=n}while((a[n>>0]|0)==37)}while(0);l=l-s|0;if(C)xd(d,s,l)}while((l|0)!=0);v=(md(a[(c[H>>2]|0)+1>>0]|0)|0)==0;l=c[H>>2]|0;if(!v?(a[l+2>>0]|0)==36:0){m=3;q=(a[l+1>>0]|0)+-48|0;p=1}else{m=1;q=-1;p=o}m=l+m|0;c[H>>2]=m;l=a[m>>0]|0;n=(l<<24>>24)+-32|0;if(n>>>0>31|(1<<n&75913|0)==0)o=0;else{l=0;while(1){o=1<<n|l;m=m+1|0;c[H>>2]=m;l=a[m>>0]|0;n=(l<<24>>24)+-32|0;if(n>>>0>31|(1<<n&75913|0)==0)break;else l=o}}if(l<<24>>24==42){if((md(a[m+1>>0]|0)|0)!=0?(D=c[H>>2]|0,(a[D+2>>0]|0)==36):0){l=D+1|0;c[i+((a[l>>0]|0)+-48<<2)>>2]=10;n=1;m=D+3|0;l=c[h+((a[l>>0]|0)+-48<<3)>>2]|0}else{if(p|0){e=-1;break}if(C){v=(c[f>>2]|0)+(4-1)&~(4-1);l=c[v>>2]|0;c[f>>2]=v+4}else l=0;n=0;m=(c[H>>2]|0)+1|0}c[H>>2]=m;u=(l|0)<0;o=u?o|8192:o;v=n;u=u?0-l|0:l}else{l=yd(H)|0;if((l|0)<0){e=-1;break}m=c[H>>2]|0;v=p;u=l}do if((a[m>>0]|0)==46){l=m+1|0;if((a[l>>0]|0)!=42){c[H>>2]=l;t=yd(H)|0;l=c[H>>2]|0;break}if(md(a[m+2>>0]|0)|0?(E=c[H>>2]|0,(a[E+3>>0]|0)==36):0){t=E+2|0;c[i+((a[t>>0]|0)+-48<<2)>>2]=10;t=c[h+((a[t>>0]|0)+-48<<3)>>2]|0;l=E+4|0;c[H>>2]=l;break}if(v|0){e=-1;break a}if(C){t=(c[f>>2]|0)+(4-1)&~(4-1);m=c[t>>2]|0;c[f>>2]=t+4}else m=0;l=(c[H>>2]|0)+2|0;c[H>>2]=l;t=m}else{l=m;t=-1}while(0);r=0;while(1){if(((a[l>>0]|0)+-65|0)>>>0>57){e=-1;break a}m=l;l=l+1|0;c[H>>2]=l;m=a[(a[m>>0]|0)+-65+(12944+(r*58|0))>>0]|0;p=m&255;if((p+-1|0)>>>0>=8)break;else r=p}if(!(m<<24>>24)){e=-1;break}n=(q|0)>-1;do if(m<<24>>24==19)if(n){e=-1;break a}else w=54;else{if(n){c[i+(q<<2)>>2]=p;p=h+(q<<3)|0;q=c[p+4>>2]|0;w=F;c[w>>2]=c[p>>2];c[w+4>>2]=q;w=54;break}if(!C){e=0;break a}zd(F,p,f,k);l=c[H>>2]|0;w=55}while(0);if((w|0)==54){w=0;if(C)w=55;else l=0}d:do if((w|0)==55){w=0;n=a[l+-1>>0]|0;n=(r|0)!=0&(n&15|0)==3?n&-33:n;l=o&-65537;q=(o&8192|0)==0?o:l;e:do switch(n|0){case 110:switch((r&255)<<24>>24){case 0:{c[c[F>>2]>>2]=e;l=0;break d}case 1:{c[c[F>>2]>>2]=e;l=0;break d}case 2:{l=c[F>>2]|0;c[l>>2]=e;c[l+4>>2]=((e|0)<0)<<31>>31;l=0;break d}case 3:{b[c[F>>2]>>1]=e;l=0;break d}case 4:{a[c[F>>2]>>0]=e;l=0;break d}case 6:{c[c[F>>2]>>2]=e;l=0;break d}case 7:{l=c[F>>2]|0;c[l>>2]=e;c[l+4>>2]=((e|0)<0)<<31>>31;l=0;break d}default:{l=0;break d}}case 112:{l=q|8;m=t>>>0>8?t:8;n=120;w=67;break}case 88:case 120:{l=q;m=t;w=67;break}case 111:{o=F;o=Bd(c[o>>2]|0,c[o+4>>2]|0,y)|0;m=B-o|0;l=q;m=(q&8|0)==0|(t|0)>(m|0)?t:m+1|0;r=0;p=28618;w=73;break}case 105:case 100:{m=F;l=c[m>>2]|0;m=c[m+4>>2]|0;if((m|0)<0){l=rD(0,0,l|0,m|0)|0;m=x()|0;n=F;c[n>>2]=l;c[n+4>>2]=m;n=1;p=28618;w=72;break e}else{n=(q&2049|0)!=0&1;p=(q&2048|0)==0?((q&1|0)==0?28618:28620):28619;w=72;break e}}case 117:{m=F;l=c[m>>2]|0;m=c[m+4>>2]|0;n=0;p=28618;w=72;break}case 99:{a[z>>0]=c[F>>2];s=z;q=l;o=1;n=0;m=28618;l=B;break}case 115:{p=c[F>>2]|0;p=(p|0)==0?28628:p;r=Dd(p,0,t)|0;K=(r|0)==0;s=p;q=l;o=K?t:r-p|0;n=0;m=28618;l=K?p+t|0:r;break}case 67:{c[I>>2]=c[F>>2];c[A>>2]=0;c[F>>2]=I;o=-1;w=79;break}case 83:{if(!t){Ed(d,32,u,0,q);l=0;w=89}else{o=t;w=79}break}case 65:case 71:case 70:case 69:case 97:case 103:case 102:case 101:{l=na[j&1](d,+g[F>>3],u,t,q,n)|0;break d}default:{o=t;n=0;m=28618;l=B}}while(0);f:do if((w|0)==67){o=F;o=Ad(c[o>>2]|0,c[o+4>>2]|0,y,n&32)|0;p=F;p=(l&8|0)==0|(c[p>>2]|0)==0&(c[p+4>>2]|0)==0;r=p?0:2;p=p?28618:28618+(n>>>4)|0;w=73}else if((w|0)==72){o=Cd(l,m,y)|0;l=q;m=t;r=n;w=73}else if((w|0)==79){w=0;l=0;p=c[F>>2]|0;while(1){m=c[p>>2]|0;if(!m)break;m=Fd(G,m)|0;n=(m|0)<0;if(n|m>>>0>(o-l|0)>>>0){w=83;break}l=m+l|0;if(o>>>0>l>>>0)p=p+4|0;else break}if((w|0)==83){w=0;if(n){e=-1;break a}}Ed(d,32,u,l,q);if(!l){l=0;w=89}else{n=0;o=c[F>>2]|0;while(1){m=c[o>>2]|0;if(!m){w=89;break f}m=Fd(G,m)|0;n=m+n|0;if((n|0)>(l|0)){w=89;break f}xd(d,G,m);if(n>>>0>=l>>>0){w=89;break}else o=o+4|0}}}while(0);if((w|0)==73){w=0;n=F;n=(c[n>>2]|0)!=0|(c[n+4>>2]|0)!=0;K=(m|0)!=0|n;n=B-o+((n^1)&1)|0;s=K?o:y;q=(m|0)>-1?l&-65537:l;o=K?((m|0)>(n|0)?m:n):0;n=r;m=p;l=B}else if((w|0)==89){w=0;Ed(d,32,u,l,q^8192);l=(u|0)>(l|0)?u:l;break}t=l-s|0;r=(o|0)<(t|0)?t:o;K=r+n|0;l=(u|0)<(K|0)?K:u;Ed(d,32,l,K,q);xd(d,m,n);Ed(d,48,l,K,q^65536);Ed(d,48,r,t,0);xd(d,s,t);Ed(d,32,l,K,q^8192)}while(0);o=v}g:do if((w|0)==92)if(!d)if(!o)e=0;else{e=1;while(1){l=c[i+(e<<2)>>2]|0;if(!l)break;zd(h+(e<<3)|0,l,f,k);e=e+1|0;if(e>>>0>=10){e=1;break g}}while(1){if(c[i+(e<<2)>>2]|0){e=-1;break g}e=e+1|0;if(e>>>0>=10){e=1;break}}}while(0);ja=J;return e|0}function vd(a){a=a|0;return 1}function wd(a){a=a|0;return}function xd(a,b,d){a=a|0;b=b|0;d=d|0;if(!(c[a>>2]&32))Jd(b,d,a)|0;return}function yd(b){b=b|0;var d=0,e=0;if(!(md(a[c[b>>2]>>0]|0)|0))d=0;else{d=0;do{e=c[b>>2]|0;d=(d*10|0)+-48+(a[e>>0]|0)|0;e=e+1|0;c[b>>2]=e}while((md(a[e>>0]|0)|0)!=0)}return d|0}function zd(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0;a:do if(b>>>0<=20)do switch(b|0){case 9:{e=(c[d>>2]|0)+(4-1)&~(4-1);b=c[e>>2]|0;c[d>>2]=e+4;c[a>>2]=b;break a}case 10:{b=(c[d>>2]|0)+(4-1)&~(4-1);e=c[b>>2]|0;c[d>>2]=b+4;b=a;c[b>>2]=e;c[b+4>>2]=((e|0)<0)<<31>>31;break a}case 11:{b=(c[d>>2]|0)+(4-1)&~(4-1);e=c[b>>2]|0;c[d>>2]=b+4;b=a;c[b>>2]=e;c[b+4>>2]=0;break a}case 12:{b=(c[d>>2]|0)+(8-1)&~(8-1);e=b;f=c[e>>2]|0;e=c[e+4>>2]|0;c[d>>2]=b+8;b=a;c[b>>2]=f;c[b+4>>2]=e;break a}case 13:{f=(c[d>>2]|0)+(4-1)&~(4-1);b=c[f>>2]|0;c[d>>2]=f+4;b=(b&65535)<<16>>16;f=a;c[f>>2]=b;c[f+4>>2]=((b|0)<0)<<31>>31;break a}case 14:{f=(c[d>>2]|0)+(4-1)&~(4-1);b=c[f>>2]|0;c[d>>2]=f+4;f=a;c[f>>2]=b&65535;c[f+4>>2]=0;break a}case 15:{f=(c[d>>2]|0)+(4-1)&~(4-1);b=c[f>>2]|0;c[d>>2]=f+4;b=(b&255)<<24>>24;f=a;c[f>>2]=b;c[f+4>>2]=((b|0)<0)<<31>>31;break a}case 16:{f=(c[d>>2]|0)+(4-1)&~(4-1);b=c[f>>2]|0;c[d>>2]=f+4;f=a;c[f>>2]=b&255;c[f+4>>2]=0;break a}case 17:{f=(c[d>>2]|0)+(8-1)&~(8-1);h=+g[f>>3];c[d>>2]=f+8;g[a>>3]=h;break a}case 18:{za[e&127](a,d);break a}default:break a}while(0);while(0);return}function Ad(b,c,e,f){b=b|0;c=c|0;e=e|0;f=f|0;if(!((b|0)==0&(c|0)==0))do{e=e+-1|0;a[e>>0]=d[13408+(b&15)>>0]|0|f;b=vD(b|0,c|0,4)|0;c=x()|0}while(!((b|0)==0&(c|0)==0));return e|0}function Bd(b,c,d){b=b|0;c=c|0;d=d|0;if(!((b|0)==0&(c|0)==0))do{d=d+-1|0;a[d>>0]=b&7|48;b=vD(b|0,c|0,3)|0;c=x()|0}while(!((b|0)==0&(c|0)==0));return d|0}function Cd(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;if(c>>>0>0|(c|0)==0&b>>>0>4294967295)do{e=b;b=uD(b|0,c|0,10,0)|0;f=c;c=x()|0;g=pD(b|0,c|0,10,0)|0;g=rD(e|0,f|0,g|0,x()|0)|0;x()|0;d=d+-1|0;a[d>>0]=g&255|48}while(f>>>0>9|(f|0)==9&e>>>0>4294967295);if(b)do{g=b;b=(b>>>0)/10|0;d=d+-1|0;a[d>>0]=g-(b*10|0)|48}while(g>>>0>=10);return d|0}function Dd(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;h=d&255;f=(e|0)!=0;a:do if(f&(b&3|0)!=0){g=d&255;while(1){if((a[b>>0]|0)==g<<24>>24){i=6;break a}b=b+1|0;e=e+-1|0;f=(e|0)!=0;if(!(f&(b&3|0)!=0)){i=5;break}}}else i=5;while(0);if((i|0)==5)if(f)i=6;else i=16;b:do if((i|0)==6){g=d&255;if((a[b>>0]|0)==g<<24>>24)if(!e){i=16;break}else break;f=t(h,16843009)|0;c:do if(e>>>0>3)while(1){h=c[b>>2]^f;if((h&-2139062144^-2139062144)&h+-16843009|0)break c;b=b+4|0;e=e+-4|0;if(e>>>0<=3){i=11;break}}else i=11;while(0);if((i|0)==11)if(!e){i=16;break}while(1){if((a[b>>0]|0)==g<<24>>24)break b;e=e+-1|0;if(!e){i=16;break}else b=b+1|0}}while(0);if((i|0)==16)b=0;return b|0}function Ed(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;g=ja;ja=ja+256|0;f=g;if((c|0)>(d|0)&(e&73728|0)==0){e=c-d|0;AD(f|0,b<<24>>24|0,(e>>>0<256?e:256)|0)|0;if(e>>>0>255){b=c-d|0;do{xd(a,f,256);e=e+-256|0}while(e>>>0>255);e=b&255}xd(a,f,e)}ja=g;return}function Fd(a,b){a=a|0;b=b|0;if(!a)a=0;else a=Gd(a,b,0)|0;return a|0}function Gd(b,d,e){b=b|0;d=d|0;e=e|0;do if(b){if(d>>>0<128){a[b>>0]=d;b=1;break}if(!(c[c[(Hd()|0)+188>>2]>>2]|0))if((d&-128|0)==57216){a[b>>0]=d;b=1;break}else{c[(Uc()|0)>>2]=25;b=-1;break}if(d>>>0<2048){a[b>>0]=d>>>6|192;a[b+1>>0]=d&63|128;b=2;break}if(d>>>0<55296|(d&-8192|0)==57344){a[b>>0]=d>>>12|224;a[b+1>>0]=d>>>6&63|128;a[b+2>>0]=d&63|128;b=3;break}if((d+-65536|0)>>>0<1048576){a[b>>0]=d>>>18|240;a[b+1>>0]=d>>>12&63|128;a[b+2>>0]=d>>>6&63|128;a[b+3>>0]=d&63|128;b=4;break}else{c[(Uc()|0)>>2]=25;b=-1;break}}else b=1;while(0);return b|0}function Hd(){return Id()|0}function Id(){return 21416}function Jd(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;g=e+16|0;f=c[g>>2]|0;if(!f)if(!(Kd(e)|0)){f=c[g>>2]|0;h=5}else f=0;else h=5;a:do if((h|0)==5){j=e+20|0;i=c[j>>2]|0;g=i;if((f-i|0)>>>0<d>>>0){f=pa[c[e+36>>2]&31](e,b,d)|0;break}b:do if((a[e+75>>0]|0)<0|(d|0)==0){h=g;e=0;g=d;f=b}else{i=d;while(1){f=i+-1|0;if((a[b+f>>0]|0)==10)break;if(!f){h=g;e=0;g=d;f=b;break b}else i=f}f=pa[c[e+36>>2]&31](e,b,i)|0;if(f>>>0<i>>>0)break a;h=c[j>>2]|0;e=i;g=d-i|0;f=b+i|0}while(0);yD(h|0,f|0,g|0)|0;c[j>>2]=(c[j>>2]|0)+g;f=e+g|0}while(0);return f|0}function Kd(b){b=b|0;var d=0,e=0;d=b+74|0;e=a[d>>0]|0;a[d>>0]=e+255|e;d=c[b>>2]|0;if(!(d&8)){c[b+8>>2]=0;c[b+4>>2]=0;d=c[b+44>>2]|0;c[b+28>>2]=d;c[b+20>>2]=d;c[b+16>>2]=d+(c[b+48>>2]|0);d=0}else{c[b>>2]=d|32;d=-1}return d|0}function Ld(a){a=+a;var b=0;g[h>>3]=a;b=c[h>>2]|0;w(c[h+4>>2]|0);return b|0}function Md(a,b){a=+a;b=b|0;var d=0,e=0,f=0;g[h>>3]=a;d=c[h>>2]|0;e=c[h+4>>2]|0;f=vD(d|0,e|0,52)|0;x()|0;switch(f&2047){case 0:{if(a!=0.0){a=+Md(a*18446744073709551616.0,b);d=(c[b>>2]|0)+-64|0}else d=0;c[b>>2]=d;break}case 2047:break;default:{c[b>>2]=(f&2047)+-1022;c[h>>2]=d;c[h+4>>2]=e&-2146435073|1071644672;a=+g[h>>3]}}return +a}function Nd(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=a+20|0;f=c[e>>2]|0;a=(c[a+16>>2]|0)-f|0;a=a>>>0>d>>>0?d:a;yD(f|0,b|0,a|0)|0;c[e>>2]=(c[e>>2]|0)+a;return d|0}function Od(){return 21660}function Pd(){var a=0;a=(c[c[(Qd()|0)+188>>2]>>2]|0)==0;return (a?1:4)|0}function Qd(){return Id()|0}function Rd(){return 21664}function Sd(){return 21668}function Td(a){a=a|0;var b=0;b=a;while(1)if(!(c[b>>2]|0))break;else b=b+4|0;return b-a>>2|0}function Ud(a){a=a|0;return (((a|32)+-97|0)>>>0<6|(md(a)|0)!=0)&1|0}function Vd(a){a=a|0;if(a>>>0>4294963200){c[(Uc()|0)>>2]=0-a;a=-1}return a|0}function Wd(b,e,f){b=b|0;e=e|0;f=f|0;var g=0.0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;switch(e|0){case 0:{l=24;m=-149;i=4;break}case 1:{l=53;m=-1074;i=4;break}case 2:{l=53;m=-1074;i=4;break}default:g=0.0}a:do if((i|0)==4){o=b+4|0;n=b+104|0;do{e=c[o>>2]|0;if(e>>>0<(c[n>>2]|0)>>>0){c[o>>2]=e+1;e=d[e>>0]|0}else e=cd(b)|0}while((dd(e)|0)!=0);b:do switch(e|0){case 43:case 45:{h=1-(((e|0)==45&1)<<1)|0;e=c[o>>2]|0;if(e>>>0<(c[n>>2]|0)>>>0){c[o>>2]=e+1;e=d[e>>0]|0;k=h;break b}else{e=cd(b)|0;k=h;break b}}default:k=1}while(0);h=e;e=0;while(1){if((h|32|0)!=(a[28666+e>>0]|0))break;do if(e>>>0<7){h=c[o>>2]|0;if(h>>>0<(c[n>>2]|0)>>>0){c[o>>2]=h+1;h=d[h>>0]|0;break}else{h=cd(b)|0;break}}while(0);e=e+1|0;if(e>>>0>=8){e=8;break}}c:do switch(e&2147483647|0){case 8:break;case 3:{i=23;break}default:{j=(f|0)!=0;if(j&e>>>0>3)if((e|0)==8)break c;else{i=23;break c}d:do if(!e){e=0;while(1){if((h|32|0)!=(a[28675+e>>0]|0))break d;do if(e>>>0<2){h=c[o>>2]|0;if(h>>>0<(c[n>>2]|0)>>>0){c[o>>2]=h+1;h=d[h>>0]|0;break}else{h=cd(b)|0;break}}while(0);e=e+1|0;if(e>>>0>=3){e=3;break}}}while(0);switch(e|0){case 3:{e=c[o>>2]|0;if(e>>>0<(c[n>>2]|0)>>>0){c[o>>2]=e+1;e=d[e>>0]|0}else e=cd(b)|0;if((e|0)!=40){if(!(c[n>>2]|0)){g=q;break a}c[o>>2]=(c[o>>2]|0)+-1;g=q;break a}e=1;while(1){h=c[o>>2]|0;if(h>>>0<(c[n>>2]|0)>>>0){c[o>>2]=h+1;h=d[h>>0]|0}else h=cd(b)|0;if(!((h+-48|0)>>>0<10|(h+-65|0)>>>0<26)?!((h|0)==95|(h+-97|0)>>>0<26):0)break;e=e+1|0}if((h|0)==41){g=q;break a}h=(c[n>>2]|0)==0;if(!h)c[o>>2]=(c[o>>2]|0)+-1;if(!j){c[(Uc()|0)>>2]=28;ad(b,0,0);g=0.0;break a}if(!e){g=q;break a}while(1){e=e+-1|0;if(!h)c[o>>2]=(c[o>>2]|0)+-1;if(!e){g=q;break a}}}case 0:{if((h|0)==48){e=c[o>>2]|0;if(e>>>0<(c[n>>2]|0)>>>0){c[o>>2]=e+1;e=d[e>>0]|0}else e=cd(b)|0;if((e|32|0)==120){g=+Xd(b,l,m,k,f);break a}if(!(c[n>>2]|0))e=48;else{c[o>>2]=(c[o>>2]|0)+-1;e=48}}else e=h;g=+Yd(b,e,l,m,k,f);break a}default:{if(c[n>>2]|0)c[o>>2]=(c[o>>2]|0)+-1;c[(Uc()|0)>>2]=28;ad(b,0,0);g=0.0;break a}}}}while(0);if((i|0)==23){h=(c[n>>2]|0)==0;if(!h)c[o>>2]=(c[o>>2]|0)+-1;if((f|0)!=0&e>>>0>3)do{if(!h)c[o>>2]=(c[o>>2]|0)+-1;e=e+-1|0}while(e>>>0>3)}g=+(k|0)*r}while(0);return +g}function Xd(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0.0,i=0,j=0,k=0,l=0.0,m=0,n=0.0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0;z=a+4|0;i=c[z>>2]|0;y=a+104|0;if(i>>>0<(c[y>>2]|0)>>>0){c[z>>2]=i+1;i=d[i>>0]|0}else i=cd(a)|0;m=0;a:while(1){switch(i|0){case 46:{w=10;break a}case 48:break;default:{j=0;k=0;o=0;break a}}i=c[z>>2]|0;if(i>>>0<(c[y>>2]|0)>>>0){c[z>>2]=i+1;i=d[i>>0]|0}else i=cd(a)|0;m=1}if((w|0)==10){i=c[z>>2]|0;if(i>>>0<(c[y>>2]|0)>>>0){c[z>>2]=i+1;i=d[i>>0]|0}else i=cd(a)|0;if((i|0)==48){j=0;k=0;do{i=c[z>>2]|0;if(i>>>0<(c[y>>2]|0)>>>0){c[z>>2]=i+1;i=d[i>>0]|0}else i=cd(a)|0;j=qD(j|0,k|0,-1,-1)|0;k=x()|0}while((i|0)==48);m=1;o=1}else{j=0;k=0;o=1}}v=0;u=0;t=k;s=0;n=1.0;k=0;h=0.0;while(1){r=i+-48|0;p=i|32;if(r>>>0>=10){q=(i|0)==46;if(!(q|(p+-97|0)>>>0<6))break;if(q)if(!o){j=u;t=v;r=u;q=v;o=1;p=s;l=n}else{i=46;break}else w=24}else w=24;if((w|0)==24){w=0;i=(i|0)>57?p+-87|0:r;do if(!((v|0)<0|(v|0)==0&u>>>0<8))if((v|0)<0|(v|0)==0&u>>>0<14){n=n*.0625;p=s;l=n;h=h+n*+(i|0);break}else{r=(s|0)!=0|(i|0)==0;p=r?s:1;l=n;h=r?h:h+n*.5;break}else{p=s;l=n;k=i+(k<<4)|0}while(0);r=qD(u|0,v|0,1,0)|0;q=x()|0;m=1}i=c[z>>2]|0;if(i>>>0<(c[y>>2]|0)>>>0){c[z>>2]=i+1;i=d[i>>0]|0}else i=cd(a)|0;v=q;u=r;s=p;n=l}do if(!m){i=(c[y>>2]|0)==0;if(!i)c[z>>2]=(c[z>>2]|0)+-1;if(g){if(!i?(c[z>>2]=(c[z>>2]|0)+-1,!((o|0)==0|i)):0)c[z>>2]=(c[z>>2]|0)+-1}else ad(a,0,0);h=+(f|0)*0.0}else{o=(o|0)==0;p=o?u:j;o=o?v:t;if((v|0)<0|(v|0)==0&u>>>0<8){m=u;j=v;do{k=k<<4;w=m;m=qD(m|0,j|0,1,0)|0;v=j;j=x()|0}while((v|0)<0|(v|0)==0&w>>>0<7)}if((i|32|0)==112){j=Zd(a,g)|0;i=x()|0;if((j|0)==0&(i|0)==-2147483648){if(!g){ad(a,0,0);h=0.0;break}if(!(c[y>>2]|0)){j=0;i=0}else{c[z>>2]=(c[z>>2]|0)+-1;j=0;i=0}}}else if(!(c[y>>2]|0)){j=0;i=0}else{c[z>>2]=(c[z>>2]|0)+-1;j=0;i=0}z=wD(p|0,o|0,2)|0;z=qD(z|0,x()|0,-32,-1)|0;i=qD(z|0,x()|0,j|0,i|0)|0;j=x()|0;if(!k){h=+(f|0)*0.0;break}z=0-e|0;g=((z|0)<0)<<31>>31;if((j|0)>(g|0)|(j|0)==(g|0)&i>>>0>z>>>0){c[(Uc()|0)>>2]=68;h=+(f|0)*1797693134862315708145274.0e284*1797693134862315708145274.0e284;break}z=e+-106|0;g=((z|0)<0)<<31>>31;if((j|0)<(g|0)|(j|0)==(g|0)&i>>>0<z>>>0){c[(Uc()|0)>>2]=68;h=+(f|0)*2.2250738585072014e-308*2.2250738585072014e-308;break}if((k|0)>-1){do{z=!(h>=.5);k=k<<1|(z^1)&1;h=h+(z?h:h+-1.0);i=qD(i|0,j|0,-1,-1)|0;j=x()|0}while((k|0)>-1);m=i;n=h}else{m=i;n=h}z=((b|0)<0)<<31>>31;i=rD(32,0,e|0,((e|0)<0)<<31>>31|0)|0;i=qD(i|0,x()|0,m|0,j|0)|0;e=x()|0;if((e|0)<(z|0)|(e|0)==(z|0)&i>>>0<b>>>0)if((i|0)>0)w=65;else{j=0;i=84;w=67}else{i=b;w=65}if((w|0)==65)if((i|0)<53){j=i;i=84-i|0;w=67}else{l=0.0;h=+(f|0)}if((w|0)==67){h=+(f|0);l=+$d(+_d(1.0,i),h);i=j}f=(k&1|0)==0&(n!=0.0&(i|0)<32);h=(f?0.0:n)*h+(l+h*+((k+(f&1)|0)>>>0))-l;if(!(h!=0.0))c[(Uc()|0)>>2]=68;h=+be(h,m)}while(0);return +h}function Yd(a,b,e,f,g,h){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0.0,j=0,k=0.0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0.0,u=0,v=0.0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0.0;I=ja;ja=ja+512|0;F=I;G=f+e|0;H=0-G|0;D=a+4|0;E=a+104|0;j=b;m=0;a:while(1){switch(j|0){case 46:{B=7;break a}case 48:break;default:{l=0;b=0;p=0;break a}}b=c[D>>2]|0;if(b>>>0<(c[E>>2]|0)>>>0){c[D>>2]=b+1;b=d[b>>0]|0}else b=cd(a)|0;j=b;m=1}if((B|0)==7){b=c[D>>2]|0;if(b>>>0<(c[E>>2]|0)>>>0){c[D>>2]=b+1;j=d[b>>0]|0}else j=cd(a)|0;if((j|0)==48){j=0;b=0;while(1){l=qD(j|0,b|0,-1,-1)|0;b=x()|0;j=c[D>>2]|0;if(j>>>0<(c[E>>2]|0)>>>0){c[D>>2]=j+1;j=d[j>>0]|0}else j=cd(a)|0;if((j|0)==48)j=l;else{m=1;p=1;break}}}else{l=0;b=0;p=1}}c[F>>2]=0;w=j+-48|0;n=(j|0)==46;b:do if(n|w>>>0<10){C=F+496|0;B=l;A=0;u=0;y=n;o=0;l=0;n=0;c:while(1){do if(y)if(!p){B=A;b=u;p=1}else break c;else{y=qD(A|0,u|0,1,0)|0;u=x()|0;z=(j|0)!=48;if((l|0)>=125){if(!z){A=y;break}c[C>>2]=c[C>>2]|1;A=y;break}m=F+(l<<2)|0;if(!o)j=w;else j=j+-48+((c[m>>2]|0)*10|0)|0;c[m>>2]=j;o=o+1|0;w=(o|0)==9;A=y;m=1;o=w?0:o;l=l+(w&1)|0;n=z?y:n}while(0);j=c[D>>2]|0;if(j>>>0<(c[E>>2]|0)>>>0){c[D>>2]=j+1;j=d[j>>0]|0}else j=cd(a)|0;w=j+-48|0;y=(j|0)==46;if(!(y|w>>>0<10)){w=A;y=B;B=31;break b}}w=A;p=B;j=(m|0)!=0;B=39}else{w=0;y=l;u=0;o=0;l=0;n=0;B=31}while(0);do if((B|0)==31){C=(p|0)==0;p=C?w:y;b=C?u:b;y=(m|0)!=0;if(!(y&(j|32|0)==101))if((j|0)>-1){j=y;B=39;break}else{m=u;j=y;B=41;break}m=Zd(a,h)|0;j=x()|0;if((m|0)==0&(j|0)==-2147483648){if(!h){ad(a,0,0);i=0.0;break}if(!(c[E>>2]|0)){m=0;j=0}else{c[D>>2]=(c[D>>2]|0)+-1;m=0;j=0}}y=qD(m|0,j|0,p|0,b|0)|0;p=w;b=x()|0;m=u;B=43}while(0);if((B|0)==39)if(c[E>>2]|0){c[D>>2]=(c[D>>2]|0)+-1;if(j){y=p;p=w;m=u;B=43}else B=42}else{m=u;B=41}if((B|0)==41)if(j){y=p;p=w;B=43}else B=42;do if((B|0)==42){c[(Uc()|0)>>2]=28;ad(a,0,0);i=0.0}else if((B|0)==43){j=c[F>>2]|0;if(!j){i=+(g|0)*0.0;break}if(((m|0)<0|(m|0)==0&p>>>0<10)&((y|0)==(p|0)&(b|0)==(m|0))?(e|0)>30|(j>>>e|0)==0:0){i=+(g|0)*+(j>>>0);break}a=(f|0)/-2|0;E=((a|0)<0)<<31>>31;if((b|0)>(E|0)|(b|0)==(E|0)&y>>>0>a>>>0){c[(Uc()|0)>>2]=68;i=+(g|0)*1797693134862315708145274.0e284*1797693134862315708145274.0e284;break}a=f+-106|0;E=((a|0)<0)<<31>>31;if((b|0)<(E|0)|(b|0)==(E|0)&y>>>0<a>>>0){c[(Uc()|0)>>2]=68;i=+(g|0)*2.2250738585072014e-308*2.2250738585072014e-308;break}if(o){if((o|0)<9){m=F+(l<<2)|0;b=o;j=c[m>>2]|0;while(1){j=j*10|0;if((b|0)>=8)break;else b=b+1|0}c[m>>2]=j}l=l+1|0}if((n|0)<9?(n|0)<=(y|0)&(y|0)<18:0){if((y|0)==9){i=+(g|0)*+((c[F>>2]|0)>>>0);break}if((y|0)<9){i=+(g|0)*+((c[F>>2]|0)>>>0)/+(c[17264+(8-y<<2)>>2]|0);break}a=e+27+(t(y,-3)|0)|0;b=c[F>>2]|0;if((a|0)>30|(b>>>a|0)==0){i=+(g|0)*+(b>>>0)*+(c[17264+(y+-10<<2)>>2]|0);break}}b=(y|0)%9|0;if(!b){m=0;j=y}else{u=(y|0)>-1?b:b+9|0;m=c[17264+(8-u<<2)>>2]|0;if(l){o=1e9/(m|0)|0;j=0;n=0;p=0;b=y;do{D=F+(p<<2)|0;E=c[D>>2]|0;a=(E>>>0)/(m>>>0)|0;E=E-(t(a,m)|0)|0;a=a+n|0;c[D>>2]=a;n=t(o,E)|0;a=(p|0)==(j|0)&(a|0)==0;b=a?b+-9|0:b;j=a?j+1&127:j;p=p+1|0}while((p|0)!=(l|0));if(n){c[F+(l<<2)>>2]=n;l=l+1|0}}else{j=0;b=y;l=0}m=j;j=9-u+b|0}b=0;d:while(1){z=(j|0)<18;A=(j|0)==18;y=F+(m<<2)|0;do{if(!z){if(!A)break d;if((c[y>>2]|0)>>>0>=9007199){j=18;break d}}o=0;n=l+127|0;while(1){u=n&127;p=F+(u<<2)|0;n=wD(c[p>>2]|0,0,29)|0;n=qD(n|0,x()|0,o|0,0)|0;o=x()|0;if(o>>>0>0|(o|0)==0&n>>>0>1e9){w=uD(n|0,o|0,1e9,0)|0;a=pD(w|0,x()|0,1e9,0)|0;n=rD(n|0,o|0,a|0,x()|0)|0;x()|0}else w=0;c[p>>2]=n;a=(u|0)==(m|0);p=(u|0)!=(l+127&127|0)|a?l:(n|0)==0?u:l;if(a)break;else{o=w;n=u+-1|0;l=p}}b=b+-29|0}while((w|0)==0);m=m+127&127;n=p+127&127;o=F+((p+126&127)<<2)|0;if((m|0)==(p|0)){c[o>>2]=c[o>>2]|c[F+(n<<2)>>2];l=n}c[F+(m<<2)>>2]=w;j=j+9|0}e:while(1){y=l+1&127;z=F+((l+127&127)<<2)|0;while(1){p=(j|0)==18;w=(j|0)>27?9:1;A=m;while(1){o=0;while(1){m=o+A&127;if((m|0)==(l|0)){B=92;break}m=c[F+(m<<2)>>2]|0;n=c[21672+(o<<2)>>2]|0;if(m>>>0<n>>>0){B=92;break}if(m>>>0>n>>>0)break;if((o+1|0)>>>0<2)o=1;else{B=92;break}}if((B|0)==92?(B=0,p):0)break e;b=w+b|0;if((A|0)==(l|0))A=l;else break}u=(1<<w)+-1|0;p=1e9>>>w;m=A;o=0;n=A;do{D=F+(n<<2)|0;E=c[D>>2]|0;a=(E>>>w)+o|0;c[D>>2]=a;o=t(E&u,p)|0;a=(n|0)==(m|0)&(a|0)==0;j=a?j+-9|0:j;m=a?m+1&127:m;n=n+1&127}while((n|0)!=(l|0));if(o|0){if((y|0)!=(m|0))break;c[z>>2]=c[z>>2]|1}}c[F+(l<<2)>>2]=o;l=y}n=0;i=0.0;while(1){m=n+A&127;j=l+1&127;if((m|0)==(l|0))c[F+(j+-1<<2)>>2]=0;else j=l;i=i*1.0e9+ +((c[F+(m<<2)>>2]|0)>>>0);n=n+1|0;if((n|0)==2)break;else l=j}v=+(g|0);k=i*v;m=b+53|0;p=m-f|0;o=(p|0)<(e|0);n=o?((p|0)>0?p:0):e;if((n|0)<53){J=+$d(+_d(1.0,105-n|0),k);q=+ae(k,+_d(1.0,53-n|0));r=J;i=q;q=J+(k-q)}else{r=0.0;i=0.0;q=k}l=A+2&127;if((l|0)!=(j|0)){l=c[F+(l<<2)>>2]|0;do if(l>>>0>=5e8){if((l|0)!=5e8){i=v*.75+i;break}if((A+3&127|0)==(j|0)){i=v*.5+i;break}else{i=v*.75+i;break}}else{if((l|0)==0?(A+3&127|0)==(j|0):0)break;i=v*.25+i}while(0);if((53-n|0)>1?!(+ae(i,1.0)!=0.0):0)k=i+1.0;else k=i}else k=i;i=q+k-r;do if((m&2147483647|0)>(-2-G|0)){G=!(+s(+i)>=9007199254740992.0);b=b+((G^1)&1)|0;i=G?i:i*.5;if((b+50|0)<=(H|0)?!(k!=0.0&(o&((n|0)!=(p|0)|G))):0)break;c[(Uc()|0)>>2]=68}while(0);i=+be(i,b)}while(0);ja=I;return +i}function Zd(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;i=a+4|0;e=c[i>>2]|0;j=a+104|0;if(e>>>0<(c[j>>2]|0)>>>0){c[i>>2]=e+1;f=d[e>>0]|0}else f=cd(a)|0;switch(f|0){case 43:case 45:{g=(f|0)==45&1;e=c[i>>2]|0;if(e>>>0<(c[j>>2]|0)>>>0){c[i>>2]=e+1;e=d[e>>0]|0}else e=cd(a)|0;f=e+-48|0;if((b|0)!=0&f>>>0>9)if(!(c[j>>2]|0)){f=-2147483648;e=0}else{c[i>>2]=(c[i>>2]|0)+-1;k=14}else{h=g;k=12}break}default:{e=f;h=0;f=f+-48|0;k=12}}if((k|0)==12)if(f>>>0>9)k=14;else{g=0;while(1){g=e+-48+(g*10|0)|0;e=c[i>>2]|0;if(e>>>0<(c[j>>2]|0)>>>0){c[i>>2]=e+1;f=d[e>>0]|0}else f=cd(a)|0;b=f+-48|0;if(!(b>>>0<10&(g|0)<214748364))break;else e=f}e=((g|0)<0)<<31>>31;if(b>>>0<10){do{l=pD(g|0,e|0,10,0)|0;b=x()|0;f=qD(f|0,((f|0)<0)<<31>>31|0,-48,-1)|0;g=qD(f|0,x()|0,l|0,b|0)|0;e=x()|0;f=c[i>>2]|0;if(f>>>0<(c[j>>2]|0)>>>0){c[i>>2]=f+1;f=d[f>>0]|0}else f=cd(a)|0;b=f+-48|0}while(b>>>0<10&((e|0)<21474836|(e|0)==21474836&g>>>0<2061584302));if(b>>>0<10)do{f=c[i>>2]|0;if(f>>>0<(c[j>>2]|0)>>>0){c[i>>2]=f+1;f=d[f>>0]|0}else f=cd(a)|0}while((f+-48|0)>>>0<10)}if(c[j>>2]|0)c[i>>2]=(c[i>>2]|0)+-1;j=(h|0)==0;l=rD(0,0,g|0,e|0)|0;f=x()|0;f=j?e:f;e=j?g:l}if((k|0)==14)if(!(c[j>>2]|0)){f=-2147483648;e=0}else{c[i>>2]=(c[i>>2]|0)+-1;f=-2147483648;e=0}w(f|0);return e|0}function _d(a,b){a=+a;b=b|0;var d=0,e=0;if((b|0)<=1023){if((b|0)<-1022){a=a*2.2250738585072014e-308;d=(b|0)<-2044;e=b+2044|0;b=d?((e|0)>-1022?e:-1022):b+1022|0;a=d?a*2.2250738585072014e-308:a}}else{a=a*8988465674311579538646525.0e283;e=(b|0)>2046;d=b+-2046|0;b=e?((d|0)<1023?d:1023):b+-1023|0;a=e?a*8988465674311579538646525.0e283:a}d=wD(b+1023|0,0,52)|0;e=x()|0;c[h>>2]=d;c[h+4>>2]=e;return +(a*+g[h>>3])}function $d(a,b){a=+a;b=+b;return +(+jd(a,b))}function ae(a,b){a=+a;b=+b;return +(+ce(a,b))}function be(a,b){a=+a;b=b|0;return +(+_d(a,b))}function ce(a,b){a=+a;b=+b;var d=0,e=0,f=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g[h>>3]=a;k=c[h>>2]|0;l=c[h+4>>2]|0;g[h>>3]=b;n=c[h>>2]|0;o=c[h+4>>2]|0;e=vD(k|0,l|0,52)|0;x()|0;e=e&2047;m=vD(n|0,o|0,52)|0;x()|0;m=m&2047;p=l&-2147483648;j=wD(n|0,o|0,1)|0;i=x()|0;a:do if(!((j|0)==0&(i|0)==0)?(f=de(b)|0,d=(x()|0)&2147483647,!((e|0)==2047|(d>>>0>2146435072|(d|0)==2146435072&f>>>0>0))):0){d=wD(k|0,l|0,1)|0;f=x()|0;if(!(f>>>0>i>>>0|(f|0)==(i|0)&d>>>0>j>>>0))return +((d|0)==(j|0)&(f|0)==(i|0)?a*0.0:a);if(!e){d=wD(k|0,l|0,12)|0;e=x()|0;if((e|0)>-1|(e|0)==-1&d>>>0>4294967295){f=e;e=0;do{e=e+-1|0;d=wD(d|0,f|0,1)|0;f=x()|0}while((f|0)>-1|(f|0)==-1&d>>>0>4294967295)}else e=0;k=wD(k|0,l|0,1-e|0)|0;j=x()|0}else j=l&1048575|1048576;if(!m){d=wD(n|0,o|0,12)|0;f=x()|0;if((f|0)>-1|(f|0)==-1&d>>>0>4294967295){i=0;do{i=i+-1|0;d=wD(d|0,f|0,1)|0;f=x()|0}while((f|0)>-1|(f|0)==-1&d>>>0>4294967295)}else i=0;n=wD(n|0,o|0,1-i|0)|0;l=x()|0;m=i}else l=o&1048575|1048576;d=rD(k|0,j|0,n|0,l|0)|0;f=x()|0;i=(f|0)>-1|(f|0)==-1&d>>>0>4294967295;b:do if((e|0)>(m|0)){while(1){if(i){if((d|0)==0&(f|0)==0)break}else{d=k;f=j}k=wD(d|0,f|0,1)|0;j=x()|0;e=e+-1|0;d=rD(k|0,j|0,n|0,l|0)|0;f=x()|0;i=(f|0)>-1|(f|0)==-1&d>>>0>4294967295;if((e|0)<=(m|0))break b}b=a*0.0;break a}while(0);if(i){if((d|0)==0&(f|0)==0){b=a*0.0;break}}else{f=j;d=k}if(f>>>0<1048576|(f|0)==1048576&d>>>0<0)do{d=wD(d|0,f|0,1)|0;f=x()|0;e=e+-1|0}while(f>>>0<1048576|(f|0)==1048576&d>>>0<0);if((e|0)>0){o=qD(d|0,f|0,0,-1048576)|0;d=x()|0;e=wD(e|0,0,52)|0;d=d|(x()|0);e=o|e}else{e=vD(d|0,f|0,1-e|0)|0;d=x()|0}c[h>>2]=e;c[h+4>>2]=d|p;b=+g[h>>3]}else q=3;while(0);if((q|0)==3){b=a*b;b=b/b}return +b}function de(a){a=+a;var b=0;g[h>>3]=a;b=c[h>>2]|0;w(c[h+4>>2]|0);return b|0}function ee(a){a=a|0;return 0}function fe(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return d|0}function ge(a,b){a=a|0;b=b|0;return -1|0}function he(b){b=b|0;var d=0,e=0,f=0;f=b;a:do if(!(f&3)){d=b;e=5}else{d=f;while(1){if(!(a[b>>0]|0))break a;b=b+1|0;d=b;if(!(d&3)){d=b;e=5;break}}}while(0);if((e|0)==5){while(1){b=c[d>>2]|0;if(!((b&-2139062144^-2139062144)&b+-16843009))d=d+4|0;else break}if((b&255)<<24>>24)do d=d+1|0;while((a[d>>0]|0)!=0)}return d-f|0}function ie(a,b){a=a|0;b=b|0;var d=0,e=0;d=ja;ja=ja+16|0;e=d;c[e>>2]=a;c[e+4>>2]=b;a=Vd(I(91,e|0)|0)|0;ja=d;return a|0}function je(b,c){b=b|0;c=c|0;b=ke(b,c)|0;return ((a[b>>0]|0)==(c&255)<<24>>24?b:0)|0}function ke(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;f=d&255;a:do if(!f)b=b+(he(b)|0)|0;else{if(b&3){e=d&255;do{g=a[b>>0]|0;if(g<<24>>24==0?1:g<<24>>24==e<<24>>24)break a;b=b+1|0}while((b&3|0)!=0)}f=t(f,16843009)|0;e=c[b>>2]|0;b:do if(!((e&-2139062144^-2139062144)&e+-16843009))do{g=e^f;if((g&-2139062144^-2139062144)&g+-16843009|0)break b;b=b+4|0;e=c[b>>2]|0}while(!((e&-2139062144^-2139062144)&e+-16843009|0));while(0);e=d&255;while(1){g=a[b>>0]|0;if(g<<24>>24==0?1:g<<24>>24==e<<24>>24)break;else b=b+1|0}}while(0);return b|0}function le(){return}function me(a){a=a|0;if(ne(a)|0)jD(a);return}function ne(a){a=a|0;return (a|0)!=21376&((a|0)!=0&(a|0)!=107232)&1|0}function oe(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0;l=ja;ja=ja+16|0;h=l;j=(g|0)==0?107260:g;g=c[j>>2]|0;a:do if(!e)if(!g)g=0;else k=19;else{i=(b|0)==0?h:b;if(!f)g=-2;else{if(!g){g=a[e>>0]|0;if(g<<24>>24>-1){c[i>>2]=g&255;g=g<<24>>24!=0&1;break}b=(c[c[(pe()|0)+188>>2]>>2]|0)==0;g=a[e>>0]|0;if(b){c[i>>2]=g<<24>>24&57343;g=1;break}g=(g&255)+-194|0;if(g>>>0>50){k=19;break}g=c[12464+(g<<2)>>2]|0;h=f+-1|0;if(h){b=h;e=e+1|0;k=11}}else{b=f;k=11}b:do if((k|0)==11){h=d[e>>0]|0;m=h>>>3;if((m+-16|m+(g>>26))>>>0>7){k=19;break a}g=h+-128|g<<6;h=b+-1|0;if((g|0)<0)do{e=e+1|0;if(!h)break b;b=a[e>>0]|0;if((b&-64)<<24>>24!=-128){k=19;break a}g=(b&255)+-128|g<<6;h=h+-1|0}while((g|0)<0);c[j>>2]=0;c[i>>2]=g;g=f-h|0;break a}while(0);c[j>>2]=g;g=-2}}while(0);if((k|0)==19){c[j>>2]=0;c[(Uc()|0)>>2]=25;g=-1}ja=l;return g|0}function pe(){return Id()|0}function qe(a,b){a=a|0;b=b|0;return md(a)|0}function re(a,b){a=a|0;b=b|0;return Ud(a)|0}function se(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=ja;ja=ja+272|0;m=o;n=o+256|0;do if(!(a[d>>0]|0)){d=_(28679)|0;if(d|0?a[d>>0]|0:0)break;d=_(17296+(b*12|0)|0)|0;if(d|0?a[d>>0]|0:0)break;d=_(28686)|0;if(d|0?a[d>>0]|0:0)break;d=28691}while(0);e=0;a:while(1){switch(a[d+e>>0]|0){case 47:case 0:break a;default:{}}e=e+1|0;if(e>>>0>=15){e=15;break}}f=a[d>>0]|0;if(f<<24>>24!=46?(a[d+e>>0]|0)==0:0)if(f<<24>>24==67)l=15;else{k=d;l=16}else{d=28691;l=15}if((l|0)==15)if(!(a[d+1>>0]|0))l=18;else{k=d;l=16}b:do if((l|0)==16)if((kd(k,28691)|0)!=0?(kd(k,28699)|0)!=0:0){d=c[26816]|0;if(d|0)do{if(!(kd(k,d+8|0)|0))break b;d=c[d+24>>2]|0}while((d|0)!=0);F(107268);d=c[26816]|0;c:do if(d|0){while(1){if(!(kd(k,d+8|0)|0))break;d=c[d+24>>2]|0;if(!d)break c}J(107268);break b}while(0);d:do if(((c[26794]|0)==0?(g=_(28705)|0,(g|0)!=0):0)?(a[g>>0]|0)!=0:0){j=254-e|0;i=e+1|0;f=g;while(1){h=ke(f,58)|0;d=a[h>>0]|0;g=h-f+((d<<24>>24!=0)<<31>>31)|0;if(g>>>0<j>>>0){yD(m|0,f|0,g|0)|0;f=m+g|0;a[f>>0]=47;yD(f+1|0,k|0,e|0)|0;a[m+(i+g)>>0]=0;f=G(m|0,n|0)|0;if(f|0)break;d=a[h>>0]|0}f=h+(d<<24>>24!=0&1)|0;if(!(a[f>>0]|0)){l=41;break d}}d=iD(28)|0;if(!d){ie(f,c[n>>2]|0)|0;l=41;break}else{c[d>>2]=f;c[d+4>>2]=c[n>>2];n=d+8|0;yD(n|0,k|0,e|0)|0;a[n+e>>0]=0;c[d+24>>2]=c[26816];c[26816]=d;break}}else l=41;while(0);if((l|0)==41){d=iD(28)|0;if(d){c[d>>2]=c[5337];c[d+4>>2]=c[5338];n=d+8|0;yD(n|0,k|0,e|0)|0;a[n+e>>0]=0;c[d+24>>2]=c[26816];c[26816]=d}}J(107268);d=(b|0)==0&(d|0)==0?21348:d}else{d=k;l=18}while(0);do if((l|0)==18){if((b|0)==0?(a[d+1>>0]|0)==46:0){d=21348;break}d=0}while(0);ja=o;return d|0}function te(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;j=ja;ja=ja+32|0;h=j;a:do if(!(ne(d)|0)){i=(d|0)!=0;f=0;g=0;do{e=1<<f&a;if(i&(e|0)==0)e=c[d+(f<<2)>>2]|0;else e=se(f,(e|0)==0?109280:b)|0;g=g+((e|0)!=0&1)|0;c[h+(f<<2)>>2]=e;f=f+1|0}while((f|0)!=6);switch(g&2147483647|0){case 0:{d=107232;break a}case 1:{if((c[h>>2]|0)==21348){d=21376;break a}break}default:{}}}else{e=0;do{if(1<<e&a|0)c[d+(e<<2)>>2]=se(e,b)|0;e=e+1|0}while((e|0)!=6)}while(0);ja=j;return d|0}function ue(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=ja;ja=ja+16|0;g=f;c[g>>2]=e;e=pd(a,b,d,g)|0;ja=f;return e|0}function ve(a,b){a=a|0;b=b|0;we(a,b)|0;return a|0}function we(b,d){b=b|0;d=d|0;var e=0,f=0;e=d;a:do if(!((e^b)&3)){if(!(e&3))e=d;else while(1){e=a[d>>0]|0;a[b>>0]=e;if(!(e<<24>>24))break a;d=d+1|0;b=b+1|0;if(!(d&3)){e=d;break}}d=c[e>>2]|0;if(!((d&-2139062144^-2139062144)&d+-16843009)){f=b;b=e;while(1){e=b+4|0;b=f+4|0;c[f>>2]=d;d=c[e>>2]|0;if((d&-2139062144^-2139062144)&d+-16843009|0){d=e;break}else{f=b;b=e}}}else d=e;f=10}else f=10;while(0);if((f|0)==10){f=a[d>>0]|0;a[b>>0]=f;if(f<<24>>24)do{d=d+1|0;b=b+1|0;f=a[d>>0]|0;a[b>>0]=f}while(f<<24>>24!=0)}return b|0}function xe(a){a=a|0;var b=0,d=0;d=(ye()|0)+188|0;b=c[d>>2]|0;if(a|0)c[d>>2]=(a|0)==(-1|0)?107208:a;return ((b|0)==107208?-1:b)|0}function ye(){return Id()|0}function ze(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;if(d|0){e=a;while(1){d=d+-1|0;c[e>>2]=c[b>>2];if(!d)break;else{e=e+4|0;b=b+4|0}}}return a|0}function Ae(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=t(d,b)|0;d=(b|0)==0?0:d;if((c[e+76>>2]|0)>-1){g=(vd(e)|0)==0;a=Jd(a,f,e)|0;if(!g)wd(e)}else a=Jd(a,f,e)|0;if((a|0)!=(f|0))d=(a>>>0)/(b>>>0)|0;return d|0}function Be(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;l=ja;ja=ja+16|0;j=l;k=e&255;a[j>>0]=k;h=b+16|0;g=c[h>>2]|0;if(!g)if(!(Kd(b)|0)){g=c[h>>2]|0;i=4}else f=-1;else i=4;do if((i|0)==4){i=b+20|0;h=c[i>>2]|0;if(h>>>0<g>>>0?(f=e&255,(f|0)!=(a[b+75>>0]|0)):0){c[i>>2]=h+1;a[h>>0]=k;break}if((pa[c[b+36>>2]&31](b,j,1)|0)==1)f=d[j>>0]|0;else f=-1}while(0);ja=l;return f|0}function Ce(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;j=ja;ja=ja+16|0;g=j;a:do if(!e)g=0;else{do if(f|0){i=(b|0)==0?g:b;g=a[e>>0]|0;if(g<<24>>24>-1){c[i>>2]=g&255;g=g<<24>>24!=0&1;break a}h=(c[c[(De()|0)+188>>2]>>2]|0)==0;g=a[e>>0]|0;if(h){c[i>>2]=g<<24>>24&57343;g=1;break a}g=(g&255)+-194|0;if(g>>>0<=50){h=e+1|0;b=c[12464+(g<<2)>>2]|0;if(f>>>0<4?b&-2147483648>>>((f*6|0)+-6|0)|0:0)break;g=d[h>>0]|0;f=g>>>3;if((f+-16|f+(b>>26))>>>0<=7){g=g+-128|b<<6;if((g|0)>=0){c[i>>2]=g;g=2;break a}b=(d[e+2>>0]|0)+-128|0;if(b>>>0<=63){b=b|g<<6;if((b|0)>=0){c[i>>2]=b;g=3;break a}g=(d[e+3>>0]|0)+-128|0;if(g>>>0<=63){c[i>>2]=g|b<<6;g=4;break a}}}}}while(0);c[(Uc()|0)>>2]=25;g=-1}while(0);ja=j;return g|0}function De(){return Id()|0}function Ee(){F(107276);return 107284}function Fe(){J(107276);return}function Ge(a){a=a|0;var b=0,d=0;do if(a){if((c[a+76>>2]|0)<=-1){b=He(a)|0;break}d=(vd(a)|0)==0;b=He(a)|0;if(!d)wd(a)}else{if(!(c[5353]|0))b=0;else b=Ge(c[5353]|0)|0;a=c[(Ee()|0)>>2]|0;if(a)do{if((c[a+76>>2]|0)>-1)d=vd(a)|0;else d=0;if((c[a+20>>2]|0)>>>0>(c[a+28>>2]|0)>>>0)b=He(a)|0|b;if(d|0)wd(a);a=c[a+56>>2]|0}while((a|0)!=0);Fe()}while(0);return b|0}function He(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;h=a+20|0;g=a+28|0;if((c[h>>2]|0)>>>0>(c[g>>2]|0)>>>0?(pa[c[a+36>>2]&31](a,0,0)|0,(c[h>>2]|0)==0):0)b=-1;else{f=a+4|0;b=c[f>>2]|0;e=a+8|0;d=c[e>>2]|0;if(b>>>0<d>>>0){d=b-d|0;qa[c[a+40>>2]&15](a,d,((d|0)<0)<<31>>31,1)|0;x()|0}c[a+16>>2]=0;c[g>>2]=0;c[h>>2]=0;c[e>>2]=0;c[f>>2]=0;b=0}return b|0}function Ie(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=ja;ja=ja+16|0;f=e;c[f>>2]=d;d=Je(a,b,f)|0;ja=e;return d|0}function Je(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=ja;ja=ja+144|0;f=e;AD(f|0,0,144)|0;c[f+32>>2]=24;c[f+44>>2]=a;c[f+76>>2]=-1;c[f+84>>2]=a;a=Le(f,b,d)|0;ja=e;return a|0}function Ke(a,b,c){a=a|0;b=b|0;c=c|0;return Pe(a,b,c)|0}function Le(e,h,i){e=e|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0.0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;Q=ja;ja=ja+288|0;M=Q+264|0;J=Q;N=Q+260|0;C=Q+272|0;if((c[e+76>>2]|0)>-1)P=vd(e)|0;else P=0;j=a[h>>0]|0;a:do if(j<<24>>24){I=e+4|0;L=e+104|0;K=e+120|0;H=e+8|0;D=J+10|0;E=J+33|0;F=J+46|0;G=J+94|0;B=M+4|0;k=0;l=j;u=0;v=0;j=0;p=h;h=0;b:while(1){c:do if(!(dd(l&255)|0)){n=(a[p>>0]|0)==37;d:do if(n){l=p+1|0;m=a[l>>0]|0;e:do switch(m<<24>>24){case 37:break d;case 42:{A=0;l=p+2|0;break}default:{if(md(m&255)|0?(a[p+2>>0]|0)==36:0){A=Me(i,(d[l>>0]|0)+-48|0)|0;l=p+3|0;break e}z=(c[i>>2]|0)+(4-1)&~(4-1);A=c[z>>2]|0;c[i>>2]=z+4}}while(0);if(!(md(d[l>>0]|0)|0)){r=l;m=0}else{m=0;do{m=(m*10|0)+-48+(d[l>>0]|0)|0;l=l+1|0}while((md(d[l>>0]|0)|0)!=0);r=l}l=a[r>>0]|0;n=r+1|0;if(l<<24>>24==109){k=0;p=a[n>>0]|0;l=(A|0)!=0&1;q=r+2|0;h=0}else{p=l;l=0;q=n;n=r}switch(p<<24>>24){case 104:{z=(a[q>>0]|0)==104;q=z?n+2|0:q;n=z?-2:-1;break}case 108:{z=(a[q>>0]|0)==108;q=z?n+2|0:q;n=z?3:1;break}case 106:{n=3;break}case 116:case 122:{n=1;break}case 76:{n=2;break}case 110:case 112:case 67:case 83:case 91:case 99:case 115:case 88:case 71:case 70:case 69:case 65:case 103:case 102:case 101:case 97:case 120:case 117:case 111:case 105:case 100:{q=n;n=0;break}default:{O=143;break b}}s=d[q>>0]|0;t=(s&47|0)==3;s=t?s|32:s;t=t?1:n;r=s&255;switch(r<<24>>24){case 99:{z=u;m=(m|0)>1?m:1;break}case 91:{z=u;break}case 110:{Ne(A,t,u,v);n=u;r=v;l=q;break c}default:{ad(e,0,0);do{n=c[I>>2]|0;if(n>>>0<(c[L>>2]|0)>>>0){c[I>>2]=n+1;n=d[n>>0]|0}else n=cd(e)|0}while((dd(n)|0)!=0);if(!(c[L>>2]|0))n=c[I>>2]|0;else{n=(c[I>>2]|0)+-1|0;c[I>>2]=n}y=K;z=n-(c[H>>2]|0)|0;v=qD(c[y>>2]|0,c[y+4>>2]|0,u|0,v|0)|0;z=qD(v|0,x()|0,z|0,((z|0)<0)<<31>>31|0)|0;v=x()|0}}y=((m|0)<0)<<31>>31;ad(e,m,y);p=c[I>>2]|0;n=c[L>>2]|0;if(p>>>0<n>>>0)c[I>>2]=p+1;else{if((cd(e)|0)<0){O=143;break b}n=c[L>>2]|0}if(n|0)c[I>>2]=(c[I>>2]|0)+-1;f:do switch(r<<24>>24){case 91:case 99:case 115:{w=(s|0)==99;g:do if((s|16|0)==115){AD(J|0,-1,257)|0;a[J>>0]=0;if((s|0)==115){a[E>>0]=0;b[D>>1]=0;b[D+2>>1]=0;a[D+4>>0]=0;n=q}else n=q}else{n=q+1|0;u=(a[n>>0]|0)==94;p=u&1;n=u?q+2|0:n;AD(J|0,p|0,257)|0;a[J>>0]=0;switch(a[n>>0]|0){case 45:{r=(p^1)&255;a[F>>0]=r;n=n+1|0;break}case 93:{r=(p^1)&255;a[G>>0]=r;n=n+1|0;break}default:r=(p^1)&255}while(1){p=a[n>>0]|0;h:do switch(p<<24>>24){case 0:{O=143;break b}case 93:break g;case 45:{q=n+1|0;p=a[q>>0]|0;switch(p<<24>>24){case 93:case 0:{p=45;break h}default:{}}n=a[n+-1>>0]|0;if((n&255)<(p&255)){n=n&255;do{n=n+1|0;a[J+n>>0]=r;p=a[q>>0]|0}while(n>>>0<(p&255)>>>0);n=q}else n=q;break}default:{}}while(0);a[J+((p&255)+1)>>0]=r;n=n+1|0}}while(0);q=w?m+1|0:31;t=(t|0)==1;u=(l|0)!=0;i:do if(t){if(u){k=iD(q<<2)|0;if(!k){k=0;h=0;O=143;break b}}else k=A;c[M>>2]=0;c[B>>2]=0;h=0;j:while(1){r=(k|0)==0;p=h;do{k:while(1){h=c[I>>2]|0;if(h>>>0<(c[L>>2]|0)>>>0){c[I>>2]=h+1;h=d[h>>0]|0}else h=cd(e)|0;if(!(a[J+(h+1)>>0]|0))break j;a[C>>0]=h;switch(oe(N,C,1,M)|0){case -1:{h=0;O=143;break b}case -2:break;default:break k}}if(!r){c[k+(p<<2)>>2]=c[N>>2];p=p+1|0}}while(!(u&(p|0)==(q|0)));q=q<<1|1;h=kD(k,q<<2)|0;if(!h){h=0;O=143;break b}else{k=h;h=p}}if(!(Oe(M)|0)){h=0;O=143;break b}else{s=k;h=0;r=k}}else{if(u){h=iD(q)|0;if(!h){k=0;h=0;O=143;break b}p=0;while(1){do{k=c[I>>2]|0;if(k>>>0<(c[L>>2]|0)>>>0){c[I>>2]=k+1;k=d[k>>0]|0}else k=cd(e)|0;if(!(a[J+(k+1)>>0]|0)){s=0;r=0;break i}s=p;p=p+1|0;a[h+s>>0]=k}while((p|0)!=(q|0));q=q<<1|1;k=kD(h,q)|0;if(!k){k=0;O=143;break b}else h=k}}if(!A)while(1){h=c[I>>2]|0;if(h>>>0<(c[L>>2]|0)>>>0){c[I>>2]=h+1;h=d[h>>0]|0}else h=cd(e)|0;if(!(a[J+(h+1)>>0]|0)){s=0;p=0;h=0;r=0;break i}}k=0;while(1){h=c[I>>2]|0;if(h>>>0<(c[L>>2]|0)>>>0){c[I>>2]=h+1;h=d[h>>0]|0}else h=cd(e)|0;if(!(a[J+(h+1)>>0]|0)){s=0;p=k;h=A;r=0;break i}a[A+k>>0]=h;k=k+1|0}}while(0);if(!(c[L>>2]|0))k=c[I>>2]|0;else{k=(c[I>>2]|0)+-1|0;c[I>>2]=k}q=K;k=k-(c[H>>2]|0)|0;k=qD(c[q>>2]|0,c[q+4>>2]|0,k|0,((k|0)<0)<<31>>31|0)|0;q=x()|0;if((k|0)==0&(q|0)==0){k=s;break b}if(!((k|0)==(m|0)&(q|0)==(y|0)|w^1)){k=s;break b}do if(u)if(t){c[A>>2]=r;break}else{c[A>>2]=h;break}while(0);if(w){k=s;l=n}else{if(r|0)c[r+(p<<2)>>2]=0;if(!h){k=s;l=n;h=0;break f}a[h+p>>0]=0;k=s;l=n}break}case 120:case 88:case 112:{m=16;O=131;break}case 111:{m=8;O=131;break}case 117:case 100:{m=10;O=131;break}case 105:{m=0;O=131;break}case 71:case 103:case 70:case 102:case 69:case 101:case 65:case 97:{o=+Wd(e,t,0);y=K;u=c[y>>2]|0;y=c[y+4>>2]|0;w=(c[I>>2]|0)-(c[H>>2]|0)|0;w=rD(0,0,w|0,((w|0)<0)<<31>>31|0)|0;if((u|0)==(w|0)&(y|0)==(x()|0))break b;if(!A)l=q;else switch(t|0){case 0:{f[A>>2]=o;l=q;break f}case 1:{g[A>>3]=o;l=q;break f}case 2:{g[A>>3]=o;l=q;break f}default:{l=q;break f}}break}default:l=q}while(0);do if((O|0)==131){O=0;m=bd(e,m,0,-1,-1)|0;n=x()|0;y=K;u=c[y>>2]|0;y=c[y+4>>2]|0;w=(c[I>>2]|0)-(c[H>>2]|0)|0;w=rD(0,0,w|0,((w|0)<0)<<31>>31|0)|0;if((u|0)==(w|0)&(y|0)==(x()|0))break b;if((A|0)!=0&(s|0)==112){c[A>>2]=m;l=q;break}else{Ne(A,t,m,n);l=q;break}}while(0);r=K;n=(c[I>>2]|0)-(c[H>>2]|0)|0;r=qD(c[r>>2]|0,c[r+4>>2]|0,z|0,v|0)|0;n=qD(r|0,x()|0,n|0,((n|0)<0)<<31>>31|0)|0;r=x()|0;j=j+((A|0)!=0&1)|0;break c}while(0);m=p+(n&1)|0;ad(e,0,0);l=c[I>>2]|0;if(l>>>0<(c[L>>2]|0)>>>0){c[I>>2]=l+1;l=d[l>>0]|0}else l=cd(e)|0;if((l|0)!=(d[m>>0]|0)){O=23;break b}n=qD(u|0,v|0,1,0)|0;r=x()|0;l=m}else{m=p;while(1){l=m+1|0;if(!(dd(d[l>>0]|0)|0))break;else m=l}ad(e,0,0);do{l=c[I>>2]|0;if(l>>>0<(c[L>>2]|0)>>>0){c[I>>2]=l+1;l=d[l>>0]|0}else l=cd(e)|0}while((dd(l)|0)!=0);if(!(c[L>>2]|0))l=c[I>>2]|0;else{l=(c[I>>2]|0)+-1|0;c[I>>2]=l}r=K;n=l-(c[H>>2]|0)|0;r=qD(c[r>>2]|0,c[r+4>>2]|0,u|0,v|0)|0;n=qD(r|0,x()|0,n|0,((n|0)<0)<<31>>31|0)|0;r=x()|0;l=m}while(0);p=l+1|0;l=a[p>>0]|0;if(!(l<<24>>24))break a;else{u=n;v=r}}if((O|0)==23){if(c[L>>2]|0)c[I>>2]=(c[I>>2]|0)+-1;if((j|0)!=0|(l|0)>-1)break;else{j=k;l=0;O=144}}else if((O|0)==143)if(!j){j=k;O=144}if((O|0)==144){k=j;j=-1}if(l){jD(h);jD(k)}}else j=0;while(0);if(P|0)wd(e);ja=Q;return j|0}function Me(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;e=ja;ja=ja+16|0;d=e;c[d>>2]=c[a>>2];while(1){f=(c[d>>2]|0)+(4-1)&~(4-1);a=c[f>>2]|0;c[d>>2]=f+4;if(b>>>0>1)b=b+-1|0;else break}ja=e;return a|0}function Ne(d,e,f,g){d=d|0;e=e|0;f=f|0;g=g|0;a:do if(d|0)switch(e|0){case -2:{a[d>>0]=f;break a}case -1:{b[d>>1]=f;break a}case 0:{c[d>>2]=f;break a}case 1:{c[d>>2]=f;break a}case 3:{e=d;c[e>>2]=f;c[e+4>>2]=g;break a}default:break a}while(0);return}function Oe(a){a=a|0;if(!a)a=1;else a=(c[a>>2]|0)==0&1;return a|0}function Pe(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=a+84|0;g=c[e>>2]|0;h=d+256|0;f=Dd(g,0,h)|0;f=(f|0)==0?h:f-g|0;d=f>>>0<d>>>0?f:d;yD(b|0,g|0,d|0)|0;c[a+4>>2]=g+d;b=g+f|0;c[a+8>>2]=b;c[e>>2]=b;return d|0}function Qe(a,b,c){a=a|0;b=b|0;c=c|0;return oe(0,a,b,(c|0)==0?107288:c)|0}function Re(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=ja;ja=ja+1040|0;k=n;l=n+1024|0;j=c[b>>2]|0;c[l>>2]=j;m=(a|0)!=0;h=m?e:256;g=m?a:k;e=j;a:do if((h|0)!=0&(j|0)!=0){a=e;e=0;j=h;while(1){i=d>>>2;h=i>>>0>=j>>>0;if(!(d>>>0>131|h)){h=j;break a}a=h?j:i;d=d-a|0;a=Se(g,l,a,f)|0;if((a|0)==-1)break;i=(g|0)==(k|0);h=j-(i?0:a)|0;g=i?g:g+(a<<2)|0;e=a+e|0;a=c[l>>2]|0;if((h|0)!=0&(a|0)!=0)j=h;else break a}a=c[l>>2]|0;e=-1;h=0}else{a=e;e=0}while(0);b:do if((a|0)!=0?(h|0)!=0&(d|0)!=0:0){i=e;while(1){e=oe(g,a,d,f)|0;if((e+2|0)>>>0<3)break;a=(c[l>>2]|0)+e|0;c[l>>2]=a;d=d-e|0;h=h+-1|0;e=i+1|0;if(!((h|0)!=0&(d|0)!=0))break b;else{i=e;g=g+4|0}}switch(e|0){case -1:break b;case 0:{c[l>>2]=0;e=i;break b}default:{c[f>>2]=0;e=i;break b}}}while(0);if(m)c[b>>2]=c[l>>2];ja=n;return e|0}function Se(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=c[e>>2]|0;if((g|0)!=0?(i=c[g>>2]|0,(i|0)!=0):0)if(!b){j=h;g=f;l=26}else{c[g>>2]=0;k=h;g=f;l=48}else l=5;a:do if((l|0)==5){i=(b|0)!=0;if(c[c[(Te()|0)+188>>2]>>2]|0)if(i){g=f;l=33;break}else{i=f;l=15;break}if(!i){f=he(h)|0;l=63;break}b:do if(f){i=f;while(1){g=a[h>>0]|0;if(!(g<<24>>24))break;h=h+1|0;c[b>>2]=g<<24>>24&57343;i=i+-1|0;if(!i)break b;else b=b+4|0}c[b>>2]=0;c[e>>2]=0;f=f-i|0;l=63;break a}while(0);c[e>>2]=h;l=63}while(0);c:while(1){d:do if((l|0)==15){g=i;while(1){i=a[h>>0]|0;if(((i&255)+-1|0)>>>0<127?(h&3|0)==0:0){l=c[h>>2]|0;i=l&255;if(!((l+-16843009|l)&-2139062144)){do{h=h+4|0;g=g+-4|0;i=c[h>>2]|0}while(!((i+-16843009|i)&-2139062144|0));i=i&255}}i=i&255;if((i+-1|0)>>>0>=127)break;h=h+1|0;g=g+-1|0}i=i+-194|0;if(i>>>0>50){i=b;l=57}else{i=c[12464+(i<<2)>>2]|0;j=h+1|0;l=26;continue c}}else if((l|0)==26){l=(d[j>>0]|0)>>>3;if((l+-16|l+(i>>26))>>>0>7)l=56;else{h=j+1|0;if(i&33554432){if((a[h>>0]&-64)<<24>>24!=-128){l=56;break}h=j+2|0;if(i&524288){if((a[h>>0]&-64)<<24>>24!=-128){l=56;break}h=j+3|0}}i=g+-1|0;l=15;continue c}}else if((l|0)==33){l=0;e:do if(g){while(1){i=d[h>>0]|0;j=i+-1|0;if(j>>>0<127){if((h&3|0)==0&g>>>0>4){while(1){i=c[h>>2]|0;if((i+-16843009|i)&-2139062144|0){l=42;break}c[b>>2]=i&255;c[b+4>>2]=d[h+1>>0];c[b+8>>2]=d[h+2>>0];i=h+4|0;j=b+16|0;c[b+12>>2]=d[h+3>>0];g=g+-4|0;if(g>>>0>4){h=i;b=j}else{l=41;break}}if((l|0)==41){k=a[i>>0]|0;h=i;b=j}else if((l|0)==42)k=i&255;j=k&255;i=j;j=j+-1|0;l=44}}else l=44;if((l|0)==44){l=0;if(j>>>0>=127)break}h=h+1|0;c[b>>2]=i;g=g+-1|0;if(!g)break e;else b=b+4|0}i=i+-194|0;if(i>>>0>50){i=b;l=57;break d}i=c[12464+(i<<2)>>2]|0;k=h+1|0;l=48;continue c}while(0);c[e>>2]=h;l=63;continue c}else if((l|0)==48){l=0;j=d[k>>0]|0;h=j>>>3;if((h+-16|h+(i>>26))>>>0>7){j=k;l=56}else{h=k+1|0;i=j+-128|i<<6;do if((i|0)<0){j=(d[h>>0]|0)+-128|0;if(j>>>0<=63){h=k+2|0;i=j|i<<6;if((i|0)>=0)break;h=(d[h>>0]|0)+-128|0;if(h>>>0<=63){i=h|i<<6;h=k+3|0;break}}c[(Uc()|0)>>2]=25;h=k+-1|0;break d}while(0);c[b>>2]=i;g=g+-1|0;b=b+4|0;l=33;continue c}}else if((l|0)==63)return f|0;while(0);if((l|0)==56){h=j+-1|0;if(!i){i=b;l=57}else{f=b;l=61}}if((l|0)==57)if(!(a[h>>0]|0)){if(i|0){c[i>>2]=0;c[e>>2]=0}f=f-g|0;l=63;continue}else{f=i;l=61}if((l|0)==61){c[(Uc()|0)>>2]=25;if(!f){f=-1;l=63;continue}}c[e>>2]=h;f=-1;l=63}return 0}function Te(){return Id()|0}function Ue(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=ja;ja=ja+272|0;i=l;k=l+256|0;m=c[b>>2]|0;c[k>>2]=m;j=(a|0)!=0;h=j?e:256;g=j?a:i;f=m;a:do if((h|0)!=0&(m|0)!=0){e=f;f=0;while(1){a=d>>>0>=h>>>0;if(!(a|d>>>0>32))break a;e=a?h:d;d=d-e|0;e=Ve(g,k,e,0)|0;if((e|0)==-1)break;m=(g|0)==(i|0);h=h-(m?0:e)|0;g=m?g:g+e|0;f=e+f|0;e=c[k>>2]|0;if(!((h|0)!=0&(e|0)!=0))break a}e=c[k>>2]|0;f=-1;h=0}else{e=f;f=0}while(0);b:do if((e|0)!=0?(h|0)!=0&(d|0)!=0:0){while(1){a=Gd(g,c[e>>2]|0,0)|0;if((a+1|0)>>>0<2)break;e=(c[k>>2]|0)+4|0;c[k>>2]=e;d=d+-1|0;h=h-a|0;f=a+f|0;if(!((h|0)!=0&(d|0)!=0))break b;else g=g+a|0}if(!a)c[k>>2]=0;else f=-1}while(0);if(j)c[b>>2]=c[k>>2];ja=l;return f|0}function Ve(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;j=ja;ja=ja+16|0;i=j;a:do if(!b){f=c[d>>2]|0;e=c[f>>2]|0;if(!e)e=0;else{g=e;e=0;b=f;do{if(g>>>0>127){f=Gd(i,g,0)|0;if((f|0)==-1){e=-1;break a}}else f=1;e=f+e|0;b=b+4|0;g=c[b>>2]|0}while((g|0)!=0)}}else{b:do if(e>>>0>3){h=c[d>>2]|0;g=e;while(1){f=c[h>>2]|0;if((f+-1|0)>>>0>126){if(!f)break;f=Gd(b,f,0)|0;if((f|0)==-1){e=-1;break a}g=g-f|0;f=b+f|0}else{a[b>>0]=f;h=c[d>>2]|0;g=g+-1|0;f=b+1|0}h=h+4|0;c[d>>2]=h;if(g>>>0<=3)break b;else b=f}a[b>>0]=0;c[d>>2]=0;e=e-g|0;break a}else{g=e;f=b}while(0);if(g){b=c[d>>2]|0;h=f;while(1){f=c[b>>2]|0;if((f+-1|0)>>>0>126){if(!f){f=20;break}f=Gd(i,f,0)|0;if((f|0)==-1){e=-1;break a}if(g>>>0<f>>>0){f=23;break}Gd(h,c[b>>2]|0,0)|0;g=g-f|0;f=h+f|0}else{a[h>>0]=f;b=c[d>>2]|0;g=g+-1|0;f=h+1|0}b=b+4|0;c[d>>2]=b;if(!g)break a;else h=f}if((f|0)==20){a[h>>0]=0;c[d>>2]=0;e=e-g|0;break}else if((f|0)==23){e=e-g|0;break}}}while(0);ja=j;return e|0}function We(a){a=a|0;var b=0,e=0,f=0;if((c[a+76>>2]|0)>=0?(vd(a)|0)!=0:0){e=a+4|0;b=c[e>>2]|0;if(b>>>0<(c[a+8>>2]|0)>>>0){c[e>>2]=b+1;b=d[b>>0]|0}else b=ed(a)|0}else f=3;do if((f|0)==3){e=a+4|0;b=c[e>>2]|0;if(b>>>0<(c[a+8>>2]|0)>>>0){c[e>>2]=b+1;b=d[b>>0]|0;break}else{b=ed(a)|0;break}}while(0);return b|0}function Xe(a,b){a=a|0;b=b|0;ve(a+(he(a)|0)|0,b)|0;return a|0}function Ye(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;h=ja;ja=ja+16|0;f=h;c[f>>2]=c[d>>2];f=pd(0,0,b,f)|0;if((f|0)>=0?(e=f+1|0,g=iD(e)|0,c[a>>2]=g,(g|0)!=0):0)e=pd(g,e,b,d)|0;else e=-1;ja=h;return e|0}function Ze(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;do if((b|0)!=-1){if((c[d+76>>2]|0)>-1)g=vd(d)|0;else g=0;h=d+4|0;e=c[h>>2]|0;if(!e){fd(d)|0;e=c[h>>2]|0;if(e|0){f=e;i=6}}else{f=e;i=6}if((i|0)==6?f>>>0>((c[d+44>>2]|0)+-8|0)>>>0:0){i=f+-1|0;c[h>>2]=i;a[i>>0]=b;c[d>>2]=c[d>>2]&-17;if(!g)break;wd(d);break}if(g){wd(d);b=-1}else b=-1}else b=-1;while(0);return b|0}function _e(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;if((c[d+76>>2]|0)>=0?(vd(d)|0)!=0:0){f=b&255;e=b&255;if((e|0)!=(a[d+75>>0]|0)?(j=d+20|0,h=c[j>>2]|0,h>>>0<(c[d+16>>2]|0)>>>0):0){c[j>>2]=h+1;a[h>>0]=f}else e=Be(d,b)|0;wd(d)}else k=3;do if((k|0)==3){f=b&255;e=b&255;if((e|0)!=(a[d+75>>0]|0)?(i=d+20|0,g=c[i>>2]|0,g>>>0<(c[d+16>>2]|0)>>>0):0){c[i>>2]=g+1;a[g>>0]=f;break}e=Be(d,b)|0}while(0);return e|0}function $e(a,b){a=a|0;b=b|0;return +(+af(a,b,1))}function af(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,g=0,h=0,i=0;g=ja;ja=ja+144|0;e=g;AD(e|0,0,144)|0;i=e+4|0;c[i>>2]=a;h=e+8|0;c[h>>2]=-1;c[e+44>>2]=a;c[e+76>>2]=-1;ad(e,0,0);f=+Wd(e,d,1);e=e+120|0;d=(c[i>>2]|0)-(c[h>>2]|0)|0;d=qD(c[e>>2]|0,c[e+4>>2]|0,d|0,((d|0)<0)<<31>>31|0)|0;e=x()|0;if(b|0)c[b>>2]=(d|0)==0&(e|0)==0?a:a+d|0;ja=g;return +f}function bf(a,b){a=a|0;b=b|0;return +(+af(a,b,0))}function cf(a,b){a=a|0;b=b|0;return +(+af(a,b,2))}function df(a,b,c){a=a|0;b=b|0;c=c|0;return +(+bf(a,b))}function ef(a,b,c){a=a|0;b=b|0;c=c|0;return +(+$e(a,b))}function ff(a,b,c){a=a|0;b=b|0;c=c|0;return +(+cf(a,b))}function gf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;if(d|0){e=a;while(1){d=d+-1|0;c[e>>2]=b;if(!d)break;else e=e+4|0}}return a|0}function hf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;if(a-b>>2>>>0>=d>>>0){if(d|0){e=a;while(1){d=d+-1|0;c[e>>2]=c[b>>2];if(!d)break;else{e=e+4|0;b=b+4|0}}}}else do{d=d+-1|0;c[a+(d<<2)>>2]=c[b+(d<<2)>>2]}while((d|0)!=0);return a|0}function jf(){var a=0,b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;f=ja;ja=ja+1072|0;j=f+1056|0;b=f+1048|0;k=f+1040|0;i=f+1024|0;h=f+1068|0;g=f+1064|0;e=f;f=f+1060|0;a=kf()|0;if(a|0?(d=c[a>>2]|0,d|0):0){a=d+48|0;if(!(lf(a)|0)){c[b>>2]=28854;of(28804,b)}b=mf(a)|0;if((b|0)==1126902529&(x()|0)==1129074247)a=c[d+44>>2]|0;else a=d+80|0;c[h>>2]=a;d=c[d>>2]|0;c[f>>2]=1024;b=d+4|0;a=nf(c[b>>2]|0,e,f,g)|0;if(c[g>>2]|0)a=c[b>>2]|0;if(pa[c[(c[4618]|0)+16>>2]&31](18472,d,h)|0){k=c[h>>2]|0;k=ma[c[(c[k>>2]|0)+8>>2]&127](k)|0;c[i>>2]=28854;c[i+4>>2]=a;c[i+8>>2]=k;of(28718,i)}else{c[k>>2]=28854;c[k+4>>2]=a;of(28763,k)}}of(28842,j)}function kf(){return 107292}function lf(a){a=a|0;return 0}function mf(a){a=a|0;w(0);return 0}function nf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;i=ja;ja=ja+4496|0;h=i;f=i+4472|0;if((a|0)!=0?(g=(d|0)==0,!((b|0)!=0&g)):0){If(h,a,a+(he(a)|0)|0);Jf(f);a=Kf(h)|0;if(a)if(Lf(b,d,f)|0){Mf(a,f);Nf(f,0);if(!g)c[d>>2]=Of(f)|0;b=Pf(f)|0;a=0}else a=-1;else a=-2;if(e|0)c[e>>2]=a;Qf(h);b=(a|0)==0?b:0}else if(!e)b=0;else{c[e>>2]=-3;b=0}ja=i;return b|0}function of(a,b){a=a|0;b=b|0;var d=0;d=ja;ja=ja+16|0;c[d>>2]=b;b=c[5350]|0;qd(b,a,d)|0;_e(10,b)|0;S()}function pf(a){a=a|0;return}function qf(a){a=a|0;pf(a);Gf(a);return}function rf(a){a=a|0;return}function sf(a){a=a|0;return}function tf(d,e,f){d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;l=ja;ja=ja+64|0;k=l;if(!(xf(d,e,0)|0))if((e|0)!=0?(j=Bf(e,18496,18480,0)|0,(j|0)!=0):0){c[k>>2]=j;c[k+4>>2]=0;c[k+8>>2]=d;c[k+12>>2]=-1;d=k+16|0;g=k+24|0;e=k+48|0;h=d;i=h+36|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(i|0));b[d+36>>1]=0;a[d+38>>0]=0;c[e>>2]=1;Ba[c[(c[j>>2]|0)+28>>2]&15](j,k,c[f>>2]|0,1);if((c[g>>2]|0)==1){c[f>>2]=c[d>>2];d=1}else d=0}else d=0;else d=1;ja=l;return d|0}function uf(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;if(xf(a,c[b+8>>2]|0,g)|0)Af(0,b,d,e,f);return}function vf(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;do if(!(xf(b,c[d+8>>2]|0,g)|0)){if(xf(b,c[d>>2]|0,g)|0){if((c[d+16>>2]|0)!=(e|0)?(h=d+20|0,(c[h>>2]|0)!=(e|0)):0){c[d+32>>2]=f;c[h>>2]=e;g=d+40|0;c[g>>2]=(c[g>>2]|0)+1;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==2:0)a[d+54>>0]=1;c[d+44>>2]=4;break}if((f|0)==1)c[d+32>>2]=1}}else zf(0,d,e,f);while(0);return}function wf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;if(xf(a,c[b+8>>2]|0,0)|0)yf(0,b,d,e);return}function xf(a,b,d){a=a|0;b=b|0;d=d|0;if(d)d=(kd(c[a+4>>2]|0,c[b+4>>2]|0)|0)==0;else d=(a|0)==(b|0);return d|0}function yf(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0;g=d+16|0;b=c[g>>2]|0;do if(b){if((b|0)!=(e|0)){f=d+36|0;c[f>>2]=(c[f>>2]|0)+1;c[d+24>>2]=2;a[d+54>>0]=1;break}b=d+24|0;if((c[b>>2]|0)==2)c[b>>2]=f}else{c[g>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1}while(0);return}function zf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;if((c[b+4>>2]|0)==(d|0)?(f=b+28|0,(c[f>>2]|0)!=1):0)c[f>>2]=e;return}function Af(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;a[d+53>>0]=1;do if((c[d+4>>2]|0)==(f|0)){a[d+52>>0]=1;b=d+16|0;f=c[b>>2]|0;if(!f){c[b>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((g|0)==1?(c[d+48>>2]|0)==1:0))break;a[d+54>>0]=1;break}if((f|0)!=(e|0)){g=d+36|0;c[g>>2]=(c[g>>2]|0)+1;a[d+54>>0]=1;break}b=d+24|0;f=c[b>>2]|0;if((f|0)==2){c[b>>2]=g;f=g}if((f|0)==1?(c[d+48>>2]|0)==1:0)a[d+54>>0]=1}while(0);return}function Bf(d,e,f,g){d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;p=ja;ja=ja+64|0;o=p;m=c[d>>2]|0;n=d+(c[m+-8>>2]|0)|0;m=c[m+-4>>2]|0;c[o>>2]=f;c[o+4>>2]=d;c[o+8>>2]=e;c[o+12>>2]=g;g=o+16|0;d=o+20|0;h=o+24|0;j=o+28|0;i=o+32|0;e=o+40|0;k=g;l=k+36|0;do{c[k>>2]=0;k=k+4|0}while((k|0)<(l|0));b[g+36>>1]=0;a[g+38>>0]=0;a:do if(xf(m,f,0)|0){c[o+48>>2]=1;Da[c[(c[m>>2]|0)+20>>2]&15](m,o,n,n,1,0);g=(c[h>>2]|0)==1?n:0}else{Ca[c[(c[m>>2]|0)+24>>2]&3](m,o,n,1,0);switch(c[o+36>>2]|0){case 0:{g=(c[e>>2]|0)==1&(c[j>>2]|0)==1&(c[i>>2]|0)==1?c[d>>2]|0:0;break a}case 1:break;default:{g=0;break a}}if((c[h>>2]|0)!=1?!((c[e>>2]|0)==0&(c[j>>2]|0)==1&(c[i>>2]|0)==1):0){g=0;break}g=c[g>>2]|0}while(0);ja=p;return g|0}function Cf(a){a=a|0;pf(a);Gf(a);return}function Df(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;if(xf(a,c[b+8>>2]|0,g)|0)Af(0,b,d,e,f);else{a=c[a+8>>2]|0;Da[c[(c[a>>2]|0)+20>>2]&15](a,b,d,e,f,g)}return}function Ef(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;a:do if(!(xf(b,c[d+8>>2]|0,g)|0)){if(!(xf(b,c[d>>2]|0,g)|0)){b=c[b+8>>2]|0;Ca[c[(c[b>>2]|0)+24>>2]&3](b,d,e,f,g);break}if((c[d+16>>2]|0)!=(e|0)?(i=d+20|0,(c[i>>2]|0)!=(e|0)):0){c[d+32>>2]=f;h=d+44|0;do if((c[h>>2]|0)!=4){f=d+52|0;a[f>>0]=0;j=d+53|0;a[j>>0]=0;b=c[b+8>>2]|0;Da[c[(c[b>>2]|0)+20>>2]&15](b,d,e,e,1,g);if(a[j>>0]|0){j=(a[f>>0]|0)==0;c[h>>2]=3;if(j)break;else break a}else{c[h>>2]=4;break}}while(0);c[i>>2]=e;j=d+40|0;c[j>>2]=(c[j>>2]|0)+1;if((c[d+36>>2]|0)!=1)break;if((c[d+24>>2]|0)!=2)break;a[d+54>>0]=1;break}if((f|0)==1)c[d+32>>2]=1}else zf(0,d,e,f);while(0);return}function Ff(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;if(xf(a,c[b+8>>2]|0,0)|0)yf(0,b,d,e);else{a=c[a+8>>2]|0;Ba[c[(c[a>>2]|0)+28>>2]&15](a,b,d,e)}return}function Gf(a){a=a|0;jD(a);return}function Hf(a){a=a|0;return}function If(a,b,c){a=a|0;b=b|0;c=c|0;mr(a,b,c);return}function Jf(a){a=a|0;c[a+12>>2]=-1;c[a+16>>2]=-1;return}\nfunction Kf(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;g=ja;ja=ja+48|0;e=g+32|0;h=g+24|0;f=g;b=g+16|0;d=g+8|0;dg(h,29033);c[e>>2]=c[h>>2];c[e+4>>2]=c[h+4>>2];do if(eg(a,e)|0){b=gg(fg(a)|0)|0;c[e>>2]=b;if(!b)b=0;else{if((hg(a,0)|0)<<24>>24==46){h=a+4|0;ig(f,c[a>>2]|0,c[h>>2]|0);b=jg(a,e,f)|0;c[e>>2]=b;c[a>>2]=c[h>>2]}h=(kg(a)|0)==0;b=h?b:0}}else{dg(b,29036);c[e>>2]=c[b>>2];c[e+4>>2]=c[b+4>>2];if(!(eg(a,e)|0)){b=pg(fg(a)|0)|0;h=(kg(a)|0)==0;b=h?b:0;break}h=gg(fg(a)|0)|0;c[f>>2]=h;if(((h|0)!=0?(dg(d,29041),c[e>>2]=c[d>>2],c[e+4>>2]=c[d+4>>2],eg(a,e)|0):0)?(h=lg(a,95)|0,mg(e,a,0),!(h&(ng(e)|0))):0){if((hg(a,0)|0)<<24>>24==46)c[a>>2]=c[a+4>>2];if(!(kg(a)|0))b=og(a,29055,f)|0;else b=0}else b=0}while(0);ja=g;return b|0}function Lf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;if(!a){a=iD(1024)|0;if(!a)a=0;else{b=1024;e=4}}else{b=c[b>>2]|0;e=4}if((e|0)==4){cg(d,a,b);a=1}return a|0}function Mf(b,d){b=b|0;d=d|0;za[c[(c[b>>2]|0)+16>>2]&127](b,d);if((a[b+5>>0]|0)!=1)za[c[(c[b>>2]|0)+20>>2]&127](b,d);return}function Nf(b,d){b=b|0;d=d|0;var e=0,f=0;_f(b,1);e=c[b>>2]|0;f=b+4|0;b=c[f>>2]|0;c[f>>2]=b+1;a[e+b>>0]=d;return}function Of(a){a=a|0;return c[a+4>>2]|0}function Pf(a){a=a|0;return c[a>>2]|0}function Qf(a){a=a|0;Rf(a+368|0);Sf(a+332|0);Tf(a+288|0);Uf(a+148|0);Uf(a+8|0);return}function Rf(a){a=a|0;Yf(a);return}function Sf(a){a=a|0;if(!(Xf(a)|0))jD(c[a>>2]|0);return}function Tf(a){a=a|0;if(!(Wf(a)|0))jD(c[a>>2]|0);return}function Uf(a){a=a|0;if(!(Vf(a)|0))jD(c[a>>2]|0);return}function Vf(a){a=a|0;return (c[a>>2]|0)==(a+12|0)|0}function Wf(a){a=a|0;return (c[a>>2]|0)==(a+12|0)|0}function Xf(a){a=a|0;return (c[a>>2]|0)==(a+12|0)|0}function Yf(a){a=a|0;Zf(a);return}function Zf(a){a=a|0;var b=0,d=0;d=a+4096|0;while(1){b=c[d>>2]|0;if(!b)break;c[d>>2]=c[b>>2];if((a|0)!=(b|0))jD(b)}c[a>>2]=0;c[a+4>>2]=0;c[d>>2]=a;return}function _f(a,b){a=a|0;b=b|0;var d=0,e=0;e=(c[a+4>>2]|0)+b|0;d=a+8|0;b=c[d>>2]|0;if(e>>>0>=b>>>0?(b=b<<1,e=b>>>0<e>>>0?e:b,c[d>>2]=e,e=kD(c[a>>2]|0,e)|0,c[a>>2]=e,(e|0)==0):0)$f();return}function $f(){var a=0,b=0;b=kf()|0;if((b|0?(a=c[b>>2]|0,a|0):0)?lf(a+48|0)|0:0)ag(c[a+12>>2]|0);ag(bg()|0)}function ag(a){a=a|0;var b=0;b=ja;ja=ja+16|0;xa[a&3]();of(28993,b)}function bg(){return 2}function cg(a,b,d){a=a|0;b=b|0;d=d|0;c[a+4>>2]=0;c[a>>2]=b;c[a+8>>2]=d;return}function dg(a,b){a=a|0;b=b|0;c[a>>2]=b;c[a+4>>2]=b+(he(b)|0);return}function eg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;d=ja;ja=ja+32|0;e=d+16|0;f=d+8|0;g=d;ig(f,c[a>>2]|0,c[a+4>>2]|0);j=b;i=c[j+4>>2]|0;h=g;c[h>>2]=c[j>>2];c[h+4>>2]=i;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];if(xl(f,e)|0){b=th(b)|0;c[a>>2]=(c[a>>2]|0)+b;b=1}else b=0;ja=d;return b|0}function fg(a){a=a|0;return a|0}function gg(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=ja;ja=ja+64|0;k=n+48|0;h=n+40|0;j=n+24|0;i=n+20|0;g=n+16|0;e=n+8|0;m=n;switch((hg(b,0)|0)<<24>>24){case 84:case 71:{d=uq(fg(b)|0)|0;break}default:{c[h>>2]=b;vq(j,b);l=fg(b)|0;d=xn(l,j)|0;c[i>>2]=d;if((d|0)!=0?!(wq(b,j)|0):0){if(!(xq(h)|0)){c[g>>2]=0;dg(e,34402);c[k>>2]=c[e>>2];c[k+4>>2]=c[e+4>>2];do if(eg(b,k)|0){d=b+8|0;e=Xg(d)|0;while(1){if(lg(b,69)|0){f=11;break}f=li(l)|0;c[k>>2]=f;if(!f){f=12;break}Wg(d,k)}if((f|0)==11){qi(k,b,e);c[g>>2]=yq(b,k)|0;f=13;break}else if((f|0)==12){d=0;break}}else f=13;while(0);if((f|0)==13){c[k>>2]=0;if(((a[j>>0]|0)==0?(a[j+1>>0]|0)!=0:0)?(e=pg(l)|0,c[k>>2]=e,(e|0)==0):0)d=0;else f=16;do if((f|0)==16){if(lg(b,118)|0){_k(m);d=zq(b,k,i,m,g,j+4|0,j+8|0)|0;break}d=b+8|0;e=Xg(d)|0;while(1){f=pg(l)|0;c[m>>2]=f;if(!f){f=21;break}Wg(d,m);if(xq(h)|0){f=22;break}}if((f|0)==21){d=0;break}else if((f|0)==22){qi(m,b,e);d=zq(b,k,i,m,g,j+4|0,j+8|0)|0;break}}while(0)}}}else d=0}}ja=n;return d|0}function hg(b,d){b=b|0;d=d|0;var e=0;e=c[b>>2]|0;if(((c[b+4>>2]|0)-e|0)>>>0>d>>>0)e=a[e+d>>0]|0;else e=0;return e|0}function ig(a,b,d){a=a|0;b=b|0;d=d|0;c[a>>2]=b;c[a+4>>2]=d;return}function jg(a,b,c){a=a|0;b=b|0;c=c|0;return qq(a+368|0,b,c)|0}function kg(a){a=a|0;return (c[a+4>>2]|0)-(c[a>>2]|0)|0}function lg(b,d){b=b|0;d=d|0;var e=0;e=c[b>>2]|0;if((e|0)!=(c[b+4>>2]|0)?(a[e>>0]|0)==d<<24>>24:0){c[b>>2]=e+1;e=1}else e=0;return e|0}function mg(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;g=c[d>>2]|0;if(e)lg(d,110)|0;if((kg(d)|0)!=0?(f=c[d>>2]|0,((a[f>>0]|0)+-48|0)>>>0<10):0){while(1){if(!(kg(d)|0))break;if(((a[f>>0]|0)+-48|0)>>>0>=10)break;e=f+1|0;c[d>>2]=e;f=e}ig(b,g,f)}else rh(b);return}function ng(a){a=a|0;return (c[a>>2]|0)==(c[a+4>>2]|0)|0}function og(a,b,c){a=a|0;b=b|0;c=c|0;return mq(a+368|0,b,c)|0}function pg(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;j=ja;ja=ja+32|0;h=j+16|0;g=j+8|0;f=j;c[h>>2]=0;d=hg(b,0)|0;a:do switch(d<<24>>24|0){case 75:case 86:case 114:{i=d<<24>>24==114;d=i&1;g=(hg(b,d)|0)<<24>>24==86;d=g?(i?2:1):d;d=d+((hg(b,d)|0)<<24>>24==75&1)|0;switch((hg(b,d)|0)<<24>>24){case 70:break;case 68:{switch((hg(b,d+1|0)|0)<<24>>24){case 120:case 119:case 79:case 111:break;default:{i=5;break a}}break}default:{i=5;break a}}d=qg(fg(b)|0)|0;c[h>>2]=d;i=81;break}case 85:{i=5;break}case 118:{c[b>>2]=(c[b>>2]|0)+1;d=sg(b,29089)|0;break}case 119:{c[b>>2]=(c[b>>2]|0)+1;d=tg(b)|0;break}case 98:{c[b>>2]=(c[b>>2]|0)+1;d=sg(b,29094)|0;break}case 99:{c[b>>2]=(c[b>>2]|0)+1;d=sg(b,29099)|0;break}case 97:{c[b>>2]=(c[b>>2]|0)+1;d=ug(b,29104)|0;break}case 104:{c[b>>2]=(c[b>>2]|0)+1;d=vg(b,29116)|0;break}case 115:{c[b>>2]=(c[b>>2]|0)+1;d=wg(b,29130)|0;break}case 116:{c[b>>2]=(c[b>>2]|0)+1;d=xg(b,29136)|0;break}case 105:{c[b>>2]=(c[b>>2]|0)+1;d=yg(b,29151)|0;break}case 106:{c[b>>2]=(c[b>>2]|0)+1;d=zg(b,29155)|0;break}case 108:{c[b>>2]=(c[b>>2]|0)+1;d=sg(b,29168)|0;break}case 109:{c[b>>2]=(c[b>>2]|0)+1;d=vg(b,29173)|0;break}case 120:{c[b>>2]=(c[b>>2]|0)+1;d=Ag(b,29187)|0;break}case 121:{c[b>>2]=(c[b>>2]|0)+1;d=Bg(b)|0;break}case 110:{c[b>>2]=(c[b>>2]|0)+1;d=Cg(b,29197)|0;break}case 111:{c[b>>2]=(c[b>>2]|0)+1;d=Dg(b,29206)|0;break}case 102:{c[b>>2]=(c[b>>2]|0)+1;d=wg(b,29224)|0;break}case 100:{c[b>>2]=(c[b>>2]|0)+1;d=Eg(b)|0;break}case 101:{c[b>>2]=(c[b>>2]|0)+1;d=ug(b,29230)|0;break}case 103:{c[b>>2]=(c[b>>2]|0)+1;d=Fg(b,29242)|0;break}case 122:{c[b>>2]=(c[b>>2]|0)+1;d=yg(b,29253)|0;break}case 117:{c[b>>2]=(c[b>>2]|0)+1;Gg(g,b);if(ng(g)|0)d=0;else d=Hg(b,g)|0;break}case 68:do switch((hg(b,1)|0)<<24>>24|0){case 100:{c[b>>2]=(c[b>>2]|0)+2;d=Ag(b,29257)|0;break a}case 101:{c[b>>2]=(c[b>>2]|0)+2;d=Fg(b,29267)|0;break a}case 102:{c[b>>2]=(c[b>>2]|0)+2;d=Ag(b,29278)|0;break a}case 104:{c[b>>2]=(c[b>>2]|0)+2;d=Ag(b,29288)|0;break a}case 105:{c[b>>2]=(c[b>>2]|0)+2;d=Cg(b,29298)|0;break a}case 115:{c[b>>2]=(c[b>>2]|0)+2;d=Cg(b,29307)|0;break a}case 97:{c[b>>2]=(c[b>>2]|0)+2;d=sg(b,29316)|0;break a}case 99:{c[b>>2]=(c[b>>2]|0)+2;d=xg(b,29321)|0;break a}case 110:{c[b>>2]=(c[b>>2]|0)+2;d=xg(b,29336)|0;break a}case 84:case 116:{d=Ig(fg(b)|0)|0;c[h>>2]=d;i=81;break a}case 118:{d=Jg(fg(b)|0)|0;c[h>>2]=d;i=81;break a}case 112:{c[b>>2]=(c[b>>2]|0)+2;f=pg(fg(b)|0)|0;c[g>>2]=f;if(!f){d=0;break a}else{c[h>>2]=Kg(b,g)|0;i=82;break a}}case 120:case 119:case 79:case 111:{d=qg(fg(b)|0)|0;c[h>>2]=d;i=81;break a}default:{d=0;break a}}while(0);case 70:{d=qg(fg(b)|0)|0;c[h>>2]=d;i=81;break}case 65:{d=Lg(fg(b)|0)|0;c[h>>2]=d;i=81;break}case 77:{d=Mg(fg(b)|0)|0;c[h>>2]=d;i=81;break}case 84:{switch((hg(b,1)|0)<<24>>24){case 101:case 117:case 115:{d=Ng(fg(b)|0)|0;c[h>>2]=d;i=81;break a}default:{}}d=fg(b)|0;f=Og(d)|0;c[h>>2]=f;if(f)if((a[b+360>>0]|0)!=0?(hg(b,0)|0)<<24>>24==73:0){f=Pg(d,0)|0;c[g>>2]=f;if(!f){d=0;break a}else{c[h>>2]=Qg(b,h,g)|0;i=82;break a}}else i=82;else d=0;break}case 80:{c[b>>2]=(c[b>>2]|0)+1;f=pg(fg(b)|0)|0;c[g>>2]=f;if(!f){d=0;break a}else{c[h>>2]=Rg(b,g)|0;i=82;break a}}case 82:{c[b>>2]=(c[b>>2]|0)+1;e=pg(fg(b)|0)|0;c[g>>2]=e;if(!e){d=0;break a}else{c[f>>2]=0;c[h>>2]=Sg(b,g,f)|0;i=82;break a}}case 79:{c[b>>2]=(c[b>>2]|0)+1;e=pg(fg(b)|0)|0;c[g>>2]=e;if(!e){d=0;break a}else{c[f>>2]=1;c[h>>2]=Sg(b,g,f)|0;i=82;break a}}case 67:{c[b>>2]=(c[b>>2]|0)+1;f=pg(fg(b)|0)|0;c[g>>2]=f;if(!f){d=0;break a}else{c[h>>2]=Tg(b,g)|0;i=82;break a}}case 71:{c[b>>2]=(c[b>>2]|0)+1;f=pg(fg(b)|0)|0;c[g>>2]=f;if(!f){d=0;break a}else{c[h>>2]=Ug(b,g)|0;i=82;break a}}case 83:{switch((hg(b,1)|0)<<24>>24){case 116:case 0:{i=80;break a}default:{}}e=fg(b)|0;d=Vg(e)|0;c[g>>2]=d;if(d){if((a[b+360>>0]|0)!=0?(hg(b,0)|0)<<24>>24==73:0){e=Pg(e,0)|0;c[f>>2]=e;if(!e){d=0;break a}else{c[h>>2]=Qg(b,g,f)|0;i=82;break a}}}else d=0;break}default:i=80}while(0);if((i|0)==5){d=rg(fg(b)|0)|0;c[h>>2]=d;i=81}else if((i|0)==80){d=Ng(fg(b)|0)|0;c[h>>2]=d;i=81}if((i|0)==81)if(!d)d=0;else i=82;if((i|0)==82){Wg(b+148|0,h);d=c[h>>2]|0}ja=j;return d|0}function qg(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;o=ja;ja=ja+96|0;n=o+72|0;h=o+40|0;i=o+24|0;p=o+64|0;e=o+56|0;d=o+48|0;f=o+32|0;k=o;j=o+80|0;l=o+16|0;m=o+8|0;c[h>>2]=an(b)|0;c[i>>2]=0;dg(p,34103);c[n>>2]=c[p>>2];c[n+4>>2]=c[p+4>>2];do if(!(eg(b,n)|0)){dg(e,34115);c[n>>2]=c[e>>2];c[n+4>>2]=c[e+4>>2];if(eg(b,n)|0){p=_i(fg(b)|0)|0;c[n>>2]=p;if(!p){d=0;break}if(lg(b,69)|0){c[i>>2]=Wp(b,n)|0;g=14;break}else{d=0;break}}dg(d,34118);c[n>>2]=c[d>>2];c[n+4>>2]=c[d+4>>2];if(eg(b,n)|0){d=b+8|0;e=Xg(d)|0;while(1){if(lg(b,69)|0){g=12;break}p=pg(fg(b)|0)|0;c[n>>2]=p;if(!p){g=13;break}Wg(d,n)}if((g|0)==12){qi(n,b,e);c[i>>2]=Xp(b,n)|0;g=14;break}else if((g|0)==13){d=0;break}}else g=14}else{c[i>>2]=Cg(b,34106)|0;g=14}while(0);if((g|0)==14){dg(f,34121);c[n>>2]=c[f>>2];c[n+4>>2]=c[f+4>>2];eg(b,n)|0;if(lg(b,70)|0){lg(b,89)|0;e=fg(b)|0;p=pg(e)|0;c[k>>2]=p;if(!p)d=0;else{a[j>>0]=0;d=b+8|0;f=Xg(d)|0;while(1){if(lg(b,69)|0){g=27;break}if(!(lg(b,118)|0)){dg(l,34124);c[n>>2]=c[l>>2];c[n+4>>2]=c[l+4>>2];if(eg(b,n)|0){g=21;break}dg(m,34127);c[n>>2]=c[m>>2];c[n+4>>2]=c[m+4>>2];if(eg(b,n)|0){g=23;break}p=pg(e)|0;c[n>>2]=p;if(!p){g=26;break}Wg(d,n)}}if((g|0)==21){a[j>>0]=1;g=27}else if((g|0)==23){a[j>>0]=2;g=27}else if((g|0)==26)d=0;if((g|0)==27){qi(n,b,f);d=Yp(b,k,n,h,j,i)|0}}}else d=0}ja=o;return d|0}function rg(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;i=ja;ja=ja+64|0;h=i+48|0;g=i+40|0;f=i+32|0;b=i;d=i+20|0;e=i+8|0;if(lg(a,85)|0){Gg(g,a);do if(ng(g)|0)b=0;else{dg(f,33918);c[h>>2]=c[f>>2];c[h+4>>2]=c[f+4>>2];if(!(xl(g,h)|0)){f=rg(fg(a)|0)|0;c[h>>2]=f;if(!f)b=0;else b=Dp(a,h,g)|0;break}Kj(h,g,9);rh(b);Ap(d,a,uh(h)|0);Ap(e,a+4|0,di(h)|0);Gg(b,a);Bp(e);Bp(d);if(ng(b)|0)b=0;else{h=rg(fg(a)|0)|0;c[d>>2]=h;if(!h)b=0;else b=Cp(a,d,b)|0}}while(0)}else{d=an(a)|0;c[h>>2]=d;b=pg(fg(a)|0)|0;c[g>>2]=b;if(b){if(d){b=Ep(a,g,h)|0;c[g>>2]=b}}else b=0}ja=i;return b|0}function sg(a,b){a=a|0;b=b|0;return zp(a+368|0,b)|0}function tg(a){a=a|0;return yp(a+368|0,30039)|0}function ug(a,b){a=a|0;b=b|0;return xp(a+368|0,b)|0}function vg(a,b){a=a|0;b=b|0;return wp(a+368|0,b)|0}function wg(a,b){a=a|0;b=b|0;return vp(a+368|0,b)|0}function xg(a,b){a=a|0;b=b|0;return up(a+368|0,b)|0}function yg(a,b){a=a|0;b=b|0;return tp(a+368|0,b)|0}function zg(a,b){a=a|0;b=b|0;return sp(a+368|0,b)|0}function Ag(a,b){a=a|0;b=b|0;return rp(a+368|0,b)|0}function Bg(a){a=a|0;return qp(a+368|0,33899)|0}function Cg(a,b){a=a|0;b=b|0;return pp(a+368|0,b)|0}function Dg(a,b){a=a|0;b=b|0;return op(a+368|0,b)|0}function Eg(a){a=a|0;return np(a+368|0,33892)|0}function Fg(a,b){a=a|0;b=b|0;return mp(a+368|0,b)|0}function Gg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;g=ja;ja=ja+16|0;e=g+8|0;f=g;c[e>>2]=0;if(!(wl(b,e)|0)?(h=kg(b)|0,d=c[e>>2]|0,h>>>0>=d>>>0):0){h=c[b>>2]|0;ig(f,h,h+d|0);c[b>>2]=(c[b>>2]|0)+d;b=c[f+4>>2]|0;h=a;c[h>>2]=c[f>>2];c[h+4>>2]=b}else rh(a);ja=g;return}function Hg(a,b){a=a|0;b=b|0;return lp(a+368|0,b)|0}function Ig(a){a=a|0;var b=0,d=0,e=0;d=ja;ja=ja+16|0;b=d;do if(lg(a,68)|0){if(!(lg(a,116)|0)?!(lg(a,84)|0):0){b=0;break}e=_i(fg(a)|0)|0;c[b>>2]=e;if((e|0)!=0?lg(a,69)|0:0)b=Tj(a,33882,b)|0;else b=0}else b=0;while(0);ja=d;return b|0}function Jg(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;f=ja;ja=ja+32|0;d=f+16|0;e=f+8|0;b=f;dg(e,33757);c[d>>2]=c[e>>2];c[d+4>>2]=c[e+4>>2];do if(eg(a,d)|0){if(((hg(a,0)|0)+-49&255)<9){mg(d,a,0);do if(lg(a,95)|0){if(lg(a,112)|0){b=Zo(a,d)|0;break}e=pg(fg(a)|0)|0;c[b>>2]=e;if(!e)b=0;else b=_o(a,b,d)|0}else b=0;while(0);break}if(lg(a,95)|0){e=pg(fg(a)|0)|0;c[d>>2]=e;if(!e)b=0;else{rh(b);b=ap(a,d,b)|0}break}e=fg(a)|0;g=_i(e)|0;c[d>>2]=g;if((g|0)!=0?lg(a,95)|0:0){g=pg(e)|0;c[b>>2]=g;if(!g)b=0;else b=$o(a,b,d)|0}else b=0}else b=0;while(0);ja=f;return b|0}function Kg(a,b){a=a|0;b=b|0;return Yo(a+368|0,b)|0}function Lg(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;g=ja;ja=ja+32|0;e=g+16|0;d=g;b=g+8|0;if(lg(a,65)|0){Jo(d);if((((hg(a,0)|0)<<24>>24)+-48|0)>>>0<10){mg(b,a,0);c[e>>2]=c[b>>2];c[e+4>>2]=c[b+4>>2];Ko(d,e);if(lg(a,95)|0)f=8;else b=0}else if(!(lg(a,95)|0)){b=_i(fg(a)|0)|0;if((b|0)!=0?lg(a,95)|0:0){Lo(d,b);f=8}else b=0}else f=8;if((f|0)==8){f=pg(fg(a)|0)|0;c[e>>2]=f;if(!f)b=0;else b=Mo(a,e,d)|0}}else b=0;ja=g;return b|0}function Mg(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;f=ja;ja=ja+16|0;b=f+4|0;d=f;if(lg(a,77)|0){e=fg(a)|0;g=pg(e)|0;c[b>>2]=g;if(!g)b=0;else{g=pg(e)|0;c[d>>2]=g;if(!g)b=0;else b=Co(a,b,d)|0}}else b=0;ja=f;return b|0}function Ng(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;g=ja;ja=ja+48|0;f=g+32|0;e=g;h=g+24|0;b=g+16|0;d=g+8|0;rh(e);dg(h,32813);c[f>>2]=c[h>>2];c[f+4>>2]=c[h+4>>2];do if(!(eg(a,f)|0)){dg(b,32823);c[f>>2]=c[b>>2];c[f+4>>2]=c[b+4>>2];if(eg(a,f)|0){dg(e,32826);break}dg(d,32832);c[f>>2]=c[d>>2];c[f+4>>2]=c[d+4>>2];if(eg(a,f)|0)dg(e,32835)}else dg(e,32816);while(0);b=xn(fg(a)|0,0)|0;c[f>>2]=b;if(b){if(!(ng(e)|0))b=yn(a,e,f)|0}else b=0;ja=g;return b|0}function Og(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;i=ja;ja=ja+16|0;f=i+4|0;g=i;if(lg(b,84)|0){c[f>>2]=0;if(!(lg(b,95)|0))if(!(wl(b,f)|0)?(d=(c[f>>2]|0)+1|0,c[f>>2]=d,lg(b,95)|0):0){e=d;h=5}else d=0;else{e=0;h=5}do if((h|0)==5){if(a[b+362>>0]|0){d=sg(b,29316)|0;break}if(a[b+361>>0]|0){d=jn(b,f)|0;c[g>>2]=d;kn(b+332|0,g);break}d=b+288|0;if(e>>>0<(Ei(d)|0)>>>0)d=c[(ln(d,e)|0)>>2]|0;else d=0}while(0)}else d=0;ja=i;return d|0}function Pg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;l=ja;ja=ja+64|0;j=l+16|0;d=l+12|0;f=l+8|0;i=l;do if(lg(a,73)|0){g=a+288|0;if(b)ji(g);e=a+8|0;k=Xg(e)|0;while(1){if(lg(a,69)|0){e=16;break}if(b){ki(j,g);h=li(fg(a)|0)|0;c[d>>2]=h;mi(g,j);if(!h){e=12;break}Wg(e,d);c[f>>2]=h;if((Uh(h)|0)<<24>>24==28){ni(i,h);c[f>>2]=oi(a,i)|0}pi(g,f);Tf(j)}else{h=li(fg(a)|0)|0;c[j>>2]=h;if(!h){e=15;break}Wg(e,j)}}if((e|0)==12){Tf(j);d=0;break}else if((e|0)==15){d=0;break}else if((e|0)==16){qi(j,a,k);d=ri(a,j)|0;break}}else d=0;while(0);ja=l;return d|0}function Qg(a,b,c){a=a|0;b=b|0;c=c|0;return ei(a+368|0,b,c)|0}function Rg(a,b){a=a|0;b=b|0;return Wh(a+368|0,b)|0}function Sg(a,b,c){a=a|0;b=b|0;c=c|0;return Jh(a+368|0,b,c)|0}function Tg(a,b){a=a|0;b=b|0;return Ih(a+368|0,b,29740)|0}function Ug(a,b){a=a|0;b=b|0;return Eh(a+368|0,b,29672)|0}function Vg(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;g=ja;ja=ja+16|0;f=g;a:do if(lg(a,83)|0){d=(hg(a,0)|0)<<24>>24;if(!(id(d)|0)){if(lg(a,95)|0){b=a+148|0;if($g(b)|0){b=0;break}b=c[(ah(b,0)|0)>>2]|0;break}c[f>>2]=0;if((!(bh(a,f)|0)?(e=(c[f>>2]|0)+1|0,c[f>>2]=e,lg(a,95)|0):0)?(b=a+148|0,e>>>0<(Xg(b)|0)>>>0):0)b=c[(ah(b,e)|0)>>2]|0;else b=0;break}switch(d|0){case 97:{c[a>>2]=(c[a>>2]|0)+1;c[f>>2]=0;b=Zg(a,f)|0;break}case 98:{c[a>>2]=(c[a>>2]|0)+1;c[f>>2]=1;b=Zg(a,f)|0;break}case 115:{c[a>>2]=(c[a>>2]|0)+1;c[f>>2]=2;b=Zg(a,f)|0;break}case 105:{c[a>>2]=(c[a>>2]|0)+1;c[f>>2]=3;b=Zg(a,f)|0;break}case 111:{c[a>>2]=(c[a>>2]|0)+1;c[f>>2]=4;b=Zg(a,f)|0;break}case 100:{c[a>>2]=(c[a>>2]|0)+1;c[f>>2]=5;b=Zg(a,f)|0;break}default:{b=0;break a}}d=_g(fg(a)|0,b)|0;c[f>>2]=d;if((d|0)!=(b|0)){Wg(a+148|0,f);b=d}}else b=0;while(0);ja=g;return b|0}function Wg(a,b){a=a|0;b=b|0;var d=0,e=0;e=a+4|0;d=c[e>>2]|0;if((d|0)==(c[a+8>>2]|0)){Yg(a,(Xg(a)|0)<<1);d=c[e>>2]|0}b=c[b>>2]|0;c[e>>2]=d+4;c[d>>2]=b;return}function Xg(a){a=a|0;return (c[a+4>>2]|0)-(c[a>>2]|0)>>2|0}function Yg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;h=Xg(a)|0;do if(!(Vf(a)|0)){e=kD(c[a>>2]|0,b<<2)|0;c[a>>2]=e;if(!e)$f();else{f=e;d=a+4|0;break}}else{f=iD(b<<2)|0;if(!f)$f();e=c[a>>2]|0;d=a+4|0;g=(c[d>>2]|0)-e|0;if(g|0)zD(f|0,e|0,g|0)|0;c[a>>2]=f}while(0);c[d>>2]=f+(h<<2);c[a+8>>2]=f+(b<<2);return}function Zg(a,b){a=a|0;b=b|0;return zh(a+368|0,b)|0}function _g(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;g=ja;ja=ja+16|0;d=g;e=g+8|0;c[d>>2]=b;while(1){if(!(lg(a,66)|0))break;Gg(e,a);if(ng(e)|0){f=5;break}b=dh(a,d,e)|0;c[d>>2]=b}if((f|0)==5)b=0;ja=g;return b|0}function $g(a){a=a|0;return (c[a>>2]|0)==(c[a+4>>2]|0)|0}function ah(a,b){a=a|0;b=b|0;return (ch(a)|0)+(b<<2)|0}function bh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;f=hg(a,0)|0;if(f<<24>>24>47?f<<24>>24<58|(f+-65&255)<26:0){e=0;while(1){f=hg(a,0)|0;if(f<<24>>24<=47)break;if(f<<24>>24>=58)if((f+-65&255)<26)d=-55;else break;else d=-48;c[a>>2]=(c[a>>2]|0)+1;e=(e*36|0)+d+(f<<24>>24)|0}c[b>>2]=e;d=0}else d=1;return d|0}function ch(a){a=a|0;return c[a>>2]|0}function dh(a,b,c){a=a|0;b=b|0;c=c|0;return eh(a+368|0,b,c)|0}function eh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=ja;ja=ja+16|0;f=e+8|0;g=e;a=fh(a,20)|0;b=c[b>>2]|0;i=d;h=c[i+4>>2]|0;d=g;c[d>>2]=c[i>>2];c[d+4>>2]=h;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];gh(a,b,f);ja=e;return a|0}function fh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;h=b+15&-16;g=a+4096|0;e=c[g>>2]|0;d=e+4|0;f=c[d>>2]|0;b=f+h|0;do if(b>>>0>4087)if(h>>>0>4088){b=xh(a,h)|0;break}else{yh(a);e=c[g>>2]|0;d=e+4|0;b=c[d>>2]|0;f=b;b=b+h|0;i=5;break}else i=5;while(0);if((i|0)==5){c[d>>2]=b;b=e+8+f|0}return b|0}function gh(b,d,e){b=b|0;d=d|0;e=e|0;hh(b,8,a[d+5>>0]|0,a[d+6>>0]|0,a[d+7>>0]|0);c[b>>2]=21768;c[b+8>>2]=d;d=e;e=c[d+4>>2]|0;b=b+12|0;c[b>>2]=c[d>>2];c[b+4>>2]=e;return}function hh(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;c[b>>2]=21812;a[b+4>>0]=d;a[b+5>>0]=e;a[b+6>>0]=f;a[b+7>>0]=g;return}function ih(a,b){a=a|0;b=b|0;return 0}function jh(a,b){a=a|0;b=b|0;return 0}function kh(a,b){a=a|0;b=b|0;return 0}function lh(a,b){a=a|0;b=b|0;return a|0}function mh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;d=ja;ja=ja+32|0;e=d+24|0;i=d+16|0;g=d;f=d+8|0;h=c[a+8>>2]|0;za[c[(c[h>>2]|0)+16>>2]&127](h,b);dg(i,29351);c[e>>2]=c[i>>2];c[e+4>>2]=c[i+4>>2];sh(b,e);i=a+12|0;h=c[i+4>>2]|0;a=g;c[a>>2]=c[i>>2];c[a+4>>2]=h;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];sh(b,e);dg(f,29357);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);ja=d;return}function nh(a,b){a=a|0;b=b|0;return}function oh(a,b){a=a|0;b=b|0;rh(a);return}function ph(a){a=a|0;return}function qh(a){a=a|0;Gf(a);return}function rh(a){a=a|0;c[a>>2]=0;c[a+4>>2]=0;return}function sh(a,b){a=a|0;b=b|0;var d=0,e=0;d=th(b)|0;if(d|0){_f(a,d);e=a+4|0;a=(c[a>>2]|0)+(c[e>>2]|0)|0;zD(a|0,uh(b)|0,d|0)|0;c[e>>2]=(c[e>>2]|0)+d}return}function th(a){a=a|0;return (c[a+4>>2]|0)-(c[a>>2]|0)|0}function uh(a){a=a|0;return c[a>>2]|0}function vh(){var a=0;a=ja;ja=ja+16|0;of(29446,a)}function wh(a){a=a|0;ba()}function xh(a,b){a=a|0;b=b|0;b=iD(b+8|0)|0;if(!b)$f();else{a=c[a+4096>>2]|0;c[b>>2]=c[a>>2];c[b+4>>2]=0;c[a>>2]=b;return b+8|0}return 0}function yh(a){a=a|0;var b=0;b=iD(4096)|0;if(!b)$f();else{a=a+4096|0;c[b>>2]=c[a>>2];c[b+4>>2]=0;c[a>>2]=b;return}}function zh(a,b){a=a|0;b=b|0;a=fh(a,12)|0;Ah(a,c[b>>2]|0);return a|0}function Ah(a,b){a=a|0;b=b|0;hh(a,36,1,1,1);c[a>>2]=21856;c[a+8>>2]=b;return}function Bh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;k=ja;ja=ja+64|0;g=k+48|0;d=k+40|0;h=k+32|0;i=k+24|0;j=k+16|0;e=k+8|0;f=k;switch(c[a+8>>2]|0){case 0:{dg(d,29531);c[g>>2]=c[d>>2];c[g+4>>2]=c[d+4>>2];sh(b,g);break}case 1:{dg(h,29546);c[g>>2]=c[h>>2];c[g+4>>2]=c[h+4>>2];sh(b,g);break}case 2:{dg(i,29564);c[g>>2]=c[i>>2];c[g+4>>2]=c[i+4>>2];sh(b,g);break}case 3:{dg(j,29576);c[g>>2]=c[j>>2];c[g+4>>2]=c[j+4>>2];sh(b,g);break}case 4:{dg(e,29589);c[g>>2]=c[e>>2];c[g+4>>2]=c[e+4>>2];sh(b,g);break}case 5:{dg(f,29602);c[g>>2]=c[f>>2];c[g+4>>2]=c[f+4>>2];sh(b,g);break}default:{}}ja=k;return}function Ch(a,b){a=a|0;b=b|0;switch(c[b+8>>2]|0){case 0:{dg(a,29476);break}case 1:{dg(a,29486);break}case 2:{dg(a,29499);break}case 3:{dg(a,29506);break}case 4:{dg(a,29514);break}case 5:{dg(a,29522);break}default:{}}return}function Dh(a){a=a|0;Gf(a);return}function Eh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=ja;ja=ja+16|0;f=e+8|0;g=e;a=fh(a,20)|0;b=c[b>>2]|0;dg(g,d);c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];Fh(a,b,f);ja=e;return a|0}function Fh(a,b,d){a=a|0;b=b|0;d=d|0;hh(a,5,1,1,1);c[a>>2]=21900;c[a+8>>2]=b;b=c[d+4>>2]|0;a=a+12|0;c[a>>2]=c[d>>2];c[a+4>>2]=b;return}function Gh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;h=c[a+8>>2]|0;za[c[(c[h>>2]|0)+16>>2]&127](h,b);h=a+12|0;g=c[h+4>>2]|0;a=f;c[a>>2]=c[h>>2];c[a+4>>2]=g;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);ja=d;return}function Hh(a){a=a|0;Gf(a);return}function Ih(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=ja;ja=ja+16|0;f=e+8|0;g=e;a=fh(a,20)|0;b=c[b>>2]|0;dg(g,d);c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];Fh(a,b,f);ja=e;return a|0}function Jh(a,b,d){a=a|0;b=b|0;d=d|0;a=fh(a,20)|0;Kh(a,c[b>>2]|0,c[d>>2]|0);return a|0}function Kh(b,d,e){b=b|0;d=d|0;e=e|0;hh(b,12,a[d+5>>0]|0,1,1);c[b>>2]=21944;c[b+8>>2]=d;c[b+12>>2]=e;a[b+16>>0]=0;return}function Lh(a,b){a=a|0;b=b|0;return Vh(c[a+8>>2]|0,b)|0}function Mh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;l=ja;ja=ja+48|0;k=l+40|0;g=l+24|0;f=l+8|0;h=l+32|0;i=l+16|0;j=l;e=b+16|0;if(!(a[e>>0]|0)){Ph(g,e,1);Qh(f,b,d);e=c[f+4>>2]|0;za[c[(c[e>>2]|0)+16>>2]&127](e,d);if(Rh(e,d)|0){dg(h,29751);c[k>>2]=c[h>>2];c[k+4>>2]=c[h+4>>2];sh(d,k)}if(!(!(Rh(e,d)|0)?!(Sh(e,d)|0):0)){dg(i,29753);c[k>>2]=c[i>>2];c[k+4>>2]=c[i+4>>2];sh(d,k)}dg(j,(c[f>>2]|0)==0?29755:29757);c[k>>2]=c[j>>2];c[k+4>>2]=c[j+4>>2];sh(d,k);Th(g)}ja=l;return}function Nh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;j=ja;ja=ja+32|0;i=j+24|0;g=j+16|0;e=j+8|0;h=j;f=b+16|0;if(!(a[f>>0]|0)){Ph(g,f,1);Qh(e,b,d);e=c[e+4>>2]|0;if(!(!(Rh(e,d)|0)?!(Sh(e,d)|0):0)){dg(h,29749);c[i>>2]=c[h>>2];c[i+4>>2]=c[h+4>>2];sh(d,i)}za[c[(c[e>>2]|0)+20>>2]&127](e,d);Th(g)}ja=j;return}function Oh(a){a=a|0;Gf(a);return}function Ph(b,d,e){b=b|0;d=d|0;e=e|0;c[b>>2]=d;a[b+4>>0]=a[d>>0]|0;a[b+5>>0]=1;a[d>>0]=e&1;return}function Qh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=c[b+12>>2]|0;c[a>>2]=e;f=a+4|0;b=c[b+8>>2]|0;c[f>>2]=b;while(1){b=oa[c[(c[b>>2]|0)+12>>2]&63](b,d)|0;if((Uh(b)|0)<<24>>24!=12)break;h=c[b+8>>2]|0;c[f>>2]=h;g=c[b+12>>2]|0;g=(g|0)<(e|0)?g:e;c[a>>2]=g;b=h;e=g}return}function Rh(b,d){b=b|0;d=d|0;var e=0;e=a[b+6>>0]|0;if(e<<24>>24==2)e=oa[c[(c[b>>2]|0)+4>>2]&63](b,d)|0;else e=e<<24>>24==0;return e|0}function Sh(b,d){b=b|0;d=d|0;var e=0;e=a[b+7>>0]|0;if(e<<24>>24==2)e=oa[c[(c[b>>2]|0)+8>>2]&63](b,d)|0;else e=e<<24>>24==0;return e|0}function Th(b){b=b|0;if(a[b+5>>0]|0)a[c[b>>2]>>0]=a[b+4>>0]|0;return}function Uh(b){b=b|0;return a[b+4>>0]|0}function Vh(b,d){b=b|0;d=d|0;var e=0;e=a[b+5>>0]|0;if(e<<24>>24==2)e=oa[c[c[b>>2]>>2]&63](b,d)|0;else e=e<<24>>24==0;return e|0}function Wh(a,b){a=a|0;b=b|0;a=fh(a,12)|0;Xh(a,c[b>>2]|0);return a|0}function Xh(b,d){b=b|0;d=d|0;hh(b,11,a[d+5>>0]|0,1,1);c[b>>2]=21988;c[b+8>>2]=d;return}function Yh(a,b){a=a|0;b=b|0;return Vh(c[a+8>>2]|0,b)|0}function Zh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;m=ja;ja=ja+64|0;k=m+48|0;h=m+40|0;i=m+32|0;j=m+24|0;e=m+16|0;f=m;g=m+8|0;d=a+8|0;a=c[d>>2]|0;do if((Uh(a)|0)<<24>>24==10)if(ai(a)|0){h=c[d>>2]|0;dg(e,29824);c[k>>2]=c[e>>2];c[k+4>>2]=c[e+4>>2];sh(b,k);h=h+12|0;i=c[h+4>>2]|0;j=f;c[j>>2]=c[h>>2];c[j+4>>2]=i;c[k>>2]=c[f>>2];c[k+4>>2]=c[f+4>>2];sh(b,k);dg(g,29828);c[k>>2]=c[g>>2];c[k+4>>2]=c[g+4>>2];sh(b,k);break}else{a=c[d>>2]|0;l=4;break}else l=4;while(0);if((l|0)==4){za[c[(c[a>>2]|0)+16>>2]&127](a,b);if(Rh(c[d>>2]|0,b)|0){dg(h,29751);c[k>>2]=c[h>>2];c[k+4>>2]=c[h+4>>2];sh(b,k)}if(!(!(Rh(c[d>>2]|0,b)|0)?!(Sh(c[d>>2]|0,b)|0):0)){dg(i,29753);c[k>>2]=c[i>>2];c[k+4>>2]=c[i+4>>2];sh(b,k)}dg(j,29822);c[k>>2]=c[j>>2];c[k+4>>2]=c[j+4>>2];sh(b,k)}ja=m;return}function _h(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;h=ja;ja=ja+16|0;f=h+8|0;e=h;d=a+8|0;a=c[d>>2]|0;if((Uh(a)|0)<<24>>24==10){if(!(ai(a)|0)){a=c[d>>2]|0;g=4}}else g=4;if((g|0)==4){if(!(!(Rh(a,b)|0)?!(Sh(c[d>>2]|0,b)|0):0)){dg(e,29749);c[f>>2]=c[e>>2];c[f+4>>2]=c[e+4>>2];sh(b,f)}g=c[d>>2]|0;za[c[(c[g>>2]|0)+20>>2]&127](g,b)}ja=h;return}function $h(a){a=a|0;Gf(a);return}function ai(a){a=a|0;var b=0,d=0,e=0;e=ja;ja=ja+16|0;b=e+8|0;d=e;a=c[a+8>>2]|0;if((Uh(a)|0)<<24>>24==7){bi(b,a);dg(d,29810);a=ci(b,d)|0}else a=0;ja=e;return a|0}function bi(a,b){a=a|0;b=b|0;var d=0,e=0;e=b+8|0;d=c[e+4>>2]|0;b=a;c[b>>2]=c[e>>2];c[b+4>>2]=d;return}function ci(b,c){b=b|0;c=c|0;var d=0,e=0;e=th(b)|0;a:do if((e|0)==(th(c)|0)){d=uh(b)|0;e=di(b)|0;b=uh(c)|0;while(1){if((d|0)==(e|0)){b=1;break a}if((a[d>>0]|0)!=(a[b>>0]|0)){b=0;break a}d=d+1|0;b=b+1|0}}else b=0;while(0);return b|0}function di(a){a=a|0;return c[a+4>>2]|0}function ei(a,b,d){a=a|0;b=b|0;d=d|0;a=fh(a,16)|0;fi(a,c[b>>2]|0,c[d>>2]|0);return a|0}function fi(a,b,d){a=a|0;b=b|0;d=d|0;hh(a,32,1,1,1);c[a>>2]=22032;c[a+8>>2]=b;c[a+12>>2]=d;return}function gi(a,b){a=a|0;b=b|0;Mf(c[a+8>>2]|0,b);Mf(c[a+12>>2]|0,b);return}function hi(a,b){a=a|0;b=b|0;b=c[b+8>>2]|0;za[c[(c[b>>2]|0)+24>>2]&127](a,b);return}function ii(a){a=a|0;Gf(a);return}function ji(a){a=a|0;c[a+4>>2]=c[a>>2];return}function ki(a,b){a=a|0;b=b|0;var d=0,e=0;hn(a);if(Wf(b)|0){d=Yi(b)|0;e=(Zi(b)|0)-d|0;if(e|0)zD(c[a>>2]|0,d|0,e|0)|0;e=c[a>>2]|0;c[a+4>>2]=e+((Ei(b)|0)<<2);ji(b)}else{c[a>>2]=c[b>>2];c[a+4>>2]=c[b+4>>2];c[a+8>>2]=c[b+8>>2];Xi(b)}return}function li(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;g=ja;ja=ja+16|0;d=g;a:do switch((hg(a,0)|0)<<24>>24|0){case 88:{c[a>>2]=(c[a>>2]|0)+1;b=_i(fg(a)|0)|0;if(!b)b=0;else{a=lg(a,69)|0;ja=g;return (a?b:0)|0}break}case 74:{c[a>>2]=(c[a>>2]|0)+1;b=a+8|0;e=Xg(b)|0;while(1){if(lg(a,69)|0){f=9;break}f=li(fg(a)|0)|0;c[d>>2]=f;if(!f){f=8;break}Wg(b,d)}if((f|0)==8){b=0;break a}else if((f|0)==9){qi(d,a,e);b=$i(a,d)|0;break a}break}case 76:{if((hg(a,1)|0)<<24>>24!=90){b=aj(fg(a)|0)|0;break a}c[a>>2]=(c[a>>2]|0)+2;b=gg(fg(a)|0)|0;if(!b)b=0;else{a=lg(a,69)|0;b=a?b:0}break}default:b=pg(fg(a)|0)|0}while(0);ja=g;return b|0}function mi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;e=Wf(b)|0;d=Wf(a)|0;do if(!e)if(d){c[a>>2]=c[b>>2];c[a+4>>2]=c[b+4>>2];c[a+8>>2]=c[b+8>>2];Xi(b);break}else{f=c[a>>2]|0;c[a>>2]=c[b>>2];c[b>>2]=f;f=a+4|0;d=b+4|0;e=c[f>>2]|0;c[f>>2]=c[d>>2];c[d>>2]=e;d=a+8|0;a=b+8|0;e=c[d>>2]|0;c[d>>2]=c[a>>2];c[a>>2]=e;ji(b);break}else{if(!d){jD(c[a>>2]|0);Xi(a)}d=Yi(b)|0;e=(Zi(b)|0)-d|0;if(e|0)zD(c[a>>2]|0,d|0,e|0)|0;f=c[a>>2]|0;c[a+4>>2]=f+((Ei(b)|0)<<2);ji(b)}while(0);return}function ni(a,b){a=a|0;b=b|0;var d=0,e=0;e=b+8|0;d=c[e+4>>2]|0;b=a;c[b>>2]=c[e>>2];c[b+4>>2]=d;return}function oi(a,b){a=a|0;b=b|0;return Gi(a+368|0,b)|0}function pi(a,b){a=a|0;b=b|0;var d=0,e=0;e=a+4|0;d=c[e>>2]|0;if((d|0)==(c[a+8>>2]|0)){Fi(a,(Ei(a)|0)<<1);d=c[e>>2]|0}b=c[b>>2]|0;c[e>>2]=d+4;c[d>>2]=b;return}function qi(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=b+8|0;e=(ch(d)|0)+(c<<2)|0;Ai(a,b,e,zi(d)|0);Bi(d,c);return}function ri(a,b){a=a|0;b=b|0;return si(a+368|0,b)|0}function si(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;a=fh(a,16)|0;h=b;g=c[h+4>>2]|0;b=f;c[b>>2]=c[h>>2];c[b+4>>2]=g;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];ti(a,e);ja=d;return a|0}function ti(a,b){a=a|0;b=b|0;var d=0;hh(a,30,1,1,1);c[a>>2]=22076;d=b;b=c[d+4>>2]|0;a=a+8|0;c[a>>2]=c[d>>2];c[a+4>>2]=b;return}function ui(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;g=ja;ja=ja+32|0;f=g+24|0;h=g+16|0;d=g+8|0;e=g;dg(h,29935);c[f>>2]=c[h>>2];c[f+4>>2]=c[h+4>>2];sh(b,f);wi(a+8|0,b);if((xi(b)|0)<<24>>24==62){dg(d,29751);c[f>>2]=c[d>>2];c[f+4>>2]=c[d+4>>2];sh(b,f)}dg(e,29828);c[f>>2]=c[e>>2];c[f+4>>2]=c[e+4>>2];sh(b,f);ja=g;return}function vi(a){a=a|0;Gf(a);return}function wi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;j=ja;ja=ja+16|0;i=j+8|0;h=j;g=a+4|0;d=1;f=0;while(1){if((f|0)==(c[g>>2]|0))break;e=Of(b)|0;if(!d){dg(h,29937);c[i>>2]=c[h>>2];c[i+4>>2]=c[h+4>>2];sh(b,i)}k=Of(b)|0;Mf(c[(c[a>>2]|0)+(f<<2)>>2]|0,b);if((k|0)==(Of(b)|0))yi(b,e);else d=0;f=f+1|0}ja=j;return}function xi(b){b=b|0;var d=0;d=c[b+4>>2]|0;if(!d)d=0;else d=a[(c[b>>2]|0)+(d+-1)>>0]|0;return d|0}function yi(a,b){a=a|0;b=b|0;c[a+4>>2]=b;return}function zi(a){a=a|0;return c[a+4>>2]|0}function Ai(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;f=d-c|0;e=f>>2;d=Ci(b+368|0,e)|0;if(f|0)zD(d|0,c|0,f|0)|0;Di(a,d,e);return}function Bi(a,b){a=a|0;b=b|0;c[a+4>>2]=(c[a>>2]|0)+(b<<2);return}function Ci(a,b){a=a|0;b=b|0;return fh(a,b<<2)|0}function Di(a,b,d){a=a|0;b=b|0;d=d|0;c[a>>2]=b;c[a+4>>2]=d;return}function Ei(a){a=a|0;return (c[a+4>>2]|0)-(c[a>>2]|0)>>2|0}function Fi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;h=Ei(a)|0;do if(!(Wf(a)|0)){e=kD(c[a>>2]|0,b<<2)|0;c[a>>2]=e;if(!e)$f();else{f=e;d=a+4|0;break}}else{f=iD(b<<2)|0;if(!f)$f();e=c[a>>2]|0;d=a+4|0;g=(c[d>>2]|0)-e|0;if(g|0)zD(f|0,e|0,g|0)|0;c[a>>2]=f}while(0);c[d>>2]=f+(h<<2);c[a+8>>2]=f+(b<<2);return}function Gi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;a=fh(a,16)|0;h=b;g=c[h+4>>2]|0;b=f;c[b>>2]=c[h>>2];c[b+4>>2]=g;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];Hi(a,e);ja=d;return a|0}function Hi(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;hh(b,27,1,1,1);c[b>>2]=22120;g=b+8|0;f=c[d+4>>2]|0;h=g;c[h>>2]=c[d>>2];c[h+4>>2]=f;h=b+5|0;a[h>>0]=2;f=b+7|0;a[f>>0]=2;d=b+6|0;a[d>>0]=2;b=Ii(g)|0;e=Ji(g)|0;while(1){if((b|0)==(e|0)){i=4;break}if(Ki(c[b>>2]|0)|0)b=b+4|0;else break}if((i|0)==4)a[d>>0]=1;d=Ii(g)|0;b=Ji(g)|0;while(1){if((d|0)==(b|0)){i=8;break}if(Li(c[d>>2]|0)|0)d=d+4|0;else break}if((i|0)==8)a[f>>0]=1;d=Ii(g)|0;b=Ji(g)|0;while(1){if((d|0)==(b|0)){i=12;break}if(Mi(c[d>>2]|0)|0)d=d+4|0;else break}if((i|0)==12)a[h>>0]=1;return}function Ii(a){a=a|0;return c[a>>2]|0}function Ji(a){a=a|0;return (c[a>>2]|0)+(c[a+4>>2]<<2)|0}function Ki(b){b=b|0;return (a[b+6>>0]|0)==1|0}function Li(b){b=b|0;return (a[b+7>>0]|0)==1|0}function Mi(b){b=b|0;return (a[b+5>>0]|0)==1|0}function Ni(a,b){a=a|0;b=b|0;var d=0;Ui(a,b);d=c[b+12>>2]|0;a=a+8|0;if(d>>>0<(Vi(a)|0)>>>0)a=Vh(Wi(a,d)|0,b)|0;else a=0;return a|0}function Oi(a,b){a=a|0;b=b|0;var d=0;Ui(a,b);d=c[b+12>>2]|0;a=a+8|0;if(d>>>0<(Vi(a)|0)>>>0)a=Rh(Wi(a,d)|0,b)|0;else a=0;return a|0}function Pi(a,b){a=a|0;b=b|0;var d=0;Ui(a,b);d=c[b+12>>2]|0;a=a+8|0;if(d>>>0<(Vi(a)|0)>>>0)a=Sh(Wi(a,d)|0,b)|0;else a=0;return a|0}function Qi(a,b){a=a|0;b=b|0;var d=0,e=0;Ui(a,b);d=c[b+12>>2]|0;e=a+8|0;if(d>>>0<(Vi(e)|0)>>>0){a=Wi(e,d)|0;a=oa[c[(c[a>>2]|0)+12>>2]&63](a,b)|0}return a|0}function Ri(a,b){a=a|0;b=b|0;var d=0;Ui(a,b);d=c[b+12>>2]|0;a=a+8|0;if(d>>>0<(Vi(a)|0)>>>0){d=Wi(a,d)|0;za[c[(c[d>>2]|0)+16>>2]&127](d,b)}return}function Si(a,b){a=a|0;b=b|0;var d=0;Ui(a,b);d=c[b+12>>2]|0;a=a+8|0;if(d>>>0<(Vi(a)|0)>>>0){d=Wi(a,d)|0;za[c[(c[d>>2]|0)+20>>2]&127](d,b)}return}function Ti(a){a=a|0;Gf(a);return}function Ui(a,b){a=a|0;b=b|0;var d=0;d=b+16|0;if((c[d>>2]|0)==-1){c[d>>2]=Vi(a+8|0)|0;c[b+12>>2]=0}return}function Vi(a){a=a|0;return c[a+4>>2]|0}function Wi(a,b){a=a|0;b=b|0;return c[(c[a>>2]|0)+(b<<2)>>2]|0}function Xi(a){a=a|0;var b=0;b=a+12|0;c[a>>2]=b;c[a+4>>2]=b;c[a+8>>2]=a+44;return}function Yi(a){a=a|0;return c[a>>2]|0}function Zi(a){a=a|0;return c[a+4>>2]|0}function _i(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;V=ja;ja=ja+352|0;U=V+336|0;e=V+344|0;d=V+328|0;p=V+320|0;v=V+312|0;D=V+304|0;K=V+296|0;N=V+288|0;T=V+8|0;f=V+280|0;g=V+272|0;h=V+264|0;i=V+256|0;j=V+248|0;k=V+240|0;l=V+232|0;m=V+224|0;n=V+216|0;o=V+208|0;q=V+200|0;r=V+192|0;s=V+184|0;t=V+176|0;u=V+168|0;w=V+160|0;x=V+152|0;y=V+144|0;z=V+136|0;A=V+128|0;B=V+120|0;C=V+112|0;E=V+104|0;F=V+96|0;G=V+88|0;H=V+80|0;I=V+72|0;J=V+64|0;L=V+56|0;M=V+48|0;S=V;O=V+40|0;P=V+32|0;Q=V+24|0;R=V+16|0;dg(d,30450);c[U>>2]=c[d>>2];c[U+4>>2]=c[d+4>>2];a[e>>0]=(eg(b,U)|0)&1;a:do if((kg(b)|0)>>>0<2)d=0;else{d=c[b>>2]|0;do switch(a[d>>0]|0){case 76:{d=aj(fg(b)|0)|0;break a}case 84:{d=Og(fg(b)|0)|0;break a}case 102:{switch((hg(b,1)|0)<<24>>24){case 112:{g=7;break}case 76:{if((((hg(b,2)|0)<<24>>24)+-48|0)>>>0<10)g=7;else g=8;break}default:g=8}if((g|0)==7){d=Pj(fg(b)|0)|0;break a}else if((g|0)==8){d=Qj(fg(b)|0)|0;break a}break}case 97:switch(a[d+1>>0]|0){case 97:{c[b>>2]=d+2;d=fg(b)|0;dg(p,29757);c[U>>2]=c[p>>2];c[U+4>>2]=c[p+4>>2];d=Rj(d,U)|0;break a}case 100:{c[b>>2]=d+2;d=fg(b)|0;dg(v,29755);c[U>>2]=c[v>>2];c[U+4>>2]=c[v+4>>2];d=Sj(d,U)|0;break a}case 110:{c[b>>2]=d+2;d=fg(b)|0;dg(D,29755);c[U>>2]=c[D>>2];c[U+4>>2]=c[D+4>>2];d=Rj(d,U)|0;break a}case 78:{c[b>>2]=d+2;d=fg(b)|0;dg(K,30453);c[U>>2]=c[K>>2];c[U+4>>2]=c[K+4>>2];d=Rj(d,U)|0;break a}case 83:{c[b>>2]=d+2;d=fg(b)|0;dg(N,30456);c[U>>2]=c[N>>2];c[U+4>>2]=c[N+4>>2];d=Rj(d,U)|0;break a}case 116:{c[b>>2]=d+2;T=pg(fg(b)|0)|0;c[U>>2]=T;if(!T)d=0;else d=Tj(b,30458,U)|0;break a}case 122:{c[b>>2]=d+2;T=_i(fg(b)|0)|0;c[U>>2]=T;if(!T)d=0;else d=Tj(b,30458,U)|0;break a}default:{d=0;break a}}case 99:switch(a[d+1>>0]|0){case 99:{c[b>>2]=d+2;d=fg(b)|0;S=pg(d)|0;c[U>>2]=S;if(!S)d=0;else{S=_i(d)|0;c[T>>2]=S;if(!S)d=0;else d=Uj(b,U,T)|0}break a}case 108:{c[b>>2]=d+2;e=fg(b)|0;S=_i(e)|0;c[U>>2]=S;do if(S){d=b+8|0;f=Xg(d)|0;while(1){if(lg(b,69)|0){g=33;break}S=_i(e)|0;c[T>>2]=S;if(!S){g=31;break}Wg(d,T)}if((g|0)==31){d=0;break}else if((g|0)==33){qi(T,b,f);d=Vj(b,U,T)|0;break}}else d=0;while(0);break a}case 109:{c[b>>2]=d+2;d=fg(b)|0;dg(f,30468);c[U>>2]=c[f>>2];c[U+4>>2]=c[f+4>>2];d=Rj(d,U)|0;break a}case 111:{c[b>>2]=d+2;d=fg(b)|0;dg(g,30470);c[U>>2]=c[g>>2];c[U+4>>2]=c[g+4>>2];d=Sj(d,U)|0;break a}case 118:{d=Wj(fg(b)|0)|0;break a}default:{d=0;break a}}case 100:switch(a[d+1>>0]|0){case 97:{c[b>>2]=d+2;S=_i(fg(b)|0)|0;c[U>>2]=S;if(!S)d=0;else{a[T>>0]=1;d=Xj(b,U,e,T)|0}break a}case 99:{c[b>>2]=d+2;d=fg(b)|0;S=pg(d)|0;c[U>>2]=S;if(!S)d=0;else{S=_i(d)|0;c[T>>2]=S;if(!S)d=0;else d=Yj(b,U,T)|0}break a}case 101:{c[b>>2]=d+2;d=fg(b)|0;dg(h,29822);c[U>>2]=c[h>>2];c[U+4>>2]=c[h+4>>2];d=Sj(d,U)|0;break a}case 108:{c[b>>2]=d+2;S=_i(fg(b)|0)|0;c[U>>2]=S;if(!S)d=0;else{a[T>>0]=0;d=Xj(b,U,e,T)|0}break a}case 110:{d=Zj(fg(b)|0)|0;break a}case 115:{c[b>>2]=d+2;d=fg(b)|0;S=_i(d)|0;c[U>>2]=S;if(!S)d=0;else{S=_i(d)|0;c[T>>2]=S;if(!S)d=0;else d=_j(b,U,30472,T)|0}break a}case 116:{c[b>>2]=d+2;d=fg(b)|0;S=_i(d)|0;c[U>>2]=S;if(!S)d=0;else{S=_i(d)|0;c[T>>2]=S;if(!S)d=0;else d=$j(b,U,T)|0}break a}case 118:{c[b>>2]=d+2;d=fg(b)|0;dg(i,30475);c[U>>2]=c[i>>2];c[U+4>>2]=c[i+4>>2];d=Rj(d,U)|0;break a}case 86:{c[b>>2]=d+2;d=fg(b)|0;dg(j,30477);c[U>>2]=c[j>>2];c[U+4>>2]=c[j+4>>2];d=Rj(d,U)|0;break a}default:{d=0;break a}}case 101:switch(a[d+1>>0]|0){case 111:{c[b>>2]=d+2;d=fg(b)|0;dg(k,30480);c[U>>2]=c[k>>2];c[U+4>>2]=c[k+4>>2];d=Rj(d,U)|0;break a}case 79:{c[b>>2]=d+2;d=fg(b)|0;dg(l,30482);c[U>>2]=c[l>>2];c[U+4>>2]=c[l+4>>2];d=Rj(d,U)|0;break a}case 113:{c[b>>2]=d+2;d=fg(b)|0;dg(m,30485);c[U>>2]=c[m>>2];c[U+4>>2]=c[m+4>>2];d=Rj(d,U)|0;break a}default:{d=0;break a}}case 103:switch(a[d+1>>0]|0){case 101:{c[b>>2]=d+2;d=fg(b)|0;dg(n,30488);c[U>>2]=c[n>>2];c[U+4>>2]=c[n+4>>2];d=Rj(d,U)|0;break a}case 116:{c[b>>2]=d+2;d=fg(b)|0;dg(o,29828);c[U>>2]=c[o>>2];c[U+4>>2]=c[o+4>>2];d=Rj(d,U)|0;break a}default:{d=0;break a}}case 105:{switch(a[d+1>>0]|0){case 120:{c[b>>2]=d+2;d=fg(b)|0;S=_i(d)|0;c[U>>2]=S;if(!S)d=0;else{S=_i(d)|0;c[T>>2]=S;if(!S)d=0;else d=ak(b,U,T)|0}break a}case 108:break;default:{d=0;break a}}c[b>>2]=d+2;d=b+8|0;e=Xg(d)|0;while(1){if(lg(b,69)|0){g=82;break}S=bk(fg(b)|0)|0;c[U>>2]=S;if(!S){g=81;break}Wg(d,U)}if((g|0)==81){d=0;break a}else if((g|0)==82){qi(T,b,e);d=ck(b,U,T)|0;break a}break}case 108:switch(a[d+1>>0]|0){case 101:{c[b>>2]=d+2;d=fg(b)|0;dg(q,30491);c[U>>2]=c[q>>2];c[U+4>>2]=c[q+4>>2];d=Rj(d,U)|0;break a}case 115:{c[b>>2]=d+2;d=fg(b)|0;dg(r,30494);c[U>>2]=c[r>>2];c[U+4>>2]=c[r+4>>2];d=Rj(d,U)|0;break a}case 83:{c[b>>2]=d+2;d=fg(b)|0;dg(s,30497);c[U>>2]=c[s>>2];c[U+4>>2]=c[s+4>>2];d=Rj(d,U)|0;break a}case 116:{c[b>>2]=d+2;d=fg(b)|0;dg(t,29935);c[U>>2]=c[t>>2];c[U+4>>2]=c[t+4>>2];d=Rj(d,U)|0;break a}default:{d=0;break a}}case 109:switch(a[d+1>>0]|0){case 105:{c[b>>2]=d+2;d=fg(b)|0;dg(u,30340);c[U>>2]=c[u>>2];c[U+4>>2]=c[u+4>>2];d=Rj(d,U)|0;break a}case 73:{c[b>>2]=d+2;d=fg(b)|0;dg(w,30501);c[U>>2]=c[w>>2];c[U+4>>2]=c[w+4>>2];d=Rj(d,U)|0;break a}case 108:{c[b>>2]=d+2;d=fg(b)|0;dg(x,29822);c[U>>2]=c[x>>2];c[U+4>>2]=c[x+4>>2];d=Rj(d,U)|0;break a}case 76:{c[b>>2]=d+2;d=fg(b)|0;dg(y,30504);c[U>>2]=c[y>>2];c[U+4>>2]=c[y+4>>2];d=Rj(d,U)|0;break a}case 109:{c[b>>2]=d+2;if(lg(b,95)|0){d=fg(b)|0;dg(z,30507);c[U>>2]=c[z>>2];c[U+4>>2]=c[z+4>>2];d=Sj(d,U)|0;break a}T=_i(fg(b)|0)|0;c[U>>2]=T;if(!T)d=0;else d=dk(b,U,30507)|0;break a}default:{d=0;break a}}case 110:switch(a[d+1>>0]|0){case 119:case 97:{d=ek(fg(b)|0)|0;break a}case 101:{c[b>>2]=d+2;d=fg(b)|0;dg(A,30510);c[U>>2]=c[A>>2];c[U+4>>2]=c[A+4>>2];d=Rj(d,U)|0;break a}case 103:{c[b>>2]=d+2;d=fg(b)|0;dg(B,30340);c[U>>2]=c[B>>2];c[U+4>>2]=c[B+4>>2];d=Sj(d,U)|0;break a}case 116:{c[b>>2]=d+2;d=fg(b)|0;dg(C,30513);c[U>>2]=c[C>>2];c[U+4>>2]=c[C+4>>2];d=Sj(d,U)|0;break a}case 120:{c[b>>2]=d+2;T=_i(fg(b)|0)|0;c[U>>2]=T;if(!T)d=0;else d=fk(b,U)|0;break a}default:{d=0;break a}}case 111:switch(a[d+1>>0]|0){case 110:{d=Zj(fg(b)|0)|0;break a}case 111:{c[b>>2]=d+2;d=fg(b)|0;dg(E,30515);c[U>>2]=c[E>>2];c[U+4>>2]=c[E+4>>2];d=Rj(d,U)|0;break a}case 114:{c[b>>2]=d+2;d=fg(b)|0;dg(F,30518);c[U>>2]=c[F>>2];c[U+4>>2]=c[F+4>>2];d=Rj(d,U)|0;break a}case 82:{c[b>>2]=d+2;d=fg(b)|0;dg(G,30520);c[U>>2]=c[G>>2];c[U+4>>2]=c[G+4>>2];d=Rj(d,U)|0;break a}default:{d=0;break a}}case 112:switch(a[d+1>>0]|0){case 109:{c[b>>2]=d+2;d=fg(b)|0;dg(H,30523);c[U>>2]=c[H>>2];c[U+4>>2]=c[H+4>>2];d=Rj(d,U)|0;break a}case 108:{c[b>>2]=d+2;d=fg(b)|0;dg(I,30527);c[U>>2]=c[I>>2];c[U+4>>2]=c[I+4>>2];d=Rj(d,U)|0;break a}case 76:{c[b>>2]=d+2;d=fg(b)|0;dg(J,30529);c[U>>2]=c[J>>2];c[U+4>>2]=c[J+4>>2];d=Rj(d,U)|0;break a}case 112:{c[b>>2]=d+2;if(lg(b,95)|0){d=fg(b)|0;dg(L,30532);c[U>>2]=c[L>>2];c[U+4>>2]=c[L+4>>2];d=Sj(d,U)|0;break a}T=_i(fg(b)|0)|0;c[U>>2]=T;if(!T)d=0;else d=dk(b,U,30532)|0;break a}case 115:{c[b>>2]=d+2;d=fg(b)|0;dg(M,30527);c[U>>2]=c[M>>2];c[U+4>>2]=c[M+4>>2];d=Sj(d,U)|0;break a}case 116:{c[b>>2]=d+2;d=fg(b)|0;S=_i(d)|0;c[U>>2]=S;if(!S)d=0;else{S=_i(d)|0;c[T>>2]=S;if(!S)d=0;else d=_j(b,U,30535,T)|0}break a}default:{d=0;break a}}case 113:{if((a[d+1>>0]|0)!=117){d=0;break a}c[b>>2]=d+2;d=fg(b)|0;R=_i(d)|0;c[U>>2]=R;if(!R)d=0;else{R=_i(d)|0;c[T>>2]=R;if(!R)d=0;else{R=_i(d)|0;c[S>>2]=R;if(!R)d=0;else d=gk(b,U,T,S)|0}}break a}case 114:switch(a[d+1>>0]|0){case 99:{c[b>>2]=d+2;d=fg(b)|0;S=pg(d)|0;c[U>>2]=S;if(!S)d=0;else{S=_i(d)|0;c[T>>2]=S;if(!S)d=0;else d=hk(b,U,T)|0}break a}case 109:{c[b>>2]=d+2;d=fg(b)|0;dg(O,30538);c[U>>2]=c[O>>2];c[U+4>>2]=c[O+4>>2];d=Rj(d,U)|0;break a}case 77:{c[b>>2]=d+2;d=fg(b)|0;dg(P,30540);c[U>>2]=c[P>>2];c[U+4>>2]=c[P+4>>2];d=Rj(d,U)|0;break a}case 115:{c[b>>2]=d+2;d=fg(b)|0;dg(Q,30543);c[U>>2]=c[Q>>2];c[U+4>>2]=c[Q+4>>2];d=Rj(d,U)|0;break a}case 83:{c[b>>2]=d+2;d=fg(b)|0;dg(R,30546);c[U>>2]=c[R>>2];c[U+4>>2]=c[R+4>>2];d=Rj(d,U)|0;break a}default:{d=0;break a}}case 115:{switch(a[d+1>>0]|0){case 99:{c[b>>2]=d+2;d=fg(b)|0;S=pg(d)|0;c[U>>2]=S;if(!S)d=0;else{S=_i(d)|0;c[T>>2]=S;if(!S)d=0;else d=ik(b,U,T)|0}break a}case 112:{c[b>>2]=d+2;T=_i(fg(b)|0)|0;c[U>>2]=T;if(!T)d=0;else d=Kg(b,U)|0;break a}case 114:{d=Zj(fg(b)|0)|0;break a}case 116:{c[b>>2]=d+2;T=pg(fg(b)|0)|0;c[U>>2]=T;if(!T)d=0;else d=jk(b,30550,U)|0;break a}case 122:{c[b>>2]=d+2;T=_i(fg(b)|0)|0;c[U>>2]=T;if(!T)d=0;else d=jk(b,30550,U)|0;break a}case 90:{c[b>>2]=d+2;switch((hg(b,0)|0)<<24>>24){case 84:{T=Og(fg(b)|0)|0;c[U>>2]=T;if(!T)d=0;else d=kk(b,U)|0;break a}case 102:{T=Pj(fg(b)|0)|0;c[U>>2]=T;if(!T)d=0;else d=lk(b,U)|0;break a}default:{d=0;break a}}}case 80:{c[b>>2]=d+2;d=b+8|0;e=Xg(d)|0;while(1){if(lg(b,69)|0){g=172;break}S=li(fg(b)|0)|0;c[U>>2]=S;if(!S){g=171;break}Wg(d,U)}if((g|0)==171){d=0;break a}else if((g|0)==172){qi(T,b,e);c[U>>2]=mk(b,T)|0;d=lk(b,U)|0;break a}break}default:{d=0;break a}}break}case 116:switch(a[d+1>>0]|0){case 101:{c[b>>2]=d+2;T=_i(fg(b)|0)|0;c[U>>2]=T;if(!T)d=0;else d=jk(b,30559,U)|0;break a}case 105:{c[b>>2]=d+2;T=pg(fg(b)|0)|0;c[U>>2]=T;if(!T)d=0;else d=jk(b,30559,U)|0;break a}case 108:{c[b>>2]=d+2;e=fg(b)|0;S=pg(e)|0;c[U>>2]=S;do if(S){d=b+8|0;f=Xg(d)|0;while(1){if(lg(b,69)|0){g=186;break}S=bk(e)|0;c[T>>2]=S;if(!S){g=185;break}Wg(d,T)}if((g|0)==185){d=0;break}else if((g|0)==186){qi(T,b,f);d=nk(b,U,T)|0;break}}else d=0;while(0);break a}case 114:{c[b>>2]=d+2;d=wg(b,30568)|0;break a}case 119:{c[b>>2]=d+2;T=_i(fg(b)|0)|0;c[U>>2]=T;if(!T)d=0;else d=ok(b,U)|0;break a}default:{d=0;break a}}case 57:case 56:case 55:case 54:case 53:case 52:case 51:case 50:case 49:{d=Zj(fg(b)|0)|0;break a}default:{d=0;break a}}while(0)}while(0);ja=V;return d|0}function $i(a,b){a=a|0;b=b|0;return Lj(a+368|0,b)|0}function aj(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;v=ja;ja=ja+160|0;u=v+144|0;b=v+136|0;m=v+128|0;d=v+120|0;f=v+112|0;g=v+104|0;h=v+96|0;i=v+88|0;j=v+80|0;k=v+72|0;l=v+64|0;n=v+56|0;o=v+48|0;p=v+40|0;q=v+32|0;r=v+24|0;s=v+16|0;e=v+8|0;t=v;a:do if(lg(a,76)|0)do switch((hg(a,0)|0)<<24>>24|0){case 84:{b=0;break a}case 119:{c[a>>2]=(c[a>>2]|0)+1;a=fg(a)|0;dg(b,30039);c[u>>2]=c[b>>2];c[u+4>>2]=c[b+4>>2];b=bj(a,u)|0;break a}case 98:{dg(m,30047);c[u>>2]=c[m>>2];c[u+4>>2]=c[m+4>>2];if(eg(a,u)|0){c[u>>2]=0;b=cj(a,u)|0;break a}dg(d,30051);c[u>>2]=c[d>>2];c[u+4>>2]=c[d+4>>2];if(!(eg(a,u)|0)){b=0;break a}c[u>>2]=1;b=cj(a,u)|0;break a}case 99:{c[a>>2]=(c[a>>2]|0)+1;b=fg(a)|0;dg(f,29099);c[u>>2]=c[f>>2];c[u+4>>2]=c[f+4>>2];b=bj(b,u)|0;break a}case 97:{c[a>>2]=(c[a>>2]|0)+1;b=fg(a)|0;dg(g,29104);c[u>>2]=c[g>>2];c[u+4>>2]=c[g+4>>2];b=bj(b,u)|0;break a}case 104:{c[a>>2]=(c[a>>2]|0)+1;b=fg(a)|0;dg(h,29116);c[u>>2]=c[h>>2];c[u+4>>2]=c[h+4>>2];b=bj(b,u)|0;break a}case 115:{c[a>>2]=(c[a>>2]|0)+1;b=fg(a)|0;dg(i,29130);c[u>>2]=c[i>>2];c[u+4>>2]=c[i+4>>2];b=bj(b,u)|0;break a}case 116:{c[a>>2]=(c[a>>2]|0)+1;b=fg(a)|0;dg(j,29136);c[u>>2]=c[j>>2];c[u+4>>2]=c[j+4>>2];b=bj(b,u)|0;break a}case 105:{c[a>>2]=(c[a>>2]|0)+1;b=fg(a)|0;dg(k,109280);c[u>>2]=c[k>>2];c[u+4>>2]=c[k+4>>2];b=bj(b,u)|0;break a}case 106:{c[a>>2]=(c[a>>2]|0)+1;b=fg(a)|0;dg(l,30055);c[u>>2]=c[l>>2];c[u+4>>2]=c[l+4>>2];b=bj(b,u)|0;break a}case 108:{c[a>>2]=(c[a>>2]|0)+1;b=fg(a)|0;dg(n,35862);c[u>>2]=c[n>>2];c[u+4>>2]=c[n+4>>2];b=bj(b,u)|0;break a}case 109:{c[a>>2]=(c[a>>2]|0)+1;b=fg(a)|0;dg(o,30057);c[u>>2]=c[o>>2];c[u+4>>2]=c[o+4>>2];b=bj(b,u)|0;break a}case 120:{c[a>>2]=(c[a>>2]|0)+1;b=fg(a)|0;dg(p,35853);c[u>>2]=c[p>>2];c[u+4>>2]=c[p+4>>2];b=bj(b,u)|0;break a}case 121:{c[a>>2]=(c[a>>2]|0)+1;b=fg(a)|0;dg(q,30060);c[u>>2]=c[q>>2];c[u+4>>2]=c[q+4>>2];b=bj(b,u)|0;break a}case 110:{c[a>>2]=(c[a>>2]|0)+1;b=fg(a)|0;dg(r,29197);c[u>>2]=c[r>>2];c[u+4>>2]=c[r+4>>2];b=bj(b,u)|0;break a}case 111:{c[a>>2]=(c[a>>2]|0)+1;b=fg(a)|0;dg(s,29206);c[u>>2]=c[s>>2];c[u+4>>2]=c[s+4>>2];b=bj(b,u)|0;break a}case 102:{c[a>>2]=(c[a>>2]|0)+1;b=dj(fg(a)|0)|0;break a}case 100:{c[a>>2]=(c[a>>2]|0)+1;b=ej(fg(a)|0)|0;break a}case 101:{c[a>>2]=(c[a>>2]|0)+1;b=fj(fg(a)|0)|0;break a}case 95:{dg(e,29033);c[u>>2]=c[e>>2];c[u+4>>2]=c[e+4>>2];if(!(eg(a,u)|0)){b=0;break a}b=gg(fg(a)|0)|0;if(b|0?lg(a,69)|0:0)break a;b=0;break a}default:{b=pg(fg(a)|0)|0;c[u>>2]=b;if(!b)b=0;else{mg(t,a,0);s=ng(t)|0;d=lg(a,69)|0;if(!s)if(d)b=gj(a,u,t)|0;else b=0;else b=d?b:0}break a}}while(0);else b=0;while(0);ja=v;return b|0}function bj(a,b){a=a|0;b=b|0;var c=0,d=0;d=ja;ja=ja+16|0;c=d;mg(c,a,1);if(!(ng(c)|0)?lg(a,69)|0:0)b=Ej(a,b,c)|0;else b=0;ja=d;return b|0}function cj(a,b){a=a|0;b=b|0;return Aj(a+368|0,b)|0}function dj(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;h=ja;ja=ja+16|0;d=h;if((kg(b)|0)>>>0<9)d=0;else{e=c[b>>2]|0;ig(d,e,e+8|0);e=uh(d)|0;f=di(d)|0;while(1){if((e|0)==(f|0)){g=5;break}if(!(Ud(a[e>>0]|0)|0)){d=0;break}else e=e+1|0}if((g|0)==5){c[b>>2]=(c[b>>2]|0)+8;if(lg(b,69)|0)d=vj(b,d)|0;else d=0}}ja=h;return d|0}function ej(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;h=ja;ja=ja+16|0;d=h;if((kg(b)|0)>>>0<17)d=0;else{e=c[b>>2]|0;ig(d,e,e+16|0);e=uh(d)|0;f=di(d)|0;while(1){if((e|0)==(f|0)){g=5;break}if(!(Ud(a[e>>0]|0)|0)){d=0;break}else e=e+1|0}if((g|0)==5){c[b>>2]=(c[b>>2]|0)+16;if(lg(b,69)|0)d=qj(b,d)|0;else d=0}}ja=h;return d|0}function fj(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;h=ja;ja=ja+16|0;d=h;if((kg(b)|0)>>>0<21)d=0;else{e=c[b>>2]|0;ig(d,e,e+20|0);e=uh(d)|0;f=di(d)|0;while(1){if((e|0)==(f|0)){g=5;break}if(!(Ud(a[e>>0]|0)|0)){d=0;break}else e=e+1|0}if((g|0)==5){c[b>>2]=(c[b>>2]|0)+20;if(lg(b,69)|0)d=lj(b,d)|0;else d=0}}ja=h;return d|0}function gj(a,b,c){a=a|0;b=b|0;c=c|0;return hj(a+368|0,b,c)|0}function hj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=ja;ja=ja+16|0;f=e+8|0;g=e;a=fh(a,20)|0;b=c[b>>2]|0;i=d;h=c[i+4>>2]|0;d=g;c[d>>2]=c[i>>2];c[d+4>>2]=h;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];ij(a,b,f);ja=e;return a|0}function ij(a,b,d){a=a|0;b=b|0;d=d|0;hh(a,60,1,1,1);c[a>>2]=22164;c[a+8>>2]=b;b=c[d+4>>2]|0;a=a+12|0;c[a>>2]=c[d>>2];c[a+4>>2]=b;return}function jj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=ja;ja=ja+32|0;e=d+24|0;g=d+16|0;h=d+8|0;f=d;dg(g,29753);c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];sh(b,e);Mf(c[a+8>>2]|0,b);dg(h,29749);c[e>>2]=c[h>>2];c[e+4>>2]=c[h+4>>2];sh(b,e);h=a+12|0;g=c[h+4>>2]|0;a=f;c[a>>2]=c[h>>2];c[a+4>>2]=g;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);ja=d;return}function kj(a){a=a|0;Gf(a);return}function lj(a,b){a=a|0;b=b|0;return mj(a+368|0,b)|0}function mj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;a=fh(a,16)|0;h=b;g=c[h+4>>2]|0;b=f;c[b>>2]=c[h>>2];c[b+4>>2]=g;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];nj(a,e);ja=d;return a|0}function nj(a,b){a=a|0;b=b|0;var d=0;hh(a,64,1,1,1);c[a>>2]=22208;d=b;b=c[d+4>>2]|0;a=a+8|0;c[a>>2]=c[d>>2];c[a+4>>2]=b;return}function oj(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;m=ja;ja=ja+64|0;k=m+48|0;i=m+40|0;l=m;j=m+56|0;h=b+8|0;b=uh(h)|0;if(((di(h)|0)+1-b|0)>>>0>20){h=i+8|0;e=i;f=0;while(1){if((f|0)==20)break;n=a[b+f>>0]|0;o=a[b+(f|1)>>0]|0;a[e>>0]=((o+-48|0)>>>0<10?208:169)+o+(((n+-48|0)>>>0<10?0:9)+n<<4);e=e+1|0;f=f+2|0}e=i;b=h+2|0;while(1){b=b+-1|0;if(e>>>0>=b>>>0)break;o=a[e>>0]|0;a[e>>0]=a[b>>0]|0;a[b>>0]=o;e=e+1|0}b=l;e=b+40|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(e|0));g[k>>3]=+g[i>>3];ig(j,l,l+(ue(l,40,30116,k)|0)|0);c[k>>2]=c[j>>2];c[k+4>>2]=c[j+4>>2];sh(d,k)}ja=m;return}function pj(a){a=a|0;Gf(a);return}function qj(a,b){a=a|0;b=b|0;return rj(a+368|0,b)|0}function rj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;a=fh(a,16)|0;h=b;g=c[h+4>>2]|0;b=f;c[b>>2]=c[h>>2];c[b+4>>2]=g;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sj(a,e);ja=d;return a|0}function sj(a,b){a=a|0;b=b|0;var d=0;hh(a,63,1,1,1);c[a>>2]=22252;d=b;b=c[d+4>>2]|0;a=a+8|0;c[a>>2]=c[d>>2];c[a+4>>2]=b;return}function tj(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;m=ja;ja=ja+64|0;k=m+40|0;i=m+32|0;l=m;j=m+48|0;h=b+8|0;e=uh(h)|0;if(((di(h)|0)+1-e|0)>>>0>16){b=i+8|0;f=i;h=0;while(1){if((h|0)==16)break;n=a[e+h>>0]|0;o=a[e+(h|1)>>0]|0;a[f>>0]=((o+-48|0)>>>0<10?208:169)+o+(((n+-48|0)>>>0<10?0:9)+n<<4);f=f+1|0;h=h+2|0}e=i;while(1){b=b+-1|0;if(e>>>0>=b>>>0)break;o=a[e>>0]|0;a[e>>0]=a[b>>0]|0;a[b>>0]=o;e=e+1|0}c[l>>2]=0;c[l+4>>2]=0;c[l+8>>2]=0;c[l+12>>2]=0;c[l+16>>2]=0;c[l+20>>2]=0;c[l+24>>2]=0;c[l+28>>2]=0;g[k>>3]=+g[i>>3];ig(j,l,l+(ue(l,32,30177,k)|0)|0);c[k>>2]=c[j>>2];c[k+4>>2]=c[j+4>>2];sh(d,k)}ja=m;return}function uj(a){a=a|0;Gf(a);return}function vj(a,b){a=a|0;b=b|0;return wj(a+368|0,b)|0}function wj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;a=fh(a,16)|0;h=b;g=c[h+4>>2]|0;b=f;c[b>>2]=c[h>>2];c[b+4>>2]=g;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];xj(a,e);ja=d;return a|0}function xj(a,b){a=a|0;b=b|0;var d=0;hh(a,62,1,1,1);c[a>>2]=22296;d=b;b=c[d+4>>2]|0;a=a+8|0;c[a>>2]=c[d>>2];c[a+4>>2]=b;return}function yj(b,d){b=b|0;d=d|0;var e=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;n=ja;ja=ja+48|0;l=n+24|0;j=n+40|0;m=n;k=n+32|0;i=b+8|0;e=uh(i)|0;if(((di(i)|0)+1-e|0)>>>0>8){b=j+4|0;h=j;i=0;while(1){if((i|0)==8)break;o=a[e+i>>0]|0;p=a[e+(i|1)>>0]|0;a[h>>0]=((p+-48|0)>>>0<10?208:169)+p+(((o+-48|0)>>>0<10?0:9)+o<<4);h=h+1|0;i=i+2|0}e=j;while(1){b=b+-1|0;if(e>>>0>=b>>>0)break;p=a[e>>0]|0;a[e>>0]=a[b>>0]|0;a[b>>0]=p;e=e+1|0}c[m>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;c[m+12>>2]=0;c[m+16>>2]=0;c[m+20>>2]=0;g[l>>3]=+f[j>>2];ig(k,m,m+(ue(m,24,30236,l)|0)|0);c[l>>2]=c[k>>2];c[l+4>>2]=c[k+4>>2];sh(d,l)}ja=n;return}function zj(a){a=a|0;Gf(a);return}function Aj(a,b){a=a|0;b=b|0;a=fh(a,12)|0;Bj(a,(c[b>>2]|0)!=0);return a|0}function Bj(b,d){b=b|0;d=d|0;hh(b,59,1,1,1);c[b>>2]=22340;a[b+8>>0]=d&1;return}function Cj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;g=ja;ja=ja+16|0;f=g+8|0;e=g;if(!(a[b+8>>0]|0))dg(e,37693);else dg(e,37699);c[f>>2]=c[e>>2];c[f+4>>2]=c[e+4>>2];sh(d,f);ja=g;return}function Dj(a){a=a|0;Gf(a);return}function Ej(a,b,c){a=a|0;b=b|0;c=c|0;return Fj(a+368|0,b,c)|0}function Fj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=ja;ja=ja+32|0;f=e+24|0;g=e+16|0;i=e+8|0;h=e;a=fh(a,24)|0;k=b;b=c[k+4>>2]|0;j=i;c[j>>2]=c[k>>2];c[j+4>>2]=b;j=d;b=c[j+4>>2]|0;d=h;c[d>>2]=c[j>>2];c[d+4>>2]=b;c[g>>2]=c[i>>2];c[g+4>>2]=c[i+4>>2];c[f>>2]=c[h>>2];c[f+4>>2]=c[h+4>>2];Gj(a,g,f);ja=e;return a|0}function Gj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;hh(a,61,1,1,1);c[a>>2]=22384;f=b;e=c[f+4>>2]|0;b=a+8|0;c[b>>2]=c[f>>2];c[b+4>>2]=e;b=d;d=c[b+4>>2]|0;a=a+16|0;c[a>>2]=c[b>>2];c[a+4>>2]=d;return}function Hj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;n=ja;ja=ja+64|0;m=n+56|0;e=n+48|0;f=n+16|0;g=n+40|0;i=n+32|0;j=n+24|0;k=n+8|0;l=n;h=b+8|0;if((th(h)|0)>>>0>3){dg(e,29753);c[m>>2]=c[e>>2];c[m+4>>2]=c[e+4>>2];sh(d,m);p=h;o=c[p+4>>2]|0;e=f;c[e>>2]=c[p>>2];c[e+4>>2]=o;c[m>>2]=c[f>>2];c[m+4>>2]=c[f+4>>2];sh(d,m);dg(g,29749);c[m>>2]=c[g>>2];c[m+4>>2]=c[g+4>>2];sh(d,m)}e=b+16|0;if((a[(Jj(e)|0)>>0]|0)==110){dg(i,30340);c[m>>2]=c[i>>2];c[m+4>>2]=c[i+4>>2];sh(d,m);Kj(j,e,1);c[m>>2]=c[j>>2];c[m+4>>2]=c[j+4>>2];sh(d,m)}else{j=e;o=c[j+4>>2]|0;p=k;c[p>>2]=c[j>>2];c[p+4>>2]=o;c[m>>2]=c[k>>2];c[m+4>>2]=c[k+4>>2];sh(d,m)}if((th(h)|0)>>>0<4){k=h;o=c[k+4>>2]|0;p=l;c[p>>2]=c[k>>2];c[p+4>>2]=o;c[m>>2]=c[l>>2];c[m+4>>2]=c[l+4>>2];sh(d,m)}ja=n;return}function Ij(a){a=a|0;Gf(a);return}function Jj(a){a=a|0;return uh(a)|0}function Kj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=th(b)|0;ig(a,(c[b>>2]|0)+(e>>>0>d>>>0?d:e+-1|0)|0,c[b+4>>2]|0);return}function Lj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;a=fh(a,16)|0;h=b;g=c[h+4>>2]|0;b=f;c[b>>2]=c[h>>2];c[b+4>>2]=g;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];Mj(a,e);ja=d;return a|0}function Mj(a,b){a=a|0;b=b|0;var d=0;hh(a,28,1,1,1);c[a>>2]=22428;d=b;b=c[d+4>>2]|0;a=a+8|0;c[a>>2]=c[d>>2];c[a+4>>2]=b;return}function Nj(a,b){a=a|0;b=b|0;wi(a+8|0,b);return}function Oj(a){a=a|0;Gf(a);return}function Pj(a){a=a|0;var b=0,d=0,e=0,f=0;e=ja;ja=ja+32|0;d=e+16|0;f=e+8|0;b=e;dg(f,32696);c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];if(!(eg(a,d)|0)){dg(b,32699);c[d>>2]=c[b>>2];c[d+4>>2]=c[b+4>>2];if((eg(a,d)|0?(mg(d,a,0),!(ng(d)|0)):0)?lg(a,112)|0:0){an(a)|0;mg(d,a,0);if(lg(a,95)|0)b=bn(a,d)|0;else b=0}else b=0}else{an(a)|0;mg(d,a,0);if(lg(a,95)|0)b=bn(a,d)|0;else b=0}ja=e;return b|0}function Qj(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0;P=ja;ja=ja+288|0;N=P+8|0;L=P+272|0;M=P;d=P+264|0;s=P+256|0;t=P+248|0;u=P+240|0;v=P+232|0;w=P+224|0;x=P+216|0;y=P+208|0;z=P+200|0;A=P+192|0;B=P+184|0;C=P+176|0;D=P+168|0;E=P+160|0;F=P+152|0;G=P+144|0;H=P+136|0;e=P+128|0;f=P+120|0;g=P+112|0;h=P+104|0;i=P+96|0;j=P+88|0;k=P+80|0;l=P+72|0;m=P+64|0;n=P+56|0;o=P+48|0;p=P+40|0;q=P+32|0;r=P+24|0;K=P+16|0;if(lg(b,102)|0){I=hg(b,0)|0;switch(I<<24>>24){case 76:case 108:{O=1;J=4;break}case 82:case 114:{O=0;J=4;break}default:d=0}if((J|0)==4){a[L>>0]=O;c[b>>2]=(c[b>>2]|0)+1;rh(M);dg(d,32549);c[N>>2]=c[d>>2];c[N+4>>2]=c[d+4>>2];do if(eg(b,N)|0){dg(N,29757);G=N;H=c[G+4>>2]|0;J=M;c[J>>2]=c[G>>2];c[J+4>>2]=H;J=66}else{dg(s,32552);c[N>>2]=c[s>>2];c[N+4>>2]=c[s+4>>2];if(eg(b,N)|0){dg(N,29755);G=N;H=c[G+4>>2]|0;J=M;c[J>>2]=c[G>>2];c[J+4>>2]=H;J=66;break}dg(t,32555);c[N>>2]=c[t>>2];c[N+4>>2]=c[t+4>>2];if(eg(b,N)|0){dg(N,30453);G=N;H=c[G+4>>2]|0;J=M;c[J>>2]=c[G>>2];c[J+4>>2]=H;J=66;break}dg(u,32558);c[N>>2]=c[u>>2];c[N+4>>2]=c[u+4>>2];if(eg(b,N)|0){dg(N,30456);G=N;H=c[G+4>>2]|0;J=M;c[J>>2]=c[G>>2];c[J+4>>2]=H;J=66;break}dg(v,32561);c[N>>2]=c[v>>2];c[N+4>>2]=c[v+4>>2];if(eg(b,N)|0){dg(N,30468);G=N;H=c[G+4>>2]|0;J=M;c[J>>2]=c[G>>2];c[J+4>>2]=H;J=66;break}dg(w,32564);c[N>>2]=c[w>>2];c[N+4>>2]=c[w+4>>2];if(eg(b,N)|0){dg(N,30472);G=N;H=c[G+4>>2]|0;J=M;c[J>>2]=c[G>>2];c[J+4>>2]=H;J=66;break}dg(x,32567);c[N>>2]=c[x>>2];c[N+4>>2]=c[x+4>>2];if(eg(b,N)|0){dg(N,30475);G=N;H=c[G+4>>2]|0;J=M;c[J>>2]=c[G>>2];c[J+4>>2]=H;J=66;break}dg(y,32570);c[N>>2]=c[y>>2];c[N+4>>2]=c[y+4>>2];if(eg(b,N)|0){dg(N,30477);G=N;H=c[G+4>>2]|0;J=M;c[J>>2]=c[G>>2];c[J+4>>2]=H;J=66;break}dg(z,32573);c[N>>2]=c[z>>2];c[N+4>>2]=c[z+4>>2];if(eg(b,N)|0){dg(N,30480);G=N;H=c[G+4>>2]|0;J=M;c[J>>2]=c[G>>2];c[J+4>>2]=H;J=66;break}dg(A,32576);c[N>>2]=c[A>>2];c[N+4>>2]=c[A+4>>2];if(eg(b,N)|0){dg(N,30482);G=N;H=c[G+4>>2]|0;J=M;c[J>>2]=c[G>>2];c[J+4>>2]=H;J=66;break}dg(B,32579);c[N>>2]=c[B>>2];c[N+4>>2]=c[B+4>>2];if(eg(b,N)|0){dg(N,30485);G=N;H=c[G+4>>2]|0;J=M;c[J>>2]=c[G>>2];c[J+4>>2]=H;J=66;break}dg(C,32582);c[N>>2]=c[C>>2];c[N+4>>2]=c[C+4>>2];if(eg(b,N)|0){dg(N,30488);G=N;H=c[G+4>>2]|0;J=M;c[J>>2]=c[G>>2];c[J+4>>2]=H;J=66;break}dg(D,32585);c[N>>2]=c[D>>2];c[N+4>>2]=c[D+4>>2];if(eg(b,N)|0){dg(N,29828);G=N;H=c[G+4>>2]|0;J=M;c[J>>2]=c[G>>2];c[J+4>>2]=H;J=66;break}dg(E,32588);c[N>>2]=c[E>>2];c[N+4>>2]=c[E+4>>2];if(eg(b,N)|0){dg(N,30491);G=N;H=c[G+4>>2]|0;J=M;c[J>>2]=c[G>>2];c[J+4>>2]=H;J=66;break}dg(F,32591);c[N>>2]=c[F>>2];c[N+4>>2]=c[F+4>>2];if(eg(b,N)|0){dg(N,30494);G=N;H=c[G+4>>2]|0;J=M;c[J>>2]=c[G>>2];c[J+4>>2]=H;J=66;break}dg(G,32594);c[N>>2]=c[G>>2];c[N+4>>2]=c[G+4>>2];if(eg(b,N)|0){dg(N,30497);G=N;H=c[G+4>>2]|0;J=M;c[J>>2]=c[G>>2];c[J+4>>2]=H;J=66;break}dg(H,32597);c[N>>2]=c[H>>2];c[N+4>>2]=c[H+4>>2];if(eg(b,N)|0){dg(N,29935);G=N;H=c[G+4>>2]|0;J=M;c[J>>2]=c[G>>2];c[J+4>>2]=H;J=66;break}dg(e,32600);c[N>>2]=c[e>>2];c[N+4>>2]=c[e+4>>2];if(eg(b,N)|0){dg(N,30340);G=N;H=c[G+4>>2]|0;J=M;c[J>>2]=c[G>>2];c[J+4>>2]=H;J=66;break}dg(f,32603);c[N>>2]=c[f>>2];c[N+4>>2]=c[f+4>>2];if(eg(b,N)|0){dg(N,30501);G=N;H=c[G+4>>2]|0;J=M;c[J>>2]=c[G>>2];c[J+4>>2]=H;J=66;break}dg(g,32606);c[N>>2]=c[g>>2];c[N+4>>2]=c[g+4>>2];if(eg(b,N)|0){dg(N,29822);G=N;H=c[G+4>>2]|0;J=M;c[J>>2]=c[G>>2];c[J+4>>2]=H;J=66;break}dg(h,32609);c[N>>2]=c[h>>2];c[N+4>>2]=c[h+4>>2];if(eg(b,N)|0){dg(N,30504);G=N;H=c[G+4>>2]|0;J=M;c[J>>2]=c[G>>2];c[J+4>>2]=H;J=66;break}dg(i,32612);c[N>>2]=c[i>>2];c[N+4>>2]=c[i+4>>2];if(eg(b,N)|0){dg(N,30510);G=N;H=c[G+4>>2]|0;J=M;c[J>>2]=c[G>>2];c[J+4>>2]=H;J=66;break}dg(j,32615);c[N>>2]=c[j>>2];c[N+4>>2]=c[j+4>>2];if(eg(b,N)|0){dg(N,30515);G=N;H=c[G+4>>2]|0;J=M;c[J>>2]=c[G>>2];c[J+4>>2]=H;J=66;break}dg(k,32618);c[N>>2]=c[k>>2];c[N+4>>2]=c[k+4>>2];if(eg(b,N)|0){dg(N,30518);G=N;H=c[G+4>>2]|0;J=M;c[J>>2]=c[G>>2];c[J+4>>2]=H;J=66;break}dg(l,32621);c[N>>2]=c[l>>2];c[N+4>>2]=c[l+4>>2];if(eg(b,N)|0){dg(N,30520);G=N;H=c[G+4>>2]|0;J=M;c[J>>2]=c[G>>2];c[J+4>>2]=H;J=66;break}dg(m,32624);c[N>>2]=c[m>>2];c[N+4>>2]=c[m+4>>2];if(eg(b,N)|0){dg(N,30527);G=N;H=c[G+4>>2]|0;J=M;c[J>>2]=c[G>>2];c[J+4>>2]=H;J=66;break}dg(n,32627);c[N>>2]=c[n>>2];c[N+4>>2]=c[n+4>>2];if(eg(b,N)|0){dg(N,30529);G=N;H=c[G+4>>2]|0;J=M;c[J>>2]=c[G>>2];c[J+4>>2]=H;J=66;break}dg(o,32630);c[N>>2]=c[o>>2];c[N+4>>2]=c[o+4>>2];if(eg(b,N)|0){dg(N,30538);G=N;H=c[G+4>>2]|0;J=M;c[J>>2]=c[G>>2];c[J+4>>2]=H;J=66;break}dg(p,32633);c[N>>2]=c[p>>2];c[N+4>>2]=c[p+4>>2];if(eg(b,N)|0){dg(N,30540);G=N;H=c[G+4>>2]|0;J=M;c[J>>2]=c[G>>2];c[J+4>>2]=H;J=66;break}dg(q,32636);c[N>>2]=c[q>>2];c[N+4>>2]=c[q+4>>2];if(eg(b,N)|0){dg(N,30543);G=N;H=c[G+4>>2]|0;J=M;c[J>>2]=c[G>>2];c[J+4>>2]=H;J=66;break}dg(r,32639);c[N>>2]=c[r>>2];c[N+4>>2]=c[r+4>>2];if(!(eg(b,N)|0)){d=0;break}dg(N,30546);G=N;H=c[G+4>>2]|0;J=M;c[J>>2]=c[G>>2];c[J+4>>2]=H;J=66}while(0);if((J|0)==66){d=fg(b)|0;J=_i(d)|0;c[N>>2]=J;c[K>>2]=0;e=J;a:do if(!J)d=0;else{switch(I<<24>>24){case 76:case 82:{d=_i(d)|0;c[K>>2]=d;if(!d){d=0;break a}if(O<<24>>24){c[N>>2]=d;c[K>>2]=e}break}default:{}}d=Wm(b,L,M,N,K)|0}while(0)}}}else d=0;ja=P;return d|0}function Rj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;g=ja;ja=ja+16|0;d=g+4|0;e=g;f=fg(a)|0;h=_i(f)|0;c[d>>2]=h;if(!h)b=0;else{h=_i(f)|0;c[e>>2]=h;if(!h)b=0;else b=Rm(a,d,b,e)|0}ja=g;return b|0}function Sj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;e=ja;ja=ja+16|0;d=e;f=_i(fg(a)|0)|0;c[d>>2]=f;if(!f)d=0;else d=Mm(a,b,d)|0;ja=e;return d|0}function Tj(a,b,c){a=a|0;b=b|0;c=c|0;return Lm(a+368|0,b,c,29749)|0}function Uj(a,b,c){a=a|0;b=b|0;c=c|0;return Km(a+368|0,32438,b,c)|0}function Vj(a,b,c){a=a|0;b=b|0;c=c|0;return Gm(a+368|0,b,c)|0}function Wj(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;h=ja;ja=ja+32|0;g=h+24|0;e=h+16|0;f=h+8|0;b=h;dg(e,32337);c[g>>2]=c[e>>2];c[g+4>>2]=c[e+4>>2];if(eg(a,g)|0){Ph(f,a+360|0,0);d=fg(a)|0;e=pg(d)|0;c[g>>2]=e;Th(f);do if(e){if(!(lg(a,95)|0)){e=_i(d)|0;c[f>>2]=e;if(!e)b=0;else{Ai(b,a,f,f+4|0);b=Am(a,g,b)|0}break}b=a+8|0;e=Xg(b)|0;while(1){if(lg(a,69)|0){d=9;break}i=_i(d)|0;c[f>>2]=i;if(!i){d=7;break}Wg(b,f)}if((d|0)==7){b=0;break}else if((d|0)==9){qi(f,a,e);b=zm(a,g,f)|0;break}}else b=0;while(0)}else b=0;ja=h;return b|0}function Xj(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return vm(a+368|0,b,c,d)|0}function Yj(a,b,c){a=a|0;b=b|0;c=c|0;return um(a+368|0,32266,b,c)|0}function Zj(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;h=ja;ja=ja+48|0;f=h+32|0;g=h+8|0;i=h+24|0;b=h+16|0;d=h;c[g>>2]=0;dg(i,31476);c[f>>2]=c[i>>2];c[f+4>>2]=c[i+4>>2];a:do if(eg(a,f)|0){b=fg(a)|0;i=Ol(b)|0;c[g>>2]=i;if(!i)b=0;else{do if((hg(a,0)|0)<<24>>24==73){i=Pg(b,0)|0;c[f>>2]=i;if(!i){b=0;break a}else{c[g>>2]=Qg(a,g,f)|0;break}}while(0);while(1){if(lg(a,69)|0)break;i=Pl(b)|0;c[f>>2]=i;if(!i){e=35;break}c[g>>2]=Ql(a,g,f)|0}if((e|0)==35){b=0;break}i=Rl(b)|0;c[f>>2]=i;if(!i)b=0;else b=Ql(a,g,f)|0}}else{dg(b,30450);c[f>>2]=c[b>>2];c[f+4>>2]=c[b+4>>2];e=eg(a,f)|0;dg(d,31480);c[f>>2]=c[d>>2];c[f+4>>2]=c[d+4>>2];if(!(eg(a,f)|0)){b=Rl(fg(a)|0)|0;c[g>>2]=b;if((b|0)==0|e^1)break;b=Sl(a,g)|0;c[g>>2]=b;break}b:do if((((hg(a,0)|0)<<24>>24)+-48|0)>>>0>=10){b=fg(a)|0;i=Ol(b)|0;c[g>>2]=i;if(!i){b=0;break a}if((hg(a,0)|0)<<24>>24==73){i=Pg(b,0)|0;c[f>>2]=i;if(!i){b=0;break a}else{c[g>>2]=Qg(a,g,f)|0;break}}}else{while(1){b=fg(a)|0;d=Pl(b)|0;c[f>>2]=d;if(!d)break;do if(!(c[g>>2]|0))if(e){c[g>>2]=Sl(a,f)|0;break}else{c[g>>2]=d;break}else c[g>>2]=Ql(a,g,f)|0;while(0);if(lg(a,69)|0)break b}b=0;break a}while(0);i=Rl(b)|0;c[f>>2]=i;if(!i)b=0;else b=Ql(a,g,f)|0}while(0);ja=h;return b|0}function _j(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return Nl(a+368|0,b,c,d)|0}function $j(a,b,c){a=a|0;b=b|0;c=c|0;return Jl(a+368|0,b,31427,c)|0}function ak(a,b,c){a=a|0;b=b|0;c=c|0;return Fl(a+368|0,b,c)|0}function bk(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;i=ja;ja=ja+16|0;e=i+8|0;f=i+4|0;g=i;a:do if((hg(b,0)|0)<<24>>24==100)switch((hg(b,1)|0)<<24>>24|0){case 105:{c[b>>2]=(c[b>>2]|0)+2;d=fg(b)|0;j=ll(d)|0;c[e>>2]=j;if(!j)d=0;else{j=bk(d)|0;c[f>>2]=j;if(!j)d=0;else{a[g>>0]=0;d=ml(b,e,f,g)|0}}break a}case 120:{c[b>>2]=(c[b>>2]|0)+2;d=fg(b)|0;j=_i(d)|0;c[e>>2]=j;if(!j)d=0;else{j=bk(d)|0;c[f>>2]=j;if(!j)d=0;else{a[g>>0]=1;d=ml(b,e,f,g)|0}}break a}case 88:{c[b>>2]=(c[b>>2]|0)+2;d=fg(b)|0;j=_i(d)|0;c[e>>2]=j;if(!j)d=0;else{j=_i(d)|0;c[f>>2]=j;if(!j)d=0;else{j=bk(d)|0;c[g>>2]=j;if(!j)d=0;else d=nl(b,e,f,g)|0}}break a}default:{h=20;break a}}else h=20;while(0);if((h|0)==20)d=_i(fg(b)|0)|0;ja=i;return d|0}function ck(a,b,c){a=a|0;b=b|0;c=c|0;return kl(a+368|0,b,c)|0}function dk(a,b,c){a=a|0;b=b|0;c=c|0;return gl(a+368|0,b,c)|0}function ek(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;m=ja;ja=ja+64|0;k=m+48|0;h=m+57|0;n=m+40|0;i=m+56|0;f=m+32|0;d=m+24|0;g=m+16|0;j=m+8|0;e=m;dg(n,30450);c[k>>2]=c[n>>2];c[k+4>>2]=c[n+4>>2];a[h>>0]=(eg(b,k)|0)&1;a[i>>0]=(hg(b,1)|0)<<24>>24==97&1;dg(f,31064);c[k>>2]=c[f>>2];c[k+4>>2]=c[f+4>>2];if(!(eg(b,k)|0)?(dg(d,31067),c[k>>2]=c[d>>2],c[k+4>>2]=c[d+4>>2],!(eg(b,k)|0)):0)d=0;else l=3;do if((l|0)==3){f=b+8|0;d=Xg(f)|0;while(1){if(lg(b,95)|0)break;n=_i(fg(b)|0)|0;c[k>>2]=n;if(!n){l=7;break}Wg(f,k)}if((l|0)==7){d=0;break}qi(g,b,d);d=fg(b)|0;n=pg(d)|0;c[j>>2]=n;do if(n){dg(e,31070);c[k>>2]=c[e>>2];c[k+4>>2]=c[e+4>>2];if(!(eg(b,k)|0)){if(!(lg(b,69)|0)){d=0;break}_k(k);d=$k(b,g,j,k,h,i)|0;break}e=Xg(f)|0;while(1){if(lg(b,69)|0){l=15;break}n=_i(d)|0;c[k>>2]=n;if(!n){l=13;break}Wg(f,k)}if((l|0)==13){d=0;break}else if((l|0)==15){qi(k,b,e);d=Zk(b,g,j,k,h,i)|0;break}}else d=0;while(0)}while(0);ja=m;return d|0}function fk(a,b){a=a|0;b=b|0;return Yk(a+368|0,31053,b,29749)|0}function gk(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return Uk(a+368|0,b,c,d)|0}function hk(a,b,c){a=a|0;b=b|0;c=c|0;return Tk(a+368|0,30972,b,c)|0}function ik(a,b,c){a=a|0;b=b|0;c=c|0;return Pk(a+368|0,30913,b,c)|0}function jk(a,b,c){a=a|0;b=b|0;c=c|0;return Ok(a+368|0,b,c,29749)|0}function kk(a,b){a=a|0;b=b|0;return Fk(a+368|0,b)|0}function lk(a,b){a=a|0;b=b|0;return Bk(a+368|0,30725,b,29749)|0}function mk(a,b){a=a|0;b=b|0;return xk(a+368|0,b)|0}function nk(a,b,c){a=a|0;b=b|0;c=c|0;return tk(a+368|0,b,c)|0}function ok(a,b){a=a|0;b=b|0;return pk(a+368|0,b)|0}function pk(a,b){a=a|0;b=b|0;a=fh(a,12)|0;qk(a,c[b>>2]|0);return a|0}function qk(a,b){a=a|0;b=b|0;hh(a,58,1,1,1);c[a>>2]=22472;c[a+8>>2]=b;return}function rk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;dg(f,30574);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);Mf(c[a+8>>2]|0,b);ja=d;return}function sk(a){a=a|0;Gf(a);return}function tk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=ja;ja=ja+16|0;f=e+8|0;g=e;a=fh(a,20)|0;b=c[b>>2]|0;i=d;h=c[i+4>>2]|0;d=g;c[d>>2]=c[i>>2];c[d+4>>2]=h;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];uk(a,b,f);ja=e;return a|0}function uk(a,b,d){a=a|0;b=b|0;d=d|0;hh(a,56,1,1,1);c[a>>2]=22516;c[a+8>>2]=b;b=c[d+4>>2]|0;a=a+12|0;c[a>>2]=c[d>>2];c[a+4>>2]=b;return}function vk(a,b){a=a|0;b=b|0;var d=0;d=c[a+8>>2]|0;if(d|0)Mf(d,b);Nf(b,123);wi(a+12|0,b);Nf(b,125);return}function wk(a){a=a|0;Gf(a);return}function xk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;a=fh(a,16)|0;h=b;g=c[h+4>>2]|0;b=f;c[b>>2]=c[h>>2];c[b+4>>2]=g;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];yk(a,e);ja=d;return a|0}function yk(a,b){a=a|0;b=b|0;var d=0;hh(a,0,1,1,1);c[a>>2]=22560;d=b;b=c[d+4>>2]|0;a=a+8|0;c[a>>2]=c[d>>2];c[a+4>>2]=b;return}function zk(a,b){a=a|0;b=b|0;wi(a+8|0,b);return}function Ak(a){a=a|0;Gf(a);return}function Bk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=ja;ja=ja+32|0;g=f+24|0;h=f+16|0;j=f+8|0;i=f;a=fh(a,28)|0;dg(j,b);d=c[d>>2]|0;dg(i,e);c[h>>2]=c[j>>2];c[h+4>>2]=c[j+4>>2];c[g>>2]=c[i>>2];c[g+4>>2]=c[i+4>>2];Ck(a,h,d,g);ja=f;return a|0}function Ck(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;hh(a,47,1,1,1);c[a>>2]=22604;g=b;f=c[g+4>>2]|0;b=a+8|0;c[b>>2]=c[g>>2];c[b+4>>2]=f;c[a+16>>2]=d;b=c[e+4>>2]|0;a=a+20|0;c[a>>2]=c[e>>2];c[a+4>>2]=b;return}function Dk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;d=ja;ja=ja+32|0;e=d+16|0;h=d+8|0;f=d;j=a+8|0;i=c[j+4>>2]|0;g=h;c[g>>2]=c[j>>2];c[g+4>>2]=i;c[e>>2]=c[h>>2];c[e+4>>2]=c[h+4>>2];sh(b,e);Mf(c[a+16>>2]|0,b);h=a+20|0;g=c[h+4>>2]|0;a=f;c[a>>2]=c[h>>2];c[a+4>>2]=g;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);ja=d;return}function Ek(a){a=a|0;Gf(a);return}function Fk(a,b){a=a|0;b=b|0;a=fh(a,12)|0;Gk(a,c[b>>2]|0);return a|0}function Gk(a,b){a=a|0;b=b|0;hh(a,49,1,1,1);c[a>>2]=22648;c[a+8>>2]=b;return}function Hk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=ja;ja=ja+48|0;e=d+32|0;h=d+24|0;g=d+8|0;f=d;dg(h,30787);c[e>>2]=c[h>>2];c[e+4>>2]=c[h+4>>2];sh(b,e);Jk(g,c[a+8>>2]|0);Kk(g,b);dg(f,29749);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);ja=d;return}function Ik(a){a=a|0;Gf(a);return}function Jk(a,b){a=a|0;b=b|0;hh(a,29,1,1,1);c[a>>2]=22692;c[a+8>>2]=b;return}function Kk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;m=ja;ja=ja+64|0;l=m+48|0;i=m+32|0;j=m+8|0;f=m+24|0;k=m;h=b+12|0;Lk(i,h);d=b+16|0;Lk(j,d);g=Of(b)|0;e=a+8|0;Mf(c[e>>2]|0,b);d=c[d>>2]|0;a:do switch(d|0){case -1:{dg(f,29253);c[l>>2]=c[f>>2];c[l+4>>2]=c[f+4>>2];sh(b,l);break}case 0:{yi(b,g);break}default:{a=1;while(1){if(a>>>0>=d>>>0)break a;dg(k,29937);c[l>>2]=c[k>>2];c[l+4>>2]=c[k+4>>2];sh(b,l);c[h>>2]=a;Mf(c[e>>2]|0,b);a=a+1|0}}}while(0);Mk(j);Mk(i);ja=m;return}function Lk(b,d){b=b|0;d=d|0;c[b>>2]=d;c[b+4>>2]=c[d>>2];a[b+8>>0]=1;c[d>>2]=-1;return}function Mk(b){b=b|0;if(a[b+8>>0]|0)c[c[b>>2]>>2]=c[b+4>>2];return}function Nk(a){a=a|0;Gf(a);return}function Ok(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=ja;ja=ja+32|0;g=f+24|0;h=f+16|0;j=f+8|0;i=f;a=fh(a,28)|0;dg(j,b);d=c[d>>2]|0;dg(i,e);c[h>>2]=c[j>>2];c[h+4>>2]=c[j+4>>2];c[g>>2]=c[i>>2];c[g+4>>2]=c[i+4>>2];Ck(a,h,d,g);ja=f;return a|0}function Pk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=ja;ja=ja+16|0;g=f+8|0;h=f;a=fh(a,24)|0;dg(h,b);d=c[d>>2]|0;e=c[e>>2]|0;c[g>>2]=c[h>>2];c[g+4>>2]=c[h+4>>2];Qk(a,g,d,e);ja=f;return a|0}function Qk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;hh(a,48,1,1,1);c[a>>2]=22736;g=b;f=c[g+4>>2]|0;b=a+8|0;c[b>>2]=c[g>>2];c[b+4>>2]=f;c[a+16>>2]=d;c[a+20>>2]=e;return}function Rk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;d=ja;ja=ja+48|0;e=d+32|0;i=d;h=d+24|0;g=d+16|0;f=d+8|0;l=a+8|0;k=c[l+4>>2]|0;j=i;c[j>>2]=c[l>>2];c[j+4>>2]=k;c[e>>2]=c[i>>2];c[e+4>>2]=c[i+4>>2];sh(b,e);dg(h,29935);c[e>>2]=c[h>>2];c[e+4>>2]=c[h+4>>2];sh(b,e);h=c[a+16>>2]|0;za[c[(c[h>>2]|0)+16>>2]&127](h,b);dg(g,30925);c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];sh(b,e);a=c[a+20>>2]|0;za[c[(c[a>>2]|0)+16>>2]&127](a,b);dg(f,29749);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);ja=d;return}function Sk(a){a=a|0;Gf(a);return}function Tk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=ja;ja=ja+16|0;g=f+8|0;h=f;a=fh(a,24)|0;dg(h,b);d=c[d>>2]|0;e=c[e>>2]|0;c[g>>2]=c[h>>2];c[g+4>>2]=c[h+4>>2];Qk(a,g,d,e);ja=f;return a|0}function Uk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;a=fh(a,20)|0;Vk(a,c[b>>2]|0,c[d>>2]|0,c[e>>2]|0);return a|0}function Vk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;hh(a,45,1,1,1);c[a>>2]=22780;c[a+8>>2]=b;c[a+12>>2]=d;c[a+16>>2]=e;return}function Wk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;d=ja;ja=ja+48|0;e=d+32|0;i=d+24|0;h=d+16|0;g=d+8|0;f=d;dg(i,29753);c[e>>2]=c[i>>2];c[e+4>>2]=c[i+4>>2];sh(b,e);Mf(c[a+8>>2]|0,b);dg(h,30989);c[e>>2]=c[h>>2];c[e+4>>2]=c[h+4>>2];sh(b,e);Mf(c[a+12>>2]|0,b);dg(g,30995);c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];sh(b,e);Mf(c[a+16>>2]|0,b);dg(f,29749);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);ja=d;return}function Xk(a){a=a|0;Gf(a);return}function Yk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=ja;ja=ja+32|0;g=f+24|0;h=f+16|0;j=f+8|0;i=f;a=fh(a,28)|0;dg(j,b);d=c[d>>2]|0;dg(i,e);c[h>>2]=c[j>>2];c[h+4>>2]=c[j+4>>2];c[g>>2]=c[i>>2];c[g+4>>2]=c[i+4>>2];Ck(a,h,d,g);ja=f;return a|0}function Zk(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return fl(a+368|0,b,c,d,e,f)|0}function _k(a){a=a|0;c[a>>2]=0;c[a+4>>2]=0;return}function $k(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return al(a+368|0,b,c,d,e,f)|0}function al(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0;i=ja;ja=ja+32|0;j=i+24|0;k=i+16|0;m=i+8|0;l=i;b=fh(b,32)|0;o=d;d=c[o+4>>2]|0;n=m;c[n>>2]=c[o>>2];c[n+4>>2]=d;e=c[e>>2]|0;n=f;d=c[n+4>>2]|0;f=l;c[f>>2]=c[n>>2];c[f+4>>2]=d;g=(a[g>>0]|0)!=0;h=(a[h>>0]|0)!=0;c[k>>2]=c[m>>2];c[k+4>>2]=c[m+4>>2];c[j>>2]=c[l>>2];c[j+4>>2]=c[l+4>>2];bl(b,k,e,j,g,h);ja=i;return b|0}function bl(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0;hh(b,51,1,1,1);c[b>>2]=22824;j=d;i=c[j+4>>2]|0;d=b+8|0;c[d>>2]=c[j>>2];c[d+4>>2]=i;c[b+16>>2]=e;d=f;f=c[d+4>>2]|0;e=b+20|0;c[e>>2]=c[d>>2];c[e+4>>2]=f;a[b+28>>0]=g&1;a[b+29>>0]=h&1;return}function cl(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;m=ja;ja=ja+64|0;l=m+56|0;e=m+48|0;f=m+40|0;g=m+32|0;h=m+24|0;i=m+16|0;j=m+8|0;k=m;if(a[b+28>>0]|0){dg(e,31073);c[l>>2]=c[e>>2];c[l+4>>2]=c[e+4>>2];sh(d,l)}dg(f,31085);c[l>>2]=c[f>>2];c[l+4>>2]=c[f+4>>2];sh(d,l);if(a[b+29>>0]|0){dg(g,31089);c[l>>2]=c[g>>2];c[l+4>>2]=c[g+4>>2];sh(d,l)}Nf(d,32);e=b+8|0;if(!(el(e)|0)){dg(h,29753);c[l>>2]=c[h>>2];c[l+4>>2]=c[h+4>>2];sh(d,l);wi(e,d);dg(i,29749);c[l>>2]=c[i>>2];c[l+4>>2]=c[i+4>>2];sh(d,l)}Mf(c[b+16>>2]|0,d);e=b+20|0;if(!(el(e)|0)){dg(j,29753);c[l>>2]=c[j>>2];c[l+4>>2]=c[j+4>>2];sh(d,l);wi(e,d);dg(k,29749);c[l>>2]=c[k>>2];c[l+4>>2]=c[k+4>>2];sh(d,l)}ja=m;return}function dl(a){a=a|0;Gf(a);return}function el(a){a=a|0;return (c[a+4>>2]|0)==0|0}function fl(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0;i=ja;ja=ja+32|0;j=i+24|0;k=i+16|0;m=i+8|0;l=i;b=fh(b,32)|0;o=d;d=c[o+4>>2]|0;n=m;c[n>>2]=c[o>>2];c[n+4>>2]=d;e=c[e>>2]|0;n=f;d=c[n+4>>2]|0;f=l;c[f>>2]=c[n>>2];c[f+4>>2]=d;g=(a[g>>0]|0)!=0;h=(a[h>>0]|0)!=0;c[k>>2]=c[m>>2];c[k+4>>2]=c[m+4>>2];c[j>>2]=c[l>>2];c[j+4>>2]=c[l+4>>2];bl(b,k,e,j,g,h);ja=i;return b|0}function gl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=ja;ja=ja+16|0;f=e+8|0;g=e;a=fh(a,20)|0;b=c[b>>2]|0;dg(g,d);c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];hl(a,b,f);ja=e;return a|0}function hl(a,b,d){a=a|0;b=b|0;d=d|0;hh(a,44,1,1,1);c[a>>2]=22868;c[a+8>>2]=b;b=d;d=c[b+4>>2]|0;a=a+12|0;c[a>>2]=c[b>>2];c[a+4>>2]=d;return}function il(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=ja;ja=ja+32|0;e=d+24|0;g=d+16|0;h=d+8|0;f=d;dg(g,29753);c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];sh(b,e);Mf(c[a+8>>2]|0,b);dg(h,29749);c[e>>2]=c[h>>2];c[e+4>>2]=c[h+4>>2];sh(b,e);h=a+12|0;g=c[h+4>>2]|0;a=f;c[a>>2]=c[h>>2];c[a+4>>2]=g;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);ja=d;return}function jl(a){a=a|0;Gf(a);return}function kl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;b=ja;ja=ja+16|0;e=b+8|0;f=b;a=fh(a,20)|0;h=d;g=c[h+4>>2]|0;d=f;c[d>>2]=c[h>>2];c[d+4>>2]=g;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];uk(a,0,e);ja=b;return a|0}function ll(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;h=ja;ja=ja+32|0;g=h+24|0;d=h+16|0;e=h+8|0;f=h;c[d>>2]=0;if(!(wl(a,d)|0)?(i=kg(a)|0,b=c[d>>2]|0,(b+-1|0)>>>0<i>>>0):0){i=c[a>>2]|0;ig(e,i,i+b|0);c[a>>2]=(c[a>>2]|0)+b;dg(f,31292);c[g>>2]=c[f>>2];c[g+4>>2]=c[f+4>>2];if(xl(e,g)|0)b=yl(a)|0;else b=Hg(a,e)|0}else b=0;ja=h;return b|0}function ml(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return sl(a+368|0,b,c,d)|0}function nl(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return ol(a+368|0,b,c,d)|0}function ol(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;a=fh(a,20)|0;pl(a,c[b>>2]|0,c[d>>2]|0,c[e>>2]|0);return a|0}function pl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;hh(a,66,1,1,1);c[a>>2]=22912;c[a+8>>2]=b;c[a+12>>2]=d;c[a+16>>2]=e;return}function ql(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;g=ja;ja=ja+32|0;f=g+16|0;d=g+8|0;e=g;Nf(b,91);Mf(c[a+8>>2]|0,b);dg(d,31183);c[f>>2]=c[d>>2];c[f+4>>2]=c[d+4>>2];sh(b,f);Mf(c[a+12>>2]|0,b);Nf(b,93);d=a+16|0;a=c[d>>2]|0;if(((Uh(a)|0)+-65&255)>=2){dg(e,31189);c[f>>2]=c[e>>2];c[f+4>>2]=c[e+4>>2];sh(b,f);a=c[d>>2]|0}Mf(a,b);ja=g;return}function rl(a){a=a|0;Gf(a);return}function sl(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;b=fh(b,20)|0;tl(b,c[d>>2]|0,c[e>>2]|0,(a[f>>0]|0)!=0);return b|0}function tl(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;hh(b,65,1,1,1);c[b>>2]=22956;c[b+8>>2]=d;c[b+12>>2]=e;a[b+16>>0]=f&1;return}function ul(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;h=ja;ja=ja+16|0;g=h+8|0;f=h;if(!(a[b+16>>0]|0)){Nf(d,46);Mf(c[b+8>>2]|0,d)}else{Nf(d,91);Mf(c[b+8>>2]|0,d);Nf(d,93)}e=b+12|0;b=c[e>>2]|0;if(((Uh(b)|0)+-65&255)>=2){dg(f,31189);c[g>>2]=c[f>>2];c[g+4>>2]=c[f+4>>2];sh(d,g);b=c[e>>2]|0}Mf(b,d);ja=h;return}function vl(a){a=a|0;Gf(a);return}function wl(a,b){a=a|0;b=b|0;var d=0,e=0;c[b>>2]=0;a:do if(((hg(a,0)|0)+-48&255)>9)d=1;else{d=0;while(1){if(((hg(a,0)|0)+-48&255)>=10){d=0;break a}c[b>>2]=d*10;e=((El(a)|0)<<24>>24)+-48|0;e=e+(c[b>>2]|0)|0;c[b>>2]=e;d=e}}while(0);return d|0}function xl(b,c){b=b|0;c=c|0;var d=0,e=0;e=th(c)|0;a:do if(e>>>0>(th(b)|0)>>>0)c=0;else{d=uh(c)|0;e=di(c)|0;c=uh(b)|0;while(1){if((d|0)==(e|0)){c=1;break a}if((a[d>>0]|0)!=(a[c>>0]|0)){c=0;break a}d=d+1|0;c=c+1|0}}while(0);return c|0}function yl(a){a=a|0;return zl(a+368|0,31303)|0}function zl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;a=fh(a,16)|0;dg(f,b);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];Al(a,e);ja=d;return a|0}function Al(a,b){a=a|0;b=b|0;var d=0;hh(a,7,1,1,1);c[a>>2]=23e3;d=b;b=c[d+4>>2]|0;a=a+8|0;c[a>>2]=c[d>>2];c[a+4>>2]=b;return}function Bl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;h=a+8|0;g=c[h+4>>2]|0;a=f;c[a>>2]=c[h>>2];c[a+4>>2]=g;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);ja=d;return}function Cl(a,b){a=a|0;b=b|0;var d=0,e=0;e=b+8|0;d=c[e+4>>2]|0;b=a;c[b>>2]=c[e>>2];c[b+4>>2]=d;return}function Dl(a){a=a|0;Gf(a);return}function El(b){b=b|0;var d=0;d=c[b>>2]|0;if((d|0)==(c[b+4>>2]|0))d=0;else{c[b>>2]=d+1;d=a[d>>0]|0}return d|0}function Fl(a,b,d){a=a|0;b=b|0;d=d|0;a=fh(a,16)|0;Gl(a,c[b>>2]|0,c[d>>2]|0);return a|0}function Gl(a,b,d){a=a|0;b=b|0;d=d|0;hh(a,43,1,1,1);c[a>>2]=23044;c[a+8>>2]=b;c[a+12>>2]=d;return}function Hl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=ja;ja=ja+32|0;e=d+24|0;h=d+16|0;g=d+8|0;f=d;dg(h,29753);c[e>>2]=c[h>>2];c[e+4>>2]=c[h+4>>2];sh(b,e);Mf(c[a+8>>2]|0,b);dg(g,31369);c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];sh(b,e);Mf(c[a+12>>2]|0,b);dg(f,29357);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);ja=d;return}function Il(a){a=a|0;Gf(a);return}function Jl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=ja;ja=ja+16|0;g=f+8|0;h=f;a=fh(a,24)|0;b=c[b>>2]|0;dg(h,d);e=c[e>>2]|0;c[g>>2]=c[h>>2];c[g+4>>2]=c[h+4>>2];Kl(a,b,g,e);ja=f;return a|0}function Kl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;hh(a,46,1,1,1);c[a>>2]=23088;c[a+8>>2]=b;f=d;d=c[f+4>>2]|0;b=a+12|0;c[b>>2]=c[f>>2];c[b+4>>2]=d;c[a+20>>2]=e;return}function Ll(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;Mf(c[a+8>>2]|0,b);i=a+12|0;h=c[i+4>>2]|0;g=f;c[g>>2]=c[i>>2];c[g+4>>2]=h;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);Mf(c[a+20>>2]|0,b);ja=d;return}function Ml(a){a=a|0;Gf(a);return}function Nl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=ja;ja=ja+16|0;g=f+8|0;h=f;a=fh(a,24)|0;b=c[b>>2]|0;dg(h,d);e=c[e>>2]|0;c[g>>2]=c[h>>2];c[g+4>>2]=c[h+4>>2];Kl(a,b,g,e);ja=f;return a|0}function Ol(a){a=a|0;var b=0,d=0,e=0;e=ja;ja=ja+16|0;d=e;switch((hg(a,0)|0)<<24>>24){case 84:{b=Og(fg(a)|0)|0;c[d>>2]=b;if(!b)b=0;else Wg(a+148|0,d);break}case 68:{b=Ig(fg(a)|0)|0;c[d>>2]=b;if(!b)b=0;else Wg(a+148|0,d);break}default:b=Vg(fg(a)|0)|0}ja=e;return b|0}function Pl(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;g=ja;ja=ja+16|0;d=g+4|0;e=g;f=fg(a)|0;b=ll(f)|0;c[d>>2]=b;if(b){if((hg(a,0)|0)<<24>>24==73){f=Pg(f,0)|0;c[e>>2]=f;if(!f)b=0;else b=Qg(a,d,e)|0}}else b=0;ja=g;return b|0}function Ql(a,b,c){a=a|0;b=b|0;c=c|0;return pm(a+368|0,b,c)|0}function Rl(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;g=ja;ja=ja+32|0;f=g+24|0;b=g+16|0;d=g+8|0;e=g;do if((((hg(a,0)|0)<<24>>24)+-48|0)>>>0<10)b=Pl(fg(a)|0)|0;else{dg(b,31542);c[f>>2]=c[b>>2];c[f+4>>2]=c[b+4>>2];if(eg(a,f)|0){b=Yl(fg(a)|0)|0;break}dg(d,31545);c[f>>2]=c[d>>2];c[f+4>>2]=c[d+4>>2];eg(a,f)|0;d=fg(a)|0;b=Zl(d,0)|0;c[f>>2]=b;if(b){if((hg(a,0)|0)<<24>>24==73){d=Pg(d,0)|0;c[e>>2]=d;if(!d)b=0;else b=Qg(a,f,e)|0}}else b=0}while(0);ja=g;return b|0}function Sl(a,b){a=a|0;b=b|0;return Tl(a+368|0,b)|0}function Tl(a,b){a=a|0;b=b|0;a=fh(a,12)|0;Ul(a,c[b>>2]|0);return a|0}function Ul(a,b){a=a|0;b=b|0;hh(a,33,1,1,1);c[a>>2]=23132;c[a+8>>2]=b;return}function Vl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;dg(f,31483);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);Mf(c[a+8>>2]|0,b);ja=d;return}function Wl(a,b){a=a|0;b=b|0;b=c[b+8>>2]|0;za[c[(c[b>>2]|0)+24>>2]&127](a,b);return}function Xl(a){a=a|0;Gf(a);return}function Yl(a){a=a|0;var b=0,d=0,e=0,f=0;e=ja;ja=ja+16|0;d=e;f=(((hg(a,0)|0)<<24>>24)+-48|0)>>>0<10;b=fg(a)|0;if(f)b=Pl(b)|0;else b=Ol(b)|0;c[d>>2]=b;if(!b)b=0;else b=km(a,d)|0;ja=e;return b|0}function Zl(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;i=ja;ja=ja+32|0;h=i+16|0;g=i+8|0;e=i;a:do switch((hg(b,0)|0)<<24>>24|0){case 97:switch((hg(b,1)|0)<<24>>24|0){case 97:{c[b>>2]=(c[b>>2]|0)+2;d=Fg(b,31548)|0;break a}case 110:case 100:{c[b>>2]=(c[b>>2]|0)+2;d=Ag(b,31559)|0;break a}case 78:{c[b>>2]=(c[b>>2]|0)+2;d=Fg(b,31569)|0;break a}case 83:{c[b>>2]=(c[b>>2]|0)+2;d=Ag(b,31580)|0;break a}default:{d=0;break a}}case 99:switch((hg(b,1)|0)<<24>>24|0){case 108:{c[b>>2]=(c[b>>2]|0)+2;d=Fg(b,31590)|0;break a}case 109:{c[b>>2]=(c[b>>2]|0)+2;d=Ag(b,31601)|0;break a}case 111:{c[b>>2]=(c[b>>2]|0)+2;d=Ag(b,31611)|0;break a}case 118:{c[b>>2]=(c[b>>2]|0)+2;Ph(h,b+360|0,0);j=b+361|0;f=(d|0)!=0;Ph(g,j,f|(a[j>>0]|0)!=0);j=pg(fg(b)|0)|0;c[e>>2]=j;if(!j)d=0;else{if(f)a[d>>0]=1;d=_l(b,e)|0}Th(g);Th(h);break a}default:{d=0;break a}}case 100:switch((hg(b,1)|0)<<24>>24|0){case 97:{c[b>>2]=(c[b>>2]|0)+2;d=Dg(b,31621)|0;break a}case 101:{c[b>>2]=(c[b>>2]|0)+2;d=Ag(b,31639)|0;break a}case 108:{c[b>>2]=(c[b>>2]|0)+2;d=$l(b)|0;break a}case 118:{c[b>>2]=(c[b>>2]|0)+2;d=Ag(b,31649)|0;break a}case 86:{c[b>>2]=(c[b>>2]|0)+2;d=Fg(b,31659)|0;break a}default:{d=0;break a}}case 101:switch((hg(b,1)|0)<<24>>24|0){case 111:{c[b>>2]=(c[b>>2]|0)+2;d=Ag(b,31670)|0;break a}case 79:{c[b>>2]=(c[b>>2]|0)+2;d=Fg(b,31680)|0;break a}case 113:{c[b>>2]=(c[b>>2]|0)+2;d=Fg(b,31691)|0;break a}default:{d=0;break a}}case 103:switch((hg(b,1)|0)<<24>>24|0){case 101:{c[b>>2]=(c[b>>2]|0)+2;d=Fg(b,31702)|0;break a}case 116:{c[b>>2]=(c[b>>2]|0)+2;d=Ag(b,31713)|0;break a}default:{d=0;break a}}case 105:{if((hg(b,1)|0)<<24>>24==120){c[b>>2]=(c[b>>2]|0)+2;d=Fg(b,31723)|0}else d=0;break}case 108:switch((hg(b,1)|0)<<24>>24|0){case 101:{c[b>>2]=(c[b>>2]|0)+2;d=Fg(b,31734)|0;break a}case 105:{c[b>>2]=(c[b>>2]|0)+2;j=ll(fg(b)|0)|0;c[h>>2]=j;if(!j)d=0;else d=am(b,h)|0;break a}case 115:{c[b>>2]=(c[b>>2]|0)+2;d=Fg(b,31745)|0;break a}case 83:{c[b>>2]=(c[b>>2]|0)+2;d=ug(b,31756)|0;break a}case 116:{c[b>>2]=(c[b>>2]|0)+2;d=Ag(b,31768)|0;break a}default:{d=0;break a}}case 109:switch((hg(b,1)|0)<<24>>24|0){case 105:{c[b>>2]=(c[b>>2]|0)+2;d=Ag(b,31778)|0;break a}case 73:{c[b>>2]=(c[b>>2]|0)+2;d=Fg(b,31788)|0;break a}case 108:{c[b>>2]=(c[b>>2]|0)+2;d=Ag(b,31639)|0;break a}case 76:{c[b>>2]=(c[b>>2]|0)+2;d=Fg(b,31799)|0;break a}case 109:{c[b>>2]=(c[b>>2]|0)+2;d=Fg(b,31810)|0;break a}default:{d=0;break a}}case 110:switch((hg(b,1)|0)<<24>>24|0){case 97:{c[b>>2]=(c[b>>2]|0)+2;d=xg(b,31821)|0;break a}case 101:{c[b>>2]=(c[b>>2]|0)+2;d=Fg(b,31836)|0;break a}case 103:{c[b>>2]=(c[b>>2]|0)+2;d=Ag(b,31778)|0;break a}case 116:{c[b>>2]=(c[b>>2]|0)+2;d=Ag(b,31847)|0;break a}case 119:{c[b>>2]=(c[b>>2]|0)+2;d=zg(b,31857)|0;break a}default:{d=0;break a}}case 111:switch((hg(b,1)|0)<<24>>24|0){case 111:{c[b>>2]=(c[b>>2]|0)+2;d=Fg(b,31870)|0;break a}case 114:{c[b>>2]=(c[b>>2]|0)+2;d=Ag(b,31881)|0;break a}case 82:{c[b>>2]=(c[b>>2]|0)+2;d=Fg(b,31891)|0;break a}default:{d=0;break a}}case 112:switch((hg(b,1)|0)<<24>>24|0){case 109:{c[b>>2]=(c[b>>2]|0)+2;d=ug(b,31902)|0;break a}case 108:{c[b>>2]=(c[b>>2]|0)+2;d=Ag(b,31914)|0;break a}case 76:{c[b>>2]=(c[b>>2]|0)+2;d=Fg(b,31924)|0;break a}case 112:{c[b>>2]=(c[b>>2]|0)+2;d=Fg(b,31935)|0;break a}case 115:{c[b>>2]=(c[b>>2]|0)+2;d=Ag(b,31914)|0;break a}case 116:{c[b>>2]=(c[b>>2]|0)+2;d=Fg(b,31946)|0;break a}default:{d=0;break a}}case 113:{if((hg(b,1)|0)<<24>>24==117){c[b>>2]=(c[b>>2]|0)+2;d=Ag(b,31957)|0}else d=0;break}case 114:switch((hg(b,1)|0)<<24>>24|0){case 109:{c[b>>2]=(c[b>>2]|0)+2;d=Ag(b,31967)|0;break a}case 77:{c[b>>2]=(c[b>>2]|0)+2;d=Fg(b,31977)|0;break a}case 115:{c[b>>2]=(c[b>>2]|0)+2;d=Fg(b,31988)|0;break a}case 83:{c[b>>2]=(c[b>>2]|0)+2;d=ug(b,31999)|0;break a}default:{d=0;break a}}case 115:{if((hg(b,1)|0)<<24>>24==115){c[b>>2]=(c[b>>2]|0)+2;d=ug(b,32011)|0}else d=0;break}case 118:{if((((hg(b,1)|0)<<24>>24)+-48|0)>>>0<10){c[b>>2]=(c[b>>2]|0)+2;j=ll(fg(b)|0)|0;c[h>>2]=j;if(!j)d=0;else d=_l(b,h)|0}else d=0;break}default:d=0}while(0);ja=i;return d|0}function _l(a,b){a=a|0;b=b|0;return gm(a+368|0,b)|0}function $l(a){a=a|0;return fm(a+368|0,32087)|0}function am(a,b){a=a|0;b=b|0;return bm(a+368|0,b)|0}function bm(a,b){a=a|0;b=b|0;a=fh(a,12)|0;cm(a,c[b>>2]|0);return a|0}function cm(a,b){a=a|0;b=b|0;hh(a,19,1,1,1);c[a>>2]=23176;c[a+8>>2]=b;return}function dm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;dg(f,32023);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);Mf(c[a+8>>2]|0,b);ja=d;return}function em(a){a=a|0;Gf(a);return}function fm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;a=fh(a,16)|0;dg(f,b);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];Al(a,e);ja=d;return a|0}function gm(a,b){a=a|0;b=b|0;a=fh(a,12)|0;hm(a,c[b>>2]|0);return a|0}function hm(a,b){a=a|0;b=b|0;hh(a,4,1,1,1);c[a>>2]=23220;c[a+8>>2]=b;return}function im(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;dg(f,32103);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);Mf(c[a+8>>2]|0,b);ja=d;return}function jm(a){a=a|0;Gf(a);return}function km(a,b){a=a|0;b=b|0;return lm(a+368|0,b)|0}function lm(a,b){a=a|0;b=b|0;a=fh(a,12)|0;mm(a,c[b>>2]|0);return a|0}function mm(a,b){a=a|0;b=b|0;hh(a,38,1,1,1);c[a>>2]=23264;c[a+8>>2]=b;return}function nm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;dg(f,30470);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);a=c[a+8>>2]|0;za[c[(c[a>>2]|0)+16>>2]&127](a,b);ja=d;return}function om(a){a=a|0;Gf(a);return}function pm(a,b,d){a=a|0;b=b|0;d=d|0;a=fh(a,16)|0;qm(a,c[b>>2]|0,c[d>>2]|0);return a|0}function qm(a,b,d){a=a|0;b=b|0;d=d|0;hh(a,22,1,1,1);c[a>>2]=23308;c[a+8>>2]=b;c[a+12>>2]=d;return}function rm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=ja;ja=ja+16|0;e=d+8|0;f=d;Mf(c[a+8>>2]|0,b);dg(f,31483);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];sh(b,e);Mf(c[a+12>>2]|0,b);ja=d;return}function sm(a,b){a=a|0;b=b|0;b=c[b+12>>2]|0;za[c[(c[b>>2]|0)+24>>2]&127](a,b);return}function tm(a){a=a|0;Gf(a);return}\nfunction UC(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;k=ja;ja=ja+16|0;j=k;if(d|0){i=b+11|0;f=a[i>>0]|0;if(f<<24>>24<0){h=c[b+4>>2]|0;g=(c[b+8>>2]&2147483647)+-1|0}else{h=f&255;g=10}if((g-h|0)>>>0<d>>>0){VC(b,g,h+d-g|0,h,h,0,0);f=a[i>>0]|0}if(f<<24>>24<0)g=c[b>>2]|0;else g=b;NC(g+h|0,d,e)|0;f=h+d|0;if((a[i>>0]|0)<0)c[b+4>>2]=f;else a[i>>0]=f;a[j>>0]=0;Ua(g+f|0,j)}ja=k;return b|0}function VC(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0;if((-17-d|0)>>>0<e>>>0)JC(b);if((a[b+11>>0]|0)<0)l=c[b>>2]|0;else l=b;if(d>>>0<2147483623){k=e+d|0;j=d<<1;k=k>>>0<j>>>0?j:k;k=k>>>0<11?11:k+16&-16}else k=-17;j=Mr(k)|0;if(g|0)ps(j,l,g)|0;e=f-h-g|0;if(e|0)ps(j+g+i|0,l+g+h|0,e)|0;e=d+1|0;if((e|0)!=11)vb(l,e);c[b>>2]=j;c[b+8>>2]=k|-2147483648;return}function WC(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;k=ja;ja=ja+16|0;j=k;i=b+11|0;f=a[i>>0]|0;g=f<<24>>24<0;if(g){h=c[b+4>>2]|0;f=(c[b+8>>2]&2147483647)+-1|0}else{h=f&255;f=10}if((f-h|0)>>>0>=e>>>0){if(e|0){if(g)g=c[b>>2]|0;else g=b;ps(g+h|0,d,e)|0;f=h+e|0;if((a[i>>0]|0)<0)c[b+4>>2]=f;else a[i>>0]=f;a[j>>0]=0;Ua(g+f|0,j)}}else RC(b,f,h+e-f|0,h,h,0,e,d);ja=k;return b|0}function XC(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;k=ja;ja=ja+16|0;i=k;j=k+1|0;a[i>>0]=d;g=b+11|0;d=a[g>>0]|0;f=d<<24>>24<0;if(f){e=(c[b+8>>2]&2147483647)+-1|0;h=c[b+4>>2]|0}else{e=10;h=d&255}if((h|0)==(e|0)){VC(b,e,1,e,e,0,0);if((a[g>>0]|0)<0)e=8;else e=7}else if(f)e=8;else e=7;if((e|0)==7){a[g>>0]=h+1;d=b}else if((e|0)==8){d=c[b>>2]|0;c[b+4>>2]=h+1}b=d+h|0;Ua(b,i);a[j>>0]=0;Ua(b+1|0,j);ja=k;return}function YC(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;i=ja;ja=ja+16|0;h=i;if(e>>>0>1073741807)JC(b);do if(e>>>0>=2){g=e+4&-4;if(g>>>0>1073741823)S();else{f=Mr(g<<2)|0;c[b>>2]=f;c[b+8>>2]=g|-2147483648;c[b+4>>2]=e;break}}else{a[b+8+3>>0]=e;f=b}while(0);Gs(f,d,e)|0;c[h>>2]=0;nu(f+(e<<2)|0,h);ja=i;return}function ZC(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;i=ja;ja=ja+16|0;h=i;if(d>>>0>1073741807)JC(b);do if(d>>>0>=2){g=d+4&-4;if(g>>>0>1073741823)S();else{f=Mr(g<<2)|0;c[b>>2]=f;c[b+8>>2]=g|-2147483648;c[b+4>>2]=d;break}}else{a[b+8+3>>0]=d;f=b}while(0);_C(f,d,e)|0;c[h>>2]=0;nu(f+(d<<2)|0,h);ja=i;return}function _C(a,b,c){a=a|0;b=b|0;c=c|0;if(b)gf(a,c,b)|0;return a|0}function $C(b){b=b|0;var d=0;d=b+8|0;if((a[d+3>>0]|0)<0)vb(c[b>>2]|0,c[d>>2]<<2);return}function aD(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;l=ja;ja=ja+16|0;k=l;f=b+8|0;j=f+3|0;g=a[j>>0]|0;i=g<<24>>24<0;if(i)h=(c[f>>2]&2147483647)+-1|0;else h=1;do if(h>>>0>=e>>>0){if(i)f=c[b>>2]|0;else f=b;bD(f,d,e)|0;c[k>>2]=0;nu(f+(e<<2)|0,k);if((a[j>>0]|0)<0){c[b+4>>2]=e;break}else{a[j>>0]=e;break}}else{if(i)f=c[b+4>>2]|0;else f=g&255;cD(b,h,e-h|0,f,0,f,e,d)}while(0);ja=l;return b|0}function bD(a,b,c){a=a|0;b=b|0;c=c|0;if(c)hf(a,b,c)|0;return a|0}function cD(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0;p=ja;ja=ja+16|0;o=p;if((1073741806-d|0)>>>0<e>>>0)JC(b);l=b+8|0;if((a[l+3>>0]|0)<0)n=c[b>>2]|0;else n=b;if(d>>>0<536870887){e=e+d|0;k=d<<1;e=e>>>0<k>>>0?k:e;e=e>>>0<2?2:e+4&-4;if(e>>>0>1073741823)S();else m=e}else m=1073741807;k=Mr(m<<2)|0;if(g|0)Gs(k,n,g)|0;if(i|0)Gs(k+(g<<2)|0,j,i)|0;f=f-h|0;e=f-g|0;if(e|0)Gs(k+(g<<2)+(i<<2)|0,n+(g<<2)+(h<<2)|0,e)|0;e=d+1|0;if((e|0)!=2)vb(n,e<<2);c[b>>2]=k;c[l>>2]=m|-2147483648;n=f+i|0;c[b+4>>2]=n;c[o>>2]=0;nu(k+(n<<2)|0,o);ja=p;return}function dD(a,b){a=a|0;b=b|0;return aD(a,b,nx(b)|0)|0}function eD(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0;if((1073741807-d|0)>>>0<e>>>0)JC(b);k=b+8|0;if((a[k+3>>0]|0)<0)m=c[b>>2]|0;else m=b;if(d>>>0<536870887){e=e+d|0;j=d<<1;e=e>>>0<j>>>0?j:e;e=e>>>0<2?2:e+4&-4;if(e>>>0>1073741823)S();else l=e}else l=1073741807;j=Mr(l<<2)|0;if(g|0)Gs(j,m,g)|0;e=f-h-g|0;if(e|0)Gs(j+(g<<2)+(i<<2)|0,m+(g<<2)+(h<<2)|0,e)|0;e=d+1|0;if((e|0)!=2)vb(m,e<<2);c[b>>2]=j;c[k>>2]=l|-2147483648;return}function fD(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;l=ja;ja=ja+16|0;k=l;g=b+8|0;j=g+3|0;f=a[j>>0]|0;i=f<<24>>24<0;if(i){h=c[b+4>>2]|0;f=(c[g>>2]&2147483647)+-1|0}else{h=f&255;f=1}if((f-h|0)>>>0>=e>>>0){if(e|0){if(i)g=c[b>>2]|0;else g=b;Gs(g+(h<<2)|0,d,e)|0;f=h+e|0;if((a[j>>0]|0)<0)c[b+4>>2]=f;else a[j>>0]=f;c[k>>2]=0;nu(g+(f<<2)|0,k)}}else cD(b,f,h+e-f|0,h,h,0,e,d);ja=l;return b|0}function gD(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;k=ja;ja=ja+16|0;i=k;j=k+4|0;c[i>>2]=d;d=b+8|0;h=d+3|0;e=a[h>>0]|0;g=e<<24>>24<0;if(g){d=(c[d>>2]&2147483647)+-1|0;f=c[b+4>>2]|0}else{d=1;f=e&255}if((f|0)==(d|0)){eD(b,d,1,d,d,0,0);if((a[h>>0]|0)<0)e=8;else e=7}else if(g)e=8;else e=7;if((e|0)==7){a[h>>0]=f+1;d=b}else if((e|0)==8){d=c[b>>2]|0;c[b+4>>2]=f+1}b=d+(f<<2)|0;nu(b,i);c[j>>2]=0;nu(b+4|0,j);ja=k;return}function hD(a){a=a|0;S()}function iD(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;w=ja;ja=ja+16|0;n=w;do if(a>>>0<245){k=a>>>0<11?16:a+11&-8;a=k>>>3;m=c[27194]|0;d=m>>>a;if(d&3|0){e=(d&1^1)+a|0;f=108816+(e<<1<<2)|0;b=f+8|0;a=c[b>>2]|0;g=a+8|0;d=c[g>>2]|0;if((d|0)==(f|0))c[27194]=m&~(1<<e);else{c[d+12>>2]=f;c[b>>2]=d}v=e<<3;c[a+4>>2]=v|3;v=a+v+4|0;c[v>>2]=c[v>>2]|1;v=g;ja=w;return v|0}l=c[27196]|0;if(k>>>0>l>>>0){if(d|0){i=2<<a;d=d<<a&(i|0-i);d=(d&0-d)+-1|0;i=d>>>12&16;d=d>>>i;a=d>>>5&8;d=d>>>a;g=d>>>2&4;d=d>>>g;b=d>>>1&2;d=d>>>b;e=d>>>1&1;e=(a|i|g|b|e)+(d>>>e)|0;d=108816+(e<<1<<2)|0;b=d+8|0;g=c[b>>2]|0;i=g+8|0;a=c[i>>2]|0;if((a|0)==(d|0)){a=m&~(1<<e);c[27194]=a}else{c[a+12>>2]=d;c[b>>2]=a;a=m}v=e<<3;h=v-k|0;c[g+4>>2]=k|3;f=g+k|0;c[f+4>>2]=h|1;c[g+v>>2]=h;if(l|0){e=c[27199]|0;b=l>>>3;d=108816+(b<<1<<2)|0;b=1<<b;if(!(a&b)){c[27194]=a|b;b=d+8|0;a=d}else{a=d+8|0;b=a;a=c[a>>2]|0}c[b>>2]=e;c[a+12>>2]=e;c[e+8>>2]=a;c[e+12>>2]=d}c[27196]=h;c[27199]=f;v=i;ja=w;return v|0}g=c[27195]|0;if(g){i=(g&0-g)+-1|0;f=i>>>12&16;i=i>>>f;e=i>>>5&8;i=i>>>e;h=i>>>2&4;i=i>>>h;d=i>>>1&2;i=i>>>d;j=i>>>1&1;j=c[109080+((e|f|h|d|j)+(i>>>j)<<2)>>2]|0;i=(c[j+4>>2]&-8)-k|0;d=j;while(1){a=c[d+16>>2]|0;if(!a){a=c[d+20>>2]|0;if(!a)break}d=(c[a+4>>2]&-8)-k|0;h=d>>>0<i>>>0;i=h?d:i;d=a;j=h?a:j}h=j+k|0;if(h>>>0>j>>>0){f=c[j+24>>2]|0;b=c[j+12>>2]|0;do if((b|0)==(j|0)){a=j+20|0;b=c[a>>2]|0;if(!b){a=j+16|0;b=c[a>>2]|0;if(!b){d=0;break}}while(1){e=b+20|0;d=c[e>>2]|0;if(!d){e=b+16|0;d=c[e>>2]|0;if(!d)break;else{b=d;a=e}}else{b=d;a=e}}c[a>>2]=0;d=b}else{d=c[j+8>>2]|0;c[d+12>>2]=b;c[b+8>>2]=d;d=b}while(0);do if(f|0){b=c[j+28>>2]|0;a=109080+(b<<2)|0;if((j|0)==(c[a>>2]|0)){c[a>>2]=d;if(!d){c[27195]=g&~(1<<b);break}}else{v=f+16|0;c[((c[v>>2]|0)==(j|0)?v:f+20|0)>>2]=d;if(!d)break}c[d+24>>2]=f;b=c[j+16>>2]|0;if(b|0){c[d+16>>2]=b;c[b+24>>2]=d}b=c[j+20>>2]|0;if(b|0){c[d+20>>2]=b;c[b+24>>2]=d}}while(0);if(i>>>0<16){v=i+k|0;c[j+4>>2]=v|3;v=j+v+4|0;c[v>>2]=c[v>>2]|1}else{c[j+4>>2]=k|3;c[h+4>>2]=i|1;c[h+i>>2]=i;if(l|0){e=c[27199]|0;b=l>>>3;d=108816+(b<<1<<2)|0;b=1<<b;if(!(b&m)){c[27194]=b|m;b=d+8|0;a=d}else{a=d+8|0;b=a;a=c[a>>2]|0}c[b>>2]=e;c[a+12>>2]=e;c[e+8>>2]=a;c[e+12>>2]=d}c[27196]=i;c[27199]=h}v=j+8|0;ja=w;return v|0}else m=k}else m=k}else m=k}else if(a>>>0<=4294967231){a=a+11|0;k=a&-8;e=c[27195]|0;if(e){d=0-k|0;a=a>>>8;if(a)if(k>>>0>16777215)j=31;else{m=(a+1048320|0)>>>16&8;q=a<<m;i=(q+520192|0)>>>16&4;q=q<<i;j=(q+245760|0)>>>16&2;j=14-(i|m|j)+(q<<j>>>15)|0;j=k>>>(j+7|0)&1|j<<1}else j=0;a=c[109080+(j<<2)>>2]|0;a:do if(!a){f=0;a=0;q=61}else{f=0;h=k<<((j|0)==31?0:25-(j>>>1)|0);i=a;a=0;while(1){g=(c[i+4>>2]&-8)-k|0;if(g>>>0<d>>>0)if(!g){d=0;f=i;a=i;q=65;break a}else{d=g;a=i}q=c[i+20>>2]|0;i=c[i+16+(h>>>31<<2)>>2]|0;f=(q|0)==0|(q|0)==(i|0)?f:q;if(!i){q=61;break}else h=h<<1}}while(0);if((q|0)==61){if((f|0)==0&(a|0)==0){a=2<<j;a=(a|0-a)&e;if(!a){m=k;break}a=(a&0-a)+-1|0;i=a>>>12&16;a=a>>>i;h=a>>>5&8;a=a>>>h;j=a>>>2&4;a=a>>>j;m=a>>>1&2;a=a>>>m;f=a>>>1&1;f=c[109080+((h|i|j|m|f)+(a>>>f)<<2)>>2]|0;a=0}if(!f){i=d;g=a}else q=65}if((q|0)==65)while(1){m=(c[f+4>>2]&-8)-k|0;g=m>>>0<d>>>0;d=g?m:d;g=g?f:a;a=c[f+16>>2]|0;if(!a)a=c[f+20>>2]|0;if(!a){i=d;break}else{f=a;a=g}}if(((g|0)!=0?i>>>0<((c[27196]|0)-k|0)>>>0:0)?(l=g+k|0,l>>>0>g>>>0):0){h=c[g+24>>2]|0;b=c[g+12>>2]|0;do if((b|0)==(g|0)){a=g+20|0;b=c[a>>2]|0;if(!b){a=g+16|0;b=c[a>>2]|0;if(!b){b=0;break}}while(1){f=b+20|0;d=c[f>>2]|0;if(!d){f=b+16|0;d=c[f>>2]|0;if(!d)break;else{b=d;a=f}}else{b=d;a=f}}c[a>>2]=0}else{v=c[g+8>>2]|0;c[v+12>>2]=b;c[b+8>>2]=v}while(0);do if(h){a=c[g+28>>2]|0;d=109080+(a<<2)|0;if((g|0)==(c[d>>2]|0)){c[d>>2]=b;if(!b){e=e&~(1<<a);c[27195]=e;break}}else{v=h+16|0;c[((c[v>>2]|0)==(g|0)?v:h+20|0)>>2]=b;if(!b)break}c[b+24>>2]=h;a=c[g+16>>2]|0;if(a|0){c[b+16>>2]=a;c[a+24>>2]=b}a=c[g+20>>2]|0;if(a){c[b+20>>2]=a;c[a+24>>2]=b}}while(0);b:do if(i>>>0<16){v=i+k|0;c[g+4>>2]=v|3;v=g+v+4|0;c[v>>2]=c[v>>2]|1}else{c[g+4>>2]=k|3;c[l+4>>2]=i|1;c[l+i>>2]=i;b=i>>>3;if(i>>>0<256){d=108816+(b<<1<<2)|0;a=c[27194]|0;b=1<<b;if(!(a&b)){c[27194]=a|b;b=d+8|0;a=d}else{a=d+8|0;b=a;a=c[a>>2]|0}c[b>>2]=l;c[a+12>>2]=l;c[l+8>>2]=a;c[l+12>>2]=d;break}b=i>>>8;if(b)if(i>>>0>16777215)d=31;else{u=(b+1048320|0)>>>16&8;v=b<<u;t=(v+520192|0)>>>16&4;v=v<<t;d=(v+245760|0)>>>16&2;d=14-(t|u|d)+(v<<d>>>15)|0;d=i>>>(d+7|0)&1|d<<1}else d=0;b=109080+(d<<2)|0;c[l+28>>2]=d;a=l+16|0;c[a+4>>2]=0;c[a>>2]=0;a=1<<d;if(!(e&a)){c[27195]=e|a;c[b>>2]=l;c[l+24>>2]=b;c[l+12>>2]=l;c[l+8>>2]=l;break}b=c[b>>2]|0;c:do if((c[b+4>>2]&-8|0)!=(i|0)){e=i<<((d|0)==31?0:25-(d>>>1)|0);while(1){d=b+16+(e>>>31<<2)|0;a=c[d>>2]|0;if(!a)break;if((c[a+4>>2]&-8|0)==(i|0)){b=a;break c}else{e=e<<1;b=a}}c[d>>2]=l;c[l+24>>2]=b;c[l+12>>2]=l;c[l+8>>2]=l;break b}while(0);u=b+8|0;v=c[u>>2]|0;c[v+12>>2]=l;c[u>>2]=l;c[l+8>>2]=v;c[l+12>>2]=b;c[l+24>>2]=0}while(0);v=g+8|0;ja=w;return v|0}else m=k}else m=k}else m=-1;while(0);d=c[27196]|0;if(d>>>0>=m>>>0){a=d-m|0;b=c[27199]|0;if(a>>>0>15){v=b+m|0;c[27199]=v;c[27196]=a;c[v+4>>2]=a|1;c[b+d>>2]=a;c[b+4>>2]=m|3}else{c[27196]=0;c[27199]=0;c[b+4>>2]=d|3;v=b+d+4|0;c[v>>2]=c[v>>2]|1}v=b+8|0;ja=w;return v|0}h=c[27197]|0;if(h>>>0>m>>>0){t=h-m|0;c[27197]=t;v=c[27200]|0;u=v+m|0;c[27200]=u;c[u+4>>2]=t|1;c[v+4>>2]=m|3;v=v+8|0;ja=w;return v|0}if(!(c[27312]|0)){c[27314]=4096;c[27313]=4096;c[27315]=-1;c[27316]=-1;c[27317]=0;c[27305]=0;c[27312]=n&-16^1431655768;a=4096}else a=c[27314]|0;i=m+48|0;j=m+47|0;g=a+j|0;e=0-a|0;k=g&e;if(k>>>0<=m>>>0){v=0;ja=w;return v|0}a=c[27304]|0;if(a|0?(l=c[27302]|0,n=l+k|0,n>>>0<=l>>>0|n>>>0>a>>>0):0){v=0;ja=w;return v|0}d:do if(!(c[27305]&4)){d=c[27200]|0;e:do if(d){f=109224;while(1){n=c[f>>2]|0;if(n>>>0<=d>>>0?(n+(c[f+4>>2]|0)|0)>>>0>d>>>0:0)break;a=c[f+8>>2]|0;if(!a){q=128;break e}else f=a}b=g-h&e;if(b>>>0<2147483647){a=nD(b)|0;if((a|0)==((c[f>>2]|0)+(c[f+4>>2]|0)|0)){if((a|0)!=(-1|0)){h=a;g=b;q=145;break d}}else{e=a;q=136}}else b=0}else q=128;while(0);do if((q|0)==128){d=nD(0)|0;if((d|0)!=(-1|0)?(b=d,o=c[27313]|0,p=o+-1|0,b=((p&b|0)==0?0:(p+b&0-o)-b|0)+k|0,o=c[27302]|0,p=b+o|0,b>>>0>m>>>0&b>>>0<2147483647):0){n=c[27304]|0;if(n|0?p>>>0<=o>>>0|p>>>0>n>>>0:0){b=0;break}a=nD(b)|0;if((a|0)==(d|0)){h=d;g=b;q=145;break d}else{e=a;q=136}}else b=0}while(0);do if((q|0)==136){d=0-b|0;if(!(i>>>0>b>>>0&(b>>>0<2147483647&(e|0)!=(-1|0))))if((e|0)==(-1|0)){b=0;break}else{h=e;g=b;q=145;break d}a=c[27314]|0;a=j-b+a&0-a;if(a>>>0>=2147483647){h=e;g=b;q=145;break d}if((nD(a)|0)==(-1|0)){nD(d)|0;b=0;break}else{h=e;g=a+b|0;q=145;break d}}while(0);c[27305]=c[27305]|4;q=143}else{b=0;q=143}while(0);if(((q|0)==143?k>>>0<2147483647:0)?(r=nD(k)|0,p=nD(0)|0,t=p-r|0,s=t>>>0>(m+40|0)>>>0,!((r|0)==(-1|0)|s^1|r>>>0<p>>>0&((r|0)!=(-1|0)&(p|0)!=(-1|0))^1)):0){h=r;g=s?t:b;q=145}if((q|0)==145){b=(c[27302]|0)+g|0;c[27302]=b;if(b>>>0>(c[27303]|0)>>>0)c[27303]=b;j=c[27200]|0;f:do if(j){e=109224;while(1){b=c[e>>2]|0;a=c[e+4>>2]|0;if((h|0)==(b+a|0)){q=154;break}d=c[e+8>>2]|0;if(!d)break;else e=d}if(((q|0)==154?(u=e+4|0,(c[e+12>>2]&8|0)==0):0)?h>>>0>j>>>0&b>>>0<=j>>>0:0){c[u>>2]=a+g;v=(c[27197]|0)+g|0;t=j+8|0;t=(t&7|0)==0?0:0-t&7;u=j+t|0;t=v-t|0;c[27200]=u;c[27197]=t;c[u+4>>2]=t|1;c[j+v+4>>2]=40;c[27201]=c[27316];break}if(h>>>0<(c[27198]|0)>>>0)c[27198]=h;d=h+g|0;a=109224;while(1){if((c[a>>2]|0)==(d|0)){q=162;break}b=c[a+8>>2]|0;if(!b)break;else a=b}if((q|0)==162?(c[a+12>>2]&8|0)==0:0){c[a>>2]=h;l=a+4|0;c[l>>2]=(c[l>>2]|0)+g;l=h+8|0;l=h+((l&7|0)==0?0:0-l&7)|0;b=d+8|0;b=d+((b&7|0)==0?0:0-b&7)|0;k=l+m|0;i=b-l-m|0;c[l+4>>2]=m|3;g:do if((j|0)==(b|0)){v=(c[27197]|0)+i|0;c[27197]=v;c[27200]=k;c[k+4>>2]=v|1}else{if((c[27199]|0)==(b|0)){v=(c[27196]|0)+i|0;c[27196]=v;c[27199]=k;c[k+4>>2]=v|1;c[k+v>>2]=v;break}a=c[b+4>>2]|0;if((a&3|0)==1){h=a&-8;e=a>>>3;h:do if(a>>>0<256){a=c[b+8>>2]|0;d=c[b+12>>2]|0;if((d|0)==(a|0)){c[27194]=c[27194]&~(1<<e);break}else{c[a+12>>2]=d;c[d+8>>2]=a;break}}else{g=c[b+24>>2]|0;a=c[b+12>>2]|0;do if((a|0)==(b|0)){e=b+16|0;d=e+4|0;a=c[d>>2]|0;if(!a){a=c[e>>2]|0;if(!a){a=0;break}else d=e}while(1){f=a+20|0;e=c[f>>2]|0;if(!e){f=a+16|0;e=c[f>>2]|0;if(!e)break;else{a=e;d=f}}else{a=e;d=f}}c[d>>2]=0}else{v=c[b+8>>2]|0;c[v+12>>2]=a;c[a+8>>2]=v}while(0);if(!g)break;d=c[b+28>>2]|0;e=109080+(d<<2)|0;do if((c[e>>2]|0)!=(b|0)){v=g+16|0;c[((c[v>>2]|0)==(b|0)?v:g+20|0)>>2]=a;if(!a)break h}else{c[e>>2]=a;if(a|0)break;c[27195]=c[27195]&~(1<<d);break h}while(0);c[a+24>>2]=g;e=b+16|0;d=c[e>>2]|0;if(d|0){c[a+16>>2]=d;c[d+24>>2]=a}d=c[e+4>>2]|0;if(!d)break;c[a+20>>2]=d;c[d+24>>2]=a}while(0);b=b+h|0;f=h+i|0}else f=i;b=b+4|0;c[b>>2]=c[b>>2]&-2;c[k+4>>2]=f|1;c[k+f>>2]=f;b=f>>>3;if(f>>>0<256){d=108816+(b<<1<<2)|0;a=c[27194]|0;b=1<<b;if(!(a&b)){c[27194]=a|b;b=d+8|0;a=d}else{a=d+8|0;b=a;a=c[a>>2]|0}c[b>>2]=k;c[a+12>>2]=k;c[k+8>>2]=a;c[k+12>>2]=d;break}b=f>>>8;do if(!b)e=0;else{if(f>>>0>16777215){e=31;break}u=(b+1048320|0)>>>16&8;v=b<<u;t=(v+520192|0)>>>16&4;v=v<<t;e=(v+245760|0)>>>16&2;e=14-(t|u|e)+(v<<e>>>15)|0;e=f>>>(e+7|0)&1|e<<1}while(0);a=109080+(e<<2)|0;c[k+28>>2]=e;b=k+16|0;c[b+4>>2]=0;c[b>>2]=0;b=c[27195]|0;d=1<<e;if(!(b&d)){c[27195]=b|d;c[a>>2]=k;c[k+24>>2]=a;c[k+12>>2]=k;c[k+8>>2]=k;break}b=c[a>>2]|0;i:do if((c[b+4>>2]&-8|0)!=(f|0)){e=f<<((e|0)==31?0:25-(e>>>1)|0);while(1){d=b+16+(e>>>31<<2)|0;a=c[d>>2]|0;if(!a)break;if((c[a+4>>2]&-8|0)==(f|0)){b=a;break i}else{e=e<<1;b=a}}c[d>>2]=k;c[k+24>>2]=b;c[k+12>>2]=k;c[k+8>>2]=k;break g}while(0);u=b+8|0;v=c[u>>2]|0;c[v+12>>2]=k;c[u>>2]=k;c[k+8>>2]=v;c[k+12>>2]=b;c[k+24>>2]=0}while(0);v=l+8|0;ja=w;return v|0}a=109224;while(1){b=c[a>>2]|0;if(b>>>0<=j>>>0?(v=b+(c[a+4>>2]|0)|0,v>>>0>j>>>0):0)break;a=c[a+8>>2]|0}f=v+-47|0;a=f+8|0;a=f+((a&7|0)==0?0:0-a&7)|0;f=j+16|0;a=a>>>0<f>>>0?j:a;b=a+8|0;d=g+-40|0;t=h+8|0;t=(t&7|0)==0?0:0-t&7;u=h+t|0;t=d-t|0;c[27200]=u;c[27197]=t;c[u+4>>2]=t|1;c[h+d+4>>2]=40;c[27201]=c[27316];d=a+4|0;c[d>>2]=27;c[b>>2]=c[27306];c[b+4>>2]=c[27307];c[b+8>>2]=c[27308];c[b+12>>2]=c[27309];c[27306]=h;c[27307]=g;c[27309]=0;c[27308]=b;b=a+24|0;do{u=b;b=b+4|0;c[b>>2]=7}while((u+8|0)>>>0<v>>>0);if((a|0)!=(j|0)){g=a-j|0;c[d>>2]=c[d>>2]&-2;c[j+4>>2]=g|1;c[a>>2]=g;b=g>>>3;if(g>>>0<256){d=108816+(b<<1<<2)|0;a=c[27194]|0;b=1<<b;if(!(a&b)){c[27194]=a|b;b=d+8|0;a=d}else{a=d+8|0;b=a;a=c[a>>2]|0}c[b>>2]=j;c[a+12>>2]=j;c[j+8>>2]=a;c[j+12>>2]=d;break}b=g>>>8;if(b)if(g>>>0>16777215)e=31;else{u=(b+1048320|0)>>>16&8;v=b<<u;t=(v+520192|0)>>>16&4;v=v<<t;e=(v+245760|0)>>>16&2;e=14-(t|u|e)+(v<<e>>>15)|0;e=g>>>(e+7|0)&1|e<<1}else e=0;d=109080+(e<<2)|0;c[j+28>>2]=e;c[j+20>>2]=0;c[f>>2]=0;b=c[27195]|0;a=1<<e;if(!(b&a)){c[27195]=b|a;c[d>>2]=j;c[j+24>>2]=d;c[j+12>>2]=j;c[j+8>>2]=j;break}b=c[d>>2]|0;j:do if((c[b+4>>2]&-8|0)!=(g|0)){e=g<<((e|0)==31?0:25-(e>>>1)|0);while(1){d=b+16+(e>>>31<<2)|0;a=c[d>>2]|0;if(!a)break;if((c[a+4>>2]&-8|0)==(g|0)){b=a;break j}else{e=e<<1;b=a}}c[d>>2]=j;c[j+24>>2]=b;c[j+12>>2]=j;c[j+8>>2]=j;break f}while(0);u=b+8|0;v=c[u>>2]|0;c[v+12>>2]=j;c[u>>2]=j;c[j+8>>2]=v;c[j+12>>2]=b;c[j+24>>2]=0}}else{v=c[27198]|0;if((v|0)==0|h>>>0<v>>>0)c[27198]=h;c[27306]=h;c[27307]=g;c[27309]=0;c[27203]=c[27312];c[27202]=-1;c[27207]=108816;c[27206]=108816;c[27209]=108824;c[27208]=108824;c[27211]=108832;c[27210]=108832;c[27213]=108840;c[27212]=108840;c[27215]=108848;c[27214]=108848;c[27217]=108856;c[27216]=108856;c[27219]=108864;c[27218]=108864;c[27221]=108872;c[27220]=108872;c[27223]=108880;c[27222]=108880;c[27225]=108888;c[27224]=108888;c[27227]=108896;c[27226]=108896;c[27229]=108904;c[27228]=108904;c[27231]=108912;c[27230]=108912;c[27233]=108920;c[27232]=108920;c[27235]=108928;c[27234]=108928;c[27237]=108936;c[27236]=108936;c[27239]=108944;c[27238]=108944;c[27241]=108952;c[27240]=108952;c[27243]=108960;c[27242]=108960;c[27245]=108968;c[27244]=108968;c[27247]=108976;c[27246]=108976;c[27249]=108984;c[27248]=108984;c[27251]=108992;c[27250]=108992;c[27253]=109e3;c[27252]=109e3;c[27255]=109008;c[27254]=109008;c[27257]=109016;c[27256]=109016;c[27259]=109024;c[27258]=109024;c[27261]=109032;c[27260]=109032;c[27263]=109040;c[27262]=109040;c[27265]=109048;c[27264]=109048;c[27267]=109056;c[27266]=109056;c[27269]=109064;c[27268]=109064;v=g+-40|0;t=h+8|0;t=(t&7|0)==0?0:0-t&7;u=h+t|0;t=v-t|0;c[27200]=u;c[27197]=t;c[u+4>>2]=t|1;c[h+v+4>>2]=40;c[27201]=c[27316]}while(0);b=c[27197]|0;if(b>>>0>m>>>0){t=b-m|0;c[27197]=t;v=c[27200]|0;u=v+m|0;c[27200]=u;c[u+4>>2]=t|1;c[v+4>>2]=m|3;v=v+8|0;ja=w;return v|0}}c[(Uc()|0)>>2]=48;v=0;ja=w;return v|0}function jD(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;if(!a)return;d=a+-8|0;e=c[27198]|0;a=c[a+-4>>2]|0;b=a&-8;k=d+b|0;do if(!(a&1)){f=c[d>>2]|0;if(!(a&3))return;g=d+(0-f)|0;h=f+b|0;if(g>>>0<e>>>0)return;if((c[27199]|0)==(g|0)){b=k+4|0;a=c[b>>2]|0;if((a&3|0)!=3){i=g;j=g;b=h;break}c[27196]=h;c[b>>2]=a&-2;c[g+4>>2]=h|1;c[g+h>>2]=h;return}d=f>>>3;if(f>>>0<256){a=c[g+8>>2]|0;b=c[g+12>>2]|0;if((b|0)==(a|0)){c[27194]=c[27194]&~(1<<d);i=g;j=g;b=h;break}else{c[a+12>>2]=b;c[b+8>>2]=a;i=g;j=g;b=h;break}}f=c[g+24>>2]|0;a=c[g+12>>2]|0;do if((a|0)==(g|0)){d=g+16|0;b=d+4|0;a=c[b>>2]|0;if(!a){a=c[d>>2]|0;if(!a){d=0;break}else b=d}while(1){e=a+20|0;d=c[e>>2]|0;if(!d){e=a+16|0;d=c[e>>2]|0;if(!d)break;else{a=d;b=e}}else{a=d;b=e}}c[b>>2]=0;d=a}else{d=c[g+8>>2]|0;c[d+12>>2]=a;c[a+8>>2]=d;d=a}while(0);if(f){a=c[g+28>>2]|0;b=109080+(a<<2)|0;if((c[b>>2]|0)==(g|0)){c[b>>2]=d;if(!d){c[27195]=c[27195]&~(1<<a);i=g;j=g;b=h;break}}else{j=f+16|0;c[((c[j>>2]|0)==(g|0)?j:f+20|0)>>2]=d;if(!d){i=g;j=g;b=h;break}}c[d+24>>2]=f;b=g+16|0;a=c[b>>2]|0;if(a|0){c[d+16>>2]=a;c[a+24>>2]=d}a=c[b+4>>2]|0;if(a){c[d+20>>2]=a;c[a+24>>2]=d;i=g;j=g;b=h}else{i=g;j=g;b=h}}else{i=g;j=g;b=h}}else{i=d;j=d}while(0);if(i>>>0>=k>>>0)return;a=k+4|0;d=c[a>>2]|0;if(!(d&1))return;if(!(d&2)){if((c[27200]|0)==(k|0)){k=(c[27197]|0)+b|0;c[27197]=k;c[27200]=j;c[j+4>>2]=k|1;if((j|0)!=(c[27199]|0))return;c[27199]=0;c[27196]=0;return}if((c[27199]|0)==(k|0)){k=(c[27196]|0)+b|0;c[27196]=k;c[27199]=i;c[j+4>>2]=k|1;c[i+k>>2]=k;return}f=(d&-8)+b|0;e=d>>>3;do if(d>>>0<256){b=c[k+8>>2]|0;a=c[k+12>>2]|0;if((a|0)==(b|0)){c[27194]=c[27194]&~(1<<e);break}else{c[b+12>>2]=a;c[a+8>>2]=b;break}}else{g=c[k+24>>2]|0;a=c[k+12>>2]|0;do if((a|0)==(k|0)){d=k+16|0;b=d+4|0;a=c[b>>2]|0;if(!a){a=c[d>>2]|0;if(!a){d=0;break}else b=d}while(1){e=a+20|0;d=c[e>>2]|0;if(!d){e=a+16|0;d=c[e>>2]|0;if(!d)break;else{a=d;b=e}}else{a=d;b=e}}c[b>>2]=0;d=a}else{d=c[k+8>>2]|0;c[d+12>>2]=a;c[a+8>>2]=d;d=a}while(0);if(g|0){a=c[k+28>>2]|0;b=109080+(a<<2)|0;if((c[b>>2]|0)==(k|0)){c[b>>2]=d;if(!d){c[27195]=c[27195]&~(1<<a);break}}else{h=g+16|0;c[((c[h>>2]|0)==(k|0)?h:g+20|0)>>2]=d;if(!d)break}c[d+24>>2]=g;b=k+16|0;a=c[b>>2]|0;if(a|0){c[d+16>>2]=a;c[a+24>>2]=d}a=c[b+4>>2]|0;if(a|0){c[d+20>>2]=a;c[a+24>>2]=d}}}while(0);c[j+4>>2]=f|1;c[i+f>>2]=f;if((j|0)==(c[27199]|0)){c[27196]=f;return}}else{c[a>>2]=d&-2;c[j+4>>2]=b|1;c[i+b>>2]=b;f=b}a=f>>>3;if(f>>>0<256){d=108816+(a<<1<<2)|0;b=c[27194]|0;a=1<<a;if(!(b&a)){c[27194]=b|a;a=d+8|0;b=d}else{b=d+8|0;a=b;b=c[b>>2]|0}c[a>>2]=j;c[b+12>>2]=j;c[j+8>>2]=b;c[j+12>>2]=d;return}a=f>>>8;if(a)if(f>>>0>16777215)e=31;else{i=(a+1048320|0)>>>16&8;k=a<<i;h=(k+520192|0)>>>16&4;k=k<<h;e=(k+245760|0)>>>16&2;e=14-(h|i|e)+(k<<e>>>15)|0;e=f>>>(e+7|0)&1|e<<1}else e=0;b=109080+(e<<2)|0;c[j+28>>2]=e;c[j+20>>2]=0;c[j+16>>2]=0;a=c[27195]|0;d=1<<e;a:do if(!(a&d)){c[27195]=a|d;c[b>>2]=j;c[j+24>>2]=b;c[j+12>>2]=j;c[j+8>>2]=j}else{a=c[b>>2]|0;b:do if((c[a+4>>2]&-8|0)!=(f|0)){e=f<<((e|0)==31?0:25-(e>>>1)|0);while(1){d=a+16+(e>>>31<<2)|0;b=c[d>>2]|0;if(!b)break;if((c[b+4>>2]&-8|0)==(f|0)){a=b;break b}else{e=e<<1;a=b}}c[d>>2]=j;c[j+24>>2]=a;c[j+12>>2]=j;c[j+8>>2]=j;break a}while(0);i=a+8|0;k=c[i>>2]|0;c[k+12>>2]=j;c[i>>2]=j;c[j+8>>2]=k;c[j+12>>2]=a;c[j+24>>2]=0}while(0);k=(c[27202]|0)+-1|0;c[27202]=k;if(k|0)return;a=109232;while(1){a=c[a>>2]|0;if(!a)break;else a=a+8|0}c[27202]=-1;return}function kD(a,b){a=a|0;b=b|0;var d=0,e=0;if(!a){a=iD(b)|0;return a|0}if(b>>>0>4294967231){c[(Uc()|0)>>2]=48;a=0;return a|0}d=lD(a+-8|0,b>>>0<11?16:b+11&-8)|0;if(d|0){a=d+8|0;return a|0}d=iD(b)|0;if(!d){a=0;return a|0}e=c[a+-4>>2]|0;e=(e&-8)-((e&3|0)==0?8:4)|0;yD(d|0,a|0,(e>>>0<b>>>0?e:b)|0)|0;jD(a);a=d;return a|0}function lD(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;m=a+4|0;l=c[m>>2]|0;d=l&-8;i=a+d|0;if(!(l&3)){if(b>>>0<256){a=0;return a|0}if(d>>>0>=(b+4|0)>>>0?(d-b|0)>>>0<=c[27314]<<1>>>0:0)return a|0;a=0;return a|0}if(d>>>0>=b>>>0){d=d-b|0;if(d>>>0<=15)return a|0;k=a+b|0;c[m>>2]=l&1|b|2;c[k+4>>2]=d|3;b=i+4|0;c[b>>2]=c[b>>2]|1;mD(k,d);return a|0}if((c[27200]|0)==(i|0)){k=(c[27197]|0)+d|0;e=k-b|0;d=a+b|0;if(k>>>0<=b>>>0){a=0;return a|0}c[m>>2]=l&1|b|2;c[d+4>>2]=e|1;c[27200]=d;c[27197]=e;return a|0}if((c[27199]|0)==(i|0)){e=(c[27196]|0)+d|0;if(e>>>0<b>>>0){a=0;return a|0}d=e-b|0;if(d>>>0>15){k=a+b|0;e=a+e|0;c[m>>2]=l&1|b|2;c[k+4>>2]=d|1;c[e>>2]=d;e=e+4|0;c[e>>2]=c[e>>2]&-2;e=k}else{c[m>>2]=l&1|e|2;e=a+e+4|0;c[e>>2]=c[e>>2]|1;e=0;d=0}c[27196]=d;c[27199]=e;return a|0}e=c[i+4>>2]|0;if(e&2|0){a=0;return a|0}j=(e&-8)+d|0;if(j>>>0<b>>>0){a=0;return a|0}k=j-b|0;f=e>>>3;do if(e>>>0<256){e=c[i+8>>2]|0;d=c[i+12>>2]|0;if((d|0)==(e|0)){c[27194]=c[27194]&~(1<<f);break}else{c[e+12>>2]=d;c[d+8>>2]=e;break}}else{h=c[i+24>>2]|0;d=c[i+12>>2]|0;do if((d|0)==(i|0)){f=i+16|0;e=f+4|0;d=c[e>>2]|0;if(!d){d=c[f>>2]|0;if(!d){f=0;break}else e=f}while(1){g=d+20|0;f=c[g>>2]|0;if(!f){g=d+16|0;f=c[g>>2]|0;if(!f)break;else{d=f;e=g}}else{d=f;e=g}}c[e>>2]=0;f=d}else{f=c[i+8>>2]|0;c[f+12>>2]=d;c[d+8>>2]=f;f=d}while(0);if(h|0){d=c[i+28>>2]|0;e=109080+(d<<2)|0;if((c[e>>2]|0)==(i|0)){c[e>>2]=f;if(!f){c[27195]=c[27195]&~(1<<d);break}}else{g=h+16|0;c[((c[g>>2]|0)==(i|0)?g:h+20|0)>>2]=f;if(!f)break}c[f+24>>2]=h;e=i+16|0;d=c[e>>2]|0;if(d|0){c[f+16>>2]=d;c[d+24>>2]=f}d=c[e+4>>2]|0;if(d|0){c[f+20>>2]=d;c[d+24>>2]=f}}}while(0);if(k>>>0<16){c[m>>2]=l&1|j|2;b=a+j+4|0;c[b>>2]=c[b>>2]|1;return a|0}else{i=a+b|0;c[m>>2]=l&1|b|2;c[i+4>>2]=k|3;b=a+j+4|0;c[b>>2]=c[b>>2]|1;mD(i,k);return a|0}return 0}function mD(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;j=a+b|0;d=c[a+4>>2]|0;do if(!(d&1)){e=c[a>>2]|0;if(!(d&3))return;g=a+(0-e)|0;h=e+b|0;if((c[27199]|0)==(g|0)){a=j+4|0;d=c[a>>2]|0;if((d&3|0)!=3){i=g;a=h;break}c[27196]=h;c[a>>2]=d&-2;c[g+4>>2]=h|1;c[j>>2]=h;return}b=e>>>3;if(e>>>0<256){d=c[g+8>>2]|0;a=c[g+12>>2]|0;if((a|0)==(d|0)){c[27194]=c[27194]&~(1<<b);i=g;a=h;break}else{c[d+12>>2]=a;c[a+8>>2]=d;i=g;a=h;break}}f=c[g+24>>2]|0;d=c[g+12>>2]|0;do if((d|0)==(g|0)){b=g+16|0;a=b+4|0;d=c[a>>2]|0;if(!d){d=c[b>>2]|0;if(!d){b=0;break}else a=b}while(1){e=d+20|0;b=c[e>>2]|0;if(!b){e=d+16|0;b=c[e>>2]|0;if(!b)break;else{d=b;a=e}}else{d=b;a=e}}c[a>>2]=0;b=d}else{b=c[g+8>>2]|0;c[b+12>>2]=d;c[d+8>>2]=b;b=d}while(0);if(f){d=c[g+28>>2]|0;a=109080+(d<<2)|0;if((c[a>>2]|0)==(g|0)){c[a>>2]=b;if(!b){c[27195]=c[27195]&~(1<<d);i=g;a=h;break}}else{i=f+16|0;c[((c[i>>2]|0)==(g|0)?i:f+20|0)>>2]=b;if(!b){i=g;a=h;break}}c[b+24>>2]=f;a=g+16|0;d=c[a>>2]|0;if(d|0){c[b+16>>2]=d;c[d+24>>2]=b}d=c[a+4>>2]|0;if(d){c[b+20>>2]=d;c[d+24>>2]=b;i=g;a=h}else{i=g;a=h}}else{i=g;a=h}}else{i=a;a=b}while(0);d=j+4|0;b=c[d>>2]|0;if(!(b&2)){if((c[27200]|0)==(j|0)){j=(c[27197]|0)+a|0;c[27197]=j;c[27200]=i;c[i+4>>2]=j|1;if((i|0)!=(c[27199]|0))return;c[27199]=0;c[27196]=0;return}if((c[27199]|0)==(j|0)){j=(c[27196]|0)+a|0;c[27196]=j;c[27199]=i;c[i+4>>2]=j|1;c[i+j>>2]=j;return}g=(b&-8)+a|0;e=b>>>3;do if(b>>>0<256){a=c[j+8>>2]|0;d=c[j+12>>2]|0;if((d|0)==(a|0)){c[27194]=c[27194]&~(1<<e);break}else{c[a+12>>2]=d;c[d+8>>2]=a;break}}else{f=c[j+24>>2]|0;d=c[j+12>>2]|0;do if((d|0)==(j|0)){b=j+16|0;a=b+4|0;d=c[a>>2]|0;if(!d){d=c[b>>2]|0;if(!d){b=0;break}else a=b}while(1){e=d+20|0;b=c[e>>2]|0;if(!b){e=d+16|0;b=c[e>>2]|0;if(!b)break;else{d=b;a=e}}else{d=b;a=e}}c[a>>2]=0;b=d}else{b=c[j+8>>2]|0;c[b+12>>2]=d;c[d+8>>2]=b;b=d}while(0);if(f|0){d=c[j+28>>2]|0;a=109080+(d<<2)|0;if((c[a>>2]|0)==(j|0)){c[a>>2]=b;if(!b){c[27195]=c[27195]&~(1<<d);break}}else{h=f+16|0;c[((c[h>>2]|0)==(j|0)?h:f+20|0)>>2]=b;if(!b)break}c[b+24>>2]=f;a=j+16|0;d=c[a>>2]|0;if(d|0){c[b+16>>2]=d;c[d+24>>2]=b}d=c[a+4>>2]|0;if(d|0){c[b+20>>2]=d;c[d+24>>2]=b}}}while(0);c[i+4>>2]=g|1;c[i+g>>2]=g;if((i|0)==(c[27199]|0)){c[27196]=g;return}else a=g}else{c[d>>2]=b&-2;c[i+4>>2]=a|1;c[i+a>>2]=a}d=a>>>3;if(a>>>0<256){b=108816+(d<<1<<2)|0;a=c[27194]|0;d=1<<d;if(!(a&d)){c[27194]=a|d;d=b+8|0;a=b}else{a=b+8|0;d=a;a=c[a>>2]|0}c[d>>2]=i;c[a+12>>2]=i;c[i+8>>2]=a;c[i+12>>2]=b;return}d=a>>>8;if(d)if(a>>>0>16777215)f=31;else{h=(d+1048320|0)>>>16&8;j=d<<h;g=(j+520192|0)>>>16&4;j=j<<g;f=(j+245760|0)>>>16&2;f=14-(g|h|f)+(j<<f>>>15)|0;f=a>>>(f+7|0)&1|f<<1}else f=0;b=109080+(f<<2)|0;c[i+28>>2]=f;c[i+20>>2]=0;c[i+16>>2]=0;d=c[27195]|0;e=1<<f;if(!(d&e)){c[27195]=d|e;c[b>>2]=i;c[i+24>>2]=b;c[i+12>>2]=i;c[i+8>>2]=i;return}d=c[b>>2]|0;a:do if((c[d+4>>2]&-8|0)!=(a|0)){f=a<<((f|0)==31?0:25-(f>>>1)|0);while(1){e=d+16+(f>>>31<<2)|0;b=c[e>>2]|0;if(!b)break;if((c[b+4>>2]&-8|0)==(a|0)){d=b;break a}else{f=f<<1;d=b}}c[e>>2]=i;c[i+24>>2]=d;c[i+12>>2]=i;c[i+8>>2]=i;return}while(0);h=d+8|0;j=c[h>>2]|0;c[j+12>>2]=i;c[h>>2]=i;c[i+8>>2]=j;c[i+12>>2]=d;c[i+24>>2]=0;return}function nD(a){a=a|0;var b=0,d=0;d=xD()|0;b=c[d>>2]|0;a=b+a|0;if(a>>>0>(T()|0)>>>0?(V(a|0)|0)==0:0){c[(Uc()|0)>>2]=48;d=-1;return d|0}c[d>>2]=a;d=b;return d|0}function oD(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;f=a&65535;e=b&65535;c=t(e,f)|0;d=a>>>16;a=(c>>>16)+(t(e,d)|0)|0;e=b>>>16;b=t(e,f)|0;return (w((a>>>16)+(t(e,d)|0)+(((a&65535)+b|0)>>>16)|0),a+b<<16|c&65535|0)|0}function pD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a;f=c;c=oD(e,f)|0;a=x()|0;return (w((t(b,f)|0)+(t(d,e)|0)+a|a&0|0),c|0|0)|0}function qD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;c=a+c>>>0;return (w(b+d+(c>>>0<a>>>0|0)>>>0|0),c|0)|0}function rD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;d=b-d-(c>>>0>a>>>0|0)>>>0;return (w(d|0),a-c>>>0|0)|0}function sD(a){a=a|0;return (a?31-(u(a^a-1)|0)|0:32)|0}function tD(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;l=a;j=b;k=j;h=d;n=e;i=n;if(!k){g=(f|0)!=0;if(!i){if(g){c[f>>2]=(l>>>0)%(h>>>0);c[f+4>>2]=0}n=0;f=(l>>>0)/(h>>>0)>>>0;return (w(n|0),f)|0}else{if(!g){n=0;f=0;return (w(n|0),f)|0}c[f>>2]=a|0;c[f+4>>2]=b&0;n=0;f=0;return (w(n|0),f)|0}}g=(i|0)==0;do if(h){if(!g){g=(u(i|0)|0)-(u(k|0)|0)|0;if(g>>>0<=31){m=g+1|0;i=31-g|0;b=g-31>>31;h=m;a=l>>>(m>>>0)&b|k<<i;b=k>>>(m>>>0)&b;g=0;i=l<<i;break}if(!f){n=0;f=0;return (w(n|0),f)|0}c[f>>2]=a|0;c[f+4>>2]=j|b&0;n=0;f=0;return (w(n|0),f)|0}g=h-1|0;if(g&h|0){i=(u(h|0)|0)+33-(u(k|0)|0)|0;p=64-i|0;m=32-i|0;j=m>>31;o=i-32|0;b=o>>31;h=i;a=m-1>>31&k>>>(o>>>0)|(k<<m|l>>>(i>>>0))&b;b=b&k>>>(i>>>0);g=l<<p&j;i=(k<<p|l>>>(o>>>0))&j|l<<m&i-33>>31;break}if(f|0){c[f>>2]=g&l;c[f+4>>2]=0}if((h|0)==1){o=j|b&0;p=a|0|0;return (w(o|0),p)|0}else{p=sD(h|0)|0;o=k>>>(p>>>0)|0;p=k<<32-p|l>>>(p>>>0)|0;return (w(o|0),p)|0}}else{if(g){if(f|0){c[f>>2]=(k>>>0)%(h>>>0);c[f+4>>2]=0}o=0;p=(k>>>0)/(h>>>0)>>>0;return (w(o|0),p)|0}if(!l){if(f|0){c[f>>2]=0;c[f+4>>2]=(k>>>0)%(i>>>0)}o=0;p=(k>>>0)/(i>>>0)>>>0;return (w(o|0),p)|0}g=i-1|0;if(!(g&i)){if(f|0){c[f>>2]=a|0;c[f+4>>2]=g&k|b&0}o=0;p=k>>>((sD(i|0)|0)>>>0);return (w(o|0),p)|0}g=(u(i|0)|0)-(u(k|0)|0)|0;if(g>>>0<=30){b=g+1|0;i=31-g|0;h=b;a=k<<i|l>>>(b>>>0);b=k>>>(b>>>0);g=0;i=l<<i;break}if(!f){o=0;p=0;return (w(o|0),p)|0}c[f>>2]=a|0;c[f+4>>2]=j|b&0;o=0;p=0;return (w(o|0),p)|0}while(0);if(!h){k=i;j=0;i=0}else{m=d|0|0;l=n|e&0;k=qD(m|0,l|0,-1,-1)|0;d=x()|0;j=i;i=0;do{e=j;j=g>>>31|j<<1;g=i|g<<1;e=a<<1|e>>>31|0;n=a>>>31|b<<1|0;rD(k|0,d|0,e|0,n|0)|0;p=x()|0;o=p>>31|((p|0)<0?-1:0)<<1;i=o&1;a=rD(e|0,n|0,o&m|0,(((p|0)<0?-1:0)>>31|((p|0)<0?-1:0)<<1)&l|0)|0;b=x()|0;h=h-1|0}while((h|0)!=0);k=j;j=0}h=0;if(f|0){c[f>>2]=a;c[f+4>>2]=b}o=(g|0)>>>31|(k|h)<<1|(h<<1|g>>>31)&0|j;p=(g<<1|0>>>31)&-2|i;return (w(o|0),p)|0}function uD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return tD(a,b,c,d,0)|0}function vD(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){w(b>>>c|0);return a>>>c|(b&(1<<c)-1)<<32-c}w(0);return b>>>c-32|0}function wD(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){w(b<<c|(a&(1<<c)-1<<32-c)>>>32-c|0);return a<<c}w(a<<c-32|0);return 0}function xD(){return 109312}function yD(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if((e|0)>=8192){U(b|0,d|0,e|0)|0;return b|0}h=b|0;g=b+e|0;if((b&3)==(d&3)){while(b&3){if(!e)return h|0;a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;e=e-1|0}e=g&-4|0;f=e-64|0;while((b|0)<=(f|0)){c[b>>2]=c[d>>2];c[b+4>>2]=c[d+4>>2];c[b+8>>2]=c[d+8>>2];c[b+12>>2]=c[d+12>>2];c[b+16>>2]=c[d+16>>2];c[b+20>>2]=c[d+20>>2];c[b+24>>2]=c[d+24>>2];c[b+28>>2]=c[d+28>>2];c[b+32>>2]=c[d+32>>2];c[b+36>>2]=c[d+36>>2];c[b+40>>2]=c[d+40>>2];c[b+44>>2]=c[d+44>>2];c[b+48>>2]=c[d+48>>2];c[b+52>>2]=c[d+52>>2];c[b+56>>2]=c[d+56>>2];c[b+60>>2]=c[d+60>>2];b=b+64|0;d=d+64|0}while((b|0)<(e|0)){c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0}}else{e=g-4|0;while((b|0)<(e|0)){a[b>>0]=a[d>>0]|0;a[b+1>>0]=a[d+1>>0]|0;a[b+2>>0]=a[d+2>>0]|0;a[b+3>>0]=a[d+3>>0]|0;b=b+4|0;d=d+4|0}}while((b|0)<(g|0)){a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0}return h|0}function zD(b,c,d){b=b|0;c=c|0;d=d|0;var e=0;if((c|0)<(b|0)&(b|0)<(c+d|0)){e=b;c=c+d|0;b=b+d|0;while((d|0)>0){b=b-1|0;c=c-1|0;d=d-1|0;a[b>>0]=a[c>>0]|0}b=e}else yD(b,c,d)|0;return b|0}function AD(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;h=b+e|0;d=d&255;if((e|0)>=67){while(b&3){a[b>>0]=d;b=b+1|0}f=h&-4|0;i=d|d<<8|d<<16|d<<24;g=f-64|0;while((b|0)<=(g|0)){c[b>>2]=i;c[b+4>>2]=i;c[b+8>>2]=i;c[b+12>>2]=i;c[b+16>>2]=i;c[b+20>>2]=i;c[b+24>>2]=i;c[b+28>>2]=i;c[b+32>>2]=i;c[b+36>>2]=i;c[b+40>>2]=i;c[b+44>>2]=i;c[b+48>>2]=i;c[b+52>>2]=i;c[b+56>>2]=i;c[b+60>>2]=i;b=b+64|0}while((b|0)<(f|0)){c[b>>2]=i;b=b+4|0}}while((b|0)<(h|0)){a[b>>0]=d;b=b+1|0}return h-e|0}function BD(a,b){a=a|0;b=b|0;return ma[a&127](b|0)|0}function CD(a,b,c,d,e,f,g){a=a|0;b=b|0;c=+c;d=d|0;e=e|0;f=f|0;g=g|0;return na[a&1](b|0,+c,d|0,e|0,f|0,g|0)|0}function DD(a,b,c){a=a|0;b=b|0;c=c|0;return oa[a&63](b|0,c|0)|0}function ED(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return pa[a&31](b|0,c|0,d|0)|0}function FD(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return qa[a&15](b|0,c|0,d|0,e|0)|0}function GD(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;return ra[a&7](b|0,c|0,d|0,e|0,+f)|0}function HD(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return sa[a&31](b|0,c|0,d|0,e|0,f|0)|0}function ID(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;return ta[a&3](b|0,c|0,d|0,e|0,f|0,+g)|0}function JD(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return ua[a&63](b|0,c|0,d|0,e|0,f|0,g|0)|0}function KD(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return va[a&7](b|0,c|0,d|0,e|0,f|0,g|0,h|0)|0}function LD(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;return wa[a&15](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)|0}function MD(a){a=a|0;xa[a&3]()}function ND(a,b){a=a|0;b=b|0;ya[a&255](b|0)}function OD(a,b,c){a=a|0;b=b|0;c=c|0;za[a&127](b|0,c|0)}function PD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Aa[a&7](b|0,c|0,d|0)}function QD(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;Ba[a&15](b|0,c|0,d|0,e|0)}function RD(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;Ca[a&3](b|0,c|0,d|0,e|0,f|0)}function SD(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;Da[a&15](b|0,c|0,d|0,e|0,f|0,g|0)}function TD(a){a=a|0;v(0);return 0}function UD(a,b,c,d,e,f){a=a|0;b=+b;c=c|0;d=d|0;e=e|0;f=f|0;v(1);return 0}function VD(a,b){a=a|0;b=b|0;v(2);return 0}function WD(a,b,c){a=a|0;b=b|0;c=c|0;v(3);return 0}function XD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;v(4);return 0}function YD(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;v(5);return 0}function ZD(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;v(6);return 0}function _D(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;v(7);return 0}function $D(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;v(8);return 0}function aE(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;v(9);return 0}function bE(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;v(10);return 0}function cE(){v(11)}function dE(a){a=a|0;v(12)}function eE(a,b){a=a|0;b=b|0;v(13)}function fE(a,b,c){a=a|0;b=b|0;c=c|0;v(14)}function gE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;v(15)}function hE(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;v(16)}function iE(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;v(17)}\n\n// EMSCRIPTEN_END_FUNCS\nvar ma=[TD,hs,is,hb,ls,Mc,Nc,Oc,Pc,Ic,Jc,Kc,Lc,Qc,Xc,ur,ks,ws,xs,zs,As,Gt,Mt,Rt,St,Xt,Yt,rw,yw,zw,Aw,Bw,Cw,Dw,Ew,$w,gx,hx,ix,jx,kx,lx,mx,Wx,Xx,ay,fy,gy,ly,qy,ry,wy,By,Cy,Hy,Dz,Ez,Gz,Vz,Wz,Yz,BA,CA,IA,JA,Oz,Pz,Rz,cA,dA,fA,Ec,Hc,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD,TD];var na=[UD,rd];var oa=[VD,ib,jb,ih,jh,kh,lh,Lh,Yh,Ni,Oi,Pi,Qi,qn,rn,sn,tn,Fo,Po,Qo,Hp,Ip,Jp,$p,aq,Cq,Dq,ms,os,Bs,Ds,It,Ot,Tt,Zt,oA,qA,sA,TA,VA,XA,ac,cc,ec,Bc,VD,VD,VD,VD,VD,VD,VD,VD,VD,VD,VD,VD,VD,VD,VD,VD,VD,VD,VD];var pa=[WD,es,js,ns,Rc,Wc,Nd,tf,ts,ys,Cs,Ht,Nt,eu,lu,rz,wz,pA,rA,uA,PA,UA,WA,ZA,Ke,WD,WD,WD,WD,WD,WD,WD];var qa=[XD,Zb,_b,sc,tc,Sc,Yc,tA,QA,RA,SA,YA,XD,XD,XD,XD];var ra=[YD,Uv,Vv,jw,kw,YD,YD,YD];var sa=[ZD,cu,ju,Pv,Qv,Sv,Wv,ew,fw,hw,lw,Cz,Fz,Uz,Xz,vA,_A,Nz,Qz,bA,eA,ZD,ZD,ZD,ZD,ZD,ZD,ZD,ZD,ZD,ZD,ZD];var ta=[_D,fz,lz,_D];var ua=[$D,qu,ru,su,tu,uu,vu,wu,xu,yu,zu,Au,mv,nv,ov,pv,qv,rv,sv,tv,uv,vv,wv,Rv,Tv,gw,iw,sw,tw,uw,vw,ww,ax,bx,cx,dx,ex,gz,mz,$D,$D,$D,$D,$D,$D,$D,$D,$D,$D,$D,$D,$D,$D,$D,$D,$D,$D,$D,$D,$D,$D,$D,$D,$D];var va=[aE,Kx,Qx,My,Ny,Xy,Yy,aE];var wa=[bE,xw,fx,Az,Bz,Sz,Tz,Lz,Mz,$z,aA,bE,bE,bE,bE,bE];var xa=[cE,vh,jf,cE];var ya=[dE,Na,ab,_a,bb,$a,cb,at,bt,ct,dt,et,ft,Is,Js,Ks,Ls,Ss,Ts,Us,Vs,db,eb,Yb,rc,pf,qf,rf,sf,Cf,ph,qh,wh,Dh,Hh,Oh,$h,ii,vi,Ti,kj,pj,uj,zj,Dj,Ij,Oj,sk,wk,Ak,Ek,Ik,Nk,Sk,Xk,dl,jl,rl,vl,Dl,Il,Ml,Xl,em,jm,om,tm,ym,Em,Jm,Qm,Vm,_m,fn,wn,Cn,Mn,Sn,Yn,ao,ho,qo,vo,Bo,Io,To,ep,kp,Mp,Rp,Vp,dq,hq,lq,pq,tq,Gq,Kq,gr,sr,tr,zr,Ar,Xr,Yr,Zr,$r,bs,cs,qs,rs,Ns,Os,Ps,Qs,Xs,Ys,Zs,_s,Et,Kt,Pt,Vt,$t,au,bu,hu,iu,ou,pu,kv,lv,Nv,Ov,cw,dw,pw,qw,Zw,_w,Ix,Jx,Ox,Px,Ux,Vx,dy,ey,oy,py,zy,Ay,Ky,Ly,Vy,Wy,dz,ez,jz,kz,pz,qz,uz,vz,gu,Kz,zz,Zz,_z,jA,kA,mA,nA,zA,AA,GA,HA,NA,OA,$A,aB,bB,Wa,Iu,Ku,Oy,jD,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE,dE];var za=[eE,ds,mh,nh,oh,Bh,Ch,Gh,Mh,Nh,Zh,_h,gi,hi,ui,Ri,Si,jj,oj,tj,yj,Cj,Hj,Nj,rk,vk,zk,Dk,Hk,Kk,Rk,Wk,cl,il,ql,ul,Bl,Cl,Hl,Ll,Vl,Wl,dm,im,nm,rm,sm,xm,Dm,Im,Pm,Um,Zm,en,un,vn,Bn,Kn,Ln,Rn,Xn,$n,go,po,to,uo,zo,Ao,Go,Ho,Ro,So,dp,jp,Kp,Lp,Qp,Up,bq,cq,gq,kq,oq,sq,Eq,Fq,Jq,fr,ss,Ft,Lt,Qt,Wt,Yx,Zx,_x,$x,by,cy,hy,iy,jy,ky,my,ny,sy,ty,uy,vy,xy,yy,Dy,Ey,Fy,Gy,Iy,Jy,tz,yz,DA,EA,FA,KA,LA,MA,sd,eE,eE];var Aa=[fE,$b,bc,dc,Cc,fE,fE,fE];var Ba=[gE,gb,wf,Ff,Dr,gs,vs,du,ku,gE,gE,gE,gE,gE,gE,gE];var Ca=[hE,vf,Ef,Cr];var Da=[iE,fb,uf,Df,Br,fs,us,sz,xz,iE,iE,iE,iE,iE,iE,iE];return{_MGSC_compile:Ja,__ZSt18uncaught_exceptionv:Vr,___cxa_can_catch:Or,___cxa_is_pointer_type:Pr,___errno_location:Uc,___muldi3:pD,___udivdi3:uD,_bitshift64Lshr:vD,_bitshift64Shl:wD,_emscripten_get_sbrk_ptr:xD,_free:jD,_i64Add:qD,_i64Subtract:rD,_malloc:iD,_memcpy:yD,_memmove:zD,_memset:AD,dynCall_ii:BD,dynCall_iidiiii:CD,dynCall_iii:DD,dynCall_iiii:ED,dynCall_iiiii:FD,dynCall_iiiiid:GD,dynCall_iiiiii:HD,dynCall_iiiiiid:ID,dynCall_iiiiiii:JD,dynCall_iiiiiiii:KD,dynCall_iiiiiiiii:LD,dynCall_v:MD,dynCall_vi:ND,dynCall_vii:OD,dynCall_viii:PD,dynCall_viiii:QD,dynCall_viiiii:RD,dynCall_viiiiii:SD,establishStackSpace:Ia,globalCtors:Ea,stackAlloc:Fa,stackRestore:Ha,stackSave:Ga}})\n\n\n// EMSCRIPTEN_END_ASM\n(asmGlobalArg,asmLibraryArg,buffer);var _MGSC_compile=Module[\"_MGSC_compile\"]=asm[\"_MGSC_compile\"];var __ZSt18uncaught_exceptionv=Module[\"__ZSt18uncaught_exceptionv\"]=asm[\"__ZSt18uncaught_exceptionv\"];var ___cxa_can_catch=Module[\"___cxa_can_catch\"]=asm[\"___cxa_can_catch\"];var ___cxa_is_pointer_type=Module[\"___cxa_is_pointer_type\"]=asm[\"___cxa_is_pointer_type\"];var ___errno_location=Module[\"___errno_location\"]=asm[\"___errno_location\"];var ___muldi3=Module[\"___muldi3\"]=asm[\"___muldi3\"];var ___udivdi3=Module[\"___udivdi3\"]=asm[\"___udivdi3\"];var _bitshift64Lshr=Module[\"_bitshift64Lshr\"]=asm[\"_bitshift64Lshr\"];var _bitshift64Shl=Module[\"_bitshift64Shl\"]=asm[\"_bitshift64Shl\"];var _emscripten_get_sbrk_ptr=Module[\"_emscripten_get_sbrk_ptr\"]=asm[\"_emscripten_get_sbrk_ptr\"];var _free=Module[\"_free\"]=asm[\"_free\"];var _i64Add=Module[\"_i64Add\"]=asm[\"_i64Add\"];var _i64Subtract=Module[\"_i64Subtract\"]=asm[\"_i64Subtract\"];var _malloc=Module[\"_malloc\"]=asm[\"_malloc\"];var _memcpy=Module[\"_memcpy\"]=asm[\"_memcpy\"];var _memmove=Module[\"_memmove\"]=asm[\"_memmove\"];var _memset=Module[\"_memset\"]=asm[\"_memset\"];var establishStackSpace=Module[\"establishStackSpace\"]=asm[\"establishStackSpace\"];var globalCtors=Module[\"globalCtors\"]=asm[\"globalCtors\"];var stackAlloc=Module[\"stackAlloc\"]=asm[\"stackAlloc\"];var stackRestore=Module[\"stackRestore\"]=asm[\"stackRestore\"];var stackSave=Module[\"stackSave\"]=asm[\"stackSave\"];var dynCall_ii=Module[\"dynCall_ii\"]=asm[\"dynCall_ii\"];var dynCall_iidiiii=Module[\"dynCall_iidiiii\"]=asm[\"dynCall_iidiiii\"];var dynCall_iii=Module[\"dynCall_iii\"]=asm[\"dynCall_iii\"];var dynCall_iiii=Module[\"dynCall_iiii\"]=asm[\"dynCall_iiii\"];var dynCall_iiiii=Module[\"dynCall_iiiii\"]=asm[\"dynCall_iiiii\"];var dynCall_iiiiid=Module[\"dynCall_iiiiid\"]=asm[\"dynCall_iiiiid\"];var dynCall_iiiiii=Module[\"dynCall_iiiiii\"]=asm[\"dynCall_iiiiii\"];var dynCall_iiiiiid=Module[\"dynCall_iiiiiid\"]=asm[\"dynCall_iiiiiid\"];var dynCall_iiiiiii=Module[\"dynCall_iiiiiii\"]=asm[\"dynCall_iiiiiii\"];var dynCall_iiiiiiii=Module[\"dynCall_iiiiiiii\"]=asm[\"dynCall_iiiiiiii\"];var dynCall_iiiiiiiii=Module[\"dynCall_iiiiiiiii\"]=asm[\"dynCall_iiiiiiiii\"];var dynCall_v=Module[\"dynCall_v\"]=asm[\"dynCall_v\"];var dynCall_vi=Module[\"dynCall_vi\"]=asm[\"dynCall_vi\"];var dynCall_vii=Module[\"dynCall_vii\"]=asm[\"dynCall_vii\"];var dynCall_viii=Module[\"dynCall_viii\"]=asm[\"dynCall_viii\"];var dynCall_viiii=Module[\"dynCall_viiii\"]=asm[\"dynCall_viiii\"];var dynCall_viiiii=Module[\"dynCall_viiiii\"]=asm[\"dynCall_viiiii\"];var dynCall_viiiiii=Module[\"dynCall_viiiiii\"]=asm[\"dynCall_viiiiii\"];Module[\"asm\"]=asm;Module[\"ccall\"]=ccall;Module[\"cwrap\"]=cwrap;Module[\"AsciiToString\"]=AsciiToString;if(memoryInitializer){if(!isDataURI(memoryInitializer)){memoryInitializer=locateFile(memoryInitializer)}if(ENVIRONMENT_IS_NODE||ENVIRONMENT_IS_SHELL){var data=readBinary(memoryInitializer);HEAPU8.set(data,GLOBAL_BASE)}else{addRunDependency(\"memory initializer\");var applyMemoryInitializer=function(data){if(data.byteLength)data=new Uint8Array(data);HEAPU8.set(data,GLOBAL_BASE);if(Module[\"memoryInitializerRequest\"])delete Module[\"memoryInitializerRequest\"].response;removeRunDependency(\"memory initializer\")};var doBrowserLoad=function(){readAsync(memoryInitializer,applyMemoryInitializer,function(){throw\"could not load memory initializer \"+memoryInitializer})};var memoryInitializerBytes=tryParseAsDataURI(memoryInitializer);if(memoryInitializerBytes){applyMemoryInitializer(memoryInitializerBytes.buffer)}else if(Module[\"memoryInitializerRequest\"]){var useRequest=function(){var request=Module[\"memoryInitializerRequest\"];var response=request.response;if(request.status!==200&&request.status!==0){var data=tryParseAsDataURI(Module[\"memoryInitializerRequestURL\"]);if(data){response=data.buffer}else{console.warn(\"a problem seems to have happened with Module.memoryInitializerRequest, status: \"+request.status+\", retrying \"+memoryInitializer);doBrowserLoad();return}}applyMemoryInitializer(response)};if(Module[\"memoryInitializerRequest\"].response){setTimeout(useRequest,0)}else{Module[\"memoryInitializerRequest\"].addEventListener(\"load\",useRequest)}}else{doBrowserLoad()}}}var calledRun;Module[\"then\"]=function(func){if(calledRun){func(Module)}else{var old=Module[\"onRuntimeInitialized\"];Module[\"onRuntimeInitialized\"]=function(){if(old)old();func(Module)}}return Module};function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0)return;function doRun(){if(calledRun)return;calledRun=true;if(ABORT)return;initRuntime();preMain();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}noExitRuntime=true;run();\n\n\n\n  return Module\n}\n);\n})();\nif (true)\n      module.exports = Module;\n    else {}\n    \n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ \"../node_modules/process/browser.js\"), \"/\", __webpack_require__(/*! ./../../buffer/index.js */ \"../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/mgsc-js/lib/libmgsc.js?");

/***/ }),

/***/ "../node_modules/mgsc-js/src/entry.js":
/*!********************************************!*\
  !*** ../node_modules/mgsc-js/src/entry.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("(function() {\n  \"use strict\";\n  var Module = __webpack_require__(/*! ./mgsc_module */ \"../node_modules/mgsc-js/src/mgsc_module.js\");\n  var Encoding = __webpack_require__(/*! encoding-japanese */ \"../node_modules/encoding-japanese/src/index.js\");\n\n  function extractBanner(raw) {\n    var m = raw.match(/^((.*\\n)+?)\\s*\\n/);\n    if (m != null) {\n      return m[1];\n    }\n    return null;\n  }\n\n  function extractTrackInfo(raw) {\n    var m = raw.match(/(track :.*\\n)+.*\\ntotal :.*\\n/);\n    if (m != null) {\n      return m[0];\n    }\n    return null;\n  }\n\n  function extractErrorInfo(raw) {\n    var m = raw.match(/\\n(.*) in ([0-9]+)\\n>> (.*)\\n/);\n    if (m != null) {\n      return {\n        message: m[1],\n        lineNumber: Number(m[2]) + 1,\n        lineText: m[3]\n      };\n    }\n    return null;\n  }\n\n  /**\n   * A MGSC emulator for JavaScript. MGSC is a MML compiler for MGSDRV on MSX.\n   *\n   * @name MGSC\n   * @class\n   */\n  var MGSC = function() {};\n\n  /**\n   * @typedef CompilerResult\n   * @prop {Uint8Array} mgs - The output MGS data. Its length is zero if the compiler fails.\n   * @prop {boolean} success - `true` if and only if there is no compilation errors.\n   * @prop {string} rawMessage - The raw output message of the compiler.\n   * @prop {string} bannerText - The banner and copyright text of the compiler.\n   * @prop {string} trackInfoText - The track memory usage corresponding to the -T option output of the original MGSC.)\n   * @prop {Object} [errorInfo] - The error info. `null` if no compilation errors.\n   * @prop {string} errorInfo.message - The error message.\n   * @prop {number} errorInfo.lineNumber - The error line number.\n   * @prop {string} errorInfo.lineText - The error line text.\n   */\n\n  /**\n   * @param {string} mml - The input MML text. It must be a JavaScript string. i.e. UTF-16 encoded.\n   * @returns {CompilerResult}\n   * @static\n   * @memberof MGSC\n   * @example\n   * var MGSC = require('mgsc-js');\n   * var result = MGSC.compile('#opll_mode 0\\n#tempo 120\\n9 v13@0o4cdefgab>c\\n');\n   */\n  MGSC.compile = function(source) {\n    /* remain at least a single space because empty header exists at the last line of mml */\n    /* ex. `9\\n<EOF>` is error but `9 \\n<EOF>` is accepted by original MGSC.COM */\n    var mml = source.replace(/\\s+$/, \" \") + \"\\n\";\n\n    var mmlbuf = Encoding.convert(mml, {\n      to: \"SJIS\",\n      type: \"arraybuffer\"\n    });\n\n    if (16384 * 3 < mmlbuf.length) {\n      throw new Error(\"MML source is too long.\");\n    }\n    var inp = Module._malloc(mmlbuf.length + 1);\n    Module.HEAPU8.set(mmlbuf, inp, mmlbuf.length);\n    Module.HEAPU8[inp + mmlbuf.length] = 0;\n\n    var ptr = Module._malloc(32768);\n    var log = Module._malloc(32768);\n    var size = Module.ccall(\"MGSC_compile\", \"number\", [\"number\", \"number\", \"number\"], [inp, ptr, log]);\n    var mgs = new Uint8Array(size);\n    mgs.set(new Uint8Array(Module.HEAPU8.buffer, ptr, size));\n    var message = Module.AsciiToString(log)\n      .replace(/^\\s*|\\s*$/, \"\")\n      .replace(/\\r/g, \"\");\n\n    Module._free(inp);\n    Module._free(ptr);\n    Module._free(log);\n\n    return {\n      mgs: mgs,\n      success: 0 < mgs.length,\n      errorInfo: extractErrorInfo(message),\n      bannerText: extractBanner(message),\n      trackInfoText: extractTrackInfo(message),\n      rawMessage: message\n    };\n  };\n\n  if (true) {\n    module.exports = MGSC;\n  } else {}\n})();\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/mgsc-js/src/entry.js?");

/***/ }),

/***/ "../node_modules/mgsc-js/src/mgsc_module.js":
/*!**************************************************!*\
  !*** ../node_modules/mgsc-js/src/mgsc_module.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("(function() {\n  \"use strict\";\n  var m = __webpack_require__(/*! ../lib/libmgsc */ \"../node_modules/mgsc-js/lib/libmgsc.js\")();\n  if (true) {\n    module.exports = m;\n  } else {}\n})();\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/mgsc-js/src/mgsc_module.js?");

/***/ }),

/***/ "../node_modules/mgsrc-js/dist/builder.js":
/*!************************************************!*\
  !*** ../node_modules/mgsrc-js/dist/builder.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar opll_voice_1 = __webpack_require__(/*! ./opll-voice */ \"../node_modules/mgsrc-js/dist/opll-voice.js\");\nfunction getTrackHeader(trackNumber) {\n    return \"0123456789ABCDEFGH\".substr(trackNumber, 1);\n}\nfunction _dec(n) {\n    return (\" \" + n).slice(-2);\n}\nfunction declareSccVoice(patch) {\n    var wav = [];\n    for (var i = 0; i < patch.data.length; i++) {\n        var d = patch.data[i];\n        wav.push((\"0\" + d.toString(16)).slice(-2));\n        if (i === 16) {\n            wav.push(\" \");\n        }\n    }\n    return \"@s\" + patch.number + \"={ \" + wav.join(\"\") + \" }\";\n}\nfunction declareOpllVoice(patch) {\n    var voice = opll_voice_1.toOPLLVoice(patch.data);\n    var res = Array();\n    res.push(\"@v\" + patch.number + \" = {\\n\");\n    res.push(\";       TL FB\\n\");\n    res.push(\"        \" + _dec(voice.slots[0].tl) + \",\" + _dec(voice.fb) + \",\\n\");\n    res.push(\"; AR DR SL RR KL ML AM PM EG KR WF\\n\");\n    for (var i = 0; i < 2; i++) {\n        res.push(\"  \" + _dec(voice.slots[i].ar) + \",\");\n        res.push(_dec(voice.slots[i].dr) + \",\");\n        res.push(_dec(voice.slots[i].sl) + \",\");\n        res.push(_dec(voice.slots[i].rr) + \",\");\n        res.push(_dec(voice.slots[i].kl) + \",\");\n        res.push(_dec(voice.slots[i].ml) + \",\");\n        res.push(_dec(voice.slots[i].am) + \",\");\n        res.push(_dec(voice.slots[i].pm) + \",\");\n        res.push(_dec(voice.slots[i].eg) + \",\");\n        res.push(_dec(voice.slots[i].kr) + \",\");\n        res.push(\"\" + _dec(voice.slots[i].wf));\n        res.push(i === 0 ? \",\\n\" : \" }\\n\");\n    }\n    return res.join(\"\");\n}\nfunction declareEnvelope(env) {\n    if (env.type === \"@e\") {\n        var e = env;\n        return \"@e\" + e.number + \"={ \" + e.mode + \", \" + e.nfreq + \", \" + e.commands.map(function (e) { return e.mml; }).join(\"\") + \" }\";\n    }\n    else {\n        var e = env;\n        return \"@r\" + e.number + \"={ \" + e.mode + \", \" + e.nfreq + \", \" + e.al + \", \" + e.ar + \", \" + e.dr + \", \" + e.sl + \", \" + e.sr + \", \" + e.rr + \" }\";\n    }\n}\nexports.declareEnvelope = declareEnvelope;\nfunction declareText(text) {\n    return \"@m\" + text.number + \"={ \\\"\" + text.text + \"\\\" }\";\n}\nexports.declareText = declareText;\nfunction buildAllocList(mgs) {\n    var allocMap = {};\n    if (mgs.voice) {\n        allocMap[0] = mgs.voice.byteLength;\n    }\n    for (var i = 1; i < 18; i++) {\n        var track = mgs.tracks[i];\n        if (track) {\n            allocMap[i] = track.byteLength;\n        }\n    }\n    var res = [];\n    for (var key in allocMap) {\n        res.push(getTrackHeader(parseInt(key)) + \"=\" + allocMap[key]);\n    }\n    return \"{ \" + res.join(\", \") + \" }\";\n}\nexports.buildAllocList = buildAllocList;\nfunction makeTextBlock(text) {\n    var lines = text\n        .split(/\\r\\n/)\n        .filter(function (e) { return e !== \"\"; })\n        .map(function (e) { return \"\\\"\" + e + \"\\\"\"; });\n    if (lines.length === 0) {\n        return null;\n    }\n    if (lines.length === 1) {\n        return \"{ \" + lines.join(\"\\n\") + \" }\";\n    }\n    return \"{\\n  \" + lines.join(\"\\n  \") + \"\\n}\";\n}\nfunction buildMMLHeader(mgs) {\n    var titleBlock = makeTextBlock(mgs.title);\n    var titleCommand = titleBlock ? \"#title \" + titleBlock : \"\";\n    return \";decompiler: mgsrc-js\\n;mgs_version: \" + mgs.version + \"\\n#opll_mode \" + mgs.settings.opllMode + \"\\n#lfo_mode \" + mgs.settings.lfoMode + \"\\n#machine_id \" + mgs.settings.machineId + \"\\n\" + titleCommand + \"\\n#tempo \" + mgs.tempo + \"\\n#alloc \" + buildAllocList(mgs) + \"\\n\";\n}\nexports.buildMMLHeader = buildMMLHeader;\nfunction buildVoiceMML(data) {\n    var res = Array();\n    if (data.psgTunes) {\n        res.push(\"#psg_tune { \" + data.psgTunes.join(\", \") + \" }\");\n        res.push(\"\");\n    }\n    if (data.opllTunes) {\n        res.push(\"#opll_tune { \" + data.opllTunes.join(\", \") + \" }\");\n        res.push(\"\");\n    }\n    if (0 < data.opllPatches.length) {\n        for (var _i = 0, _a = data.opllPatches; _i < _a.length; _i++) {\n            var patch = _a[_i];\n            res.push(declareOpllVoice(patch));\n        }\n        res.push(\"\");\n    }\n    if (0 < data.opllPatchMaps.length) {\n        for (var _b = 0, _c = data.opllPatchMaps; _b < _c.length; _b++) {\n            var map = _c[_b];\n            res.push(\"@#\" + map.from + \"=\" + map.to);\n        }\n        res.push(\"\");\n    }\n    if (0 < data.sccPatches.length) {\n        for (var _d = 0, _e = data.sccPatches; _d < _e.length; _d++) {\n            var patch = _e[_d];\n            res.push(declareSccVoice(patch));\n        }\n        res.push(\"\");\n    }\n    if (0 < data.envelopes.length) {\n        for (var _f = 0, _g = data.envelopes; _f < _g.length; _f++) {\n            var envelope = _g[_f];\n            res.push(declareEnvelope(envelope));\n        }\n        res.push(\"\");\n    }\n    if (0 < data.texts.length) {\n        for (var _h = 0, _j = data.texts; _h < _j.length; _h++) {\n            var text = _j[_h];\n            res.push(declareText(text));\n        }\n        res.push(\"\");\n    }\n    return res.join(\"\\n\");\n}\nexports.buildVoiceMML = buildVoiceMML;\nfunction buildTrackMML(data) {\n    var lines = Array();\n    var line = \"\";\n    var stepCount = 0;\n    var inPortamento = false;\n    var commitLine = function () {\n        lines.push(line);\n        line = \"\";\n        stepCount = 0;\n    };\n    for (var _i = 0, _a = data.commands; _i < _a.length; _i++) {\n        var cmd = _a[_i];\n        if (!inPortamento && 80 <= line.length) {\n            commitLine();\n        }\n        if (cmd.count) {\n            if (!inPortamento && stepCount > 192 * 2) {\n                commitLine();\n            }\n            stepCount += cmd.count;\n        }\n        if (cmd.cmd === 0x57) {\n            if (!inPortamento && (cmd.loop === 0 || stepCount > 192 * 2)) {\n                commitLine();\n            }\n            line += cmd.mml;\n        }\n        else {\n            line += cmd.mml;\n        }\n        if (cmd.cmd === 0x53) {\n            inPortamento = true;\n        }\n        else if (0x20 <= cmd.cmd && cmd.cmd <= 0x3f) {\n            inPortamento = false;\n        }\n    }\n    commitLine();\n    var H = getTrackHeader(data.track);\n    if (data.incomplete) {\n        return H + \" ; MGS300 rhythm track is not supported.\\n\" + lines.map(function (line) { return H + \" ; \" + line; }).join(\"\\n\");\n    }\n    return lines.map(function (line) { return H + \" \" + line; }).join(\"\\n\");\n}\nexports.buildTrackMML = buildTrackMML;\nfunction buildMML(mgs) {\n    var res = [];\n    res.push(buildMMLHeader(mgs));\n    if (mgs.voice) {\n        res.push(buildVoiceMML(mgs.voice));\n    }\n    for (var i = 1; i < 18; i++) {\n        var track = mgs.tracks[i];\n        if (track) {\n            res.push(buildTrackMML(track));\n            res.push(\"\");\n        }\n    }\n    return res.join(\"\\n\");\n}\nexports.buildMML = buildMML;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/mgsrc-js/dist/builder.js?");

/***/ }),

/***/ "../node_modules/mgsrc-js/dist/index.js":
/*!**********************************************!*\
  !*** ../node_modules/mgsrc-js/dist/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar parser_1 = __webpack_require__(/*! ./parser */ \"../node_modules/mgsrc-js/dist/parser.js\");\nvar builder_1 = __webpack_require__(/*! ./builder */ \"../node_modules/mgsrc-js/dist/builder.js\");\nvar uncompress_1 = __webpack_require__(/*! ./uncompress */ \"../node_modules/mgsrc-js/dist/uncompress.js\");\n__export(__webpack_require__(/*! ./builder */ \"../node_modules/mgsrc-js/dist/builder.js\"));\n__export(__webpack_require__(/*! ./parser */ \"../node_modules/mgsrc-js/dist/parser.js\"));\n__export(__webpack_require__(/*! ./uncompress */ \"../node_modules/mgsrc-js/dist/uncompress.js\"));\nfunction mgs2mml(data) {\n    var src = uncompress_1.isCompressed(data) ? uncompress_1.uncompress(data) : data;\n    var mgs = parser_1.parseMGS(src);\n    return builder_1.buildMML(mgs);\n}\nexports.default = mgs2mml;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/mgsrc-js/dist/index.js?");

/***/ }),

/***/ "../node_modules/mgsrc-js/dist/opll-voice.js":
/*!***************************************************!*\
  !*** ../node_modules/mgsrc-js/dist/opll-voice.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction toOPLLVoice(d) {\n    return {\n        fb: d[3] & 7,\n        slots: [\n            {\n                am: (d[0] >> 7) & 1,\n                pm: (d[0] >> 6) & 1,\n                eg: (d[0] >> 5) & 1,\n                kr: (d[0] >> 4) & 1,\n                ml: d[0] & 0xf,\n                kl: (d[2] >> 6) & 3,\n                tl: d[2] & 0x3f,\n                ar: (d[4] >> 4) & 0xf,\n                dr: d[4] & 0xf,\n                sl: (d[6] >> 4) & 0xf,\n                rr: d[6] & 0xf,\n                wf: (d[3] >> 3) & 1\n            },\n            {\n                am: (d[1] >> 7) & 1,\n                pm: (d[1] >> 6) & 1,\n                eg: (d[1] >> 5) & 1,\n                kr: (d[1] >> 4) & 1,\n                ml: d[1] & 0xf,\n                kl: (d[3] >> 6) & 3,\n                tl: 0,\n                ar: (d[5] >> 4) & 0xf,\n                dr: d[5] & 0xf,\n                sl: (d[7] >> 4) & 0xf,\n                rr: d[7] & 0xf,\n                wf: (d[3] >> 4) & 1\n            }\n        ]\n    };\n}\nexports.toOPLLVoice = toOPLLVoice;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/mgsrc-js/dist/opll-voice.js?");

/***/ }),

/***/ "../node_modules/mgsrc-js/dist/parser.js":
/*!***********************************************!*\
  !*** ../node_modules/mgsrc-js/dist/parser.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar encoding_japanese_1 = __importDefault(__webpack_require__(/*! encoding-japanese */ \"../node_modules/encoding-japanese/src/index.js\"));\nvar notes = [\"c\", \"c+\", \"d\", \"d+\", \"e\", \"f\", \"f+\", \"g\", \"g+\", \"a\", \"a+\", \"b\", \"r\", \"r\", \"r\", \"r\"];\nfunction c2l(n) {\n    if (1 < n) {\n        if (192 % n === 0) {\n            return \"\" + 192 / n;\n        }\n        if ((192 + 96) % n === 0) {\n            return (192 + 96) / n + \".\";\n        }\n        if ((192 + 96 + 48) % n === 0) {\n            return (192 + 96 + 48) / n + \"..\";\n        }\n    }\n    return \"%\" + n;\n}\nfunction getRhythmNote(flag) {\n    if (flag === 0x00)\n        return \"r\";\n    var r = [];\n    if (flag & 0x10)\n        r.push(\"b\");\n    if (flag & 0x8)\n        r.push(\"s\");\n    if (flag & 0x4)\n        r.push(\"m\");\n    if (flag & 0x2)\n        r.push(\"c\");\n    if (flag & 0x1)\n        r.push(\"h\");\n    return r.join(\"\");\n}\nfunction parseStepEnvelope(data) {\n    var v = new DataView(data);\n    var res = new Array();\n    var idx = 0;\n    while (idx < v.byteLength) {\n        var cmd = v.getUint8(idx++);\n        if (cmd < 16) {\n            res.push({ mml: cmd.toString(16) });\n        }\n        else if (cmd === 0x10) {\n            var n = v.getUint8(idx++);\n            res.push({ mml: \"@\" + n + \".\" });\n        }\n        else if (cmd === 0x11) {\n            var n1 = v.getUint8(idx++);\n            var n2 = v.getUint8(idx++);\n            res.push({ mml: \"y\" + n1 + \",\" + n2 + \".\" });\n        }\n        else if (cmd === 0x12) {\n            var n = v.getInt8(idx++);\n            res.push({ mml: \"\\\\\" + n + \".\" });\n        }\n        else if (0x20 <= cmd && cmd <= 0x2f) {\n            var n = v.getUint8(idx++);\n            res.push({ mml: (cmd & 0xf).toString(16) + \"=\" + n + \".\" });\n        }\n        else if (cmd === 0x40) {\n            res.push({ mml: \"[\" });\n        }\n        else if (cmd === 0x60) {\n            res.push({ mml: \"]\" });\n        }\n        else if (0x80 <= cmd && cmd <= 0x9f) {\n            res.push({ mml: \"n\" + (cmd & 0x1f) + \".\" });\n        }\n        else if (0xa0 <= cmd && cmd <= 0xaf) {\n            res.push({ mml: \"/\" + (cmd & 0x3) + \".\" });\n        }\n        else if (0xe0 <= cmd && cmd <= 0xef) {\n            var n = v.getUint8(idx++);\n            res.push({ mml: (cmd & 0xf).toString(16) + \":\" + n + \".\" });\n        }\n        else {\n            throw new Error(\"Unknown Envelope Command: 0x\" + cmd.toString(16));\n        }\n    }\n    return res;\n}\nexports.parseStepEnvelope = parseStepEnvelope;\nfunction decodeMGSText(msg) {\n    var seq = Array();\n    var i = 0;\n    while (i < msg.length) {\n        var ch = msg[i++];\n        if (ch < 0x20 || 0x80 === ch || (0xf0 <= ch && ch <= 0xff)) {\n            var s = \"\\\\x\" + (\"0\" + ch.toString(16)).slice(-2);\n            seq.push(s.charCodeAt(0));\n            seq.push(s.charCodeAt(1));\n            seq.push(s.charCodeAt(2));\n            seq.push(s.charCodeAt(3));\n        }\n        else if (0x81 <= ch && ch <= 0x9f) {\n            // SJIS 2-byte character\n            seq.push(ch);\n            seq.push(msg[i++]);\n        }\n        else if (0xe0 <= ch && ch <= 0xef) {\n            // SJIS 2-byte character\n            seq.push(ch);\n            seq.push(msg[i++]);\n        }\n        else if (ch === 34 || ch === 92) {\n            // double quote or backslash\n            seq.push(92);\n            seq.push(ch);\n        }\n        else {\n            // Other characters\n            seq.push(ch);\n        }\n    }\n    return String.fromCharCode.apply(String, encoding_japanese_1.default.convert(seq, \"UNICODE\", \"SJIS\"));\n}\nfunction parseVoiceTrack(data) {\n    var idx = 0;\n    var opllPatches = Array();\n    var sccPatches = Array();\n    var envelopes = Array();\n    var opllPatchMaps = Array();\n    var texts = Array();\n    var v = new DataView(data);\n    var psgTunes = null;\n    var opllTunes = null;\n    while (idx < v.byteLength) {\n        var cmd = v.getUint8(idx++);\n        if (cmd === 0x00) {\n            var number = v.getUint8(idx++);\n            var patch = [];\n            for (var i = 0; i < 8; i++) {\n                patch.push(v.getUint8(idx++));\n            }\n            opllPatches.push({ number: number & 0x1f, data: patch });\n        }\n        else if (cmd === 0x01) {\n            var from = v.getUint8(idx++);\n            var to = v.getUint8(idx++);\n            opllPatchMaps.push({ from: from, to: to });\n        }\n        else if (cmd === 0x02) {\n            var number = v.getUint8(idx++) & 0x1f;\n            var m = v.getUint8(idx++);\n            var mode = (m & 0x7f) >> 5;\n            var nfreq = m & 0x1f;\n            if (m < 0x80) {\n                var len = v.getUint8(idx++);\n                var binary = v.buffer.slice(v.byteOffset + idx, v.byteOffset + idx + len);\n                envelopes.push({ type: \"@e\", number: number, mode: mode, nfreq: nfreq, commands: parseStepEnvelope(binary) });\n                idx += len;\n            }\n            else {\n                var al = v.getUint8(idx++);\n                var ar = v.getUint8(idx++);\n                var dr = v.getUint8(idx++);\n                var sl = v.getUint8(idx++);\n                var sr = v.getUint8(idx++);\n                var rr = v.getUint8(idx++);\n                envelopes.push({ type: \"@r\", number: number, mode: mode, nfreq: nfreq, al: al, ar: ar, dr: dr, sl: sl, sr: sr, rr: rr });\n            }\n        }\n        else if (cmd === 0x03) {\n            var number = v.getUint8(idx++) & 0x1f;\n            var patch = [];\n            for (var i = 0; i < 32; i++) {\n                patch.push(v.getUint8(idx++));\n            }\n            sccPatches.push({ number: number, data: patch });\n        }\n        else if (cmd === 0x04) {\n            psgTunes = [];\n            for (var i = 0; i < 12; i++) {\n                psgTunes.push(v.getUint16(idx, true));\n                idx += 2;\n            }\n        }\n        else if (cmd === 0x05) {\n            opllTunes = [];\n            for (var i = 0; i < 12; i++) {\n                opllTunes.push(v.getUint16(idx, true));\n                idx += 2;\n            }\n        }\n        else if (cmd === 0x06) {\n            var number = v.getUint8(idx++);\n            var buf = [];\n            while (true) {\n                var c = v.getUint8(idx++);\n                if (c === 0)\n                    break;\n                buf.push(c);\n            }\n            texts.push({ number: number, text: decodeMGSText(buf) });\n        }\n        else if (cmd === 0xff) {\n            break;\n        }\n        else {\n            throw new Error(\"Unknown voice track command: 0x\" + cmd.toString(16));\n        }\n    }\n    return {\n        byteLength: idx,\n        opllPatches: opllPatches,\n        opllPatchMaps: opllPatchMaps,\n        envelopes: envelopes,\n        texts: texts,\n        sccPatches: sccPatches,\n        psgTunes: psgTunes,\n        opllTunes: opllTunes,\n    };\n}\nexports.parseVoiceTrack = parseVoiceTrack;\nfunction parseLegacyRhythmTrack(data, track) {\n    var res = new Array();\n    var v = new DataView(data);\n    var idx = 0;\n    var _loop_1 = function () {\n        var cmd = v.getUint8(idx++);\n        var _wrt = function (obj) { return res.push(__assign({ cmd: cmd }, obj)); };\n        if (cmd === 0xff) {\n            return \"break\";\n        }\n        else {\n            _wrt({ mml: (\"0\" + cmd.toString(16)).slice(-2) + \" \" });\n        }\n    };\n    while (idx < v.byteLength) {\n        var state_1 = _loop_1();\n        if (state_1 === \"break\")\n            break;\n    }\n    return {\n        track: track,\n        byteLength: idx,\n        commands: res,\n        incomplete: true\n    };\n}\nfunction parseTrack(data, track, rhythm) {\n    var res = new Array();\n    var v = new DataView(data);\n    var idx = 0;\n    var lvalue = 48;\n    var _loop_2 = function () {\n        var cmd = v.getUint8(idx++);\n        var _wrt = function (obj) { return res.push(__assign({ cmd: cmd }, obj)); };\n        if (rhythm && (cmd & 0xe0) === 0x20) {\n            var n = v.getUint8(idx++);\n            var flag = cmd & 0x1f;\n            _wrt({ mml: getRhythmNote(flag) + c2l(n), count: n });\n        }\n        else if (rhythm && (cmd & 0xe0) === 0xa0) {\n            var flag = cmd & 0x1f;\n            _wrt({ mml: getRhythmNote(flag) + \":\", count: lvalue });\n        }\n        else if (cmd <= 0x0c) {\n            // mgsdrv 3.00 command.\n            var n = v.getUint8(idx++);\n            _wrt({ mml: \"\" + notes[cmd & 0xf] + c2l(n), count: n });\n        }\n        else if (0x10 <= cmd && cmd <= 0x1c) {\n            // mgsdrv 3.00 command.\n            _wrt({ mml: notes[cmd & 0xf], count: lvalue });\n        }\n        else if (0x20 <= cmd && cmd <= 0x2f) {\n            var n = v.getUint8(idx++);\n            _wrt({ mml: \"\" + notes[cmd & 0xf] + c2l(n), count: n });\n        }\n        else if (0x30 <= cmd && cmd <= 0x3f) {\n            _wrt({ mml: notes[cmd & 0xf], count: lvalue });\n        }\n        else if (cmd === 0x40) {\n            _wrt({ mml: \"&\" });\n        }\n        else if (cmd === 0x41) {\n            var value = v.getUint16(idx, true);\n            idx += 2;\n            idx += 48;\n            _wrt({ mml: \"t\" + value });\n        }\n        else if (cmd === 0x42) {\n            var n = v.getUint8(idx++);\n            _wrt({ mml: \"l\" + c2l(n) });\n        }\n        else if (cmd === 0x43) {\n            // mgsdrv 3.00 command.\n            var n = v.getUint16(idx, true);\n            idx += 2;\n            _wrt({ mml: \"l\" + c2l(n) });\n        }\n        else if (cmd === 0x44) {\n            var n = v.getUint8(idx++);\n            _wrt({ mml: \"q\" + n });\n        }\n        else if (cmd === 0x45) {\n            var n = v.getUint8(idx++);\n            var r = n >> 5;\n            _wrt({ mml: [\"vb\", \"vs\", \"vm\", \"vc\", \"vh\"][r] + (n & 0xf) });\n        }\n        else if (cmd === 0x47) {\n            var n = v.getUint8(idx++);\n            var r = n >> 5;\n            _wrt({ mml: [\"vb\", \"vs\", \"vm\", \"vc\", \"vh\"][r] + (n & 0x10 ? \"-\" + (0x10 - (n & 0xf)) : \"+\" + (n & 0xf)) });\n        }\n        else if (cmd === 0x46) {\n            var voff = v.getInt8(idx++);\n            _wrt({ mml: voff >= 0 ? \"v+\" + voff : \"v\" + voff });\n        }\n        else if (cmd === 0x48) {\n            var n = v.getUint8(idx++);\n            _wrt({ mml: \"k\" + n });\n        }\n        else if (cmd === 0x49) {\n            var n = v.getUint8(idx++);\n            _wrt({ mml: \"@e\" + n });\n        }\n        else if (cmd === 0x4a) {\n            _wrt({ mml: \"/\" });\n        }\n        else if (cmd === 0x4b) {\n            var n = v.getUint8(idx++);\n            _wrt({ mml: \"s\" + n });\n        }\n        else if (cmd === 0x4c) {\n            var n = v.getUint16(idx, true);\n            idx += 2;\n            _wrt({ mml: \"m\" + n });\n        }\n        else if (cmd === 0x4d) {\n            var n = v.getUint8(idx++);\n            _wrt({ mml: \"n\" + n });\n        }\n        else if (cmd === 0x4e) {\n            _wrt({ mml: \">\" });\n        }\n        else if (cmd === 0x4f) {\n            _wrt({ mml: \"<\" });\n        }\n        else if (cmd === 0x50) {\n            var n = v.getInt8(idx++);\n            _wrt({ mml: \"\\\\\" + (track < 9 ? -1 : 1) * n });\n        }\n        else if (cmd === 0x51) {\n            var n = v.getInt16(idx, true);\n            idx += 2;\n            _wrt({ mml: \"@\\\\\" + n });\n        }\n        else if (cmd === 0x52) {\n            var n = v.getUint8(idx++);\n            _wrt({ mml: \"p\" + n });\n        }\n        else if (cmd === 0x53) {\n            var key = v.getUint8(idx++);\n            _wrt({ mml: notes[key] + \"_\" });\n        }\n        else if (cmd === 0x54) {\n            var n1 = v.getUint8(idx++);\n            var n2 = v.getUint8(idx++);\n            var n3 = v.getUint8(idx++);\n            var n4 = v.getInt8(idx++);\n            _wrt({ mml: \"h\" + (n1 - 1) + \",\" + n2 + \",\" + (n3 - 1) + \",\" + (track < 9 ? -n4 : n4) });\n        }\n        else if (cmd === 0x55) {\n            var n = v.getInt16(idx, true);\n            idx += 2;\n            _wrt({ mml: \"@p\" + n });\n        }\n        else if (cmd === 0x57) {\n            var n = v.getUint8(idx++);\n            // const n2 = v.getUint16(idx);\n            idx += 2;\n            _wrt({ mml: \"[\" + n, loop: n });\n        }\n        else if (cmd === 0x58) {\n            // const ptr = v.getUint16(idx, true);\n            idx += 2;\n            _wrt({ mml: \"|\" });\n        }\n        else if (cmd === 0x59) {\n            idx += 1;\n            // const ptr = v.getUint16(idx, true);\n            idx += 2;\n            _wrt({ mml: \"]\" });\n        }\n        else if (cmd === 0x5a) {\n            var n = v.getUint8(idx++);\n            if (rhythm) {\n                _wrt({ mml: 0 < n ? \"kf\" : \"ko\" });\n            }\n            else {\n                _wrt({ mml: 0 < n ? \"ho\" : \"hf\" });\n            }\n        }\n        else if (cmd === 0x5b) {\n            var n = v.getUint8(idx++);\n            _wrt({ mml: 0 < n ? \"so\" : \"sf\" });\n        }\n        else if (cmd === 0x5c) {\n            var n1 = v.getUint8(idx++);\n            var n2 = v.getUint8(idx++);\n            _wrt({ mml: \"y\" + n1 + \",\" + n2 });\n        }\n        else if (cmd === 0x5d) {\n            _wrt({ mml: \"$\" });\n        }\n        else if (cmd === 0x5f) {\n            var n = v.getInt8(idx++);\n            _wrt({ mml: \"@\\\\\" + n });\n        }\n        else if (cmd === 0x60) {\n            var n = v.getUint8(idx++);\n            _wrt({ mml: \"@m\" + n });\n        }\n        else if (cmd === 0x61) {\n            var n = v.getUint8(idx++);\n            _wrt({ mml: \"@o\" + n });\n        }\n        else if (cmd === 0x63) {\n            _wrt({ mml: \"@f\" });\n        }\n        else if (cmd === 0x64) {\n            _wrt({ mml: \"hi\" });\n        }\n        else if (0x80 <= cmd && cmd <= 0x9f) {\n            _wrt({ mml: \"@\" + (cmd & 0x1f) });\n        }\n        else if (0xc0 <= cmd && cmd <= 0xcf) {\n            _wrt({ mml: \"v\" + (cmd & 0xf) });\n        }\n        else if (0xd0 <= cmd && cmd <= 0xdf) {\n            _wrt({ mml: \"o\" + ((cmd & 0x7) + 1) });\n        }\n        else if (0xe0 <= cmd && cmd <= 0xef) {\n            _wrt({ mml: \"/\" + (cmd & 0x3) });\n        }\n        else if (cmd === 0xff) {\n            return \"break\";\n        }\n        else {\n            console.error(\"Unknown command: 0x\" + (\"0\" + cmd.toString(16)).slice(-2) + \" at offset \" + idx + \" of track \" + track);\n        }\n    };\n    while (idx < v.byteLength) {\n        var state_2 = _loop_2();\n        if (state_2 === \"break\")\n            break;\n    }\n    return {\n        track: track,\n        byteLength: idx,\n        commands: res\n    };\n}\nfunction parseMGS(data) {\n    var d = new DataView(data);\n    var magic = String.fromCharCode(d.getUint8(0), d.getUint8(1), d.getUint8(2));\n    if (magic !== \"MGS\") {\n        throw new Error(\"Not a MGS format.\");\n    }\n    var version = String.fromCharCode(d.getUint8(3), d.getUint8(4), d.getUint8(5));\n    if (!/^[0-9]+$/.test(version)) {\n        throw new Error(\"Unspported format version: MGS\" + version + \".\");\n    }\n    var versionCode = parseInt(version);\n    if (versionCode < 300) {\n        throw new Error(\"Unsupported format version: MGS\" + version + \". MGS310 or greater version is required.\");\n    }\n    var titleArray = [];\n    var offset = 0;\n    for (var i = 8; i < d.byteLength - 1; i++) {\n        var c = d.getUint8(i);\n        if (c === 0x1a) {\n            offset = i + 1;\n            break;\n        }\n        titleArray.push(c);\n    }\n    if (offset === 0) {\n        throw new Error(\"MGS data is corrupted. No EOF marker found after the title section.\");\n    }\n    var title = String.fromCharCode.apply(String, encoding_japanese_1.default.convert(titleArray, \"UNICODE\", \"SJIS\"));\n    var root = offset;\n    d.getUint8(offset++); // skip first byte\n    var flags = d.getUint8(offset++);\n    var settings = {\n        opllMode: flags & 1,\n        lfoMode: (flags >> 1) & 1,\n        machineId: (flags >> 2) & 7,\n        disableReverseCompile: flags & 0x80 ? true : false\n    };\n    var tempo = d.getUint16(offset, true) || 75;\n    offset += 2;\n    var voice = null;\n    var tracks = [];\n    var rawTracks = [];\n    for (var i = 0; i < 18; i++) {\n        var trackOffset = d.getUint16(offset + i * 2, true);\n        if (0 < trackOffset) {\n            var start = trackOffset + root;\n            var binary = d.buffer.slice(d.byteOffset + start);\n            if (i === 0) {\n                voice = parseVoiceTrack(binary);\n            }\n            else {\n                var rhythm = settings.opllMode === 1 && i === 15;\n                var track = void 0;\n                if (rhythm && versionCode < 304) {\n                    tracks[i] = parseLegacyRhythmTrack(binary, i);\n                }\n                else {\n                    tracks[i] = parseTrack(binary, i, rhythm);\n                }\n            }\n            rawTracks[i] = binary;\n        }\n        else {\n            rawTracks[i] = null;\n            tracks[i] = null;\n        }\n    }\n    return {\n        version: version,\n        title: title,\n        settings: settings,\n        tempo: tempo,\n        rawTracks: rawTracks,\n        voice: voice,\n        tracks: tracks\n    };\n}\nexports.parseMGS = parseMGS;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/mgsrc-js/dist/parser.js?");

/***/ }),

/***/ "../node_modules/mgsrc-js/dist/uncompress.js":
/*!***************************************************!*\
  !*** ../node_modules/mgsrc-js/dist/uncompress.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction toHex(n, col) {\n    if (col === void 0) { col = 2; }\n    return (\"0000\" + n.toString(16)).slice(-col);\n}\nfunction _Uint16ToInt16(val) {\n    return val - 0x10000;\n}\nfunction isCompressed(buf) {\n    var d = new Uint8Array(buf);\n    var magic = String.fromCharCode(d[0], d[1], d[2]);\n    var rp = 0;\n    if (magic != \"MGS\") {\n        throw new Error(\"Not a MGS object.\");\n    }\n    while (rp < d.byteLength) {\n        if (d[rp++] === 0)\n            break;\n    }\n    if (rp === d.byteLength) {\n        throw new Error(\"Not a MGS object.\");\n    }\n    var settings = d[rp++];\n    return settings & 0x80 ? true : false;\n}\nexports.isCompressed = isCompressed;\nfunction uncompress(buf) {\n    var d = new Uint8Array(buf);\n    var res = new Uint8Array(0x4000);\n    var rp = 0;\n    var wp = 0;\n    var magic = String.fromCharCode(d[0], d[1], d[2]);\n    if (magic != \"MGS\") {\n        throw new Error(\"Not a MGS object.\");\n    }\n    while (rp < d.byteLength) {\n        if (d[rp++] === 0)\n            break;\n    }\n    if (rp === d.byteLength) {\n        throw new Error(\"Not a MGS object.\");\n    }\n    var settings = d[rp++];\n    if ((settings & 0x80) === 0) {\n        throw new Error(\"Not a compressed object.\");\n    }\n    wp = rp;\n    var dataSize = (d[rp + 1] << 8) | d[rp];\n    // this function don't see data size. msgdrv use data size to stack\n    // MGS data from the bottom of the memory page.\n    rp += 2;\n    for (var i = 0; i < rp; i++) {\n        res[i] = d[i];\n    }\n    res[3] = \"3\".charCodeAt(0); // fix MGSAxx -> MGS3xx\n    var _B = 1;\n    var _C = 0;\n    var readInfoBit = function () {\n        var ret = _C & 0x80 ? 1 : 0;\n        _C = (_C << 1) & 0xff;\n        _B--;\n        if (_B === 0) {\n            _B = 8;\n            _C = d[rp++];\n        }\n        return ret;\n    };\n    readInfoBit(); // first fetch\n    while (true) {\n        if (readInfoBit()) {\n            // 1\n            res[wp++] = d[rp++];\n        }\n        else {\n            var size = void 0, offset = void 0;\n            if (readInfoBit()) {\n                // 01\n                var ll = d[rp++];\n                var hh = d[rp++];\n                if (0x20 <= hh) {\n                    size = hh >> 5;\n                }\n                else {\n                    size = d[rp++];\n                    if (size === 0)\n                        break;\n                }\n                offset = _Uint16ToInt16((hh << 8) | ll | 0xe000);\n            }\n            else {\n                // 00\n                size = (readInfoBit() << 1) | readInfoBit();\n                var ll = d[rp++];\n                var hh = 0xff;\n                offset = _Uint16ToInt16((hh << 8) | ll);\n            }\n            for (var i = 0; i < size + 2; i++) {\n                res[wp] = res[wp + offset];\n                wp++;\n            }\n        }\n    }\n    return res.buffer.slice(res.byteOffset);\n}\nexports.uncompress = uncompress;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/mgsrc-js/dist/uncompress.js?");

/***/ }),

/***/ "../node_modules/miller-rabin/lib/mr.js":
/*!**********************************************!*\
  !*** ../node_modules/miller-rabin/lib/mr.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var bn = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\");\nvar brorand = __webpack_require__(/*! brorand */ \"../node_modules/brorand/index.js\");\n\nfunction MillerRabin(rand) {\n  this.rand = rand || new brorand.Rand();\n}\nmodule.exports = MillerRabin;\n\nMillerRabin.create = function create(rand) {\n  return new MillerRabin(rand);\n};\n\nMillerRabin.prototype._randbelow = function _randbelow(n) {\n  var len = n.bitLength();\n  var min_bytes = Math.ceil(len / 8);\n\n  // Generage random bytes until a number less than n is found.\n  // This ensures that 0..n-1 have an equal probability of being selected.\n  do\n    var a = new bn(this.rand.generate(min_bytes));\n  while (a.cmp(n) >= 0);\n\n  return a;\n};\n\nMillerRabin.prototype._randrange = function _randrange(start, stop) {\n  // Generate a random number greater than or equal to start and less than stop.\n  var size = stop.sub(start);\n  return start.add(this._randbelow(size));\n};\n\nMillerRabin.prototype.test = function test(n, k, cb) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n\n  if (!k)\n    k = Math.max(1, (len / 48) | 0);\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  var n1 = n.subn(1);\n  for (var s = 0; !n1.testn(s); s++) {}\n  var d = n.shrn(s);\n\n  var rn1 = n1.toRed(red);\n\n  var prime = true;\n  for (; k > 0; k--) {\n    var a = this._randrange(new bn(2), n1);\n    if (cb)\n      cb(a);\n\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\n      continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n\n      if (x.cmp(rone) === 0)\n        return false;\n      if (x.cmp(rn1) === 0)\n        break;\n    }\n\n    if (i === s)\n      return false;\n  }\n\n  return prime;\n};\n\nMillerRabin.prototype.getDivisor = function getDivisor(n, k) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n\n  if (!k)\n    k = Math.max(1, (len / 48) | 0);\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  var n1 = n.subn(1);\n  for (var s = 0; !n1.testn(s); s++) {}\n  var d = n.shrn(s);\n\n  var rn1 = n1.toRed(red);\n\n  for (; k > 0; k--) {\n    var a = this._randrange(new bn(2), n1);\n\n    var g = n.gcd(a);\n    if (g.cmpn(1) !== 0)\n      return g;\n\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\n      continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n\n      if (x.cmp(rone) === 0)\n        return x.fromRed().subn(1).gcd(n);\n      if (x.cmp(rn1) === 0)\n        break;\n    }\n\n    if (i === s) {\n      x = x.redSqr();\n      return x.fromRed().subn(1).gcd(n);\n    }\n  }\n\n  return false;\n};\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/miller-rabin/lib/mr.js?");

/***/ }),

/***/ "../node_modules/minimalistic-assert/index.js":
/*!****************************************************!*\
  !*** ../node_modules/minimalistic-assert/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/minimalistic-assert/index.js?");

/***/ }),

/***/ "../node_modules/minimalistic-crypto-utils/lib/utils.js":
/*!**************************************************************!*\
  !*** ../node_modules/minimalistic-crypto-utils/lib/utils.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/minimalistic-crypto-utils/lib/utils.js?");

/***/ }),

/***/ "../node_modules/node-libs-browser/mock/empty.js":
/*!*******************************************************!*\
  !*** ../node_modules/node-libs-browser/mock/empty.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/node-libs-browser/mock/empty.js?");

/***/ }),

/***/ "../node_modules/object-assign/index.js":
/*!**********************************************!*\
  !*** ../node_modules/object-assign/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/object-assign/index.js?");

/***/ }),

/***/ "../node_modules/parse-asn1/aesid.json":
/*!*********************************************!*\
  !*** ../node_modules/parse-asn1/aesid.json ***!
  \*********************************************/
/*! exports provided: 2.16.840.1.101.3.4.1.1, 2.16.840.1.101.3.4.1.2, 2.16.840.1.101.3.4.1.3, 2.16.840.1.101.3.4.1.4, 2.16.840.1.101.3.4.1.21, 2.16.840.1.101.3.4.1.22, 2.16.840.1.101.3.4.1.23, 2.16.840.1.101.3.4.1.24, 2.16.840.1.101.3.4.1.41, 2.16.840.1.101.3.4.1.42, 2.16.840.1.101.3.4.1.43, 2.16.840.1.101.3.4.1.44, default */
/***/ (function(module) {

eval("module.exports = JSON.parse(\"{\\\"2.16.840.1.101.3.4.1.1\\\":\\\"aes-128-ecb\\\",\\\"2.16.840.1.101.3.4.1.2\\\":\\\"aes-128-cbc\\\",\\\"2.16.840.1.101.3.4.1.3\\\":\\\"aes-128-ofb\\\",\\\"2.16.840.1.101.3.4.1.4\\\":\\\"aes-128-cfb\\\",\\\"2.16.840.1.101.3.4.1.21\\\":\\\"aes-192-ecb\\\",\\\"2.16.840.1.101.3.4.1.22\\\":\\\"aes-192-cbc\\\",\\\"2.16.840.1.101.3.4.1.23\\\":\\\"aes-192-ofb\\\",\\\"2.16.840.1.101.3.4.1.24\\\":\\\"aes-192-cfb\\\",\\\"2.16.840.1.101.3.4.1.41\\\":\\\"aes-256-ecb\\\",\\\"2.16.840.1.101.3.4.1.42\\\":\\\"aes-256-cbc\\\",\\\"2.16.840.1.101.3.4.1.43\\\":\\\"aes-256-ofb\\\",\\\"2.16.840.1.101.3.4.1.44\\\":\\\"aes-256-cfb\\\"}\");\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/parse-asn1/aesid.json?");

/***/ }),

/***/ "../node_modules/parse-asn1/asn1.js":
/*!******************************************!*\
  !*** ../node_modules/parse-asn1/asn1.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js\n// Fedor, you are amazing.\n\n\nvar asn1 = __webpack_require__(/*! asn1.js */ \"../node_modules/asn1.js/lib/asn1.js\")\n\nexports.certificate = __webpack_require__(/*! ./certificate */ \"../node_modules/parse-asn1/certificate.js\")\n\nvar RSAPrivateKey = asn1.define('RSAPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('modulus').int(),\n    this.key('publicExponent').int(),\n    this.key('privateExponent').int(),\n    this.key('prime1').int(),\n    this.key('prime2').int(),\n    this.key('exponent1').int(),\n    this.key('exponent2').int(),\n    this.key('coefficient').int()\n  )\n})\nexports.RSAPrivateKey = RSAPrivateKey\n\nvar RSAPublicKey = asn1.define('RSAPublicKey', function () {\n  this.seq().obj(\n    this.key('modulus').int(),\n    this.key('publicExponent').int()\n  )\n})\nexports.RSAPublicKey = RSAPublicKey\n\nvar PublicKey = asn1.define('SubjectPublicKeyInfo', function () {\n  this.seq().obj(\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('subjectPublicKey').bitstr()\n  )\n})\nexports.PublicKey = PublicKey\n\nvar AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {\n  this.seq().obj(\n    this.key('algorithm').objid(),\n    this.key('none').null_().optional(),\n    this.key('curve').objid().optional(),\n    this.key('params').seq().obj(\n      this.key('p').int(),\n      this.key('q').int(),\n      this.key('g').int()\n    ).optional()\n  )\n})\n\nvar PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('subjectPrivateKey').octstr()\n  )\n})\nexports.PrivateKey = PrivateKeyInfo\nvar EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {\n  this.seq().obj(\n    this.key('algorithm').seq().obj(\n      this.key('id').objid(),\n      this.key('decrypt').seq().obj(\n        this.key('kde').seq().obj(\n          this.key('id').objid(),\n          this.key('kdeparams').seq().obj(\n            this.key('salt').octstr(),\n            this.key('iters').int()\n          )\n        ),\n        this.key('cipher').seq().obj(\n          this.key('algo').objid(),\n          this.key('iv').octstr()\n        )\n      )\n    ),\n    this.key('subjectPrivateKey').octstr()\n  )\n})\n\nexports.EncryptedPrivateKey = EncryptedPrivateKeyInfo\n\nvar DSAPrivateKey = asn1.define('DSAPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('p').int(),\n    this.key('q').int(),\n    this.key('g').int(),\n    this.key('pub_key').int(),\n    this.key('priv_key').int()\n  )\n})\nexports.DSAPrivateKey = DSAPrivateKey\n\nexports.DSAparam = asn1.define('DSAparam', function () {\n  this.int()\n})\n\nvar ECPrivateKey = asn1.define('ECPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('privateKey').octstr(),\n    this.key('parameters').optional().explicit(0).use(ECParameters),\n    this.key('publicKey').optional().explicit(1).bitstr()\n  )\n})\nexports.ECPrivateKey = ECPrivateKey\n\nvar ECParameters = asn1.define('ECParameters', function () {\n  this.choice({\n    namedCurve: this.objid()\n  })\n})\n\nexports.signature = asn1.define('signature', function () {\n  this.seq().obj(\n    this.key('r').int(),\n    this.key('s').int()\n  )\n})\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/parse-asn1/asn1.js?");

/***/ }),

/***/ "../node_modules/parse-asn1/certificate.js":
/*!*************************************************!*\
  !*** ../node_modules/parse-asn1/certificate.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js\n// thanks to @Rantanen\n\n\n\nvar asn = __webpack_require__(/*! asn1.js */ \"../node_modules/asn1.js/lib/asn1.js\")\n\nvar Time = asn.define('Time', function () {\n  this.choice({\n    utcTime: this.utctime(),\n    generalTime: this.gentime()\n  })\n})\n\nvar AttributeTypeValue = asn.define('AttributeTypeValue', function () {\n  this.seq().obj(\n    this.key('type').objid(),\n    this.key('value').any()\n  )\n})\n\nvar AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function () {\n  this.seq().obj(\n    this.key('algorithm').objid(),\n    this.key('parameters').optional(),\n    this.key('curve').objid().optional()\n  )\n})\n\nvar SubjectPublicKeyInfo = asn.define('SubjectPublicKeyInfo', function () {\n  this.seq().obj(\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('subjectPublicKey').bitstr()\n  )\n})\n\nvar RelativeDistinguishedName = asn.define('RelativeDistinguishedName', function () {\n  this.setof(AttributeTypeValue)\n})\n\nvar RDNSequence = asn.define('RDNSequence', function () {\n  this.seqof(RelativeDistinguishedName)\n})\n\nvar Name = asn.define('Name', function () {\n  this.choice({\n    rdnSequence: this.use(RDNSequence)\n  })\n})\n\nvar Validity = asn.define('Validity', function () {\n  this.seq().obj(\n    this.key('notBefore').use(Time),\n    this.key('notAfter').use(Time)\n  )\n})\n\nvar Extension = asn.define('Extension', function () {\n  this.seq().obj(\n    this.key('extnID').objid(),\n    this.key('critical').bool().def(false),\n    this.key('extnValue').octstr()\n  )\n})\n\nvar TBSCertificate = asn.define('TBSCertificate', function () {\n  this.seq().obj(\n    this.key('version').explicit(0).int().optional(),\n    this.key('serialNumber').int(),\n    this.key('signature').use(AlgorithmIdentifier),\n    this.key('issuer').use(Name),\n    this.key('validity').use(Validity),\n    this.key('subject').use(Name),\n    this.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo),\n    this.key('issuerUniqueID').implicit(1).bitstr().optional(),\n    this.key('subjectUniqueID').implicit(2).bitstr().optional(),\n    this.key('extensions').explicit(3).seqof(Extension).optional()\n  )\n})\n\nvar X509Certificate = asn.define('X509Certificate', function () {\n  this.seq().obj(\n    this.key('tbsCertificate').use(TBSCertificate),\n    this.key('signatureAlgorithm').use(AlgorithmIdentifier),\n    this.key('signatureValue').bitstr()\n  )\n})\n\nmodule.exports = X509Certificate\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/parse-asn1/certificate.js?");

/***/ }),

/***/ "../node_modules/parse-asn1/fixProc.js":
/*!*********************************************!*\
  !*** ../node_modules/parse-asn1/fixProc.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// adapted from https://github.com/apatil/pemstrip\nvar findProc = /Proc-Type: 4,ENCRYPTED[\\n\\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\\n\\r]+([0-9A-z\\n\\r\\+\\/\\=]+)[\\n\\r]+/m\nvar startRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m\nvar fullRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\\n\\r\\+\\/\\=]+)-----END \\1-----$/m\nvar evp = __webpack_require__(/*! evp_bytestokey */ \"../node_modules/evp_bytestokey/index.js\")\nvar ciphers = __webpack_require__(/*! browserify-aes */ \"../node_modules/browserify-aes/browser.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\nmodule.exports = function (okey, password) {\n  var key = okey.toString()\n  var match = key.match(findProc)\n  var decrypted\n  if (!match) {\n    var match2 = key.match(fullRegex)\n    decrypted = new Buffer(match2[2].replace(/[\\r\\n]/g, ''), 'base64')\n  } else {\n    var suite = 'aes' + match[1]\n    var iv = Buffer.from(match[2], 'hex')\n    var cipherText = Buffer.from(match[3].replace(/[\\r\\n]/g, ''), 'base64')\n    var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key\n    var out = []\n    var cipher = ciphers.createDecipheriv(suite, cipherKey, iv)\n    out.push(cipher.update(cipherText))\n    out.push(cipher.final())\n    decrypted = Buffer.concat(out)\n  }\n  var tag = key.match(startRegex)[1]\n  return {\n    tag: tag,\n    data: decrypted\n  }\n}\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/parse-asn1/fixProc.js?");

/***/ }),

/***/ "../node_modules/parse-asn1/index.js":
/*!*******************************************!*\
  !*** ../node_modules/parse-asn1/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var asn1 = __webpack_require__(/*! ./asn1 */ \"../node_modules/parse-asn1/asn1.js\")\nvar aesid = __webpack_require__(/*! ./aesid.json */ \"../node_modules/parse-asn1/aesid.json\")\nvar fixProc = __webpack_require__(/*! ./fixProc */ \"../node_modules/parse-asn1/fixProc.js\")\nvar ciphers = __webpack_require__(/*! browserify-aes */ \"../node_modules/browserify-aes/browser.js\")\nvar compat = __webpack_require__(/*! pbkdf2 */ \"../node_modules/pbkdf2/browser.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\nmodule.exports = parseKeys\n\nfunction parseKeys (buffer) {\n  var password\n  if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {\n    password = buffer.passphrase\n    buffer = buffer.key\n  }\n  if (typeof buffer === 'string') {\n    buffer = Buffer.from(buffer)\n  }\n\n  var stripped = fixProc(buffer, password)\n\n  var type = stripped.tag\n  var data = stripped.data\n  var subtype, ndata\n  switch (type) {\n    case 'CERTIFICATE':\n      ndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo\n      // falls through\n    case 'PUBLIC KEY':\n      if (!ndata) {\n        ndata = asn1.PublicKey.decode(data, 'der')\n      }\n      subtype = ndata.algorithm.algorithm.join('.')\n      switch (subtype) {\n        case '1.2.840.113549.1.1.1':\n          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der')\n        case '1.2.840.10045.2.1':\n          ndata.subjectPrivateKey = ndata.subjectPublicKey\n          return {\n            type: 'ec',\n            data: ndata\n          }\n        case '1.2.840.10040.4.1':\n          ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der')\n          return {\n            type: 'dsa',\n            data: ndata.algorithm.params\n          }\n        default: throw new Error('unknown key id ' + subtype)\n      }\n      throw new Error('unknown key type ' + type)\n    case 'ENCRYPTED PRIVATE KEY':\n      data = asn1.EncryptedPrivateKey.decode(data, 'der')\n      data = decrypt(data, password)\n      // falls through\n    case 'PRIVATE KEY':\n      ndata = asn1.PrivateKey.decode(data, 'der')\n      subtype = ndata.algorithm.algorithm.join('.')\n      switch (subtype) {\n        case '1.2.840.113549.1.1.1':\n          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der')\n        case '1.2.840.10045.2.1':\n          return {\n            curve: ndata.algorithm.curve,\n            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey\n          }\n        case '1.2.840.10040.4.1':\n          ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der')\n          return {\n            type: 'dsa',\n            params: ndata.algorithm.params\n          }\n        default: throw new Error('unknown key id ' + subtype)\n      }\n      throw new Error('unknown key type ' + type)\n    case 'RSA PUBLIC KEY':\n      return asn1.RSAPublicKey.decode(data, 'der')\n    case 'RSA PRIVATE KEY':\n      return asn1.RSAPrivateKey.decode(data, 'der')\n    case 'DSA PRIVATE KEY':\n      return {\n        type: 'dsa',\n        params: asn1.DSAPrivateKey.decode(data, 'der')\n      }\n    case 'EC PRIVATE KEY':\n      data = asn1.ECPrivateKey.decode(data, 'der')\n      return {\n        curve: data.parameters.value,\n        privateKey: data.privateKey\n      }\n    default: throw new Error('unknown key type ' + type)\n  }\n}\nparseKeys.signature = asn1.signature\nfunction decrypt (data, password) {\n  var salt = data.algorithm.decrypt.kde.kdeparams.salt\n  var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10)\n  var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')]\n  var iv = data.algorithm.decrypt.cipher.iv\n  var cipherText = data.subjectPrivateKey\n  var keylen = parseInt(algo.split('-')[1], 10) / 8\n  var key = compat.pbkdf2Sync(password, salt, iters, keylen, 'sha1')\n  var cipher = ciphers.createDecipheriv(algo, key, iv)\n  var out = []\n  out.push(cipher.update(cipherText))\n  out.push(cipher.final())\n  return Buffer.concat(out)\n}\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/parse-asn1/index.js?");

/***/ }),

/***/ "../node_modules/path-browserify/index.js":
/*!************************************************!*\
  !*** ../node_modules/path-browserify/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ \"../node_modules/process/browser.js\")))\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/path-browserify/index.js?");

/***/ }),

/***/ "../node_modules/pbkdf2/browser.js":
/*!*****************************************!*\
  !*** ../node_modules/pbkdf2/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports.pbkdf2 = __webpack_require__(/*! ./lib/async */ \"../node_modules/pbkdf2/lib/async.js\")\nexports.pbkdf2Sync = __webpack_require__(/*! ./lib/sync */ \"../node_modules/pbkdf2/lib/sync-browser.js\")\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/pbkdf2/browser.js?");

/***/ }),

/***/ "../node_modules/pbkdf2/lib/async.js":
/*!*******************************************!*\
  !*** ../node_modules/pbkdf2/lib/async.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, process) {var checkParameters = __webpack_require__(/*! ./precondition */ \"../node_modules/pbkdf2/lib/precondition.js\")\nvar defaultEncoding = __webpack_require__(/*! ./default-encoding */ \"../node_modules/pbkdf2/lib/default-encoding.js\")\nvar sync = __webpack_require__(/*! ./sync */ \"../node_modules/pbkdf2/lib/sync-browser.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\n\nvar ZERO_BUF\nvar subtle = global.crypto && global.crypto.subtle\nvar toBrowser = {\n  'sha': 'SHA-1',\n  'sha-1': 'SHA-1',\n  'sha1': 'SHA-1',\n  'sha256': 'SHA-256',\n  'sha-256': 'SHA-256',\n  'sha384': 'SHA-384',\n  'sha-384': 'SHA-384',\n  'sha-512': 'SHA-512',\n  'sha512': 'SHA-512'\n}\nvar checks = []\nfunction checkNative (algo) {\n  if (global.process && !global.process.browser) {\n    return Promise.resolve(false)\n  }\n  if (!subtle || !subtle.importKey || !subtle.deriveBits) {\n    return Promise.resolve(false)\n  }\n  if (checks[algo] !== undefined) {\n    return checks[algo]\n  }\n  ZERO_BUF = ZERO_BUF || Buffer.alloc(8)\n  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)\n    .then(function () {\n      return true\n    }).catch(function () {\n      return false\n    })\n  checks[algo] = prom\n  return prom\n}\n\nfunction browserPbkdf2 (password, salt, iterations, length, algo) {\n  return subtle.importKey(\n    'raw', password, {name: 'PBKDF2'}, false, ['deriveBits']\n  ).then(function (key) {\n    return subtle.deriveBits({\n      name: 'PBKDF2',\n      salt: salt,\n      iterations: iterations,\n      hash: {\n        name: algo\n      }\n    }, key, length << 3)\n  }).then(function (res) {\n    return Buffer.from(res)\n  })\n}\n\nfunction resolvePromise (promise, callback) {\n  promise.then(function (out) {\n    process.nextTick(function () {\n      callback(null, out)\n    })\n  }, function (e) {\n    process.nextTick(function () {\n      callback(e)\n    })\n  })\n}\nmodule.exports = function (password, salt, iterations, keylen, digest, callback) {\n  if (typeof digest === 'function') {\n    callback = digest\n    digest = undefined\n  }\n\n  digest = digest || 'sha1'\n  var algo = toBrowser[digest.toLowerCase()]\n\n  if (!algo || typeof global.Promise !== 'function') {\n    return process.nextTick(function () {\n      var out\n      try {\n        out = sync(password, salt, iterations, keylen, digest)\n      } catch (e) {\n        return callback(e)\n      }\n      callback(null, out)\n    })\n  }\n\n  checkParameters(password, salt, iterations, keylen)\n  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)\n  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)\n\n  resolvePromise(checkNative(algo).then(function (resp) {\n    if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo)\n\n    return sync(password, salt, iterations, keylen, digest)\n  }), callback)\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"../node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../../process/browser.js */ \"../node_modules/process/browser.js\")))\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/pbkdf2/lib/async.js?");

/***/ }),

/***/ "../node_modules/pbkdf2/lib/default-encoding.js":
/*!******************************************************!*\
  !*** ../node_modules/pbkdf2/lib/default-encoding.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {var defaultEncoding\n/* istanbul ignore next */\nif (process.browser) {\n  defaultEncoding = 'utf-8'\n} else {\n  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)\n\n  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'\n}\nmodule.exports = defaultEncoding\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ \"../node_modules/process/browser.js\")))\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/pbkdf2/lib/default-encoding.js?");

/***/ }),

/***/ "../node_modules/pbkdf2/lib/precondition.js":
/*!**************************************************!*\
  !*** ../node_modules/pbkdf2/lib/precondition.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs\n\nfunction checkBuffer (buf, name) {\n  if (typeof buf !== 'string' && !Buffer.isBuffer(buf)) {\n    throw new TypeError(name + ' must be a buffer or string')\n  }\n}\n\nmodule.exports = function (password, salt, iterations, keylen) {\n  checkBuffer(password, 'Password')\n  checkBuffer(salt, 'Salt')\n\n  if (typeof iterations !== 'number') {\n    throw new TypeError('Iterations not a number')\n  }\n\n  if (iterations < 0) {\n    throw new TypeError('Bad iterations')\n  }\n\n  if (typeof keylen !== 'number') {\n    throw new TypeError('Key length not a number')\n  }\n\n  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */\n    throw new TypeError('Bad key length')\n  }\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../buffer/index.js */ \"../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/pbkdf2/lib/precondition.js?");

/***/ }),

/***/ "../node_modules/pbkdf2/lib/sync-browser.js":
/*!**************************************************!*\
  !*** ../node_modules/pbkdf2/lib/sync-browser.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var md5 = __webpack_require__(/*! create-hash/md5 */ \"../node_modules/create-hash/md5.js\")\nvar RIPEMD160 = __webpack_require__(/*! ripemd160 */ \"../node_modules/ripemd160/index.js\")\nvar sha = __webpack_require__(/*! sha.js */ \"../node_modules/sha.js/index.js\")\n\nvar checkParameters = __webpack_require__(/*! ./precondition */ \"../node_modules/pbkdf2/lib/precondition.js\")\nvar defaultEncoding = __webpack_require__(/*! ./default-encoding */ \"../node_modules/pbkdf2/lib/default-encoding.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\nvar ZEROS = Buffer.alloc(128)\nvar sizes = {\n  md5: 16,\n  sha1: 20,\n  sha224: 28,\n  sha256: 32,\n  sha384: 48,\n  sha512: 64,\n  rmd160: 20,\n  ripemd160: 20\n}\n\nfunction Hmac (alg, key, saltLen) {\n  var hash = getDigest(alg)\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  if (key.length > blocksize) {\n    key = hash(key)\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])\n  var opad = Buffer.allocUnsafe(blocksize + sizes[alg])\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)\n  ipad.copy(ipad1, 0, 0, blocksize)\n  this.ipad1 = ipad1\n  this.ipad2 = ipad\n  this.opad = opad\n  this.alg = alg\n  this.blocksize = blocksize\n  this.hash = hash\n  this.size = sizes[alg]\n}\n\nHmac.prototype.run = function (data, ipad) {\n  data.copy(ipad, this.blocksize)\n  var h = this.hash(ipad)\n  h.copy(this.opad, this.blocksize)\n  return this.hash(this.opad)\n}\n\nfunction getDigest (alg) {\n  function shaFunc (data) {\n    return sha(alg).update(data).digest()\n  }\n  function rmd160Func (data) {\n    return new RIPEMD160().update(data).digest()\n  }\n\n  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160Func\n  if (alg === 'md5') return md5\n  return shaFunc\n}\n\nfunction pbkdf2 (password, salt, iterations, keylen, digest) {\n  checkParameters(password, salt, iterations, keylen)\n\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)\n  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)\n\n  digest = digest || 'sha1'\n\n  var hmac = new Hmac(digest, password, salt.length)\n\n  var DK = Buffer.allocUnsafe(keylen)\n  var block1 = Buffer.allocUnsafe(salt.length + 4)\n  salt.copy(block1, 0, 0, salt.length)\n\n  var destPos = 0\n  var hLen = sizes[digest]\n  var l = Math.ceil(keylen / hLen)\n\n  for (var i = 1; i <= l; i++) {\n    block1.writeUInt32BE(i, salt.length)\n\n    var T = hmac.run(block1, hmac.ipad1)\n    var U = T\n\n    for (var j = 1; j < iterations; j++) {\n      U = hmac.run(U, hmac.ipad2)\n      for (var k = 0; k < hLen; k++) T[k] ^= U[k]\n    }\n\n    T.copy(DK, destPos)\n    destPos += hLen\n  }\n\n  return DK\n}\n\nmodule.exports = pbkdf2\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/pbkdf2/lib/sync-browser.js?");

/***/ }),

/***/ "../node_modules/process-nextick-args/index.js":
/*!*****************************************************!*\
  !*** ../node_modules/process-nextick-args/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ \"../node_modules/process/browser.js\")))\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/process-nextick-args/index.js?");

/***/ }),

/***/ "../node_modules/process/browser.js":
/*!******************************************!*\
  !*** ../node_modules/process/browser.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/process/browser.js?");

/***/ }),

/***/ "../node_modules/public-encrypt/browser.js":
/*!*************************************************!*\
  !*** ../node_modules/public-encrypt/browser.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports.publicEncrypt = __webpack_require__(/*! ./publicEncrypt */ \"../node_modules/public-encrypt/publicEncrypt.js\")\nexports.privateDecrypt = __webpack_require__(/*! ./privateDecrypt */ \"../node_modules/public-encrypt/privateDecrypt.js\")\n\nexports.privateEncrypt = function privateEncrypt (key, buf) {\n  return exports.publicEncrypt(key, buf, true)\n}\n\nexports.publicDecrypt = function publicDecrypt (key, buf) {\n  return exports.privateDecrypt(key, buf, true)\n}\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/public-encrypt/browser.js?");

/***/ }),

/***/ "../node_modules/public-encrypt/mgf.js":
/*!*********************************************!*\
  !*** ../node_modules/public-encrypt/mgf.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var createHash = __webpack_require__(/*! create-hash */ \"../node_modules/create-hash/browser.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\n\nmodule.exports = function (seed, len) {\n  var t = Buffer.alloc(0)\n  var i = 0\n  var c\n  while (t.length < len) {\n    c = i2ops(i++)\n    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()])\n  }\n  return t.slice(0, len)\n}\n\nfunction i2ops (c) {\n  var out = Buffer.allocUnsafe(4)\n  out.writeUInt32BE(c, 0)\n  return out\n}\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/public-encrypt/mgf.js?");

/***/ }),

/***/ "../node_modules/public-encrypt/privateDecrypt.js":
/*!********************************************************!*\
  !*** ../node_modules/public-encrypt/privateDecrypt.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parseKeys = __webpack_require__(/*! parse-asn1 */ \"../node_modules/parse-asn1/index.js\")\nvar mgf = __webpack_require__(/*! ./mgf */ \"../node_modules/public-encrypt/mgf.js\")\nvar xor = __webpack_require__(/*! ./xor */ \"../node_modules/public-encrypt/xor.js\")\nvar BN = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\")\nvar crt = __webpack_require__(/*! browserify-rsa */ \"../node_modules/browserify-rsa/index.js\")\nvar createHash = __webpack_require__(/*! create-hash */ \"../node_modules/create-hash/browser.js\")\nvar withPublic = __webpack_require__(/*! ./withPublic */ \"../node_modules/public-encrypt/withPublic.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\n\nmodule.exports = function privateDecrypt (privateKey, enc, reverse) {\n  var padding\n  if (privateKey.padding) {\n    padding = privateKey.padding\n  } else if (reverse) {\n    padding = 1\n  } else {\n    padding = 4\n  }\n\n  var key = parseKeys(privateKey)\n  var k = key.modulus.byteLength()\n  if (enc.length > k || new BN(enc).cmp(key.modulus) >= 0) {\n    throw new Error('decryption error')\n  }\n  var msg\n  if (reverse) {\n    msg = withPublic(new BN(enc), key)\n  } else {\n    msg = crt(enc, key)\n  }\n  var zBuffer = Buffer.alloc(k - msg.length)\n  msg = Buffer.concat([zBuffer, msg], k)\n  if (padding === 4) {\n    return oaep(key, msg)\n  } else if (padding === 1) {\n    return pkcs1(key, msg, reverse)\n  } else if (padding === 3) {\n    return msg\n  } else {\n    throw new Error('unknown padding')\n  }\n}\n\nfunction oaep (key, msg) {\n  var k = key.modulus.byteLength()\n  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()\n  var hLen = iHash.length\n  if (msg[0] !== 0) {\n    throw new Error('decryption error')\n  }\n  var maskedSeed = msg.slice(1, hLen + 1)\n  var maskedDb = msg.slice(hLen + 1)\n  var seed = xor(maskedSeed, mgf(maskedDb, hLen))\n  var db = xor(maskedDb, mgf(seed, k - hLen - 1))\n  if (compare(iHash, db.slice(0, hLen))) {\n    throw new Error('decryption error')\n  }\n  var i = hLen\n  while (db[i] === 0) {\n    i++\n  }\n  if (db[i++] !== 1) {\n    throw new Error('decryption error')\n  }\n  return db.slice(i)\n}\n\nfunction pkcs1 (key, msg, reverse) {\n  var p1 = msg.slice(0, 2)\n  var i = 2\n  var status = 0\n  while (msg[i++] !== 0) {\n    if (i >= msg.length) {\n      status++\n      break\n    }\n  }\n  var ps = msg.slice(2, i - 1)\n\n  if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)) {\n    status++\n  }\n  if (ps.length < 8) {\n    status++\n  }\n  if (status) {\n    throw new Error('decryption error')\n  }\n  return msg.slice(i)\n}\nfunction compare (a, b) {\n  a = Buffer.from(a)\n  b = Buffer.from(b)\n  var dif = 0\n  var len = a.length\n  if (a.length !== b.length) {\n    dif++\n    len = Math.min(a.length, b.length)\n  }\n  var i = -1\n  while (++i < len) {\n    dif += (a[i] ^ b[i])\n  }\n  return dif\n}\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/public-encrypt/privateDecrypt.js?");

/***/ }),

/***/ "../node_modules/public-encrypt/publicEncrypt.js":
/*!*******************************************************!*\
  !*** ../node_modules/public-encrypt/publicEncrypt.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parseKeys = __webpack_require__(/*! parse-asn1 */ \"../node_modules/parse-asn1/index.js\")\nvar randomBytes = __webpack_require__(/*! randombytes */ \"../node_modules/randombytes/browser.js\")\nvar createHash = __webpack_require__(/*! create-hash */ \"../node_modules/create-hash/browser.js\")\nvar mgf = __webpack_require__(/*! ./mgf */ \"../node_modules/public-encrypt/mgf.js\")\nvar xor = __webpack_require__(/*! ./xor */ \"../node_modules/public-encrypt/xor.js\")\nvar BN = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\")\nvar withPublic = __webpack_require__(/*! ./withPublic */ \"../node_modules/public-encrypt/withPublic.js\")\nvar crt = __webpack_require__(/*! browserify-rsa */ \"../node_modules/browserify-rsa/index.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\n\nmodule.exports = function publicEncrypt (publicKey, msg, reverse) {\n  var padding\n  if (publicKey.padding) {\n    padding = publicKey.padding\n  } else if (reverse) {\n    padding = 1\n  } else {\n    padding = 4\n  }\n  var key = parseKeys(publicKey)\n  var paddedMsg\n  if (padding === 4) {\n    paddedMsg = oaep(key, msg)\n  } else if (padding === 1) {\n    paddedMsg = pkcs1(key, msg, reverse)\n  } else if (padding === 3) {\n    paddedMsg = new BN(msg)\n    if (paddedMsg.cmp(key.modulus) >= 0) {\n      throw new Error('data too long for modulus')\n    }\n  } else {\n    throw new Error('unknown padding')\n  }\n  if (reverse) {\n    return crt(paddedMsg, key)\n  } else {\n    return withPublic(paddedMsg, key)\n  }\n}\n\nfunction oaep (key, msg) {\n  var k = key.modulus.byteLength()\n  var mLen = msg.length\n  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()\n  var hLen = iHash.length\n  var hLen2 = 2 * hLen\n  if (mLen > k - hLen2 - 2) {\n    throw new Error('message too long')\n  }\n  var ps = Buffer.alloc(k - mLen - hLen2 - 2)\n  var dblen = k - hLen - 1\n  var seed = randomBytes(hLen)\n  var maskedDb = xor(Buffer.concat([iHash, ps, Buffer.alloc(1, 1), msg], dblen), mgf(seed, dblen))\n  var maskedSeed = xor(seed, mgf(maskedDb, hLen))\n  return new BN(Buffer.concat([Buffer.alloc(1), maskedSeed, maskedDb], k))\n}\nfunction pkcs1 (key, msg, reverse) {\n  var mLen = msg.length\n  var k = key.modulus.byteLength()\n  if (mLen > k - 11) {\n    throw new Error('message too long')\n  }\n  var ps\n  if (reverse) {\n    ps = Buffer.alloc(k - mLen - 3, 0xff)\n  } else {\n    ps = nonZero(k - mLen - 3)\n  }\n  return new BN(Buffer.concat([Buffer.from([0, reverse ? 1 : 2]), ps, Buffer.alloc(1), msg], k))\n}\nfunction nonZero (len) {\n  var out = Buffer.allocUnsafe(len)\n  var i = 0\n  var cache = randomBytes(len * 2)\n  var cur = 0\n  var num\n  while (i < len) {\n    if (cur === cache.length) {\n      cache = randomBytes(len * 2)\n      cur = 0\n    }\n    num = cache[cur++]\n    if (num) {\n      out[i++] = num\n    }\n  }\n  return out\n}\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/public-encrypt/publicEncrypt.js?");

/***/ }),

/***/ "../node_modules/public-encrypt/withPublic.js":
/*!****************************************************!*\
  !*** ../node_modules/public-encrypt/withPublic.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var BN = __webpack_require__(/*! bn.js */ \"../node_modules/bn.js/lib/bn.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\n\nfunction withPublic (paddedMsg, key) {\n  return Buffer.from(paddedMsg\n    .toRed(BN.mont(key.modulus))\n    .redPow(new BN(key.publicExponent))\n    .fromRed()\n    .toArray())\n}\n\nmodule.exports = withPublic\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/public-encrypt/withPublic.js?");

/***/ }),

/***/ "../node_modules/public-encrypt/xor.js":
/*!*********************************************!*\
  !*** ../node_modules/public-encrypt/xor.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function xor (a, b) {\n  var len = a.length\n  var i = -1\n  while (++i < len) {\n    a[i] ^= b[i]\n  }\n  return a\n}\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/public-encrypt/xor.js?");

/***/ }),

/***/ "../node_modules/randombytes/browser.js":
/*!**********************************************!*\
  !*** ../node_modules/randombytes/browser.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global, process) {\n\n// limit of Crypto.getRandomValues()\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\nvar MAX_BYTES = 65536\n\n// Node supports requesting up to this number of bytes\n// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48\nvar MAX_UINT32 = 4294967295\n\nfunction oldBrowser () {\n  throw new Error('Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11')\n}\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\nvar crypto = global.crypto || global.msCrypto\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes\n} else {\n  module.exports = oldBrowser\n}\n\nfunction randomBytes (size, cb) {\n  // phantomjs needs to throw\n  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes')\n\n  var bytes = Buffer.allocUnsafe(size)\n\n  if (size > 0) {  // getRandomValues fails on IE if size == 0\n    if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues\n      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n      for (var generated = 0; generated < size; generated += MAX_BYTES) {\n        // buffer.slice automatically checks if the end is past the end of\n        // the buffer so we don't have to here\n        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))\n      }\n    } else {\n      crypto.getRandomValues(bytes)\n    }\n  }\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes)\n    })\n  }\n\n  return bytes\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"../node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../process/browser.js */ \"../node_modules/process/browser.js\")))\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/randombytes/browser.js?");

/***/ }),

/***/ "../node_modules/randomfill/browser.js":
/*!*********************************************!*\
  !*** ../node_modules/randomfill/browser.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global, process) {\n\nfunction oldBrowser () {\n  throw new Error('secure random number generation not supported by this browser\\nuse chrome, FireFox or Internet Explorer 11')\n}\nvar safeBuffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\")\nvar randombytes = __webpack_require__(/*! randombytes */ \"../node_modules/randombytes/browser.js\")\nvar Buffer = safeBuffer.Buffer\nvar kBufferMaxLength = safeBuffer.kMaxLength\nvar crypto = global.crypto || global.msCrypto\nvar kMaxUint32 = Math.pow(2, 32) - 1\nfunction assertOffset (offset, length) {\n  if (typeof offset !== 'number' || offset !== offset) { // eslint-disable-line no-self-compare\n    throw new TypeError('offset must be a number')\n  }\n\n  if (offset > kMaxUint32 || offset < 0) {\n    throw new TypeError('offset must be a uint32')\n  }\n\n  if (offset > kBufferMaxLength || offset > length) {\n    throw new RangeError('offset out of range')\n  }\n}\n\nfunction assertSize (size, offset, length) {\n  if (typeof size !== 'number' || size !== size) { // eslint-disable-line no-self-compare\n    throw new TypeError('size must be a number')\n  }\n\n  if (size > kMaxUint32 || size < 0) {\n    throw new TypeError('size must be a uint32')\n  }\n\n  if (size + offset > length || size > kBufferMaxLength) {\n    throw new RangeError('buffer too small')\n  }\n}\nif ((crypto && crypto.getRandomValues) || !process.browser) {\n  exports.randomFill = randomFill\n  exports.randomFillSync = randomFillSync\n} else {\n  exports.randomFill = oldBrowser\n  exports.randomFillSync = oldBrowser\n}\nfunction randomFill (buf, offset, size, cb) {\n  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {\n    throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array')\n  }\n\n  if (typeof offset === 'function') {\n    cb = offset\n    offset = 0\n    size = buf.length\n  } else if (typeof size === 'function') {\n    cb = size\n    size = buf.length - offset\n  } else if (typeof cb !== 'function') {\n    throw new TypeError('\"cb\" argument must be a function')\n  }\n  assertOffset(offset, buf.length)\n  assertSize(size, offset, buf.length)\n  return actualFill(buf, offset, size, cb)\n}\n\nfunction actualFill (buf, offset, size, cb) {\n  if (process.browser) {\n    var ourBuf = buf.buffer\n    var uint = new Uint8Array(ourBuf, offset, size)\n    crypto.getRandomValues(uint)\n    if (cb) {\n      process.nextTick(function () {\n        cb(null, buf)\n      })\n      return\n    }\n    return buf\n  }\n  if (cb) {\n    randombytes(size, function (err, bytes) {\n      if (err) {\n        return cb(err)\n      }\n      bytes.copy(buf, offset)\n      cb(null, buf)\n    })\n    return\n  }\n  var bytes = randombytes(size)\n  bytes.copy(buf, offset)\n  return buf\n}\nfunction randomFillSync (buf, offset, size) {\n  if (typeof offset === 'undefined') {\n    offset = 0\n  }\n  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {\n    throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array')\n  }\n\n  assertOffset(offset, buf.length)\n\n  if (size === undefined) size = buf.length - offset\n\n  assertSize(size, offset, buf.length)\n\n  return actualFill(buf, offset, size)\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"../node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../process/browser.js */ \"../node_modules/process/browser.js\")))\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/randomfill/browser.js?");

/***/ }),

/***/ "../node_modules/readable-stream/duplex-browser.js":
/*!*********************************************************!*\
  !*** ../node_modules/readable-stream/duplex-browser.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./lib/_stream_duplex.js */ \"../node_modules/readable-stream/lib/_stream_duplex.js\");\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/readable-stream/duplex-browser.js?");

/***/ }),

/***/ "../node_modules/readable-stream/lib/_stream_duplex.js":
/*!*************************************************************!*\
  !*** ../node_modules/readable-stream/lib/_stream_duplex.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(/*! process-nextick-args */ \"../node_modules/process-nextick-args/index.js\");\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = __webpack_require__(/*! core-util-is */ \"../node_modules/core-util-is/lib/util.js\");\nutil.inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\nvar Readable = __webpack_require__(/*! ./_stream_readable */ \"../node_modules/readable-stream/lib/_stream_readable.js\");\nvar Writable = __webpack_require__(/*! ./_stream_writable */ \"../node_modules/readable-stream/lib/_stream_writable.js\");\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/readable-stream/lib/_stream_duplex.js?");

/***/ }),

/***/ "../node_modules/readable-stream/lib/_stream_passthrough.js":
/*!******************************************************************!*\
  !*** ../node_modules/readable-stream/lib/_stream_passthrough.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n\n\nmodule.exports = PassThrough;\n\nvar Transform = __webpack_require__(/*! ./_stream_transform */ \"../node_modules/readable-stream/lib/_stream_transform.js\");\n\n/*<replacement>*/\nvar util = __webpack_require__(/*! core-util-is */ \"../node_modules/core-util-is/lib/util.js\");\nutil.inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/readable-stream/lib/_stream_passthrough.js?");

/***/ }),

/***/ "../node_modules/readable-stream/lib/_stream_readable.js":
/*!***************************************************************!*\
  !*** ../node_modules/readable-stream/lib/_stream_readable.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(/*! process-nextick-args */ \"../node_modules/process-nextick-args/index.js\");\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = __webpack_require__(/*! isarray */ \"../node_modules/isarray/index.js\");\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = __webpack_require__(/*! events */ \"../node_modules/events/events.js\").EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = __webpack_require__(/*! ./internal/streams/stream */ \"../node_modules/readable-stream/lib/internal/streams/stream-browser.js\");\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = __webpack_require__(/*! core-util-is */ \"../node_modules/core-util-is/lib/util.js\");\nutil.inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = __webpack_require__(/*! util */ 0);\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = __webpack_require__(/*! ./internal/streams/BufferList */ \"../node_modules/readable-stream/lib/internal/streams/BufferList.js\");\nvar destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ \"../node_modules/readable-stream/lib/internal/streams/destroy.js\");\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"../node_modules/readable-stream/lib/_stream_duplex.js\");\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = __webpack_require__(/*! string_decoder/ */ \"../node_modules/string_decoder/lib/string_decoder.js\").StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"../node_modules/readable-stream/lib/_stream_duplex.js\");\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = __webpack_require__(/*! string_decoder/ */ \"../node_modules/string_decoder/lib/string_decoder.js\").StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"../node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../../process/browser.js */ \"../node_modules/process/browser.js\")))\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/readable-stream/lib/_stream_readable.js?");

/***/ }),

/***/ "../node_modules/readable-stream/lib/_stream_transform.js":
/*!****************************************************************!*\
  !*** ../node_modules/readable-stream/lib/_stream_transform.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n\n\nmodule.exports = Transform;\n\nvar Duplex = __webpack_require__(/*! ./_stream_duplex */ \"../node_modules/readable-stream/lib/_stream_duplex.js\");\n\n/*<replacement>*/\nvar util = __webpack_require__(/*! core-util-is */ \"../node_modules/core-util-is/lib/util.js\");\nutil.inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/readable-stream/lib/_stream_transform.js?");

/***/ }),

/***/ "../node_modules/readable-stream/lib/_stream_writable.js":
/*!***************************************************************!*\
  !*** ../node_modules/readable-stream/lib/_stream_writable.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process, setImmediate, global) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(/*! process-nextick-args */ \"../node_modules/process-nextick-args/index.js\");\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = __webpack_require__(/*! core-util-is */ \"../node_modules/core-util-is/lib/util.js\");\nutil.inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: __webpack_require__(/*! util-deprecate */ \"../node_modules/util-deprecate/browser.js\")\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = __webpack_require__(/*! ./internal/streams/stream */ \"../node_modules/readable-stream/lib/internal/streams/stream-browser.js\");\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ \"../node_modules/readable-stream/lib/internal/streams/destroy.js\");\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"../node_modules/readable-stream/lib/_stream_duplex.js\");\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"../node_modules/readable-stream/lib/_stream_duplex.js\");\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ \"../node_modules/process/browser.js\"), __webpack_require__(/*! ./../../timers-browserify/main.js */ \"../node_modules/timers-browserify/main.js\").setImmediate, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"../node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/readable-stream/lib/_stream_writable.js?");

/***/ }),

/***/ "../node_modules/readable-stream/lib/internal/streams/BufferList.js":
/*!**************************************************************************!*\
  !*** ../node_modules/readable-stream/lib/internal/streams/BufferList.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer;\nvar util = __webpack_require__(/*! util */ 1);\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/readable-stream/lib/internal/streams/BufferList.js?");

/***/ }),

/***/ "../node_modules/readable-stream/lib/internal/streams/destroy.js":
/*!***********************************************************************!*\
  !*** ../node_modules/readable-stream/lib/internal/streams/destroy.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(/*! process-nextick-args */ \"../node_modules/process-nextick-args/index.js\");\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/readable-stream/lib/internal/streams/destroy.js?");

/***/ }),

/***/ "../node_modules/readable-stream/lib/internal/streams/stream-browser.js":
/*!******************************************************************************!*\
  !*** ../node_modules/readable-stream/lib/internal/streams/stream-browser.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! events */ \"../node_modules/events/events.js\").EventEmitter;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/readable-stream/lib/internal/streams/stream-browser.js?");

/***/ }),

/***/ "../node_modules/readable-stream/passthrough.js":
/*!******************************************************!*\
  !*** ../node_modules/readable-stream/passthrough.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./readable */ \"../node_modules/readable-stream/readable-browser.js\").PassThrough\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/readable-stream/passthrough.js?");

/***/ }),

/***/ "../node_modules/readable-stream/readable-browser.js":
/*!***********************************************************!*\
  !*** ../node_modules/readable-stream/readable-browser.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ./lib/_stream_readable.js */ \"../node_modules/readable-stream/lib/_stream_readable.js\");\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = __webpack_require__(/*! ./lib/_stream_writable.js */ \"../node_modules/readable-stream/lib/_stream_writable.js\");\nexports.Duplex = __webpack_require__(/*! ./lib/_stream_duplex.js */ \"../node_modules/readable-stream/lib/_stream_duplex.js\");\nexports.Transform = __webpack_require__(/*! ./lib/_stream_transform.js */ \"../node_modules/readable-stream/lib/_stream_transform.js\");\nexports.PassThrough = __webpack_require__(/*! ./lib/_stream_passthrough.js */ \"../node_modules/readable-stream/lib/_stream_passthrough.js\");\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/readable-stream/readable-browser.js?");

/***/ }),

/***/ "../node_modules/readable-stream/transform.js":
/*!****************************************************!*\
  !*** ../node_modules/readable-stream/transform.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./readable */ \"../node_modules/readable-stream/readable-browser.js\").Transform\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/readable-stream/transform.js?");

/***/ }),

/***/ "../node_modules/readable-stream/writable-browser.js":
/*!***********************************************************!*\
  !*** ../node_modules/readable-stream/writable-browser.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./lib/_stream_writable.js */ \"../node_modules/readable-stream/lib/_stream_writable.js\");\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/readable-stream/writable-browser.js?");

/***/ }),

/***/ "../node_modules/ripemd160/index.js":
/*!******************************************!*\
  !*** ../node_modules/ripemd160/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar Buffer = __webpack_require__(/*! buffer */ \"../node_modules/buffer/index.js\").Buffer\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\nvar HashBase = __webpack_require__(/*! hash-base */ \"../node_modules/hash-base/index.js\")\n\nvar ARRAY16 = new Array(16)\n\nvar zl = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n]\n\nvar zr = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n]\n\nvar sl = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n]\n\nvar sr = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n]\n\nvar hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]\nvar hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]\n\nfunction RIPEMD160 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n}\n\ninherits(RIPEMD160, HashBase)\n\nRIPEMD160.prototype._update = function () {\n  var words = ARRAY16\n  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4)\n\n  var al = this._a | 0\n  var bl = this._b | 0\n  var cl = this._c | 0\n  var dl = this._d | 0\n  var el = this._e | 0\n\n  var ar = this._a | 0\n  var br = this._b | 0\n  var cr = this._c | 0\n  var dr = this._d | 0\n  var er = this._e | 0\n\n  // computation\n  for (var i = 0; i < 80; i += 1) {\n    var tl\n    var tr\n    if (i < 16) {\n      tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])\n      tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])\n    } else if (i < 32) {\n      tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])\n      tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])\n    } else if (i < 48) {\n      tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])\n      tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])\n    } else if (i < 64) {\n      tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])\n      tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])\n    } else { // if (i<80) {\n      tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])\n      tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])\n    }\n\n    al = el\n    el = dl\n    dl = rotl(cl, 10)\n    cl = bl\n    bl = tl\n\n    ar = er\n    er = dr\n    dr = rotl(cr, 10)\n    cr = br\n    br = tr\n  }\n\n  // update state\n  var t = (this._b + cl + dr) | 0\n  this._b = (this._c + dl + er) | 0\n  this._c = (this._d + el + ar) | 0\n  this._d = (this._e + al + br) | 0\n  this._e = (this._a + bl + cr) | 0\n  this._a = t\n}\n\nRIPEMD160.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  buffer.writeInt32LE(this._e, 16)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fn1 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn2 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn3 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn4 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn5 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0\n}\n\nmodule.exports = RIPEMD160\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/ripemd160/index.js?");

/***/ }),

/***/ "../node_modules/safe-buffer/index.js":
/*!********************************************!*\
  !*** ../node_modules/safe-buffer/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* eslint-disable node/no-deprecated-api */\nvar buffer = __webpack_require__(/*! buffer */ \"../node_modules/buffer/index.js\")\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/safe-buffer/index.js?");

/***/ }),

/***/ "../node_modules/setimmediate/setImmediate.js":
/*!****************************************************!*\
  !*** ../node_modules/setimmediate/setImmediate.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"../node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../process/browser.js */ \"../node_modules/process/browser.js\")))\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/setimmediate/setImmediate.js?");

/***/ }),

/***/ "../node_modules/sha.js/hash.js":
/*!**************************************!*\
  !*** ../node_modules/sha.js/hash.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/sha.js/hash.js?");

/***/ }),

/***/ "../node_modules/sha.js/index.js":
/*!***************************************!*\
  !*** ../node_modules/sha.js/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var exports = module.exports = function SHA (algorithm) {\n  algorithm = algorithm.toLowerCase()\n\n  var Algorithm = exports[algorithm]\n  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')\n\n  return new Algorithm()\n}\n\nexports.sha = __webpack_require__(/*! ./sha */ \"../node_modules/sha.js/sha.js\")\nexports.sha1 = __webpack_require__(/*! ./sha1 */ \"../node_modules/sha.js/sha1.js\")\nexports.sha224 = __webpack_require__(/*! ./sha224 */ \"../node_modules/sha.js/sha224.js\")\nexports.sha256 = __webpack_require__(/*! ./sha256 */ \"../node_modules/sha.js/sha256.js\")\nexports.sha384 = __webpack_require__(/*! ./sha384 */ \"../node_modules/sha.js/sha384.js\")\nexports.sha512 = __webpack_require__(/*! ./sha512 */ \"../node_modules/sha.js/sha512.js\")\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/sha.js/index.js?");

/***/ }),

/***/ "../node_modules/sha.js/sha.js":
/*!*************************************!*\
  !*** ../node_modules/sha.js/sha.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined\n * in FIPS PUB 180-1\n * This source code is derived from sha1.js of the same repository.\n * The difference between SHA-0 and SHA-1 is just a bitwise rotate left\n * operation was added.\n */\n\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\nvar Hash = __webpack_require__(/*! ./hash */ \"../node_modules/sha.js/hash.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha, Hash)\n\nSha.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/sha.js/sha.js?");

/***/ }),

/***/ "../node_modules/sha.js/sha1.js":
/*!**************************************!*\
  !*** ../node_modules/sha.js/sha1.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\nvar Hash = __webpack_require__(/*! ./hash */ \"../node_modules/sha.js/hash.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha1 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha1, Hash)\n\nSha1.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl1 (num) {\n  return (num << 1) | (num >>> 31)\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha1.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha1.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha1\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/sha.js/sha1.js?");

/***/ }),

/***/ "../node_modules/sha.js/sha224.js":
/*!****************************************!*\
  !*** ../node_modules/sha.js/sha224.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\nvar Sha256 = __webpack_require__(/*! ./sha256 */ \"../node_modules/sha.js/sha256.js\")\nvar Hash = __webpack_require__(/*! ./hash */ \"../node_modules/sha.js/hash.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\n\nvar W = new Array(64)\n\nfunction Sha224 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha224, Sha256)\n\nSha224.prototype.init = function () {\n  this._a = 0xc1059ed8\n  this._b = 0x367cd507\n  this._c = 0x3070dd17\n  this._d = 0xf70e5939\n  this._e = 0xffc00b31\n  this._f = 0x68581511\n  this._g = 0x64f98fa7\n  this._h = 0xbefa4fa4\n\n  return this\n}\n\nSha224.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(28)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n\n  return H\n}\n\nmodule.exports = Sha224\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/sha.js/sha224.js?");

/***/ }),

/***/ "../node_modules/sha.js/sha256.js":
/*!****************************************!*\
  !*** ../node_modules/sha.js/sha256.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\nvar Hash = __webpack_require__(/*! ./hash */ \"../node_modules/sha.js/hash.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nfunction Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667\n  this._b = 0xbb67ae85\n  this._c = 0x3c6ef372\n  this._d = 0xa54ff53a\n  this._e = 0x510e527f\n  this._f = 0x9b05688c\n  this._g = 0x1f83d9ab\n  this._h = 0x5be0cd19\n\n  return this\n}\n\nfunction ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0\n\n  for (var j = 0; j < 64; ++j) {\n    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0\n    var T2 = (sigma0(a) + maj(a, b, c)) | 0\n\n    h = g\n    g = f\n    f = e\n    e = (d + T1) | 0\n    d = c\n    c = b\n    b = a\n    a = (T1 + T2) | 0\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n\nmodule.exports = Sha256\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/sha.js/sha256.js?");

/***/ }),

/***/ "../node_modules/sha.js/sha384.js":
/*!****************************************!*\
  !*** ../node_modules/sha.js/sha384.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\nvar SHA512 = __webpack_require__(/*! ./sha512 */ \"../node_modules/sha.js/sha512.js\")\nvar Hash = __webpack_require__(/*! ./hash */ \"../node_modules/sha.js/hash.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\n\nvar W = new Array(160)\n\nfunction Sha384 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha384, SHA512)\n\nSha384.prototype.init = function () {\n  this._ah = 0xcbbb9d5d\n  this._bh = 0x629a292a\n  this._ch = 0x9159015a\n  this._dh = 0x152fecd8\n  this._eh = 0x67332667\n  this._fh = 0x8eb44a87\n  this._gh = 0xdb0c2e0d\n  this._hh = 0x47b5481d\n\n  this._al = 0xc1059ed8\n  this._bl = 0x367cd507\n  this._cl = 0x3070dd17\n  this._dl = 0xf70e5939\n  this._el = 0xffc00b31\n  this._fl = 0x68581511\n  this._gl = 0x64f98fa7\n  this._hl = 0xbefa4fa4\n\n  return this\n}\n\nSha384.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(48)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n\n  return H\n}\n\nmodule.exports = Sha384\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/sha.js/sha384.js?");

/***/ }),

/***/ "../node_modules/sha.js/sha512.js":
/*!****************************************!*\
  !*** ../node_modules/sha.js/sha512.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\")\nvar Hash = __webpack_require__(/*! ./hash */ \"../node_modules/sha.js/hash.js\")\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]\n\nvar W = new Array(160)\n\nfunction Sha512 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha512, Hash)\n\nSha512.prototype.init = function () {\n  this._ah = 0x6a09e667\n  this._bh = 0xbb67ae85\n  this._ch = 0x3c6ef372\n  this._dh = 0xa54ff53a\n  this._eh = 0x510e527f\n  this._fh = 0x9b05688c\n  this._gh = 0x1f83d9ab\n  this._hh = 0x5be0cd19\n\n  this._al = 0xf3bcc908\n  this._bl = 0x84caa73b\n  this._cl = 0xfe94f82b\n  this._dl = 0x5f1d36f1\n  this._el = 0xade682d1\n  this._fl = 0x2b3e6c1f\n  this._gl = 0xfb41bd6b\n  this._hl = 0x137e2179\n\n  return this\n}\n\nfunction Ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x, xl) {\n  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)\n}\n\nfunction sigma1 (x, xl) {\n  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)\n}\n\nfunction Gamma0 (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)\n}\n\nfunction Gamma0l (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)\n}\n\nfunction Gamma1 (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)\n}\n\nfunction Gamma1l (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)\n}\n\nfunction getCarry (a, b) {\n  return (a >>> 0) < (b >>> 0) ? 1 : 0\n}\n\nSha512.prototype._update = function (M) {\n  var W = this._w\n\n  var ah = this._ah | 0\n  var bh = this._bh | 0\n  var ch = this._ch | 0\n  var dh = this._dh | 0\n  var eh = this._eh | 0\n  var fh = this._fh | 0\n  var gh = this._gh | 0\n  var hh = this._hh | 0\n\n  var al = this._al | 0\n  var bl = this._bl | 0\n  var cl = this._cl | 0\n  var dl = this._dl | 0\n  var el = this._el | 0\n  var fl = this._fl | 0\n  var gl = this._gl | 0\n  var hl = this._hl | 0\n\n  for (var i = 0; i < 32; i += 2) {\n    W[i] = M.readInt32BE(i * 4)\n    W[i + 1] = M.readInt32BE(i * 4 + 4)\n  }\n  for (; i < 160; i += 2) {\n    var xh = W[i - 15 * 2]\n    var xl = W[i - 15 * 2 + 1]\n    var gamma0 = Gamma0(xh, xl)\n    var gamma0l = Gamma0l(xl, xh)\n\n    xh = W[i - 2 * 2]\n    xl = W[i - 2 * 2 + 1]\n    var gamma1 = Gamma1(xh, xl)\n    var gamma1l = Gamma1l(xl, xh)\n\n    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n    var Wi7h = W[i - 7 * 2]\n    var Wi7l = W[i - 7 * 2 + 1]\n\n    var Wi16h = W[i - 16 * 2]\n    var Wi16l = W[i - 16 * 2 + 1]\n\n    var Wil = (gamma0l + Wi7l) | 0\n    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0\n    Wil = (Wil + gamma1l) | 0\n    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0\n    Wil = (Wil + Wi16l) | 0\n    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0\n\n    W[i] = Wih\n    W[i + 1] = Wil\n  }\n\n  for (var j = 0; j < 160; j += 2) {\n    Wih = W[j]\n    Wil = W[j + 1]\n\n    var majh = maj(ah, bh, ch)\n    var majl = maj(al, bl, cl)\n\n    var sigma0h = sigma0(ah, al)\n    var sigma0l = sigma0(al, ah)\n    var sigma1h = sigma1(eh, el)\n    var sigma1l = sigma1(el, eh)\n\n    // t1 = h + sigma1 + ch + K[j] + W[j]\n    var Kih = K[j]\n    var Kil = K[j + 1]\n\n    var chh = Ch(eh, fh, gh)\n    var chl = Ch(el, fl, gl)\n\n    var t1l = (hl + sigma1l) | 0\n    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0\n    t1l = (t1l + chl) | 0\n    t1h = (t1h + chh + getCarry(t1l, chl)) | 0\n    t1l = (t1l + Kil) | 0\n    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0\n    t1l = (t1l + Wil) | 0\n    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0\n\n    // t2 = sigma0 + maj\n    var t2l = (sigma0l + majl) | 0\n    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0\n\n    hh = gh\n    hl = gl\n    gh = fh\n    gl = fl\n    fh = eh\n    fl = el\n    el = (dl + t1l) | 0\n    eh = (dh + t1h + getCarry(el, dl)) | 0\n    dh = ch\n    dl = cl\n    ch = bh\n    cl = bl\n    bh = ah\n    bl = al\n    al = (t1l + t2l) | 0\n    ah = (t1h + t2h + getCarry(al, t1l)) | 0\n  }\n\n  this._al = (this._al + al) | 0\n  this._bl = (this._bl + bl) | 0\n  this._cl = (this._cl + cl) | 0\n  this._dl = (this._dl + dl) | 0\n  this._el = (this._el + el) | 0\n  this._fl = (this._fl + fl) | 0\n  this._gl = (this._gl + gl) | 0\n  this._hl = (this._hl + hl) | 0\n\n  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0\n  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0\n  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0\n  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0\n  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0\n  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0\n  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0\n  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0\n}\n\nSha512.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(64)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n  writeInt64BE(this._gh, this._gl, 48)\n  writeInt64BE(this._hh, this._hl, 56)\n\n  return H\n}\n\nmodule.exports = Sha512\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/sha.js/sha512.js?");

/***/ }),

/***/ "../node_modules/stream-browserify/index.js":
/*!**************************************************!*\
  !*** ../node_modules/stream-browserify/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = __webpack_require__(/*! events */ \"../node_modules/events/events.js\").EventEmitter;\nvar inherits = __webpack_require__(/*! inherits */ \"../node_modules/inherits/inherits_browser.js\");\n\ninherits(Stream, EE);\nStream.Readable = __webpack_require__(/*! readable-stream/readable.js */ \"../node_modules/readable-stream/readable-browser.js\");\nStream.Writable = __webpack_require__(/*! readable-stream/writable.js */ \"../node_modules/readable-stream/writable-browser.js\");\nStream.Duplex = __webpack_require__(/*! readable-stream/duplex.js */ \"../node_modules/readable-stream/duplex-browser.js\");\nStream.Transform = __webpack_require__(/*! readable-stream/transform.js */ \"../node_modules/readable-stream/transform.js\");\nStream.PassThrough = __webpack_require__(/*! readable-stream/passthrough.js */ \"../node_modules/readable-stream/passthrough.js\");\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/stream-browserify/index.js?");

/***/ }),

/***/ "../node_modules/string_decoder/lib/string_decoder.js":
/*!************************************************************!*\
  !*** ../node_modules/string_decoder/lib/string_decoder.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n/*<replacement>*/\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../node_modules/safe-buffer/index.js\").Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/string_decoder/lib/string_decoder.js?");

/***/ }),

/***/ "../node_modules/timers-browserify/main.js":
/*!*************************************************!*\
  !*** ../node_modules/timers-browserify/main.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(/*! setimmediate */ \"../node_modules/setimmediate/setImmediate.js\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"../node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/timers-browserify/main.js?");

/***/ }),

/***/ "../node_modules/util-deprecate/browser.js":
/*!*************************************************!*\
  !*** ../node_modules/util-deprecate/browser.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"../node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/util-deprecate/browser.js?");

/***/ }),

/***/ "../node_modules/vm-browserify/index.js":
/*!**********************************************!*\
  !*** ../node_modules/vm-browserify/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var indexOf = function (xs, item) {\n    if (xs.indexOf) return xs.indexOf(item);\n    else for (var i = 0; i < xs.length; i++) {\n        if (xs[i] === item) return i;\n    }\n    return -1;\n};\nvar Object_keys = function (obj) {\n    if (Object.keys) return Object.keys(obj)\n    else {\n        var res = [];\n        for (var key in obj) res.push(key)\n        return res;\n    }\n};\n\nvar forEach = function (xs, fn) {\n    if (xs.forEach) return xs.forEach(fn)\n    else for (var i = 0; i < xs.length; i++) {\n        fn(xs[i], i, xs);\n    }\n};\n\nvar defineProp = (function() {\n    try {\n        Object.defineProperty({}, '_', {});\n        return function(obj, name, value) {\n            Object.defineProperty(obj, name, {\n                writable: true,\n                enumerable: false,\n                configurable: true,\n                value: value\n            })\n        };\n    } catch(e) {\n        return function(obj, name, value) {\n            obj[name] = value;\n        };\n    }\n}());\n\nvar globals = ['Array', 'Boolean', 'Date', 'Error', 'EvalError', 'Function',\n'Infinity', 'JSON', 'Math', 'NaN', 'Number', 'Object', 'RangeError',\n'ReferenceError', 'RegExp', 'String', 'SyntaxError', 'TypeError', 'URIError',\n'decodeURI', 'decodeURIComponent', 'encodeURI', 'encodeURIComponent', 'escape',\n'eval', 'isFinite', 'isNaN', 'parseFloat', 'parseInt', 'undefined', 'unescape'];\n\nfunction Context() {}\nContext.prototype = {};\n\nvar Script = exports.Script = function NodeScript (code) {\n    if (!(this instanceof Script)) return new Script(code);\n    this.code = code;\n};\n\nScript.prototype.runInContext = function (context) {\n    if (!(context instanceof Context)) {\n        throw new TypeError(\"needs a 'context' argument.\");\n    }\n    \n    var iframe = document.createElement('iframe');\n    if (!iframe.style) iframe.style = {};\n    iframe.style.display = 'none';\n    \n    document.body.appendChild(iframe);\n    \n    var win = iframe.contentWindow;\n    var wEval = win.eval, wExecScript = win.execScript;\n\n    if (!wEval && wExecScript) {\n        // win.eval() magically appears when this is called in IE:\n        wExecScript.call(win, 'null');\n        wEval = win.eval;\n    }\n    \n    forEach(Object_keys(context), function (key) {\n        win[key] = context[key];\n    });\n    forEach(globals, function (key) {\n        if (context[key]) {\n            win[key] = context[key];\n        }\n    });\n    \n    var winKeys = Object_keys(win);\n\n    var res = wEval.call(win, this.code);\n    \n    forEach(Object_keys(win), function (key) {\n        // Avoid copying circular objects like `top` and `window` by only\n        // updating existing context properties or new properties in the `win`\n        // that was only introduced after the eval.\n        if (key in context || indexOf(winKeys, key) === -1) {\n            context[key] = win[key];\n        }\n    });\n\n    forEach(globals, function (key) {\n        if (!(key in context)) {\n            defineProp(context, key, win[key]);\n        }\n    });\n    \n    document.body.removeChild(iframe);\n    \n    return res;\n};\n\nScript.prototype.runInThisContext = function () {\n    return eval(this.code); // maybe...\n};\n\nScript.prototype.runInNewContext = function (context) {\n    var ctx = Script.createContext(context);\n    var res = this.runInContext(ctx);\n\n    if (context) {\n        forEach(Object_keys(ctx), function (key) {\n            context[key] = ctx[key];\n        });\n    }\n\n    return res;\n};\n\nforEach(Object_keys(Script.prototype), function (name) {\n    exports[name] = Script[name] = function (code) {\n        var s = Script(code);\n        return s[name].apply(s, [].slice.call(arguments, 1));\n    };\n});\n\nexports.isContext = function (context) {\n    return context instanceof Context;\n};\n\nexports.createScript = function (code) {\n    return exports.Script(code);\n};\n\nexports.createContext = Script.createContext = function (context) {\n    var copy = new Context();\n    if(typeof context === 'object') {\n        forEach(Object_keys(context), function (key) {\n            copy[key] = context[key];\n        });\n    }\n    return copy;\n};\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/vm-browserify/index.js?");

/***/ }),

/***/ "../node_modules/webpack/buildin/global.js":
/*!*************************************************!*\
  !*** ../node_modules/webpack/buildin/global.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/webpack/buildin/global.js?");

/***/ }),

/***/ "../node_modules/webpack/buildin/module.js":
/*!*************************************************!*\
  !*** ../node_modules/webpack/buildin/module.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n//# sourceURL=webpack://MSXPlayUI/../node_modules/webpack/buildin/module.js?");

/***/ }),

/***/ "./audio-player.js":
/*!*************************!*\
  !*** ./audio-player.js ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return AudioPlayer; });\nclass AudioPlayer {\n  constructor(audioCtx, destination, renderer) {\n    this.audioCtx = audioCtx || new (window.AudioContext || window.webkitAudioContext)();\n    this.destination = destination || this.audioCtx.destination;\n    this.sampleRate = this.audioCtx.sampleRate;\n    this.gainNode = this.audioCtx.createGain();\n    this.gainNode.gain.value = 1.0;\n    this.masterVolumeNode = this.audioCtx.createGain();\n    this.masterVolumeNode.gain.value = 3.0;\n    // Note: Chrome and FireFox compress overflow in GainNode. Safari does not.\n    this.gainNode.connect(this.masterVolumeNode);\n    this.masterVolumeNode.connect(this.destination);\n    this.scriptNodeDestination = this.gainNode;\n    this.renderer = renderer;\n  }\n  getTotalTime() {\n    return Math.round((this.waveTotalSize / this.sampleRate) * 1000);\n  }\n  getPlayedTime() {\n    return Math.round((this.waveReadPos / this.sampleRate) * 1000);\n  }\n  getBufferedTime() {\n    return Math.round((this.waveWritePos / this.sampleRate) * 1000);\n  }\n  _changeState(newState) {\n    if (this._state != newState) {\n      this._state = newState;\n      // TODO issue stateChanged event;\n    }\n  }\n  getState() {\n    return this._state;\n  }\n  getMasterVolume() {\n    return this.masterVolumeNode.gain.value;\n  }\n  setMasterVolume(gain) {\n    this.masterVolumeNode.gain.value = gain;\n  }\n  getOutputGain() {\n    return this.gainNode.gain.value;\n  }\n  setOutputGain(gain) {\n    this.gainNode.gain.value = gain;\n  }\n  _recycle() {\n    if (this.scriptNode) {\n      if (this.dummyNode) {\n        this.dummyNode.disconnect();\n        this.dummyNode = null;\n      }\n      // Since Firefox 57 seems to call onaudioprocess after disconnect() if multiple\n      // ScriptNodes are instanceated, onaudioprocess property should be cleared before\n      // release the ScriptNode.\n      this.scriptNode.onaudioprocess = null;\n      this.scriptNode.disconnect();\n      this.scriptNode = null;\n    }\n    if (this.timerId) {\n      clearInterval(this.timerId);\n      this.timerId = null;\n    }\n    this.renderedTime = 0;\n    this.consumedTime = 0;\n    this.waveWritePos = 0;\n    this.waveReadPos = 0;\n    this._state = \"standby\";\n  }\n  setMaxPlayTime(time) {\n    this.maxPlayTime = time;\n    this.waveBuffer = new Float32Array(Math.round((this.sampleRate * time) / 1000));\n    this.waveTotalSize = this.waveBuffer.length;\n  }\n  _render(samples) {\n    var start = Date.now();\n    var waves = this.renderer(this.renderedTime, samples);\n    if (waves == null) {\n      this.waveTotalSize = this.waveWritePos;\n      return false;\n    }\n    for (var i = 0; i < samples; i++) {\n      this.waveBuffer[this.waveWritePos++] = waves[i] / 32768;\n    }\n    this.renderedTime = (this.waveWritePos / this.sampleRate) * 1000;\n    this.consumedTime += Date.now() - start;\n    this.renderSpeed = this.renderedTime / this.consumedTime;\n    return true;\n  }\n  onRender() {\n    var interval = Date.now() - this.lastOnRenderAt;\n    var samples = Math.round(((this.sampleRate * interval) / 1000) * Math.max(1.0, this.renderSpeed));\n    if (!this._render(samples)) {\n      if (this.timerId != null) {\n        clearInterval(this.timerId);\n        this.timerId = null;\n      }\n    }\n    this.lastOnRenderAt = Date.now();\n  }\n  _onAudioProcess(event) {\n    var i;\n    var samples = event.outputBuffer.length;\n    var outData = event.outputBuffer.getChannelData(0);\n    if (this._state == \"playing\") {\n      // Do not generate wave in this handler because if this handler consume longer time,\n      // the browser often stop to fire the `audioprocess` event. (may be a bug of the browser).\n      var bufferRemains = this.waveWritePos - this.waveReadPos;\n      if (this.waveWritePos < this.waveTotalSize) {\n        if (bufferRemains < this.sampleRate) {\n          // return;\n        }\n      }\n      for (i = 0; i < samples; i++) {\n        outData[i] = this.waveBuffer[this.waveReadPos];\n        if (this.waveReadPos < this.waveWritePos - 1) {\n          this.waveReadPos++;\n        }\n      }\n      if (this.waveReadPos == this.waveTotalSize - 1) {\n        this._changeState(\"finished\");\n      }\n    } else {\n      for (i = 0; i < samples; i++) {\n        outData[i] = 0;\n      }\n    }\n  }\n  play(maxPlayTime) {\n    this.setMaxPlayTime(maxPlayTime || this.maxPlayTime || 60 * 5 * 1000);\n    this._recycle();\n    this.scriptNode = this.audioCtx.createScriptProcessor(8192, 1, 1);\n    this.scriptNode.onaudioprocess = this._onAudioProcess.bind(this);\n    this.scriptNode.connect(this.scriptNodeDestination);\n    this.dummyNode = this.audioCtx.createOscillator();\n    this.dummyNode.frequency.value = 0;\n    this.dummyNode.start(0);\n    this.dummyNode.connect(this.scriptNode);\n    this.renderSpeed = 0.0;\n    this._render(this.sampleRate * 2); // pre-buffer 2.0s\n    this.lastOnRenderAt = Date.now();\n    this.timerId = setInterval(this.onRender.bind(this), 0);\n    this._changeState(\"playing\");\n  }\n  stop() {\n    this._recycle();\n  }\n  pause() {\n    if (this._state == \"playing\") {\n      this.scriptNode.disconnect();\n      this._changeState(\"paused\");\n    }\n  }\n  resume() {\n    if (this._state == \"paused\") {\n      this.scriptNode.connect(this.scriptNodeDestination);\n      this._changeState(\"playing\");\n    }\n  }\n  isPlaying() {\n    return this._state == \"playing\";\n  }\n  isPaused() {\n    return this._state == \"paused\";\n  }\n  seekTo(posInMs) {\n    var seekPos = Math.round((this.sampleRate * posInMs) / 1000);\n    if (seekPos < this.waveWritePos) {\n      this.waveReadPos = seekPos;\n    }\n  }\n  release() {\n    this._recycle();\n    this.audioCtx.close();\n    this.audioCtx = null;\n  }\n}\n\n\n//# sourceURL=webpack://MSXPlayUI/./audio-player.js?");

/***/ }),

/***/ "./entry.js":
/*!******************!*\
  !*** ./entry.js ***!
  \******************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _msxplay_ui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./msxplay-ui */ \"./msxplay-ui.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _msxplay_ui__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n\n\n\n//# sourceURL=webpack://MSXPlayUI/./entry.js?");

/***/ }),

/***/ "./kss2mp3.js":
/*!********************!*\
  !*** ./kss2mp3.js ***!
  \********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return KSS2MP3; });\n/* harmony import */ var libkss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! libkss-js */ \"../node_modules/libkss-js/src/index.js\");\n/* harmony import */ var libkss_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(libkss_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lamejs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lamejs */ \"../node_modules/lamejs/src/js/index.js\");\n/* harmony import */ var lamejs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lamejs__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nclass KSS2MP3 {\n  constructor(sampleRate, kbps) {\n    this.mp3encoder = new lamejs__WEBPACK_IMPORTED_MODULE_1___default.a.Mp3Encoder(1, sampleRate, kbps);\n    this.sampleRate = sampleRate;\n    this.bitRate = kbps;\n    this.kssplay = null;\n    this.mp3data = [];\n  }\n\n  release() {\n    if (this.kssplay != null) {\n      this.kssplay.release();\n      this.kssplay = null;\n    }\n  }\n\n  /**\n   * @typedef {Object} EncodeOptions\n   * @prop {number} [gain=1.0]\n   * @prop {number} [silentLimit=3000]\n   * @prop {number} [loop=2]\n   * @prop {number} [playTime=600000]\n   * @prop {number} [fadeTime=3000]\n   * @prop {number} [cpuSpeed=0]\n   * @prop {Object} [rcf]\n   * @prop {number} [rcf.registor=0]\n   * @prop {number} [rcf.capacitor=0]\n   * @prop {Object} [quality]\n   * @prop {Object} [quality.psg=1]\n   * @prop {Object} [quality.scc=0]\n   * @prop {Object} [quality.opll=1]\n   * @prop {Object} [quality.opl=1]\n   */\n\n  /**\n   * @param {EncodeOptions} [opts]\n   */\n  encode(kss, song, callback, opts) {\n    opts = opts || {};\n    var assign = __webpack_require__(/*! object-assign */ \"../node_modules/object-assign/index.js\");\n    var rcf = assign({ registor: 0, capacitor: 0 }, opts.rcf);\n    var quality = assign({ psg: 1, scc: 0, opll: 1, opl: 1 }, opts.quality);\n    this.opts = assign(\n      {\n        gain: 1.0,\n        silentLimit: 3000,\n        loop: 2,\n        playTime: 600 * 1000,\n        fadeTime: 3000,\n        cpuSpeed: 0\n      },\n      opts\n    );\n\n    if (this.kssplay) {\n      this.kssplay.release();\n      this.kssplay = null;\n    }\n    this.kssplay = new libkss_js__WEBPACK_IMPORTED_MODULE_0__[\"KSSPlay\"](this.sampleRate);\n    this.kssplay.setDeviceQuality(quality);\n    this.kssplay.setSilentLimit(this.opts.slientLimit);\n    this.kssplay.setRCF(rcf.registor, rcf.capacitor);\n    this.kssplay.setData(kss);\n    this.kssplay.reset(song, this.opts.cpuSpeed);\n    this.callbackFunc = callback || function() {};\n    this.elapsed = 0;\n    this.maxDuration = this.opts.playTime - this.opts.fadeTime;\n    this.mp3data = [];\n    this.processEncode();\n  }\n\n  addDataBlock(block) {\n    if (0 < block.length) {\n      this.mp3data.push(block);\n    }\n  }\n\n  processEncode() {\n    let packetSize = this.sampleRate;\n    let samples = this.kssplay.calc(packetSize);\n    let gain = this.opts.gain * 2.0;\n    if (gain !== 1.0) {\n      for (var i = 0; i < samples.length; i++) {\n        samples[i] = Math.max(-32768, Math.min(samples[i] * gain, 32767));\n      }\n    }\n    this.addDataBlock(this.mp3encoder.encodeBuffer(samples));\n    this.elapsed += (1000 * packetSize) / this.sampleRate;\n    if (this.kssplay.getStopFlag() || this.kssplay.getFadeFlag() === 2) {\n      this.addDataBlock(this.mp3encoder.flush());\n      this.callbackFunc(this.elapsed, this.mp3data, true);\n      return;\n    }\n    if (!this.callbackFunc(this.elapsed, this.mp3data, false)) {\n      // abort the encode process\n      this.addDataBlock(this.mp3encoder.flush());\n      return;\n    }\n    if (this.kssplay.getFadeFlag() === 0) {\n      if (this.maxDuration - this.elapsed < this.opts.fadeTime || this.opts.loop <= this.kssplay.getLoopCount()) {\n        this.kssplay.fadeStart(this.opts.fadeTime);\n      }\n    }\n    setTimeout(this.processEncode.bind(this), 0);\n  }\n}\n\n\n//# sourceURL=webpack://MSXPlayUI/./kss2mp3.js?");

/***/ }),

/***/ "./kss2wav.js":
/*!********************!*\
  !*** ./kss2wav.js ***!
  \********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return KSS2WAV; });\n/* harmony import */ var libkss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! libkss-js */ \"../node_modules/libkss-js/src/index.js\");\n/* harmony import */ var libkss_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(libkss_js__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction rawToWav(rate, data) {\n  const nch = 1;\n  const bit = 16;\n  const dataSize = 44 + data.length * 2;\n  const blockSize = (nch * bit) >> 3;\n  const buf = new ArrayBuffer(dataSize);\n  const view = new DataView(buf, 0);\n  view.setUint32(0, 0x52494646); // 'RIFF'\n  view.setUint32(4, dataSize - 8, true); // size of RIFF  chunk\n  view.setUint32(8, 0x57415645); // 'WAVE'\n  view.setUint32(12, 0x666d7420); // 'fmt '\n  view.setUint32(16, 16, true); // size of format chunk (16)\n  view.setUint16(20, 1, true); // WAVE_FORMAT_PCM\n  view.setUint16(22, nch, true); // channels=1\n  view.setUint32(24, rate, true); // samples per sec\n  view.setUint32(28, 4 * rate, true); // byte per sec\n  view.setUint16(32, blockSize, true); // block size\n  view.setUint16(34, nch * bit, true); // bit per sample\n  view.setUint32(36, 0x64617461); // 'data'\n  view.setUint32(40, blockSize * data.length); // 'data'\n\n  const wavbuf = new DataView(buf, 44);\n  for (let i = 0; i < data.length; i++) {\n    wavbuf.setInt16(i * 2, data[i], true);\n  }\n  return buf;\n}\n\nclass KSS2WAV {\n  constructor(sampleRate) {\n    this.sampleRate = sampleRate;\n    this.kssplay = null;\n    this.wavdata = [];\n  }\n\n  release() {\n    if (this.kssplay != null) {\n      this.kssplay.release();\n      this.kssplay = null;\n    }\n  }\n\n  /**\n   * @typedef {Object} EncodeOptions\n   * @prop {number} [gain=1.0]\n   * @prop {number} [silentLimit=3000]\n   * @prop {number} [loop=2]\n   * @prop {number} [playTime=600000]\n   * @prop {number} [fadeTime=3000]\n   * @prop {number} [cpuSpeed=0]\n   * @prop {Object} [rcf]\n   * @prop {number} [rcf.registor=0]\n   * @prop {number} [rcf.capacitor=0]\n   * @prop {Object} [quality]\n   * @prop {Object} [quality.psg=1]\n   * @prop {Object} [quality.scc=0]\n   * @prop {Object} [quality.opll=1]\n   * @prop {Object} [quality.opl=1]\n   */\n\n  /**\n   * @param {EncodeOptions} [opts]\n   */\n  encode(kss, song, callback, opts) {\n    opts = opts || {};\n    var assign = __webpack_require__(/*! object-assign */ \"../node_modules/object-assign/index.js\");\n    var rcf = assign({ registor: 0, capacitor: 0 }, opts.rcf);\n    var quality = assign({ psg: 1, scc: 0, opll: 1, opl: 1 }, opts.quality);\n    this.opts = assign(\n      {\n        gain: 1.0,\n        silentLimit: 3000,\n        loop: 2,\n        playTime: 600 * 1000,\n        fadeTime: 3000,\n        cpuSpeed: 0\n      },\n      opts\n    );\n\n    if (this.kssplay) {\n      this.kssplay.release();\n      this.kssplay = null;\n    }\n    this.kssplay = new libkss_js__WEBPACK_IMPORTED_MODULE_0__[\"KSSPlay\"](this.sampleRate);\n    this.kssplay.setDeviceQuality(quality);\n    this.kssplay.setSilentLimit(this.opts.slientLimit);\n    this.kssplay.setRCF(rcf.registor, rcf.capacitor);\n    this.kssplay.setData(kss);\n    this.kssplay.reset(song, this.opts.cpuSpeed);\n    this.callbackFunc = callback || function() {};\n    this.elapsed = 0;\n    this.maxDuration = this.opts.playTime - this.opts.fadeTime;\n    this.wavdata = [];\n    this.processEncode();\n  }\n\n  addDataBlock(block) {\n    for (let i = 0; i < block.length; i++) {\n      this.wavdata.push(block[i]);\n    }\n  }\n\n  processEncode() {\n    let packetSize = this.sampleRate;\n    let samples = this.kssplay.calc(packetSize);\n    let gain = this.opts.gain * 2.0;\n    if (gain !== 1.0) {\n      for (var i = 0; i < samples.length; i++) {\n        samples[i] = Math.max(-32768, Math.min(samples[i] * gain, 32767));\n      }\n    }\n    this.addDataBlock(samples);\n    this.elapsed += (1000 * packetSize) / this.sampleRate;\n    if (this.kssplay.getStopFlag() || this.kssplay.getFadeFlag() === 2) {\n      this.callbackFunc(this.elapsed, rawToWav(this.sampleRate, this.wavdata), true);\n      return;\n    }\n    if (!this.callbackFunc(this.elapsed, null, false)) {\n      // abort the encode process\n      return;\n    }\n    if (this.kssplay.getFadeFlag() === 0) {\n      if (this.maxDuration - this.elapsed < this.opts.fadeTime || this.opts.loop <= this.kssplay.getLoopCount()) {\n        this.kssplay.fadeStart(this.opts.fadeTime);\n      }\n    }\n    setTimeout(this.processEncode.bind(this), 0);\n  }\n}\n\n\n//# sourceURL=webpack://MSXPlayUI/./kss2wav.js?");

/***/ }),

/***/ "./msxplay-ui.js":
/*!***********************!*\
  !*** ./msxplay-ui.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var libkss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! libkss-js */ \"../node_modules/libkss-js/src/index.js\");\n/* harmony import */ var libkss_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(libkss_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mgsc_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mgsc-js */ \"../node_modules/mgsc-js/src/entry.js\");\n/* harmony import */ var mgsc_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(mgsc_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _msxplay__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./msxplay */ \"./msxplay.js\");\n/* harmony import */ var mgsrc_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! mgsrc-js */ \"../node_modules/mgsrc-js/dist/index.js\");\n/* harmony import */ var mgsrc_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(mgsrc_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var encoding_japanese__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! encoding-japanese */ \"../node_modules/encoding-japanese/src/index.js\");\n/* harmony import */ var encoding_japanese__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(encoding_japanese__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n\nfunction zeroPadding(num) {\n  return (\"00\" + num).slice(-2);\n}\n\nfunction timeToString(timeInMs) {\n  var timeInSec = Math.floor(timeInMs / 1000);\n  return Math.floor(timeInSec / 60) + \":\" + zeroPadding(timeInSec % 60);\n}\n\nfunction parseTime(str) {\n  if (!str) return null;\n\n  var m = str.match(/^(.*)ms$/);\n  if (m) {\n    return parseFloat(m[1]);\n  }\n  m = str.match(/^(.*)s$/);\n  if (m) {\n    return parseFloat(m[1]) * 1000;\n  }\n\n  return null;\n}\n\nclass MSXPlayUI {\n  constructor() {\n    this.msxplay = new _msxplay__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n    this.playerElements = [];\n    setInterval(this.updateDisplay.bind(this), 100);\n  }\n\n  audio_encode(type, data, song, callback, opts) {\n    this.msxplay.audio_encode(type, data, song, callback, opts);\n  }\n\n  decode_text(data) {\n    const encode = encoding_japanese__WEBPACK_IMPORTED_MODULE_4___default.a.detect(data);\n    return encoding_japanese__WEBPACK_IMPORTED_MODULE_4___default.a.convert(data, { to: \"UNICODE\", from: encode, type: \"string\" });\n  }\n\n  compile(mml) {\n    return mgsc_js__WEBPACK_IMPORTED_MODULE_1___default.a.compile(mml);\n  }\n\n  decompile(mgs) {\n    return mgsrc_js__WEBPACK_IMPORTED_MODULE_3___default()(mgs);\n  }\n\n  install(rootElement) {\n    var players = rootElement.querySelectorAll(\".msxplay\");\n    for (var i = 0; i < players.length; i++) {\n      this.attach(players[i]);\n    }\n  }\n\n  async attach(playerElement) {\n    await this.initPlayer(playerElement);\n    this.playerElements.push(playerElement);\n    playerElement.addEventListener(\"click\", this.onClickPlayer.bind(this), true);\n  }\n\n  detach(playerElement) {\n    var i = this.playerElements.indexOf(playerElement);\n    if (0 <= i) {\n      this.playerElements.splice(i, 1);\n    }\n  }\n\n  createPlayerFromUrl(url) {\n    var playerElement = document.createElement(\"div\");\n    playerElement.classList.add(\"msxplay\");\n    playerElement.dataset.gain = \"1.0\";\n    playerElement.dataset.url = url;\n    return playerElement;\n  }\n\n  createPlayer(data, url) {\n    var m = (url || \"\").match(/([^/]+)$/);\n    var name = m ? m[1] : null;\n    var kss = libkss_js__WEBPACK_IMPORTED_MODULE_0__[\"KSS\"].createUniqueInstance(new Uint8Array(data), name);\n    var playerElement = document.createElement(\"div\");\n    playerElement.classList.add(\"msxplay\");\n    playerElement.dataset.gain = \"1.0\";\n    playerElement.dataset.url = url;\n    playerElement.dataset.hash = kss.hash;\n    this.attach(playerElement);\n    return playerElement;\n  }\n\n  onClickPlayer(event) {\n    var playerElement = event.target;\n    while (playerElement) {\n      if (playerElement.classList.contains(\"msxplay\")) break;\n      playerElement = playerElement.parentNode;\n    }\n    if (!playerElement) {\n      return;\n    }\n    if (event.target == playerElement.querySelector(\".leftbox\")) {\n      if (playerElement == this.currentPlayerElement) {\n        if (this.msxplay.getState() == \"finished\") {\n          this.play(playerElement);\n        } else if (this.msxplay.isPaused()) {\n          this.msxplay.resume();\n        } else {\n          this.msxplay.pause();\n        }\n      } else {\n        this.play(playerElement);\n      }\n    } else if (event.target.classList.contains(\"track\")) {\n      if (playerElement == this.currentPlayerElement) {\n        var pos = Math.floor((this.msxplay.getTotalTime() * event.offsetX) / event.target.offsetWidth);\n        this.msxplay.seekTo(pos);\n      }\n    } else if (event.target.classList.contains(\"next\")) {\n      var song = (parseInt(playerElement.dataset.song) + (event.shiftKey ? 10 : 1)) % 256;\n      playerElement.dataset.song = song;\n      playerElement.querySelector(\".number\").textContent = zeroPadding(song.toString(16));\n      playerElement.dataset.duration = null;\n      if (playerElement == this.currentPlayerElement) {\n        this.play(playerElement);\n      }\n    } else if (event.target.classList.contains(\"prev\")) {\n      var song = (parseInt(playerElement.dataset.song) + (event.shiftKey ? 246 : 255)) % 256;\n      playerElement.dataset.song = song;\n      playerElement.querySelector(\".number\").textContent = zeroPadding(song.toString(16));\n      playerElement.dataset.duration = null;\n      if (playerElement == this.currentPlayerElement) {\n        this.play(playerElement);\n      }\n    }\n  }\n\n  setDataToPlayer(playerElement, data, name) {\n    var kss = libkss_js__WEBPACK_IMPORTED_MODULE_0__[\"KSS\"].createUniqueInstance(data, name);\n    setKSSToPlayerElement(playerElement, kss, name);\n  }\n\n  async initPlayer(playerElement) {\n    playerElement.innerHTML = \"\";\n    playerElement.insertAdjacentHTML(\n      \"afterbegin\",\n      '<div class=\"leftbox\"></div>' +\n        '<div class=\"rightbox\">' +\n        '    <div class=\"title\"></div>' +\n        '    <div class=\"spinner\">' +\n        '       <div class=\"button next\"></div>' +\n        '       <div class=\"number\"></div>' +\n        '       <div class=\"button prev\"></div>' +\n        \"    </div>\" +\n        '    <div class=\"slider\">' +\n        '\t    <div class=\"playtime\">0:00</div>' +\n        '       <div class=\"duration\">?:??</div>' +\n        '\t\t<div class=\"track\">' +\n        '\t\t\t<div class=\"buffered\"></div>' +\n        ' \t\t    <div class=\"progress\"></div>' +\n        \"\t\t</div>\" +\n        \"\t </div>\" +\n        \"</div>\" +\n        '<div class=\"footer\"></div>'\n    );\n\n    if (playerElement.dataset.url) {\n      playerElement.querySelector(\".title\").textContent = \"Loading...\";\n      await this.loadKSS(playerElement);\n    }\n    if (playerElement.dataset.footnote) {\n      playerElement.querySelector(\".footer\").textContent = playerElement.dataset.footnote;\n    }\n    if (!playerElement.dataset.song) {\n      playerElement.dataset.song = 0;\n    }\n    playerElement.querySelector(\".number\").textContent = zeroPadding(parseInt(playerElement.dataset.song).toString(16));\n  }\n\n  async loadKSS(playerElement) {\n    var hash = playerElement.dataset.hash;\n    if (hash) {\n      var kss = libkss_js__WEBPACK_IMPORTED_MODULE_0__[\"KSS\"].hashMap[hash];\n      setKSSToPlayerElement(playerElement, kss, playerElement.dataset.url);\n    } else {\n      var url = playerElement.dataset.url;\n      var kss = await new Promise((resolve, reject) => {\n        libkss_js__WEBPACK_IMPORTED_MODULE_0__[\"KSS\"].loadFromUrl(url, kss => {\n          setKSSToPlayerElement(playerElement, kss, url);\n          resolve(kss);\n        });\n      });\n    }\n  }\n\n  stop() {\n    this.msxplay.stop();\n    if (this.currentPlayerElement) {\n      this.currentPlayerElement.classList.remove(\"active\");\n      this.currentPlayerElement = null;\n    }\n    for (var i = 0; i < this.playerElements.length; i++) {\n      var playerElement = this.playerElements[i];\n      setPlayerState(playerElement, \"standby\");\n      playerElement.querySelector(\".buffered\").style.width = 0;\n      playerElement.querySelector(\".progress\").style.width = 0;\n      playerElement.querySelector(\".playtime\").textContent = \"0:00\";\n      var duration = parseTime(playerElement.dataset.duration);\n      if (duration) {\n        playerElement.querySelector(\".duration\").textContent = timeToString(duration);\n      } else {\n        playerElement.querySelector(\".duration\").textContent = \"?:??\";\n      }\n    }\n  }\n\n  play(playerElement) {\n    this.stop();\n    var hash = playerElement.dataset.hash;\n    var song = parseInt(playerElement.dataset.song);\n    var duration = parseTime(playerElement.dataset.duration);\n    var fade = parseFloat(playerElement.dataset.fade);\n    var gain = parseFloat(playerElement.dataset.gain);\n    var kss = libkss_js__WEBPACK_IMPORTED_MODULE_0__[\"KSS\"].hashMap[hash];\n    if (kss) {\n      this.msxplay.setData(kss, song, {\n        duration: duration,\n        fade: fade,\n        gain: gain\n      });\n      this.msxplay.play();\n      this.currentPlayerElement = playerElement;\n      playerElement.classList.add(\"active\");\n      if (kss.hasMultiSongs) {\n        playerElement.classList.add(\"multi-songs\");\n      } else {\n        playerElement.classList.remove(\"multi-songs\");\n      }\n    }\n  }\n\n  updateDisplay() {\n    if (this.currentPlayerElement) {\n      this.updatePlayerStatus(this.currentPlayerElement);\n    }\n  }\n\n  updatePlayerStatus(playerElement) {\n    var played = this.msxplay.getPlayedTime();\n    var buffered = this.msxplay.getBufferedTime();\n    var total = this.msxplay.getTotalTime();\n    var renderSpeed = this.msxplay.getRenderSpeed().toFixed(1);\n    playerElement.querySelector(\".playtime\").textContent = timeToString(played);\n    if (buffered < total) {\n      playerElement.querySelector(\".playtime\").textContent += \" buffering... (x\" + renderSpeed + \") \";\n    } else {\n      playerElement.dataset.duration = total + \"ms\";\n    }\n    playerElement.querySelector(\".duration\").textContent = timeToString(total);\n    playerElement.querySelector(\".progress\").style.width = Math.round((100 * played) / total) + \"%\";\n    playerElement.querySelector(\".buffered\").style.width = Math.round((100 * buffered) / total) + \"%\";\n    setPlayerState(playerElement, this.msxplay.getState());\n  }\n\n  releaseKSS(kss) {\n    if (typeof kss == \"string\") {\n      kss = libkss_js__WEBPACK_IMPORTED_MODULE_0__[\"KSS\"].hashMap[kss];\n    }\n    if (kss instanceof libkss_js__WEBPACK_IMPORTED_MODULE_0__[\"KSS\"]) {\n      kss.release();\n    }\n  }\n}\n\nfunction setKSSToPlayerElement(playerElement, kss, url) {\n  if (kss instanceof libkss_js__WEBPACK_IMPORTED_MODULE_0__[\"KSS\"]) {\n    var title = playerElement.dataset.title || kss.getTitle();\n    if (/^[\\u0000-\\u0020]*$/.test(title)) {\n      title = url.replace(/^.*[/\\\\]/, \"\");\n    }\n    playerElement.querySelector(\".title\").textContent = title;\n    playerElement.dataset.hash = kss.hash;\n  } else {\n    // Error\n    playerElement.querySelector(\".title\").textContent = kss.toString();\n    playerElement.dataset.hash = null;\n  }\n}\n\nfunction setPlayerState(playerElement, state) {\n  playerElement.classList.remove(\"playing\");\n  playerElement.classList.remove(\"paused\");\n  playerElement.classList.remove(\"finished\");\n  playerElement.classList.remove(\"standby\");\n  playerElement.classList.add(state);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (new MSXPlayUI());\n\n\n//# sourceURL=webpack://MSXPlayUI/./msxplay-ui.js?");

/***/ }),

/***/ "./msxplay.js":
/*!********************!*\
  !*** ./msxplay.js ***!
  \********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MSXPlay; });\n/* harmony import */ var libkss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! libkss-js */ \"../node_modules/libkss-js/src/index.js\");\n/* harmony import */ var libkss_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(libkss_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _kss2mp3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kss2mp3 */ \"./kss2mp3.js\");\n/* harmony import */ var _kss2wav__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kss2wav */ \"./kss2wav.js\");\n/* harmony import */ var _audio_player__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./audio-player */ \"./audio-player.js\");\n\n\n\n\n\nclass MSXPlay {\n  constructor(audioCtx, destination) {\n    this.audioPlayer = new _audio_player__WEBPACK_IMPORTED_MODULE_3__[\"default\"](audioCtx, destination, this._generateWave.bind(this));\n    this.sampleRate = this.audioPlayer.sampleRate;\n    this.kssplay = null;\n    this.kss = null;\n    this.maxCalcSamples = this.sampleRate;\n  }\n  audio_encode(type, data, song, callback, opts) {\n    opts = opts || {};\n\n    if (this.kss2mp3 != null) {\n      this.kss2mp3.release();\n      this.kss2mp3 = null;\n    }\n    if (this.kss2wav != null) {\n      this.kss2wav.release();\n      this.kss2wav = null;\n    }\n\n    if (this.tempkss != null) {\n      this.tempkss.release();\n    }\n    this.tempkss = new libkss_js__WEBPACK_IMPORTED_MODULE_0__[\"KSS\"](data);\n\n    if (type === \"mp3\") {\n      this.kss2mp3 = new _kss2mp3__WEBPACK_IMPORTED_MODULE_1__[\"default\"](opts.sampleRate || 44100, opts.bitRate || 192);\n      this.kss2mp3.encode(this.tempkss, song, callback, opts);\n    } else {\n      this.kss2wav = new _kss2wav__WEBPACK_IMPORTED_MODULE_2__[\"default\"](opts.sampleRate || 44100);\n      this.kss2wav.encode(this.tempkss, song, callback, opts);\n    }\n  }\n  _generateWave(currentTime, samples) {\n    if (this.kssplay.getStopFlag() || this.kssplay.getFadeFlag() == 2) {\n      return null;\n    }\n    if (this.kssplay.getFadeFlag() == 0) {\n      var loop = this.kssplay.getLoopCount();\n      var remains = this.maxPlayTime - currentTime;\n      if (this.loopCount <= loop || (this.fadeTime && remains <= this.fadeTime)) {\n        this.kssplay.fadeStart(this.fadeTime);\n      }\n    }\n    return this.kssplay.calc(samples);\n  }\n  getState() {\n    return this.audioPlayer.getState();\n  }\n  getMasterVolume() {\n    return this.audioPlayer.getMasterVolume();\n  }\n  setMasterVolume(gain) {\n    this.audioPlayer.setMasterVolume(gain);\n  }\n  getOutputGain() {\n    return this.audioPlayer.getOutputGain();\n  }\n  setOutputGain(gain) {\n    return this.audioPlayer.setOutputGain(gain);\n  }\n  getTitle() {\n    return this.kss ? this.kss.getTitle() : \"\";\n  }\n  setData(kss, song, options) {\n    options = options || {};\n    this.kss = kss;\n    this.song = song;\n    this.loopCount = options.loopCount || 2;\n    this.fadeTime = options.fadeTime || 5000;\n    if (this.kssplay != null) {\n      this.kssplay.release();\n      this.kssplay = null;\n    }\n    this.kssplay = new libkss_js__WEBPACK_IMPORTED_MODULE_0__[\"KSSPlay\"](this.sampleRate);\n    this.kssplay.setRCF(0, 0);\n    this.kssplay.setSilentLimit(5000);\n    this.kssplay.setDeviceQuality({ psg: 1, scc: 0, opll: 1, opl: 1 });\n    this.kssplay.setData(kss);\n    this.kssplay.reset(song, 0);\n    this.maxPlayTime = Math.min(20 * 60 * 1000, options.duration || 5 * 60 * 1000);\n    if (options.gain != null) {\n      this.audioPlayer.setOutputGain(Number.isNaN(options.gain) ? 1.0 : options.gain);\n    }\n  }\n  play() {\n    this.audioPlayer.play(this.maxPlayTime);\n  }\n  stop() {\n    this.audioPlayer.stop();\n  }\n  pause() {\n    this.audioPlayer.pause();\n  }\n  resume() {\n    this.audioPlayer.resume();\n  }\n  isPlaying() {\n    return this.audioPlayer.isPlaying();\n  }\n  isPaused() {\n    return this.audioPlayer.isPaused();\n  }\n  seekTo(posInMs) {\n    this.audioPlayer.seekTo(posInMs);\n  }\n  getTotalTime() {\n    return this.audioPlayer.getTotalTime();\n  }\n  getPlayedTime() {\n    return this.audioPlayer.getPlayedTime();\n  }\n  getBufferedTime() {\n    return this.audioPlayer.getBufferedTime();\n  }\n  getRenderSpeed() {\n    return this.audioPlayer.renderSpeed;\n  }\n  release() {\n    if (this.kss2mp3 != null) {\n      this.kss2mp3.release();\n      this.kss2mp3 = null;\n    }\n    if (this.tempkss != null) {\n      this.tempkss.release();\n      this.tempkss = null;\n    }\n    if (this.kssplay != null) {\n      this.kssplay.release();\n      this.kssplay = null;\n      this.audioPlayer.release();\n      this.audioPlayer = null;\n    }\n  }\n}\n\n\n//# sourceURL=webpack://MSXPlayUI/./msxplay.js?");

/***/ }),

/***/ 0:
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack://MSXPlayUI/util_(ignored)?");

/***/ }),

/***/ 1:
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack://MSXPlayUI/util_(ignored)?");

/***/ }),

/***/ 2:
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack://MSXPlayUI/buffer_(ignored)?");

/***/ }),

/***/ 3:
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack://MSXPlayUI/crypto_(ignored)?");

/***/ })

/******/ })["default"];